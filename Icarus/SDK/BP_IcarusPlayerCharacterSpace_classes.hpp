#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x510 (0x1090 - 0xB80)
// BlueprintGeneratedClass BP_IcarusPlayerCharacterSpace.BP_IcarusPlayerCharacterSpace_C
class ABP_IcarusPlayerCharacterSpace_C : public AIcarusPlayerCharacterSpace
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB80(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_ItemManipulationComponent_C*       BP_ItemManipulationComponent;                      // 0xB88(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*           PhysicsConstraintR;                                // 0xB90(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*           PhysicsConstraintL;                                // 0xB98(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                 HighlightablePostProcess;                          // 0xBA0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                      PlayerNameWidget;                                  // 0xBA8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                      Camera;                                            // 0xBB0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*              ParticleSystem;                                    // 0xBB8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicalAnimationComponent*           PhysicalAnimation;                                 // 0xBC0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                         DebuggingMovement;                                 // 0xBC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_697A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationSpeed;                                     // 0xBCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         SprintPressed;                                     // 0xBD0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_697B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ReplicatedLocation;                                // 0xBD4(0xC)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               ReplicatedVelocity;                                // 0xBE0(0xC)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_697D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   Current_Hit_Component;                             // 0xBF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         NearSurface;                                       // 0xBF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_697E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          InteractionTimer;                                  // 0xC00(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FItemData                             RightHandItem_Data;                                // 0xC08(0x1F0)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class AIcarusItem*                           FocusedItem;                                       // 0xDF8(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UThreeRD_CHA_RIG_Space_AnimBP_C*       AnimInstanceBP;                                    // 0xE00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ControllerRoll;                                    // 0xE08(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        RollAccelerationWhenGripped;                       // 0xE0C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        RollAccelerationWhenFloating;                      // 0xE10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        RollDecelerationWhenFloating;                      // 0xE14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        TouchCheckCount;                                   // 0xE18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TouchTurnRatio;                                    // 0xE1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TouchForwardConeRatio;                             // 0xE20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TouchTraceLength;                                  // 0xE24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        SquareArmRange;                                    // 0xE28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        GripMagnetismStrength;                             // 0xE2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ThrowTime;                                         // 0xE30(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                        ThrowSpeed;                                        // 0xE34(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        GrippingMoveSpeed;                                 // 0xE38(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        GrippingSprintSpeed;                               // 0xE3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           GripOrientationStrengthCurve;                      // 0xE40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         LookLocked;                                        // 0xE48(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_6984[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Acceleration;                                      // 0xE4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        FloatingAcceleration;                              // 0xE50(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Deceleration;                                      // 0xE54(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        FloatingDeceleration;                              // 0xE58(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        FloatingSpeed;                                     // 0xE5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Use6DOFMovement;                                   // 0xE60(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               OffsetVelocity;                                    // 0xE64(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Grounded;                                          // 0xE70(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_698A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroundedMoveSpeed;                                 // 0xE74(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        GroundedSprintSpeed;                               // 0xE78(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               GroundUpAxis;                                      // 0xE7C(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        GroundUpStrength;                                  // 0xE88(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                              TargetRotation;                                    // 0xE8C(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         DebuggingPrediction;                               // 0xE98(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_698F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FItemData                             InventoryItem;                                     // 0xEA0(0x1F0)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

	static class UClass* StaticClass();
	static class ABP_IcarusPlayerCharacterSpace_C* GetDefaultObj();

	class UCameraComponent* GetFirstPersonCamera();
	bool IsHabCharacter();
	class USkeletalMeshComponent* GetFirstPersonMesh();
	void UpdateCharacterVisuals(class USkeletalMesh* Temp_object_Variable, int32 Temp_int_Array_Index_Variable, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class USkeletalMesh* Temp_object_Variable_1, bool CallFunc_HasAuthority_ReturnValue, class AIcarusPlayerState* CallFunc_GetIcarusPlayerState_ReturnValue, const struct FOnlineProfileCharacter& CallFunc_GetActiveCharacter_ReturnValue, const struct FInventoryInfo& CallFunc_GetInventoryData_OutData, bool CallFunc_GetInventoryData_ReturnValue, class FName CallFunc_HashToName_ReturnValue, const struct FInventorySlotOverride& CallFunc_Array_Get_Item, const struct FCharacterCreationDataRowHandle& CallFunc_MakeCharacterCreationData_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_HashToName_ReturnValue_1, bool Temp_bool_Variable, const struct FCharacterCreationDataRowHandle& CallFunc_MakeCharacterCreationData_ReturnValue_1, TArray<struct FCharacterCreationDataRowHandle>& K2Node_MakeArray_Array, class USkeletalMesh* K2Node_Select_Default, const struct FCharacterCreationDataRowHandle& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, const struct FCharacterCreationData& CallFunc_GetCharacterCreationDataStruct_CharacterCreationData, enum class EValid CallFunc_GetCharacterCreationDataStruct_Paths, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FItemData& CallFunc_GetItemTemplateStruct_ItemTemplate, enum class EValid CallFunc_GetItemTemplateStruct_Paths, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_SetItem_ReturnValue, bool CallFunc_ItemMatchesQuery_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	bool OnUnFocusItem(int32 ItemLocation, enum class EValid CallFunc_GetTrait_Paths, class UFocusableComponent* CallFunc_GetTrait_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_OnUnFocusItem_ReturnValue);
	bool OnFocusItem(struct FItemData& InventoryItem, bool CallFunc_OnFocusItem_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UInventory* CallFunc_GetInventory_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, enum class EValid CallFunc_GetTrait_Paths, class UFocusableComponent* CallFunc_GetTrait_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool K2Node_SwitchEnum_CmpSuccess, const struct FIcarusItemSpawnParameters& K2Node_MakeStruct_IcarusItemSpawnParameters, const struct FTransform& CallFunc_GetTransform_ReturnValue, class AIcarusItem* CallFunc_SpawnItemActor_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, enum class EDataValid CallFunc_ItemDataValid_Paths, const struct FFocusableData& CallFunc_GetFocusableData_FocusableData, enum class EDataValid CallFunc_GetFocusableData_Paths, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2);
	void UpdateMeshVisibility(bool IsThirdPerson, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, TArray<struct FArmourComponentData>& CallFunc_Map_Values_Values, const struct FArmourComponentData& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsSeated_ReturnValue, class USkeletalMeshComponent* CallFunc_Array_Get_Item_1, bool CallFunc_Array_IsValidIndex_ReturnValue, class USkeletalMeshComponent* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FArmourRowHandle& CallFunc_Array_Get_Item_3, bool CallFunc_Array_IsValidIndex_ReturnValue_1, const struct FArmourData& CallFunc_GetArmourStruct_Armour, enum class EValid CallFunc_GetArmourStruct_Paths, bool K2Node_SwitchEnum_CmpSuccess, class AController* CallFunc_GetController_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_IsValid_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class AIcarusPlayerController* CallFunc_GetIcarusPlayerController_ReturnValue, class AIcarusPlayerController* CallFunc_GetIcarusPlayerController_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_GetIsThirdPerson_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsValid_ReturnValue_3);
	void OnEquipmentUpdated();
	struct FHabMovementStateStruct MakeMovementStateFromCurrentData(float CallFunc_GetGameTimeInSeconds_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsTouchingSurface_ReturnValue, const struct FVector& CallFunc_GetPhysicsLinearVelocity_ReturnValue, const struct FVector& CallFunc_GetLastInputVector_ReturnValue, const struct FHabMovementStateStruct& K2Node_MakeStruct_HabMovementStateStruct);
	void PredictMovementForFrames(int32 FramesToPredict, const struct FHabMovementStateStruct& InitialState, TArray<struct FHabMovementStateStruct>* OutMovementStateArray, TArray<struct FHabHandStateStruct>* OutLeftHandArray, TArray<struct FHabHandStateStruct>* OutRightHandArray, const TArray<struct FHabHandStateStruct>& RightHandArray, const TArray<struct FHabHandStateStruct>& LeftHandArray, const struct FHabHandStateStruct& CachedRight, const struct FHabHandStateStruct& CachedLeft, const struct FHabMovementStateStruct& CachedMovementState, const TArray<struct FHabMovementStateStruct>& MovementStateArray, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue_1);
	bool CheckIfTouchingSurface(struct FHabHandStateStruct& LeftHandState, struct FHabHandStateStruct& RightHandState, float Use6DOFMovement, uint8 CallFunc_MakeLiteralByte_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, enum class ESpaceHandGripMode CallFunc_GetBestHandMode_HandMode, bool CallFunc_GetBestHandMode_Reaching, uint8 CallFunc_MakeLiteralByte_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Greater_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue);
	void MoveCharacterWithPhysics(bool IgnoreLocalUp, bool TouchingSurface, const struct FVector& PreviousVelocity, const struct FVector& ProjectedVector, const struct FVector& DeltaVelocity, const struct FVector& TargetVelocity, const struct FVector& ControlAcceleration, const struct FVector& CurrentVelocity, bool CallFunc_IsConstraining_ReturnValue, bool CallFunc_IsConstraining_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsAnyRotationInput_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsAnyMovementInput_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_GetMass_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, const struct FHabMovementStateStruct& CallFunc_MakeMovementStateFromCurrentData_ReturnValue, const struct FVector& CallFunc_CalculatePhysics_OutDeltaVelocity, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	void PredictMovementState(const struct FHabMovementStateStruct& LastMovementState, const struct FHabHandStateStruct& LastLeftHand, const struct FHabHandStateStruct& LastRightHand, struct FHabMovementStateStruct* NewMovementState, struct FHabHandStateStruct* NewLeftHand, struct FHabHandStateStruct* NewRightHand, float TimeRatio, const struct FVector& NewLocation, const struct FVector& NewVelocity, const struct FHabHandStateStruct& RightHand, const struct FHabHandStateStruct& LeftHand, const struct FHabMovementStateStruct& MovementState, const struct FTransform& ActorTransform, bool CallFunc_IsValid_ReturnValue, TArray<class AActor*>& Temp_object_Variable, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, TArray<class UPrimitiveComponent*>& CallFunc_FindGripTargets_OutComponents, bool CallFunc_FindGripTargets_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue_1, float CallFunc_Add_FloatFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, bool CallFunc_NotEqual_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_CheckIfTouchingSurface_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FVector& CallFunc_CalculatePhysics_OutDeltaVelocity, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, TArray<struct FHabHandStateStruct>& CallFunc_FindSurfaceTouches_HandStates, bool CallFunc_Greater_FloatFloat_ReturnValue, const struct FHabHandStateStruct& CallFunc_CheckHandGrip_OutHandState, bool CallFunc_BooleanAND_ReturnValue, const struct FHabHandStateStruct& CallFunc_CheckHandGrip_OutHandState_1, TArray<class AActor*>& Temp_object_Variable_1, const struct FHitResult& CallFunc_SphereTraceSingleByProfile_OutHit, bool CallFunc_SphereTraceSingleByProfile_ReturnValue, const struct FHitResult& CallFunc_SphereTraceSingleByProfile_OutHit_1, bool CallFunc_SphereTraceSingleByProfile_ReturnValue_1, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_BreakHitResult_bBlockingHit_1, bool CallFunc_BreakHitResult_bInitialOverlap_1, float CallFunc_BreakHitResult_Time_1, float CallFunc_BreakHitResult_Distance_1, const struct FVector& CallFunc_BreakHitResult_Location_1, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_1, const struct FVector& CallFunc_BreakHitResult_Normal_1, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_1, class AActor* CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_1, class FName CallFunc_BreakHitResult_HitBoneName_1, int32 CallFunc_BreakHitResult_HitItem_1, int32 CallFunc_BreakHitResult_ElementIndex_1, int32 CallFunc_BreakHitResult_FaceIndex_1, const struct FVector& CallFunc_BreakHitResult_TraceStart_1, const struct FVector& CallFunc_BreakHitResult_TraceEnd_1, const struct FVector& CallFunc_ProjectVectorOnToPlane_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_ProjectVectorOnToPlane_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, float CallFunc_Multiply_FloatFloat_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3, float CallFunc_Subtract_FloatFloat_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_3, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_4);
	void UpdateHeadRotation(float DeltaSeconds, const struct FRotator& HeadRotation, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FVector& CallFunc_GetForwardVector_ReturnValue, float CallFunc_ClampAngle_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FRotator& CallFunc_NegateRotator_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FRotator& CallFunc_MakeRotFromXZ_ReturnValue, const struct FRotator& CallFunc_ComposeRotators_ReturnValue, const struct FRotator& CallFunc_RLerp_ReturnValue);
	void IsHandReaching(bool ForLeftHand, bool* Return_Value);
	enum class ESpaceHandGripMode GetHandMode(bool ForLeftHand);
	struct FHabHandStateStruct GetHandState(bool ForLeftHand);
	void UpdateCapsuleRotation(float DeltaTime, float CallFunc_MakeLiteralFloat_ReturnValue, const struct FVector& CallFunc_GetRightVector_ReturnValue, const struct FVector& CallFunc_GetUpVector_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, class AController* CallFunc_GetController_ReturnValue, const struct FVector& CallFunc_GetActorUpVector_ReturnValue, class ABP_IcarusPlayerControllerSpace_C* K2Node_DynamicCast_AsBP_Icarus_Player_Controller_Space, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue_1, const struct FRotator& CallFunc_RInterpTo_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue_2, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue_3, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue_4, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue);
	void IsUsing6DOFMovement(bool* Use6DOFMovement, bool CallFunc_Greater_FloatFloat_ReturnValue);
	void Get6DOFMovement(float* Use6DOFMovement);
	void Set6DOFMovementRatio(float Use6DOFMovement, float CallFunc_MultiplyMultiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue_1, float CallFunc_Lerp_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult_1);
	bool TraceGround(struct FHitResult* OutHit, struct FVector* Location, float NewLocalVar_0, enum class EDrawDebugTrace Temp_byte_Variable, enum class EDrawDebugTrace Temp_byte_Variable_1, float CallFunc_GetWorldDeltaSeconds_ReturnValue, const struct FVector& CallFunc_GetPhysicsLinearVelocity_ReturnValue, bool Temp_bool_Variable, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, enum class EDrawDebugTrace K2Node_Select_Default, float CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue, const struct FVector& CallFunc_GetUpVector_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, float CallFunc_GetUnscaledCapsuleRadius_ReturnValue, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Square_ReturnValue, float CallFunc_GetScaledCapsuleRadius_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_GetUpVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_3, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FHitResult& CallFunc_SphereTraceSingleByProfile_OutHit, bool CallFunc_SphereTraceSingleByProfile_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3, const struct FVector& CallFunc_InverseTransformDirection_ReturnValue, float CallFunc_VSizeXYSquared_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
	void AutoOrientUsingConstraint(bool ForLeftHand, const struct FHabHandStateStruct& HandState, const struct FVector& DesiredFacingDirection, const struct FVector& DesiredHeadLocation, const struct FVector& UpDirection, float LinearLimit, class UPhysicsConstraintComponent* Constraint, enum class ELinearConstraintMotion Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsConstraining_ReturnValue, bool Temp_bool_Variable, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue, bool CallFunc_GetAutoOrientLocationAndDirection_FoundLocationSuccessfully, const struct FVector& CallFunc_Normal_ReturnValue, float CallFunc_GetInputAxisValue_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue, float CallFunc_GetInputAxisValue_ReturnValue_1, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, bool CallFunc_NotEqual_FloatFloat_ReturnValue_1, const struct FTransform& CallFunc_MakeTransform_ReturnValue, float CallFunc_GetInputAxisValue_ReturnValue_2, bool CallFunc_NotEqual_FloatFloat_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_GetHandStateWorldLocation_ReturnValue, enum class ELinearConstraintMotion Temp_byte_Variable_1, bool Temp_bool_Variable_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, enum class ELinearConstraintMotion K2Node_Select_Default, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_GetUpVector_ReturnValue, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue_1, float CallFunc_Dot_VectorVector_ReturnValue, const struct FVector& CallFunc_TransformDirection_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_SelectVector_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FRotator& CallFunc_MakeRotFromXZ_ReturnValue, bool CallFunc_GetAutoOrientUpAxis_Success, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, const struct FTransform& CallFunc_MakeRelativeTransform_ReturnValue, class UPhysicsConstraintComponent* K2Node_Select_Default_1);
	bool ConsumeFocusedItem(int32 Amount, int32 OldStack, bool CallFunc_IsValid_ReturnValue, class UInventory* CallFunc_GetFocusedItemInventoryAndSlot_FocusedItemInventory, int32 CallFunc_GetFocusedItemInventoryAndSlot_FocusedItemSlot, enum class EDataValidity CallFunc_GetFocusedItemInventoryAndSlot_Validity, bool K2Node_SwitchEnum_CmpSuccess, const struct FItemData& CallFunc_RemoveItem_ReturnValue, enum class EValid CallFunc_GetTrait_Paths, class UItemableComponent* CallFunc_GetTrait_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue);
	float GetMaxSpeed(const struct FHabMovementStateStruct& MovementState, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool CallFunc_Greater_FloatFloat_ReturnValue, bool Temp_bool_Variable_2, float K2Node_Select_Default, float K2Node_Select_Default_1, float K2Node_Select_Default_2, float CallFunc_SelectFloat_ReturnValue);
	void AddReactionImpulseToGrippedComponent(bool ForLeftHand, const struct FVector& Impulse, class UPrimitiveComponent* GrippedComponent, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsStableGrip_ReturnValue, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue_1, bool CallFunc_IsStableGrip_ReturnValue_1, float CallFunc_Conv_BoolToFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, class FName CallFunc_GetHabCharacterWristName_ReturnValue, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsSimulatingPhysics_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void SetConstraintActive(bool ForLeftHand, bool NewActive, class UPhysicsConstraintComponent* Constraint, enum class ESpaceHandGripMode Temp_byte_Variable, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, enum class ESpaceHandGripMode Temp_byte_Variable_1, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue, bool Temp_bool_Variable_1, bool CallFunc_HasEnoughMassToBeRelevant_ReturnValue, enum class ESpaceHandGripMode K2Node_Select_Default, bool CallFunc_Less_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UPhysicsConstraintComponent* K2Node_Select_Default_1);
	bool IsAnyRotationInput(bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetInputAxisValue_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, float CallFunc_GetInputAxisValue_ReturnValue_1, float CallFunc_GetInputAxisValue_ReturnValue_2, bool CallFunc_NotEqual_FloatFloat_ReturnValue_1, bool CallFunc_NotEqual_FloatFloat_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
	bool IsAnyMovementInput(const struct FVector& CallFunc_GetLastMovementInputVector_ReturnValue, float CallFunc_VSizeSquared_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void CalculatePhysics(bool IgnoreLocalUp, const struct FHabMovementStateStruct& LastMovementState, struct FVector* OutDeltaVelocity, const struct FVector& FinalDeltaVelocity, const struct FHabMovementStateStruct& CachedMovementState, bool TouchingSurface, const struct FVector& PreviousVelocity, const struct FVector& ProjectedVector, const struct FVector& DeltaVelocity, const struct FVector& TargetVelocity, const struct FVector& ControlAcceleration, const struct FVector& CurrentVelocity, const struct FVector& CallFunc_GetActorUpVector_ReturnValue, float CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_GetActorUpVector_ReturnValue_1, int32 CallFunc_Conv_BoolToInt_ReturnValue, const struct FVector& CallFunc_Multiply_VectorInt_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, bool CallFunc_EqualEqual_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue_1, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_2, float CallFunc_VSizeSquared_ReturnValue, float CallFunc_VSizeSquared_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_3, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_VSize_ReturnValue_1, const struct FVector& CallFunc_Normal_ReturnValue_1, float CallFunc_FMin_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, const struct FVector& CallFunc_ClampVectorSize_ReturnValue, const struct FVector& CallFunc_ConditionallyFilterUpDirection_ReturnValue, const struct FVector& CallFunc_ProjectVectorOnToVector_ReturnValue, float CallFunc_VSizeSquared_ReturnValue_2, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_GetMaxSpeed_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_ConditionallyFilterUpDirection_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_2, float CallFunc_VSize_ReturnValue_2, const struct FVector& CallFunc_Normal_ReturnValue_3, float CallFunc_FMin_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2);
	void UpdateGripAutoOrientLocation(const struct FVector& DesiredFacingDirection, int32 GripHeadLocationCount, const struct FVector& DesiredHeadLocation, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FVector& CallFunc_Divide_VectorInt_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, bool CallFunc_Vector_IsNearlyZero_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, float CallFunc_MultiplyMultiply_FloatFloat_ReturnValue, float CallFunc_GetInputAxisValue_ReturnValue, float CallFunc_SelectFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_GetInputAxisValue_ReturnValue_1, float CallFunc_GetInputAxisValue_ReturnValue_2, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_1, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue_1, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const struct FVector& CallFunc_Divide_VectorInt_ReturnValue_1, float CallFunc_Vector_Distance_ReturnValue, const struct FVector& CallFunc_GetDirectionUnitVector_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_VectorVector_ReturnValue, float CallFunc_FMin_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2);
	void UpdateGripAutoOrientRoll(const struct FVector& Up, const struct FVector& Forward, const struct FVector& Right, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_VSizeSquared_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_GetActorUpVector_ReturnValue, class AController* CallFunc_GetController_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, class ABP_IcarusPlayerControllerSpace_C* K2Node_DynamicCast_AsBP_Icarus_Player_Controller_Space, bool K2Node_DynamicCast_bSuccess, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Dot_VectorVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_3, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_FMax_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_VInterpTo_ReturnValue);
	bool FindGripTargets(float SearchRadius, const struct FVector& ActorLocation, bool Debugging, TArray<class UPrimitiveComponent*>* OutComponents, TArray<class AActor*>& Temp_object_Variable, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, TArray<class UPrimitiveComponent*>& CallFunc_SphereOverlapComponents_OutComponents, bool CallFunc_SphereOverlapComponents_ReturnValue);
	void AddGripTargetMagnetism(bool ForLeftHand, bool StillHasValidGripTargets, struct FVector* MagnetismVector, bool* MagnetismActive, float ArmDistance, bool CallFunc_Not_PreBool_ReturnValue, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue, const struct FVector& CallFunc_GetHandStateWorldLocation_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetDirectionUnitVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Vector_Distance_ReturnValue, const struct FVector& CallFunc_GetDirectionUnitVector_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_2, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue_1);
	struct FVector MakeTargetLocation(bool ForLeftHand, const struct FTransform& ActorTransform, const struct FVector& Velocity, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_ClampVectorSize_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, float CallFunc_SelectFloat_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_GetRightVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_4);
	void GetBestHandStateFromGripTargets(TArray<class UPrimitiveComponent*>& Array, bool ForLeftHand, const struct FTransform& ActorTransform, const struct FVector& Velocity, bool* FoundHandState, struct FHabHandStateStruct* HandState, const struct FVector& CachedFutureLocation, bool FoundClosestHandState, const struct FHabHandStateStruct& ClosestHandState, float ClosestDistance, int32 Temp_int_Array_Index_Variable, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, class UPrimitiveComponent* CallFunc_Array_Get_Item, const struct FVector& CallFunc_MakeTargetLocation_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, int32 CallFunc_Array_Length_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, bool CallFunc_Less_IntInt_ReturnValue, const struct FHabHandStateStruct& CallFunc_MakeHandStateFromGripTarget_ReturnValue, const struct FVector& CallFunc_GetHandStateWorldLocation_ReturnValue, const struct FVector& CallFunc_GetHandStateWorldLocation_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_Vector_DistanceSquared_ReturnValue, float CallFunc_Vector_DistanceSquared_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_CheckArmAngle_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	bool CheckArmAngle(bool ForLeftHand, struct FVector& Location, struct FTransform& ActorTransform, const struct FVector& CallFunc_Vector_Forward_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, float CallFunc_SelectFloat_ReturnValue, const struct FVector& CallFunc_GetDirectionUnitVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, const struct FVector& CallFunc_TransformDirection_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);
	void GetBestHandStateGromTouch(TArray<struct FHabHandStateStruct>& Array, bool ForLeftHand, const struct FTransform& ActorTransform, const struct FVector& Velocity, bool* FoundHandState, struct FHabHandStateStruct* HandState, bool FoundClosestHandState, const struct FHabHandStateStruct& ClosestHandState, float ClosestDistance, int32 Temp_int_Array_Index_Variable, const struct FVector& CallFunc_MakeTargetLocation_ReturnValue, const struct FHabHandStateStruct& CallFunc_Array_Get_Item, const struct FVector& CallFunc_GetHandStateWorldLocation_ReturnValue, const struct FVector& CallFunc_GetHandStateWorldLocation_ReturnValue_1, float CallFunc_Vector_DistanceSquared_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, float CallFunc_Vector_DistanceSquared_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_CheckArmAngle_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	float PerformRollSmoothing(float TargetRollValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, bool CallFunc_IsTouchingSurface_ReturnValue, float CallFunc_GetInputAxisValue_ReturnValue, float CallFunc_SignOfFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue_1, float CallFunc_FInterpTo_Constant_ReturnValue);
	void UpdateHandDistance(bool Index);
	void FindSurfaceTouches(const struct FTransform& ActorTransform, bool Debugging, int32 CheckCount, TArray<struct FHabHandStateStruct>* HandStates, const TArray<struct FHabHandStateStruct>& TempHandStates, enum class EDrawDebugTrace Temp_byte_Variable, enum class EDrawDebugTrace Temp_byte_Variable_1, bool Temp_bool_Variable, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, bool Temp_bool_Variable_1, enum class EDrawDebugTrace K2Node_Select_Default, const struct FVector& CallFunc_SelectVector_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_TransformLocation_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FHabHandStateStruct& CallFunc_HitToHandState_HandState, bool CallFunc_ComponentHasTag_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_HasEnoughMassToBeRelevant_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanNOR_ReturnValue);
	void FilterGripTargets(TArray<class AActor*>& Array, TArray<class UPrimitiveComponent*>* FilteredArray, const TArray<class UPrimitiveComponent*>& Results, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, TArray<class UPrimitiveComponent*>& CallFunc_GetComponentsByTag_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	class USkeletalMeshComponent* GetVisibleCharacterMesh();
	void SetMeshMontagePlayRate(class USkeletalMeshComponent* Mesh, float PlayRate, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, class UAnimMontage* CallFunc_GetCurrentActiveMontage_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void OnRep_FocusedItem(class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, class UThreeRD_CHA_RIG_Space_AnimBP_C* K2Node_DynamicCast_As3RD_CHA_RIG_Space_Anim_BP, bool K2Node_DynamicCast_bSuccess);
	bool DropItem(struct FItemData& InventoryItem, bool CallFunc_DropItem_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, const struct FVector& CallFunc_GetPhysicsLinearVelocity_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, const struct FIcarusItemConstructionParameters& K2Node_MakeStruct_IcarusItemConstructionParameters, const struct FRotator& CallFunc_K2_GetComponentRotation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue_1, float CallFunc_MapRangeClamped_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FIcarusItemSpawnParameters& K2Node_MakeStruct_IcarusItemSpawnParameters, enum class EDataValid CallFunc_ItemDataValid_Paths, class AIcarusItem* CallFunc_SpawnItemActor_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class UMeshComponent* CallFunc_GetRootMeshComponent_ReturnValue);
	bool PickupItem(class AIcarusItem* Item, const struct FItemData& ItemInfo, const struct FItemData& CallFunc_SerializeItemData_OutItemData, class UInventory* CallFunc_GetInventory_ReturnValue, bool CallFunc_PickupItem_ReturnValue, int32 CallFunc_AutomaticallyPlaceItem_PlacedLocation, bool CallFunc_AutomaticallyPlaceItem_ReturnValue);
	bool OnInteractableLineTraceHit(struct FHitResult& HitResult, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, enum class EValid CallFunc_GetTrait_Paths, class UInteractableComponent* CallFunc_GetTrait_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsActive_ReturnValue);
	bool IsHandStateValid(bool ForLeftHand, struct FHabHandStateStruct& HandState, const struct FTransform& ActorTransform, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_GetHandStateWorldLocation_ReturnValue, bool CallFunc_CheckArmAngle_ReturnValue, float CallFunc_Vector_DistanceSquared_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	bool IsTouchingSurface(bool CallFunc_IsValid_ReturnValue, bool CallFunc_CheckIfTouchingSurface_ReturnValue);
	void GetBestHandMode(struct FHabHandStateStruct& LeftHandState, struct FHabHandStateStruct& RightHandState, enum class ESpaceHandGripMode* HandMode, bool* Reaching, bool Temp_bool_Variable, enum class ESpaceHandGripMode Temp_byte_Variable, bool CallFunc_BooleanAND_ReturnValue, uint8 CallFunc_BMax_ReturnValue, enum class ESpaceHandGripMode Temp_byte_Variable_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, enum class ESpaceHandGripMode K2Node_Select_Default, uint8 CallFunc_BMax_ReturnValue_1, uint8 CallFunc_GetValidValue_ReturnValue);
	void SetAnimHandMode(bool ForLeftHand, enum class ESpaceHandGripMode NewHandMode, bool Reaching, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, const struct FHabHandStateStruct& K2Node_Select_Default, const struct FHabHandStateStruct& K2Node_SetFieldsInStruct_StructOut);
	void SetAnimHandHit(bool ForLeftHand, const struct FHabHandStateStruct& NewHandState, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, const struct FHabHandStateStruct& K2Node_Select_Default);
	void CheckHandGrip(bool ForLeftHand, const struct FHabHandStateStruct& CurrentHandState, TArray<class UPrimitiveComponent*>& GripTargets, TArray<struct FHabHandStateStruct>& TouchHandStates, const struct FTransform& ActorTransform, const struct FVector& Velocity, float CurrentTime, struct FHabHandStateStruct* OutHandState, const struct FHabHandStateStruct& HandState);
	void InitialiseInventories(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_IsServer_ReturnValue, class UInventory* CallFunc_GetInventory_ReturnValue, class UInventory* CallFunc_GetInventory_ReturnValue_1);
	void UserConstructionScript(float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Square_ReturnValue);
	void InpActEvt_Interact_K2Node_InputActionEvent_8(const struct FKey& Key);
	void InpActEvt_Interact_K2Node_InputActionEvent_7(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_6(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_AltFire_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_AltFire_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_Sprint_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_Sprint_K2Node_InputActionEvent_1(const struct FKey& Key);
	void OnNotifyEnd_A0EE5E9E4EEAC509BB86ABBACC336206(class FName NotifyName, class UAnimNotify* Notify);
	void OnNotifyBegin_A0EE5E9E4EEAC509BB86ABBACC336206(class FName NotifyName, class UAnimNotify* Notify);
	void OnInterrupted_A0EE5E9E4EEAC509BB86ABBACC336206(class FName NotifyName, class UAnimNotify* Notify);
	void OnBlendOut_A0EE5E9E4EEAC509BB86ABBACC336206(class FName NotifyName, class UAnimNotify* Notify);
	void OnCompleted_A0EE5E9E4EEAC509BB86ABBACC336206(class FName NotifyName, class UAnimNotify* Notify);
	void InpActEvt_Jump_K2Node_InputActionEvent_0(const struct FKey& Key);
	void MovementPrediction();
	void InteractHeld();
	void ServerPlayerAction(enum class EActionableEventType ActionType, enum class EActionableTrigger Trigger);
	void StartThrow();
	void InpAxisEvt_MoveUp_K2Node_InputAxisEvent_2(float AxisValue);
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent_4(float AxisValue);
	void InpAxisEvt_LookRight_K2Node_InputAxisEvent_5(float AxisValue);
	void InpAxisEvt_RollRight_K2Node_InputAxisEvent_6(float AxisValue);
	void ReceiveBeginPlay();
	void NotifyLocationUpdated(const struct FVector& CurrentLocation);
	void NotifyRotationUpdated(const struct FRotator& NewRotation);
	void NotifyVelocityUpdated(const struct FVector& CurrentLocation);
	void MovementReplicationTick(float Delta);
	void ReceiveTick(float DeltaSeconds);
	void MovementPhysicsTick(float DeltaSeconds);
	void PlayMontage(class UAnimMontage* Montage, class UAnimMontage* FP_Montage, bool LockMotion, class FName StartingSection, class FName FP_StartingSection, float PlaySpeed);
	void SetMontagePlayRate(float PlayRate);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1(float AxisValue);
	void PreCharacterDestruction();
	void FOVApplied(float Value);
	void EquipmentItemChanged(class UInventory* Inventory, int32 Location);
	void EquipmentUpdated();
	void ReceivePossessed(class AController* NewController);
	void ExecuteUbergraph_BP_IcarusPlayerCharacterSpace(int32 EntryPoint, class UIcarusGameUserSettings* CallFunc_GetIcarusGameUserSettings_ReturnValue, float CallFunc_GetFieldOfView_ReturnValue, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue, const struct FHabHandStateStruct& CallFunc_GetHandState_ReturnValue_1, const struct FTransform& CallFunc_GetTransform_ReturnValue, const struct FKey& K2Node_InputActionEvent_Key, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, TArray<struct FHabHandStateStruct>& CallFunc_FindSurfaceTouches_HandStates, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, TArray<class UPrimitiveComponent*>& CallFunc_FindGripTargets_OutComponents, bool CallFunc_FindGripTargets_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, const struct FHabHandStateStruct& CallFunc_CheckHandGrip_OutHandState, bool CallFunc_Not_PreBool_ReturnValue, const struct FHabHandStateStruct& CallFunc_CheckHandGrip_OutHandState_1, const struct FKey& Temp_struct_Variable, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, const struct FVector& CallFunc_GetVelocity_ReturnValue_1, const struct FKey& K2Node_InputActionEvent_Key_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_IsStableGrip_ReturnValue, bool CallFunc_IsStableGrip_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_4, const struct FKey& K2Node_InputActionEvent_Key_2, class FName Temp_name_Variable, class UAnimNotify* Temp_object_Variable, bool CallFunc_IsUsing6DOFMovement_Use6DOFMovement, const struct FVector& CallFunc_GetUpVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, bool CallFunc_IsUsing6DOFMovement_Use6DOFMovement_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_5, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_6, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue, class AController* CallFunc_GetController_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_GetPhysicsLinearVelocity_ReturnValue, const struct FVector& CallFunc_TransformLocation_ReturnValue, const struct FHitResult& CallFunc_TraceGround_OutHit, bool CallFunc_TraceGround_ReturnValue, const struct FVector& CallFunc_TraceGround_Location, const struct FVector& CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_K2_TimerExistsHandle_ReturnValue, bool CallFunc_IsSimulatingPhysics_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, enum class EValid CallFunc_GetTrait_Paths, class UActionableComponent* CallFunc_GetTrait_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, enum class EActionableEventType K2Node_CustomEvent_ActionType, enum class EActionableTrigger K2Node_CustomEvent_Trigger, const struct FKey& Temp_struct_Variable_1, const struct FKey& K2Node_InputActionEvent_Key_3, class AController* CallFunc_GetController_ReturnValue_1, class FName K2Node_CustomEvent_NotifyName, class UAnimNotify* K2Node_CustomEvent_Notify, class ABP_IcarusPlayerControllerSpace_C* K2Node_DynamicCast_AsBP_Icarus_Player_Controller_Space, bool K2Node_DynamicCast_bSuccess, const struct FKey& K2Node_InputActionEvent_Key_4, bool CallFunc_Not_PreBool_ReturnValue_7, class UInventory* CallFunc_GetInventory_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue_1, float K2Node_InputAxisEvent_AxisValue_5, const struct FVector& CallFunc_GetActorUpVector_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, float K2Node_InputAxisEvent_AxisValue_4, float K2Node_InputAxisEvent_AxisValue_3, class FName K2Node_CustomEvent_NotifyName_1, class UAnimNotify* K2Node_CustomEvent_Notify_1, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_InputAxisEvent_AxisValue_2, const struct FKey& Temp_struct_Variable_2, bool CallFunc_IsLocallyControlled_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, bool CallFunc_IsLocallyControlled_ReturnValue_2, const struct FVector& K2Node_CustomEvent_CurrentLocation_1, const struct FRotator& K2Node_CustomEvent_NewRotation, bool CallFunc_IsLocallyControlled_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_8, class AController* CallFunc_GetController_ReturnValue_2, const struct FRotator& CallFunc_GetControlRotation_ReturnValue_1, const struct FRotator& CallFunc_K2_GetComponentRotation_ReturnValue, const struct FKey& K2Node_InputActionEvent_Key_5, bool CallFunc_NotEqual_RotatorRotator_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, class FName K2Node_CustomEvent_NotifyName_2, class UAnimNotify* K2Node_CustomEvent_Notify_2, bool CallFunc_Not_PreBool_ReturnValue_9, const struct FRotator& CallFunc_K2_GetComponentRotation_ReturnValue_1, class AController* CallFunc_GetController_ReturnValue_3, const struct FRotator& CallFunc_GetControlRotation_ReturnValue_2, const struct FVector& K2Node_CustomEvent_CurrentLocation, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, float K2Node_CustomEvent_Delta, bool CallFunc_IsAnyRotationInput_ReturnValue, bool CallFunc_IsConstraining_ReturnValue, bool CallFunc_IsConstraining_ReturnValue_1, float K2Node_Event_DeltaSeconds, bool CallFunc_BooleanNOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, float K2Node_CustomEvent_DeltaSeconds, const struct FRotator& CallFunc_RInterpTo_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FRotator& CallFunc_RInterpTo_ReturnValue_1, class FName K2Node_CustomEvent_NotifyName_3, class UAnimNotify* K2Node_CustomEvent_Notify_3, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, class UThreeRD_CHA_RIG_Space_AnimBP_C* K2Node_DynamicCast_As3RD_CHA_RIG_Space_Anim_BP, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsServer_ReturnValue, const struct FKey& K2Node_InputActionEvent_Key_6, class UAnimMontage* K2Node_Event_Montage, class UAnimMontage* K2Node_Event_FP_Montage, bool K2Node_Event_LockMotion, class FName K2Node_Event_StartingSection, class FName K2Node_Event_FP_StartingSection, float K2Node_Event_PlaySpeed, class UPlayMontageCallbackProxy* CallFunc_CreateProxyObjectForPlayMontage_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, float K2Node_Event_PlayRate, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, bool CallFunc_IsServer_ReturnValue_1, const struct FKey& Temp_struct_Variable_3, float K2Node_InputAxisEvent_AxisValue_1, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_IsWithEditor_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue_4, bool CallFunc_HasAuthority_ReturnValue, float K2Node_CustomEvent_Value, class AController* CallFunc_GetController_ReturnValue_4, const struct FKey& K2Node_InputActionEvent_Key_7, bool CallFunc_HasAuthority_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_VInterpTo_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, const struct FKey& K2Node_InputActionEvent_Key_8, const struct FVector& CallFunc_GetPhysicsLinearVelocity_ReturnValue_1, const struct FVector& CallFunc_VInterpTo_ReturnValue_1, class FName K2Node_CustomEvent_NotifyName_4, class UAnimNotify* K2Node_CustomEvent_Notify_4, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_2, float CallFunc_PerformRollSmoothing_ReturnValue, bool CallFunc_IsSimulatingPhysics_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_10, bool CallFunc_IsPlayerControlled_ReturnValue, class AController* CallFunc_GetController_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, class AIcarusPlayerController* CallFunc_GetIcarusPlayerController_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_11, const struct FVector& CallFunc_GetActorUpVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, bool CallFunc_IsUsing6DOFMovement_Use6DOFMovement_2, bool CallFunc_Not_PreBool_ReturnValue_12, bool CallFunc_Not_PreBool_ReturnValue_13, bool CallFunc_BooleanAND_ReturnValue_3, const struct FVector& CallFunc_GetForwardVector_ReturnValue_1, const struct FVector& CallFunc_GetRightVector_ReturnValue, const struct FVector& CallFunc_GetUpVector_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue, bool Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable, bool CallFunc_K2_SetActorRotation_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, const struct FVector& CallFunc_GetActorUpVector_ReturnValue_2, const struct FVector& CallFunc_GetForwardVector_ReturnValue_2, const struct FVector& CallFunc_ProjectVectorOnToPlane_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_2, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, TArray<class AActor*>& Temp_object_Variable_1, const struct FHitResult& CallFunc_SphereTraceSingle_OutHit, bool CallFunc_SphereTraceSingle_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_14, bool CallFunc_Not_PreBool_ReturnValue_15, bool Temp_bool_Has_Been_Initd_Variable, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, class UInventory* K2Node_CustomEvent_Inventory, int32 K2Node_CustomEvent_Location, bool CallFunc_Not_PreBool_ReturnValue_16, bool CallFunc_Not_PreBool_ReturnValue_17, bool Temp_bool_IsClosed_Variable, bool CallFunc_IsValid_ReturnValue_4, class UBackendProxyComponent* CallFunc_GetBackendProxyComponent_BackendProxyComponent, bool CallFunc_GetBackendProxyComponent_bSuccess, bool CallFunc_Not_PreBool_ReturnValue_18, class AController* K2Node_Event_NewController);
};

}


