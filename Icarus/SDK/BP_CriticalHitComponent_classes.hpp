#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x1BA (0x26A - 0xB0)
// BlueprintGeneratedClass BP_CriticalHitComponent.BP_CriticalHitComponent_C
class UBP_CriticalHitComponent_C : public UIcarusCriticalHitComponent
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                          ResetTimer;                                        // 0xB8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	enum class ECriticalHitStage                 CurrentStage;                                      // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         HomingMissile;                                     // 0xC1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         CHRotationLocked;                                  // 0xC2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4D41[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CachedTargetLocation;                              // 0xC4(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        CHTargetRotation;                                  // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4D48[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCriticalHitSetup                     CurrentCriticalHitConfig;                          // 0xD8(0x100)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMatineeCameraShake*                   ProjectileShake;                                   // 0x1D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ProjStopped;                                       // 0x1E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4D5D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugLength;                                       // 0x1E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        LuckyBuffer;                                       // 0x1E8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Debug;                                             // 0x1EC(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IgnoreDamage;                                      // 0x1ED(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4D6C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetTimestamp;                                   // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TransitionSpeed;                                   // 0x1F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ProjectileBaseDamage;                              // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4D7F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Projectile;                                        // 0x200(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                              FacingTargetRotation;                              // 0x208(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         ProjMissed;                                        // 0x214(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         CanUseKillCamAudio;                                // 0x215(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         KillCamAudioApplied;                               // 0x216(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4DA3[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            KillCamAudioEvent;                                 // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                    KillCamAudioEventInstance;                         // 0x220(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                               TrackingTargetLocation;                            // 0x228(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                              CachedProjectileRotation;                          // 0x234(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                               CachedProjectileLocation;                          // 0x240(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TargetFOV;                                         // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        LastProjectileDistance;                            // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4DD8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CriticalHitData_Projectile;                        // 0x258(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class AActor*                                CriticalHitData_Target;                            // 0x260(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                         KillCamRunning;                                    // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         KillcamEnabled;                                    // 0x269(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

	static class UClass* StaticClass();
	static class UBP_CriticalHitComponent_C* GetDefaultObj();

	void UpdateCamera(const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, bool ForceUpdate, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV, bool* Return, float OutTargetFOV, const struct FVector& OutTargetLocation, float OutProjectileFOV, const struct FRotator& OutProjectileRotation, const struct FVector& OutProjectileLocation, class UBallisticComponent* ProjectileComponent, const struct FVector& CallFunc_GetCriticalLocationOnTarget_ReturnValue, const struct FVector& CallFunc_GetTargetCentreLocation_ReturnValue, float CallFunc_MakeLiteralFloat_ReturnValue, float CallFunc_MakeLiteralFloat_ReturnValue_1, float CallFunc_GetGameTimeInSeconds_ReturnValue, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, const struct FRotator& CallFunc_RLerp_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_1, class AActor* CallFunc_GetProjectile_Projectile, float CallFunc_MapRangeClamped_ReturnValue_1, const struct FVector& CallFunc_CalculateProjectileCamera_OutLocation, const struct FRotator& CallFunc_CalculateProjectileCamera_OutRotation, float CallFunc_CalculateProjectileCamera_OutFOV, float CallFunc_Lerp_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue, bool CallFunc_CriticalHitActive_Active, const struct FVector& CallFunc_CalculatePlayerCamera_OutLocation, const struct FRotator& CallFunc_CalculatePlayerCamera_OutRotation, float CallFunc_CalculatePlayerCamera_OutFOV, bool K2Node_SwitchEnum_CmpSuccess, const struct FRotator& CallFunc_MakeRotator_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, const struct FVector& CallFunc_CalculateTargetCamera_OutLocation, const struct FRotator& CallFunc_CalculateTargetCamera_OutRotation, float CallFunc_CalculateTargetCamera_OutFOV, class AActor* CallFunc_GetProjectile_Projectile_1, enum class EValid CallFunc_GetTrait_Paths, class UBallisticComponent* CallFunc_GetTrait_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_2, class AActor* CallFunc_GetProjectile_Projectile_2, bool CallFunc_ProjectileToTargetCheck_ReturnValue, bool CallFunc_ProjectileToTargetCheck_Force, const struct FVector& CallFunc_CalculateProjectileCamera_OutLocation_1, const struct FRotator& CallFunc_CalculateProjectileCamera_OutRotation_1, float CallFunc_CalculateProjectileCamera_OutFOV_1);
	bool GetIgnoreDamage();
	bool GetDebug();
	float GetLuckyBuffer();
	void OnRep_KillcamEnabled();
	void UpdateCriticalHitData(bool CallFunc_CriticalHitActive_Active, bool CallFunc_CriticalHitActive_Active_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class AIcarusPlayerController* K2Node_DynamicCast_AsIcarus_Player_Controller, bool K2Node_DynamicCast_bSuccess, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess_1, class AIcarusPlayerCharacter* CallFunc_GetIcarusPlayerCharacter_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_1, class AController* K2Node_DynamicCast_AsController, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsLocalPlayerController_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_2, class AController* K2Node_DynamicCast_AsController_1, bool K2Node_DynamicCast_bSuccess_3, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool CallFunc_IsLocalPlayerController_ReturnValue_1, bool CallFunc_CriticalHitActive_Active_2);
	void OnRep_CriticalHitData_Target();
	void OnRep_CriticalHitData_Projectile();
	bool ProjectileToTargetCheck(bool* Force, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable_1, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float K2Node_Select_Default, class AActor* CallFunc_GetTarget_Target, bool CallFunc_Less_FloatFloat_ReturnValue, TScriptInterface<class IICriticalHitInterface_C> K2Node_DynamicCast_AsICritical_Hit_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetCHBounds_Return, class UBoxComponent* CallFunc_GetCHBounds_Box, class AActor* CallFunc_GetProjectile_Projectile, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, float CallFunc_Vector_Distance_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, class AActor* CallFunc_GetProjectile_Projectile_1, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);
	void UpdateTargetFOV(bool Zoom, float ZoomSpeed, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue);
	void UpdateTargetRotation(bool Rotate, float RotateSpeed, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue);
	void UpdateTrackingLocation(const struct FVector& InLocation, float SmoothingSpeed, bool CallFunc_EqualEqual_VectorVector_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, const struct FVector& CallFunc_VInterpTo_ReturnValue);
	void UpdateFacingRotation(const struct FVector& Start, const struct FVector& End, float SmoothingSpeed, const struct FRotator& NewFacingRotation, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, const struct FRotator& CallFunc_RInterpTo_ReturnValue, bool CallFunc_EqualEqual_RotatorRotator_ReturnValue);
	struct FVector GetCriticalLocationOnTarget(class AActor* CallFunc_GetProjectile_Projectile, class AActor* CallFunc_GetTarget_Target, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class USkeletalMeshComponent* CallFunc_GetComponentByClass_ReturnValue, class UBP_BallisticBehaviour_Base_C* CallFunc_GetComponentByClass_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue);
	struct FVector GetTargetCentreLocation(class AActor* CallFunc_GetTarget_Target, class ACharacter* K2Node_DynamicCast_AsCharacter, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_GetActorBounds_Origin, const struct FVector& CallFunc_GetActorBounds_BoxExtent, const struct FVector& CallFunc_GetCenterOfMass_ReturnValue);
	void UpdateAudio(bool ShouldApplyKillCamAudio, bool CallFunc_EventInstanceIsValid_ReturnValue, bool CallFunc_EventInstanceIsValid_ReturnValue_1, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_CriticalHitActive_Active, float CallFunc_Conv_BoolToFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue);
	void ResetVariables();
	void ProjectileStopped(class AActor* Projectile, class AActor* HitActor, class AActor* CallFunc_GetTarget_Target, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_1, class AActor* CallFunc_GetProjectile_Projectile, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1);
	void CancelCriticalHit(class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_HasAuthority_ReturnValue);
	void SwitchToTarget(bool ServerTriggered, bool Temp_bool_Variable, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FRotator& CallFunc_GetCameraRotation_ReturnValue, const struct FVector& CallFunc_GetCameraLocation_ReturnValue, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float K2Node_Select_Default, class AActor* CallFunc_GetTarget_Target, const struct FTransform& CallFunc_GetTransform_ReturnValue, class AActor* CallFunc_GetTarget_Target_1, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw);
	void SetTimeScale(class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_HasAuthority_ReturnValue);
	void CheckCameraShake(bool CallFunc_CriticalHitActive_Active, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, class UCameraShakeBase* CallFunc_StartCameraShake_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UMatineeCameraShake* CallFunc_Conv_MatineeCameraShake_ReturnValue, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1);
	void CriticalHitSpringArm(float SpringArmYaw, const struct FVector& TargetLocation, const struct FVector& PivotOffset, const struct FVector& CameraOffset, const struct FRotator& CameraRotationOffset, struct FVector* Location, struct FRotator* Rotation, const struct FVector& PivotLocation, const struct FRotator& TargetCameraRotation, const struct FVector& TargetCameraLocation, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_GetUpVector_ReturnValue, const struct FVector& CallFunc_GetRightVector_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, TArray<class AActor*>& Temp_object_Variable, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FHitResult& CallFunc_SphereTraceSingle_OutHit, bool CallFunc_SphereTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_GetUpVector_ReturnValue_1, const struct FVector& CallFunc_GetRightVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_3, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_4, const struct FVector& CallFunc_GetForwardVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_4, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_5, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_5, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_6);
	void CalculateTargetCamera(const struct FCriticalHitSetup& Config, const struct FVector& Location, const struct FRotator& Rotation, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FVector& CallFunc_CriticalHitSpringArm_Location, const struct FRotator& CallFunc_CriticalHitSpringArm_Rotation);
	void CalculateProjectileCamera(const struct FCriticalHitSetup& Config, class AActor* Projectile, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV, const struct FRotator& RotationOffset, enum class EValid CallFunc_GetTrait_Paths, class UBP_BallisticBehaviour_Base_C* CallFunc_GetTrait_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, const struct FBallisticData& CallFunc_GetBallisticData_OutData, bool CallFunc_GetBallisticData_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_TransformLocation_ReturnValue, const struct FRotator& CallFunc_ComposeRotators_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1);
	void CalculatePlayerCamera(const struct FCriticalHitSetup& Config, class AActor* Player, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV, const struct FTransform& CallFunc_GetTransform_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FRotator& CallFunc_ComposeRotators_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FRotator& CallFunc_ComposeRotators_ReturnValue_1, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FVector& CallFunc_CriticalHitSpringArm_Location, const struct FRotator& CallFunc_CriticalHitSpringArm_Rotation);
	void GetTimeScale(float* TimeScale, enum class ECriticalHitStage Temp_byte_Variable, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, float K2Node_Select_Default);
	void CriticalHitActive(bool* Active, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	void ProcessCriticalHit(const struct FPredictProjectilePathParams& ProjectilePrediction, class AActor* Projectile, bool* CriticalHit, class AActor** Target, float AITimeEnd, float AITimeStart, class UBoxComponent* ActorBounds, const struct FBoxSphereBounds& NewLocalVar_0, float EndTime, const struct FVector& EndLocation, float StartTime, const struct FVector& StartLocation, float RearLengthBuffer, float ForwardLengthBuffer, class AActor* Actor, float IntersectionTime, const struct FVector& Intersection, bool Found, const struct FFCHCollisionStruct& CHCollision, int32 PredicateIndex, const struct FPredictProjectilePathPointData& PredicateElement, const struct FPredictProjectilePathParams& Prediction, class AActor* TempTarget, const struct FPredictProjectilePathResult& PredictResults, TScriptInterface<class IICriticalHitInterface_C> K2Node_DynamicCast_AsICritical_Hit_Interface, bool K2Node_DynamicCast_bSuccess, enum class EStealthAttackType CallFunc_GetTargetStealth_ReturnValue, bool Temp_bool_Variable, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, bool Temp_bool_Variable_1, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable_2, const class FString& Temp_string_Variable_2, int32 Temp_int_Loop_Counter_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_3, bool Temp_bool_True_if_break_was_hit_Variable_1, int32 Temp_int_Array_Index_Variable_3, bool CallFunc_Not_PreBool_ReturnValue_1, class FName CallFunc_GetClosestBoneAlongProjectilePrediction_HitBone, class UPrimitiveComponent* CallFunc_GetClosestBoneAlongProjectilePrediction_HitComponent, const struct FHitResult& CallFunc_CreateCriticalHitResult_OutCriticalHit, TScriptInterface<class IICriticalHitInterface_C> K2Node_DynamicCast_AsICritical_Hit_Interface_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_GetTargetHealth_Return, float CallFunc_GetTargetHealth_Health, float CallFunc_PredictProjectileDamage_OutDamage, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue_2, const class FString& K2Node_Select_Default, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, float K2Node_Select_Default_1, const class FString& Temp_string_Variable_3, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, bool CallFunc_GatherIntersections_Return, TArray<struct FFCHCollisionStruct>& CallFunc_GatherIntersections_Intersections, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const struct FFCHCollisionStruct& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_1, float CallFunc_Add_FloatFloat_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Conv_FloatToString_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Conv_FloatToString_ReturnValue_3, float CallFunc_Add_FloatFloat_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_2, const class FString& CallFunc_Conv_FloatToString_ReturnValue_4, float CallFunc_Subtract_FloatFloat_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, bool CallFunc_Less_FloatFloat_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, float K2Node_Select_Default_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_11, const class FString& CallFunc_Conv_FloatToString_ReturnValue_5, bool CallFunc_Greater_FloatFloat_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_12, bool CallFunc_Less_FloatFloat_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_13, bool CallFunc_BooleanOR_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_14, const class FString& CallFunc_Concat_StrStr_ReturnValue_15, const class FString& CallFunc_Conv_FloatToString_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_16, const class FString& CallFunc_GetDisplayName_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_17, const class FString& CallFunc_Concat_StrStr_ReturnValue_18, const class FString& CallFunc_Concat_StrStr_ReturnValue_19, const class FString& CallFunc_Concat_StrStr_ReturnValue_20, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, float CallFunc_BreakVector_X_2, float CallFunc_BreakVector_Y_2, float CallFunc_BreakVector_Z_2, float CallFunc_BreakVector_X_3, float CallFunc_BreakVector_Y_3, float CallFunc_BreakVector_Z_3, float CallFunc_Subtract_FloatFloat_ReturnValue_4, float CallFunc_Add_FloatFloat_ReturnValue_2, TScriptInterface<class IICriticalHitInterface_C> K2Node_DynamicCast_AsICritical_Hit_Interface_2, bool K2Node_DynamicCast_bSuccess_2, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, bool CallFunc_GetCHBounds_Return, class UBoxComponent* CallFunc_GetCHBounds_Box, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_BreakVector_X_4, float CallFunc_BreakVector_Y_4, float CallFunc_BreakVector_Z_4, float CallFunc_Add_FloatFloat_ReturnValue_3, bool Temp_bool_Variable_3, TArray<class AActor*>& CallFunc_GetAllActorsWithInterface_OutActors, class AActor* CallFunc_Array_Get_Item_1, const class FString& K2Node_Select_Default_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_21, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, float CallFunc_Add_FloatFloat_ReturnValue_4, float CallFunc_Subtract_FloatFloat_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue_3, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue_1, float CallFunc_Vector_Distance_ReturnValue, float CallFunc_Vector_Distance_ReturnValue_1, float CallFunc_MapRangeClamped_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_BreakVector_X_5, float CallFunc_BreakVector_Y_5, float CallFunc_BreakVector_Z_5, float CallFunc_Subtract_FloatFloat_ReturnValue_6, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_22, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_5, bool CallFunc_InRange_FloatFloat_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_9, float CallFunc_Add_FloatFloat_ReturnValue_6, float CallFunc_Subtract_FloatFloat_ReturnValue_7, const struct FVector& CallFunc_GetVelocity_ReturnValue_1, float CallFunc_VSize_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, const struct FPlane& CallFunc_MakePlaneFromPointAndNormal_ReturnValue, const struct FPredictProjectilePathPointData& CallFunc_Array_Get_Item_2, float CallFunc_LinePlaneIntersection_T, const struct FVector& CallFunc_LinePlaneIntersection_Intersection, bool CallFunc_LinePlaneIntersection_ReturnValue, const struct FPredictProjectilePathPointData& CallFunc_Array_Get_Item_3, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, float CallFunc_GetGameTimeInSeconds_ReturnValue_1, float CallFunc_GetGameTimeInSeconds_ReturnValue_2, float CallFunc_Add_FloatFloat_ReturnValue_7, const class FString& CallFunc_Conv_FloatToString_ReturnValue_10, const struct FPredictProjectilePathPointData& CallFunc_Array_Get_Item_4, int32 CallFunc_Array_Length_ReturnValue_5, float CallFunc_Add_FloatFloat_ReturnValue_8, bool CallFunc_Less_IntInt_ReturnValue_3, const class FString& CallFunc_Conv_FloatToString_ReturnValue_11, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, uint8 CallFunc_MakeLiteralByte_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, const struct FPredictProjectilePathResult& CallFunc_Blueprint_PredictProjectilePath_Advanced_PredictResult, bool CallFunc_Blueprint_PredictProjectilePath_Advanced_ReturnValue);
	void SwitchToProjectile();
	void SwitchToPlayer(float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue);
	void OnRep_CriticalHitData();
	void GetProjectile(class AActor** Projectile);
	void GetTarget(class AActor** Target);
	void SERVER_CancelCriticalHit();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void CLIENT_SwitchStage(enum class ECriticalHitStage Stage);
	void OnKillcamEnabledApplied(bool Value);
	void SERVER_SetKillcamEnabled(bool Enabled);
	void SetupKillcamSetting();
	void BP_SetIgnoreDamage(bool bIgnore);
	void BP_SetLuckyBuffer(float NewLuckyBuffer);
	void BP_SetDebug(bool bDebug);
	void SetCriticalHitConfig(class FName& Name);
	void ExecuteUbergraph_BP_CriticalHitComponent(int32 EntryPoint, class AActor* CallFunc_GetOwner_ReturnValue, class AController* K2Node_DynamicCast_AsController, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocalPlayerController_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_1, class AController* K2Node_DynamicCast_AsController_1, bool K2Node_DynamicCast_bSuccess_1, float K2Node_Event_DeltaSeconds, bool CallFunc_IsLocalPlayerController_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class AActor* CallFunc_GetProjectile_Projectile, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class AActor* CallFunc_GetProjectile_Projectile_1, class UIcarusProjectileComponent* CallFunc_GetComponentByClass_ReturnValue, class AActor* CallFunc_GetProjectile_Projectile_2, class AActor* CallFunc_GetProjectile_Projectile_3, const struct FVector& CallFunc_GetVelocity_ReturnValue, enum class EValid CallFunc_GetTrait_Paths, class UBallisticComponent* CallFunc_GetTrait_ReturnValue, float CallFunc_VSize_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class AActor* CallFunc_GetProjectile_Projectile_4, bool CallFunc_IsServer_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_GetTarget_Target, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_NotEqual_ByteByte_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_CriticalHitActive_Active, bool CallFunc_IsLocalPlayerController_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, const struct FCriticalHitSetupRowHandle& CallFunc_MakeLiteralCriticalHitSetup_ReturnValue, const struct FCriticalHitSetup& CallFunc_GetCriticalHitSetupStruct_CriticalHitSetup, enum class EValid CallFunc_GetCriticalHitSetupStruct_Paths, enum class ECriticalHitStage K2Node_CustomEvent_Stage, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2, const struct FVector& CallFunc_GetCriticalLocationOnTarget_ReturnValue, bool CallFunc_ProjectileToTargetCheck_ReturnValue, bool CallFunc_ProjectileToTargetCheck_Force, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, class AActor* CallFunc_GetTarget_Target_1, bool CallFunc_IsValid_ReturnValue_2, class AActor* CallFunc_GetProjectile_Projectile_5, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsServer_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_CriticalHitActive_Active_1, class UIcarusGameUserSettings* CallFunc_GetIcarusGameUserSettings_ReturnValue, bool K2Node_CustomEvent_Value, class UIcarusGameUserSettings* CallFunc_GetIcarusGameUserSettings_ReturnValue_1, bool K2Node_CustomEvent_Enabled, bool CallFunc_GetKillcam_ReturnValue, bool K2Node_Event_bIgnore, float K2Node_Event_NewLuckyBuffer, bool K2Node_Event_bDebug, class FName K2Node_Event_Name, const struct FCriticalHitSetupRowHandle& CallFunc_MakeCriticalHitSetup_ReturnValue, const struct FCriticalHitSetup& CallFunc_GetCriticalHitSetupStruct_CriticalHitSetup_1, enum class EValid CallFunc_GetCriticalHitSetupStruct_Paths_1, bool K2Node_SwitchEnum_CmpSuccess_3);
};

}


