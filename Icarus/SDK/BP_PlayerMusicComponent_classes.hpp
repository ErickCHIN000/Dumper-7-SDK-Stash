#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x9A (0x14A - 0xB0)
// BlueprintGeneratedClass BP_PlayerMusicComponent.BP_PlayerMusicComponent_C
class UBP_PlayerMusicComponent_C : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_IcarusPlayerCharacterSurvival_C*   Player;                                            // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeatherController_C*               WeatherController;                                 // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMusicSubsystemConfig                 Config;                                            // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	float                                        TimeCondition_UpdateFrequency;                     // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TimeCondition_DawnTime;                            // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TimeCondition_DayTime;                             // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TimeCondition_DuskTime;                            // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TimeCondition_NightTime;                           // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DropTimeCondition_UpdateFrequency;                 // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DropTimeCondition_TimeRunningOutTime;              // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DisasterCondition_UpdateFrequency;                 // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  FMODParam_FireIntensity;                           // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DisasterCondition_FireIntensityThreshold;          // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        PlayerStateCondition_LowHealthThreshold;           // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                CaveOverride;                                      // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          WeatherMusicUpdateTimerHandle;                     // 0x108(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	enum class EMusicConditionCombatState        CombatMusicState;                                  // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5546[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CombatStateCondition_UpdateFrequency;              // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CombatStateCondition_CombatStartThreshold;         // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CombatStateCondition_CombatStopThreshold;          // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EMusicConditionCombatState        ReplicatedMusicStateOverride;                      // 0x120(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5557[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ReplicatedThreatLevel;                             // 0x124(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FMusicQuestConditionsRowHandle        ReplicatedQuestCondition;                          // 0x128(0x18)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                        SmoothedThreatLevel;                               // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ThreatLevelUpdateFrequency;                        // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         PlayerIsOutOfBounds;                               // 0x148(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         WantsQuestUpdate;                                  // 0x149(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

	static class UClass* StaticClass();
	static class UBP_PlayerMusicComponent_C* GetDefaultObj();

	void GetBestQuestCondition(struct FMusicQuestConditionsRowHandle* QuestCondition, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AQuestManager* CallFunc_GetQuestManager_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<struct FQuestsRowHandle>& CallFunc_GetActiveQuestsData_OutActiveQuests, int32 CallFunc_Array_Length_ReturnValue, const struct FQuestSetup& CallFunc_GetQuestsStruct_Quests, enum class EValid CallFunc_GetQuestsStruct_Paths, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsRowHandleValid_ReturnValue);
	void OnRep_ReplicatedQuestCondition(class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void GetConditionFromTimeOfDay(float Time, enum class EMusicConditionTimeOfDay* MusicCondition, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue_2, bool CallFunc_Less_FloatFloat_ReturnValue_3);
	void UpdateOutOfBounds(class AIcarusPlayerCharacter* Player, bool OutOfBounds, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue);
	void Update_Combat_Music_State(int32 SmoothedThreatLevelRounded, bool CallFunc_NotEqual_ByteByte_ReturnValue, int32 CallFunc_Round_ReturnValue, bool CallFunc_Greater_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_ApplySmoothing_SmoothedValue, uint8 CallFunc_MakeLiteralByte_ReturnValue, uint8 CallFunc_BMax_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	void ApplySmoothing(float Value, int32 Target, float* SmoothedValue, float TempSmoothedValue, float TargetAsFloat, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue_1, float CallFunc_FInterpTo_ReturnValue);
	void OnRep_ReplicatedThreatLevel(int32 SmoothedThreatLevelRounded, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue);
	void SetCombatMusicState(enum class EMusicConditionCombatState State, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue);
	void UpdateThreatLevel(class UThreatAudioSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, const struct FThreatAudioResult& CallFunc_GetThreatLevel_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);
	void PlayRevivedEvent(class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue);
	void UpdateDisasterCondition(bool Temp_bool_Variable, enum class EMusicConditionDisaster Temp_byte_Variable, enum class EMusicConditionDisaster Temp_byte_Variable_1, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, float CallFunc_GetGlobalParameterValueByName_UserValue, float CallFunc_GetGlobalParameterValueByName_FinalValue, bool CallFunc_Greater_FloatFloat_ReturnValue, enum class EMusicConditionDisaster K2Node_Select_Default);
	void Update_Drop_Time_Condition(bool Temp_bool_Variable, enum class EMusicConditionDropTime Temp_byte_Variable, enum class EMusicConditionDropTime Temp_byte_Variable_1, bool CallFunc_GetIcarusGameStateSurvival_bValid, class AIcarusGameStateSurvival* CallFunc_GetIcarusGameStateSurvival_ReturnValue, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, int32 CallFunc_GetSessionRemainingSec_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, enum class EMusicConditionDropTime K2Node_Select_Default);
	void Update_Location_Condition(uint8 SelectedCondition, bool BiomeHasStorm, bool CallFunc_IsValid_ReturnValue, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_1, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_2, const struct FMusicLocationConditionsRowHandle& Temp_wildcard_Variable, const struct FIcarusBiome& CallFunc_GetBiomesStruct_Biomes, enum class EValid CallFunc_GetBiomesStruct_Paths, bool K2Node_SwitchEnum_CmpSuccess, const struct FBiomeAudioData& CallFunc_GetBiomeAudioDataStruct_BiomeAudioData, enum class EValid CallFunc_GetBiomeAudioDataStruct_Paths, bool K2Node_SwitchEnum_CmpSuccess_1);
	void Update_Weather_Condition(int32 EventTimeElapsed, enum class EMusicConditionWeather MostRecentMusicCondition, bool BiomeHasStorm, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_GetLevelTimeElapsedSec_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, enum class EValid CallFunc_GetActiveWeatherInfoForBiome_OutValidity, const struct FActiveWeatherInfo& CallFunc_GetActiveWeatherInfoForBiome_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FIcarusWeatherEvent& CallFunc_GetWeatherEventsStruct_WeatherEvents, enum class EValid CallFunc_GetWeatherEventsStruct_Paths, int32 CallFunc_Subtract_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, int32 CallFunc_Array_Length_ReturnValue, const struct FWeatherMusicCue& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	void Update_Time_Condition(class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, class UTimeOfDaySubsystem* CallFunc_GetWorldSubsystem_ReturnValue, float CallFunc_GetTimeRealtime_ReturnValue, enum class EMusicConditionTimeOfDay CallFunc_GetConditionFromTimeOfDay_MusicCondition);
	void Update_Player_State_Condition(class UActorState* ActorState, float NewHealth, enum class EMusicConditionPlayerState Temp_byte_Variable, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, int32 CallFunc_GetMaxHealth_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, enum class EMusicConditionPlayerState Temp_byte_Variable_1, bool Temp_bool_Variable, enum class EMusicConditionPlayerState Temp_byte_Variable_2, bool Temp_bool_Variable_1, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, enum class EMusicConditionPlayerState K2Node_Select_Default, enum class EMusicConditionPlayerState K2Node_Select_Default_1);
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void OnEnteredCave(class AActor* Cave);
	void OnExitedCave();
	void Server_ReadyForReplication();
	void ReceiveBeginPlay();
	void HandleQuestUpdated(class AQuest* Quest);
	void ExecuteUbergraph_BP_PlayerMusicComponent(int32 EntryPoint, bool CallFunc_IsLocallyControlled_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class ABP_WeatherController_C* CallFunc_GetActorOfClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, class UQuestNotificationSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, class UProspectSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_IsTestProspectActive_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, enum class EEndPlayReason K2Node_Event_EndPlayReason, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, class UOutOfBoundsSubsystem* CallFunc_GetWorldSubsystem_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_2, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_1, class ABP_IcarusPlayerControllerSurvival_C* CallFunc_GetBPIcarusPlayerController_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, bool CallFunc_IsValid_ReturnValue_2, class AActor* K2Node_CustomEvent_Cave, bool CallFunc_IsValid_ReturnValue_3, class AActor* CallFunc_GetOwner_ReturnValue, class UProspectSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_2, class ABP_IcarusPlayerCharacterSurvival_C* K2Node_DynamicCast_AsBP_Icarus_Player_Character_Survival, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasActiveProspect_ReturnValue, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsLocallyControlled_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_8, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_4, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_4, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_5, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_6, class UMusicSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_7, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_9, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_10, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_11, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_12, class AQuest* K2Node_CustomEvent_Quest, const struct FMusicQuestConditionsRowHandle& CallFunc_GetBestQuestCondition_QuestCondition);
};

}


