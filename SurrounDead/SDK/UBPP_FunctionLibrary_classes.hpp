#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass UBPP_FunctionLibrary.UBPP_FunctionLibrary_C
class UUBPP_FunctionLibrary_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UUBPP_FunctionLibrary_C* GetDefaultObj();

	void Server_Travel(TSoftObjectPtr<class UWorld> Level, class UObject* __WorldContext, const class FString& CallFunc_Conv_SoftObjectReferenceToString_ReturnValue, int32 CallFunc_FindSubstring_ReturnValue, int32 CallFunc_Len_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void Random_Point_In_Hollow_Sphere(const struct FVector& Origin_Vector, double Outer_Radius, double Inner_Radius, class UObject* __WorldContext, struct FVector* Random_Point, const struct FRotator& CallFunc_RandomRotator_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void Get_Nearest_Sphere_Point(const struct FVector& Point, const struct FVector& Sphere_Origin, double Sphere_Radius, class UObject* __WorldContext, struct FVector* Return_value, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void Is_Sphere_Completely_In_Sphere(const struct FVector& Point__Sphere_, double Point_Radius, const struct FVector& Sphere_Origin, double Sphere_Radius, class UObject* __WorldContext, bool* Return_value, double CallFunc_Vector_Distance_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue);
	void Is_Sphere_Touching_Sphere(const struct FVector& Sphere_1, double Radius_1, const struct FVector& Sphere_2, double Radius_2, class UObject* __WorldContext, bool* Return_value, double CallFunc_Vector_Distance_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue);
	void Is_Point_In_Sphere(const struct FVector& Point, const struct FVector& Sphere_Origin, double Sphere_Radius, class UObject* __WorldContext, bool* Return_value, double CallFunc_Vector_Distance_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue);
	void Object_Array_To_Display_Name_Array(TArray<class UObject*>& Input_Object, class UObject* __WorldContext, TArray<class FString>* Output_Display_Name, const TArray<class FString>& Local_Display_Name, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UObject* CallFunc_Array_Get_Item, const class FString& CallFunc_GetDisplayName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Get_Trace_End__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, struct FVector* TraceEnd, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Trace_Start__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, struct FVector* TraceStart, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Face_Index__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, int32* FaceIndex, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Element_Index__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, int32* ElementIndex, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Hit_Item__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, int32* HitItem, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Hit_Bone_Name__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, class FName* HitBoneName, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Hit_Component__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, class UPrimitiveComponent** HitComponent, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Hit_Actor__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, class AActor** HitActor, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Phys_Mat__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, class UPhysicalMaterial** PhysMat, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Impact_Normal__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, struct FVector* ImpactNormal, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Normal__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, struct FVector* Normal, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Impact_Point__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, struct FVector* ImpactPoint, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Location__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, struct FVector* Location, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Distance__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, double* Distance, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, double K2Node_FunctionResult_Distance_ImplicitCast);
	void Get_Time__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, double* Time, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, double K2Node_FunctionResult_Time_ImplicitCast);
	void Get_Initial_Overlap__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, bool* Initial_Overlap, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Get_Is_Blocking_Hit__Hit_(const struct FHitResult& In_Hit_Result, class UObject* __WorldContext, bool* Blocking_Hit, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void Actor_Array_To_Scale_Array(TArray<class AActor*>& Input_Actor, class UObject* __WorldContext, TArray<struct FVector>* Output_Scales, const TArray<struct FVector>& Local_Vector, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, const struct FVector& CallFunc_GetActorScale3D_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Actor_Array_To_Transform_Array(TArray<class AActor*>& Input_Actor, class UObject* __WorldContext, TArray<struct FTransform>* Output_Transform, const TArray<struct FTransform>& Local_Transform, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, const struct FTransform& CallFunc_GetTransform_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Actor_Array_To_Rotator_Array(TArray<class AActor*>& Input_Actor, class UObject* __WorldContext, TArray<struct FRotator>* Output_Rotator, const TArray<struct FRotator>& Local_Rotator, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Multi_Weapon_Line_Trace_By_Channel(const struct FVector& Start, double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery TraceC_hannel, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<struct FHitResult>& CallFunc_Multi_Noise_Line_Trace_By_Channel_OutHits, bool CallFunc_Multi_Noise_Line_Trace_By_Channel_ReturnValue);
	void Multi_Weapon_Line_Trace_By_Profile(const struct FVector& Start, double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, class FName ProfileName, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<struct FHitResult>& CallFunc_Multi_Noise_Line_Trace_By_Profile_OutHits, bool CallFunc_Multi_Noise_Line_Trace_By_Profile_ReturnValue);
	void Weapon_Line_Trace_By_Profile(const struct FVector& Start, double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, class FName ProfileName, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* Out_Hit, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_Noise_Line_Trace_By_Profile_OutHit, bool CallFunc_Noise_Line_Trace_By_Profile_ReturnValue);
	void Multi_Weapon_Line_Trace_For_Objects(const struct FVector& Start, double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, TArray<enum class EObjectTypeQuery>& ObjectTypes, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<struct FHitResult>& CallFunc_Multi_Noise_Line_Trace_For_Objects_OutHits, bool CallFunc_Multi_Noise_Line_Trace_For_Objects_ReturnValue);
	void Weapon_Line_Trace_For_Objects(const struct FVector& Start, double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, TArray<enum class EObjectTypeQuery>& ObjectTypes, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* Out_Hit, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_Noise_Line_Trace_For_Objects_OutHit, bool CallFunc_Noise_Line_Trace_For_Objects_ReturnValue);
	void Camera_Line_Trace_By_Profile(double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, class FName ProfileName, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* Out_Hit, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_Noise_Line_Trace_By_Profile_OutHit, bool CallFunc_Noise_Line_Trace_By_Profile_ReturnValue);
	void Multi_Camera_Line_Trace_By_Profile(double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, class FName ProfileName, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<struct FHitResult>& CallFunc_Multi_Noise_Line_Trace_By_Profile_OutHits, bool CallFunc_Multi_Noise_Line_Trace_By_Profile_ReturnValue);
	void Multi_Camera_Line_Trace_for_Objects(double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, TArray<enum class EObjectTypeQuery>& ObjectTypes, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<struct FHitResult>& CallFunc_Multi_Noise_Line_Trace_For_Objects_OutHits, bool CallFunc_Multi_Noise_Line_Trace_For_Objects_ReturnValue);
	void Camera_Line_Trace_For_Objects(double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, TArray<enum class EObjectTypeQuery>& ObjectTypes, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* Out_Hit, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_Noise_Line_Trace_For_Objects_OutHit, bool CallFunc_Noise_Line_Trace_For_Objects_ReturnValue);
	bool Multi_Noise_Line_Trace_By_Profile(const struct FVector& Start, const struct FVector& End, const struct FUBPP_Struct_Noise& Noise, class FName ProfileName, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, TArray<struct FHitResult>& CallFunc_LineTraceMultiByProfile_OutHits, bool CallFunc_LineTraceMultiByProfile_ReturnValue);
	void Multi_Camera_Line_Trace_By_Channel(double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery Trace_Channel, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<struct FHitResult>& CallFunc_Multi_Noise_Line_Trace_By_Channel_OutHits, bool CallFunc_Multi_Noise_Line_Trace_By_Channel_ReturnValue);
	bool Noise_Line_Trace_By_Profile(const struct FVector& Start, const struct FVector& End, const struct FUBPP_Struct_Noise& Noise, class FName ProfileName, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* OutHit, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_LineTraceSingleByProfile_OutHit, bool CallFunc_LineTraceSingleByProfile_ReturnValue);
	bool Multi_Noise_Line_Trace_By_Channel(const struct FVector& Start, const struct FVector& End, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery TraceChannel, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, TArray<struct FHitResult>& CallFunc_LineTraceMulti_OutHits, bool CallFunc_LineTraceMulti_ReturnValue);
	bool Multi_Noise_Line_Trace_For_Objects(const struct FVector& Start, const struct FVector& End, const struct FUBPP_Struct_Noise& Noise, TArray<enum class EObjectTypeQuery>& ObjectTypes, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* OutHits, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, TArray<struct FHitResult>& CallFunc_LineTraceMultiForObjects_OutHits, bool CallFunc_LineTraceMultiForObjects_ReturnValue);
	bool Noise_Line_Trace_For_Objects(const struct FVector& Start, const struct FVector& End, const struct FUBPP_Struct_Noise& Noise, TArray<enum class EObjectTypeQuery>& ObjectTypes, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* OutHit, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit, bool CallFunc_LineTraceSingleForObjects_ReturnValue);
	void Len__Text_(class FText Input_Text, class UObject* __WorldContext, int32* Return_value, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_Len_ReturnValue);
	void Apply_Points_Drag(TArray<struct FVector>& Array, int32 At_Location, const struct FVector& Strength, int32 Radius, class UObject* __WorldContext, TArray<struct FVector>* Array1, const struct FVector& Last_Point, const struct FVector& First_Point, const TArray<struct FVector>& Local, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, const struct FVector& CallFunc_Array_Get_Item, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, const struct FVector& CallFunc_Array_Get_Item_1, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_Array_Get_Item_2, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_3, bool CallFunc_InRange_IntInt_ReturnValue, double CallFunc_Multiply_IntFloat_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Slerp__Vector__Return_Value, const struct FVector& CallFunc_SelectVector_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Slerp__Vector_(const struct FVector& Start, const struct FVector& End, const struct FVector& Orient, double Alpha, class UObject* __WorldContext, struct FVector* Return_value, const struct FVector& CallFunc_VLerp_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue_2, float CallFunc_VLerp_Alpha_ImplicitCast, float CallFunc_VLerp_Alpha_ImplicitCast_1, float CallFunc_VLerp_Alpha_ImplicitCast_2);
	void Set_Z__Vector_3D_(struct FVector& Vector_Ref, double New_Z, class UObject* __WorldContext, struct FVector* Result, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void Set_Y__Vector_3D_(struct FVector& Vector_Ref, double New_Y, class UObject* __WorldContext, struct FVector* Result, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void Set_X__Vector_3D_(struct FVector& Vector_Ref, double New_X, class UObject* __WorldContext, struct FVector* Result, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void Get_Actor_Down_Vector(class AActor* Target, class UObject* __WorldContext, struct FVector* Return_value, const struct FVector& CallFunc_GetActorUpVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	void Print_Name(class FName In_Name, bool Print_To_Screen, bool Print_To_Log, const struct FLinearColor& Text_Color, double Duration, class UObject* __WorldContext, const class FString& CallFunc_Conv_NameToString_ReturnValue, float CallFunc_PrintString_Duration_ImplicitCast);
	void Get_Actor_Backward_Vector(class AActor* Target, class UObject* __WorldContext, struct FVector* Return_value, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	void Get_Actor_Left_Vector(class AActor* Target, class UObject* __WorldContext, struct FVector* Return_value, const struct FVector& CallFunc_GetActorRightVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	void Apply_Points_Drag__Linear_(TArray<struct FVector>& Array, int32 At_Location, const struct FVector& Strength, int32 Radius, class UObject* __WorldContext, TArray<struct FVector>* Array1, const TArray<struct FVector>& Local, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_3, int32 CallFunc_Subtract_IntInt_ReturnValue_4, int32 CallFunc_Subtract_IntInt_ReturnValue_5, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_6, int32 CallFunc_Subtract_IntInt_ReturnValue_7, double CallFunc_Multiply_IntFloat_ReturnValue, double CallFunc_Multiply_IntFloat_ReturnValue_1, bool CallFunc_InRange_IntInt_ReturnValue, double CallFunc_SelectFloat_ReturnValue, double CallFunc_SelectFloat_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, float CallFunc_VLerp_Alpha_ImplicitCast);
	void Get_Alignment(class UWidget* Widget, class UObject* __WorldContext, struct FVector2D* Return_Value_Vector2D, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FVector2D& CallFunc_GetAlignment_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Auto_Size(class UWidget* Widget, class UObject* __WorldContext, bool* Return_Value_Auto_Size, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_GetAutoSize_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Layout(class UWidget* Widget, class UObject* __WorldContext, struct FAnchorData* Return_Value_Layout, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FAnchorData& CallFunc_GetLayout_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Offsets(class UWidget* Widget, class UObject* __WorldContext, struct FMargin* Return_Value_Offsets, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FMargin& CallFunc_GetOffsets_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Position(class UWidget* Widget, class UObject* __WorldContext, struct FVector2D* Return_Value_Position, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FVector2D& CallFunc_GetPosition_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Row_Span(class UWidget* Widget, class UObject* __WorldContext, int32* Return_Value_Row_Span, bool* Return_value, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Column_Span(class UWidget* Widget, class UObject* __WorldContext, int32* Return_Value_ZOrder, bool* Return_value, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Nudge(class UWidget* Widget, class UObject* __WorldContext, struct FVector2D* Return_Value_Nudge, bool* Return_value, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Layer(class UWidget* Widget, class UObject* __WorldContext, int32* Return_Value_Layer, bool* Return_value, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Fill_Span_When_Less_Than(class UWidget* Widget, class UObject* __WorldContext, double* Return_Value_Fill_Span_when_Less_Than, bool* Return_value, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, double K2Node_FunctionResult_Return_Value_Fill_Span_when_Less_Than_ImplicitCast);
	void Get_Fill_Empty_Space(class UWidget* Widget, class UObject* __WorldContext, bool* Return_Value_Fill_Empty_Space, bool* Return_value, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Column(class UWidget* Widget, class UObject* __WorldContext, int32* Return_Value_Column, bool* Return_value, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void Get_Row(class UWidget* Widget, class UObject* __WorldContext, int32* Return_Value_Row, bool* Return_value, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void Get_Size__Slate_Child_Size_(class UWidget* Widget, class UObject* __WorldContext, struct FSlateChildSize* Return_Value_Size, bool* Return_value, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void Get_Size__Vector2D_(class UWidget* Widget, class UObject* __WorldContext, struct FVector2D* Return_Value_Size, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FVector2D& CallFunc_GetSize_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Anchors(class UWidget* Widget, class UObject* __WorldContext, struct FAnchors* Return_Value_Anchors, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FAnchors& CallFunc_GetAnchors_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_ZOrder(class UWidget* Widget, class UObject* __WorldContext, int32* Return_Value_ZOrder, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, int32 CallFunc_GetZOrder_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Get_Vertical_Alignment(class UWidget* Widget, class UObject* __WorldContext, enum class EVerticalAlignment* Return_Value_Vertical_Alignment, bool* Return_value, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue, class USizeBoxSlot* CallFunc_SlotAsSizeBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class UWidgetSwitcherSlot* CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class UScaleBoxSlot* CallFunc_SlotAsScaleBoxSlot_ReturnValue, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_IsValid_ReturnValue_9);
	void Get_Horizontal_Alignment(class UWidget* Widget, class UObject* __WorldContext, enum class EHorizontalAlignment* Return_Value_Horizontal_Alignment, bool* Return_value, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue, class USizeBoxSlot* CallFunc_SlotAsSizeBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class UWidgetSwitcherSlot* CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class UScaleBoxSlot* CallFunc_SlotAsScaleBoxSlot_ReturnValue, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_IsValid_ReturnValue_9);
	void Get_Padding(class UWidget* Widget, class UObject* __WorldContext, struct FMargin* Return_Value_Padding, bool* Return_value, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue, class USizeBoxSlot* CallFunc_SlotAsSizeBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, class UWidgetSwitcherSlot* CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7);
	void Set_Alignment(class UWidget* Widget, const struct FVector2D& InAlignment, class UObject* __WorldContext, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Auto_Size(class UWidget* Widget, bool InbAutoSize, class UObject* __WorldContext, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Layout(class UWidget* Widget, struct FAnchorData& InLayoutData, class UObject* __WorldContext, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Offsets(class UWidget* Widget, const struct FMargin& InOffset, class UObject* __WorldContext, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Position(class UWidget* Widget, const struct FVector2D& InPosition, class UObject* __WorldContext, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Row_Span(class UWidget* Widget, int32 InRowSpan, class UObject* __WorldContext, bool* Return_value, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Column_Span(class UWidget* Widget, int32 InColumnSpan, class UObject* __WorldContext, bool* Return_value, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Nudge(class UWidget* Widget, const struct FVector2D& InNudge, class UObject* __WorldContext, bool* Return_value, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Layer(class UWidget* Widget, int32 InLayer, class UObject* __WorldContext, bool* Return_value, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Fill_Span_When_Less_Than(class UWidget* Widget, double InFillSpanWhenLessThan, class UObject* __WorldContext, bool* Return_value, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_SetFillSpanWhenLessThan_InFillSpanWhenLessThan_ImplicitCast);
	void Set_Fill_Empty_Space(class UWidget* Widget, bool InbFillEmptySpace, class UObject* __WorldContext, bool* Return_value, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Column(class UWidget* Widget, int32 InColumn, class UObject* __WorldContext, bool* Return_value, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void Set_Row(class UWidget* Widget, int32 InRow, class UObject* __WorldContext, bool* Return_value, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void Set_Size__Slate_Child_Size_(class UWidget* Widget, const struct FSlateChildSize& InSize, class UObject* __WorldContext, bool* Return_value, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void Set_Size__Vector2D_(class UWidget* Widget, const struct FVector2D& InSize, class UObject* __WorldContext, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Anchors(class UWidget* Widget, const struct FAnchors& InAnchors, class UObject* __WorldContext, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_ZOrder(class UWidget* Widget, int32 InZOrder, class UObject* __WorldContext, bool* Return_value, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Set_Vertical_Alignment(class UWidget* Widget, enum class EVerticalAlignment InVerticalAlignment, class UObject* __WorldContext, bool* Return_value, class UWidgetSwitcherSlot* CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class USizeBoxSlot* CallFunc_SlotAsSizeBoxSlot_ReturnValue, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class UScaleBoxSlot* CallFunc_SlotAsScaleBoxSlot_ReturnValue, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_IsValid_ReturnValue_9, class UBorderSlot* CallFunc_SlotAsBorderSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_10);
	void Set_Horizontal_Alignment(class UWidget* Widget, enum class EHorizontalAlignment InHorizontalAlignment, class UObject* __WorldContext, bool* Return_value, class UWidgetSwitcherSlot* CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class USizeBoxSlot* CallFunc_SlotAsSizeBoxSlot_ReturnValue, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class UScaleBoxSlot* CallFunc_SlotAsScaleBoxSlot_ReturnValue, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_IsValid_ReturnValue_9, class UBorderSlot* CallFunc_SlotAsBorderSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_10);
	void Set_Padding(class UWidget* Widget, const struct FMargin& InPadding, class UObject* __WorldContext, bool* Return_value, class UWidgetSwitcherSlot* CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue, class UWrapBoxSlot* CallFunc_SlotAsWrapBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, class USizeBoxSlot* CallFunc_SlotAsSizeBoxSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, class UGridSlot* CallFunc_SlotAsGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, class UBorderSlot* CallFunc_SlotAsBorderSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue_8);
	void Generate_Points_On_Line(const struct FVector& Start_Position, const struct FVector& End_Position, int32 Count_To_Spawn_Between, class UObject* __WorldContext, TArray<struct FVector>* Return_Points, const TArray<int32>& Points_To_Change, const TArray<struct FVector>& All_Actors, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, int32 Temp_int_Variable, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Multiply_IntFloat_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2, float CallFunc_VLerp_Alpha_ImplicitCast);
	void Is_Facing_Wall(class AActor* Actor, double Max_Distance_To_Wall, bool Get_More_Informations__Height_, double Max_Height_To_Check, enum class ETraceTypeQuery TraceChannel, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, bool* Return_value, struct FVector* Wall_Height_Point, int32 Times, const struct FVector& Last_Blocking_Hit_Height, bool Active_, double HeightSteps, const struct FVector& TempEndHeight, const struct FVector& TempStartHeight, double CallFunc_Divide_DoubleDouble_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_BreakVector_X_3, double CallFunc_BreakVector_Y_3, double CallFunc_BreakVector_Z_3, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_1, double CallFunc_BreakVector_X_4, double CallFunc_BreakVector_Y_4, double CallFunc_BreakVector_Z_4, double CallFunc_BreakVector_X_5, double CallFunc_BreakVector_Y_5, double CallFunc_BreakVector_Z_5, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_2, double CallFunc_Add_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_2, double CallFunc_Add_DoubleDouble_ReturnValue_3, const struct FVector& CallFunc_MakeVector_ReturnValue_4, const struct FVector& CallFunc_MakeVector_ReturnValue_5, int32 Temp_int_Variable, const struct FHitResult& CallFunc_LineTraceSingle_OutHit_1, bool CallFunc_LineTraceSingle_ReturnValue_1, bool CallFunc_BreakHitResult_bBlockingHit_1, bool CallFunc_BreakHitResult_bInitialOverlap_1, float CallFunc_BreakHitResult_Time_1, float CallFunc_BreakHitResult_Distance_1, const struct FVector& CallFunc_BreakHitResult_Location_1, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_1, const struct FVector& CallFunc_BreakHitResult_Normal_1, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_1, class AActor* CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_1, class FName CallFunc_BreakHitResult_HitBoneName_1, class FName CallFunc_BreakHitResult_BoneName_1, int32 CallFunc_BreakHitResult_HitItem_1, int32 CallFunc_BreakHitResult_ElementIndex_1, int32 CallFunc_BreakHitResult_FaceIndex_1, const struct FVector& CallFunc_BreakHitResult_TraceStart_1, const struct FVector& CallFunc_BreakHitResult_TraceEnd_1);
	bool Meele_Capsule_Trace_By_Channel__First_Person_(class AActor* Player_Actor, int32 Player_Index, double Hitbox_Forward_Offset, double Hitbox_Radius, double Hitbox_Half_Height, bool TraceComplex, enum class ETraceTypeQuery TraceChannel, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* OutHit, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_GetCameraLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_CapsuleTraceSingle_OutHit, bool CallFunc_CapsuleTraceSingle_ReturnValue, float CallFunc_CapsuleTraceSingle_Radius_ImplicitCast, float CallFunc_CapsuleTraceSingle_HalfHeight_ImplicitCast);
	bool _Top_Down_(class USkeletalMeshComponent* Skeletal_Mesh, class FName Head_Socket_Name, bool _Skeletal_Mesh_, const struct FVector& Head_Location, double Hitbox_Forward_Offset, double Hitbox_Radius, double Hitbox_Half_Height, bool bTraceComplex, enum class ETraceTypeQuery TraceChannel, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* OutHit, class AActor* CallFunc_GetOwner_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_1, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_CapsuleTraceSingle_OutHit, bool CallFunc_CapsuleTraceSingle_ReturnValue, float CallFunc_CapsuleTraceSingle_Radius_ImplicitCast, float CallFunc_CapsuleTraceSingle_HalfHeight_ImplicitCast);
	void Generate_Random_Byte_Array_From_Stream(int32 Array_Length, uint8 Range_Max, const struct FRandomStream& Stream, class UObject* __WorldContext, TArray<uint8>* Random_Array, const TArray<uint8>& Local_Random_Array, uint8 CallFunc_Random_Byte_In_Range_From_Stream_Return_Value, int32 Temp_int_Variable, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void Generate_Random_Byte_Array(int32 Array_Length, uint8 Range_Max, class UObject* __WorldContext, TArray<uint8>* Random_Array, const TArray<uint8>& Local_Random_Array, uint8 CallFunc_Random_Byte_In_Range_Return_Value, int32 Temp_int_Variable, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void Random_Vector_In_Range_from_Stream(const struct FVector& Min, const struct FVector& Max, const struct FRandomStream& Stream, class UObject* __WorldContext, struct FVector* Return_value, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, float CallFunc_RandomFloatInRangeFromStream_ReturnValue, float CallFunc_RandomFloatInRangeFromStream_ReturnValue_1, float CallFunc_RandomFloatInRangeFromStream_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue, float CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast, float CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1, float CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_2, float CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast, float CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1, float CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_2, double CallFunc_MakeVector_X_ImplicitCast, double CallFunc_MakeVector_Z_ImplicitCast, double CallFunc_MakeVector_Y_ImplicitCast);
	void Random_Vector_In_Range(const struct FVector& Min, const struct FVector& Max, class UObject* __WorldContext, struct FVector* Return_value, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_1, double CallFunc_RandomFloatInRange_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void Random_Point_on_Spline(class USplineComponent* Spline_Component, class UObject* __WorldContext, struct FVector* Random_Point, float CallFunc_GetSplineLength_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, const struct FVector& CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue, double CallFunc_RandomFloatInRange_Max_ImplicitCast, float CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast);
	void Byte_Array_to_String_Array(TArray<uint8>& Input_Array, class UObject* __WorldContext, TArray<class FString>* Return_Array, const TArray<class FString>& Local_Float_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, uint8 CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_ByteToString_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	bool Noise_Line_Trace_By_Channel(const struct FVector& Start, const struct FVector& End, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery TraceChannel, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* OutHit, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value, const struct FVector& CallFunc_Random_Vector_In_Range_Return_Value_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue);
	void Equal__Stream_(const struct FRandomStream& A, const struct FRandomStream& B, class UObject* __WorldContext, bool* Return_value, int32 CallFunc_BreakRandomStream_InitialSeed, int32 CallFunc_BreakRandomStream_InitialSeed_1, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void Equal__Color_(const struct FColor& A, const struct FColor& B, class UObject* __WorldContext, bool* Return_value, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	void Equal__Slate_Color_(const struct FSlateColor& A, const struct FSlateColor& B, class UObject* __WorldContext, bool* Return_value, bool CallFunc_EqualEqual_LinearColorLinearColor_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void Random_Byte_From_Stream(uint8 Max, const struct FRandomStream& Stream, class UObject* __WorldContext, uint8* Return_value, uint8 CallFunc_Random_Byte_In_Range_From_Stream_Return_Value);
	void Random_Byte_In_Range_From_Stream(uint8 Min, uint8 Max, const struct FRandomStream& Stream, class UObject* __WorldContext, uint8* Return_value, int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue_1, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue);
	uint8 Random_Byte_Max_From_Stream(const struct FRandomStream& Stream, class UObject* __WorldContext, uint8 CallFunc_Max_Byte_Max_Int, uint8 CallFunc_Random_Byte_In_Range_From_Stream_Return_Value);
	void Byte_Array_to_Int64_Array(TArray<uint8>& Input_Array, class UObject* __WorldContext, TArray<int64>* Return_Array, const TArray<int64>& Local_Float_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, uint8 CallFunc_Array_Get_Item, int64 CallFunc_Byte_To_Integer64_Return_Value, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Byte_Array_to_Int_Array(TArray<uint8>& Input_Array, class UObject* __WorldContext, TArray<int32>* Return_Array, const TArray<int32>& Local_Float_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, uint8 CallFunc_Array_Get_Item, int32 CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Byte_Array_to_Float_Array(TArray<uint8>& Input_Array, class UObject* __WorldContext, TArray<double>* Return_Array, const TArray<double>& Local_Float_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, uint8 CallFunc_Array_Get_Item, double CallFunc_Conv_ByteToDouble_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void To_Float__Int_64_(int64 Value, class UObject* __WorldContext, double* Return_value, class FText CallFunc_Integer64_To_Text_Return_Text, const class FString& CallFunc_Conv_TextToString_ReturnValue, double CallFunc_Conv_StringToDouble_ReturnValue);
	void GetPercentage__Int64_(int64 Value, double Percentage, class UObject* __WorldContext, int64* Return_value, double CallFunc_To_Float__Int_64__Return_Value, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, int64 CallFunc_FTrunc64_ReturnValue);
	void Smaller_Than_or_Zero__Int64_(int64 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_LessEqual_Int64Int64_ReturnValue);
	void Bigger_Than_or_Zero__Int64_(int64 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_GreaterEqual_Int64Int64_ReturnValue);
	void Smaller_Than_Zero__Int64_(int64 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_Less_Int64Int64_ReturnValue);
	void Bigger_Than_Zero__Int64_(int64 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_Greater_Int64Int64_ReturnValue);
	void Equals_Not_Zero__Int64_(int64 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_NotEqual_Int64Int64_ReturnValue);
	void Equals_Zero__Int64_(int64 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_EqualEqual_Int64Int64_ReturnValue);
	void Reverse_Boolean_Array(TArray<bool>& Input, class UObject* __WorldContext, TArray<bool>* Return_Array, const TArray<bool>& Local_Input_Array);
	void Reverse_Actor_Array(TArray<class AActor*>& Input, class UObject* __WorldContext, TArray<class AActor*>* Return_Array, const TArray<class AActor*>& Local_Input_Array);
	void Reverse_String_Array(TArray<class FString>& Input, class UObject* __WorldContext, TArray<class FString>* Return_Array, const TArray<class FString>& Local_Input_Array);
	void Equals_Not_Max__Byte_(uint8 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_NotEqual_ByteByte_ReturnValue);
	bool Equals_Max__Byte_(uint8 Input_Value, class UObject* __WorldContext, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void Actor_Array_Add(TArray<class AActor*>& Input_Array, class AActor* New_Item, class UObject* __WorldContext, TArray<class AActor*>* Return_Array, int32* New_Length, const TArray<class AActor*>& Local_Input_Array, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void String_Array_Add(TArray<class FString>& Input_Array, const class FString& New_Item, class UObject* __WorldContext, TArray<class FString>* Return_Array, int32* New_Length, const TArray<class FString>& Local_Input_Array, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void Vector_Array_Add(TArray<struct FVector>& Input_Array, const struct FVector& New_Item, class UObject* __WorldContext, TArray<struct FVector>* Return_Array, int32* New_Length, const TArray<struct FVector>& Local_Input_Array, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void Sort_Vectors_By_Distance__Low_To_High_(const struct FVector& Origin_Location, TArray<struct FVector>& All_Other_Locations, class UObject* __WorldContext, TArray<struct FVector>* Sorted_Array, TArray<double>* Distances, const TArray<double>& LocalDistanceArray, const TArray<struct FVector>& LocalSortetArray, const TArray<struct FVector>& LocalVectorArray, const struct FVector& CallFunc_Get_Farthest_Vector_FarthestVector, double CallFunc_Get_Farthest_Vector_Distance, int32 CallFunc_Get_Farthest_Vector_Index, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_Get_Nearest_Vector_NearestVector, double CallFunc_Get_Nearest_Vector_Distance, int32 CallFunc_Get_Nearest_Vector_Index, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1);
	void Sort_Vectors_By_Distance__High_To_Low_(const struct FVector& Origin_Location, TArray<struct FVector>& All_Other_Locations, class UObject* __WorldContext, TArray<struct FVector>* Sorted_Array, TArray<double>* Distances, const TArray<struct FVector>& LocalSortetArray, const TArray<struct FVector>& LocalVectorArray, const TArray<double>& LocalDistanceArray, const struct FVector& CallFunc_Get_Nearest_Vector_NearestVector, double CallFunc_Get_Nearest_Vector_Distance, int32 CallFunc_Get_Nearest_Vector_Index, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_Get_Farthest_Vector_FarthestVector, double CallFunc_Get_Farthest_Vector_Distance, int32 CallFunc_Get_Farthest_Vector_Index, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1);
	void Int64_Array_Add(TArray<int64>& Input_Array, int64 New_Item, class UObject* __WorldContext, TArray<int64>* Return_Array, int32* New_Length, const TArray<int64>& Local_Input_Array, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void Half__Int64_(int64 Value, class UObject* __WorldContext, int64* Return_value, int64 CallFunc_Divide_Int64Int64_ReturnValue);
	void Double__Int64_(int64 Value, class UObject* __WorldContext, int64* Return_value, int64 CallFunc_Multiply_Int64Int64_ReturnValue);
	void Minus_One__Int64_(int64 Value, class UObject* __WorldContext, int64* Return_value, int64 CallFunc_Subtract_Int64Int64_ReturnValue);
	void Plus_One__Int64_(int64 Value, class UObject* __WorldContext, int64* Return_value, int64 CallFunc_Add_Int64Int64_ReturnValue);
	void Equals_Not_Zero__Byte_(uint8 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_NotEqual_ByteByte_ReturnValue);
	void Equals_Zero__Byte_(uint8 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void Half__Byte_(uint8 Value, class UObject* __WorldContext, uint8* Return_value, uint8 CallFunc_Divide_ByteByte_ReturnValue);
	void Double__Byte_(uint8 Value, class UObject* __WorldContext, uint8* Return_value, uint8 CallFunc_Multiply_ByteByte_ReturnValue);
	void Minus_One__Byte_(uint8 Value, class UObject* __WorldContext, uint8* Return_value, uint8 CallFunc_Subtract_ByteByte_ReturnValue);
	void Plus_One__Byte_(uint8 Value, class UObject* __WorldContext, uint8* Return_value, uint8 CallFunc_Add_ByteByte_ReturnValue);
	void Reverse_Int64_Array(TArray<int64>& Input, class UObject* __WorldContext, TArray<int64>* Return_Array, const TArray<int64>& Local_Input_Array);
	void Remove_All_Ints64_Not_In_Range(TArray<int64>& Input_Array, int64 Min, int64 Max, class UObject* __WorldContext, TArray<int64>* Return_value, const TArray<int64>& Local_Int64_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int64 CallFunc_Array_Get_Item, bool CallFunc_InRange_Int64Int64_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Minus_Absolute__Int64_(int64 Value, class UObject* __WorldContext, int64* Return_value, int64 CallFunc_Abs_Int64_ReturnValue, int64 CallFunc_Multiply_Int64Int64_ReturnValue);
	void Byte_Array_Add(TArray<uint8>& Input_Array, uint8 New_Item, class UObject* __WorldContext, TArray<uint8>* Return_Array, int32* New_Length, const TArray<uint8>& Local_Input_Array, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void Reverse_Byte_Array(TArray<uint8>& Input, class UObject* __WorldContext, TArray<uint8>* Return_Array, const TArray<uint8>& Local_Input_Array);
	void Remove_Not_Unique_Integers64(TArray<int64>& Input_Array, class UObject* __WorldContext, TArray<int64>* Return_value, const TArray<int64>& UnqiueArray, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int64 CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void InRange__Byte_(uint8 Value, uint8 Min, uint8 Max, bool Inclusive_Min, bool Inclusive_Max, class UObject* __WorldContext, bool* Return_value, const TArray<struct FVector>& Local_Int_Array, int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue_1, int32 CallFunc_Conv_ByteToInt_ReturnValue_2, bool CallFunc_InRange_IntInt_ReturnValue);
	void Remove_All_Bytes_Not_In_Range(TArray<uint8>& Input_Array, uint8 Min, uint8 Max, class UObject* __WorldContext, TArray<uint8>* Return_value, const TArray<uint8>& Local_Int_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, uint8 CallFunc_Array_Get_Item, bool CallFunc_InRange__Byte__Return_Value, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Remove_Not_Unique_Bytes(TArray<uint8>& Input_Array, class UObject* __WorldContext, TArray<uint8>* Return_value, const TArray<uint8>& UnqiueArray, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, uint8 CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void Append_Integer64_Arrays(TArray<int64>& Int_Array_A, TArray<int64>& Int_Array_B, class UObject* __WorldContext, TArray<int64>* Return_Array, int32* Length, const TArray<int64>& Local_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int64 CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void Append_Byte_Arrays(TArray<uint8>& Int_Array_A, TArray<uint8>& Int_Array_B, class UObject* __WorldContext, TArray<uint8>* Return_Array, int32* Length, const TArray<uint8>& Local_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, uint8 CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void Random_Byte_In_Range(uint8 Min, uint8 Max, class UObject* __WorldContext, uint8* Return_value, int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue_1, int32 CallFunc_RandomIntegerInRange_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue);
	void Reverse_Vector_Array(TArray<struct FVector>& Input, class UObject* __WorldContext, TArray<struct FVector>* Return_Array, const TArray<struct FVector>& Local_Input_Array);
	void Remove_Not_Unique_Vectors(TArray<struct FVector>& Input_Vector_Array, class UObject* __WorldContext, TArray<struct FVector>* Return_value, const TArray<struct FVector>& Local_Unique_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void Remove_All_Vectors_Not_In_Range(TArray<struct FVector>& Input_Array, const struct FVector& Min, const struct FVector& Max, class UObject* __WorldContext, TArray<struct FVector>* Return_value, const TArray<struct FVector>& Local_Int_Array, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_Array_Get_Item, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue_1, bool CallFunc_InRange_FloatFloat_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void Int_Array_Add(TArray<int32>& Input_Array, int32 New_Item, class UObject* __WorldContext, TArray<int32>* Return_Array, int32* New_Length, const TArray<int32>& Local_Input_Array, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void Byte_To_Integer(uint8 Value, class UObject* __WorldContext, int32* Return_value, double CallFunc_Conv_ByteToDouble_ReturnValue, int32 CallFunc_Round_ReturnValue);
	void Byte_To_Integer64(uint8 Value, class UObject* __WorldContext, int64* Return_value, double CallFunc_Conv_ByteToDouble_ReturnValue, int64 CallFunc_Round64_ReturnValue);
	void Invert_Integer64(int64 Value, class UObject* __WorldContext, int64* Return_value, int64 CallFunc_Multiply_Int64Int64_ReturnValue);
	int32 Random_Integer_Max_From_Stream(bool And_Min_, const struct FRandomStream& Stream, class UObject* __WorldContext, bool CallFunc_RandomBoolFromStream_ReturnValue, int32 CallFunc_Max_Int_Max_Int, int32 CallFunc_RandomIntegerFromStream_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue_1);
	void Float_Array_Add(TArray<double>& Input_Array, double New_Item, class UObject* __WorldContext, TArray<double>* Return_Array, int32* New_Length, const TArray<double>& Local_Input_Array, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void Append_Boolean_Arrays(TArray<bool>& Actor_Array_A, TArray<bool>& Actor_Array_B, class UObject* __WorldContext, TArray<bool>* Return_Array, int32* Length, const TArray<bool>& Local_Actor_Array_A, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	double Random_Float_Max_from_Stream(bool And_Min_, const struct FRandomStream& Stream, class UObject* __WorldContext, bool CallFunc_RandomBoolFromStream_ReturnValue, double CallFunc_Max_Float_Max_Int, float CallFunc_RandomFloatInRangeFromStream_ReturnValue, double CallFunc_Invert_Float_Return_Value, double CallFunc_SelectFloat_ReturnValue, double CallFunc_SelectFloat_ReturnValue_1, float CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast, double CallFunc_SelectFloat_B_ImplicitCast, double CallFunc_SelectFloat_B_ImplicitCast_1, double CallFunc_Invert_Float_Value_ImplicitCast);
	double Random_Float_Max(bool And_Min_, class UObject* __WorldContext, bool CallFunc_RandomBool_ReturnValue, double CallFunc_Max_Float_Max_Int, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_Invert_Float_Return_Value, double CallFunc_SelectFloat_ReturnValue, double CallFunc_SelectFloat_ReturnValue_1);
	int32 Random_Integer_Max(bool And_Min_, class UObject* __WorldContext, bool CallFunc_RandomBool_ReturnValue, int32 CallFunc_Max_Int_Max_Int, int32 CallFunc_RandomInteger_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue_1);
	void Random_Byte_Max(class UObject* __WorldContext, uint8* Return_value, int32 CallFunc_RandomIntegerInRange_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue);
	void Random_Byte(uint8 Max, class UObject* __WorldContext, uint8* Return_value, int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_RandomIntegerInRange_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue);
	void Random_Color(bool Static_Opacity, uint8 Opacity__If_Static_, class UObject* __WorldContext, struct FColor* Random_Color, bool Temp_bool_Variable, uint8 CallFunc_Random_Byte_Max_Return_Value, uint8 CallFunc_Random_Byte_Max_Return_Value_1, uint8 K2Node_Select_Default, uint8 CallFunc_Random_Byte_Max_Return_Value_2, uint8 CallFunc_Random_Byte_Max_Return_Value_3, const struct FColor& K2Node_MakeStruct_Color);
	void Find_Look_At_Rotation__Crosshair_(struct FVector& Start, int32 PlayerIndex, double Length_Range, class UObject* __WorldContext, struct FRotator* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue);
	struct FVector2D Mouse_Position_on_Viewport(class UObject* __WorldContext, const struct FVector2D& CallFunc_GetMousePositionOnViewport_ReturnValue);
	struct FVector2D Mouse_Position_on_Platform(class UObject* __WorldContext, const struct FVector2D& CallFunc_GetMousePositionOnPlatform_ReturnValue);
	void Is_Engine_Version_4_27(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetEngineVersion_ReturnValue, bool CallFunc_Contains_ReturnValue);
	void Is_Engine_Version_4_26(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetEngineVersion_ReturnValue, bool CallFunc_Contains_ReturnValue);
	void Is_XboxOne_Platform(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetPlatformName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void Is_PS4_Platform(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetPlatformName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void Is_IOS_Platform(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetPlatformName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void Is_Android_Platform(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetPlatformName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void Is_Linux_Platform(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetPlatformName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void Is_Mac_Platform(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetPlatformName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void Is_Windows_Platform(class UObject* __WorldContext, bool* Return_value, const class FString& CallFunc_GetPlatformName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void Get_Random_Alphabetic_Code_from_Stream(int32 Code_Length, enum class EUBPP_E_StyleSelection Alphabetic_Mode, const class FString& Seperator__Optional_, int32 Seperator_Group_Size, const struct FUBPP_Struct_Symbols& Symbols, const struct FRandomStream& Stream, class UObject* __WorldContext, class FString* Code, int32 GroupSystemInt, const TArray<class FString>& GroupedRandomCode, const TArray<class FString>& RandomCode, const TArray<class FString>& LocalAlphabet, bool CallFunc_RandomBoolFromStream_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, enum class EUBPP_E_StyleSelection Temp_byte_Variable, TArray<class FString>& K2Node_MakeArray_Array, int32 Temp_int_Variable_1, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3, const class FString& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_3, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_3, const class FString& CallFunc_JoinStringArray_ReturnValue_1, const class FString& CallFunc_Array_RandomFromStream_OutItem, int32 CallFunc_Array_RandomFromStream_OutIndex, const class FString& CallFunc_ToUpper_ReturnValue, const class FString& CallFunc_ToLower_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const class FString& K2Node_Select_Default, int32 CallFunc_Array_Add_ReturnValue_4);
	void Append_Text(class FText A, class FText B, class UObject* __WorldContext, class FText* Return_value, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue);
	void Append_String_Arrays(TArray<class FString>& Actor_Array_A, TArray<class FString>& Actor_Array_B, class UObject* __WorldContext, TArray<class FString>* Return_Array, int32* Length, const TArray<class FString>& Local_String_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const class FString& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void Random_Stream(class UObject* __WorldContext, struct FRandomStream* Random_Stream, int32 CallFunc_RandomIntegerInRange_ReturnValue, const struct FRandomStream& CallFunc_MakeRandomStream_ReturnValue);
	void Integer64_To_Text(int64 Input_Value, class UObject* __WorldContext, class FText* Return_Text, class FText CallFunc_Conv_Int64ToText_ReturnValue);
	void Integer64_To_String(int64 Input_Value, class UObject* __WorldContext, class FString* Return_String, class FText CallFunc_Conv_Int64ToText_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue);
	void Min_Int64(class UObject* __WorldContext, int64* Max_Int);
	void Max_Int64(class UObject* __WorldContext, int64* Max_Int);
	void Min_Byte(class UObject* __WorldContext, uint8* Max_Int);
	void Max_Byte(class UObject* __WorldContext, uint8* Max_Int);
	void Smaller_Than_or_Zero__Int_(int32 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void Bigger_Than_or_Zero__Int_(int32 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void Smaller_Than_Zero__Int_(int32 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_Less_IntInt_ReturnValue);
	void Bigger_Than_Zero__Int_(int32 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_Greater_IntInt_ReturnValue);
	void Equals_Not_Zero__Int_(int32 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_NotEqual_IntInt_ReturnValue);
	void Equals_Zero__Int_(int32 Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void Int_to_Vector(int32 Input_Int, class UObject* __WorldContext, struct FVector* Return_Vector, double CallFunc_Conv_IntToDouble_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue);
	void Int_Array_To_Vector_Array(TArray<int32>& Input_Float_Array, class UObject* __WorldContext, TArray<struct FVector>* Return_Array, const TArray<struct FVector>& Local_Vector_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Get_Item, double CallFunc_Conv_IntToDouble_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Float_Array_To_Vector_Array(TArray<double>& Input_Float_Array, class UObject* __WorldContext, TArray<struct FVector>* Return_Array, const TArray<struct FVector>& Local_Vector_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, double CallFunc_Array_Get_Item, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Remove_Not_Unique_Strings(TArray<class FString>& Input_Array, class UObject* __WorldContext, TArray<class FString>* Return_Array, const TArray<class FString>& Local_Unqiue_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const class FString& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void Print_String_Array(TArray<class FString>& Input_Array, enum class EUBPP_E_PrintMode Print_Mode, bool Print_To_Screen, bool Print_To_Log, const struct FLinearColor& Text_Color, double Duration, const class FString& Separator, class UObject* __WorldContext, const class FString& CallFunc_JoinStringArray_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const class FString& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_PrintString_Duration_ImplicitCast, float CallFunc_PrintString_Duration_ImplicitCast_1);
	void Generate_Random_Float_Array_In_Range_From_Stream(int32 Array_Length, double Min, double Max, struct FRandomStream& Stream, class UObject* __WorldContext, TArray<double>* Random_Array, const TArray<double>& Local_Random_Array, float CallFunc_RandomFloatInRangeFromStream_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, float CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast, float CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast, double CallFunc_Array_Add_NewItem_ImplicitCast);
	void Generate_Random_Float_Array_In_Range(int32 Array_Length, double Min, double Max, class UObject* __WorldContext, TArray<double>* Random_Array, const TArray<double>& Local_Random_Array, double CallFunc_RandomFloatInRange_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Generate_Random_Float_Array_from_Stream(int32 Array_Length, struct FRandomStream& Stream, class UObject* __WorldContext, TArray<double>* Random_Array, const TArray<double>& Local_Random_Array, float CallFunc_RandomFloatFromStream_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, double CallFunc_Array_Add_NewItem_ImplicitCast);
	void Generate_Random_Float_Array(int32 Array_Length, class UObject* __WorldContext, TArray<double>* Random_Array, const TArray<double>& Local_Random_Array, double CallFunc_RandomFloat_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Generate_Random_Int_Array_in_Range_From_Stream(int32 Array_Length, int32 Range_Min, int32 Range_Max, struct FRandomStream& Stream, class UObject* __WorldContext, TArray<int32>* Random_Array, const TArray<int32>& Local_Random_Array, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Generate_Random_Int_Array_in_Range(int32 Array_Length, int32 Range_Min, int32 Range_Max, class UObject* __WorldContext, TArray<int32>* Random_Array, const TArray<int32>& Local_Random_Array, int32 CallFunc_RandomIntegerInRange_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Generate_Random_Int_Array_From_Stream(int32 Array_Length, int32 Range_Max, struct FRandomStream& Stream, class UObject* __WorldContext, TArray<int32>* Random_Array, const TArray<int32>& Local_Random_Array, int32 CallFunc_RandomIntegerFromStream_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Generate_Random_Int_Array(int32 Array_Length, int32 Range_Max, class UObject* __WorldContext, TArray<int32>* Random_Array, const TArray<int32>& Local_Random_Array, int32 CallFunc_RandomInteger_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Break_Float(double Value, class UObject* __WorldContext, int32* PreMinusDecimal_Places, int32* Decimal_Places, const class FString& CallFunc_Conv_DoubleToString_ReturnValue, const class FString& CallFunc_Split_LeftS, const class FString& CallFunc_Split_RightS, bool CallFunc_Split_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue_1);
	void Make_Float(int32 PreMinusDecimal_Places, int32 Decimal_Places, class UObject* __WorldContext, double* Return_value, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, double CallFunc_Conv_StringToDouble_ReturnValue);
	void Smaller_Than_or_Zero__Float_(double Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_LessEqual_DoubleDouble_ReturnValue);
	void Bigger_Than_or_Zero__Float_(double Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue);
	void Smaller_Than_Zero__Float_(double Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_Less_DoubleDouble_ReturnValue);
	void Bigger_Than_Zero__Float_(double Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_Greater_DoubleDouble_ReturnValue);
	void Equals_Not_Zero__Float_(double Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_NotEqual_DoubleDouble_ReturnValue);
	void Equals_Zero__Float_(double Input_Value, class UObject* __WorldContext, bool* Return_value, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue);
	void Set_Scale__Transform_(struct FTransform& Transform_Ref, const struct FVector& New_Scale, class UObject* __WorldContext, struct FTransform* Result, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void Set_Rotation__Transform_(struct FTransform& Transform_Ref, const struct FRotator& New_Rotation, class UObject* __WorldContext, struct FTransform* Result, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void Set_Location__Transform_(struct FTransform& Transform_Ref, const struct FVector& New_Location, class UObject* __WorldContext, struct FTransform* Result, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void Boolean_Array_Add(TArray<bool>& Input_Array, bool New_Item, class UObject* __WorldContext, TArray<bool>* Return_Array, int32* New_Length, const TArray<bool>& Local_Input_Array, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void Weapon_Line_Trace_By_Channel(const struct FVector& Start, double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery TraceC_hannel, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* Out_Hit, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_Noise_Line_Trace_By_Channel_OutHit, bool CallFunc_Noise_Line_Trace_By_Channel_ReturnValue);
	void Camera_Line_Trace_By_Channel(double Length, int32 Player_Camera_Manager_Index, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery Trace_Channel, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* Out_Hit, bool* Return_value, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_Noise_Line_Trace_By_Channel_OutHit, bool CallFunc_Noise_Line_Trace_By_Channel_ReturnValue);
	void Actor_to_Actor_Line_Trace_by_Channel(class AActor* Actor_A, class AActor* Actor_B, bool Ignore_Actors, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery Trace_Channel, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* Out_Hit, bool* Return_value, bool Temp_bool_Variable, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, TArray<class AActor*>& CallFunc_Append_Actor_Arrays_Return_Array, int32 CallFunc_Append_Actor_Arrays_Length, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, TArray<class AActor*>& K2Node_Select_Default, const struct FUBPP_Struct_Trace& K2Node_MakeStruct_UBPP_Struct_Trace, const struct FHitResult& CallFunc_Noise_Line_Trace_By_Channel_OutHit, bool CallFunc_Noise_Line_Trace_By_Channel_ReturnValue);
	bool Actor_Line_Trace_By_Channel(class AActor* Actor, double Length, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery TraceChannel, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* OutHit, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, TArray<class AActor*>& CallFunc_Append_Actor_Arrays_Return_Array, int32 CallFunc_Append_Actor_Arrays_Length, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FUBPP_Struct_Trace& K2Node_MakeStruct_UBPP_Struct_Trace, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_Noise_Line_Trace_By_Channel_OutHit, bool CallFunc_Noise_Line_Trace_By_Channel_ReturnValue);
	void Draw_Static_Mesh_Debug_Box(class AStaticMeshActor* Static_Mesh_Actor, const struct FLinearColor& LineColor, double Duration, double Thickness, class UObject* __WorldContext, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FBoxSphereBounds& CallFunc_GetBounds_ReturnValue, const struct FVector& CallFunc_BreakBoxSphereBounds_Origin, const struct FVector& CallFunc_BreakBoxSphereBounds_BoxExtent, float CallFunc_BreakBoxSphereBounds_SphereRadius, float CallFunc_DrawDebugBox_Duration_ImplicitCast, float CallFunc_DrawDebugBox_Thickness_ImplicitCast);
	void Rotational_Slice_Procedural_Mesh(class UProceduralMeshComponent* In_Proc_Mesh, const struct FVector& Plane_Position, const struct FRotator& Plane_Rotation, bool Create_Other_Half, enum class EProcMeshSliceCapOption Cap_Option, class UMaterialInterface* Cap_Material, class UObject* __WorldContext, class UProceduralMeshComponent** Out_Other_Half_Proc_Mesh, const struct FVector& CallFunc_GetUpVector_ReturnValue, class UProceduralMeshComponent* CallFunc_SliceProceduralMesh_OutOtherHalfProcMesh);
	void Random_Linear_Color(bool Static_Opacity, double Opacity__If_Static_, class UObject* __WorldContext, struct FLinearColor* Random_Color, double CallFunc_RandomFloat_ReturnValue, double CallFunc_RandomFloat_ReturnValue_1, double CallFunc_SelectFloat_ReturnValue, double CallFunc_RandomFloat_ReturnValue_2, double CallFunc_RandomFloat_ReturnValue_3, const struct FLinearColor& K2Node_MakeStruct_LinearColor, float K2Node_MakeStruct_B_ImplicitCast, float K2Node_MakeStruct_A_ImplicitCast, float K2Node_MakeStruct_G_ImplicitCast, float K2Node_MakeStruct_R_ImplicitCast);
	void GetPercentage__Int_(int32 Value, double Percentage, class UObject* __WorldContext, int32* Return_value, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, int32 CallFunc_FTrunc_ReturnValue);
	void Half__Int_(int32 Value, class UObject* __WorldContext, int32* Return_value, int32 CallFunc_Divide_IntInt_ReturnValue);
	void Double__Int_(int32 Value, class UObject* __WorldContext, int32* Return_value, int32 CallFunc_Multiply_IntInt_ReturnValue);
	void GetPercentage__Float_(double Value, double Percentage, class UObject* __WorldContext, double* Return_value, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	void Half__Float_(double Value, class UObject* __WorldContext, double* Return_value, double CallFunc_Divide_DoubleDouble_ReturnValue);
	void Double__Float_(double Value, class UObject* __WorldContext, double* Return_value, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	void Set_Text__Name_(class UTextBlock* Target, class FName InName, class UObject* __WorldContext, class FText CallFunc_Conv_NameToText_ReturnValue);
	void SetText__String_(class UTextBlock* Target, const class FString& In_String, class UObject* __WorldContext, class FText CallFunc_Conv_StringToText_ReturnValue);
	void Find_Actor_Look_at_Rotation(class AActor* Start, class AActor* Target, class UObject* __WorldContext, struct FRotator* Return_value, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue);
	void Minus_One__Float_(double Value, class UObject* __WorldContext, double* Return_value, double CallFunc_Subtract_DoubleDouble_ReturnValue);
	void Plus_One__Float_(double Value, class UObject* __WorldContext, double* Return_value, double CallFunc_Add_DoubleDouble_ReturnValue);
	void Min_Float(class UObject* __WorldContext, double* Max_Float);
	void Max_Float(class UObject* __WorldContext, double* Max_Int);
	void Minus_Absolute__Float_(double Value, class UObject* __WorldContext, double* Return_value, double CallFunc_Abs_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	void Invert_Float(double Value, class UObject* __WorldContext, double* Return_value, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	void Reverse_Float_Array(TArray<double>& Input, class UObject* __WorldContext, TArray<double>* Return_Array, const TArray<double>& Local_Input_Array);
	void Remove_All_Floats_Not_in_Range(TArray<double>& Input_Array, double Min, double Max, class UObject* __WorldContext, TArray<double>* Return_Array, const TArray<double>& Local_Float_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, double CallFunc_Array_Get_Item, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Remove_Not_Unique_Floats(TArray<double>& Input_Array, class UObject* __WorldContext, TArray<double>* Return_value, const TArray<double>& Local_Unique_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, double CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void Append_Float_Arrays(TArray<double>& Float_Array_A, TArray<double>& Float_Array_B, class UObject* __WorldContext, TArray<double>* Return_Array, int32* Length, const TArray<double>& Local_Float_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, double CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void Int_Array_to_Float_Array(TArray<int32>& Integer_Array, class UObject* __WorldContext, TArray<double>* Return_Array, const TArray<double>& Local_Float_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Get_Item, double CallFunc_Conv_IntToDouble_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Minus_One__Int_(int32 Value, class UObject* __WorldContext, int32* Return_value, int32 CallFunc_Subtract_IntInt_ReturnValue);
	void Plus_One__Int_(int32 Value, class UObject* __WorldContext, int32* Return_value, int32 CallFunc_Add_IntInt_ReturnValue);
	void Min_Int(class UObject* __WorldContext, int32* Max_Int);
	void Max_Int(class UObject* __WorldContext, int32* Max_Int);
	void Minus_Absolute__Int_(int32 Value, class UObject* __WorldContext, int32* Return_value, int32 CallFunc_Abs_Int_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue);
	void Invert_Integer(int32 Value, class UObject* __WorldContext, int32* Return_value, int32 CallFunc_Multiply_IntInt_ReturnValue);
	void Reverse_Int_Array(TArray<int32>& Input, class UObject* __WorldContext, TArray<int32>* Return_Array, const TArray<int32>& Local_Input_Array);
	void Remove_All_Ints_Not_In_Range(TArray<int32>& Input_Array, int32 Min, int32 Max, class UObject* __WorldContext, TArray<int32>* Return_value, const TArray<int32>& Local_Int_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Get_Item, bool CallFunc_InRange_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Remove_Not_Unique_Ints(TArray<int32>& Input_Array, class UObject* __WorldContext, TArray<int32>* Return_value, const TArray<int32>& UnqiueArray, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void Append_Int_Arrays(TArray<int32>& Int_Array_A, TArray<int32>& Int_Array_B, class UObject* __WorldContext, TArray<int32>* Return_Array, int32* Length, const TArray<int32>& Local_Int_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void Float_Array_To_Int_Array(TArray<double>& Float_Array, class UObject* __WorldContext, TArray<int32>* Return_Array, const TArray<int32>& Local_Float_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, double CallFunc_Array_Get_Item, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Name_to_Int(class FName Input_Name, class UObject* __WorldContext, int32* Return_value, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 CallFunc_Seperate_Numerics_And_Alphabetics_Numerics, const class FString& CallFunc_Seperate_Numerics_And_Alphabetics_Alphabetics);
	void Text_to_Int(class FText Input_Text, class UObject* __WorldContext, int32* Return_value, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_Seperate_Numerics_And_Alphabetics_Numerics, const class FString& CallFunc_Seperate_Numerics_And_Alphabetics_Alphabetics);
	void Create_Widget_Compact(class APlayerController* PlayerController, class UClass* Class, enum class EUBPP_E_AddingType Adding_Type, int32 ZOrder, bool Show_Mouse_Cursor, enum class EUBPP_E_InputMode Input_Mode, enum class EMouseLockMode InMouseLockMode__Only_UI_only_and_Game_only_, bool HideCursorDuringCapture__Only_Game_And_UI_, class UObject* __WorldContext, class UUserWidget** Reference, class UUserWidget* CallFunc_Create_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_AddToPlayerScreen_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1);
	void Bouncing_Line_Trace_By_Channel(const struct FVector& Start, const struct FRotator& Rotation, double Length, int32 Times, enum class ETraceTypeQuery Trace_Channel, bool Trace_Complex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, TArray<struct FHitResult>* All_Out_Hits, int32* Times_Till_Stop, bool* Return_value, bool Local_Return_Value, const struct FVector& Local_Vector, const struct FVector& Local_End_Point, const struct FVector& Local_Start_Point, int32 Local_Times_Counter, const TArray<struct FHitResult>& Local_All_Out_Hits, int32 Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const struct FVector& CallFunc_GetUpVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool Temp_bool_Variable, int32 Temp_int_Variable_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_MirrorVectorByNormal_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	bool Rotation_Dependent_Line_Trace_By_Channel(const struct FVector& Start, const struct FRotator& Rotation, double Length, const struct FUBPP_Struct_Noise& Noise, enum class ETraceTypeQuery TraceChannel, bool TraceComplex, const struct FUBPP_Struct_Trace& Trace_Options, class UObject* __WorldContext, struct FHitResult* OutHit, const struct FVector& CallFunc_GetUpVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_Noise_Line_Trace_By_Channel_OutHit, bool CallFunc_Noise_Line_Trace_By_Channel_ReturnValue);
	void Seperate_Numerics_And_Alphabetics(const class FString& Input_String, class UObject* __WorldContext, int32* Numerics, class FString* Alphabetics, const TArray<class FString>& AlphabeticsArray, const TArray<class FString>& NumericsArray, TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Array_Get_Item, bool CallFunc_IsNumeric_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1);
	void Int_Array_To_String_Array(TArray<int32>& Input_Int_Array, class UObject* __WorldContext, TArray<class FString>* Return_Array, const TArray<class FString>& Local_String_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Float_Array_To_String_Array(TArray<double>& Input_Float_Array, class UObject* __WorldContext, TArray<class FString>* Return_Array, const TArray<class FString>& Local_String_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, double CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_DoubleToString_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Int_Array_to_String(TArray<int32>& Input_Int_Array, const class FString& Separator, class UObject* __WorldContext, class FString* Return_Array, const TArray<class FString>& Local_String_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue);
	void ToString__Int64_(int64 Input_Value, bool Always_Sign, bool Use_Grouping, int32 Minimum_Integral_Digits, int32 Maximum_Integral_Digits, class UObject* __WorldContext, class FString* Return_String, class FText CallFunc_Conv_Int64ToText_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue);
	void Get_Random_Alphabetic_Code(int32 Code_Length, enum class EUBPP_E_StyleSelection Alphabetic_Mode, const class FString& Seperator__Optional_, int32 Seperator_Group_Size, const struct FUBPP_Struct_Symbols& Symbols, class UObject* __WorldContext, class FString* Code, int32 GroupSystemInt, const TArray<class FString>& GroupedRandomCode, const TArray<class FString>& RandomCode, const TArray<class FString>& LocalAlphabet, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, enum class EUBPP_E_StyleSelection Temp_byte_Variable, TArray<class FString>& K2Node_MakeArray_Array, int32 Temp_int_Variable_1, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3, const class FString& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_3, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_3, bool CallFunc_RandomBool_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue_1, const class FString& CallFunc_Array_Random_OutItem, int32 CallFunc_Array_Random_OutIndex, const class FString& CallFunc_ToLower_ReturnValue, const class FString& CallFunc_ToUpper_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const class FString& K2Node_Select_Default, int32 CallFunc_Array_Add_ReturnValue_4);
	void Get_Random_Numeric_Code_from_Stream(int32 Code_Length, const class FString& Seperator__Optional_, int32 Seperator_Group_Size, bool With_0__Zero_, const struct FRandomStream& Stream, class UObject* __WorldContext, class FString* Code, int32 Local_Group_Counter, const TArray<class FString>& Local_Grouped_Random_Code, const TArray<class FString>& Local_Random_Code, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const class FString& CallFunc_JoinStringArray_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue_1);
	void Get_Random_Numeric_Code(int32 Code_Length, const class FString& Seperator__Optional_, int32 Seperator_Group_Size, bool With_0__Zero_, class UObject* __WorldContext, class FString* Code, int32 Local_Group_Counter, const TArray<class FString>& Local_Grouped_Random_Code, const TArray<class FString>& Local_Random_Code, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const class FString& CallFunc_JoinStringArray_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_2, int32 CallFunc_RandomIntegerInRange_ReturnValue, int32 CallFunc_RandomIntegerInRange_ReturnValue_1, int32 CallFunc_SelectInt_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_3);
	void Get_Random_Code_from_Stream(int32 Code_Length, enum class EUBPP_E_StyleSelection Alphabetic_Mode, const class FString& Seperator__Optional_, int32 Seperator_Group_Size, bool With_0__Zero_, const struct FUBPP_Struct_Symbols& Symbols, const struct FRandomStream& Stream, class UObject* __WorldContext, class FString* Code, int32 Local_Group_Counter, const TArray<class FString>& Local_Grouped_Random_Code, const TArray<class FString>& Local_Random_Code_Array, const TArray<class FString>& Alphabet_Array, bool CallFunc_RandomBoolFromStream_ReturnValue, bool CallFunc_RandomBoolFromStream_ReturnValue_1, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1, int32 CallFunc_SelectInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_2, int32 CallFunc_Len_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_IntInt_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, enum class EUBPP_E_StyleSelection Temp_byte_Variable, const class FString& CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable_1, int32 Temp_int_Variable_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3, const class FString& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_3, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_3, const class FString& CallFunc_JoinStringArray_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_4, int32 CallFunc_Array_LastIndex_ReturnValue, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue_2, const class FString& CallFunc_Array_Get_Item_2, const class FString& CallFunc_ToUpper_ReturnValue, const class FString& CallFunc_ToLower_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const class FString& K2Node_Select_Default, int32 CallFunc_Array_Add_ReturnValue_5);
	void Get_Random_Code(int32 Code_Length, enum class EUBPP_E_StyleSelection Alphabetic_Mode, const class FString& Seperator__Optional_, int32 Seperator_Group_Size, bool With_0__Zero_, const struct FUBPP_Struct_Symbols& Alphabet_Plus_Symbols, class UObject* __WorldContext, class FString* Code, int32 Local_Group_Counter, const TArray<class FString>& Local_Grouped_Random_Code, const TArray<class FString>& Local_Random_Code_Array, const TArray<class FString>& Alphabet_Array, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_2, int32 CallFunc_Len_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_3, int32 Temp_int_Array_Index_Variable, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, enum class EUBPP_E_StyleSelection Temp_byte_Variable, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Array_Add_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_RandomIntegerInRange_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3, const class FString& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_3, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_3, bool CallFunc_RandomBool_ReturnValue, const class FString& CallFunc_JoinStringArray_ReturnValue_1, bool CallFunc_RandomBool_ReturnValue_1, int32 CallFunc_RandomIntegerInRange_ReturnValue_1, int32 CallFunc_SelectInt_ReturnValue, const class FString& CallFunc_Array_Random_OutItem, int32 CallFunc_Array_Random_OutIndex, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_ToUpper_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_4, const class FString& CallFunc_ToLower_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const class FString& K2Node_Select_Default, int32 CallFunc_Array_Add_ReturnValue_5);
	void Random_Point_On_Sphere_Bound(const struct FVector& Origin_Vector, double Radius, class UObject* __WorldContext, struct FVector* Random_Point, const struct FRotator& CallFunc_RandomRotator_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void Random_Point_On_Line(const struct FVector& Line_Start, const struct FVector& Line_End, class UObject* __WorldContext, struct FVector* Random_Point, double CallFunc_RandomFloatInRange_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue, float CallFunc_VLerp_Alpha_ImplicitCast);
	void Random_Point_On_Circle_Bound(const struct FVector& Origin_Vector, double Radius, class UObject* __WorldContext, struct FVector* Random_Point, const struct FRotator& CallFunc_RandomRotator_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void Random_Point_On_Circle(const struct FVector& Origin_Vector, double Radius, class UObject* __WorldContext, struct FVector* Random_Point, const struct FRotator& CallFunc_RandomRotator_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void Random_Point_On_Box_Extent_Bounds(const struct FVector& Origin_Vector, const struct FVector& Box_Extent, class UObject* __WorldContext, struct FVector* Random_Point, int32 LocalRandomSiteInt, int32 Temp_int_Variable, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_Abs_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Abs_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_2, double CallFunc_Abs_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_2, double CallFunc_RandomFloatInRange_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_3, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_3, const struct FVector& CallFunc_MakeVector_ReturnValue_4, const struct FVector& CallFunc_MakeVector_ReturnValue_5, double CallFunc_Add_DoubleDouble_ReturnValue_4, int32 Temp_int_Variable_1, const struct FVector& CallFunc_MakeVector_ReturnValue_6, const struct FVector& CallFunc_MakeVector_ReturnValue_7, const struct FVector& CallFunc_MakeVector_ReturnValue_8, const struct FVector& CallFunc_MakeVector_ReturnValue_9, const struct FVector& CallFunc_MakeVector_ReturnValue_10, const struct FVector& CallFunc_MakeVector_ReturnValue_11, double CallFunc_RandomFloatInRange_ReturnValue_2, int32 CallFunc_RandomIntegerInRange_ReturnValue, const struct FVector& K2Node_Select_Default, const struct FVector& K2Node_Select_Default_1, const struct FVector& CallFunc_VLerp_ReturnValue, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_SelectFloat_ReturnValue, double CallFunc_SelectFloat_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, double CallFunc_SelectFloat_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_12, float CallFunc_VLerp_Alpha_ImplicitCast);
	void Random_Point_In_Sphere(const struct FVector& Origin_Vector, double Radius, class UObject* __WorldContext, struct FVector* Random_Point, const struct FRotator& CallFunc_RandomRotator_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void Random_Point_In_Hollow_Box_Extent(const struct FVector& Origin_Vector, const struct FVector& Box_Extent, double Thickness, class UObject* __WorldContext, struct FVector* Random_Point, int32 LocalRandomSiteInt, int32 Temp_int_Variable, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_3, double CallFunc_RandomFloatInRange_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_4, const struct FVector& CallFunc_MakeVector_ReturnValue_5, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, int32 Temp_int_Variable_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double CallFunc_Abs_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Abs_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2, double CallFunc_Add_DoubleDouble_ReturnValue_2, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_3, double CallFunc_Abs_ReturnValue_2, int32 Temp_int_Variable_2, double CallFunc_Subtract_DoubleDouble_ReturnValue_2, double CallFunc_Add_DoubleDouble_ReturnValue_4, const struct FVector& CallFunc_MakeVector_ReturnValue_6, const struct FVector& CallFunc_MakeVector_ReturnValue_7, const struct FVector& CallFunc_MakeVector_ReturnValue_8, const struct FVector& CallFunc_MakeVector_ReturnValue_9, const struct FVector& CallFunc_MakeVector_ReturnValue_10, const struct FVector& CallFunc_MakeVector_ReturnValue_11, const struct FVector& CallFunc_MakeVector_ReturnValue_12, const struct FVector& CallFunc_MakeVector_ReturnValue_13, const struct FVector& CallFunc_MakeVector_ReturnValue_14, const struct FVector& CallFunc_MakeVector_ReturnValue_15, const struct FVector& CallFunc_MakeVector_ReturnValue_16, const struct FVector& CallFunc_MakeVector_ReturnValue_17, double CallFunc_RandomFloatInRange_ReturnValue_3, const struct FVector& K2Node_Select_Default, const struct FVector& K2Node_Select_Default_1, const struct FVector& K2Node_Select_Default_2, int32 CallFunc_RandomIntegerInRange_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, double CallFunc_SelectFloat_ReturnValue, double CallFunc_SelectFloat_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_5, double CallFunc_SelectFloat_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_18, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_VLerp_Alpha_ImplicitCast);
	void Random_Point_In_Donut(const struct FVector& Origin_Vector, double Donut_Radius, double Thickness_Radius, class UObject* __WorldContext, struct FVector* Random_Point, const struct FRotator& CallFunc_RandomRotator_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FRotator& CallFunc_RandomRotator_ReturnValue_1, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1);
	void Random_Point_In_Cylinder(const struct FVector& Origin_Vector, double Radius, double Height, class UObject* __WorldContext, struct FVector* Random_Point, const struct FRotator& CallFunc_RandomRotator_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, double CallFunc_RandomFloatInRange_ReturnValue_1, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void Random_Point_In_Capsule(const struct FVector& Origin_Vector, double Radius, double Half_Height, class UObject* __WorldContext, struct FVector* Random_Point, const struct FRotator& CallFunc_RandomRotator_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_1, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void Get_Smallest_Distance_Between_Actors(TArray<class AActor*>& AllActors, class UObject* __WorldContext, double* Distance, class AActor** ActorA, class AActor** ActorB, int32* ActorIndexA, int32* ActorIndexB, const TArray<struct FVector>& AllActorsButOriginRemoved, const struct FVector& _VectorB, const struct FVector& VectorA, int32 CurrentIndexB, int32 CurrentIndexA, double CurrentHeighestDistance, const TArray<struct FVector>& AllActorLocations, TArray<struct FVector>& CallFunc_Actor_Array_to_Location_Array_Output_Locations, int32 CallFunc_Array_LastIndex_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Find_ReturnValue, int32 CallFunc_Array_Find_ReturnValue_1, class AActor* CallFunc_Array_Get_Item_1, class AActor* CallFunc_Array_Get_Item_2, const struct FVector& CallFunc_Array_Get_Item_3, const struct FVector& CallFunc_Get_Nearest_Vector_NearestVector, double CallFunc_Get_Nearest_Vector_Distance, int32 CallFunc_Get_Nearest_Vector_Index, bool CallFunc_Less_DoubleDouble_ReturnValue, int32 CallFunc_Array_Find_ReturnValue_2);
	void Get_Highest_Distance_Between_Actors(TArray<class AActor*>& AllActors, class UObject* __WorldContext, double* Distance, class AActor** ActorA, class AActor** ActorB, int32* ActorIndexA, int32* ActorIndexB, const struct FVector& _VectorB, const struct FVector& VectorA, int32 CurrentIndexB, int32 CurrentIndexA, double CurrentHeighestDistance, const TArray<struct FVector>& Local_All_Actor_Locations, TArray<struct FVector>& CallFunc_Actor_Array_to_Location_Array_Output_Locations, int32 CallFunc_Array_LastIndex_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Array_Find_ReturnValue, class AActor* CallFunc_Array_Get_Item, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Find_ReturnValue_1, class AActor* CallFunc_Array_Get_Item_1, const struct FVector& CallFunc_Array_Get_Item_2, const struct FVector& CallFunc_Get_Farthest_Vector_FarthestVector, double CallFunc_Get_Farthest_Vector_Distance, int32 CallFunc_Get_Farthest_Vector_Index, bool CallFunc_Greater_DoubleDouble_ReturnValue, int32 CallFunc_Array_Find_ReturnValue_2);
	void Snap_Actor_To_Grid(class AActor* Actor, double Grid_Size, bool Teleport, bool Specific_Z_Location, double Z_Location, class UObject* __WorldContext, struct FHitResult* Sweep_Hit_Result, bool* Return_value, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Vector_SnappedToGrid_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, float CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast);
	void Remove_Not_Unique_Actors(TArray<class AActor*>& Input_Array, class UObject* __WorldContext, TArray<class AActor*>* Return_Array, const TArray<class AActor*>& Local_Unique_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void Append_Actor_Arrays(TArray<class AActor*>& Actor_Array_A, TArray<class AActor*>& Actor_Array_B, class UObject* __WorldContext, TArray<class AActor*>* Return_Array, int32* Length, const TArray<class AActor*>& Local_Actor_Array_A, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void IsVectorInBoxExtent(const struct FVector& Input_Vector, const struct FVector& Box_Origin, const struct FVector& Box_Extent, class UObject* __WorldContext, bool* Return_value, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_Half__Float__Return_Value, double CallFunc_Half__Float__Return_Value_1, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue_1, double CallFunc_Half__Float__Return_Value_2, double CallFunc_Add_DoubleDouble_ReturnValue_2, double CallFunc_Subtract_DoubleDouble_ReturnValue_2, bool CallFunc_InRange_FloatFloat_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void Invert_Vector(const struct FVector& Value, class UObject* __WorldContext, struct FVector* Return_value, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	void InRange__Vector_(const struct FVector& Value, const struct FVector& Min, const struct FVector& Max, bool Inclusive_Min, bool Inclusive_Max, class UObject* __WorldContext, bool* Return_value, const TArray<struct FVector>& Local_Int_Array, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue_1, bool CallFunc_InRange_FloatFloat_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void Get_Vector_Difference(const struct FVector& Vector_A, const struct FVector& Vector_B, class UObject* __WorldContext, struct FVector* Return_value, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue);
	void Get_Nearest_Vector_On_Line(const struct FVector& Input_Vector, const struct FVector& Line_Start, const struct FVector& Line_End, double Precision_1Minus500, class UObject* __WorldContext, struct FVector* NearestVector, double* Distance, int32* Index, const TArray<struct FVector>& Local_Points, double CallFunc_FClamp_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, const struct FVector& CallFunc_Get_Nearest_Vector_NearestVector, double CallFunc_Get_Nearest_Vector_Distance, int32 CallFunc_Get_Nearest_Vector_Index, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, float CallFunc_VLerp_Alpha_ImplicitCast);
	void Get_Nearest_Vector(const struct FVector& Origin_Vector, TArray<struct FVector>& All_Other_Vectors, class UObject* __WorldContext, struct FVector* NearestVector, double* Distance, int32* Index, int32 CurrentIndex, double CurrentLowestDistance, const struct FVector& CurrentNearestVector, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_Array_Get_Item, double CallFunc_Vector_Distance_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue);
	void Get_Farthest_Vector(const struct FVector& OriginVector, TArray<struct FVector>& AllOtherVectors, class UObject* __WorldContext, struct FVector* FarthestVector, double* Distance, int32* Index, int32 CurrentIndex, double CurrentHeighestDistance, const struct FVector& CurrentFarthestVector, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_Array_Get_Item, double CallFunc_Vector_Distance_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue);
	void Get_Box_Extent_Site_Points(const struct FVector& Origin_Vector, const struct FVector& Box_Extent, class UObject* __WorldContext, TArray<struct FVector>* Site_Points, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_3, double CallFunc_Add_DoubleDouble_ReturnValue_2, double CallFunc_Subtract_DoubleDouble_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_4, const struct FVector& CallFunc_MakeVector_ReturnValue_5, TArray<struct FVector>& K2Node_MakeArray_Array);
	void Get_Box_Extent_Bound_Points(const struct FVector& Origin_Vector, const struct FVector& Box_Extent, class UObject* __WorldContext, TArray<struct FVector>* Bound_Points, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_3, double CallFunc_Subtract_DoubleDouble_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_4, const struct FVector& CallFunc_MakeVector_ReturnValue_5, const struct FVector& CallFunc_MakeVector_ReturnValue_6, const struct FVector& CallFunc_MakeVector_ReturnValue_7, TArray<struct FVector>& K2Node_MakeArray_Array);
	void Combine_Vectors__Min_(const struct FVector& Vector_A, const struct FVector& Vector_B, class UObject* __WorldContext, struct FVector* Return_value, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_1, double CallFunc_SelectFloat_ReturnValue, double CallFunc_SelectFloat_ReturnValue_1, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_2, double CallFunc_SelectFloat_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void Combine_Vectors__Max_(const struct FVector& Vector_A, const struct FVector& Vector_B, class UObject* __WorldContext, struct FVector* Return_value, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, double CallFunc_SelectFloat_ReturnValue, double CallFunc_SelectFloat_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2, double CallFunc_SelectFloat_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void Append_Vector_Arrays(TArray<struct FVector>& Vector_Array_A, TArray<struct FVector>& Vector_Array_B, class UObject* __WorldContext, TArray<struct FVector>* Return_Array, int32* Length, const TArray<struct FVector>& Local_Vector_Array, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void Byte_To_Vector(uint8 Input_Byte, class UObject* __WorldContext, struct FVector* Return_Vector, double CallFunc_Conv_ByteToDouble_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue);
	void Actor_Array_to_Location_Array(TArray<class AActor*>& Input_Actor, class UObject* __WorldContext, TArray<struct FVector>* Output_Locations, const TArray<struct FVector>& Local_Vector, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
};

}


