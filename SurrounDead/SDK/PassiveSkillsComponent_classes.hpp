#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x211 (0x2C9 - 0xB8)
// BlueprintGeneratedClass PassiveSkillsComponent.PassiveSkillsComponent_C
class UPassiveSkillsComponent_C : public UBaseComponent_C
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB8(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	double                                       CurrentFitnessXP;                                  // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxFitnessXP;                                      // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentFitnessLevel;                               // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxFitnessLevel;                                   // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentStrengthXP;                                 // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxStrengthXP;                                     // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentStrengthLevel;                              // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxStrengthLevel;                                  // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentToughessXP;                                 // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxToughnessXP;                                    // 0x108(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentToughessLevel;                              // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxToughessLevel;                                  // 0x118(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentSneakingXP;                                 // 0x120(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxSneakingXP;                                     // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentSneakingLevel;                              // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxSneakingLevel;                                  // 0x138(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentFirstAidXP;                                 // 0x140(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxFirstAidXP;                                     // 0x148(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentFirstAidLevel;                              // 0x150(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxFirstAidLevel;                                  // 0x158(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentMarksmanshipXP;                             // 0x160(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxMarksmanshipXP;                                 // 0x168(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentMarksmanshipLevel;                          // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxMarksmanshipLevel;                              // 0x178(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentReloadingXP;                                // 0x180(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxReloadingXP;                                    // 0x188(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentReloadingLevel;                             // 0x190(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxReloadingLevel;                                 // 0x198(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FitnessPercentage;                                 // 0x1A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       StrengthPercentage;                                // 0x1A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       ToughnessPercentage;                               // 0x1B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       SneakingPercentage;                                // 0x1B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FirstAidPercentage;                                // 0x1C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MarksmanshipPercentage;                            // 0x1C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       ReloadingPercentage;                               // 0x1D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FitnessMultiplier;                                 // 0x1D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       StrengthMultiplier;                                // 0x1E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       ToughnessMultiplier;                               // 0x1E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       SneakingMultiplier;                                // 0x1F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FirstAidMultiplier;                                // 0x1F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       ReloadingMultiplier;                               // 0x200(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MarksmanshipMultiplier;                            // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       StrengthSpeedMultiplier;                           // 0x210(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FitnessStaminaMultiplier;                          // 0x218(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentThiefXP;                                    // 0x220(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxThiefXP;                                        // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentThiefLevel;                                 // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxThiefLevel;                                     // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       ThiefPercentage;                                   // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       ThiefMultiplier;                                   // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentFishingXP;                                  // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxFishingXP;                                      // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentFishingLevel;                               // 0x260(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxFishingLevel;                                   // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FishingPercentage;                                 // 0x270(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FishingMultiplier;                                 // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FitnessStaminaRegainMultiplier;                    // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         FitnessMultiplierUsed_;                            // 0x288(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         StrengthMultiplierUsed_;                           // 0x289(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ToughnessMultiplierUsed_;                          // 0x28A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         SneakingMultiplierUsed_;                           // 0x28B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         FirstAidMultiplierUsed_;                           // 0x28C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         MarksmanshipMultiplierUsed_;                       // 0x28D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ReloadingMultiplierUsed_;                          // 0x28E(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ThiefMultiplierUsed_;                              // 0x28F(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         FishingMultiplierUsed_;                            // 0x290(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_CE0[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       CurrentScavengingXP;                               // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxScavengingXP;                                   // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentScavengingLevel;                            // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxScavengingLevel;                                // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       ScavengingPercentage;                              // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       ScavengingMultiplier;                              // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ScavengingMultiplierUsed_;                         // 0x2C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UPassiveSkillsComponent_C* GetDefaultObj();

	void ComponentsToSave(TArray<class UActorComponent*>* Components);
	void XPMultiplier_Scavenging(bool* Used_);
	void XPMultiplier_Thief(bool* Used_);
	void XPMultiplier_Reloading(bool* Used_);
	void XPMultiplier_Marksmanship(bool* Used_);
	void XPMultiplier_FirstAid(bool* Used_);
	void XPMultiplier_Sneaking(bool* Used_);
	void XPMultiplier_Toughness(bool* Used_);
	void XPMultiplier_Strength(bool* Used_);
	void XPMultiplier_Fitness(bool* Used_);
	void XPMultiplier_Fishing(bool* Used_);
	void Scavenging_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxScavengingXP_ImplicitCast);
	void ResetPassiveSkills_NewSave();
	void Fishing_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxFishingXP_ImplicitCast);
	void Thief_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxThiefXP_ImplicitCast);
	void ResetPassiveSkills(bool CallFunc_GetBoolCVar_ReturnValue);
	void Reloading_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxReloadingXP_ImplicitCast);
	void Marksmanship_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxMarksmanshipXP_ImplicitCast);
	void FirstAid_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxFirstAidXP_ImplicitCast);
	void Sneaking_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxSneakingXP_ImplicitCast);
	void Toughness_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxToughnessXP_ImplicitCast);
	void Strength_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_CalculatePercentage_CurrentPercentage, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_CalculateMaxXP_MaxXPLevel, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxStrengthXP_ImplicitCast);
	void Fitness_LevelUp(double RemainingXP, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_CalculatePercentage_CurrentPercentage, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, float CallFunc_CalculateMaxXP_MaxXPLevel, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_MaxFitnessXP_ImplicitCast);
	void CalculateMaxXP(double MaxXP, float* MaxXPLevel, double CallFunc_Multiply_DoubleDouble_ReturnValue, int32 CallFunc_FCeil_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, float K2Node_FunctionResult_MaxXPLevel_ImplicitCast);
	void CalculatePercentage(double CurrentXP, double MaxXP, double* CurrentPercentage, double CallFunc_Divide_DoubleDouble_ReturnValue);
	void AddXP(double AddXP, double Skill, double* NewXP, double XP, double CallFunc_Add_DoubleDouble_ReturnValue);
	void ActorLoaded();
	void ActorPreSave();
	void ActorSaved();
	void LoadComponent();
	void AddXP_Fitness(double Float);
	void AddXP_Strength(double Float);
	void AddXP_Toughness(double Float);
	void AddXP_Sneaking(double Float);
	void AddXP_FirstAid(double Float);
	void AddXP_Marksmanship(double Float);
	void AddXP_Reloading(double Float);
	void AddXP_Thief(double Float);
	void AddXP_Fishing(double Float);
	void AddXP_Scavenging(double Float);
	void ExecuteUbergraph_PassiveSkillsComponent(int32 EntryPoint, double CallFunc_SelectFloat_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, double CallFunc_SelectFloat_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2, double CallFunc_SelectFloat_ReturnValue_2, double CallFunc_SelectFloat_ReturnValue_3, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3, double CallFunc_SelectFloat_ReturnValue_4, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4, double CallFunc_SelectFloat_ReturnValue_5, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5, double CallFunc_SelectFloat_ReturnValue_6, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_6, double CallFunc_SelectFloat_ReturnValue_7, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_7, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_8, double CallFunc_SelectFloat_ReturnValue_8, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_9, double CallFunc_SelectFloat_ReturnValue_9, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_10, double CallFunc_SelectFloat_ReturnValue_10, double CallFunc_SelectFloat_ReturnValue_11, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_11, double CallFunc_SelectFloat_ReturnValue_12, double CallFunc_SelectFloat_ReturnValue_13, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_12, double CallFunc_SelectFloat_ReturnValue_14, double CallFunc_CalculatePercentage_CurrentPercentage, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_13, double CallFunc_SelectFloat_ReturnValue_15, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_14, double CallFunc_SelectFloat_ReturnValue_16, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_15, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_16, double CallFunc_SelectFloat_ReturnValue_17, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_17, double CallFunc_SelectFloat_ReturnValue_18, double CallFunc_CalculatePercentage_CurrentPercentage_1, double CallFunc_CalculatePercentage_CurrentPercentage_2, double CallFunc_CalculatePercentage_CurrentPercentage_3, double CallFunc_CalculatePercentage_CurrentPercentage_4, double CallFunc_CalculatePercentage_CurrentPercentage_5, double CallFunc_CalculatePercentage_CurrentPercentage_6, double K2Node_Event_Float_9, double K2Node_Event_Float_8, double CallFunc_CalculatePercentage_CurrentPercentage_7, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_AddXP_NewXP, double CallFunc_CalculatePercentage_CurrentPercentage_8, double K2Node_Event_Float_7, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_AddXP_NewXP_1, double CallFunc_CalculatePercentage_CurrentPercentage_9, double K2Node_Event_Float_6, double CallFunc_CalculatePercentage_CurrentPercentage_10, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_AddXP_NewXP_2, double CallFunc_CalculatePercentage_CurrentPercentage_11, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_18, double K2Node_Event_Float_5, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_AddXP_NewXP_3, double CallFunc_CalculatePercentage_CurrentPercentage_12, double K2Node_Event_Float_4, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, double CallFunc_CalculatePercentage_CurrentPercentage_13, double CallFunc_AddXP_NewXP_4, double K2Node_Event_Float_3, double CallFunc_SelectFloat_ReturnValue_19, double CallFunc_Multiply_DoubleDouble_ReturnValue_5, double CallFunc_Multiply_DoubleDouble_ReturnValue_6, double CallFunc_AddXP_NewXP_5, double CallFunc_CalculatePercentage_CurrentPercentage_14, double K2Node_Event_Float_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_7, double CallFunc_CalculatePercentage_CurrentPercentage_15, double CallFunc_AddXP_NewXP_6, double K2Node_Event_Float_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_8, double CallFunc_CalculatePercentage_CurrentPercentage_16, double CallFunc_AddXP_NewXP_7, double K2Node_Event_Float, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_19, double CallFunc_Multiply_DoubleDouble_ReturnValue_9, double CallFunc_AddXP_NewXP_8, double CallFunc_CalculatePercentage_CurrentPercentage_17, double CallFunc_Multiply_DoubleDouble_ReturnValue_10, double CallFunc_AddXP_NewXP_9, double CallFunc_Multiply_DoubleDouble_ReturnValue_11, double CallFunc_AddXP_NewXP_10, double CallFunc_Multiply_DoubleDouble_ReturnValue_12, double CallFunc_AddXP_NewXP_11, double CallFunc_Multiply_DoubleDouble_ReturnValue_13, double CallFunc_AddXP_NewXP_12, double CallFunc_Multiply_DoubleDouble_ReturnValue_14, double CallFunc_AddXP_NewXP_13, double CallFunc_CalculatePercentage_CurrentPercentage_18, double CallFunc_Multiply_DoubleDouble_ReturnValue_15, double CallFunc_Multiply_DoubleDouble_ReturnValue_16, double CallFunc_AddXP_NewXP_14, double CallFunc_AddXP_NewXP_15, double CallFunc_Multiply_DoubleDouble_ReturnValue_17, double CallFunc_AddXP_NewXP_16, double CallFunc_AddXP_NewXP_17, double CallFunc_Multiply_DoubleDouble_ReturnValue_18, double CallFunc_AddXP_NewXP_18, double CallFunc_Multiply_DoubleDouble_ReturnValue_19, double CallFunc_AddXP_NewXP_19, double CallFunc_CalculatePercentage_CurrentPercentage_19);
};

}


