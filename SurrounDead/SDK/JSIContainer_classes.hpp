#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x42B (0x6EB - 0x2C0)
// WidgetBlueprintGeneratedClass JSIContainer.JSIContainer_C
class UJSIContainer_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x2C0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                               ContainerBorder;                                   // 0x2C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            ContainerNameTxt;                                  // 0x2D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              MainOverlay;                                       // 0x2D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                              NameSBox;                                          // 0x2E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                     Ungrid;                                            // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                         Initialized;                                       // 0x2F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_52FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ContainerID;                                       // 0x2F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	enum class EContainerType                    ContainerType;                                     // 0x2F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_52FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumberOfColumns;                                   // 0x2FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                        NumberOfRows;                                      // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_5300[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UJSI_Slot_C*>                   WSlots;                                            // 0x308(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                       OpacityValue;                                      // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                        MaxEquippedStack;                                  // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_5301[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             SlotSize;                                          // 0x328(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                             EquippedItemSlotSize;                              // 0x338(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         EquippedImageMatchesContainerSize_;                // 0x348(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_5302[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMargin                               SlotPadding;                                       // 0x34C(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FSlateColor                           SlotOnHoverColor;                                  // 0x35C(0x14)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                           DragHighlightColor;                                // 0x370(0x14)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                           InvalidDragHighlightColor;                         // 0x384(0x14)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<struct FRarityColors>                 RarityColors;                                      // 0x398(0x10)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UTexture2D*                            SlotImage;                                         // 0x3A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                        CurrentSlotIndex;                                  // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5305[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UJSI_Slot_C*>                   HighlightedSlots;                                  // 0x3B8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                         CanDrop_;                                          // 0x3C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5307[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FromXLoc;                                          // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        FromYLoc;                                          // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_530A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UJSI_Slot_C*                           SlotRecH;                                          // 0x3D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                             MouseLocH;                                         // 0x3E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                   ArrayOfItems;                                      // 0x3F0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                         HideSlotImageWhenEquipped_;                        // 0x400(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         RotateEquippedImage;                               // 0x401(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_530C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EJSItemType>               SupportedItemTypes;                                // 0x408(0x10)(Edit, BlueprintVisible, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_            ItemsCombined;                                     // 0x418(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            DropInfo_ContainerToContainer;                     // 0x428(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            DropInfo_OnItemEquippedChange;                     // 0x438(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FName>                          OnlySupportTheseIDs;                               // 0x448(0x10)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class FName>                          DoNotSupportTheseIDs;                              // 0x458(0x10)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FKey                                  RotateKey;                                         // 0x468(0x18)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                        DropToSlot;                                        // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5311[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FKey                                  SplitKey;                                          // 0x488(0x18)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            DropInfo_SplitPerformed;                           // 0x4A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Drop_ItemOverItem;                                 // 0x4B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	enum class EDragPivot                        DragBehaviour;                                     // 0x4C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_5315[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MaxWeight;                                         // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         HideItemOnDrag_;                                   // 0x4D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_5318[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ContainerName;                                     // 0x4D8(0x18)(Edit, BlueprintVisible)
	struct FSlateFontInfo                        ContainerNameFont;                                 // 0x4F0(0x58)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FMargin                               ContainerNamePadding;                              // 0x548(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FDefaultItemInfo>              AddDefaultItems;                                   // 0x558(0x10)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                         AllowDrag;                                         // 0x568(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         AllowDragFromOtherContainers;                      // 0x569(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         AllowMovingItemsOnDrop;                            // 0x56A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         AllowOpeningContainers;                            // 0x56B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         HandleContainerToContainerDrop;                    // 0x56C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_531C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            Drop_ContainerOnContainerUnhandled;                // 0x570(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         ReceiveAllUnhandledEvent;                          // 0x580(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         ShowPrices;                                        // 0x581(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_531F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSlotMouseButtonDown;                             // 0x588(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnSlotDoubleClick;                                 // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         AllowDropToGround;                                 // 0x5A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_5327[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemSlotOrRotationChanged;                       // 0x5B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UJSI_Slot_C*                           SlotMother;                                        // 0x5C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnItemSplitRequest;                                // 0x5C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         AutoPerformSplit;                                  // 0x5D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_532A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemStackRequest;                                // 0x5E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         AutoPerformStack;                                  // 0x5F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_532C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStackCountChanged;                               // 0x5F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                        ParentID;                                          // 0x608(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_532F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EJSItemType>               SortHighlightedTypes;                              // 0x610(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         AllowBlindAddItemToContainer_;                     // 0x620(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         IsPartSpecialContainer;                            // 0x621(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         DropOnContainerSlot;                               // 0x622(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5332[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSlotMouseButtonUp;                               // 0x628(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UJSIContainer_C*                       SpecialSContainer;                                 // 0x638(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                         TriggerItemOverItemIfCannotAddToContainer;         // 0x640(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         IsSpecialLootContainer;                            // 0x641(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5333[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                EquippedActorRef;                                  // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                         Debug_;                                            // 0x650(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         AllowContextMenu;                                  // 0x651(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_5335[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBP_JigMultiplayer_C*                  JigMultiplayerComp;                                // 0x658(0x8)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<enum class EJigContextMenu>           DoNotAllowContextMenuOptions;                      // 0x660(0x10)(Edit, BlueprintVisible, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_            OnItemRemoved;                                     // 0x670(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         IsActionbar;                                       // 0x680(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         AllowStackingEquippedItem;                         // 0x681(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_533A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       ContainerWeight;                                   // 0x688(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnWeightUpdated;                                   // 0x690(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         ShowDurability;                                    // 0x6A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         OnImageCaptureTryAdjustScaleWhenEquipped;          // 0x6A1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         AllowCapturingItemImage;                           // 0x6A2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_533E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCapacityUpdated;                                 // 0x6A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UJSIContainer_C*                       CanSwapWithJSIContainer;                           // 0x6B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnUniqueIDSet;                                     // 0x6C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         VisualHighlighted_;                                // 0x6D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5340[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateColor                           DragVisualHighlightColor;                          // 0x6D4(0x14)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         AllowVisualHighlight;                              // 0x6E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         CurrencyCredits_;                                  // 0x6E9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CallStackRequestOnContainerEmitter;                // 0x6EA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UJSIContainer_C* GetDefaultObj();

	void SetActionbarFollower(class UJSI_Slot_C* JigRef, bool* Return);
	void GetAllAttachments(TArray<class FName>* Attachments);
	void GetListOfNonAddContainers(TArray<class UJSIContainer_C*>* Containers);
	void GetJSIContainerByPlayerSlots(enum class EPlayerSlots Slot, class UJSIContainer_C** Container, class UJSI_Slot_C** EquippedItem, bool* IsPending_);
	void GetDropWidget(class UDropItemBackGwidget_C** DropWRef);
	void GetContainerByAttachmentType(enum class EAttachmentType Type, class UJSIContainer_C** JigContainer, int32* ContainerIndex);
	void GetListOfContainers(TArray<class UJSIContainer_C*>* Containers, TArray<class UJSIContainer_C*>& K2Node_MakeArray_Array);
	void OnDropCheckStackability(class UJSI_Slot_C* FixedSlot, class UJSI_Slot_C* ItemDropped, class UJSI_Slot_C** StackWith, class UJSI_Slot_C* Result, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_CanStack__CanStack, bool CallFunc_CanStack__FreeSpaceAvailable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UJSI_Slot_C* CallFunc_GetHostedSlot_HostingItem, bool CallFunc_IsValid_ReturnValue_1, class UUserWidget* CallFunc_GetContainerOneRef_ContainerRef, TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_2, TArray<class UJSIContainer_C*>& CallFunc_GetListOfContainers_Containers, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class UJSIContainer_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_CheckIfCanStack_Sucess, class UJSI_Slot_C* CallFunc_CheckIfCanStack_ItemRef, class UJSI_Slot_C* CallFunc_Array_Get_Item_1);
	void SetSlotDragVisualHighlight(bool Valid_, bool Temp_bool_Variable, bool CallFunc_GetEquippedItemRef_Found_, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_Select_Default, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_SetHighlight_Highlight);
	void HighlightNext(class UJSI_Slot_C* Current, class UJSI_Slot_C** CurrentHighlighted, class UJSI_Slot_C* CurrentBest, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_IsValid_ReturnValue_2, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_3);
	void GetContainerIndex(int32* Index, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UUserWidget* CallFunc_GetContainerOneRef_ContainerRef, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface, bool K2Node_DynamicCast_bSuccess, TArray<class UJSIContainer_C*>& CallFunc_GetListOfContainers_Containers, bool CallFunc_IsValid_ReturnValue_1, class UJSIContainer_C* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void Deep_GettAllItems(TArray<class UJSI_Slot_C*>& ArrByRef, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UUserWidget* CallFunc_GetContainerOneRef_ContainerRef, bool CallFunc_Less_IntInt_ReturnValue, TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface, bool K2Node_DynamicCast_bSuccess, TArray<class UJSIContainer_C*>& CallFunc_GetListOfContainers_Containers, bool CallFunc_IsValid_ReturnValue, class UJSIContainer_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void CheckWeightLimit(double ItemWeight, class UJSIContainer_C* FromContainer, bool* Result, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetDtRef(enum class E_DataTableType Type, class UDataTable** DTReference, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FS_FINAL_DataTableReference& K2Node_MakeStruct_S_FINAL_DataTableReference, int32 CallFunc_Array_Length_ReturnValue, const struct FS_DataTableReference& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void CheckLimitedEquipToStack(class UJSI_Slot_C* DroppedSlotRef, class UDragWidget_C* DragWidgetRef, class UJSI_Slot_C* FixedSlotRef, bool* Handled_, int32 SplitAmount, bool CallFunc_CanStack__CanStack, bool CallFunc_CanStack__FreeSpaceAvailable, bool CallFunc_EquipItemFromJigRef_Added, class UJSI_Slot_C* CallFunc_EquipItemFromJigRef_EquippedItemRef, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_GetCount_Count, bool CallFunc_LessEqual_IntInt_ReturnValue, class UJigSplitWidget_C* CallFunc_Create_ReturnValue, bool CallFunc_RemoveCount_Removed_, int32 CallFunc_RemoveCount_NewCount, enum class E_DataTableType CallFunc_GetDT_DataTableRef, class FName CallFunc_GetItemID_ItemID, bool CallFunc_EquipItem_Equipped, class UJSI_Slot_C* CallFunc_EquipItem_SlotItemRef, int32 CallFunc_GetCount_Count_1, int32 CallFunc_Clamp_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsEquipTo__ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	void GetItemsByStackAbility(class FName ItemId, bool* Sucess, TArray<class UJSI_Slot_C*>* Items, const TArray<class UJSI_Slot_C*>& FoundItems, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void AdjustFromXY(const struct FVector2D& ItemVe, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1);
	void Update_OnCountChanged(class UJSI_Slot_C* ItemRef, int32 OldCount, int32 NewCount, int32 CallFunc_Subtract_IntInt_ReturnValue, double CallFunc_GetDefaultWeight_Weight, double CallFunc_Multiply_IntFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue);
	void Update_OnItemRemoved(class UJSI_Slot_C* ItemRef, double ItemWeight, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Update_OnItemAdded(class UJSI_Slot_C* ItemRef, double ItemWeight, bool CallFunc_IsValid_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue);
	void CheckIfCanStack(class UJSI_Slot_C* WithItemRef, bool* Sucess, class UJSI_Slot_C** ItemRef, bool CallFunc_IsItemPending__IsPending, bool CallFunc_CanStack__CanStack, bool CallFunc_CanStack__FreeSpaceAvailable, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_CanStackSingleSlot__Sucess, class UJSI_Slot_C* CallFunc_CanStackSingleSlot__ItemRef, bool CallFunc_BooleanAND_ReturnValue_1);
	void ManageContainerName(bool Temp_bool_Variable, enum class ESlateVisibility Temp_byte_Variable, enum class ESlateVisibility Temp_byte_Variable_1, bool CallFunc_IsEquipped__ReturnValue, enum class ESlateVisibility K2Node_Select_Default);
	void GetLastItem(class UJSI_Slot_C** ItemRef, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item);
	void CanAddItemToSlot_IgnoreItems(int32 ToSlot, const struct FVector2D& ItemVector, bool TryRotated_, TArray<class UJSI_Slot_C*>& IgnoreItems, bool* Result, bool* RotatedVector_, bool AllGood_, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, TArray<int32>& CallFunc_GetHostingSlots_Indexes, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, TArray<int32>& CallFunc_GetHostingSlots_Indexes_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Greater_IntInt_ReturnValue_1, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Get_Item, int32 Temp_int_Array_Index_Variable_1, int32 CallFunc_Array_Get_Item_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsEmptySlot_isEmpty, bool CallFunc_BooleanOR_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_3, bool CallFunc_Array_Contains_ReturnValue_1, bool CallFunc_IsEmptySlot_isEmpty_1, bool CallFunc_BooleanOR_ReturnValue_1);
	void TrySwapItems(class UJSI_Slot_C* Item1, class UJSI_Slot_C* Item2, bool* Success, int32 Item2NewIndex, int32 Item1NewIndex, bool Item2Rotated, bool Item1Rotated, const TArray<class UJSI_Slot_C*>& PostAddIgnoreSlotsArr, const TArray<class UJSI_Slot_C*>& IgnoreSlotsArr, bool SameContainer, class UJSIContainer_C* Item2_Container, class UJSIContainer_C* Item1_Container, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FVector2D& CallFunc_GetSlotDim_SlotDimension, bool CallFunc_AddItemFromJigRef_Added, class UJSI_Slot_C* CallFunc_AddItemFromJigRef_AddedItemRef, bool CallFunc_AddItemFromJigRef_Added_1, class UJSI_Slot_C* CallFunc_AddItemFromJigRef_AddedItemRef_1, bool CallFunc_RemoveFromJSIParent_Removed, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool Temp_bool_Variable, int32 Temp_int_Loop_Counter_Variable_2, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_CanAddItemToSlot_IgnoreItems_Result, bool CallFunc_CanAddItemToSlot_IgnoreItems_RotatedVector_, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FVector2D& CallFunc_GetSlotDim_SlotDimension_1, const struct FVector2D& CallFunc_FlipSlotDim_Flipped, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_CanAddItemToSlot_IgnoreItems_Result_1, bool CallFunc_CanAddItemToSlot_IgnoreItems_RotatedVector__1, const struct FVector2D& K2Node_Select_Default, TArray<int32>& CallFunc_GetHostingSlots_Indexes, int32 CallFunc_Array_Get_Item_2, class UJSI_Slot_C* CallFunc_Array_Get_Item_3, bool CallFunc_Array_RemoveItem_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2);
	void Deep_Search_for_Item_by_ID(class FName ItemId, bool SearchInEquipTo_, class UJSI_Slot_C** ItemRef, bool* Found_, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class UUserWidget* CallFunc_GetContainerOneRef_ContainerRef, class FName CallFunc_GetItemID_ItemID, TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_NameName_ReturnValue, TArray<class UJSIContainer_C*>& CallFunc_GetListOfContainers_Containers, class UJSIContainer_C* CallFunc_Array_Get_Item_1, class UJSI_Slot_C* CallFunc_Deep_Search_for_Item_by_ID_ItemRef, bool CallFunc_Deep_Search_for_Item_by_ID_Found_, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue);
	bool DoesItemExist(class UJSI_Slot_C* ItemRef, bool CallFunc_Array_Contains_ReturnValue);
	void GetEmptySlotTryRotated_NonPure(const struct FVector2D& SlotVector, bool* Found_, int32* ToSlotIndex, bool* Rotated_, int32 ToIndex, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, bool CallFunc_NotEqual_IntInt_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, int32 CallFunc_GetEmptySlot_SlotIndex, bool CallFunc_GetEmptySlot_Found_, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, int32 CallFunc_GetEmptySlot_SlotIndex_1, bool CallFunc_GetEmptySlot_Found__1, bool CallFunc_NotEqual_IntInt_ReturnValue_1);
	void GetHighestCapacityContainer(TArray<class UJSI_Slot_C*>& Items, class UJSI_Slot_C** Output_Get, class UJSI_Slot_C* CurrentBestItem, int32 CurrentCap, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_ISCapacityContainer_ReturnValue, int32 CallFunc_GetContainerCapacity_Cap, int32 CallFunc_GetContainerCapacity_MaxCapacity, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void CheckUnhandledStack(class UJSI_Slot_C* DropedSlotRef, class UJSI_Slot_C* FixedSlotRef, bool* Result, bool CallFunc_IsValid_ReturnValue, bool CallFunc_CanStack__CanStack, bool CallFunc_CanStack__FreeSpaceAvailable, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_CompareItems_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3);
	void CheckUnhandledSplit(class UJSI_Slot_C* DroppedSlotRef, class UDragWidget_C* DragWidgetRef, class UJSI_Slot_C* FixedSlotRef, bool DroppedRotated_, bool* Handled_, int32 SplitAmount, class UJigSplitWidget_C* CallFunc_Create_ReturnValue, int32 CallFunc_GetCount_Count, bool CallFunc_CanStack__CanStack, bool CallFunc_CanStack__FreeSpaceAvailable, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_GetCount_Count_1, int32 CallFunc_Clamp_ReturnValue, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_GetCount_Count_2, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsEquipTo__ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	int32 GetFreeSpaceIfCapacityContainer(bool CallFunc_CheckIfCapacityContainer_ReturnValue, int32 CallFunc_GetContainerCapacity_Cap, int32 CallFunc_GetContainerCapacity_MaxCapacity, int32 CallFunc_Subtract_IntInt_ReturnValue);
	void DragSelectContainer(class UJSIContainer_C* MotherC, class UJSI_Slot_C* SlotReceiver, class UJSIContainer_C** MotherRef, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void GetInventoryItemsByIDList(TArray<class FName>& ItemId, bool* Found_, TArray<class UJSI_Slot_C*>* ItemsFound, const TArray<class UJSI_Slot_C*>& ItemsFoundArray, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue);
	void GetTotalCountOfItemType(enum class EJSItemType ItemType, int32* TotalItemCount, int32 TotalCount, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, enum class EJSItemType CallFunc_GetType_Type, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_GetCount_Count, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void GetTotalCountOfItemID(class FName ItemId, int32* TotalItemCount, int32 TotalCount, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_GetItemID_ItemID, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, int32 CallFunc_GetCount_Count, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void SetLock_Column_Row(int32 ColumnToLock, int32 RowToLock, bool Lock_, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 Temp_int_Variable_1, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1);
	void ExpandContainer(int32 AddColumns, int32 AddRows, bool* Success, int32 InsertInIndex, int32 NewRowItemcounter, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, int32 CallFunc_GetSlotIndex_Result, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, class UJSI_Slot_C* CallFunc_Create_ReturnValue, class UUniformGridSlot* CallFunc_AddChildToUniformGrid_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Add_IntInt_ReturnValue_3, const struct FMargin& K2Node_MakeStruct_Margin_1, int32 CallFunc_GetSlotIndex_Result_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1, int32 Temp_int_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 CallFunc_Add_IntInt_ReturnValue_5, int32 Temp_int_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_6, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UJSI_Slot_C* CallFunc_Array_Get_Item, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, class UJSI_Slot_C* CallFunc_Create_ReturnValue_1, class UUniformGridSlot* CallFunc_AddChildToUniformGrid_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_7, bool CallFunc_Greater_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_8, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_9, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 Temp_int_Variable_4, int32 CallFunc_Add_IntInt_ReturnValue_10, int32 CallFunc_Add_IntInt_ReturnValue_11, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_12, int32 CallFunc_Subtract_IntInt_ReturnValue_2, bool CallFunc_LessEqual_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_13, int32 CallFunc_Subtract_IntInt_ReturnValue_3, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void FindSlotByIndex(int32 Index, class UJSI_Slot_C** SlotRef, bool CallFunc_GreaterEqual_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void FindBestStackingItem(class FName ItemId, int32 DroppedItemCount, class UJSI_Slot_C** BestStackingItem, int32* FreeSpace, bool* CanStackAll, int32 AvailableFreeSpace, class UJSI_Slot_C* CurrentBest, int32 CurrentCount, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_GetCount_Count, int32 CallFunc_GetMaxStack_MaxStack, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_GetMaxCapacity_MaxCap, bool CallFunc_BooleanOR_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, class FName CallFunc_GetItemID_ItemID, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void GetTotalWeight(double& WeightRef, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_GetWeight_ReturnValue, int32 CallFunc_GetCount_Count, class UUserWidget* CallFunc_GetContainerOneRef_ContainerRef, double CallFunc_Multiply_IntFloat_ReturnValue, TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface, bool K2Node_DynamicCast_bSuccess, double CallFunc_Add_DoubleDouble_ReturnValue, TArray<class UJSIContainer_C*>& CallFunc_GetListOfContainers_Containers, class UJSIContainer_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1);
	void ClearItemFromArr(class UJSI_Slot_C* SlotRef, class UJSIContainer_C* ToContainer_, bool TriggerUnequippedEvent_, bool* Removed, bool Removed_, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsEquipTo__ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_IsEquipTo__ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1);
	void IsSupportedByThis(class FName ItemId, enum class EJSItemType& Type, bool* Supported_, bool CallFunc_IsSupportedType__Supported_);
	void EquipItemFromJigRef(class UJSI_Slot_C* ItemRef, bool CallEquipEvent_, bool* Added, class UJSI_Slot_C** EquippedItemRef, class UJSIContainer_C* FromC, const struct FVector2D& ItemVec, bool Rotate_, int32 ToIndex, bool CallFunc_IsValid_ReturnValue, bool CallFunc_AddItemFromJigRef_Added, class UJSI_Slot_C* CallFunc_AddItemFromJigRef_AddedItemRef, bool Temp_bool_Variable, bool CallFunc_IsSupportedByThis_Supported_, bool CallFunc_IsValid_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue_2, const struct FVector2D& CallFunc_CalculateSize_ReturnValue, const struct FVector2D& K2Node_Select_Default, const struct FVector2D& CallFunc_ResizeSlot_Size, bool CallFunc_IsEquipTo__ReturnValue, bool Temp_bool_Variable_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_IsEquipped__ReturnValue, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array, bool CallFunc_Not_PreBool_ReturnValue, enum class ESlateVisibility Temp_byte_Variable, bool CallFunc_BooleanAND_ReturnValue, enum class ESlateVisibility Temp_byte_Variable_1, const struct FVector2D& CallFunc_CalculateSizeCustom_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, class UTexture* CallFunc_GetImageFromInfo_Image, bool CallFunc_isRotated__ReturnValue, class UTexture* K2Node_Select_Default_1, bool CallFunc_UpdateImage_Updated, bool Temp_bool_Variable_2, enum class ESlateVisibility K2Node_Select_Default_2, int32 CallFunc_GetColumnRowBySlotIndex_Column, int32 CallFunc_GetColumnRowBySlotIndex_Row, const struct FMargin& CallFunc_GetPaddingBySlotIndex_Padding, int32 CallFunc_GetPaddingBySlotIndex_Conumn, int32 CallFunc_GetPaddingBySlotIndex_Row, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_ClearItemFromArr_Removed, class UOverlaySlot* CallFunc_AddChildToOverlay_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void CanAddItemToSlot(int32 ToSlot, const struct FVector2D& ItemVector, bool TryRotated_, bool* Result, bool* RotatedVector_, bool AllGood_, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, TArray<int32>& CallFunc_GetHostingSlots_Indexes, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, TArray<int32>& CallFunc_GetHostingSlots_Indexes_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Get_Item, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, int32 CallFunc_Array_Get_Item_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_IsEmptySlot_isEmpty, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_3, bool CallFunc_IsEmptySlot_isEmpty_1);
	void GetHostingSlots(int32 SlotIndex, const struct FVector2D& ItemVec, TArray<int32>* Indexes, int32 StartingRow, int32 StartingCol, int32 Y, int32 X, const TArray<int32>& HostingSlots, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, int32 CallFunc_GetColumnRowBySlotIndex_Column, int32 CallFunc_GetColumnRowBySlotIndex_Row, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_5, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_6, int32 CallFunc_Add_IntInt_ReturnValue_7, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void AddItemFromJigRef(class UJSI_Slot_C* ItemRef, int32 ToSlot, bool RotateItem_, bool TryRotated_, bool* Added, class UJSI_Slot_C** AddedItemRef, bool FromEquipTo, class UJSIContainer_C* FromC, const TArray<class UJSI_Slot_C*>& HostedSlots, const struct FVector2D& ItemVec, bool Rotate_, int32 ToIndex, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EquipItemFromJigRef_Added, class UJSI_Slot_C* CallFunc_EquipItemFromJigRef_EquippedItemRef, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsEquipTo__ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, bool CallFunc_IsSupportedByThis_Supported_, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsEquipTo__ReturnValue_1, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsEquipTo__ReturnValue_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_GetEmptySlot_SlotIndex, bool CallFunc_GetEmptySlot_Found_, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, int32 CallFunc_GetEmptySlot_SlotIndex_1, bool CallFunc_GetEmptySlot_Found__1, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable_2, bool CallFunc_IsValid_ReturnValue_5, class UTexture* CallFunc_GetImageFromInfo_Image, class UTexture* K2Node_Select_Default, bool CallFunc_isRotated__ReturnValue, bool CallFunc_UpdateImage_Updated, const struct FVector2D& CallFunc_GetSlotDim_SlotDimension, bool Temp_bool_Variable_3, const struct FVector2D& CallFunc_CalculateSize_ReturnValue, const struct FVector2D& CallFunc_ResizeSlot_Size, bool Temp_bool_Variable_4, bool K2Node_Select_Default_1, int32 CallFunc_GetColumnRowBySlotIndex_Column, int32 CallFunc_GetColumnRowBySlotIndex_Row, const struct FMargin& CallFunc_GetPaddingBySlotIndex_Padding, int32 CallFunc_GetPaddingBySlotIndex_Conumn, int32 CallFunc_GetPaddingBySlotIndex_Row, int32 CallFunc_Array_Add_ReturnValue, class UOverlaySlot* CallFunc_AddChildToOverlay_ReturnValue, TArray<int32>& CallFunc_GetHostingSlots_Indexes, bool CallFunc_ClearItemFromArr_Removed, int32 CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue_1, const struct FVector2D& CallFunc_FlipSlotDim_Flipped, bool CallFunc_CanAddItemToSlot_Result, bool CallFunc_CanAddItemToSlot_RotatedVector_, bool CallFunc_Not_PreBool_ReturnValue_1, bool K2Node_Select_Default_2, bool Temp_bool_Variable_5, const struct FVector2D& K2Node_Select_Default_3, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void GetMaxCapacity(int32 ItemMaxStack, int32* MaxCap, int32 CallFunc_GetMaxStack_MaxStack, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsContainer__IsContainer_, bool CallFunc_BooleanAND_ReturnValue);
	void GetCapacity(int32* Cap, int32 TempInt, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_GetCount_Count, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void UpdateCapacityContainer(int32 TempInt, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_GetMaxStack_MaxStack, bool CallFunc_IsValid_ReturnValue, class UUserWidget* CallFunc_GetSpecialContainerRef_SpecialContainerRef, TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface, bool K2Node_DynamicCast_bSuccess, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_GetCount_Count, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_CheckIfCapacityContainer_ReturnValue);
	bool CheckIfCapacityContainer(bool CallFunc_ISCapacityContainer_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void DummyFunction();
	void GetImageFromInfo(const struct FFItemInfo& Info, class UTexture** Image, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsEquipTo__ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_IsEquipTo__ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_2);
	void CheckIfCanAddToSpecial(class UJSI_Slot_C* ItemSP, class UJSI_Slot_C* ItemToAdd, bool CheckBlind_, bool* CanAdd, class UJSIContainer_C** ToContainer, class UJSIContainer_C* CurrentSpecialC, int32 Temp_int_Array_Index_Variable, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class UUserWidget* CallFunc_GetSpecialContainerRef_SpecialContainerRef, TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, TArray<class UJSIContainer_C*>& CallFunc_GetListOfContainers_Containers, class UJSIContainer_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_CanStackSingleSlot__Sucess, class UJSI_Slot_C* CallFunc_CanStackSingleSlot__ItemRef, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_CheckWeightLimit_Result, int32 CallFunc_GetEmptySlot_SlotIndex, bool CallFunc_GetEmptySlot_Found_, const struct FVector2D& CallFunc_FlipSlotDim_Flipped, bool CallFunc_IsEquipped__ReturnValue, int32 CallFunc_GetEmptySlot_SlotIndex_1, bool CallFunc_GetEmptySlot_Found__1, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_IsSupportedType__Supported_, bool CallFunc_BooleanOR_ReturnValue);
	void CheckRootContainer(class UJSI_Slot_C* DraggedItem, bool* Proceed_, int32 Temp_int_Array_Index_Variable, class UUserWidget* CallFunc_GetSpecialContainerRef_SpecialContainerRef, TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, TArray<class UJSIContainer_C*>& CallFunc_GetListOfContainers_Containers, class UJSIContainer_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TArray<class UJSIContainer_C*>& CallFunc_GetContainerHierarchy_Containers, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, TArray<class UJSIContainer_C*>& CallFunc_GetContainerHierarchy_Containers_1, bool CallFunc_Array_Contains_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue);
	bool CompareItems(class UJSI_Slot_C* Item1, class UJSI_Slot_C* Item2, enum class E_DataTableType CallFunc_GetDT_DataTableRef, enum class E_DataTableType CallFunc_GetDT_DataTableRef_1, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void SetEquippedHighlight(bool Valid, bool Temp_bool_Variable, bool Temp_bool_Variable_1, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FSlateColor& K2Node_Select_Default, bool CallFunc_GetEquippedItemRef_Found_, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array, class UJSI_Slot_C* K2Node_Select_Default_1, bool CallFunc_SetHighlight_Highlight);
	bool IsSlotContainer(bool CallFunc_GetEquippedItemRef_Found_, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef, bool CallFunc_IsContainer__IsContainer_);
	void GetEmptySlotTryRotated(const struct FVector2D& SlotVector, bool* Found_, int32 ToIndex, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, int32 CallFunc_GetEmptySlot_SlotIndex, bool CallFunc_GetEmptySlot_Found_, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, int32 CallFunc_GetEmptySlot_SlotIndex_1, bool CallFunc_GetEmptySlot_Found__1, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue);
	bool IsEquipTo_(bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void HandleDragEnter(class UJSI_Slot_C* DraggedItem, bool IsContainer, bool CallFunc_IsContainer__IsContainer_, const struct FSlateColor& K2Node_MakeStruct_SlateColor, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_CheckIfCanStack_Sucess, class UJSI_Slot_C* CallFunc_CheckIfCanStack_ItemRef, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_IsEquipped__ReturnValue, bool CallFunc_BooleanAND_ReturnValue_3, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_GetEquippedItemRef_Found_, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef, bool CallFunc_GetEquippedItemRef_Found__1, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef_1, bool CallFunc_IsSpecialContainer__ReturnValue, bool CallFunc_IsSpecialContainer__ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_GetEquippedItemRef_Found__2, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef_2, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_CheckIfCanAddToSpecial_CanAdd, class UJSIContainer_C* CallFunc_CheckIfCanAddToSpecial_ToContainer, bool CallFunc_NotEqual_ObjectObject_ReturnValue_1, bool CallFunc_GetEquippedItemRef_Found__3, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef_3, bool CallFunc_GetEquippedItemRef_Found__4, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef_4, bool CallFunc_ISCapacityContainer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_IsSlotContainer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_4, bool Temp_bool_Variable, class UJSI_Slot_C* K2Node_Select_Default, bool CallFunc_SetHighlight_Highlight, bool CallFunc_NotEqual_ObjectObject_ReturnValue_2, bool CallFunc_IsSupportedType__Supported_, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_IsEquipped__ReturnValue_1, bool CallFunc_GetEmptySlotTryRotated_Found_, bool CallFunc_IsSupportedType__Supported__1, bool CallFunc_BooleanAND_ReturnValue_6, bool CallFunc_IsEquipTo__ReturnValue_1);
	void SetSlotHighlight(bool Valid_, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array, const struct FSlateColor& K2Node_Select_Default, bool CallFunc_SetHighlight_Highlight);
	void GetContainerHierarchy(TArray<class UJSIContainer_C*>* Containers, const TArray<class UJSIContainer_C*>& FoundContainers, class UJSIContainer_C* CurrentContainer, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void SelectRotation(class UJSI_Slot_C* ItemRef, bool DroppedRotated_, bool* Rotated, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, bool K2Node_Select_Default);
	bool SomeFunctionBool(bool CallFunc_RandomBool_ReturnValue);
	void ReMinusSortHighlightItems();
	void RemoveSortHighlightedTypes(TArray<enum class EJSItemType>& Types, const TArray<int32>& RemoveIndexes, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, enum class EJSItemType CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Array_Contains_ReturnValue);
	void AddSortHighlightedTypes(TArray<enum class EJSItemType>& Types);
	void HighlightItemsByType(TArray<enum class EJSItemType>& Types, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Array_Index_Variable_3, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_IsCraftingStation_ReturnValue, enum class EJSItemType CallFunc_GetType_Type, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_5, class UJSI_Slot_C* CallFunc_Array_Get_Item_3, bool CallFunc_Less_IntInt_ReturnValue_3, enum class EJSItemType CallFunc_GetType_Type_1, bool CallFunc_Array_Contains_ReturnValue_1);
	void GetRootContainerRef(bool ExcludeEquipTo, class UJSIContainer_C** ContainerREF, class UJSIContainer_C* CallFunc_GetRootContainerRef_ContainerRef, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void GetItemByUniqueID(int32 UniqueID, bool* Found, class UJSI_Slot_C** Item, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_GetUniqueID_UniqueServerID, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void GetSlotMotherUID(bool ReturnContainerID_IfInvalid_, bool GetContainerIDIfSpecialC_, int32* UDID, bool CallFunc_IsSpecialContainer__ReturnValue, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_GetUniqueID_UniqueServerID);
	void MoveItemToIndexBySlotIndex(int32 ItemSlotIndex, int32 ToIndex, bool Rotate_, bool* Moved_, class UJSI_Slot_C* TheItemRef, const TArray<class UJSI_Slot_C*>& HostingSlots, int32 TargetRow, int32 TargetColumn, int32 SlotIndex, const struct FVector2D& ItemVector, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_GetHostedSlot_HostingItem, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_isRotated__ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FMargin& CallFunc_GetPaddingBySlotIndex_Padding, int32 CallFunc_GetPaddingBySlotIndex_Conumn, int32 CallFunc_GetPaddingBySlotIndex_Row, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_3, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, bool Temp_bool_Variable, const struct FVector2D& K2Node_Select_Default, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_3, int32 CallFunc_Array_Add_ReturnValue, class UJSI_Slot_C* CallFunc_GetHostedSlot_HostingItem_1, bool CallFunc_IsEmptySlot_isEmpty, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_5, int32 CallFunc_Add_IntInt_ReturnValue_6, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_7, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_GetColumnRowBySlotIndex_Column, int32 CallFunc_GetColumnRowBySlotIndex_Row, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1);
	void MoveItemToIndexByItemRef(class UJSI_Slot_C* ItemRef, int32 ToIndex, bool Rotate_, bool* Moved_, const TArray<class UJSI_Slot_C*>& HostingSlots, int32 TargetRow, int32 TargetColumn, int32 SlotIndex, const struct FVector2D& ItemVector, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, bool Temp_bool_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_3, bool CallFunc_isRotated__ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FMargin& CallFunc_GetPaddingBySlotIndex_Padding, int32 CallFunc_GetPaddingBySlotIndex_Conumn, int32 CallFunc_GetPaddingBySlotIndex_Row, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Add_ReturnValue, class UJSI_Slot_C* CallFunc_GetHostedSlot_HostingItem, bool CallFunc_IsEmptySlot_isEmpty, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int32 CallFunc_GetColumnRowBySlotIndex_Column, int32 CallFunc_GetColumnRowBySlotIndex_Row, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_5, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_6, int32 CallFunc_Add_IntInt_ReturnValue_7, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_2, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FVector2D& K2Node_Select_Default, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1);
	void GetColumnRowBySlotIndex(int32 SlotIndex, int32* Column, int32* Row, int32 TempRow, int32 TempColumn, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Divide_IntInt_ReturnValue, int32 CallFunc_Percent_IntInt_ReturnValue);
	void GetItemBySlotIndex(int32 SlotIndex, bool* Found, class UJSI_Slot_C** Item, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsEmptySlot_isEmpty);
	void GetEquippedItemRef(bool* Found_, class UJSI_Slot_C** ItemRef, bool CallFunc_IsEquipTo__ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void CanStackSingleSlot_(struct FFItemInfo& Info, bool* Sucess, class UJSI_Slot_C** ItemRef, int32 CurrentCount, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void UpdateCountByUniqueID(int32 ID, int32 NewCount, bool* Sucess, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_UpdateCount_Count, int32 CallFunc_GetUniqueID_UniqueServerID, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void RemoveItemByUniqueID(int32 ID, bool* Sucess, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_RemoveInventoryItemByRef_Removed, int32 CallFunc_GetUniqueID_UniqueServerID, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void UnequipItem(bool TriggerUnequippedEvent_, bool* Unequipped, class UJSI_Slot_C** SlotRef, class UJSI_Slot_C* SlotR, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_IsEquipped__ReturnValue);
	void EquipItem(class FName ItemId, int32 Count, const struct FFItemInfo& CustomInfo, class UJSIContainer_C* SlotContainer, bool TriggerEquippedEvent_, enum class E_DataTableType InDataTable, bool* Equipped, class UJSI_Slot_C** SlotItemRef, bool CallFunc_NotEqual_NameName_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Greater_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Clamp_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_AddNewInventoryItem_CustomVector_Added, int32 CallFunc_AddNewInventoryItem_CustomVector_SlotIndex, const struct FFItemInfo& CallFunc_AddNewInventoryItem_CustomVector_ItemInfo, class UJSI_Slot_C* CallFunc_AddNewInventoryItem_CustomVector_SlotItemRef, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, enum class ESlateVisibility Temp_byte_Variable, enum class ESlateVisibility Temp_byte_Variable_1, enum class ESlateVisibility K2Node_Select_Default, bool CallFunc_IsEquipped__ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	bool IsEquipped_(int32 CallFunc_GetLength_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void GetContainerName(class FText* ContainerName, bool Temp_bool_Variable, int64 CallFunc_Conv_IntToInt64_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class FText K2Node_Select_Default);
	struct FVector2D CalculateSizeCustom(const struct FVector2D& SlotVector, const struct FVector2D& CSlotSize, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_Add_DoubleDouble_ReturnValue_3, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_Add_DoubleDouble_B_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast_1, double CallFunc_Add_DoubleDouble_B_ImplicitCast_1);
	void GetItemsByRarity(enum class ESlotRarity Rarity, bool* Found_, TArray<class UJSI_Slot_C*>* ItemsFound, const TArray<class UJSI_Slot_C*>& ItemsFoundArray, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	int32 GetItemsCount(int32 CallFunc_Array_Length_ReturnValue);
	void Calculate_Weight(double* Weight, double TotalWeight, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, double CallFunc_GetWeight_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_GetCount_Count, double CallFunc_Multiply_IntFloat_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue);
	void ChangeItemRarity(class UJSI_Slot_C* ItemRef, enum class ESlotRarity NewRarity, bool* Changed_, bool CallFunc_ChangeRarity_Changed_, bool CallFunc_IsValid_ReturnValue);
	void GetInventoryItemsByID(class FName ItemId, bool* Found_, TArray<class UJSI_Slot_C*>* ItemsFound, const TArray<class UJSI_Slot_C*>& ItemsFoundArray, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);
	void GetInventoryItemsByType(enum class EJSItemType Type, bool* Found_, TArray<class UJSI_Slot_C*>* ItemsFound, const TArray<class UJSI_Slot_C*>& ItemsFoundArray, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void ChangeItemCount(class UJSI_Slot_C* ItemRef, int32 NewCount, bool* Changed_, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_UpdateCount_Count);
	void ChangeItemImage(class UJSI_Slot_C* ItemRef, class UTexture2D* NewTexture, bool* Changed_, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_UpdateImage_Updated);
	void ResizeItem(class UJSI_Slot_C* SlotRef, int32 AddToX, int32 AddToY, bool* Resized_, int32 ToSlot, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FVector2D& CallFunc_AddToXY_SlotDimension, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FVector2D& CallFunc_CalculateSizeCustom_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_isRotated__ReturnValue, bool CallFunc_CanResize__Result, TArray<class UJSI_Slot_C*>& CallFunc_CanResize__HostingSlotsArray, TArray<class UJSI_Slot_C*>& CallFunc_CanResize__FreedHostingSlotsArray, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_SelectInt_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, int32 CallFunc_SelectInt_ReturnValue_1, double CallFunc_Conv_IntToDouble_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FVector2D& CallFunc_Add_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_CalculateSize_ReturnValue, const struct FVector2D& CallFunc_ResizeSlot_Size);
	void CanResize_(class UJSI_Slot_C* SlotRef, int32 AddToX, int32 AddToY, bool* Result, TArray<class UJSI_Slot_C*>* HostingSlotsArray, TArray<class UJSI_Slot_C*>* FreedHostingSlotsArray, const TArray<class UJSI_Slot_C*>& FreedHostingSlots, const TArray<class UJSI_Slot_C*>& HostingSlots, class UJSI_Slot_C* SlotFound, int32 Y, int32 X, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ByteByte_ReturnValue, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array_2, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, int32 CallFunc_FTrunc_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue_2, bool CallFunc_Array_RemoveItem_ReturnValue, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array_3, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array_4, TArray<class UJSI_Slot_C*>& K2Node_MakeArray_Array_5, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, int32 Temp_int_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_5, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsEmptySlot_isEmpty, int32 CallFunc_Add_IntInt_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsEmptySlot_isEmpty_1, int32 CallFunc_Add_IntInt_ReturnValue_7, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_8, int32 CallFunc_Add_IntInt_ReturnValue_9, int32 CallFunc_Add_IntInt_ReturnValue_10, int32 CallFunc_Add_IntInt_ReturnValue_11, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_LessEqual_IntInt_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue_4, int32 CallFunc_Add_IntInt_ReturnValue_12, int32 Temp_int_Array_Index_Variable, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, double CallFunc_BreakVector2D_X_2, double CallFunc_BreakVector2D_Y_2, int32 CallFunc_FTrunc_ReturnValue_3, int32 CallFunc_FTrunc_ReturnValue_4, int32 CallFunc_FTrunc_ReturnValue_5, int32 CallFunc_Add_IntInt_ReturnValue_13, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_14, bool CallFunc_LessEqual_IntInt_ReturnValue_3, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_Array_RemoveItem_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_15, int32 CallFunc_Add_IntInt_ReturnValue_16, int32 CallFunc_Add_IntInt_ReturnValue_17, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef, int32 CallFunc_Subtract_IntInt_ReturnValue_2, bool CallFunc_LessEqual_IntInt_ReturnValue_4, bool CallFunc_Greater_IntInt_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_18, double CallFunc_BreakVector2D_X_3, double CallFunc_BreakVector2D_Y_3, int32 CallFunc_FTrunc_ReturnValue_6, int32 CallFunc_Add_IntInt_ReturnValue_19, int32 CallFunc_Subtract_IntInt_ReturnValue_3, int32 CallFunc_FTrunc_ReturnValue_7, int32 CallFunc_Add_IntInt_ReturnValue_20, int32 CallFunc_Add_IntInt_ReturnValue_21, bool CallFunc_LessEqual_IntInt_ReturnValue_5, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue_1, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef_1, bool CallFunc_isRotated__ReturnValue);
	void CanStack_(class UJSIContainer_C* Container, const struct FFItemInfo& ItemInfo, bool* CanStack, int32 CurrentCount, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_CheckIfCapacityContainer_ReturnValue, int32 CallFunc_GetContainerCapacity_Cap, int32 CallFunc_GetContainerCapacity_MaxCapacity, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_GetEquippedItemRef_Found_, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef, int32 CallFunc_GetCount_Count, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void FlipSlotDim(const struct FVector2D& SlotVector, struct FVector2D* Flipped, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue);
	void AddMultipleInventoryItems(TArray<class FName>& ItemIDs, enum class E_DataTableType InDataTable, TArray<class FName>* NoTAdded, const TArray<class FName>& IDNotAdded, class UDataTable* CallFunc_GetDtRef_DTReference, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Array_Index_Variable, class FName CallFunc_Array_Get_Item, bool CallFunc_AddNewInventoryItem_Added, int32 CallFunc_AddNewInventoryItem_SlotIndex, const struct FFItemInfo& CallFunc_AddNewInventoryItem_ItemInfo, class UJSI_Slot_C* CallFunc_AddNewInventoryItem_SlotItemRef, bool CallFunc_AddNewInventoryItem_Stacked_, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void IsSupportedID_(class FName ID, bool* Supported, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1);
	void IsSupportedType_(TArray<enum class EJSItemType>& SupportedItemTypes, class FName ItemId, enum class EJSItemType& Type, bool* Supported_, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsSupportedID__Supported, bool CallFunc_BooleanAND_ReturnValue);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue);
	void ChangeItemsInteract(bool Interact_, bool Temp_bool_Variable, enum class ESlateVisibility Temp_byte_Variable, enum class ESlateVisibility Temp_byte_Variable_1, int32 Temp_int_Array_Index_Variable, enum class ESlateVisibility K2Node_Select_Default, int32 Temp_int_Loop_Counter_Variable, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_GetEquippedItemRef_Found_, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef, bool CallFunc_BooleanAND_ReturnValue, const struct FLinearColor& K2Node_MakeStruct_LinearColor, int32 CallFunc_Array_Length_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue);
	void HandleContainerOnContainer(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, class UJSI_Slot_C* ToSlotRef, int32 ToSlot, bool DraggedRotated_, bool TryRotated_, bool* Handled_, bool Don_tMove, class UJSI_Slot_C* BestStackingItem, const struct FFItemInfo& TempInfo, int32 FreeSpace, int32 CurrentCount, bool ToEmptySlot_, bool CallFunc_IsEmptySlot_isEmpty, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_GetCount_Count, bool CallFunc_RemoveFromJSIParent_Removed, class UJSI_Slot_C* CallFunc_FindBestStackingItem_BestStackingItem, int32 CallFunc_FindBestStackingItem_FreeSpace, bool CallFunc_FindBestStackingItem_CanStackAll, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_UpdateCount_Count, int32 CallFunc_GetCount_Count_1, int32 CallFunc_GetCount_Count_2, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_UpdateCount_Count_1, int32 CallFunc_UpdateCount_Count_2, bool CallFunc_AddItemFromJigRef_Added, class UJSI_Slot_C* CallFunc_AddItemFromJigRef_AddedItemRef, int32 CallFunc_GetCapacity_Cap, bool CallFunc_CheckIfCapacityContainer_ReturnValue, int32 CallFunc_GetMaxCapacity_MaxCap, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, int32 CallFunc_UpdateCount_Count_3, bool CallFunc_RemoveFromJSIParent_Removed_1, enum class E_DataTableType CallFunc_GetDT_DataTableRef, class UTexture* CallFunc_GetImageFromInfo_Image, bool CallFunc_AddNewItem_Added, int32 CallFunc_AddNewItem_AddedToSlot, const struct FFItemInfo& CallFunc_AddNewItem_Info, class UJSI_Slot_C* CallFunc_AddNewItem_SlotItemRef, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_UpdateCount_Count_4, int32 CallFunc_UpdateCount_Count_5, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_AddItemFromJigRef_Added_1, class UJSI_Slot_C* CallFunc_AddItemFromJigRef_AddedItemRef_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_6, bool CallFunc_EqualEqual_ByteByte_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_EquipItemFromJigRef_Added, class UJSI_Slot_C* CallFunc_EquipItemFromJigRef_EquippedItemRef, bool CallFunc_BooleanAND_ReturnValue_5);
	void CombineItemRequest(class UJSIContainer_C* FromContainer, class UJSI_Slot_C* SlotRec, class UJSI_Slot_C* SlotDropped, bool TriggerEventDispatcher_, int32 MaxStack, int32 FreeCap, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_UpdateCount_Count, int32 CallFunc_UpdateCount_Count_1, bool CallFunc_RemoveInventoryItemByRef_Removed, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_UpdateCount_Count_2, bool CallFunc_LessEqual_IntInt_ReturnValue);
	struct FVector2D CalculateSize(const struct FVector2D& SlotVector, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_Add_DoubleDouble_ReturnValue_2, double CallFunc_Add_DoubleDouble_ReturnValue_3, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_Add_DoubleDouble_B_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast_1, double CallFunc_Add_DoubleDouble_B_ImplicitCast_1);
	void ClearContainer(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsEquipTo__ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void AddNewInventoryItem_CustomVector(class FName ItemId, int32 Count, int32 ToSlot, const struct FFItemInfo& CustomInfo, enum class E_DataTableType InDataTable, bool* Added, int32* SlotIndex, struct FFItemInfo* ItemInfo, class UJSI_Slot_C** SlotItemRef, class UDataTable* CallFunc_GetDtRef_DTReference, const struct FFItemInfo& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsSupportedByThis_Supported_, bool CallFunc_IsEquipTo__ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool Temp_bool_Variable, const struct FFItemInfo& K2Node_Select_Default, bool Temp_bool_Variable_1, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, int32 CallFunc_SelectInt_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FFItemInfo& K2Node_SetFieldsInStruct_StructOut, const struct FVector2D& K2Node_Select_Default_1, class UTexture* CallFunc_GetImageFromInfo_Image, const struct FVector2D& CallFunc_CalculateSizeCustom_ReturnValue, bool CallFunc_AddNewItem_Added, int32 CallFunc_AddNewItem_AddedToSlot, const struct FFItemInfo& CallFunc_AddNewItem_Info, class UJSI_Slot_C* CallFunc_AddNewItem_SlotItemRef);
	void RemoveInventoryItemByRef(class UJSI_Slot_C* SlotRef, bool TriggerUnequippedEvent_, bool* Removed, bool Removed_, bool CallFunc_UnequipItem_Unequipped, class UJSI_Slot_C* CallFunc_UnequipItem_SlotRef, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsEquipped__ReturnValue, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_BooleanAND_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_1);
	int32 GetLength(int32 CallFunc_Array_Length_ReturnValue);
	void AddNewInventoryItem(class FName ItemId, int32 Count, int32 ToSlot, bool Rotated_, bool TryRotated_, bool TryToStack_, const struct FFItemInfo& CustomInfo, enum class E_DataTableType InDataTable, bool SkipWeight_, bool* Added, int32* SlotIndex, struct FFItemInfo* ItemInfo, class UJSI_Slot_C** SlotItemRef, bool* Stacked_, class UJSI_Slot_C* AddedItemRef, bool SecondAttempt, const struct FVector2D& VectorToUse, bool InenticalVec, const struct FFItemInfo& InfoToWorkWith, const struct FVector2D& CallFunc_FlipSlotDim_Flipped, bool CallFunc_EqualEqual_NameName_ReturnValue, class UDataTable* CallFunc_GetDtRef_DTReference, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, const struct FVector2D& K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, const struct FFItemInfo& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_EquipItem_Equipped, class UJSI_Slot_C* CallFunc_EquipItem_SlotItemRef, bool CallFunc_CheckIfCapacityContainer_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int32 CallFunc_GetCapacity_Cap, int32 CallFunc_GetMaxCapacity_MaxCap, bool CallFunc_CheckIfCapacityContainer_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, class UJSI_Slot_C* CallFunc_FindBestStackingItem_BestStackingItem, int32 CallFunc_FindBestStackingItem_FreeSpace, bool CallFunc_FindBestStackingItem_CanStackAll, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue_1, int32 CallFunc_GetCount_Count, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_UpdateCount_Count, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_6, const struct FVector2D& CallFunc_FlipSlotDim_Flipped_1, class UTexture* CallFunc_GetImageFromInfo_Image, const struct FVector2D& CallFunc_FlipSlotDim_Flipped_2, bool CallFunc_BooleanAND_ReturnValue_7, const struct FVector2D& K2Node_Select_Default_1, bool CallFunc_AddNewItem_Added, int32 CallFunc_AddNewItem_AddedToSlot, const struct FFItemInfo& CallFunc_AddNewItem_Info, class UJSI_Slot_C* CallFunc_AddNewItem_SlotItemRef, double CallFunc_Multiply_IntFloat_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, bool CallFunc_CheckWeightLimit_Result, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, bool CallFunc_IsSupportedByThis_Supported_, bool CallFunc_IsEquipTo__ReturnValue);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation, bool SpecialC_Dropped, int32 SpecialC_Index, bool UnhandledCheckSplit, bool DroppedRotated, class UDragWidget_C* DragWidgetRef, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* FixedSlotRef, class UJigSDragOperation_C* K2Node_DynamicCast_AsJig_SDrag_Operation, bool K2Node_DynamicCast_bSuccess, class UJSI_Slot_C* CallFunc_OnDropCheckStackability_StackWith, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetBoolCVar_ReturnValue, class UDragWidget_C* K2Node_DynamicCast_AsDrag_Widget, bool K2Node_DynamicCast_bSuccess_1, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue_1, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_CheckRootContainer_Proceed_, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef_1, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef_2, bool CallFunc_CheckLimitedEquipToStack_Handled_, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef_3, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef_4, const struct FVector2D& CallFunc_GetSlotDim_SlotDimension, bool CallFunc_GetEmptySlotTryRotated_NonPure_Found_, int32 CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex, bool CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsEquipped__ReturnValue, bool CallFunc_CheckUnhandledStack_Result, bool CallFunc_CheckUnhandledStack_Result_1, bool CallFunc_IsEmptySlot_isEmpty, bool CallFunc_CheckUnhandledSplit_Handled_, bool CallFunc_CheckUnhandledSplit_Handled__1, bool CallFunc_IsEmptySlot_isEmpty_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_5, class UJSIContainer_C* CallFunc_UnhandledGetTargetContainer_Target, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_HandleContainerOnContainer_Handled_, bool CallFunc_IsValid_ReturnValue_8, class UJigSplitWidget_C* CallFunc_Create_ReturnValue, bool CallFunc_HandleContainerOnContainer_Handled__1, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_IsValid_ReturnValue_10, enum class EJSItemType CallFunc_GetType_Type, bool CallFunc_IsContainer__IsContainer_, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_IsEquipTo__ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UJSIContainer_C* CallFunc_GetCSlotFromHosted_SlotContainer, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_11, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_IsEquipTo__ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_BooleanOR_ReturnValue_1, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_GetEquippedItemRef_Found_, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef, bool CallFunc_IsValid_ReturnValue_12, bool CallFunc_GetEquippedItemRef_Found__1, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef_1, class UJSI_Slot_C* K2Node_Select_Default, class UJSIContainer_C* CallFunc_GetCSlotFromHosted_SlotContainer_1, bool CallFunc_IsEquipTo__ReturnValue_3, bool CallFunc_IsValid_ReturnValue_13, bool CallFunc_BooleanAND_ReturnValue_6, class UJSIContainer_C* CallFunc_UnhandledGetTargetContainer_Target_1, bool CallFunc_DetectChange_NOChange, bool CallFunc_BooleanAND_ReturnValue_7, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, bool Temp_bool_Variable_1, class UJSIContainer_C* K2Node_Select_Default_1, bool CallFunc_CheckLimitedEquipToStack_Handled__1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_8, bool Temp_bool_Variable_2, bool CallFunc_CanStack__CanStack, bool CallFunc_CanStack__FreeSpaceAvailable, bool CallFunc_BooleanAND_ReturnValue_9, class UJSIContainer_C* K2Node_Select_Default_2, bool CallFunc_CanStack__CanStack_1, bool CallFunc_CanStack__CanStack_2, bool CallFunc_CanStack__FreeSpaceAvailable_1, bool CallFunc_CompareItems_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_10, bool CallFunc_BooleanAND_ReturnValue_11, bool CallFunc_HandleContainerOnContainer_Handled__2, bool CallFunc_PerfromDrop_Moved, bool CallFunc_NotEqual_ObjectObject_ReturnValue_3, bool Temp_bool_Variable_3, bool CallFunc_DetectChange_NOChange_1, bool CallFunc_GetEquippedItemRef_Found__2, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef_2, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_2, bool CallFunc_HandleContainerOnContainer_Handled__3, bool CallFunc_GetEquippedItemRef_Found__3, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef_3, bool Temp_bool_Variable_4, class UUserWidget* CallFunc_GetSpecialContainerRef_SpecialContainerRef, bool CallFunc_IsValid_ReturnValue_14, class UJSIContainer_C* K2Node_Select_Default_3, bool CallFunc_BooleanAND_ReturnValue_12, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_IsContainer__IsContainer__1, bool CallFunc_BooleanAND_ReturnValue_13, bool CallFunc_IsSupportedType__Supported_, bool CallFunc_HandleContainerOnContainer_Handled__4, class UUserWidget* CallFunc_GetSpecialContainerRef_SpecialContainerRef_1, bool CallFunc_IsValid_ReturnValue_15, bool CallFunc_Not_PreBool_ReturnValue_4, bool CallFunc_IsSupportedType__Supported__1, bool CallFunc_IsContainer__IsContainer__2, bool CallFunc_BooleanAND_ReturnValue_14, bool CallFunc_HandleContainerOnContainer_Handled__5, bool CallFunc_IsValid_ReturnValue_16, bool CallFunc_IsEmptySlot_isEmpty_2, bool Temp_bool_Variable_5, class UJSIContainer_C* K2Node_Select_Default_4, class UJSIContainer_C* K2Node_Select_Default_5, bool CallFunc_GetItemBySlotIndex_Found, class UJSI_Slot_C* CallFunc_GetItemBySlotIndex_Item, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_15, bool CallFunc_BooleanAND_ReturnValue_16, bool CallFunc_IsEquipped__ReturnValue_1, bool CallFunc_IsSupportedType__Supported__2, bool CallFunc_IsEquipTo__ReturnValue_4);
	void GetEmptySlot(const struct FVector2D& SlotVector, int32* SlotIndex, bool* Found_, int32 SkipToSlot, bool IgnoreScan, class UJSI_Slot_C* FoundItem, int32 SlotVY, int32 SlotVX, int32 CurrentIndex, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, bool CallFunc_IsEmptySlot_isEmpty, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_CheckIfCapacityContainer_ReturnValue, int32 CallFunc_GetContainerCapacity_Cap, int32 CallFunc_GetContainerCapacity_MaxCapacity, bool CallFunc_Less_IntInt_ReturnValue, bool Temp_bool_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Variable_2, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 CallFunc_Subtract_IntInt_ReturnValue_2, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_IsEmptySlot_isEmpty_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_5, bool CallFunc_LessEqual_IntInt_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_6, bool CallFunc_LessEqual_IntInt_ReturnValue_4, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	void CancelHighlights(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor, bool CallFunc_GetEquippedItemRef_Found_, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_SetHighlight_Highlight, bool CallFunc_GetEquippedItemRef_Found__1, class UJSI_Slot_C* CallFunc_GetEquippedItemRef_ItemRef_1, bool CallFunc_IsEquipTo__ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_2, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_SetHighlight_Highlight_1);
	void HighlightSlots(int32 SlotIndex, const struct FVector2D& SlotVector, const struct FVector2D& MouseLoc, class UJSI_Slot_C* SlotRef, class UJSI_Slot_C* SlotRecRef, bool Rotated_, bool Supported_, bool DroppedWithinSelf_, bool HighlightSpecial_, class UJSIContainer_C* CurrentSpecialC, bool ContainerSupported_, int32 YLastIndex, int32 XLastIndex, bool InvalidMove, const TArray<class UJSI_Slot_C*>& ItemFoundArray, class UJSI_Slot_C* ItemFound, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue, bool Temp_bool_Variable, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue_1, const struct FVector2D& CallFunc_Add_Vector2DVector2D_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_FFloor_ReturnValue, int32 CallFunc_FFloor_ReturnValue_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_3, double CallFunc_GetWeight_ReturnValue, bool CallFunc_CheckWeightLimit_Result, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool Temp_bool_Variable_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsEmptySlot_isEmpty, class UJSI_Slot_C* CallFunc_GetHostedSlot_HostingItem, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, bool CallFunc_CheckIfCanAddToSpecial_CanAdd, class UJSIContainer_C* CallFunc_CheckIfCanAddToSpecial_ToContainer, bool CallFunc_CheckWeightLimit_Result_1, bool CallFunc_IsEmptySlot_isEmpty_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_CanStack__CanStack, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, double CallFunc_BreakVector2D_X_2, double CallFunc_BreakVector2D_Y_2, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, class UJSI_Slot_C* CallFunc_GetHostedSlot_HostingItem_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue, const struct FVector2D& CallFunc_FlipSlotDim_Flipped, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_GetEmptySlot_SlotIndex, bool CallFunc_GetEmptySlot_Found_, bool CallFunc_IsSpecialContainer__ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue_1, int32 CallFunc_GetEmptySlot_SlotIndex_1, bool CallFunc_GetEmptySlot_Found__1, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_IsSupportedByThis_Supported_, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_5, int32 CallFunc_Subtract_IntInt_ReturnValue_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_5, int32 CallFunc_Add_IntInt_ReturnValue_6, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef, bool CallFunc_BooleanAND_ReturnValue_6, double CallFunc_BreakVector2D_X_3, double CallFunc_BreakVector2D_Y_3, double CallFunc_Multiply_DoubleDouble_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, const struct FSlateColor& K2Node_Select_Default, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_SetHighlight_Highlight, bool CallFunc_Less_IntInt_ReturnValue_3, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_7, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_5, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_8, int32 CallFunc_Array_Add_ReturnValue, const struct FSlateColor& K2Node_Select_Default_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_SetHighlight_Highlight_1, double CallFunc_BreakVector2D_X_4, double CallFunc_BreakVector2D_Y_4, double CallFunc_BreakVector2D_X_5, double CallFunc_BreakVector2D_Y_5, int32 CallFunc_FTrunc_ReturnValue_2, int32 CallFunc_FTrunc_ReturnValue_3, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_3, int32 CallFunc_Subtract_IntInt_ReturnValue_4);
	void Hightlight_DragMove(int32 SlotIndex, class UJSI_Slot_C* DragSlotRef, class UJSI_Slot_C* SlotRec, bool Rotated_, bool DroppedWithinSelf_, bool WeightLimit, bool Temp_bool_Variable, bool CallFunc_CheckWeightLimit_Result, class UJSIContainer_C* CallFunc_DragSelectContainer_MotherRef, bool CallFunc_IsSupportedType__Supported_, bool CallFunc_EqualEqual_BoolBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FVector2D& K2Node_Select_Default, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2);
	int32 Get_Slot_Index_by_Column_Row(int32 Column, int32 Row, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1);
	void PerfromDrop(int32 SlotIndex, const struct FVector2D& SlotVector, class UJSI_Slot_C* SlotRef, bool Rotated_, bool* Moved, const TArray<class UJSI_Slot_C*>& ItemFoundArray, class UJSI_Slot_C* ItemFound, int32 FromY, int32 FromX, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_isRotated__ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_isRotated__ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, const struct FMargin& CallFunc_GetPaddingBySlotIndex_Padding, int32 CallFunc_GetPaddingBySlotIndex_Conumn, int32 CallFunc_GetPaddingBySlotIndex_Row, int32 CallFunc_Array_Length_ReturnValue_1, class UJSI_Slot_C* CallFunc_Array_Get_Item_3, bool CallFunc_Less_IntInt_ReturnValue_1);
	void GetPaddingBySlotIndex(int32 SlotIndex, const struct FVector2D& SlotVector, struct FMargin* Padding, int32* Conumn, int32* Row, int32 RowIndex, int32 ColumnIndex, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, double CallFunc_Conv_IntToDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Conv_IntToDouble_ReturnValue_3, double CallFunc_Add_DoubleDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Divide_IntInt_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_3, int32 CallFunc_Subtract_IntInt_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_Add_DoubleDouble_ReturnValue_4, int32 CallFunc_Percent_IntInt_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_5, const struct FMargin& K2Node_MakeStruct_Margin, double CallFunc_Add_DoubleDouble_B_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_Add_DoubleDouble_B_ImplicitCast_1, float K2Node_MakeStruct_Top_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast_1, double CallFunc_Add_DoubleDouble_B_ImplicitCast_2, double CallFunc_Add_DoubleDouble_B_ImplicitCast_3, float K2Node_MakeStruct_Left_ImplicitCast);
	void GetSlotIndex(int32* Result, int32 CallFunc_Add_IntInt_ReturnValue);
	void AddNewItem(int32 ToSlot, class UTexture* Image, const struct FVector2D& SlotVector, enum class ESlotRarity Rarity, const struct FFItemInfo& ItemInfo, bool SetVector, enum class E_DataTableType DT, bool* Added, int32* AddedToSlot, struct FFItemInfo* Info, class UJSI_Slot_C** SlotItemRef, bool IsDesiredSlot_, int32 AddToSlot, bool SlotInvalid_, int32 RowIndex, int32 ColumnIndex, const struct FMargin& NewSlotPadding, class UJSI_Slot_C* NewItem, const TArray<class UJSI_Slot_C*>& ArrayOfItemFound, class UJSI_Slot_C* ItemFound, const struct FFItemInfo& K2Node_SetFieldsInStruct_StructOut, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable, class UJSI_Slot_C* CallFunc_Create_ReturnValue, double CallFunc_Multiply_IntFloat_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, int32 CallFunc_FTrunc_ReturnValue, class UJSI_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, const struct FVector2D& CallFunc_CalculateSize_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_GetEmptySlot_SlotIndex, bool CallFunc_GetEmptySlot_Found_, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, const struct FMargin& CallFunc_GetPaddingBySlotIndex_Padding, int32 CallFunc_GetPaddingBySlotIndex_Conumn, int32 CallFunc_GetPaddingBySlotIndex_Row, bool CallFunc_IsEmptySlot_isEmpty, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_5, class UJSI_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Get_Slot_Index_by_Column_Row_ReturnValue, class UJSI_Slot_C* CallFunc_FindSlotByIndex_SlotRef, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_6, int32 CallFunc_Add_IntInt_ReturnValue_7, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, int32 CallFunc_FTrunc_ReturnValue_2, double CallFunc_BreakVector2D_X_2, double CallFunc_BreakVector2D_Y_2, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_3, bool CallFunc_LessEqual_IntInt_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_LessEqual_IntInt_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4, class UOverlaySlot* CallFunc_AddChildToOverlay_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1);
	void SetItemReference(class UJSI_Slot_C* ItemRef);
	void SetActorOwner(class AActor* ActorRef);
	void JSICheckStatus();
	void JSIOnWeightUpdated(double NewWeight);
	void PreConstruct(bool IsDesignTime);
	void Initialize(bool Design_);
	void Destruct();
	void ReMinusInit(int32 Columns, int32 Rows);
	void Call_ContainerOnContainer(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, class UJSI_Slot_C* ToSlotRef, int32 ToSlot, bool DragRotated_, bool TryRotated_);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void ClearData();
	void Add_DefaultItems();
	void ExecuteUbergraph_JSIContainer(int32 EntryPoint, bool Temp_bool_Has_Been_Initd_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_GetSlotIndex_Result, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, class UJSI_Slot_C* K2Node_Event_ItemRef, class AActor* K2Node_Event_ActorRef, double K2Node_Event_NewWeight, bool K2Node_Event_IsDesignTime, bool K2Node_CustomEvent_Design_, int32 CallFunc_Subtract_IntInt_ReturnValue, bool Temp_bool_IsClosed_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 K2Node_CustomEvent_Columns, int32 K2Node_CustomEvent_Rows, class UJSIContainer_C* K2Node_CustomEvent_FromContainer, class UJSIContainer_C* K2Node_CustomEvent_ToContainer, class UJSI_Slot_C* K2Node_CustomEvent_SlotRef, class UJSI_Slot_C* K2Node_CustomEvent_ToSlotRef, int32 K2Node_CustomEvent_ToSlot, bool K2Node_CustomEvent_DragRotated_, bool K2Node_CustomEvent_TryRotated_, bool CallFunc_HandleContainerOnContainer_Handled_, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FPointerEvent& K2Node_Event_PointerEvent_1, class UDragDropOperation* K2Node_Event_Operation_1, const struct FGeometry& K2Node_Event_MyGeometry, const struct FPointerEvent& K2Node_Event_PointerEvent, class UDragDropOperation* K2Node_Event_Operation, class UJigSDragOperation_C* K2Node_DynamicCast_AsJig_SDrag_Operation, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, class UDragWidget_C* K2Node_DynamicCast_AsDrag_Widget, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_BooleanOR_ReturnValue, class UJSIContainer_C* Temp_object_Variable, bool CallFunc_BooleanOR_ReturnValue_1, const struct FDefaultItemInfo& CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_AddNewInventoryItem_Added, int32 CallFunc_AddNewInventoryItem_SlotIndex, const struct FFItemInfo& CallFunc_AddNewInventoryItem_ItemInfo, class UJSI_Slot_C* CallFunc_AddNewInventoryItem_SlotItemRef, bool CallFunc_AddNewInventoryItem_Stacked_, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FDefaultItemInfo& CallFunc_Array_Get_Item_1, bool CallFunc_AddNewInventoryItem_CustomVector_Added, int32 CallFunc_AddNewInventoryItem_CustomVector_SlotIndex, const struct FFItemInfo& CallFunc_AddNewInventoryItem_CustomVector_ItemInfo, class UJSI_Slot_C* CallFunc_AddNewInventoryItem_CustomVector_SlotItemRef, bool CallFunc_NotEqual_NameName_ReturnValue_1, int32 Temp_int_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FMargin& K2Node_MakeStruct_Margin, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool Temp_bool_Has_Been_Initd_Variable_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_1, class UJSI_Slot_C* CallFunc_Create_ReturnValue, class UUniformGridSlot* CallFunc_AddChildToUniformGrid_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool Temp_bool_IsClosed_Variable_1, bool CallFunc_IsEquipTo__ReturnValue, bool CallFunc_IsEquipTo__ReturnValue_1, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, float CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast);
	void OnUniqueIDSet__DelegateSignature(class UJSI_Slot_C* ItemRef);
	void OnCapacityUpdated__DelegateSignature(int32 Current, int32 Max, class UJSIContainer_C* Container, class UJSI_Slot_C* SlotMother);
	void OnWeightUpdated__DelegateSignature(double NewWeight);
	void OnItemRemoved__DelegateSignature(class UJSI_Slot_C* ItemRef, class UJSIContainer_C* FromContainer);
	void OnSlotMouseButtonUp__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* ItemRef, const struct FKey& Button);
	void OnStackCountChanged__DelegateSignature(class UJSI_Slot_C* ItemRef, int32 NewCount);
	void OnItemStackRequest__DelegateSignature(class UJSI_Slot_C* DroppedItem, class UJSI_Slot_C* ReceiverItem);
	void OnItemSplitRequest__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* ItemSource, int32 ToSlotIndex, int32 TotalAmount, int32 SplitAmount, bool Rotated_);
	void OnItemSlotOrRotationChanged__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, int32 NewIndex, bool Rotated);
	void OnSlotDoubleClick__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void Drop_ContainerOnContainerUnhandled__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool Rotated_);
	void Drop_ItemOverItem__DelegateSignature(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer);
	void DropInfo_SplitPerformed__DelegateSignature(class UJSI_Slot_C* SourceSlotRef, class UJSI_Slot_C* NewSplitSlotRef, class UJSIContainer_C* ContainerSource, class UJSIContainer_C* ContainerReceiver, int32 SplitAmount, int32 AmountRemaining);
	void DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_);
	void DropInfo_ContainerToContainer__DelegateSignature(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* ItemMovedRef, bool ToEmptySlot_, bool MovedAll_);
	void ItemsCombined__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotReceiver, class UJSI_Slot_C* SlotDropped, bool SlotDroppedRemoved_);
};

}


