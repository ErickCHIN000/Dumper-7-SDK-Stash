#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// Class Maneater.ManeaterAIFunctionLibrary
class UManeaterAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UManeaterAIFunctionLibrary* GetDefaultObj();

	void GetPawnAndAIController(class UObject* InObject, class APawn** Out_Pawn, class AME_AIController** Out_AIController);
};

// 0xF8 (0x13F0 - 0x12F8)
// Class Maneater.ME_AbilitySystemComponent
class UME_AbilitySystemComponent : public UAbilitySystemComponent
{
public:
	TMap<struct FActiveGameplayEffectHandle, struct FGameplayEffectParticleSystems> PersistentParticleSystemMap;                       // 0x12F8(0x50)(NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FAbilityInfoListStruct> AbilityCache;                                      // 0x1348(0x50)(NativeAccessSpecifierPublic)
	TMap<class FString, struct FAbilityInfoStruct> AbilityHandleToInfoCache;                          // 0x1398(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_3C0[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AbilitySystemComponent* GetDefaultObj();

	void SpawnEmitter(struct FMEGameplayEffectParticleSystem* GameplayEffectParticleSystem, class UParticleSystem* ParticleSystem, class USceneComponent* AttachComponent);
	class UME_AttributeSet* GetAttributeSet(TSubclassOf<class UME_AttributeSet> AttributeSetClass);
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_AbilitySystemInterface
class IME_AbilitySystemInterface : public IAbilitySystemInterface
{
public:

	static class UClass* StaticClass();
	static class IME_AbilitySystemInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_ActorDamageInterface
class IME_ActorDamageInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_ActorDamageInterface* GetDefaultObj();

	int32 GetSizeLevel(class AME_AnimalCharacter* GrabbingAnimal);
	float GetMaxHealth();
	float GetCurrentHealth();
};

// 0x58 (0x108 - 0xB0)
// Class Maneater.ME_AggroComponent
class UME_AggroComponent : public UActorComponent
{
public:
	uint8                                        Pad_429[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAlertStateChanged;                               // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSuspicionUpdated;                                // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        SuspicionDecayRate;                                // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SuspicionCooldownTime;                             // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AlertEventCooldownTime;                            // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_430[0x14];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AggroComponent* GetDefaultObj();

	void Timer_OnSuspicionCooledDown();
	float GetSuspicionLevel();
	enum class EAIThreatAlertState GetAlertState();
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_AICombatInterface
class IME_AICombatInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_AICombatInterface* GetDefaultObj();

	bool CanAIAttackTarget(const struct FAttackTarget& PotentialTarget);
	void AIAttackTarget(const struct FAttackTarget& NewTarget);
};

// 0x420 (0x748 - 0x328)
// Class Maneater.ME_AIController
class AME_AIController : public AAIController
{
public:
	uint8                                        Pad_687[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinimumSpawnTime;                                  // 0x338(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPossessTime;                                   // 0x33C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastDeathTime;                                     // 0x340(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnscared;                                         // 0x344(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_68D[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAIDied;                                          // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_691[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTreeComponent*                BehaviorTreeComponent;                             // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBehaviorTree*                         BehaviorTreeAsset;                                 // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_696[0x58];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDrawPerceptionDebug;                              // 0x3D0(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawTargetingDebug;                               // 0x3D1(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawFocus;                                        // 0x3D2(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_69D[0x25];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlendedPawnRotationInterpSpeed;                    // 0x3F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A1[0x14];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UME_SpawnlistCondition*>        SpawnedConditions;                                 // 0x410(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStationarySpawn;                                  // 0x420(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6A6[0xF];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeathAlertRadius;                                  // 0x430(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathAlertTime;                                    // 0x434(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6A7[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreSignificanceCalculation;                    // 0x444(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6AC[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SignificanceDisabledWeightMod;                     // 0x448(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SignificanceBucketWeight;                          // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CachedCurrentSignificance;                         // 0x450(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSignificance;                                   // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DespawnConsiderationChange;                        // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DespawnConsiderationSignificance;                  // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpawnSignificance;                              // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpawnSignificance;                              // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseTickInterval;                                  // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TickIntervalMod;                                   // 0x46C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseTypeSignificanceMod;                           // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HuntActorSignificanceMod;                          // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BossFightSignificanceMod;                          // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PendingCombatSignificanceMod;                      // 0x47C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ActiveCombatSignificanceMod;                       // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OutOfSightSignificanceMod;                         // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnConditionFailedSignificanceMod;               // 0x488(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPersistentAI;                                     // 0x48C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C5[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxMercunaBucket;                                  // 0x490(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPreDormantPawnTickEnabled;                        // 0x494(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C6[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UPrimitiveComponent*, struct FPreDormantValues> PreDormantValues;                                  // 0x498(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        CurrentDefinedPatrolIndex;                         // 0x4E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C9[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCapableOfAttacking;                               // 0x4F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D1[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AttackTargetDistance;                              // 0x4F8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BB_AttackTargetDistance;                           // 0x4FC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackTargetAngle;                                 // 0x504(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BB_AttackTargetAngle;                              // 0x508(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D8[0x20];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECombatStatus                     CombatStatus;                                      // 0x530(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DA[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseCombatPriority;                                // 0x534(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseCombatLockTime;                                // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseCombatPriorityCooldownTime;                    // 0x53C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E1[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRegisterWithCombatManager;                        // 0x558(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E2[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            ThreatStateHasChanged;                             // 0x560(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            RelatedObjectiveHasChanged;                        // 0x570(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UME_AggroComponent*                    AggroComponent;                                    // 0x580(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BB_CurrentAlertLevelKey;                           // 0x588(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 LastAlertInstigator;                               // 0x590(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AlertTickInterval;                                 // 0x598(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertSpawnCooldownTime;                            // 0x59C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnemyEscapeDistance;                               // 0x5A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceUnscareDistance;                              // 0x5A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerSharkSuspicionRate;                          // 0x5A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertCooldownTime;                                 // 0x5AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanBeSharkWitness;                                // 0x5B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6FC[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EAIThreatAlertState, class UAkAudioEvent*> AlertChangeAudioEvent;                             // 0x5B8(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UME_AlertEvent_Witness*                AlertedWitnessEvent;                               // 0x608(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_701[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeashDistance;                                     // 0x61C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldBeLeashed;                                  // 0x620(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanChangeLeashLocation;                           // 0x621(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUpdateLeashLocationOnDamage;                      // 0x622(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUpdateLeashLocationOnPlayerDamage;                // 0x623(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWipeAggroOnLeash;                                 // 0x624(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_70C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AggroCooldownOnWipe;                               // 0x628(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBreakLeashOnThreat;                               // 0x62C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_710[0xF];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanLookForThreats;                                // 0x63C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_713[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ClosestVisibleThreat;                              // 0x640(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       ClosestVisibleThreatComponent;                     // 0x648(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ClosestVisibleThreatLocation;                      // 0x650(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastVisibleThreat;                                 // 0x660(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastVisibleThreatDistance;                         // 0x668(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanListenForThreats;                              // 0x670(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEmitSounds;                                    // 0x671(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_725[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxHearingRange;                                   // 0x674(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_729[0x24];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanRespondToStimuli;                              // 0x69C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           SightRangeByTimeOfDay;                             // 0x6A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SightRangeByPlayerGrowthScale;                     // 0x6A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseAirSightLength;                                // 0x6B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseSurfaceSightLength;                            // 0x6B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseUnderwaterSightLength;                         // 0x6B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SightWaterPenetrationDepth;                        // 0x6BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SightConeAngle;                                    // 0x6C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeripheralSightLength;                             // 0x6C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeripheralSightConeAngle;                          // 0x6C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_741[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class APawn>>             ThreateningPawnTypes;                              // 0x6D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EPawnSpeciesType>          ThreateningSpecies;                                // 0x6E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_746[0x20];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVisionType                           AIVision;                                          // 0x710(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_748[0x34];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bExemptFromPool;                                   // 0x745(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_749[0x2];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_AIController* GetDefaultObj();

	bool UseNearestPatrolPoint();
	bool UseAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle);
	void TransferAlertKnowledge(class AME_AIController* AIC);
	void TickThreatTimer();
	void SetUseNearestPatrolPoint(bool bUseNearest);
	void SetPatrolPlotter(class ATwAIPatrolPlotter* InPatrolPlotter);
	void SetLeashLocation(struct FVector& InLeashLocation);
	void SetLeashActive(bool bSetActive);
	void SetCurrentDefinedPatrolIndex(int32 NewPatrolIdx);
	void SetBehaviorTreeEnabled(bool bEnabled);
	void SetAlertState(enum class EAIThreatAlertState NewAlertState, class AActor* AlertInstigator, bool bForced, int32 MillisecondDelayMax);
	void OnSuspicionIncreased(float NewSuspicionLevel, class AActor* SuspicionInstigator);
	void OnReturnedToLeash();
	void OnPlayerPawnStatusChanged(class AActor* PlayerPawn);
	void OnHeardNoise(const struct FVector& NoiseOrigin, float NoiseIntensity, class AActor* NoiseInstigator);
	void OnDamagedPlayer(float DamageAmount);
	void OnDamaged(float DamageAmount, class AActor* DamageInstigator);
	void OnCombatStatusChanged(enum class ECombatStatus Status);
	void OnCombatCooldownExpired();
	void NotifyPawnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void NotifyPawnDamaged(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void MakeAIAudibleNoise(const struct FVector& Origin, float Intensity, class AActor* NoiseInstigator);
	void LookForThreats();
	bool IsPlayerInstigatedAlert(class AActor* AlertInstigator);
	bool IsOnNavmesh();
	bool IsDormant();
	bool IsAlertedToPlayer();
	void IncreaseSuspicion(float SuspicionAmount, class AActor* SuspcionInstigator);
	float GetTotalCombatPriority();
	float GetSuspicion();
	float GetSightDistance();
	class UAbilitySystemComponent* GetPawnAbilitySystemComponent();
	class ATwAIPatrolPlotter* GetPatrolPlotter();
	struct FVector GetLeashLocation();
	float GetLeashDistance();
	bool GetLeashActive();
	class AActor* GetEnemy();
	int32 GetCurrentDefinedPatrolIndex();
	enum class EAIThreatAlertState GetCurrentAlert();
	enum class ECombatStatus GetCombatStatus();
	float GetCombatPriorityBuffs();
	float GetCombatPriority();
	float GetCombatLockTime();
	float GetCombatCooldownTime();
	class AMEEscapeVolume* GetClosestEscapeVolume();
	class AMEEscapeVolume* GetBoatEscapeVolume();
	float GetBaseSightDistance();
	float GetAbilityPriority();
	void CancelAllAbilities();
	void CancelAbility(const struct FGameplayAbilitySpecHandle& AbilityHandle);
	bool AttackTargetActor(const struct FAttackTarget& NewTarget);
	void AlertStateChangedInternal(enum class EAIThreatAlertState OldAlertState, enum class EAIThreatAlertState NewState, class AActor* ChangeInstigator);
	void AddCombatPriorityBuff(const struct FCombatPriorityBuff& CombatPriorityBuff);
	void AbilityEnded(struct FAbilityEndedData& AbilityData);
};

// 0x530 (0x750 - 0x220)
// Class Maneater.ME_AIDirector
class AME_AIDirector : public AActor
{
public:
	float                                        EvasionNotifyDistance;                             // 0x220(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxAllowedToAggro;                                 // 0x224(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_80E[0x30];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class AME_BeachgoerEscapePlotter>> BeachgoerEscapeRoutes;                             // 0x258(0x10)(ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_810[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_CombatManager*                     CombatManager;                                     // 0x278(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_813[0x480];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UME_AlertEvent*>                ActiveAlerts;                                      // 0x700(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UME_AlertEvent_Witness*>        WitnessAlerts;                                     // 0x710(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_816[0x30];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_AIDirector* GetDefaultObj();

	void UnregisterEvent(class UME_AlertEvent* AlertEvent);
	void UnregisterAllEvents(class AActor* LinkedActor);
	void RegisterEvent(class UME_AlertEvent* AlertEvent);
	void OnEventPulse(class UME_AlertEvent* AlertEvent);
	void OnEndAbility(class AME_AIController* AIC, class UME_GameplayAbility* Ability);
	void NotifyIncomingAttack(float BaseIncomingAttackDistance, bool bIsBite);
	void GetReleventWitnessEvents(class AME_AIController* AIC, TArray<class UME_AlertEvent_Witness*>* Out_WitnessAlerts);
	class UME_CombatManager* GetCombatManager();
	void ForceToAlertState(enum class EAIThreatAlertState NewAlertState, struct FVector& Origin, float Radius, TSubclassOf<class APawn> PawnClass);
	class UME_AlertEvent_Witness* CreateAndRegisterWitnessEvent(class AActor* LinkedActor);
	void BroadcastNoise(const struct FVector& NoiseOrigin, float NoiseIntensity, class AActor* NoiseInstigator);
};

// 0xF8 (0x230 - 0x138)
// Class Maneater.ME_VehicleMovementComponent
class UME_VehicleMovementComponent : public UPawnMovementComponent
{
public:
	uint8                                        Pad_860[0x2C];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMercuna3DMovementProperties          MovementProperties;                                // 0x164(0x3C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        SteeringResponsiveness;                            // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AccelerationInterpSpeed;                           // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Acceleration;                                      // 0x1A8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               WorldAcceleration;                                 // 0x1B4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AngularVelocity;                                   // 0x1C0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPositionCorrected : 1;                            // Mask: 0x1, PropSize: 0x10x1CC(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_866[0x63];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_VehicleMovementComponent* GetDefaultObj();

	struct FVector GetLocalVelocity();
	struct FVector GetAngularVelocity();
	void AddImpulse(struct FVector& Impulse, struct FVector& ImpulseLocation, struct FVector& ImpulseNormal);
};

// 0x0 (0x230 - 0x230)
// Class Maneater.ME_AirVehicleMoveComponent
class UME_AirVehicleMoveComponent : public UME_VehicleMovementComponent
{
public:

	static class UClass* StaticClass();
	static class UME_AirVehicleMoveComponent* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Maneater.ME_AITask_DirectMoveTo
class UME_AITask_DirectMoveTo : public UAITask
{
public:
	struct FDirectMoveRequest                    MoveRequest;                                       // 0x70(0x20)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UME_CharacterMovementComponent*        CharacterMove;                                     // 0x90(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_87B[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AITask_DirectMoveTo* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Maneater.ME_AITask_VehicleDirectMoveTo
class UME_AITask_VehicleDirectMoveTo : public UAITask
{
public:
	struct FDirectMoveRequest                    MoveRequest;                                       // 0x70(0x20)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UME_VehicleMovementComponent*          VehicleMove;                                       // 0x90(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_887[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AITask_VehicleDirectMoveTo* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Maneater.ME_AlertEvent
class UME_AlertEvent : public UObject
{
public:
	uint8                                        Pad_8D2[0x30];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EAlertEventDuration               AlertDuration;                                     // 0x58(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8D4[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DurationMagnitude;                                 // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PeriodicInterval;                                  // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertDistance;                                     // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IncreaseSuspicionAmount;                           // 0x68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8D7[0x24];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AlertEvent* GetDefaultObj();

	void Timer_PeriodicPulse();
	void Timer_Lifetime();
	void SetEventLocation(struct FVector& InEventLocation);
	void LinkActorToEvent(class AActor* ActorToLink);
	float GetSuspicionAmount();
	class AActor* GetLinkedActor();
	struct FVector GetEventLocation();
	bool CanProcessEvent(class AME_AIController* AIC);
};

// 0x10 (0xA0 - 0x90)
// Class Maneater.ME_AlertEvent_Witness
class UME_AlertEvent_Witness : public UME_AlertEvent
{
public:
	uint8                                        Pad_8F2[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AlertEvent_Witness* GetDefaultObj();

	struct FVector GetCachedVisiblePoint();
};

// 0x38 (0xE8 - 0xB0)
// Class Maneater.ME_AmbientActivityComponent
class UME_AmbientActivityComponent : public UActorComponent
{
public:
	TArray<class UME_AmbientActivityData*>       PossibleActivities;                                // 0xB0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_901[0x28];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AmbientActivityComponent* GetDefaultObj();

};

// 0x140 (0x168 - 0x28)
// Class Maneater.ME_ActivityProp
class UME_ActivityProp : public UObject
{
public:
	enum class EDetailMode                       DetailMode;                                        // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_90C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDrawDistance;                                   // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            LocalTransform;                                    // 0x30(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  AttachSocket;                                      // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetachedLifespan;                                  // 0x68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSimulateOnDetach;                                 // 0x6C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDetachAsStaticActor;                              // 0x6D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPropDetachPhase                  DetachTiming;                                      // 0x6E(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_915[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FPropRandomVectorParam> VectorParams;                                      // 0x70(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, struct FPropRandomScalarParam> ScalarParams;                                      // 0xC0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, struct FPropRandomTextureParam> TextureParams;                                     // 0x110(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_918[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ActivityProp* GetDefaultObj();

};

// 0x8 (0x170 - 0x168)
// Class Maneater.ME_ActivityProp_Static
class UME_ActivityProp_Static : public UME_ActivityProp
{
public:
	class UStaticMesh*                           StaticMesh;                                        // 0x168(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_ActivityProp_Static* GetDefaultObj();

};

// 0x8 (0x170 - 0x168)
// Class Maneater.ME_ActivityProp_Skeletal
class UME_ActivityProp_Skeletal : public UME_ActivityProp
{
public:
	class USkeletalMesh*                         SkeletalMesh;                                      // 0x168(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_ActivityProp_Skeletal* GetDefaultObj();

};

// 0x18 (0x180 - 0x168)
// Class Maneater.ME_ActivityProp_Decal
class UME_ActivityProp_Decal : public UME_ActivityProp
{
public:
	class UMaterialInterface*                    DecalMaterial;                                     // 0x168(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               DecalSize;                                         // 0x170(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_936[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ActivityProp_Decal* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Maneater.ME_AmbientActivityData
class UME_AmbientActivityData : public UDataAsset
{
public:
	class FString                                FriendlyName;                                      // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LoopingIdleAnim;                                   // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          OutroAnim;                                         // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChanceToRoam;                                      // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoamRadius;                                        // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CustomScaredPercent;                               // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_944[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActivityAlertStruct>          AlertStructs;                                      // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendOutTime;                                      // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_948[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActivityPropElement>          Props;                                             // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                        ActivityDuration;                                  // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AmbientActivityData* GetDefaultObj();

};

// 0x10 (0x230 - 0x220)
// Class Maneater.ME_AmbientActivityPoint
class AME_AmbientActivityPoint : public AActor
{
public:
	class USphereComponent*                      PlacementCollisionComponent;                       // 0x220(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_AmbientActivityComponent*          ActivityComponent;                                 // 0x228(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_AmbientActivityPoint* GetDefaultObj();

};

// 0x38 (0x780 - 0x748)
// Class Maneater.ME_CharacterAIController
class AME_CharacterAIController : public AME_AIController
{
public:
	class FName                                  BB_ThrashAttackerKey;                              // 0x748(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BB_ThrashAttackStateKey;                           // 0x750(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BB_InjuryStateKey;                                 // 0x758(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EThrashAttackType                 LastBBThrashState;                                 // 0x760(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_98A[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_Character*                         CharacterPawn;                                     // 0x768(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_98C[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_CharacterAIController* GetDefaultObj();

	void OnGameplayTagRemoved(const struct FGameplayTagContainer& TagsRemoved);
	void OnGameplayTagAdded(const struct FGameplayTagContainer& TagsAdded, float TagDuration);
	void OnForceStopMoving(enum class EThreeStateSwitch& MovementState, enum class EThreeStateSwitch& RotationState);
};

// 0x48 (0x7C8 - 0x780)
// Class Maneater.ME_AnimalAIController
class AME_AnimalAIController : public AME_CharacterAIController
{
public:
	class AME_AnimalCharacter*                   AnimalPawn;                                        // 0x780(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_AnimalMovementComponent*           AnimalMovementComponent;                           // 0x788(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_9B8[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SwapToCombatMovementThreshold;                     // 0x794(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwapToGeneralMovementThreshold;                    // 0x798(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CombatDistance;                                    // 0x79C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CombatHeight;                                      // 0x7A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMinMaxRange                          ChanceToEvadeRange;                                // 0x7A4(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        FlankingThreshold;                                 // 0x7AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlankingModifier;                                  // 0x7B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxReactTime;                                      // 0x7B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxEvadeRange;                                     // 0x7B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BiteEvadeDelay;                                    // 0x7BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           EvadeFailedCooldownEffect;                         // 0x7C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AME_AnimalAIController* GetDefaultObj();

	bool TriggerEvadeIfWithinRange();
	bool TriggerEvade();
	void OnPreyGrabbed(class AME_AnimalCharacter* Grabber, class AActor* Prey);
};

// 0x768 (0xC20 - 0x4B8)
// Class Maneater.ME_Character
class AME_Character : public ACharacter
{
public:
	uint8                                        Pad_B0D[0x60];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_Character*                         DefaultCharacter;                                  // 0x518(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPawnGender                       Gender;                                            // 0x520(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPawnBodyType                     BodyType;                                          // 0x521(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPawnAge                          Age;                                               // 0x522(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterInjuryState             InjuryState;                                       // 0x523(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B12[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FriendlyName;                                      // 0x528(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        CharacterLevel;                                    // 0x540(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPawnSpeciesType                  SpeciesType;                                       // 0x544(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreDamageFromSameSpecies;                      // 0x545(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreDamageFromHumans;                           // 0x546(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B14[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PartialRagdollBlendWeight;                         // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollOverlapLinearDampening;                     // 0x54C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollOverlapLinearDampeningTime;                 // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B15[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RagdollWaterLinearDamping;                         // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollWaterAngularDamping;                        // 0x564(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollAboveWaterLinearDamping;                    // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollAboveWaterAngularDamping;                   // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitImpulseScale;                                   // 0x570(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B19[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           BumpMassDifferential;                              // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBumpVelocity;                                   // 0x580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseRagdollThreshold;                           // 0x584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StationaryRotationSpeed;                           // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassiveRotationSpeed;                              // 0x58C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkingRotationSpeed;                              // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatRotationSpeed;                               // 0x594(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B1A[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurnSpeed;                                         // 0x5A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyWaterDepth;                                    // 0x5A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadWaterDepth;                                    // 0x5A8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B1C[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_AnimalCharacter*                   ThrashAttacker;                                    // 0x5B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B1E[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            CharacterAttributeChanged;                         // 0x5D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            CharacterAttributesChanged;                        // 0x5E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            EvolutionAbilityActivated;                         // 0x5F8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            SonarAbilityActivated;                             // 0x608(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_B21[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsReturningFromRagdoll;                           // 0x619(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipBlending;                                     // 0x61A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B22[0x15];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicsAsset*                         SingleBodyPhysicsAsset;                            // 0x630(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                         OriginalPhysicsAsset;                              // 0x638(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeAboveWaterToEnableSplash;                      // 0x640(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B24[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_CharacterAIController*             CharacterAIController;                             // 0x650(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinVelocityZForFallingDamage;                      // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinMeshVelocityForRagdollImpactFX;                 // 0x65C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NotifyHitImpactFXCooldown;                         // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B29[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RagdollImpactFXCooldown;                           // 0x668(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B2B[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AccumulatedFallVelocity;                           // 0x674(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExemptFromPool;                                   // 0x678(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B2D[0xF];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       WhipShotTrailParticle;                             // 0x688(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         WhipshotImpactSound;                               // 0x690(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreWhipShotPhysicsMultiplier;                      // 0x698(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WhipshotRotationSpeed;                             // 0x69C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WhipshotSpinningRotation;                          // 0x6A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WhipshotRollingRotation;                           // 0x6A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    WhipshotImpactActorClass;                          // 0x6A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B32[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      DynamicMaterials;                                  // 0x6B8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FLimbGoreParameters> LimbGoreParams;                                    // 0x6C8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  ThrashEscapeBoneBase;                              // 0x718(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ThrashEscapeBoneDirection;                         // 0x720(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       NutritionChunkSpawnParticle;                       // 0x728(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LargeChunkSpawnBone;                               // 0x730(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LargeChunkSpawnParticle;                           // 0x738(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMomentumForce                        ThrashEscapeInfo;                                  // 0x740(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   NutritionTableRow;                                 // 0x770(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsNonCombatCharacter;                             // 0x780(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B36[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HeadBoneName;                                      // 0x784(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastInstigatedAlertTime;                           // 0x78C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_CharacterVoiceData*                VoiceData;                                         // 0x790(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AudioEventOnAITarget;                              // 0x798(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AudioEventOnAIDeath;                               // 0x7A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B37[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastReceivedDamageTime;                            // 0x7B8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageResistPct;                                   // 0x7BC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VulnerabilityThresholdImpulseResistPct;            // 0x7C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B3C[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FThrashGrabPoint>              ThrashGrabPoints;                                  // 0x7C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbLossHealthBuffer;                              // 0x7D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBreathUnderwater;                              // 0x7DC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBreathOutOfWater;                              // 0x7DD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B3E[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DrownDeathTime;                                    // 0x7E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreathRegainTime;                                  // 0x7E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemainingBreath;                                   // 0x7E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B3F[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       DrowningVFX;                                       // 0x7F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DrowningLastBreathVFX;                             // 0x7F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent> ActiveDrowningVFX;                                 // 0x800(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DiverParticlesVFX;                                 // 0x808(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B41[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             DiverVFXBubbleRange;                               // 0x820(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyFluidSimRadius;                                // 0x828(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyFluidSimIntensity;                             // 0x82C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFluidSimVelocityDisturbance;                    // 0x830(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B43[0x1C];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOrientToWalkableSurface;                          // 0x850(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B45[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_PhysicalMaterial*                  FeetPhysicalMaterial;                              // 0x858(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B47[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinTimeBetweenFootsteps;                           // 0x864(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasHitMask;                                       // 0x868(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B4A[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HitMaskResolution;                                 // 0x86C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B4C[0x98];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterDied;                                   // 0x908(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        CorpsePhysicsBlendInTime;                          // 0x918(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCorpseLifeSpan;                                 // 0x91C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDie;                                           // 0x920(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B50[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeathTime;                                         // 0x928(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B53[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAlertEventParams>             SpawnAlertsOnDeath;                                // 0x930(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAlertEventParams                     AlertEventOnConsumed;                              // 0x940(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_B57[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_MercunaObstacleComponent*          MercunaObstacle;                                   // 0x958(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UME_MercunaNavigationComponent*        MercunaNavigation;                                 // 0x960(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PhysicalAnimBlendStrength;                         // 0x968(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PhysicalAnimBlendOutTime;                          // 0x96C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          SwimmingPhysicalAnimBlendBones;                    // 0x970(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          WalkingPhysicalAnimBlendBones;                     // 0x980(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B5A[0x28];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAbilityInfoStruct>            CharacterAbilities;                                // 0x9B8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_AbilitySystemComponent*            AbilitySystemComponent;                            // 0x9C8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UME_CharacterAbilityHelper> AbilityHelperClass;                                // 0x9D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_CharacterAbilityHelper*            AbilityHelperObject;                               // 0x9D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CharacterAbilitiesDataTable;                       // 0x9E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   NativeGameplayEffects;                             // 0x9E8(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B5C[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGameplayTagAdded;                                // 0xA08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGameplayTagRemoved;                              // 0xA18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SmallCharacterEntrySplash;                         // 0xA28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         SmallCharacterEntrySplashAudio;                    // 0xA30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmallCharacterEntrySplashMinSpeed;                 // 0xA38(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B5F[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       MediumCharacterEntrySplash;                        // 0xA40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         MediumCharacterEntrySplashAudio;                   // 0xA48(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MediumCharacterEntrySplashMinSpeed;                // 0xA50(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B61[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       LargeCharacterEntrySplash;                         // 0xA58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         LargeCharacterEntrySplashAudio;                    // 0xA60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LargeCharacterEntrySplashMinSpeed;                 // 0xA68(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B63[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UME_AttributeSet>          AttributeSetClass;                                 // 0xA70(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UME_AttributeSet>       CharacterAttributeSet;                             // 0xA78(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            AttributeDefaults;                                 // 0xA80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B64[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreSpeciesKillSequence;                        // 0xA94(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDirOctant                        DesiredAnimDir;                                    // 0xA95(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_B65[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RootMotionNonUniformTranslationScale;              // 0xA98(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_B66[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SeaLevelOffset;                                    // 0xABC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B67[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecentlyBumpedWindow;                              // 0xAC4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B68[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsInvisibleToAI;                                  // 0xAE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B69[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SpawnParticleVFX;                                  // 0xAE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            SpawnParticleRelativeOffset;                       // 0xAF0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         SpawnAkEvent;                                      // 0xB20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DespawnParticleVFX;                                // 0xB28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            DespawnParticleRelativeOffset;                     // 0xB30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         DespawnAkEvent;                                    // 0xB60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGeometryHit;                                     // 0xB68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ATwAIPatrolPlotter>     AIPatrolPlotter;                                   // 0xB78(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_B6D[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TerrorizeAmount;                                   // 0xBB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseOverlapCheck;                                  // 0xBB4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B6F[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          AudioStatePulseTimerHandle;                        // 0xBB8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsApex;                                           // 0xBC0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B70[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBoneBaseBlendWeight>          GrabbedIKSetup;                                    // 0xBC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInWaterVolume;                                  // 0xBD8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B72[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SoftLockNarratorEventName;                         // 0xBDC(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  KilledByPlayerNarratorEventName;                   // 0xBE4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  KilledPlayerNarratorEventName;                     // 0xBEC(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAIThreatAlertState               CurrentAlertState;                                 // 0xBF4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B74[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentInstigatingActor;                           // 0xBF8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CharacterStateDialogTable;                         // 0xC00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggerWhipshotRecovery;                          // 0xC08(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         QueueRagdollStandup;                               // 0xC09(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B79[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RagdollGetupDelay;                                 // 0xC0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RagdollGetupTime;                                  // 0xC10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRagdollGetupWaiting;                              // 0xC14(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGetupRagdollActive;                               // 0xC15(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B7E[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_WeaponComponent*                   AttachedWeapon;                                    // 0xC18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_Character* GetDefaultObj();

	void UpdateVulnerability();
	void StopVoice();
	void StopAI(const class FString& StopReason);
	void SetRootMotionNonUniformTranslationScale(struct FVector& InRootMotionScale);
	void SetDesiredAnimDir(enum class EDirOctant AnimDir);
	void SetDeathPhysics(float PhysicsBlendDuration, bool bPartialPhysics);
	void SetAIPatrolPlotter(class ATwAIPatrolPlotter* InPatrolPlotter);
	void RestartAI(bool bMaintainAggroInfo);
	void PulseDynamicDialogueEvent(class FName* DialogueEventName, const TArray<class FString>& ArgumentValueNames);
	void ProcessRagdollImpactResponse(class UPhysicalMaterial* InstigatorPM, class UPrimitiveComponent* InstigatorComp, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse);
	void PostDynamicDialogueEvent(class FName* DialogueEventName, TArray<class FString>* ArgumentValueNames);
	bool PlayVoice(enum class ECharacterVoiceEventType VoiceType, int32 VoicePriority);
	void PlayFootstep();
	void OnStunArmorDepleted();
	void OnPlayerSharkGrowthLevelChanged(int32 NewLevel, bool bChangeFromTheoretical);
	void OnPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OnGameplayEffectRemoved(struct FActiveGameplayEffect& RemovedGameplayEffect);
	void OnGameplayEffectApplied(class UAbilitySystemComponent* Source, struct FGameplayEffectSpec& SpecApplied, const struct FActiveGameplayEffectHandle& ActiveHandle);
	void OnDied(class AController* Killer);
	void OnBump();
	bool IsVulnerable();
	bool IsUnderwater();
	bool IsTagged();
	bool IsSilhouetted();
	bool IsPhysicalAnimationActive();
	bool IsPassenger();
	bool IsInstigatingAnyAlerts();
	bool IsDrowning();
	bool IsCritVulnerable();
	bool IsBeingThrashedByPlayer();
	bool IsBeingThrashed();
	bool IsAliveAndWell();
	bool IsAbilitySystemComponentSetUp();
	bool HasPassedVulnerabilityThreshold();
	bool GetWasRecentlyBumped();
	class FString GetVisionTypeAsDialogueString();
	struct FRotator GetThrashEscapeDirection();
	struct FVector GetRootMotionNonUniformTranslationScale();
	class AME_VehiclePawn* GetPassengerVehicle();
	int32 GetPassengerSeat();
	class UPhysicsAsset* GetOriginalPhysicsAsset();
	struct FNutrientChunkList GetNutritionData_BP();
	class UME_MercunaObstacleComponent* GetMercunaObstacle();
	class UME_MercunaNavigationComponent* GetMercunaNavigation();
	class FString GetLocationAsDialogueString();
	struct FVector GetHeadLocation();
	class UME_PhysicalMaterial* GetFloorPhysicalMaterial();
	enum class EDirOctant GetDesiredAnimDir();
	class UCapsuleComponent* GetCollisionComponent();
	enum class EVisionType GetCharacterVisionType();
	class ATwAIPatrolPlotter* GetAIPatrolPlotter();
	class UME_AbilitySystemComponent* GetAbilitySystemComponent();
	void Died(class AController* Killer, bool bPlayDeathAnimation);
	void Despawn();
	void ClearAttachedProjectiles();
	bool CanVisionTypeSeeCharacter(enum class EVisionType VisionType);
	void BlendBackToDefault();
};

// 0x340 (0xF60 - 0xC20)
// Class Maneater.ME_AnimalCharacter
class AME_AnimalCharacter : public AME_Character
{
public:
	struct FAbilityInfoStruct                    ThrashReleaseGameplayAbility;                      // 0xC20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           ThrashReleaseGameplayEffect;                       // 0xC38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAbilityInfoStruct                    RagdollRecoveryGameplayAbility;                    // 0xC40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_AnimalAIController> AnimalAIController;                                // 0xC58(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterAbilityTriggered;                       // 0xC60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        StaminaConsumptionModifier;                        // 0xC70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastConsumedStaminaTime;                           // 0xC74(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassiveHealthRegenRate;                            // 0xC78(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BDF[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         HealthRegenSound;                                  // 0xC80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BE0[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PassiveHealthRegenPctMax;                          // 0xC8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BE2[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentSpeedPct;                                   // 0xC94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastWasSwimmingTime;                               // 0xC98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBecomePhysicalOutOfWater;                         // 0xC9C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BE5[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          OutOfWaterSimulatedBodies;                         // 0xCA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutOfWaterPhysicsWeight;                           // 0xCB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayPhysicalHitReactions;                         // 0xCB4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BE7[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PhysicalHitReactionMaxBlendWeight;                 // 0xCBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhysicalHitReactionBlendOutTime;                   // 0xCC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BE8[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          PhysicalHitReactionFixedBones;                     // 0xCC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTailStiffRotDelta;                              // 0xCD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BEA[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TailControlStrength;                               // 0xCE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TailBoneName;                                      // 0xCEC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BEC[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseDecayRate;                                     // 0xCFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BEE[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseThrashStaminaRecovery;                         // 0xD04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseDecayRateAcceleration;                         // 0xD08(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxThrashStruggleBuffer;                           // 0xD0C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BF0[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThrashDecayAccelerationDelay;                      // 0xD18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BF1[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DestructibleObjectStrikeDamageBonus;               // 0xD28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeedHealthRegenRate;                               // 0xD2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeedHealthRegenBonus;                              // 0xD30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BF5[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         ReleasePreySound;                                  // 0xD38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ReleasePreyVFX;                                    // 0xD40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 CurrentPreyActor;                                  // 0xD48(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EThrashAttackType                 CurrentPreyThrashType;                             // 0xD50(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BF9[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UMeshComponent>         CurrentPreyMesh;                                   // 0xD54(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UME_AnimInstance_Base>  CurrentPreyMeshABP;                                // 0xD5C(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  JawSocketName;                                     // 0xD64(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BFA[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPreyGrabbed;                                     // 0xD70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPreyConsumedDelegate;                            // 0xD80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnableThrashUI;                                  // 0xD90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPreyReleased;                                    // 0xDA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        LimbThickness;                                     // 0xDB0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BFC[0x5C];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       PreGrabRoot;                                       // 0xE10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BFD[0x28];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         AudioEventOnHit;                                   // 0xE40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         AudioEventOnHardHit;                               // 0xE48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         AudioEventOnDeath;                                 // 0xE50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OnDamagePlayerStingerName;                         // 0xE58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OnDamagedByPlayerStingerName;                      // 0xE60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           TailWhipMassDifferential;                          // 0xE68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ThrashMassDifferential;                            // 0xE70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     LargeWildlifeBody;                                 // 0xE78(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLargeWildlifeUseCapsule;                          // 0xE80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockSmallerWildlife;                             // 0xE81(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C01[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bGetNutrientsOnConsume;                            // 0xE88(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C03[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AttackPointSocketNames;                            // 0xE90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceLimbWidth;                                   // 0xEA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C04[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForceLimbWidth;                                    // 0xEA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C05[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentPreyGrabPointIndex;                         // 0xEB0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C06[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaximumJawWidth;                                   // 0xEC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PartialRagdollBlendSpeed;                          // 0xEC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumRagdollMultiplier;                          // 0xEC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunInAirRagdollWeight;                            // 0xECC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoneBaseBlendWeight>          InAirRagdoll;                                      // 0xED0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoneBaseBlendWeight>          InWaterStunRagdoll;                                // 0xEE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoneBaseBlendWeight>          InWaterHitReactRagdoll;                            // 0xEF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitReactBlendoutTime;                              // 0xF00(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C0A[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBoneBaseBlendWeight>          OnLandPartialRagdoll;                              // 0xF08(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C0B[0x20];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              SetMeshRotation;                                   // 0xF38(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        BlendSpeed;                                        // 0xF44(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrailAlphaMultiplier;                              // 0xF48(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WhipshotPhysics;                                   // 0xF4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowNormalLungePopup;                             // 0xF50(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowApexLungePopup;                               // 0xF51(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C0F[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LungePopupCount;                                   // 0xF54(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETutorialPopupID                  FirstEncounterTutorialPopupId;                     // 0xF58(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C11[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_AnimalCharacter* GetDefaultObj();

	void UseKnockbackRagdoll();
	void UpdatePartialRagdoll(float DeltaSeconds);
	void UpdateJointBlendWeight(class USkeletalMeshComponent* SKM, class FName BoneName, float PartialPhysicsBase, float AnimBlendMultiplier, float SpeedPercent);
	bool TryUseEvadeAbility(enum class EComboDirection InputDirection, bool bReversed);
	void StopThrashing();
	void SetThreatLevel(enum class EAIThreatAlertState NewAlertState, class AActor* InstigatingActor);
	void OnConsumedGrabPoint(struct FThrashGrabPoint& ConsumedGrabPoint);
	void OnAbilityActivated(enum class EME_CharacterAbility Ability);
	void ModifyStamina(float Change);
	bool IsTransitioning();
	bool IsThrashing();
	bool IsLunging();
	bool IsEvading();
	bool HasAnyStamina();
	float GetThrashDecayPct();
	float GetThrashDamagePool();
	struct FVector GetTailLocation();
	float GetTailControlStrength();
	class FName GetPreyAttachBoneName();
	float GetMaxMoveSpeed();
	struct FVector GetJawsLocation();
	float GetJawSize();
	float GetDrownSpeedModifier();
	float GetDrownSpeedBase();
	float GetCurrentSpeedPct();
	float GetBaseThrashDamage();
	float GetBaseTailwhipDamage();
	float GetBaseStrugglePower();
	float GetBaseStrikeDamage();
	float GetBaseBiteDamage();
	void EndKnockbackRagdoll();
	bool ConsumePreyWhole(class AActor* ThrashablePrey);
	bool CanGrabPrey(class AActor* ThrashablePrey);
	bool CanEnterCombatMovement();
};

// 0x140 (0x750 - 0x610)
// Class Maneater.ME_CharacterMovementComponent
class UME_CharacterMovementComponent : public UCharacterMovementComponent
{
public:
	uint8                                        Pad_C25[0x30];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMomentumForce>                ActiveForces;                                      // 0x640(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MercunaAcceleration;                               // 0x650(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OverrideMercunaAcceleration;                       // 0x65C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              MercunaRotation;                                   // 0x668(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               AngularVelocity;                                   // 0x674(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxYawRate;                                        // 0x680(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPitchRate;                                      // 0x684(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRollRate;                                       // 0x688(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAngularAcceleration;                            // 0x68C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPositionCorrected : 1;                            // Mask: 0x1, PropSize: 0x10x690(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_84 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_C2C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallingHeightScalar;                               // 0x694(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallVelocityMax;                                   // 0x698(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallVelocityScale;                                 // 0x69C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C2F[0xB0];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_CharacterMovementComponent* GetDefaultObj();

	void UpdateMercunaMovementProperties();
	void SetOverrideMercunaAcceleration(const struct FVector& OverrideAcceleration);
	struct FVector GetMercunaAcceleration();
	struct FVector GetLocalVelocity();
	bool AtSeaLevel();
};

// 0x98 (0x7E8 - 0x750)
// Class Maneater.ME_AnimalMovementComponent
class UME_AnimalMovementComponent : public UME_CharacterMovementComponent
{
public:
	bool                                         bCombatVelocityBased;                              // 0x750(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C32[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMercunaNavigationConfiguration       CombatMovementConfiguration;                       // 0x754(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FMercunaNavigationConfiguration       AtEaseMovementConfiguration;                       // 0x770(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SpeedModifier;                                     // 0x78C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMercuna3DMovementAccelerations       AccelerationModifiers;                             // 0x790(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MaxCombatPitchRate;                                // 0x79C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCombatYawRate;                                  // 0x7A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCombatRollRate;                                 // 0x7A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCombatAngAccel;                                 // 0x7A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C33[0x14];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_AnimalCharacter*                   AnimalCharacter;                                   // 0x7C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMercunaNavigationConfiguration       InitialNavigationConfiguration;                    // 0x7C8(0x1C)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C34[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimalMovementComponent* GetDefaultObj();

};

// 0x58 (0x2C0 - 0x268)
// Class Maneater.ME_AnimInst_MenuShark
class UME_AnimInst_MenuShark : public UAnimInstance
{
public:
	enum class EEvolutionSelection               CurrentEvolutionSelection;                         // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEvolutionSelection               UsedEvolutionSelection;                            // 0x269(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C38[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEvolutionAnimations                  JawAnimations;                                     // 0x270(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEvolutionAnimations                  FinsAnimations;                                    // 0x280(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEvolutionAnimations                  HeadAnimations;                                    // 0x290(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEvolutionAnimations                  TailAnimations;                                    // 0x2A0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FEvolutionAnimations                  BodyAnimations;                                    // 0x2B0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimInst_MenuShark* GetDefaultObj();

};

// 0x228 (0x490 - 0x268)
// Class Maneater.ME_AnimInstance_Base
class UME_AnimInstance_Base : public UAnimInstance
{
public:
	bool                                         bIsStupidBeachGoer;                                // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C4A[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  HardLandingMontage;                                // 0x270(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  OnWaterSurfaceDeathAnimation;                      // 0x280(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  DrowningDeathAnimation;                            // 0x290(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  DrowningSwimmingDeathAnimation;                    // 0x2A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  OnLandDeathAnimation;                              // 0x2B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeathBlendingOut;                                 // 0x2C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerSharkTailDirection         TailDirection;                                     // 0x2C1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerSharkTailDirection         OutroTailDirection;                                // 0x2C2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C4E[0x5];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimSequence*>                 HitFromLeft;                                       // 0x2C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 HitFromRight;                                      // 0x2D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 HitFromAbove;                                      // 0x2E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 HitFromBelow;                                      // 0x2F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 BitFromLeft;                                       // 0x308(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 BitFromRight;                                      // 0x318(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 BitFromAbove;                                      // 0x328(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 BitFromBelow;                                      // 0x338(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 VulnerableHitFromLeft;                             // 0x348(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 VulnerableHitFromRight;                            // 0x358(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitReactStruct                       HitReactA;                                         // 0x368(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FHitReactStruct                       HitReactB;                                         // 0x378(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FHitReactStruct                       HitReactC;                                         // 0x388(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ActorVelocity;                                     // 0x398(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UnRotatedVelocity;                                 // 0x3A4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               NormUnRotatedVelocity;                             // 0x3B0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActorSpeed;                                        // 0x3BC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMoving;                                         // 0x3C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOnLand;                                         // 0x3C1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasSwimmingLastFrame;                             // 0x3C2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSwimming;                                       // 0x3C3(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInWater;                                        // 0x3C4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFalling;                                        // 0x3C5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedsToSurface;                                   // 0x3C6(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUnderWater;                                     // 0x3C7(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCannotBreath;                                     // 0x3C8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDrowning;                                       // 0x3C9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C54[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PercentBreathRemaining;                            // 0x3CC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Healthpct;                                         // 0x3D0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealthPercentPlayback;                             // 0x3D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDead;                                           // 0x3D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPawnDead;                                       // 0x3D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C58[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IsDead;                                            // 0x3DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IsAlive;                                           // 0x3E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBleedingOut;                                    // 0x3E4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasGrabbedActor;                                  // 0x3E5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHadActorLastFrame;                                // 0x3E6(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGrabbedActor;                                   // 0x3E7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkeletonGrabbableJoints          GrabbedJoint;                                      // 0x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkeletonGrabDirection            GrabbedDirection;                                  // 0x3E9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C5C[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetDistance;                                    // 0x3EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWhipshotPreThrow;                                 // 0x3F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWhipshotThrown;                                 // 0x3F1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C5E[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WhipshotRagdollMultiplier;                         // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreThrowAlpha;                                     // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBeingThrashed;                                  // 0x3FC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterInjuryState             InjuryState;                                       // 0x3FD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C60[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESkeletonGrabbableJoints          LastLostJoint;                                     // 0x3FF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ESkeletonGrabbableJoints>  AllLostJoints;                                     // 0x400(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInRagdoll;                                      // 0x410(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockJawWidth;                                     // 0x411(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockBitePlacement;                                // 0x412(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C62[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BitePlacementLocation;                             // 0x414(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockJawAnimValue;                                  // 0x420(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C63[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              DeltaRotation;                                     // 0x42C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_C64[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              MeshDeltaRotation;                                 // 0x444(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        AbsActorPitch;                                     // 0x450(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C69[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              ThrashersDeltaRotation;                            // 0x460(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              ActualMeshOffset;                                  // 0x46C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  WhipshotRecoveryAnimations;                        // 0x478(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C6A[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimInstance_Base* GetDefaultObj();

	void PlayLostLimbAnimation(enum class ESkeletonGrabbableJoints LostJoint);
	class UAnimMontage* PlayDeathAnimation();
	void K2_Reset();
	class UAnimMontage* GetWhipshotRecoveryAnimation();
	class AME_Character* GetOwningCharacter();
	bool GetIsMoving();
};

// 0xB8 (0x548 - 0x490)
// Class Maneater.ME_AnimInstance_NPC
class UME_AnimInstance_NPC : public UME_AnimInstance_Base
{
public:
	uint8                                        Pad_C72[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTargetIsKnifing;                                  // 0x498(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C74[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlatSquareTargetDistance;                          // 0x49C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PlayerLocation;                                    // 0x4A0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PlayerBodyMainLocation;                            // 0x4AC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAIThreatAlertState               ThreatLevel;                                       // 0x4B8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C76[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ThreatInstigator;                                  // 0x4C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThreatInstigatorAlpha;                             // 0x4C8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ThreatInstigatorLocation;                          // 0x4CC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanAimLookat;                                     // 0x4D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAimLookat;                                     // 0x4D9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C77[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UseAimLookatAlpha;                                 // 0x4DC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MontageAddMultiplier;                              // 0x4E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThreatLookatYaw;                                   // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThreatLookatPitch;                                 // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bThreatInLookatDOT;                                // 0x4EC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsThreatened;                                     // 0x4ED(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsThreatInFront;                                  // 0x4EE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasMercunaAccelerationThisFrame;                  // 0x4EF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHadMercunaAccelerationLastFrame;                  // 0x4F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C78[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ActorLookatFwdDOT;                                 // 0x4F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActorLookatRightDOT;                               // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActorLookatUpDOT;                                  // 0x4FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshCompLookatFwdDOT;                              // 0x500(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshCompLookatRightDOT;                            // 0x504(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshCompLookatUpDOT;                               // 0x508(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRightSideOfMesh;                                  // 0x50C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFrontSideOfMesh;                                  // 0x50D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C7C[0xA];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bMissingHead;                                      // 0x518(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingLeftArm;                                   // 0x519(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingRightArm;                                  // 0x51A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingLeftLeg;                                   // 0x51B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingRightLeg;                                  // 0x51C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMissingAnyLimbs;                                // 0x51D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C7F[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IntroSpikeRate;                                    // 0x520(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntroSpikeDuration;                                // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntroSpikeBlendInRate;                             // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntroSpikeBlendOutRate;                            // 0x52C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C81[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimInstance_NPC* GetDefaultObj();

};

// 0x538 (0xA80 - 0x548)
// Class Maneater.ME_AnimInstance_HumanNPC
class UME_AnimInstance_HumanNPC : public UME_AnimInstance_NPC
{
public:
	TArray<TSoftObjectPtr<class UAnimSequence>>  SoftScaredAnimationPtr;                            // 0x548(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CCD[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         SelectedScaredAnimation;                           // 0x560(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaredAnimationStartTime;                          // 0x568(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHoldingAttachment;                              // 0x56C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CD0[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IsHoldingAttachmentAlpha;                          // 0x570(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponType                       AttachmentType;                                    // 0x574(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWithinWeaponRange;                              // 0x575(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartFiringMontage;                               // 0x576(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayingFiringMontage;                             // 0x577(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseLeftHandIK;                                    // 0x578(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCarriedWeaponUsesIK;                              // 0x579(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBoatIsMoving;                                     // 0x57A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleType                      VehicleType;                                       // 0x57B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePassengerBranch;                               // 0x57C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CD2[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         PassengerIdleAnimation;                            // 0x580(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerIdleStartTime;                            // 0x588(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CD3[0x54];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBlendSpace*                           PassengerAimBlendspaceAnimation;                   // 0x5E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CD4[0x28];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         PassengerTurnRightAnimation;                       // 0x610(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CD5[0x28];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         PassengerTurnLeftAnimation;                        // 0x640(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         PassengerSuspiciousAnimation;                      // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CD8[0x28];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         PassengerAlertAnimation;                           // 0x678(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CD9[0x28];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         PassengerMovingAnimation;                          // 0x6A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CDA[0x28];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  PassengerFiringAnimations;                         // 0x6D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CDC[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  PassengerHitFromForwradsAnimations;                // 0x6F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CDD[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  PassengerHitFromBehindAnimations;                  // 0x718(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CDE[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  PassengerHitFromLeftAnimations;                    // 0x738(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CE0[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  PassengerHitFromRightAnimations;                   // 0x758(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CE3[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBlendSpace*                           UnderStarboardBlendspace;                          // 0x778(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              StarboardRotationOffset;                           // 0x780(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               StarboardLocationOffset;                           // 0x78C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           UnderPortBlendspace;                               // 0x798(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PortRotationOffset;                                // 0x7A0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               PortLocationOffset;                                // 0x7AC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimOverEdgePitchValue;                             // 0x7B8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimOverWaterDepthValue;                            // 0x7BC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CE5[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bForceLookatFalse;                                 // 0x7C8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverwriteTurningAnimations;                       // 0x7C9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJetskiHasHunterPassenger;                         // 0x7CA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPilot;                                          // 0x7CB(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanTrackTarget;                                   // 0x7CC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLaserActivated;                                   // 0x7CD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAimOverEdge;                                      // 0x7CE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseStarboardBlendspace;                           // 0x7CF(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CE7[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         DiverIdleAnimation;                                // 0x7E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         DiverSuspiciousAnimation;                          // 0x7E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         DiverAlertAnimation;                               // 0x7F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         DiverMovingAnimation;                              // 0x7F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           DiverMovingAlertAnimation;                         // 0x800(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  DiverFiringAnimations;                             // 0x808(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingHeadAnimation;                              // 0x818(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingLeftArmAnimation;                           // 0x828(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingRightArmAnimation;                          // 0x838(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingLeftLegAnimation;                           // 0x848(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingRightLegAnimation;                          // 0x858(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingTorsoAnimation;                             // 0x868(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingLegsAnimation;                              // 0x878(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingBothLegs;                                  // 0x888(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CF0[0x17];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  BumpGoingForwards;                                 // 0x8A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  BumpGoingBackwards;                                // 0x8B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  BumpGoingRight;                                    // 0x8C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  BumpGoingLeft;                                     // 0x8D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleWaterHeight;                                // 0x8E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseRagdollPose;                                   // 0x8E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseWaterRagdollPose;                              // 0x8E5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CF3[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RagdollPoseName;                                   // 0x8E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  UninjuredGetupChestUp;                             // 0x8F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingLegGetupChestUp;                            // 0x900(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  UninjuredGetupChestDown;                           // 0x910(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  MissingLegGetupChestDown;                          // 0x920(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomElectrocuteStartTime;                        // 0x930(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PassengerElectrocute;                              // 0x934(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CF5[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SwimSpeed;                                         // 0x938(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimPlaybackRate;                                  // 0x93C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BumpedValue;                                       // 0x940(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MercunaBasedActorSpeed;                            // 0x944(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFlailingInTheAir;                                 // 0x948(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSmash;                                          // 0x949(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CF7[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DiverWeaponPlacementAlpha;                         // 0x94C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLookatTarget;                                     // 0x950(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CF9[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TargetLocation;                                    // 0x954(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassengerRootLookat;                              // 0x960(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassengerPlayerLookat;                            // 0x961(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassengerAbandonLookat;                           // 0x962(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CFC[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerToSpineUpDot;                                // 0x964(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerToSpineRightDot;                             // 0x968(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldJetskiPilotPoint;                           // 0x96C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPointAtTarget;                                    // 0x96D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJetskiPilotDuck;                                  // 0x96E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseStandingJetski;                                // 0x96F(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CFF[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPassengerLeaveIdleState;                          // 0x978(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassengerGoToAlerted;                             // 0x979(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassengerLeaveAlerted;                            // 0x97A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassengerGoToSuspicious;                          // 0x97B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassengerLeaveMovingVehicle;                      // 0x97C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D02[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PassengerSpineLookatAlpha;                         // 0x980(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ForcedHipsLoc;                                     // 0x984(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ForcedHipsRot;                                     // 0x990(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ForcedHipsAlpha;                                   // 0x99C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HumanSpineFwdDot;                                  // 0x9A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HumanSpineRightDot;                                // 0x9A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HumanSpineUpDot;                                   // 0x9A8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NewSpineLookat;                                    // 0x9AC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootFwdDot;                                        // 0x9B0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootFwdASinD;                                      // 0x9B4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrackingRootLeft;                                 // 0x9B8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D05[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RootRightDot;                                      // 0x9BC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootUpDot;                                         // 0x9C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               NPCIKElbowOffset;                                  // 0x9C4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              NPCSpineLookat;                                    // 0x9D0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              AimingElbowRotator;                                // 0x9DC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        PointingDistance;                                  // 0x9E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsedSwimmingBallAlphaValue;                        // 0x9EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBeachGoerFakeStumble;                             // 0x9F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasValidTargetingAimOffset;                       // 0x9F1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasValidStandingTurnAnimations;                   // 0x9F2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D07[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ActiveRootTargetingLocation;                       // 0x9F4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateRootLookatVector;                           // 0xA00(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D08[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UBlendSpace*>                   PossibleAlertBlendspaces;                          // 0xA08(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           SelectedAlertBlendspace;                           // 0xA18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                   PossibleEaseBlendspaces;                           // 0xA20(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           SelectedEaseBlendspace;                            // 0xA30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                   PossibleInjuredBlendspaces;                        // 0xA38(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           SelectedInjuredBlendspace;                         // 0xA48(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                   PossibleMaimedBlendspaces;                         // 0xA50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           SelectedMaimedBlendspace;                          // 0xA60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                   PossibleSuspiciousBlendspaces;                     // 0xA68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           SelectedSuspiciuosBlendspace;                      // 0xA78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimInstance_HumanNPC* GetDefaultObj();

	void SetForcedHipsLocation();
	void SaveSoftWeaponReferences(bool* ValidSoft, TSoftObjectPtr<class UAnimSequence>* LocalSoftReference, TSoftObjectPtr<class UAnimSequence>* SentSoftReference);
	void SaveSoftWeaponArrayReferences(bool* ValidSoft, TArray<TSoftObjectPtr<class UAnimMontage>>* LocalSoftReference, TArray<TSoftObjectPtr<class UAnimMontage>>* SentSoftReference);
	void SaveSoftBlendSpaceReferences(bool* ValidSoft, TSoftObjectPtr<class UBlendSpace>* LocalSoftReference, TSoftObjectPtr<class UBlendSpace>* SentSoftReference);
	void SaveHardWeaponReferences();
	void SaveHardWeaponBlendspace(TSoftObjectPtr<class UBlendSpace>* SoftRef, class UBlendSpace** HardRef);
	void SaveHardWeaponAnimationArray(TArray<TSoftObjectPtr<class UAnimMontage>>* SoftArray, TArray<class UAnimMontage*>* HardArray);
	void SaveHardWeaponAnimation(TSoftObjectPtr<class UAnimSequence>* SoftRef, class UAnimSequence** HardRef);
	void PlayPassengerHitReaction(const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& HitImpulse);
	void PlayGetupAnimation(bool ChestUp);
	class UAnimMontage* PlayFiringMontage();
	void PassengerHitReactionDelay(class UAnimMontage* MontageToPlay);
	void LoadSoftWeaponAnimations();
	void GetupAnimationBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	class UAnimMontage* GetUninjuredChestUpGetupAnimation();
	class UAnimMontage* GetUninjuredChestDownGetupAnimation();
	class UAnimMontage* GetInjuredChestUpGetupAnimation();
	class UAnimMontage* GetInjuredChestDownGetupAnimation();
	void FiringMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	bool CarryingWeaponRequiresAiming();
	void AddSoftWeaponAnimationArray(TArray<struct FSoftObjectPath>* ArrayToLoad, TArray<TSoftObjectPtr<class UAnimMontage>>* SoftArray);
};

// 0x420 (0x8B0 - 0x490)
// Class Maneater.ME_AnimInstance_PlayerShark
class UME_AnimInstance_PlayerShark : public UME_AnimInstance_Base
{
public:
	float                                        MaximumBlendspaceSpeed;                            // 0x490(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseAnimationPlaybackRate;                         // 0x494(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxKnifingAlphaSpeed;                              // 0x498(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggerIntroAnimation;                            // 0x49C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D20[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnderwaterStationaryYaw;                           // 0x4A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderwaterStationaryPitch;                         // 0x4A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleHalfHeight;                                 // 0x4A8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseVulnerableGrab;                                // 0x4AC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D22[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxMeshAngle;                                      // 0x4B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationSpeed;                                     // 0x4B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshYawOffsetForFullRoll;                          // 0x4B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshYawRollRotationSpeed;                          // 0x4BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StationaryYawCounterRotation;                      // 0x4C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StationaryPitchCounterRotation;                    // 0x4C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCounterTailYawAngle;                            // 0x4C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHeadYawRot;                                     // 0x4CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHeadRollRot;                                    // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHeadPitchRot;                                   // 0x4D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDorsalFinBend;                                  // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVentralFinPitch;                                // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVentralFinYaw;                                  // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProceduralThumbInterpSpeed;                        // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVentralFinInAirPitchAngle;                      // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVentralFinInAirRollAngle;                       // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderwaterCamYawValue;                             // 0x4F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderwaterCamPitchValue;                           // 0x4F4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftThumbYValue;                                   // 0x4F8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftThumbXValue;                                   // 0x4FC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHardlockForwards;                                 // 0x500(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D26[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StrafeValue;                                       // 0x504(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterpStrafeValue;                                 // 0x508(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsedInterpStrafeValue;                             // 0x50C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMovementInputPressed;                             // 0x510(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMouthAutoClosedWithBite;                          // 0x511(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMouthOpenPressed;                                 // 0x512(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D28[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProceduralTrailControllerAlpha;                    // 0x514(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHardLocked;                                     // 0x518(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCruisingWaterLine;                              // 0x519(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasCruisingWaterLineLastFrame;                    // 0x51A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableKnifingIK;                                  // 0x51B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProceduralKnifingRootAlpha;                        // 0x51C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFreemoveEnabled;                                // 0x520(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerGrowthStage                CurrentEvolutionStage;                             // 0x521(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D2B[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxIntroSpeedChange;                               // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxIntroSpeedInterp;                               // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntroSpeedBurstTime;                               // 0x52C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningSpikePlaybackIncrease;                      // 0x530(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningSpikeDuration;                              // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningSpikeFalloffRate;                           // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningSpikeCameraDegree;                          // 0x53C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningSpikeRollDegree;                            // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningSpikeMinSpeed;                              // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnifingTurningSideOffset;                          // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnifingHeadRollMax;                                // 0x54C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnifingHeadYawMax;                                 // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnifingInputRotationRange;                         // 0x554(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnifingInputRotationValue;                         // 0x558(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsedKnifingAlphaValue;                             // 0x55C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsedKnifingTailTrailAlpha;                         // 0x560(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnifingCameraRollMaximum;                          // 0x564(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D2F[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimSequence*>                 BumpToTheRight;                                    // 0x578(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 BumpToTheLeft;                                     // 0x588(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdditiveAnimStruct                   BumpAdditiveA;                                     // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FAdditiveAnimStruct                   BumpAdditiveB;                                     // 0x5A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        OnLandHeightOffset;                                // 0x5B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UsedOnLandHeightOffset;                            // 0x5BC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreyThrowSetup;                                   // 0x5C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D31[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InAirPitchAngle;                                   // 0x5CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirPitchSpeed;                                   // 0x5D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirPitchInterpValue;                             // 0x5D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirRollAngle;                                    // 0x5D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirRollSpeed;                                    // 0x5DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirRollInterpValue;                              // 0x5E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirYawAngle;                                     // 0x5E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirYawSpeed;                                     // 0x5E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InAirYawInterpValue;                               // 0x5EC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              InAirBodySpin;                                     // 0x5F0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              InAirLeftVentralFin;                               // 0x5FC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              InAirRightVentralFin;                              // 0x608(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_D35[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnderwaterCamYawInterp;                            // 0x61C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnderwaterCamPitchInterp;                          // 0x620(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeshYawInterp;                                     // 0x624(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeshPitchInterp;                                   // 0x628(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWasPlayerInputtingMovementLastFrame;              // 0x62C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayerInputtingMovement;                        // 0x62D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D37[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IsPlayerInputtingMovementInterp;                   // 0x630(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProceduralHeadAlpha;                               // 0x634(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProceduralIKTailAlpha;                             // 0x638(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              ProceduralRootRotation;                            // 0x63C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              ProceduralTailCounterRootRotation;                 // 0x648(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              DorsalFinRot;                                      // 0x654(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DorsalFinAlpha;                                    // 0x660(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LeftVentralFinRot;                                 // 0x664(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              RightVentralFinRot;                                // 0x670(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        VentralFinAlpha;                                   // 0x67C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UsedVentralFinInAirPitchAngle;                     // 0x680(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UsedVentralFinInAirRollAngle;                      // 0x684(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              HeadRot;                                           // 0x688(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        UsedBaseAnimationPlaybackRate;                     // 0x694(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D3A[0x1C];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              ProceduralKnifingRootRotation;                     // 0x6B4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              ProceduralKnifingTailRotation;                     // 0x6C0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ProceduralKnifingRootTranslation;                  // 0x6CC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              ProceduralKnifingHeadRotation;                     // 0x6D8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bTriggerOutro;                                     // 0x6E4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLockSpeeds;                                       // 0x6E5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D3E[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UsedForwardValue;                                  // 0x6E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UsedStrafingValue;                                 // 0x6EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D40[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseForcedBitePlacement;                           // 0x700(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForcedBitePlacement;                              // 0x701(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D41[0xE];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ForcedBiteTransform;                               // 0x710(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bPreWhipShot;                                      // 0x740(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D42[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               WhipshotImpactLocation;                            // 0x744(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PreWhipshotHoldLoc;                                // 0x750(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PreWhipshotHoldRot;                                // 0x75C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              PreWhipshotHoldRotSpin;                            // 0x768(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        GrabbedPlaybackValue;                              // 0x774(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsedGrabbedPlaybackRate;                           // 0x778(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D44[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ABSTotalDegDif;                                    // 0x784(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UsedSpinningSharkOffset;                           // 0x788(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumTurningHorizontalOffset;                    // 0x794(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCameraRotation;                                // 0x798(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D45[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UsedVentralFinPlayrateValue;                       // 0x79C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsedInterpForwardValue;                            // 0x7A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsedCameraChangeAlpha;                             // 0x7A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowTransitionIntoBiteIntro;                     // 0x7A8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowTransitionIntoEmptyBite;                     // 0x7A9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowTransitionIntoBiteVictim;                    // 0x7AA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoldBiteEmptyState;                               // 0x7AB(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoldBiteIntroState;                               // 0x7AC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D47[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FullCameraYawChange;                               // 0x7B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumRootRollViaCameraYaw;                       // 0x7B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumRootYawViaCameraYaw;                        // 0x7B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumTailCounterYawViaCameraYaw;                 // 0x7BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailYawInterpSpeed;                                // 0x7C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MappedCameraAlphaValues;                           // 0x7C4(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseMutagenScales;                                 // 0x7CC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D49[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MutagenHead02;                                     // 0x7D0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenHead01;                                     // 0x7DC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBodyMain;                                   // 0x7E8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBody01;                                     // 0x7F4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBody02;                                     // 0x800(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBody03;                                     // 0x80C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBody04;                                     // 0x818(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBody05;                                     // 0x824(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBody06;                                     // 0x830(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBody07;                                     // 0x83C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MutagenBody08;                                     // 0x848(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnifingMeshYawOffsetForFullRoll;                   // 0x854(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KifingMeshYawRollRotationSpeed;                    // 0x858(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxKnifingMeshAngle;                               // 0x85C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumRootKnifingRollViaCameraYaw;                // 0x860(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumRootKnifingYawViaCameraYaw;                 // 0x864(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumKnifingTailCounterYawViaCameraYaw;          // 0x868(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ProceduralRootOffset;                              // 0x86C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnifingRootOffsetInterpSpeed;                      // 0x878(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootOffsetInterpSpeed;                             // 0x87C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  VulnerableMontages;                                // 0x880(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D52[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsJumping;                                        // 0x8A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D53[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UsedPitchInterpValue;                              // 0x8A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D54[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimInstance_PlayerShark* GetDefaultObj();

	void UpdateKnifingRotation(const struct FRotator& MeshRotation, const struct FRotator& ActorRotation);
	void SetCruisingWaterLine(bool SetTo);
	class AME_PlayerSharkCharacter* GetOwningShark();
	void FloppingTakeOff();
	void FloppingLanding();
};

// 0x128 (0x670 - 0x548)
// Class Maneater.ME_AnimInstance_WildlifeNPC
class UME_AnimInstance_WildlifeNPC : public UME_AnimInstance_NPC
{
public:
	enum class EWildlifeSpecies                  SpeciesType;                                       // 0x548(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAlligator;                                      // 0x549(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D57[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CustomHeightOffset;                                // 0x54C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OnLandVectorOffset;                                // 0x550(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovingPlaybackRate;                                // 0x55C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumSwimSpeed;                                  // 0x560(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsedSwimmingPlaybackRate;                          // 0x564(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntroYawAngle;                                     // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntroPitchAngle;                                   // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyMainOffset;                                    // 0x570(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BodyMainRotation;                                  // 0x57C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              TailCoutnerRotation;                               // 0x588(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_D59[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  IntroTailMidGoingLeft;                             // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  IntroTailExtremeLeft;                              // 0x5A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  IntroTailMidGoingRight;                            // 0x5B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  IntroTailExtremeRight;                             // 0x5C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  OutroTailMidGoingLeft;                             // 0x5D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  OutroTailExtremeLeft;                              // 0x5E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  OutroTailMidGoingRight;                            // 0x5F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  OutroTailExtremeRight;                             // 0x608(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ThrashAttackerWorldRotation;                       // 0x618(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              ThrashAttackerWorldRotationLastFrame;              // 0x624(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseGrabbedBranch;                                 // 0x630(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D5B[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockedMovementSpeed;                               // 0x634(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D5C[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IdleHeadLookat;                                    // 0x63C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrailAlpha;                                        // 0x648(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayCloseMouth;                                   // 0x64C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D5D[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              GrabbedDirectionRootOffset;                        // 0x650(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bMissingBody04;                                    // 0x65C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingTail;                                      // 0x65D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingDorsalFin;                                 // 0x65E(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingRVentralFin;                               // 0x65F(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissingLVentralFin;                               // 0x660(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D5F[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThreatLevelTrailAlpha;                             // 0x664(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatMovementTrailAlpha;                          // 0x668(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailWhipForcedLocation;                            // 0x66C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimInstance_WildlifeNPC* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class Maneater.ME_AnimNotify_ApplyEffect
class UME_AnimNotify_ApplyEffect : public UAnimNotify
{
public:
	enum class EEffectTarget                     EffectTarget;                                      // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D63[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffects;                                   // 0x40(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRemoveEffects;                                    // 0x50(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D65[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotify_ApplyEffect* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Maneater.ME_AnimNotify_BroadcastAttack
class UME_AnimNotify_BroadcastAttack : public UAnimNotify
{
public:
	float                                        BroadcastNotificationDistance;                     // 0x38(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBite;                                           // 0x3C(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D6B[0x3];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotify_BroadcastAttack* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Maneater.ME_AnimNotify_ChunkVictim
class UME_AnimNotify_ChunkVictim : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotify_ChunkVictim* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Maneater.ME_AnimNotify_DataTableAkEvent
class UME_AnimNotify_DataTableAkEvent : public UAnimNotify
{
public:
	class FName                                  EventName;                                         // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFollow : 1;                                       // Mask: 0x1, PropSize: 0x10x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_8C : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_D70[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachName;                                        // 0x44(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D72[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotify_DataTableAkEvent* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Maneater.ME_AnimNotify_DialogueAkEvent
class UME_AnimNotify_DialogueAkEvent : public UAnimNotify
{
public:
	struct FDataTableRowHandle                   DialogueRowHandle;                                 // 0x38(0x10)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         Event;                                             // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimNotify_DialogueAkEvent* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_AnimNotify_DialogueFile
class UME_AnimNotify_DialogueFile : public UAnimNotify
{
public:
	struct FDataTableRowHandle                   DialogueRowHandle;                                 // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimNotify_DialogueFile* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Maneater.ME_AnimNotify_DynamicDialogueEvent
class UME_AnimNotify_DynamicDialogueEvent : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotify_DynamicDialogueEvent* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Maneater.ME_AnimNotify_FireWeapon
class UME_AnimNotify_FireWeapon : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotify_FireWeapon* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Maneater.ME_AnimNotify_GibVictim
class UME_AnimNotify_GibVictim : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotify_GibVictim* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Maneater.ME_AnimNotify_PlayCameraAnimation
class UME_AnimNotify_PlayCameraAnimation : public UAnimNotify
{
public:
	class UCameraAnim*                           CamAnim;                                           // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CamRate;                                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CamBlendInTime;                                    // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CamBlendOutTime;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CamScale;                                          // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimNotify_PlayCameraAnimation* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Maneater.ME_AnimNotify_ReleaseDamage
class UME_AnimNotify_ReleaseDamage : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotify_ReleaseDamage* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Maneater.ME_AnimNotify_SetAIMoveRotation
class UME_AnimNotify_SetAIMoveRotation : public UAnimNotify
{
public:
	enum class EThreeStateSwitch                 MovementState;                                     // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EThreeStateSwitch                 RotationState;                                     // 0x39(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D7F[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotify_SetAIMoveRotation* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Maneater.ME_AnimNotify_SpawnChunkParticles
class UME_AnimNotify_SpawnChunkParticles : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotify_SpawnChunkParticles* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Maneater.ME_AnimNotify_SpawnLargeChunkParticle
class UME_AnimNotify_SpawnLargeChunkParticle : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotify_SpawnLargeChunkParticle* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_AnimNotify_ThrashDamage
class UME_AnimNotify_ThrashDamage : public UAnimNotify
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   HitEffects;                                        // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimNotify_ThrashDamage* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Maneater.ME_AnimNotify_ThrowPrey
class UME_AnimNotify_ThrowPrey : public UAnimNotify
{
public:
	float                                        MinimumKnifingPitch;                               // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D96[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           EffectToApply;                                     // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ImpactEffectToApply;                               // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_AnimNotify_ThrowPrey* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_AnimNotify_TwAkEvent
class UME_AnimNotify_TwAkEvent : public UAnimNotify
{
public:
	class UDataTable*                            SearchTable;                                       // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         AkEvent;                                           // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimNotify_TwAkEvent* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Maneater.ME_AnimNotify_TwNarratorEvent
class UME_AnimNotify_TwNarratorEvent : public UAnimNotify
{
public:
	class FName                                  EventName;                                         // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimNotify_TwNarratorEvent* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_AnimNotify_UpdateAIFocus
class UME_AnimNotify_UpdateAIFocus : public UAnimNotify
{
public:
	bool                                         bClearFocus;                                       // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D9B[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BlackboardKeyName;                                 // 0x3C(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAIFocus                          Focus;                                             // 0x44(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D9D[0x3];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotify_UpdateAIFocus* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Maneater.ME_AnimNotifyFootstep
class UME_AnimNotifyFootstep : public UAnimNotify
{
public:
	class UAkAudioEvent*                         PreviewEvent;                                      // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AnimNotifyFootstep* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Maneater.ME_AnimNotifyState_DangerSense
class UME_AnimNotifyState_DangerSense : public UAnimNotifyState
{
public:
	float                                        DangerSenseBonus;                                  // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DA4[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotifyState_DangerSense* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Maneater.ME_AnimNotifyState_DeadPhysBlend
class UME_AnimNotifyState_DeadPhysBlend : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotifyState_DeadPhysBlend* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Maneater.ME_AnimNotifyState_ForceStopIK
class UME_AnimNotifyState_ForceStopIK : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UME_AnimNotifyState_ForceStopIK* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Maneater.ME_AnimNotifyState_HideWeapon
class UME_AnimNotifyState_HideWeapon : public UAnimNotifyState
{
public:
	class UStaticMeshComponent*                  WeaponComponent;                                   // 0x30(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DA6[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotifyState_HideWeapon* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Maneater.ME_AnimNotify_ManageGameplayTag
class UME_AnimNotify_ManageGameplayTag : public UAnimNotifyState
{
public:
	struct FGameplayTagContainer                 ActivateAbilitiesWithTags;                         // 0x30(0x20)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ManagedTags;                                       // 0x50(0x20)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           ManagedGameplayEffect;                             // 0x70(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DA8[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotify_ManageGameplayTag* GetDefaultObj();

};

// 0x138 (0x168 - 0x30)
// Class Maneater.ME_AnimNotifyState_MeleeAttack
class UME_AnimNotifyState_MeleeAttack : public UAnimNotifyState
{
public:
	enum class EAttackShape                      AttackCollisionShape;                              // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DA9[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AttackZOffset;                                     // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AttackLocalOffset;                                 // 0x38(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AttackLocalRotation;                               // 0x44(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackLength;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackRadius;                                      // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxCollisionShape;                                 // 0x58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDataTableOverride;                             // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DAC[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   AttackShapeTableRow;                               // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        AttackMomentum;                                    // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHitNormalMomentumDirection;                    // 0x7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DAD[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MomentumLocalRotation;                             // 0x80(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DAE[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayAttribute>            AttackMomentumModifiers;                           // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>            DefenseMomentumModifiers;                          // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttackShouldRagdoll;                              // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyRagdollIfVulnerable;                          // 0xB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMultiHitAttack;                                   // 0xB2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExcludeHeldTarget;                                // 0xB3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AttackIndex;                                       // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDropGrabVictim;                              // 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSoftLockMagnetism;                             // 0xB9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugAttacks;                                     // 0xBA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DAF[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugDrawTime;                                     // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffects;                                   // 0xC0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   VulnerableNoGrabGameplayEffects;                   // 0xD0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   SizeLevelDependentGameplayEffects;                 // 0xE0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanApplyDamage;                                   // 0xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAlwaysApplyMomentum;                              // 0xF1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAlwaysApplyGameplayEffects;                       // 0xF2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGrabbingAttack;                                   // 0xF3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayerBite;                                     // 0xF4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReleasePreyAtEnd;                                 // 0xF5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRegisterGeometryHits;                             // 0xF6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DB4[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinimumAttackDelayTime;                            // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCommandeerCamera;                                 // 0xFC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLoseAIFocusOnHit;                                 // 0xFD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStopRootMotionOnHit;                              // 0xFE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bScaleCapsuleOnGrab;                               // 0xFF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScaleCapsuleRadius;                                // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScaleCapsuleHalfHeight;                            // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AttackUpscale;                                     // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DB6[0x5C];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotifyState_MeleeAttack* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class Maneater.ME_AnimNotifyState_MeleeAttackSimple
class UME_AnimNotifyState_MeleeAttackSimple : public UAnimNotifyState
{
public:
	float                                        AttackMomentum;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DBA[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffects;                                   // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeAttackRadius;                                 // 0x48(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KickImpulseMagnitudeXY;                            // 0x4C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KickImpulseMagnitudeZ;                             // 0x50(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseNearestPointOnShark : 1;                       // Mask: 0x1, PropSize: 0x10x54(0x1)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DBC[0x3];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotifyState_MeleeAttackSimple* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Maneater.ME_AnimNotifyState_ScalePrey
class UME_AnimNotifyState_ScalePrey : public UAnimNotifyState
{
public:
	float                                        UnifromScaleSize;                                  // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DBE[0x1C];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotifyState_ScalePrey* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Maneater.ME_AnimNotifyState_TemporaryProp
class UME_AnimNotifyState_TemporaryProp : public UAnimNotifyState
{
public:
	class UStaticMesh*                           PropAsset;                                         // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkeletonAttachJoints             AttachJoint;                                       // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DC8[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PostNotifyLifespan;                                // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPhysicsAfterNotify;                               // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImpulseAfterNotify;                               // 0x41(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DC9[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpulseMultiplier;                                 // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AStaticMeshActor*                      PropActor;                                         // 0x48(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DCA[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AnimNotifyState_TemporaryProp* GetDefaultObj();

};

// 0xD0 (0x2F0 - 0x220)
// Class Maneater.ME_AssetLoader
class AME_AssetLoader : public AActor
{
public:
	TArray<class UDataTable*>                    DefaultDataTables;                                 // 0x220(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                    EvolutionDataTables;                               // 0x230(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            AssetLoadingFinishedDelegate;                      // 0x240(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TMap<class FName, struct FLoadedAssets>      SavedAssets;                                       // 0x250(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_DE8[0x50];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_AssetLoader* GetDefaultObj();

	class USkeletalMesh* GetSkeletalMesh(class FName SEventName);
	TArray<class UParticleSystem*> GetParticleSystemList(const TArray<class FName>& EventNames, enum class ECharacterActionMode EActionMode);
	class UParticleSystem* GetParticleSystem(class FName SEventName, enum class ECharacterActionMode EActionMode);
	class UMaterialInterface* GetMaterial(class FName SEventName);
	struct FImpactEffect GetImpactEffect(class FName SNameBase, enum class EPhysicalSurface ESurfaceType);
	class FString GetEquippedEvolutionRowName(enum class EEvolutionSlot SlotType);
	class UAkAudioEvent* GetAudioEventWithSurface(class FName SEventName, enum class EPhysicalSurface ESurfaceType);
	class UAkAudioEvent* GetAudioEvent(class FName SEventName, enum class ECharacterActionMode EActionMode);
	class UAnimMontage* GetAnimMontage(class FName SEventName, enum class ECharacterActionMode EActionMode);
};

// 0xF0 (0x120 - 0x30)
// Class Maneater.ME_AttachmentAnimSet
class UME_AttachmentAnimSet : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UAnimSequence>>  SoftIdleAnimations;                                // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimSequence>>  SoftSuspiciousAnimations;                          // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UBlendSpace>            SoftAlertAimingBlendspace;                         // 0x50(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimSequence>>  SoftAlertAnimations;                               // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimSequence>>  SoftMovingAnimations;                              // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimMontage>>   SoftHitFromForwradsAnimations;                     // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimMontage>>   SoftHitFromBehindAnimations;                       // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimMontage>>   SoftHitFromLeftAnimations;                         // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimMontage>>   SoftHitFromRightAnimations;                        // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimMontage>>   SoftFiringAnimations;                              // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimSequence>>  SoftTurnRightAnimations;                           // 0xE8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimSequence>>  SoftTurnLeftAnimations;                            // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IKElbowOffset;                                     // 0x108(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              AimingElbowRotation;                               // 0x114(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_AttachmentAnimSet* GetDefaultObj();

};

// 0xB8 (0x870 - 0x7B8)
// Class Maneater.ME_GameplayEffect
class UME_GameplayEffect : public UGameplayEffect
{
public:
	class UPhysicalMaterial*                     PhysicalMaterialOverride;                          // 0x7B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPrimaryEffect;                                  // 0x7C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DEF[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMEGameplayEffectAudioEvent>   ActivationAudioEvents;                             // 0x7C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectAudioEvent>   DeactivationAudioEvents;                           // 0x7D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectParticleSystem> ActivationParticleSystems;                         // 0x7E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectParticleSystem> PersistentParticleSystems;                         // 0x7F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectParticleSystem> DeactivationParticleSystems;                       // 0x808(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMEGameplayEffectMaterialEffect> PersistentMaterialEffects;                         // 0x818(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements              SourceTagRequirements;                             // 0x828(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Montage;                                           // 0x868(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_GameplayEffect* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Maneater.ME_GameplayEffectUIData
class UME_GameplayEffectUIData : public UGameplayEffectUIData
{
public:
	class FText                                  Description;                                       // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EEvolutionProcType                ProcType;                                          // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DF4[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameplayEffectUIData* GetDefaultObj();

};

// 0x200 (0x230 - 0x30)
// Class Maneater.ME_AttributeSet
class UME_AttributeSet : public UAttributeSet
{
public:
	uint8                                        Pad_DF9[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMEGameplayAttributeData              Damage;                                            // 0x40(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              Health;                                            // 0x60(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              AdditionalMaxHealth;                               // 0x80(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              Stamina;                                           // 0xA0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              StaminaRegenRate;                                  // 0xC0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SwimMovementSpeed;                                 // 0xE0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              AdditionalMaxSwimSpeed;                            // 0x100(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              WalkMovementSpeed;                                 // 0x120(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MaxAcceleration;                                   // 0x140(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SlamDamageDefense;                                 // 0x160(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SizeLevel;                                         // 0x180(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SizeDelta;                                         // 0x1A0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              WhipshotExplosionDamageReduction;                  // 0x1C0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_DFB[0x50];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AttributeSet* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Maneater.ME_AudioEventManager
class UME_AudioEventManager : public UObject
{
public:
	TArray<struct FME_AudioEvent>                EventProperties;                                   // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlobalCooldownSeconds;                             // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E1A[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WWiseJukeboxName;                                  // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimAttenuationRollOnSeconds;                      // 0x50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimAttenuationRollOffSeconds;                     // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BountyMaxSuspicionLevel;                           // 0x58(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWhizzbyRange;                                   // 0x5C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttenuationValue;                                  // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        NextGlobalFireTime;                                // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         JukeboxStarted;                                    // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         BankLoaded;                                        // 0x69(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E1D[0x26];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_AudioEventManager* GetDefaultObj();

	void Trigger(class FName EventName, class UObject* WorldContextObject, int32 ForceMode);
	float TickSwimAttenuation(bool InCombat, float DeltaTime);
	void PostWhizzbyIfInRange(class UAkAudioEvent* Event, class AActor* Projectile, class UObject* WorldContextObject);
	bool IsBankLoaded();
	class UME_AudioEventManager* GetAudioEventManager(class UObject* WorldContextObject);
	void DelayStartEx();
	void BankWaitCheckEx(class UWorld* World);
};

// 0xC8 (0x2E8 - 0x220)
// Class Maneater.ME_ThrashableActor
class AME_ThrashableActor : public AActor
{
public:
	uint8                                        Pad_E2A[0x38];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FriendlyName;                                      // 0x258(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                            IconTexture;                                       // 0x270(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_AnimalCharacter*                   ThrashAttacker;                                    // 0x278(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                        ThrashableMesh;                                    // 0x280(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_AbilitySystemComponent*            AbilitySystemComponent;                            // 0x288(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E2C[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FThrashGrabPoint>              ThrashGrabPoints;                                  // 0x298(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   NutritionTableRow;                                 // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         AttachedSound;                                     // 0x2B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         GrabbedSound;                                      // 0x2C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         DeathSound;                                        // 0x2C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       WhipShotTrailParticle;                             // 0x2D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnignoreOwnerDuringWhipShot;                      // 0x2D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E31[0xF];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_ThrashableActor* GetDefaultObj();

	void OnDied(class AController* Killer);
	float GetCurrentHealth_Implementation();
	class UME_AbilitySystemComponent* GetAbilitySystemComponent();
};

// 0x120 (0x408 - 0x2E8)
// Class Maneater.ME_AuraDamageActor
class AME_AuraDamageActor : public AME_ThrashableActor
{
public:
	float                                        AuraRadius;                                        // 0x2E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E36[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectClasses;                             // 0x2F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCannotDamageBreachingShark;                       // 0x300(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnlyDamageWalkingSharkIfStandingOnOwner;          // 0x301(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E37[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FExplosionDamageEffects               AuraFX;                                            // 0x308(0x28)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bDebugAura;                                        // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E39[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           StaticMeshVisualizer;                              // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  VisualizerComponent;                               // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       AuraParticle;                                      // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       AuraAboveWaterParticle;                            // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AuraParticleDrawDistance;                          // 0x358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AuraParticleSecondsBeforeInactive;                 // 0x35C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSyncDamageToWaterline;                            // 0x360(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAffectsHumans;                                    // 0x361(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAffectsAnimals;                                   // 0x362(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAffectsBoats;                                     // 0x363(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAffectsPlayerShark;                               // 0x364(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E3F[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AuraParticleSocket;                                // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AuraAboveWaterParticleSocket;                      // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DamagedParticleSystem;                             // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         DamagedSound;                                      // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DestroyedParticleSystem;                           // 0x388(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         DestroyedSound;                                    // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      ParticleVisualizerComponents;                      // 0x398(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E41[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TWeakObjectPtr<class APawn>, struct FAuraStatus> AuraPawnMap;                                       // 0x3B8(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AME_AuraDamageActor* GetDefaultObj();

};

// 0x28 (0x258 - 0x230)
// Class Maneater.ME_BeachgoerEscapePlotter
class AME_BeachgoerEscapePlotter : public ATwAIPatrolPlotter
{
public:
	TSoftObjectPtr<class AMEEscapeVolume>        EscapeVolume;                                      // 0x230(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_BeachgoerEscapePlotter* GetDefaultObj();

};

// 0xF8 (0x318 - 0x220)
// Class Maneater.ME_SpawnPointActor
class AME_SpawnPointActor : public AActor
{
public:
	TArray<struct FVector>                       PristineSpawnPoints;                               // 0x220(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAISpawned;                                       // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpawnerRemoved;                                  // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAlwaysPriority;                                   // 0x250(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRegisterWithManager;                              // 0x251(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E50[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AIDensity;                                         // 0x254(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpawnListEntry>               SpawnLists;                                        // 0x258(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomlySelectSpawnGroup;                         // 0x268(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnRotationType                SpawnRotation;                                     // 0x269(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E52[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FilterDelay;                                       // 0x26C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E53[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESpawnGenerationType              GenerationType;                                    // 0x274(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnProjectionType              ProjectionType;                                    // 0x275(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E55[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HalfExtentX;                                       // 0x278(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfExtentY;                                       // 0x27C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpaceBetween;                                      // 0x280(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumLayers;                                         // 0x284(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LayerSpace;                                        // 0x288(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRings;                                          // 0x28C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDiscardFailedProjections;                         // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E57[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProjectionOffsetZ;                                 // 0x294(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceExtent;                                       // 0x298(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E58[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavigationQueryFilter>    NavigationFilter;                                  // 0x2A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       FilteredSpawnPoints;                               // 0x2A8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E59[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCapsuleComponent*                     CapsuleComponent;                                  // 0x2C8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E5B[0x30];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                ActiveAlerts;                                      // 0x300(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E5C[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_SpawnPointActor* GetDefaultObj();

	void TriggerSpawn(bool bForce);
	class UCapsuleComponent* GetCapsuleComponent();
	bool CanSpawnAI();
};

// 0x50 (0x368 - 0x318)
// Class Maneater.ME_BeachSpawner
class AME_BeachSpawner : public AME_SpawnPointActor
{
public:
	TArray<struct FBeachActivityEntry>           ValidActivities;                                   // 0x318(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBeachActivityEntry>           ShuffledActivities;                                // 0x328(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E5F[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PercentChanceOfFleeing;                            // 0x340(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E60[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class AMEEscapeVolume>> ForcedEscapeVolumes;                               // 0x348(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AMEEscapeVolume>> ExcludedEscapeVolumes;                             // 0x358(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_BeachSpawner* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_BlueprintFunctionLibrary
class UME_BlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UME_BlueprintFunctionLibrary* GetDefaultObj();

	void SetPrimitiveMinDrawDistance(class UPrimitiveComponent* PrimitiveComponent, float MinDrawDistance);
	void SetManeaterDefaultMinLOD(class UStaticMesh* StaticMesh);
	int32 GetTriangleCount(class UStaticMesh* StaticMesh, int32 LODIndex);
	void EnableOutlineRendering();
	void DisableOutlineRendering(float InDuration);
};

// 0x38 (0x780 - 0x748)
// Class Maneater.ME_VehicleAIController
class AME_VehicleAIController : public AME_AIController
{
public:
	class AME_VehiclePawn*                       VehiclePawn;                                       // 0x748(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E6A[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinMaxRange                          PassengerTargetingDelay;                           // 0x760(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_E6B[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_VehicleAIController* GetDefaultObj();

	bool IsThreatUnderVehicle();
};

// 0x68 (0x7E8 - 0x780)
// Class Maneater.ME_BoatAIController
class AME_BoatAIController : public AME_VehicleAIController
{
public:
	class AME_BoatPawn*                          BoatPawn;                                          // 0x780(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E6E[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            AISpawnComplete;                                   // 0x790(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_E6F[0x28];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxAI;                                             // 0x7C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E70[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         SpawnDiversBark;                                   // 0x7D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E71[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_BoatAIController* GetDefaultObj();

	void OnTrackedAIDied(class AME_AIController* KilledAIC);
};

// 0x20 (0x4C0 - 0x4A0)
// Class Maneater.ME_VehicleCollisionComponent
class UME_VehicleCollisionComponent : public UStaticMeshComponent
{
public:
	float                                        LinearVelocitySoftCap;                             // 0x4A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxImpulseSize;                                    // 0x4A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_VehiclePawn*                       VehicleOwner;                                      // 0x4A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AME_OceanPhysicsVolume*                TheWaterVolume;                                    // 0x4B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E74[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_VehicleCollisionComponent* GetDefaultObj();

};

// 0x0 (0x4C0 - 0x4C0)
// Class Maneater.ME_BoatCollisionComponent
class UME_BoatCollisionComponent : public UME_VehicleCollisionComponent
{
public:

	static class UClass* StaticClass();
	static class UME_BoatCollisionComponent* GetDefaultObj();

};

// 0x70 (0x2A0 - 0x230)
// Class Maneater.ME_BoatNameComponent
class UME_BoatNameComponent : public UDecalComponent
{
public:
	struct FBoatNameData                         BoatName;                                          // 0x230(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCanvasRenderTarget2D*                 CanvasRT;                                          // 0x280(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              DecalMID;                                          // 0x288(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E76[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_BoatNameComponent* GetDefaultObj();

};

// 0x8A0 (0xB20 - 0x280)
// Class Maneater.ME_VehiclePawn
class AME_VehiclePawn : public APawn
{
public:
	uint8                                        Pad_ED5[0x60];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EVehicleType                      VehicleType;                                       // 0x2E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_ED6[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               UnderBoatBoxExtent;                                // 0x2E4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UnderBoatBoxOffset;                                // 0x2F0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_ED7[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_VehicleCollisionComponent*         MeshComponent;                                     // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_BuoyancyForceComponent*            BuoyancyComponent;                                 // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasDamageParticleEffect;                          // 0x310(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_ED9[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              DamageParticleComponent;                           // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HitMaskResolution;                                 // 0x320(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EDA[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       MajorDamageParticleSystem;                         // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         MajorDamageSoundStart;                             // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         MajorDamageSoundStop;                              // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       MinorDamageParticleSystem;                         // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         MinorDamageSoundStart;                             // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         MinorDamageSoundStop;                              // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RequiredMassToInterruptCombat;                     // 0x358(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RequiredMassToBreakApart;                          // 0x35C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RequiredImpulseToInterruptCombat;                  // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatInterruptCooldownTime;                       // 0x364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeachedCheckCooldownTime;                          // 0x368(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeachedCheckZScale;                                // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatInterruptDuration;                           // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EDD[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitImpulseLinearScale;                             // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitImpulseMinAngle;                                // 0x384(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitImpulseAngularDrag;                             // 0x388(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitImpulseCooldownTime;                            // 0x38C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                          EngineSoundComponent;                              // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EngineSoundRTPC;                                   // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SinkingSoundRTPC;                                  // 0x3A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SinkingTimerRTPC;                                  // 0x3B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TurningSoundRTPC;                                  // 0x3C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSideProtection;                                   // 0x3D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSinkWhenBeached;                                  // 0x3D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EDF[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RideHeightZTolerance;                              // 0x3DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinkingMassScale;                                  // 0x3E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EE0[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         SinkingSound;                                      // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         SinkingLandSound;                                  // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         SinkingCompleteSound;                              // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         CapsizeSound;                                      // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EE2[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SinkingVFX;                                        // 0x410(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SinkingLandVFX;                                    // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SinkingWaterSurfaceVFX;                            // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinkingParticleZThreshold;                         // 0x428(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EE4[0x14];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_VehicleAIController*               VehicleAIController;                               // 0x440(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  FriendlyName;                                      // 0x448(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        VehicleLevel;                                      // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EE5[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPassengerData>                DefaultPassengers;                                 // 0x468(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVehicleSeat>                  Seats;                                             // 0x478(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPassengers;                                     // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PassengerEjectImpulse;                             // 0x48C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EE7[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FThrashGrabPoint>              ThrashGrabPoints;                                  // 0x498(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   NutritionTableRow;                                 // 0x4A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TMap<class FName, TSubclassOf<class AActor>> VehicleDebris;                                     // 0x4B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FName, class UParticleSystem*>    VehicleDestructionVFX;                             // 0x508(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, class UParticleSystem*>    OnLandVehicleDestructionVFX;                       // 0x558(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         VehicleDestructionSFX;                             // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         OnLandVehicleDestructionSFX;                       // 0x5B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VehicleDestructionNarratorEventName;               // 0x5B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EE9[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UShapeComponent*                       ShapeRootComponent;                                // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSharkRamRotation>             SharkRamLocations;                                 // 0x5D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSharkRamRotation>             UpwardSharkRamLocations;                           // 0x5E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSharkRamRotation>             LandOnBoatLocations;                               // 0x5F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCurveVectorInfo>              WaterLineThresholds;                               // 0x600(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCurveVectorInfo>              UnderwaterThresholds;                              // 0x610(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCurveVectorInfo>              BoatLandingThresholds;                             // 0x620(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpwardForceDotProductThreshold;                    // 0x630(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EED[0x14];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRammed;                                          // 0x648(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnMeshSwapped;                                     // 0x658(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                        SeatChangeRate;                                    // 0x668(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EEE[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPassengerData>                Passengers;                                        // 0x670(0x10)(BlueprintVisible, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraAnim*                           CinematicCameraAnimation;                          // 0x680(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EEF[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HullWaterDepth;                                    // 0x68C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSunk;                                          // 0x690(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBrokenApart;                                   // 0x691(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EF1[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SlamBreakApartVFX;                                 // 0x698(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         BreakApartSound;                                   // 0x6A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         BoatIsDeadSound;                                   // 0x6A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_VehiclePawn*                       DefaultVehicle;                                    // 0x6B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPilotEjected;                                    // 0x6B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_EF4[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterial*                             BaseMasterMaterial;                                // 0x6E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVehicleDamageMaterialPoint>   MaterialDamagePoints;                              // 0x6E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageToHitMaxImpactSize;                          // 0x6F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMaterialDamageSize;                             // 0x6FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSizePerDamage;                                  // 0x700(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSizePerDamage;                                  // 0x704(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombinationDistance;                               // 0x708(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EF5[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleDamageMaterialPoint>   MaterialBloodPoints;                               // 0x710(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMaterialBloodSize;                              // 0x720(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SizePerKill;                                       // 0x724(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BloodCombinationDistance;                          // 0x728(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EF7[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveVector*                          SinkCurve;                                         // 0x730(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SinkSpeed;                                         // 0x738(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SinkRotationModifier;                              // 0x740(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SinkMovementModifier;                              // 0x748(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSinkResistance;                                 // 0x750(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EFC[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxSinkTime;                                       // 0x758(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EFE[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SinkThreshold;                                     // 0x760(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinkWaterlineFudgeFactor;                          // 0x764(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SinkingBoatCracks;                                 // 0x768(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SinkingBoatJets;                                   // 0x770(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SunkBoatWaterRear;                                 // 0x778(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SunkBoatWaterFull;                                 // 0x780(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystemComponent*>      SinkingParticleSystemComponents;                   // 0x788(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              SunkBoatWaterPSCRear;                              // 0x798(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              SunkBoatWaterPSCFull;                              // 0x7A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SinkFXSocketName;                                  // 0x7A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinkEjectInterval;                                 // 0x7B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinkEjectStartTime;                                // 0x7B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PartiallySunkDepth;                                // 0x7B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FullySunkDepth;                                    // 0x7BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageFireParamName;                               // 0x7C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F05[0x1C];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EngineEffectMinorDamageSocketName;                 // 0x7E4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EngineEffectMajorDamageSocketName;                 // 0x7EC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F06[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_VehicleMovementComponent*          VehicleMovement;                                   // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>      DynamicDamageMaterials;                            // 0x800(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F07[0x30];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleDestructionLocation           DestructionMeshSwap;                               // 0x840(0xB8)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVehicleDestructionLocation           DestructionMeshSwapSecondary;                      // 0x8F8(0xB8)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UStaticMesh*                           AllPointsDestroyedSwapoutMesh;                     // 0x9B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F08[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_MercunaObstacleComponent*          MercunaObstacle;                                   // 0x9D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UME_VehicleNavigationComponent*        MercunaNavigation;                                 // 0x9D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_F0C[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_AbilitySystemComponent*            AbilitySystemComponent;                            // 0x9F0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UME_AttributeSet>          AttributeSetClass;                                 // 0x9F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UME_AttributeSet>       CharacterAttributeSet;                             // 0xA00(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            AttributeDefaults;                                 // 0xA08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAbilityInfoStruct>            CharacterAbilities;                                // 0xA10(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F0E[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TerrorizeAmount;                                   // 0xA28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F0F[0x24];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class ATwAIPatrolPlotter>     AIPatrolPlotter;                                   // 0xA50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHunterRank                       HunterRank;                                        // 0xA78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_F10[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         DamageSoundStop;                                   // 0xA80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         DamageAudio;                                       // 0xA88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        FiringRandomTime;                                  // 0xA90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsBossVehicle;                                    // 0xA94(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F12[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBossPhaseInfo>                BossPhaseInfo;                                     // 0xA98(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F13[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentBossPhase;                                  // 0xAC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElapsedBossPhaseTime;                              // 0xAC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F14[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AME_AIController*>              ActiveBossHunters;                                 // 0xAD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_AIController*>              ActiveBossHunterVehicles;                          // 0xAE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SoftLockNarratorEventName;                         // 0xAF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F18[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         LivingDespawnEvent;                                // 0xB00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExemptFromPool;                                   // 0xB08(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F19[0x17];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_VehiclePawn* GetDefaultObj();

	void WallHit(class UPrimitiveComponent* MyComp, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation);
	void Timer_EjectPassenger(int32 PassengerIndex, class AController* EjectInstigator, bool bEjectingAllPassengers);
	void Timer_AbandonPassenger();
	bool Sink(class AController* SinkInstigator);
	void SetPassengerWeapon(int32 PassengerNum, TSubclassOf<class UME_WeaponComponent> NewWeapon);
	void SetPassengerThreatLevel(enum class EAIThreatAlertState NewAlertState, class AActor* InstigatingActor);
	void SetBossPhase(int32 NewPhaseNumber);
	void SetAIPatrolPlotter(class ATwAIPatrolPlotter* InPatrolPlotter);
	bool RockBoat(int32 NewRamVerticalIndex, float RamForce, float RotationOfRam, struct FVector& ForceNormal);
	bool RammedByAnimal(class AME_PlayerSharkCharacter* RammingAnimal, float RamForce);
	void OnVehicleEmptied();
	void OnSink(class AController* SinkInstigator);
	void OnPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OnMeshComponentHit(class UPrimitiveComponent* SelfActor, class AActor* OtherActor, class UPrimitiveComponent* OtherPrimitive, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnKilledBySlamAttack(class AME_PlayerSharkCharacter* PlayerShark);
	void OnGameplayEffectRemoved(struct FActiveGameplayEffect& RemovedGameplayEffect);
	void OnGameplayEffectApplied(class UAbilitySystemComponent* Source, struct FGameplayEffectSpec& SpecApplied, const struct FActiveGameplayEffectHandle& ActiveHandle);
	void OnDamageParticleEffectFinished(class UParticleSystemComponent* PSystem);
	void OnBreakApart(class AController* BreakInstigator);
	void K2_InitEntity();
	bool IsBossVehicle();
	bool IsAbilitySystemComponentSetUp();
	bool HasPilot();
	bool HasAnyWeapons();
	float GetRotationOfLocationAroundBoat(struct FVector& PointLocation);
	class USkeletalMeshComponent* GetPassengerMesh(int32 PassengerIndex);
	class UME_MercunaObstacleComponent* GetMercunaObstacle();
	class UME_MercunaNavigationComponent* GetMercunaNavigation();
	enum class EHunterRank GetHunterRank();
	class ATwAIPatrolPlotter* GetAIPatrolPlotter();
	class UME_AbilitySystemComponent* GetAbilitySystemComponent();
	void FinishBreakApart();
	void EnableBossPhaseTimer(bool bEnabled);
	bool EjectPassenger(int32 PassengerIndex, class AController* EjectInstigator, class AME_HumanCharacter** EjectedPassenger, const struct FVector& EjectImpulse, bool bShouldRagdoll, bool bJumpOff, bool bSpawnController, bool bEjectingAllPassengers);
	void EjectAllPassengers(class AController* EjectInstigator);
	bool BreakApart(class AController* BreakInstigator);
	void BossPhaseChanged(int32 NewPhaseNumber, float PassengerRespawnDelay);
	bool BoardPassenger(class AME_HumanCharacter* NewPassenger);
};

// 0xC0 (0xBE0 - 0xB20)
// Class Maneater.ME_BoatPawn
class AME_BoatPawn : public AME_VehiclePawn
{
public:
	TArray<struct FBoatPropeller>                Propellers;                                        // 0xB20(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_BoatAIController*                  BoatAIController;                                  // 0xB30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBeached;                                          // 0xB38(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F23[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PSCDeactivationSpeed;                              // 0xB3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxThrottlePitchDegrees;                           // 0xB40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThrottlePitchInterpSpeed;                          // 0xB44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxThrottleRollDegrees;                            // 0xB48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThrottleRollInterpSpeed;                           // 0xB4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SurfaceSkimHeightScale;                            // 0xB50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeshZInterpSpeed;                                  // 0xB54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StationaryRockingMagnitude;                        // 0xB58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StationaryRockingSpeed;                            // 0xB5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSinkWhenFlipped;                                  // 0xB60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F26[0x27];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       PropellerPSTemplate;                               // 0xB88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F27[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_OceanSurfaceParticleSystemComponent* SurfacePSCFront;                                   // 0xB98(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanSurfaceParticleSystemComponent* SurfacePSCRear;                                    // 0xBA0(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanSurfaceParticleSystemComponent* SurfacePSCRight;                                   // 0xBA8(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanSurfaceParticleSystemComponent* SurfacePSCLeft;                                    // 0xBB0(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       FrontPSCTemplate;                                  // 0xBB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       RearPSCTemplate;                                   // 0xBC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       RightPSCTemplate;                                  // 0xBC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       LeftPSCTemplate;                                   // 0xBD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinBroadsideFXVelocity;                            // 0xBD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F2B[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_BoatPawn* GetDefaultObj();

	void OnBossCinematicStarted();
};

// 0x18 (0xBF8 - 0xBE0)
// Class Maneater.ME_BoatPawnNoNav
class AME_BoatPawnNoNav : public AME_BoatPawn
{
public:
	class UParticleSystem*                       IdleVFX;                                           // 0xBE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IdleVFXVelocityThreshold;                          // 0xBE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F2C[0xC];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_BoatPawnNoNav* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Maneater.ME_BodyTypeInformation
class UME_BodyTypeInformation : public UDataAsset
{
public:
	TArray<struct FThrashPointThickness>         ThrashJointThickness;                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_BodyTypeInformation* GetDefaultObj();

};

// 0xF8 (0x318 - 0x220)
// Class Maneater.ME_WorldLandmarkActor
class AME_WorldLandmarkActor : public AActor
{
public:
	uint8                                        Pad_F36[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ELandmarkType                     LandmarkType;                                      // 0x230(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELandmarkDiscoveryState           DiscoveryState;                                    // 0x231(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F38[0x3E];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FriendlyName;                                      // 0x270(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  LandmarkDescription;                               // 0x288(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            LandmarkIcon;                                      // 0x2A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            UndiscoveredIcon;                                  // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F39[0x30];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         DiscoveredSound;                                   // 0x2E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class AVolume>                DiscoveryBounds;                                   // 0x2E8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F3B[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_WorldLandmarkActor* GetDefaultObj();

	void SetDiscoveryState(enum class ELandmarkDiscoveryState NewDiscoveryState);
	void ReceivePostInitializeComponents();
	void OnDiscoveryStateChanged(enum class ELandmarkDiscoveryState& NewState);
};

// 0x90 (0x3A8 - 0x318)
// Class Maneater.ME_BossBattleInfo
class AME_BossBattleInfo : public AME_WorldLandmarkActor
{
public:
	TSoftObjectPtr<class AVolume>                BossArenaVolume;                                   // 0x318(0x28)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         BossMusicStartEvent;                               // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         BossMusicStopEvent;                                // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                        BossIntroCinematic;                                // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBountyHunter;                                   // 0x358(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F53[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BountyActivationLevel;                             // 0x35C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBattleFinished;                                   // 0x360(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBossBattleState                  CurrentBattleState;                                // 0x361(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayedIntroCinematic;                             // 0x362(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F55[0x5];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AME_AIController*>              ActiveBosses;                                      // 0x368(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        BattleSpawnedActors;                               // 0x378(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBossBattleEvent;                                 // 0x388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_F56[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_BossBattleInfo* GetDefaultObj();

	void SetBattleState(enum class EBossBattleState NewBattleState);
	void OnIntroCinematicEnd();
	void OnBountyChanged(uint8 NewBountyLevel, class AActor* BountyChangeInstigator);
	void BossBattleEventInternal(class AME_AIController* Boss, enum class EBossBattleEvent EventType);
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_BossInterface
class IME_BossInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_BossInterface* GetDefaultObj();

	class FText GetBossName();
	float GetBossHealthPct();
	TSoftClassPtr<class AME_BossBattleInfo> GetBossBattleInfo();
};

// 0x0 (0x220 - 0x220)
// Class Maneater.ME_BountySpawner
class AME_BountySpawner : public AActor
{
public:

	static class UClass* StaticClass();
	static class AME_BountySpawner* GetDefaultObj();

};

// 0x8 (0x228 - 0x220)
// Class Maneater.ME_BossHunterSpawner
class AME_BossHunterSpawner : public AME_BountySpawner
{
public:
	TSubclassOf<class AME_VehiclePawn>           PreferredBossClass;                                // 0x220(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_BossHunterSpawner* GetDefaultObj();

};

// 0x408 (0x628 - 0x220)
// Class Maneater.ME_BountyManager
class AME_BountyManager : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnBossHunterBoatDied;                              // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBountyBeginning;                                 // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBountyEnding;                                    // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnThreatAdded;                                     // 0x250(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInfamyRankUp;                                    // 0x260(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBountyBossSpawnedDelegate;                       // 0x270(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBountyInfamyPointsChangedDelegate;               // 0x280(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBountyPlacedOnHold;                              // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerDiedWithBountyDelegate;                    // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_FAA[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UMED_BountyManagerTierData*            BountyTierData;                                    // 0x2B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InfamyPointsEarnedPerKill;                         // 0x2C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxInfamyTier;                                     // 0x2C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BountySpawnDistanceMultiple;                       // 0x2C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumActiveDivers;                                // 0x2CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumActiveFlyingBoats;                           // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnZOffsetForFlyingBoats;                        // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSharkWitnessDistance;                           // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeUntilThreatDegrades;                           // 0x2DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThreatDegradationInterval;                         // 0x2E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TimeRecentKillStaysActive;                         // 0x2E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistanceForCinematic;                           // 0x2E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BountyActiveTime;                                  // 0x2EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReturnToSearchDelay;                               // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReinforcementTime;                                 // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RetreatTimeoutTime;                                // 0x2F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceForDespawning;                             // 0x2FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BossKillSlomoRatio;                                // 0x300(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BossKillSlomoDuration;                             // 0x304(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMinMaxRange                          BountySearchingPulsePeriod;                        // 0x308(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FString                                RadioStartName;                                    // 0x310(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RadioReinforcementsName;                           // 0x320(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RadioEndEvadeName;                                 // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RadioEndDeathName;                                 // 0x340(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RadioSearchingStartName;                           // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RadioFoundBoatName;                                // 0x360(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RadioSearchingPulseName;                           // 0x370(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FleeTriggerDistance;                               // 0x380(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FleeBroadcastRadius;                               // 0x384(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpdateFleeTime;                                    // 0x388(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpdateFleeTimeDeviation;                           // 0x38C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumHumansKilled;                                   // 0x390(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlayerInfamyLevel;                                 // 0x394(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_FB2[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InfamyPointsEarned;                                // 0x3A0(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LastBossLevelDefeated;                             // 0x3A4(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_FB4[0x228];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DebugDaveLocation;                                 // 0x5D0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_FB6[0x24];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EWorldRegion                      AssignedRegion;                                    // 0x600(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_FB7[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AME_BountyManager>> OtherManagerClasses;                               // 0x608(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_FB9[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_BountyManager* GetDefaultObj();

	void SetBountyState(enum class EBountyState NewBountyState);
	void OnBossIntroFinished();
	bool IsBountyActive();
	bool IsBossActive();
	int32 GetTierMaxPoints(int32 Tier);
	class AME_VehiclePawn* GetPendingBossVehicle();
	int32 GetNumActiveDivers();
	int32 GetMaxNumActiveDivers();
	int32 GetMaxInfamyTier();
	struct FVector GetLastKillLocation();
	TArray<class AME_AIController*> GetHunterControllers();
	struct FVector GetClosestBoatLocation(struct FVector& SourceLocation, float* Out_DistanceSqr);
	enum class EBountyState GetBountyState();
	class UME_BountyTier* GetBountyDataForTier(int32 Tier);
	struct FVector GetBountyCenter();
	class AME_VehiclePawn* GetBossVehicle();
	void GetActiveBossName(class FText* BossFirstName, class FText* BossLastName);
	void Enable();
	void DialogueCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void CleanUpAndDisable(bool bWaitForSave);
};

// 0x170 (0x198 - 0x28)
// Class Maneater.ME_BountyTier
class UME_BountyTier : public UObject
{
public:
	TSubclassOf<class AME_BoatPawn>              BossBoat;                                          // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AME_BoatPawn>>      SlaveBoatList;                                     // 0x30(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AME_BoatPawn>>      BossSlaveBoatList;                                 // 0x40(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class AME_BoatPawn>, uint32> SlaveBoatCapacityMap;                              // 0x50(0x50)(Edit, NativeAccessSpecifierPublic)
	int32                                        MaxNumActiveSlaveBoats;                            // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumBoatsPerWave;                                   // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumKillsToTrigger;                                 // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumInfamyPointsRequiredForBoss;                    // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   NutritionTableRow;                                 // 0xB0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBountyViewData                       BountyViewData;                                    // 0xC0(0xC0)(Edit, NativeAccessSpecifierPublic)
	class FName                                  StartNarratorEventName;                            // 0x180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FinishNarratorEventName;                           // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RankUpNarratorEventName;                           // 0x190(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_BountyTier* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Maneater.HunterSupportEntry
class UHunterSupportEntry : public UObject
{
public:
	class FText                                  SupportName;                                       // 0x28(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             SupportIcon;                                       // 0x40(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHunterSupportEntry* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class Maneater.ME_BTDecorator_HasValidActivity
class UME_BTDecorator_HasValidActivity : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UME_BTDecorator_HasValidActivity* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.ME_BTTask_PerformAmbientActivity
class UME_BTTask_PerformAmbientActivity : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UME_BTTask_PerformAmbientActivity* GetDefaultObj();

};

// 0xC8 (0x178 - 0xB0)
// Class Maneater.ME_BuoyancyForceComponent
class UME_BuoyancyForceComponent : public UActorComponent
{
public:
	class AME_OceanManager*                      OceanManager;                                      // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshDensity;                                       // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FluidDensity;                                      // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FluidLinearDamping;                                // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FluidAngularDamping;                               // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VelocityDamper;                                    // 0xC8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ClampMaxVelocity;                                  // 0xD4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FC5[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxUnderwaterVelocity;                             // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TestPointRadius;                                   // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       TestPoints;                                        // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ApplyForceToBones;                                 // 0xF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SnapToSurfaceIfNoPhysics;                          // 0xF1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TwoGerstnerIterations;                             // 0xF2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FC7[0x5];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                PointDensityOverride;                              // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStructBoneOverride>           BoneOverride;                                      // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DrawDebugPoints;                                   // 0x118(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableStayUprightConstraint;                       // 0x119(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FCB[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StayUprightStiffness;                              // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StayUprightDamping;                                // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              StayUprightDesiredRotation;                        // 0x124(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                         EnableWaveForces;                                  // 0x130(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FCC[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaveForceMultiplier;                               // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETickingGroup                     TickGroup;                                         // 0x138(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FD0[0x37];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicsConstraintComponent*           ActiveConstraint;                                  // 0x170(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_BuoyancyForceComponent* GetDefaultObj();

	void SetBasePrimitiveComp(class UPrimitiveComponent* PrimComp);
	class UPrimitiveComponent* GetBasePrimitiveComp();
};

// 0x10 (0x240 - 0x230)
// Class Maneater.ME_BuoyantDecoration
class AME_BuoyantDecoration : public AStaticMeshActor
{
public:
	class UME_BuoyancyForceComponent*            BuoyancyComponent;                                 // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FD4[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_BuoyantDecoration* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationBoatStun
class UME_CalculationBoatStun : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationBoatStun* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationGenericDamage
class UME_CalculationGenericDamage : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationGenericDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationElectricDamage
class UME_CalculationElectricDamage : public UME_CalculationGenericDamage
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationElectricDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationExplosiveDamage
class UME_CalculationExplosiveDamage : public UME_CalculationGenericDamage
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationExplosiveDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationHealthCondition
class UME_CalculationHealthCondition : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationHealthCondition* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationSlamDamage
class UME_CalculationSlamDamage : public UME_CalculationGenericDamage
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationSlamDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationStrikeDamage
class UME_CalculationStrikeDamage : public UME_CalculationGenericDamage
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationStrikeDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationTailwhipDamage
class UME_CalculationTailwhipDamage : public UME_CalculationGenericDamage
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationTailwhipDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationThrashDamage
class UME_CalculationThrashDamage : public UME_CalculationGenericDamage
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationThrashDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Maneater.ME_CalculationThrashStruggle
class UME_CalculationThrashStruggle : public UME_CalculationGenericDamage
{
public:

	static class UClass* StaticClass();
	static class UME_CalculationThrashStruggle* GetDefaultObj();

};

// 0x0 (0x110 - 0x110)
// Class Maneater.ME_CameraAnimInst
class UME_CameraAnimInst : public UCameraAnimInst
{
public:

	static class UClass* StaticClass();
	static class UME_CameraAnimInst* GetDefaultObj();

};

// 0x0 (0x7B0 - 0x7B0)
// Class Maneater.ME_CameraComponent
class UME_CameraComponent : public UCameraComponent
{
public:

	static class UClass* StaticClass();
	static class UME_CameraComponent* GetDefaultObj();

};

// 0x30 (0x2B0 - 0x280)
// Class Maneater.ME_CameraSpringArmComponent
class UME_CameraSpringArmComponent : public USpringArmComponent
{
public:
	float                                        ArmLengthBlendInSpeed;                             // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLengthBlendOutSpeed;                            // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderwaterMaxZ;                                    // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AboveWaterMinZ;                                    // 0x28C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerSharkCharacter> SharkOwner;                                        // 0x290(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           CameraLagCurve;                                    // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnforceMinLagBoomLength;                          // 0x2A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FE7[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SavedProbeSize;                                    // 0x2A4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FE8[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_CameraSpringArmComponent* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Maneater.ME_CharacterAbilityHelper
class UME_CharacterAbilityHelper : public UObject
{
public:
	uint8                                        Pad_FF5[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ACharacter>             OwningCharacter;                                   // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UGameplayAbility>       CachedDeathCDO;                                    // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_CharacterAbilityHelper* GetDefaultObj();

	bool TryActivateAbilityForTag(const struct FGameplayTag& GameplayTag, bool bActionModeDependent);
	bool TryActivateAbilityForHandle(const struct FGameplayAbilitySpecHandle& Handle);
	bool IsStumbled();
	int32 GetAbilityIndexFromEnum(enum class EME_CharacterAbility AbilitySlot);
	struct FGameplayAbilitySpecHandle GetAbilityHandleFromEnum(enum class EME_CharacterAbility AbilitySlot);
	void CancelAbilityForHandle(const struct FGameplayAbilitySpecHandle& Handle);
	void CancelAbilityForEnum(enum class EME_CharacterAbility CharacterAbilityEnum);
	bool CanActivateAbilities();
};

// 0x900 (0xB30 - 0x230)
// Class Maneater.ME_CharacterAttributeSet
class UME_CharacterAttributeSet : public UME_AttributeSet
{
public:
	uint8                                        Pad_FF6[0x40];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMEGameplayAttributeData              Stunned;                                           // 0x270(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BiteDamageScale;                                   // 0x290(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BoatBiteDamageScale;                               // 0x2B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              AtomicBlastDamageModifier;                         // 0x2D0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ThrashStruggleScale;                               // 0x2F0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SlamDamageScale;                                   // 0x310(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ThrashDamageScale;                                 // 0x330(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              CriticalDamageScale;                               // 0x350(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ThrashDamagePool;                                  // 0x370(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ThrashRegenerationRate;                            // 0x390(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ThrashHoldPool;                                    // 0x3B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BaseThrashHoldPool;                                // 0x3D0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              TailWhipDamageScale;                               // 0x3F0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              GravityScale;                                      // 0x410(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              WhipShotVelocity;                                  // 0x430(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              WhipShotRange;                                     // 0x450(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              WorldTimeDilationScale;                            // 0x470(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              StunArmor;                                         // 0x490(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              AirLungeForceScale;                                // 0x4B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BaseMoveSpeed;                                     // 0x4D0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              LungeSpeed;                                        // 0x4F0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MaxSpeedLungeT1;                                   // 0x510(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MaxSpeedLungeT2;                                   // 0x530(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MaxSpeedLungeT3;                                   // 0x550(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MaxSpeedSprintT1;                                  // 0x570(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MaxSpeedSprintT2;                                  // 0x590(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MaxSpeedSprintT3;                                  // 0x5B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              EvadeSpeed;                                        // 0x5D0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MaxSwimSpeedScale;                                 // 0x5F0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              FatNutrientModifier;                               // 0x610(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ProteinNutrientModifier;                           // 0x630(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MineralNutrientModifier;                           // 0x650(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MutagenNutrientModifier;                           // 0x670(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              HealthNutrientModifier;                            // 0x690(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              DrownSpeedBase;                                    // 0x6B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              DrownSpeedModifier;                                // 0x6D0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              GenericDamageResistance;                           // 0x6F0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              GenericDamageReduction;                            // 0x710(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BoatDamageBonusModifier;                           // 0x730(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              OnLandSpeedModifier;                               // 0x750(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              MassScale;                                         // 0x770(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              EvolutionAbilityResource;                          // 0x790(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SmashAoEMultiplier;                                // 0x7B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              HighestBreachPosition;                             // 0x7D0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              TailwhipImpulseMultiplier;                         // 0x7F0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              TailwhipDefenseImpulseMultiplier;                  // 0x810(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              RamImpulseMultiplier;                              // 0x830(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SlamEjectChancePct;                                // 0x850(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              LungeCameraBoomMultiplierTier1;                    // 0x870(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              LungeCameraBoomMultiplierTier2;                    // 0x890(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              LungeCameraBoomMultiplierTier3;                    // 0x8B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BioElectricDamageMultiplier;                       // 0x8D0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ProjectileDamageResistance;                        // 0x8F0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ElectricDamageResistance;                          // 0x910(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BoatMovementDisable;                               // 0x930(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              ManeuverabilityMultiplier;                         // 0x950(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              DamageRating;                                      // 0x970(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              DefenseRating;                                     // 0x990(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SpeedRating;                                       // 0x9B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              AITimeDilationScale;                               // 0x9D0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SonarDuration;                                     // 0x9F0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SonarRadius;                                       // 0xA10(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              KnifingMinPitch;                                   // 0xA30(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              KnifingMaxPitch;                                   // 0xA50(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BiteLungeSpeed;                                    // 0xA70(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BiteLungeSpeedNoTarget;                            // 0xA90(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              BiteLungeSpeedOnClose;                             // 0xAB0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              SoftLockTargetRange;                               // 0xAD0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              DangerSense;                                       // 0xAF0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              VulnerabilityThreshold;                            // 0xB10(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_CharacterAttributeSet* GetDefaultObj();

};

// 0x30 (0x460 - 0x430)
// Class Maneater.ME_CharacterCollisionComponent
class UME_CharacterCollisionComponent : public UCapsuleComponent
{
public:
	bool                                         bSimulatePhysicsInWater;                           // 0x430(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1004[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InWaterCapsuleHeightModifier;                      // 0x434(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InWaterCapsuleRadiusModifier;                      // 0x438(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1007[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_Character*                         CharacterOwner;                                    // 0x440(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AME_OceanPhysicsVolume*                TheWaterVolume;                                    // 0x448(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1008[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_CharacterCollisionComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_CharacterFunctionLibrary
class UME_CharacterFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UME_CharacterFunctionLibrary* GetDefaultObj();

	void SetHealthToPercentage(class AME_Character* TwChar, float Percent);
	float GetWalkMoveSpeed(class AME_Character* TwChar);
	float GetSwimMoveSpeed(class AME_Character* TwChar);
	float GetStaminaRegen(class AME_Character* TwChar);
	float GetStaminaMax(class AME_Character* TwChar);
	float GetStamina(class AME_Character* TwChar);
	float GetSizeRatio(class AME_Character* Character1, class AME_Character* Character2);
	enum class ESizeDiff GetSizeDifferential(class AME_Character* Character1, class AME_Character* Character2, float SizeDiffThresholdUp, float SizeDifferentialDown);
	float GetSizeDelta(class AME_Character* TwChar);
	float GetSize(class AME_Character* TwChar);
	float GetMaxAcceleration(class AME_Character* TwChar);
	float GetHealthPercentage(class AME_Character* TwChar);
	float GetHealthMax(class AME_Character* TwChar);
	float GetHealth(class AME_Character* TwChar);
	enum class ECharacterActionMode GetCharacterActionMode(class AME_Character* TwChar);
	class UME_AttributeSet* GetActorDamagableAttributeSet(class AActor* Actor);
};

// 0x50 (0x80 - 0x30)
// Class Maneater.ME_CharacterVoiceData
class UME_CharacterVoiceData : public UDataAsset
{
public:
	TMap<enum class ECharacterVoiceEventType, struct FCharacterVoiceGender> VoiceBindings;                                     // 0x30(0x50)(Edit, EditFixedSize, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_CharacterVoiceData* GetDefaultObj();

};

// 0x28 (0xA0 - 0x78)
// Class Maneater.ME_CheatManager
class UME_CheatManager : public UCheatManager
{
public:
	struct FActiveGameplayEffectHandle           GodEffectHandle;                                   // 0x78(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle           DemiGodEffectHandle;                               // 0x80(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle           OnePunchEffectHandle;                              // 0x88(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle           GottaGoFastEffectHandle;                           // 0x90(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADebugCameraController*                DetachedCameraControllerRef;                       // 0x98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_CheatManager* GetDefaultObj();

	void ToggleCameraAttached();
	void Debug_DumpAI();
	void Debug_DrawProgressBar(class UWorld* World, class AActor* ProgressReferenceActor, float ProgressPercent);
	void Cheat_ValidateEntitlementOwnership();
	void Cheat_UnlockAchievement(class FName& AchievementName);
	void Cheat_TutorialSkipAhead(int32 Index);
	void Cheat_TutorialNextStep();
	void Cheat_TutorialAutoComplete();
	void Cheat_ToggleTODPause();
	void Cheat_ToggleKnifing();
	void Cheat_ToggleAI(enum class EThreeStateSwitch bEnableAI);
	void Cheat_Suicide();
	void Cheat_StoryAdvanceTo(int32 Index);
	void Cheat_SpawnAI(const class FString& AIName, float SpawnOffset);
	void Cheat_SlamDamageEnabled(bool bTurnOn);
	void Cheat_ShowStoryCompleteWidget();
	void Cheat_SetWalkMoveSpeed(float NewWalkSpeed);
	void Cheat_SetTOD(float HourOfDay);
	void Cheat_SetSwimMoveSpeed(float NewSwimSpeed);
	void Cheat_SetSharkMesh(int32 SharkMesh);
	void Cheat_SetMaxAcceleration(float NewMaxAcceleration);
	void Cheat_SetLevel(int32 Level);
	void Cheat_SetKnifingZOffset(float Value);
	void Cheat_SetEvolutionCharge(float ChargeAmount);
	void Cheat_SetCameraZOffset(float Value);
	void Cheat_SetCameraProbeSize(float Value);
	void Cheat_SetCameraComplex(bool bCollideComplex);
	void Cheat_SetCameraArmLength(float Value);
	void Cheat_SetBossPhase(int32 NewPhaseNum);
	void Cheat_ScareAI();
	void Cheat_ResetSpeedCheats();
	void Cheat_ResetObjective(class FName ObjName);
	void Cheat_RemoveUnequippedEvolutions();
	void Cheat_RecheckAllAchievements();
	void Cheat_ProgressObjective(class FName ObjName, int32 Increment);
	void Cheat_PlayStoryCinematic(int32 Index);
	void Cheat_PauseAndSetTOD(float HourOfDay);
	void Cheat_OverrideBoatTurnSound(float Value);
	void Cheat_OnePunch();
	void Cheat_ObjectivesCompleteTickedObjectives();
	void Cheat_ObjectivesCompleteTerrorizeObjectives();
	void Cheat_ObjectivesCompletePopControlObjectives();
	void Cheat_ObjectivesCompleteLandmarkObjectives();
	void Cheat_NextBossPhase();
	void Cheat_LogSpawnEntityStates();
	void Cheat_LogObjectives(enum class EObjectiveType Type, enum class EWorldRegion Region);
	void Cheat_LogAllEvolutionRewardRows();
	void Cheat_LogAIManagementStates();
	void Cheat_KillSchools();
	void Cheat_KillHumans();
	void Cheat_KillDivers();
	void Cheat_KillBoats();
	void Cheat_KillAnimals();
	void Cheat_KillAll();
	void Cheat_HideFromAI();
	void Cheat_HandleLoadError();
	void Cheat_Grow(int32 GrowthChange);
	void Cheat_GrottosUnlock();
	void Cheat_GottaGoFast();
	void Cheat_GiveNutrients(int32 Nutrients, enum class ENutrientType NutrientType);
	void Cheat_GiveEvolutions(int32 Rarity);
	void Cheat_ForceSaveGame();
	void Cheat_ForceReleasePrey();
	void Cheat_FindAllObjectives();
	bool Cheat_FastTravel(int32 RegionIndex);
	void Cheat_EnableTargetLasers(bool bTurnOn);
	void Cheat_EnableAIDebuggingStuff();
	void Cheat_Eject();
	void Cheat_Dismember(int32 GrabPointIdx);
	void Cheat_DiscoverObjectives(enum class EObjectiveType Type, enum class EWorldRegion Region);
	void Cheat_DiscoverAllObjectives();
	void Cheat_DisableTutorial();
	void Cheat_DemiGod();
	void Cheat_DebugGTWaves(int32 GridCount);
	void Cheat_CompleteRegionObjectives(const class FString& RegionName);
	void Cheat_CompleteObjective(class FName ObjName);
	void Cheat_CompleteNextAvailableObjectives(int32 Num);
	void Cheat_ClearAchievementsInSaveGame();
	void Cheat_BreakBoats();
	void Cheat_BountyTriggerBounty();
	void Cheat_BountyTriggerBoss(int32 BossIndex);
	void Cheat_BountySetInfamyLevel(int32 InfamyLevel);
	void Cheat_BountyEndBounty();
	void Cheat_BountyEnableBountySystem();
	void Cheat_BountyDisableBountySystem();
	void Cheat_ApplyTag();
	void Cheat_ApplyNutrientMultiplier(float Multiplier);
	void Cheat_AlertAI(float AlertRadius);
	void Cheat_AIVision(bool bTurnOn);
	void Cheat_AITargeting(bool bTurnOn);
	void Cheat_AdvanceStoryEvent(int32 Amount);
	void Cheat_AdjustWalkMoveSpeed(float WalkMultiplier);
	void Cheat_AdjustSwimMoveSpeed(float SwimMultiplier);
	void Cheat_AdjustMaxAcceleration(float MaxAccelerationMultiplier);
	void Cheat_AbandonVehicle();
	void AudioTrigger(const class FString& Event, int32 ForceMode);
};

// 0x8 (0x788 - 0x780)
// Class Maneater.ME_ChopperAIController
class AME_ChopperAIController : public AME_VehicleAIController
{
public:
	class AME_ChopperPawn*                       ChopperPawn;                                       // 0x780(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_ChopperAIController* GetDefaultObj();

};

// 0x8 (0xB28 - 0xB20)
// Class Maneater.ME_ChopperPawn
class AME_ChopperPawn : public AME_VehiclePawn
{
public:
	class AME_ChopperAIController*               ChopperAIController;                               // 0xB20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_ChopperPawn* GetDefaultObj();

};

// 0x10 (0x2F8 - 0x2E8)
// Class Maneater.ME_CollectableActor
class AME_CollectableActor : public AME_ThrashableActor
{
public:
	bool                                         bAlreadyDestroyed;                                 // 0x2E8(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1089[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_CollectableActor* GetDefaultObj();

};

// 0x80 (0x130 - 0xB0)
// Class Maneater.ME_CombatManager
class UME_CombatManager : public UActorComponent
{
public:
	int32                                        MaxAttackingHunters;                               // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_108A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            AICombatStatusChanged;                             // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bScareCombatWildlife;                              // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_108B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AME_AIController>       CombatLockAI;                                      // 0xCC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_108C[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWildlifeQueueEntry>           CombatQueue;                                       // 0xE8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AME_AIController>> HunterCombatLockAI;                                // 0xF8(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AME_AIController>> HunterCombatQueue;                                 // 0x108(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_108D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_CombatManager* GetDefaultObj();

	bool IsInCombat();
};

// 0x48 (0x80 - 0x38)
// Class Maneater.MEControlSchemes
class UMEControlSchemes : public UDeveloperSettings
{
public:
	struct FMEControlSchemeSaveData              ControlSchemes;                                    // 0x38(0x10)(Edit, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1092[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEControlSchemes* GetDefaultObj();

	TArray<class FText> GetControlSchemes();
	class UMEControlSchemes* GetControlSchemeDefault();
	struct FMEControlScheme GetControlSchemeAtIndex(int32 Idx);
	TArray<struct FAxisBindingSaveData> GetAxisForScheme(struct FMEControlScheme& Scheme);
	TArray<struct FActionBindingSaveData> GetActionsForScheme(struct FMEControlScheme& Scheme);
	void ApplyControlScheme(int32 Idx);
};

// 0x8 (0x750 - 0x748)
// Class Maneater.ME_CreatureSchoolAIController
class AME_CreatureSchoolAIController : public AME_AIController
{
public:
	class AME_CreatureSchoolPawn*                SchoolPawn;                                        // 0x748(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_CreatureSchoolAIController* GetDefaultObj();

};

// 0x0 (0xAE0 - 0xAE0)
// Class Maneater.ME_CreatureSchoolMeshComponent
class UME_CreatureSchoolMeshComponent : public USkeletalMeshComponent
{
public:

	static class UClass* StaticClass();
	static class UME_CreatureSchoolMeshComponent* GetDefaultObj();

};

// 0x18 (0x168 - 0x150)
// Class Maneater.ME_CreatureSchoolMoveComponent
class UME_CreatureSchoolMoveComponent : public UFloatingPawnMovement
{
public:
	int32                                        CurrentFrameSkip;                                  // 0x150(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1096[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_CreatureSchoolPawn*                OwningSchool;                                      // 0x158(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                      SchoolCollision;                                   // 0x160(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_CreatureSchoolMoveComponent* GetDefaultObj();

};

// 0x320 (0x5A0 - 0x280)
// Class Maneater.ME_CreatureSchoolPawn
class AME_CreatureSchoolPawn : public APawn
{
public:
	uint8                                        Pad_109D[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBillboardComponent*                   SpriteComponent;                                   // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayedDestroyTime;                                // 0x2D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_109E[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      SphereCollision;                                   // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_CreatureSchoolMoveComponent*       SchoolMovement;                                    // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SchoolCount;                                       // 0x2F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentSchoolCount;                                // 0x2F4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SchoolCountReductionPerBucket;                     // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentSchoolCountPercentage;                      // 0x2FC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPerFish;                                     // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_109F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_CreatureSchoolAIController*        SchoolAIController;                                // 0x308(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   NutritionTableRow;                                 // 0x310(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FThrashGrabPoint>              ThrashGrabPoints;                                  // 0x320(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSwimSpeed;                                      // 0x330(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSchoolSize;                                     // 0x334(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSchoolSize;                                     // 0x338(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GrowthRate;                                        // 0x33C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShrinkRate;                                        // 0x340(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CautiousStateTime;                                 // 0x344(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10A0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        BaitBallPS;                                        // 0x360(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              BaitBallPSC;                                       // 0x388(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        DispersePS;                                        // 0x390(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       DispersePSLoaded;                                  // 0x3B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OrbitUpdateRate;                                   // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_10A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LocationSizeScalar[0x2];                           // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               FishOrbitRange[0x2];                               // 0x3D0(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               BaseAlertedOrbitSize;                              // 0x3E8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        IntensityScale[0x2];                               // 0x3F4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SwimSpeedScale[0x2];                               // 0x3FC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               AlertedStateOrbitScale[0x2];                       // 0x404(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               FishOrbitRateRange[0x2];                           // 0x41C(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               AlertedStateOrbitRateScale[0x2];                   // 0x434(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DispersionRate;                                    // 0x44C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_10A3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAkAudioEvent>          LoopingSchoolEvent;                                // 0x458(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAkAudioEvent>          LoopingStopEvent;                                  // 0x480(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         LoopingStopEventLoaded;                            // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAkAudioEvent>          DisperseSoundEvent;                                // 0x4B0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         DisperseSoundEventLoaded;                          // 0x4D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                          LoopingAmbientSound;                               // 0x4E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAkAudioEvent>          OverlapEvent;                                      // 0x4E8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         OverlapEventLoaded;                                // 0x510(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                          OverlapBeginSound;                                 // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_10A4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_AbilitySystemComponent*            AbilitySystemComponent;                            // 0x530(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UME_AttributeSet>          AttributeSetClass;                                 // 0x538(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UME_AttributeSet>       CharacterAttributeSet;                             // 0x540(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10A6[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class ATwAIPatrolPlotter>     AIPatrolPlotter;                                   // 0x568(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_10A7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_CreatureSchoolPawn* GetDefaultObj();

	void SetAIPatrolPlotter(class ATwAIPatrolPlotter* InPatrolPlotter);
	void OnGameplayEffectRemoved(struct FActiveGameplayEffect& RemovedGameplayEffect);
	bool IsAbilitySystemComponentSetUp();
	class ATwAIPatrolPlotter* GetAIPatrolPlotter();
	class UME_AbilitySystemComponent* GetAbilitySystemComponent();
};

// 0x8 (0x48 - 0x40)
// Class Maneater.ME_DamageType
class UME_DamageType : public UDamageType
{
public:
	enum class EPhysicalSurface                  DamageSurfaceType;                                 // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAppliesTag;                                       // 0x41(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectsHitMask;                                   // 0x42(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10A8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitMaskSize;                                       // 0x44(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_DamageType* GetDefaultObj();

};

// 0x0 (0x678 - 0x678)
// Class Maneater.ME_DebugCameraController
class AME_DebugCameraController : public ADebugCameraController
{
public:

	static class UClass* StaticClass();
	static class AME_DebugCameraController* GetDefaultObj();

};

// 0x170 (0x3A8 - 0x238)
// Class Maneater.ME_DestructibleActor
class AME_DestructibleActor : public ADestructibleActor
{
public:
	uint8                                        Pad_10B4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsActive;                                         // 0x248(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHitDeformation>               ActiveHitDeformations;                             // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxHitDeformations;                                // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         DamagedSound;                                      // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DamagedInvincibleParticle;                         // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         DamagedInvincibleSound;                            // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         BrokenSound;                                       // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HitMaskResolution;                                 // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBreakableStrength                Strength;                                          // 0x28C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerGrowthStage                RequiredSizeToDamage;                              // 0x28D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10B7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_AbilitySystemComponent*            AbilitySystemComponent;                            // 0x290(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FChunkBreakEffect                     ChunkBreakEffects;                                 // 0x298(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FChunkBreakEffect                     DestructionEffects;                                // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ChunkScaleWhenFractured;                           // 0x2B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyImpulseOnBreak;                              // 0x2BC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRadialImpulse;                                    // 0x2BD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10B9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FractureImpulseRadius;                             // 0x2C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FractureImpulseScalar;                             // 0x2C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExplosionImmunity;                                // 0x2C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10BA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinHitImpulse;                                     // 0x2CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   NutritionTableRow;                                 // 0x2D0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	enum class EObjectiveType                    RelatedObjectiveType;                              // 0x2E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10BB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_DistanceSignificanceComponent*     DistanceSignificanceComponent;                     // 0x2E8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           GameplayEffectOnDestroyed;                         // 0x2F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  FriendlyName;                                      // 0x2F8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bAlreadyDestroyed;                                 // 0x310(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyedPermanently;                             // 0x311(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10BE[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EBreakableStrength, struct FStartingAttributes> AttributeDefaults;                                 // 0x320(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        DistanceVisible;                                   // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAffectsOctreePathing;                             // 0x378(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EUpdateOctreeType                 UpdateOctreeType;                                  // 0x379(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10C0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AMercunaNavModifierVolume> ModifierVolume;                                    // 0x380(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AME_DestructibleActor* GetDefaultObj();

	void UpdateOctree(bool bAffectsNavigation);
	void PostRenderForBP();
	void PlayerDamagedBreakable(float DamageAmount);
	void OnComponentFractured(struct FVector& HitPoint, struct FVector& HitDirection);
	bool IsDestroyed();
	float GetCurrentHealth_Implementation();
	bool CanDamageBreakable(class AActor* DamageCauser);
};

// 0x78 (0x7A0 - 0x728)
// Class Maneater.ME_DestructibleComponent
class UME_DestructibleComponent : public UDestructibleComponent
{
public:
	float                                        ChunkDensity;                                      // 0x728(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FluidDensity;                                      // 0x72C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FluidLinearDamping;                                // 0x730(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FluidAngularDamping;                               // 0x734(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VelocityDamper;                                    // 0x738(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ClampMaxVelocity;                                  // 0x744(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10C1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxUnderwaterVelocity;                             // 0x748(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TestPointRadius;                                   // 0x74C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DrawDebugPoints;                                   // 0x750(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableWaveForces;                                  // 0x751(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10C3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaveForceMultiplier;                               // 0x754(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChunkSleepThreshold;                               // 0x758(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChunkStabilizationThreshold;                       // 0x75C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetingOffset;                                   // 0x760(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10C5[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_OceanManager*                      OceanManager;                                      // 0x778(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10C6[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_DestructibleComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_DialogueFunctionLibrary
class UME_DialogueFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UME_DialogueFunctionLibrary* GetDefaultObj();

	int32 TwPlaySubtitledAkEvent(class FString* EventName, class AActor* Actor, class UDataTable* SearchTable);
	bool TwPlayDialogueAkEvent(class UDataTable* SearchTable, class UAkAudioEvent* AkEvent, class AActor* Actor);
	bool PlayDialogueFile(struct FDataTableRowHandle& DialogueToPlay, class AActor* WorldContext);
	bool PlayDialogueAkEvent(struct FDataTableRowHandle& DialogueToPlay, class UAkAudioEvent* AkEvent, class AActor* Actor);
};

// 0x128 (0x150 - 0x28)
// Class Maneater.ME_DialogueSystem
class UME_DialogueSystem : public UObject
{
public:
	uint8                                        Pad_10D9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           OnDialogueAkEvent;                                 // 0x30(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnDynamicDialogueAkEvent;                          // 0x40(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnSequencerAkEvent;                                // 0x50(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioBank*                          ExternalSoundBank;                                 // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10DA[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAudioDialogueMapping>         AudioDialogueRowMappings;                          // 0xE0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_10DB[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_DialogueSystem* GetDefaultObj();

	int32 ShowSubtitle(class FText& DialogueText, float Duration, float TimeSeconds);
	void SequencerDialogueCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void PostDynamicDialogue(class FName* DialogueEventName, class AActor* Speaker, TArray<class FString>* ArgumentValueNames);
	void PlayExternalDialogueFile(class FName* EventName, class FString* Filename, class AActor* WorldContext, bool ShowSubtitle, class FText& DialogueText);
	void InitDialogueSystem(class AME_GameMode* OwningGameMode);
	FMulticastInlineDelegateProperty_ GetOnDialogueSystemCallbackDelegate();
	void EndStateCooldown(class FName StateName);
	void DynamicDialogueCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void DialogueCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void AddAudioDialogueMapping(int32 AkPlayingId, class FText& DialogueText, float TimeSeconds);
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_SignificanceHandlerInterface
class IME_SignificanceHandlerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_SignificanceHandlerInterface* GetDefaultObj();

	void HandleSignificanceChange(bool bIsSignificant);
};

// 0x18 (0xC8 - 0xB0)
// Class Maneater.ME_DistanceSignificanceComponent
class UME_DistanceSignificanceComponent : public UActorComponent
{
public:
	float                                        SignificantDistance;                               // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10DD[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_DistanceSignificanceComponent* GetDefaultObj();

	void HandleSignificanceChange(bool bIsSignificant);
};

// 0x60 (0x90 - 0x30)
// Class Maneater.ME_DiverAttachmentAnimSet
class UME_DiverAttachmentAnimSet : public UDataAsset
{
public:
	TArray<class UAnimSequence*>                 IdleAnimations;                                    // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 SuspiciousAnimations;                              // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 AlertAnimations;                                   // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                 MovingAnimations;                                  // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBlendSpace*>                   MovingAlertAnimations;                             // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  FiringAnimations;                                  // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_DiverAttachmentAnimSet* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_EnvQueryContext_PlayerSharkActor
class UME_EnvQueryContext_PlayerSharkActor : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UME_EnvQueryContext_PlayerSharkActor* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class Maneater.ME_EnvQueryGenerator_ActivityPoints
class UME_EnvQueryGenerator_ActivityPoints : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          QueryContext;                                      // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_EnvQueryGenerator_ActivityPoints* GetDefaultObj();

};

// 0xA8 (0x390 - 0x2E8)
// Class Maneater.ME_ExplodingBarrelBase
class AME_ExplodingBarrelBase : public AME_ThrashableActor
{
public:
	uint8                                        Pad_10E0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBarrelExplodedEvent;                             // 0x2F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCountDownDelegate;                               // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        ExplodeOnImpactMinVelocity;                        // 0x310(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionCountdownTime;                            // 0x314(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BittenExplosionCountdownTime;                      // 0x318(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ExplosionActorClass;                               // 0x320(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_BuoyancyForceComponent*            BuoyancyComponent;                                 // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCauseFluidDisturbance;                            // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaterSplashMinSpeed;                               // 0x334(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       WaterSplashParticle;                               // 0x338(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         WaterSplashAudio;                                  // 0x340(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         WhipshotImpactSound;                               // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10E3[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationSpeed;                                     // 0x380(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SinkDelay;                                         // 0x384(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SinkingDensityMultiplier;                          // 0x388(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10E4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_ExplodingBarrelBase* GetDefaultObj();

	void Explode();
};

// 0xB0 (0x2D0 - 0x220)
// Class Maneater.ME_ExplosionActor
class AME_ExplosionActor : public AActor
{
public:
	TArray<class AActor*>                        IgnoreActors;                                      // 0x220(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExplosionParticlesSpawnAttached;                  // 0x230(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceWaterlineFX;                                 // 0x231(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreDistanceToSurfaceForFX;                     // 0x232(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10E5[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ExplosionParticle_AboveWater;                      // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ExplosionParticle_AtWaterline;                     // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ExplosionParticle_Shallow;                         // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ExplosionParticle_Deep;                            // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10E6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         SoundEffectStart;                                  // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         SoundEffectStop;                                   // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectItem>           GameplayEffectItems;                               // 0x278(0x10)(Edit, ExportObject, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAttribute>            ExplosionRadiusModifiers;                          // 0x288(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactMomentum;                                    // 0x298(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayAttribute>            ImpactMomentumModifiers;                           // 0x2A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkAudioComponent;                                  // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNavModifierComponent*                 NavModifier;                                       // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanOnlyHitOneHuman;                                // 0x2C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10E9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplosionRadius;                                   // 0x2C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AtWaterLineVFXRadius;                              // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10EA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_ExplosionActor* GetDefaultObj();

	float GetExplosionRadius();
};

// 0x10 (0x288 - 0x278)
// Class Maneater.ME_FogOverrideVolume
class AME_FogOverrideVolume : public ATriggerVolume
{
public:
	uint8                                        Pad_10EC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFogState                         FogStateOverride;                                  // 0x280(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10ED[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_FogOverrideVolume* GetDefaultObj();

	void ActorOverlapped(class AActor* OverlappedActor, class AActor* OtherActor);
	void ActorEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
};

// 0x0 (0xE30 - 0xE30)
// Class Maneater.MEGameEngine
class UMEGameEngine : public UGameEngine
{
public:

	static class UClass* StaticClass();
	static class UMEGameEngine* GetDefaultObj();

};

// 0x3A0 (0x538 - 0x198)
// Class Maneater.ME_GameInstance
class UME_GameInstance : public UGameInstance
{
public:
	uint8                                        Pad_10F9[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            NarratorCueTable;                                  // 0x1D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DLC1NarratorCueTable;                              // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10FB[0x148];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDLCEntitlementStatusInitialized;                 // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDLCEntitlementStatusChanged;                     // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UME_SaveGameObject*                    SaveGameInstance;                                  // 0x350(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10FF[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActiveLocalUserIdx;                                // 0x364(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1100[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_SaveProfileObject*                 ProfileSaveInstance;                               // 0x378(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1101[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UTwLoadingScreen>          LoadingScreenWidget;                               // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1102[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ManeaterBaseGameProductId;                         // 0x3E0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ManeaterTigerSharkSkinProductId;                   // 0x3F0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ManeaterDLC01OfferId;                              // 0x400(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ManeaterDLC01ProductId;                            // 0x410(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1103[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        LoadingMovies;                                     // 0x438(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1104[0x88];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FReconcileAchievementParams>   ReconcileAchievementsParams;                       // 0x4D0(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1105[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameInstance* GetDefaultObj();

	void UpdateFoliageShadowMaterialParametersCallback();
	void TriggerNarratorEventEx();
	int32 TriggerNarratorEvent(class FName Name, class UObject* WorldContextObject);
	void StreamContentAtLocationForCinematic(const struct FVector& Location, float Duration);
	void SetSelectedSaveSlot(int32 LocalUserIdx, int32 Slot);
	int32 GetSelectedSaveSlot(int32 LocalUserIdx);
	class UDataTable* GetCurrentNarratorCueTable();
	void FlushPendingSaveObjects();
	void DisableLevelStreaming(bool bDisable, class UObject* WorldContextObject);
	void Cheat_LogSaveGameObjectRecordsForSlot(int32 SlotIndex);
	void Cheat_LogSaveGameObjectRecords();
	void Cheat_LogNarratorTableDiff();
};

// 0x3F8 (0x700 - 0x308)
// Class Maneater.ME_GameMode
class AME_GameMode : public AGameMode
{
public:
	uint8                                        Pad_1124[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStoryCinematicDataRow                StoryCinematicData;                                // 0x310(0x90)(NativeAccessSpecifierPublic)
	class ALevelSequenceActor*                   CurrentCinematicSequenceActor;                     // 0x3A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1125[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            StoryCinematicsDataTable;                          // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCinematicLoaded;                                 // 0x3B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCinematicStarted;                                // 0x3C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCinematicFinished;                               // 0x3D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCinematicCleanedUp;                              // 0x3E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1126[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBaseGameEndingFinished;                          // 0x420(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1127[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnLoadingScreenStateChanged;                       // 0x450(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPostLoadingScreenShowing;                        // 0x460(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPreLoadingScreenRemoving;                        // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPostLoadingScreenRemoved;                        // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AME_BossBattleInfo*                    CurrentBossFight;                                  // 0x490(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerPawnStatusChanged;                         // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBountyLevelIncrease;                             // 0x4A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBountyIncrease;                                  // 0x4B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAnyCharacterDied;                                // 0x4C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGrottoLocationEntered;                           // 0x4D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGrottoLocationExited;                            // 0x4E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        BountyAmount;                                      // 0x4F8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBountyDollarValue;                              // 0x4FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFirstPlay;                                        // 0x500(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDesiresPrologue;                                  // 0x501(0x1)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1129[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStoryUpdated;                                    // 0x508(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FWorldRegionState>             RegionStates;                                      // 0x518(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BountyLevel;                                       // 0x528(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_112A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           BountyLevelCurve;                                  // 0x530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_NutrientCache*>             AllNutrientCaches;                                 // 0x538(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldLandmarkActor*>        AllLandmarks;                                      // 0x548(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldLandmarkActor*>        AllGrottos;                                        // 0x558(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_DestructibleActor*>         AllBreakables;                                     // 0x568(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldLandmarkActor*>        AllBeaches;                                        // 0x578(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldLandmarkActor*>        AllWhales;                                         // 0x588(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AME_WorldRegionVolume*>         AllRegionVolumes;                                  // 0x598(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnedAIThisFrame;                               // 0x5A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFastTraveling;                                  // 0x5A9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_112B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastFastTravelTime;                                // 0x5AC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULevelStreamingTwDistance*>     SubLevelsForFastTravel;                            // 0x5B0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DefaultSubtitleDialogTable;                        // 0x5C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_112C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_SpawnPool*                         SpawnPool;                                         // 0x5E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AME_SpawnManager>          SpawnManagerClass;                                 // 0x5F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AME_BountyManager>         ME_BountyManagerClass;                             // 0x5F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_BountyManager*                     ME_BountyManager;                                  // 0x600(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class AME_Grotto>>     Grottos;                                           // 0x608(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AME_Grotto>>     GameRunTimeGrottos;                                // 0x618(0x10)(ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class AMED_Teleporter>> Teleporters;                                       // 0x628(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AMED_Teleporter>> GameRunTimeTeleporters;                            // 0x638(0x10)(ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnHumanEscaped;                                    // 0x648(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AME_PlayerObjectiveManager> ME_PlayerObjectiveManagerClass;                    // 0x658(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_PlayerObjectiveManager*            ME_PlayerObjectiveManager;                         // 0x660(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AME_TutorialManager>       ME_TutorialManagerClass;                           // 0x668(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_TutorialManager*                   ME_TutorialManager;                                // 0x670(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AME_AIDirector>            AIDirectorClass;                                   // 0x678(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_AIDirector*                        AIDirector;                                        // 0x680(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AME_AssetLoader>           ME_AssetLoaderClass;                               // 0x688(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_AssetLoader*                       ME_AssetLoader;                                    // 0x690(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AME_SonarManager>          ME_SonarManagerClass;                              // 0x698(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_SonarManager*                      ME_SonarManager;                                   // 0x6A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsWaterPoisoned;                                  // 0x6A8(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_112E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_TimeofDayInfo*                     TimeOfDayTracker;                                  // 0x6B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTimeOfDayTrackerCreated;                         // 0x6B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AME_TimeofDayInfo>         TimeOfDayInfoClass;                                // 0x6C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_DialogueSystem*                    ME_DialogueSystem;                                 // 0x6D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioBank*                          ExternalSourcesBank;                               // 0x6D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioBank*                          DynamicDialogueSoundBank;                          // 0x6E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1130[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AMED_DLCManager*                       MED_DLCManager;                                    // 0x6F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1131[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_GameMode* GetDefaultObj();

	void SuppressNextAudioPause(class UObject* WorldContextObject);
	void StartStoryCinematicSequence(class FName CinematicsDataTableRowName);
	void StartCinematic();
	void ShowLoadingScreen(const struct FVector& DistanceStreamLocation, class FName RequiredLevelName);
	bool ShouldWaterBePoisonedForStoryIndex(int32 StoryIndex);
	void SetWaterPoisoned(bool bPoisoned);
	void SetNoCameraFadeIn(bool SetTo);
	void SetLeaveOnBlackScreen(bool SetTo);
	void SetAutoReEnableControls(bool UseAutoReEnable);
	void SetAutoFadeIn(bool UseAutoFadeIn, const struct FLinearColor& CameraStartingColor, float BlendTime, float BlendDelay);
	void RespawnPlayer();
	void RequestTravelToLocation(const struct FVector& Location, const struct FRotator& Rotation, class AME_PlayerSharkCharacter* PlayerSharkCharacter, bool bSkipLoadScreen, bool bSetCameraRotation);
	void RemoveLoadingScreen();
	void PlayCinematicPauseAllEvent();
	void PauseSunPosition(bool bPause);
	void OnHuntCommanderEjected(class AController* EjectInstigator, class AME_HumanCharacter* Pilot);
	void OnCinematicCameraCut(class UCameraComponent* CameraComponent);
	void OnActorSpawned(class AActor* InActor);
	void LoadCinematic();
	bool IsWaterPoisoned();
	void HandleStoryCompletePopupDismissed();
	void HandleEndOfGameScoreScreen();
	class AME_TutorialManager* GetTutorialManager();
	class AME_SonarManager* GetSonarManager();
	TArray<struct FWorldRegionState> GetRegionStates();
	bool GetRegionState(int32 RegionIndex, struct FWorldRegionState* State);
	int32 GetRegionPopulation(int32 RegionIndex);
	class AME_PlayerObjectiveManager* GetPlayerObjectiveManager();
	class AMED_DLCManager* GetDLCManager();
	class UME_DialogueSystem* GetDialogueSystem();
	class AME_BountyManager* GetBountyManager();
	class AME_AssetLoader* GetAssetLoader();
	class AME_AIDirector* GetAIDirector();
	void EnableCinematicMode();
	void DisableCinematicMode();
	void CleanupCinematic();
	void CinematicLoaded();
	void CinematicFinishedStartPlaying();
	void CinematicFinished();
};

// 0x38 (0x438 - 0x400)
// Class Maneater.ME_GameplayAbility
class UME_GameplayAbility : public UGameplayAbility
{
public:
	float                                        CombatPriority;                                    // 0x400(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1133[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayAbility>>  AbilitiesCancelOnActivate;                         // 0x408(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bClearAbilityTagsOnEnd : 1;                        // Mask: 0x1, PropSize: 0x10x418(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_AA : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1134[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AME_Character>          OwningCharacter;                                   // 0x41C(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEvolutionAbility;                                 // 0x424(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEvolutionSetType                 EvolutionSetType;                                  // 0x425(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1135[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EvolutionAbilityChargedAudioEventName;             // 0x428(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSonarAbility;                                     // 0x430(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceReleasePrey;                                 // 0x431(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1136[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameplayAbility* GetDefaultObj();

};

// 0x1A8 (0x5E0 - 0x438)
// Class Maneater.ME_GameplayAbility_Montage
class UME_GameplayAbility_Montage : public UME_GameplayAbility
{
public:
	uint8                                        Pad_1138[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          MontageToPlay;                                     // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayRate;                                          // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SectionName;                                       // 0x44C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldStopMovement : 1;                           // Mask: 0x1, PropSize: 0x10x454(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_AB : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1139[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEndAbilityOnInputRelease;                         // 0x458(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_113A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bShouldStopRotation : 1;                           // Mask: 0x1, PropSize: 0x10x45C(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_AC : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_113B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisableInputTime;                                  // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMomentumForce                        MomentumToApply;                                   // 0x464(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMomentumForce                        MomentumToApplyWhileAnimating;                     // 0x494(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               RootMotionScale;                                   // 0x4C4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   HitEffectClasses;                                  // 0x4D0(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_113E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSimulateInputPress;                               // 0x4E1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1140[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectClassesWhileAnimating;               // 0x4E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectClassesAppliedOnActivation;          // 0x4F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1141[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldForceStopMontage;                           // 0x510(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1142[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bTakesPriorityOverOtherMontages : 1;               // Mask: 0x1, PropSize: 0x10x514(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_AD : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1143[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bStopMontageOnExitWater;                           // 0x518(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSwitchToFlying;                                   // 0x519(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1144[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          PlayingMontage;                                    // 0x520(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1145[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttachedAudioEvent                   AbilityActivationSound;                            // 0x530(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttachedAudioEvent                   AbilityEndedSound;                                 // 0x540(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1146[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraAnim*                           CamAnim;                                           // 0x580(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FStageSpecificCamera>          GrowthStageCameraAnims;                            // 0x588(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1147[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CamRate;                                           // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CamBlendInTime;                                    // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CamBlendOutTime;                                   // 0x5B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CamScale;                                          // 0x5B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldTimeoutMontage;                             // 0x5B8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStopMovementWhenUsed;                             // 0x5B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1148[0x26];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameplayAbility_Montage* GetDefaultObj();

	void MontageStarted(class UAnimMontage* Montage);
	void MontageEnded(class UAnimMontage* Montage, bool bInterrupted);
};

// 0xC8 (0x6A8 - 0x5E0)
// Class Maneater.ME_GameplayAbility_DirectionalMontage
class UME_GameplayAbility_DirectionalMontage : public UME_GameplayAbility_Montage
{
public:
	uint8                                        bUseEightDirectionalAnims : 1;                     // Mask: 0x1, PropSize: 0x10x5E0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_AE : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_114A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDirectionalAnimData                  Anim_FORWARD;                                      // 0x5E8(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                  Anim_BACKWARD;                                     // 0x600(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                  Anim_LEFT;                                         // 0x618(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                  Anim_RIGHT;                                        // 0x630(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                  Anim_FORWARD_LEFT;                                 // 0x648(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                  Anim_FORWARD_RIGHT;                                // 0x660(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                  Anim_BACKWARD_LEFT;                                // 0x678(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDirectionalAnimData                  Anim_BACKWARD_RIGHT;                               // 0x690(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_GameplayAbility_DirectionalMontage* GetDefaultObj();

};

// 0x58 (0x638 - 0x5E0)
// Class Maneater.ME_GameplayAbility_KillSequence
class UME_GameplayAbility_KillSequence : public UME_GameplayAbility_Montage
{
public:
	uint8                                        Pad_114C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPlayerGrowthStage, struct FGrowthStageSequences> GrowthInfo;                                        // 0x5E8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_GameplayAbility_KillSequence* GetDefaultObj();

};

// 0x40 (0x620 - 0x5E0)
// Class Maneater.ME_GameplayAbilitySharkMontage
class UME_GameplayAbilitySharkMontage : public UME_GameplayAbility_Montage
{
public:
	bool                                         AsyncLoadComplete;                                 // 0x5E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_114E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGrowthStageContainer                 MontageData;                                       // 0x5E8(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_114F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGrowthStageContainer                 CurrentData;                                       // 0x608(0x18)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_GameplayAbilitySharkMontage* GetDefaultObj();

};

// 0x18 (0x638 - 0x620)
// Class Maneater.ME_GameplayAbility_LandLunge
class UME_GameplayAbility_LandLunge : public UME_GameplayAbilitySharkMontage
{
public:
	float                                        DefaultZVelocity;                                  // 0x620(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1151[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCustomGrowthStage>            CustomStageSettings;                               // 0x628(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_GameplayAbility_LandLunge* GetDefaultObj();

};

// 0x28 (0x608 - 0x5E0)
// Class Maneater.ME_GameplayAbility_Loop
class UME_GameplayAbility_Loop : public UME_GameplayAbility_Montage
{
public:
	float                                        LoopDuration;                                      // 0x5E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WakeUpSectionName;                                 // 0x5E4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1152[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameplayAbility_Loop* GetDefaultObj();

};

// 0xA8 (0x4E0 - 0x438)
// Class Maneater.ME_GameplayAbility_MontageSequence
class UME_GameplayAbility_MontageSequence : public UME_GameplayAbility
{
public:
	uint8                                        Pad_1158[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMontageInstance*>              MontageSequence;                                   // 0x440(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectClassesAppliedOnActivation;          // 0x450(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldForceStopMontage;                           // 0x460(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1159[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bTakesPriorityOverOtherMontages : 1;               // Mask: 0x1, PropSize: 0x10x464(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_AF : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_115A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          PlayingMontage;                                    // 0x468(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttachedAudioEvent                   AbilityActivationSound;                            // 0x470(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttachedAudioEvent                   AbilityEndedSound;                                 // 0x480(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_115B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldTimeoutMontage;                             // 0x498(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_115D[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDefaultStopMovement;                              // 0x4A4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDefaultStopRotation;                              // 0x4A5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_115E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMontageInstance*>              DefaultMontageSequence;                            // 0x4A8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_115F[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameplayAbility_MontageSequence* GetDefaultObj();

	void MontageStarted(class UAnimMontage* Montage);
	void MontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	class UMontageInstance* GetMontageInstanceByIndex(int32 Index);
	int32 GetCurrentMontageInstance(class UMontageInstance** Out_MontageInstance);
	int32 GetCurrentMontageIndex();
};

// 0x20 (0x458 - 0x438)
// Class Maneater.ME_GameplayAbility_Projectiles
class UME_GameplayAbility_Projectiles : public UME_GameplayAbility
{
public:
	TSubclassOf<class AActor>                    ProjectileType;                                    // 0x438(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumProjectiles;                                    // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spread;                                            // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketSpawn;                                       // 0x448(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoAimProjectile;                                // 0x450(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1161[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoAimDOT;                                        // 0x454(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_GameplayAbility_Projectiles* GetDefaultObj();

};

// 0x18 (0x638 - 0x620)
// Class Maneater.ME_GameplayAbility_SharkAirLunge
class UME_GameplayAbility_SharkAirLunge : public UME_GameplayAbilitySharkMontage
{
public:
	float                                        LungeSpeed;                                        // 0x620(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1163[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           NoGravityEffect;                                   // 0x628(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyLungeSpeedToZ;                               // 0x630(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1164[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameplayAbility_SharkAirLunge* GetDefaultObj();

};

// 0x0 (0x620 - 0x620)
// Class Maneater.ME_GameplayAbility_SharkEvade
class UME_GameplayAbility_SharkEvade : public UME_GameplayAbilitySharkMontage
{
public:

	static class UClass* StaticClass();
	static class UME_GameplayAbility_SharkEvade* GetDefaultObj();

};

// 0x10 (0x448 - 0x438)
// Class Maneater.ME_GameplayAbility_SlowWorld
class UME_GameplayAbility_SlowWorld : public UME_GameplayAbility
{
public:
	float                                        TimeDilation;                                      // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeDilationDuration;                              // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectsShark;                                     // 0x440(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectsCamera;                                    // 0x441(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1166[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameplayAbility_SlowWorld* GetDefaultObj();

};

// 0x0 (0x438 - 0x438)
// Class Maneater.ME_GameplayAbility_Sonar
class UME_GameplayAbility_Sonar : public UME_GameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UME_GameplayAbility_Sonar* GetDefaultObj();

};

// 0x10 (0x448 - 0x438)
// Class Maneater.ME_GameplayAbility_ThrashEscape
class UME_GameplayAbility_ThrashEscape : public UME_GameplayAbility
{
public:
	TWeakObjectPtr<class AME_AnimalCharacter>    OwningAnimalCharacter;                             // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UME_GameplayEffect>        GameplayEffect;                                    // 0x440(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_GameplayAbility_ThrashEscape* GetDefaultObj();

};

// 0x148 (0x580 - 0x438)
// Class Maneater.ME_GameplayAbility_WildlifeDirectionalLunge
class UME_GameplayAbility_WildlifeDirectionalLunge : public UME_GameplayAbility
{
public:
	uint8                                        Pad_1168[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDirectionalLunges                    DirectionalLunges;                                 // 0x470(0x40)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        PlayRate;                                          // 0x4B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SectionName;                                       // 0x4B4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldStopMovement : 1;                           // Mask: 0x1, PropSize: 0x10x4BC(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldStopRotation : 1;                           // Mask: 0x2, PropSize: 0x10x4BC(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_B0 : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1169[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RootMotionScale;                                   // 0x4C0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_116A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   HitEffectClasses;                                  // 0x4D0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectClassesWhileAnimating;               // 0x4E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectClassesAppliedOnActivation;          // 0x4F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldForceStopMontage;                           // 0x500(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_116B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bTakesPriorityOverOtherMontages : 1;               // Mask: 0x1, PropSize: 0x10x504(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_B1 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_116C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSwitchToFlying;                                   // 0x508(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_116D[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMomentumForce                        MomentumToApply;                                   // 0x514(0x30)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FMomentumForce                        MomentumToApplyWhileAnimating;                     // 0x544(0x30)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_116E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          PlayingMontage;                                    // 0x578(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_GameplayAbility_WildlifeDirectionalLunge* GetDefaultObj();

	void MontageStarted(class UAnimMontage* Montage);
	void MontageEnded(class UAnimMontage* Montage, bool bInterrupted);
};

// 0x38 (0x518 - 0x4E0)
// Class Maneater.ME_GameplayAbility_WildlifeLunge
class UME_GameplayAbility_WildlifeLunge : public UME_GameplayAbility_MontageSequence
{
public:
	class UAkAudioEvent*                         LungeMissAudioEvent;                               // 0x4E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                IntendedActorTarget;                               // 0x4E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialDirectionDot;                               // 0x4F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1170[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GameplayAbility_WildlifeLunge* GetDefaultObj();

	void CheckOwnerPosition(struct FGameplayAbilityActorInfo& ActorInfo, float DropFocusRange);
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_GameplayAbilityMontageInterface
class IME_GameplayAbilityMontageInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_GameplayAbilityMontageInterface* GetDefaultObj();

};

// 0x0 (0x340 - 0x340)
// Class Maneater.ME_GameplayAbilityTargetActor_Radius
class AME_GameplayAbilityTargetActor_Radius : public AGameplayAbilityTargetActor_Radius
{
public:

	static class UClass* StaticClass();
	static class AME_GameplayAbilityTargetActor_Radius* GetDefaultObj();

};

// 0xA8 (0xE0 - 0x38)
// Class Maneater.ME_GameplaySettings
class UME_GameplaySettings : public UDeveloperSettings
{
public:
	TMap<class FName, struct FGameplayVocabulary> GameplayVocabulary;                                // 0x38(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<class FName, struct FPlayerTutorialPopup> Tutorials;                                         // 0x88(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	bool                                         bCruiseEnabled;                                    // 0xD8(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1171[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurnSoundOverride;                                 // 0xDC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_GameplaySettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_GameplayStatics
class UME_GameplayStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UME_GameplayStatics* GetDefaultObj();

	void ToggleWorldRendering(class UObject* Context, bool bEnableRendering);
	bool TestPreyAttachment(class AME_AnimalCharacter* GrabbingAnimal, class AActor* PreyActor);
	class AME_AIController* SpawnAIAtLocation(class AActor* WorldContextActor, class UClass* SpawnClass, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, bool bPersistent, enum class ESpawnActorCollisionHandlingMethod PawnCollision);
	class AME_AIController* SpawnAIAtActor(class AActor* WorldContextActor, class UClass* SpawnClass, class AActor* Actor, bool bUseActorRotation, bool bPersistent, enum class ESpawnActorCollisionHandlingMethod PawnCollision);
	bool ShowTutorialPopup(class FName TutorialLabel, class UObject* WorldContext);
	void SetTimeOfDaySpeedScale(float NewScale, class AActor* ContextActor);
	void SetTimeOfDay(float TimeOfDay, class AActor* ContextActor);
	void SetLevelStreamingVolumesEnabled(TArray<class ALevelStreamingVolume*>& Volumes);
	void SetLevelStreamingVolumesDisabled(TArray<class ALevelStreamingVolume*>& Volumes, bool bUnloadLevels);
	void SetKeyForAxis(class FName ActionName, const struct FKey& Binding, float AxisScale, bool bGamepad, class UObject* Context, bool Rebuild);
	void SetKeyForAction(class FName ActionName, const struct FKey& Binding, int32 BindIndex, class UObject* Context, bool Rebuild);
	class UObject* ResolveAsset(TSoftObjectPtr<class UObject>& Asset, class UObject* WorldContext);
	void ReadPixelsFromRenderTarget(class UTextureRenderTarget2D* RT, TArray<struct FColor>* OutPixelBuffer);
	bool ProjectPointToSurface(class UObject* Context, struct FVector* ProjectionPoint);
	struct FImpactResponseInstance ProcessImpactResponse(class UPhysicalMaterial* InstigatorPM, class USceneComponent* Instigator, class UPrimitiveComponent* Receiver, const struct FVector& HitLocation, const struct FVector& HitNormal, bool bAttachToReceiver, class FName AttachPoint, enum class EPhysicalSurface ReceivingSurfaceOverride, bool ForceWorldRotation);
	bool KeyIsValid(const struct FKey& InKey);
	bool IsWaypointed(class AActor* InActor);
	bool IsWatchingCinematic(class UObject* WorldContext);
	bool IsPlayingPrologue(class UObject* WorldContextObject);
	bool IsPlayerOnLand(class UObject* WorldContextObject);
	bool IsPlayerLookingAtLocation(class UObject* WorldContextObject, const struct FVector& TestLocation, float TestAngle);
	bool IsPlayerInRangeOfLocation(class UObject* WorldContextObject, const struct FVector& TestLocation, float RangeVal);
	bool IsPlayerInGrotto(class UObject* WorldContextObject);
	bool IsPlayerCameraUnderwater(class AActor* InActor);
	bool IsPlatformWinGDK();
	bool IsPlatformWindows();
	bool IsInWorldMap(class UObject* WorldContext);
	bool IsInBaseMap(class UObject* WorldContext);
	void IntPointToFVector2D(const TArray<struct FIntPoint>& Input, TArray<struct FVector2D>* Output);
	float GetWorldUnitScale();
	class AME_WorldSettings* GetWorldSettings(class AActor* WorldContextActor);
	void GetWorldRegionStates(class UObject* WorldContextObject, TArray<struct FWorldRegionState>* RegionStates);
	void GetWorldRegionStateFromObjective(class UObject* WorldContextObject, class UME_PlayerObjective* Obj, struct FWorldRegionState* RegionState);
	void GetWorldRegionState(class UObject* WorldContextObject, int32 InRegionIndex, struct FWorldRegionState* RegionState);
	class UME_WorldRegionData* GetWorldRegionData(class UObject* WorldContextObject);
	struct FVector GetWorldLocationAtUVCoord(class AActor* Bounds, const struct FVector2D& UVCoord);
	class AActor* GetWorldBoundsActor(class AActor* WorldContext);
	float GetWaterDepthAtLocation(struct FVector& InLocation, class AActor* WorldContextActor);
	float GetWaterDepth(class AActor* InActor);
	struct FVector2D GetUVsAtWorldLocation(class AActor* Bounds, const struct FVector& Location, class UTexture* Texture);
	class AME_TutorialManager* GetTutorialManager(class UObject* WorldContextObject);
	float GetTimeofDaySpeedScale(class AActor* ContextActor);
	float GetTimeofDayNoContext(class AActor* ContextActor);
	float GetTimeofDay(class AActor* ContextActor);
	class UME_SpawnPool* GetSpawnPool(class UObject* WorldContextObject);
	class AME_SpawnManager* GetSpawnManager(class UObject* WorldContextObject);
	class AME_SonarManager* GetSonarManager(class UObject* WorldContext);
	enum class EOutlineColor GetSilhouetteColor(class AActor* SilhouetteActor);
	class FText GetRegionName(enum class EWorldRegion Region, bool bIgnoreLocalization);
	int32 GetRegionIndexforVolume(class AME_WorldRegionVolume* RegionVolume);
	enum class EWorldRegion GetRegionFromName(class FText RegionName);
	class UPhysicalMaterial* GetPMFromComponent(class USceneComponent* InComponent);
	class AME_PlayerSharkState* GetPlayerSharkState(class UObject* WorldContextObject);
	class AME_PlayerSharkCharacter* GetPlayerSharkPawn(class UObject* WorldContextObject);
	float GetPlayerBounty(class UObject* WorldContextObject, bool bAsDollars);
	class ULevel* GetPersistentLevel(class UObject* Context);
	class AME_OceanPhysicsVolume* GetOceanPhysicsVolume(class AActor* InActor);
	class AME_OceanManager* GetOceanManager(class UObject* Context);
	class AME_ObjectiveSpawnManager* GetObjectiveSpawnManager(class UObject* WorldContextObject);
	class AME_PlayerObjectiveManager* GetObjectiveManager(class UObject* WorldContextObject);
	class AME_GameMode* GetManeaterGameMode(class UObject* WorldContextObject);
	struct FVector GetLocalViewPosition(class AActor* ContextActor);
	class FText GetLocalizedGrowthName(enum class EPlayerGrowthStage GrowthStage);
	float GetLastRenderTime(class UPrimitiveComponent* InComponent);
	struct FVector2D GetLandscapeResolution(class ALandscape* Landscape);
	class ALandscape* GetLandscape(class UObject* Context);
	void GetKeysForAction(class FName ActionName, float AxisScale, TArray<struct FKey>* Bindings);
	class FText GetKeyFriendlyName(const struct FKey& InKey);
	class AMED_DLCManager* GetDLCManager(class UObject* WorldContextObject);
	class UME_DialogueSystem* GetDialogueSystem(class UObject* WorldContextObject);
	class UObject* GetDefaultObject(class UObject* InObject);
	class FString GetCurrentMapName(class UObject* Context);
	class AME_BossBattleInfo* GetCurrentBossFight(class AActor* WorldContextActor);
	class UObject* GetClassDefaultObject(class UClass* InClass);
	float GetCameraWaterDepth(class AActor* InActor);
	class AME_BountyManager* GetBountyManager(class UObject* WorldContext);
	class FString GetAssetName(TSoftObjectPtr<class UObject>& Asset, bool bIncludePath);
	class FString GetAssetMapName(TSoftObjectPtr<class UObject>& Asset);
	class AME_AssetLoader* GetAssetLoader(class UObject* WorldContext);
	void GetAllThrashablePawns(class AActor* WorldContextActor, TArray<class APawn*>* ThrashableList);
	void GetAllThrashableActors(class UObject* WorldContext, TArray<class AActor*>* ThrashableList);
	void GetAllPingableActors(class UObject* WorldContext, TArray<class AActor*>* PingableList);
	void GetAllLivingHumans(class AActor* WorldContextObject, TArray<class AME_HumanCharacter*>* HumanList);
	void GetAllLivingCharacters(class AActor* WorldContextActor, TArray<class AME_Character*>* CharacterList);
	void GetAllLivingAnimals(class AActor* WorldContextActor, TArray<class AME_AnimalCharacter*>* AnimalList);
	void GetAllChildrenOfClass(TSubclassOf<class UObject> InParent, const TArray<class FName>& IgnoredClasses, TArray<TSoftClassPtr<class UObject>>* ChildList);
	void GetAllAxisInputs(TArray<struct FInputAxisKeyMapping>* AxisInputs);
	void GetAllAIControllers(class AActor* WorldContextActor, TArray<class AME_AIController*>* ControllerList, bool bSortByDistance);
	void GetAllActionInputs(TArray<struct FInputActionKeyMapping>* ActionInputs);
	class AME_AIDirector* GetAIDirector(class UObject* WorldContext);
	void GetActionsForKey(const struct FKey& InKey, TArray<struct FInputAxisKeyMapping>* OutAxisMappings, TArray<struct FInputActionKeyMapping>* OutActionMappings);
	void FVector2DToIntPoint(const TArray<struct FVector2D>& Input, TArray<struct FIntPoint>* Output);
	class FText FormatGameplayText(class FText TextToFormat, const TArray<struct FRichTextActionMapping>& ActionBinds);
	void ForceDespawnAllProxBombs(class UObject* WorldContextObject);
	void ForceDespawnAI(class AME_AIController* AIC);
	struct FRotator FindSlopeRotation(const struct FVector& FloorNormal, const struct FRotator& CurrentRotation);
	struct FVector2D FFloatIntervalToFVector2D(const struct FFloatIntervalBP& Input);
	void DrawArrowOnActor(class AActor* Actor, struct FRotator& Direction, const struct FColor& Color, float ArrowLength);
	class UTextureRenderTarget2D* CreateRenderTarget2DNoHDR(class UObject* WorldContextObject, int32 Width, int32 Height);
	void AttachCinematicEvolutionMeshes(class ASkeletalMeshActor* SkeletalMeshActor);
};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEGameSingleton
class UMEGameSingleton : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMEGameSingleton* GetDefaultObj();

};

// 0x30 (0x150 - 0x120)
// Class Maneater.ME_GameUserSettings
class UME_GameUserSettings : public UGameUserSettings
{
public:
	int32                                        GlobalQualityLevel;                                // 0x120(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        VSyncType;                                         // 0x124(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OceanQualityLevel;                                 // 0x128(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowFrameRate;                                    // 0x12C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11DB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultFOV;                                        // 0x130(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Brightness;                                        // 0x134(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShadowsOn;                                        // 0x13C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11DD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastActiveUserId;                                  // 0x140(0x10)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_GameUserSettings* GetDefaultObj();

	void SetVSyncType(class UWorld* OwnerWorld, int32 Val);
	void SetShowFrameRate(bool bNewShowFrameRate);
	void SetShadowsOn(class UWorld* OwnerWorld, int32 Val);
	void SetOceanQualityLevel(int32 QualityLevel);
	void SetLastActiveUserId(const class FString& UserId);
	void SetGlobalQuality(int32 Val);
	void SetDefaultFOV(float InFOV);
	void SetBrightness(class UWorld* OwnerWorld, int32 Val);
	void SetAntiAliasingType(class UWorld* OwnerWorld, int32 Value);
	int32 GetVSyncType();
	bool GetShowFrameRate();
	bool GetShadowsOn();
	int32 GetOceanQualityLevel();
	class UME_GameUserSettings* GetManeaterUserSettings();
	class FString GetLastActiveUserId();
	int32 GetGlobalQuality();
	float GetDefaultFOV();
	int32 GetBrightness();
	int32 GetAntiAliasingType();
};

// 0x8 (0x228 - 0x220)
// Class Maneater.ME_GateLever
class AME_GateLever : public AActor
{
public:
	class AME_InWorldWidgetCreator*              WidgetCreator;                                     // 0x220(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_GateLever* GetDefaultObj();

};

// 0x10 (0x2F8 - 0x2E8)
// Class Maneater.ME_GoreChunk
class AME_GoreChunk : public AME_ThrashableActor
{
public:
	bool                                         bHealthChunk;                                      // 0x2E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11DE[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_GoreChunk* GetDefaultObj();

	void HandleWaterSurfaceTransition(bool bIsAboveWater);
};

// 0x28 (0x60 - 0x38)
// Class Maneater.ME_GraphicsSettings
class UME_GraphicsSettings : public UDeveloperSettings
{
public:
	class FName                                  FoliageShadowParameterName;                        // 0x38(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UME_GraphicsSettingsContentLink> ContentLink;                                       // 0x40(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFoliageShadowStrengthChanged;                    // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_11DF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_GraphicsSettings* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Maneater.ME_GraphicsSettingsContentLink
class UME_GraphicsSettingsContentLink : public UObject
{
public:
	TArray<class UMaterialParameterCollection*>  Maneater_MPCs;                                     // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_GraphicsSettingsContentLink* GetDefaultObj();

};

// 0x48 (0x268 - 0x220)
// Class Maneater.ME_Grotto
class AME_Grotto : public AActor
{
public:
	uint8                                        Pad_11E6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LevelName;                                         // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldRegion                      Region;                                            // 0x230(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLocked;                                         // 0x231(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11E7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class ATriggerVolume>         GrottoVolume;                                      // 0x238(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasBeenDiscovered;                                // 0x260(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11E8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_Grotto* GetDefaultObj();

	void StreamingLevelLoaded();
	void SetInactive(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnGrottSpaceExited();
	void OnGrottSpaceEntered();
	void Activate(class AActor* OverlappedActor, class AActor* OtherActor);
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_HitComponent
class UME_HitComponent : public UObject
{
public:

	static class UClass* StaticClass();
	static class UME_HitComponent* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.ME_HitComponentAOE
class UME_HitComponentAOE : public UME_HitComponent
{
public:
	float                                        Radius;                                            // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11E9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_HitComponentAOE* GetDefaultObj();

};

// 0x38 (0x7B8 - 0x780)
// Class Maneater.ME_HumanAIController
class AME_HumanAIController : public AME_CharacterAIController
{
public:
	class AME_HumanCharacter*                    HumanPawn;                                         // 0x780(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanLookForBoats;                                  // 0x788(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_BoatPawn*                          NearestBoat;                                       // 0x790(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BB_NearestBoatKey;                                 // 0x798(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BB_NearestBoatBoardLocKey;                         // 0x7A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11ED[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_HumanAIController* GetDefaultObj();

	void GetStateAsDialogueString(class FString* State);
};

// 0x238 (0xE58 - 0xC20)
// Class Maneater.ME_HumanCharacter
class AME_HumanCharacter : public AME_Character
{
public:
	bool                                         bHasRandomizedAppearance;                          // 0xC20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11F7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInterface*>            RegionMaterials;                                   // 0xC28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpecificCharacter;                                 // 0xC38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11F9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            ConfigTable;                                       // 0xC40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHumanNPCAppearanceConfig             LoadedConfig;                                      // 0xC48(0x68)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHumanNPCTextureSet_Body              BodyConfig;                                        // 0xCB0(0x30)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHumanNPCTextureSet_Hair              HairConfig;                                        // 0xCE0(0x38)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHumanNPCTextureSet_Clothing          ClothingConfig;                                    // 0xD18(0x40)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UME_BodyTypeInformation*               FitSizeInformation;                                // 0xD58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_BodyTypeInformation*               PlusSizeInformation;                               // 0xD60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ArmBoneNames;                                      // 0xD68(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          LegBonesNames;                                     // 0xD78(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBountyBoss;                                     // 0xD88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11FA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnVehicleReceivedHit;                              // 0xD90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                DynamicDialoguePathModelName;                      // 0xDA0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChatterUpdateFrequencyMin;                         // 0xDB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChatterUpdateFrequencyMax;                         // 0xDB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChatterSpamCooldown;                               // 0xDB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11FB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BleedOutDamageIncrement;                           // 0xDCC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UME_WeaponComponent>       ME_WeaponComponentClass;                           // 0xDD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_WeaponComponent*                   ME_WeaponComponent;                                // 0xDD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11FC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EjectedDamageAudioChance;                          // 0xDF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11FD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          BleedOutTimerHandle;                               // 0xDF8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AttackCooldownWhenBitten;                          // 0xE00(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11FE[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbandonImpulseModifier;                            // 0xE2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbandonTurnTime;                                   // 0xE30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  AbandonVehicleMontage;                             // 0xE38(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1200[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_HumanCharacter* GetDefaultObj();

	void TryUpdateChatter(bool bForce);
	void SetThreatLevel(enum class EAIThreatAlertState NewAlertState, class AActor* InstigatingActor);
	void SetIsPassenger(bool bNewPassengerStatus, class AME_VehiclePawn* NewVehicle, bool bChangeCollision, int32 SeatIndex);
	void PostRandomDialogueEvent();
	void GetupPawn_UseSnapshot();
	void GetupPawn_TriggerAnimation();
	void GetupPawn_SetupActor();
	void GetupPawn_MoveActor();
	void GetStateAsDialogueString(class FString* State);
	bool EjectIfPassenger(class AController* EjectInstigator, bool bShouldRagdoll, struct FVector& EjectImpulse);
	void ChatterUpdateEvent_BP(int32 TotalLimbs, int32 DestroyedLimbs, bool IsGrabbed, bool WasBumped, bool bWasForced);
	void BleedOutTimer();
	void AbandonVehicleFinished();
	void AbandonVehicle();
	void AbandonIfPassenger();
};

// 0x108 (0xF60 - 0xE58)
// Class Maneater.ME_HumanBeachgoer
class AME_HumanBeachgoer : public AME_HumanCharacter
{
public:
	class AME_HumanBeachgoer*                    DefaultBeachgoer;                                  // 0xE58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowedToEscape;                                  // 0xE60(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1201[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsGettingUp;                                      // 0xE74(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1202[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinMaxRange                          EscapeMoveSpeed;                                   // 0xE78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1203[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EscapeMoveSpeedToUse;                              // 0xE84(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegsCrawlSpeed;                                    // 0xE88(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoLegsCrawlSpeed;                                  // 0xE8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChanceToTrip;                                      // 0xE90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMinMaxRange                          TripMinMaxTime;                                    // 0xE94(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1204[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           TrippedEffect;                                     // 0xEA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddedForwardImpulse;                               // 0xEA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddedVerticalImpulse;                              // 0xEAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1205[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FleeDistanceBetweenChecks;                         // 0xEC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardCapsulePlacementDistance;                   // 0xEC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1206[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinMaxRange                          FleeDelay;                                         // 0xEF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1207[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            StartFleeing;                                      // 0xF00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMinMaxRange                          NavigationWaitTime;                                // 0xF10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1208[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMinMaxRange                          CasualWalkSpeedRange;                              // 0xF20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1209[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PitchMaximum;                                      // 0xF44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMaximum;                                       // 0xF48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchBlendSpeed;                                   // 0xF4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawBlendSpeed;                                     // 0xF50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollBlendSpeed;                                    // 0xF54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_120A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_HumanBeachgoer* GetDefaultObj();

};

// 0x68 (0x820 - 0x7B8)
// Class Maneater.ME_HumanBeachgoerAIController
class AME_HumanBeachgoerAIController : public AME_HumanAIController
{
public:
	class UME_AmbientActivityComponent*          ActivityComponent;                                 // 0x7B8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_HumanBeachgoer*                    BeachgoerPawn;                                     // 0x7C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThreatSearchInterval;                              // 0x7C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_120C[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_HumanBeachgoerAIController* GetDefaultObj();

	void SetFleeingPath();
	void FleeingAfterDelay();
};

// 0x10 (0x760 - 0x750)
// Class Maneater.ME_HumanMovementComponent
class UME_HumanMovementComponent : public UME_CharacterMovementComponent
{
public:
	uint8                                        Pad_120D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_HumanMovementComponent* GetDefaultObj();

};

// 0x8 (0xE60 - 0xE58)
// Class Maneater.ME_HumanPassenger
class AME_HumanPassenger : public AME_HumanCharacter
{
public:
	uint8                                        Pad_120E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_HumanPassenger* GetDefaultObj();

};

// 0x0 (0x7B8 - 0x7B8)
// Class Maneater.ME_HumanPassengerController
class AME_HumanPassengerController : public AME_HumanAIController
{
public:

	static class UClass* StaticClass();
	static class AME_HumanPassengerController* GetDefaultObj();

};

// 0x80 (0x1B8 - 0x138)
// Class Maneater.ME_InputComponent
class UME_InputComponent : public UInputComponent
{
public:
	uint8                                        Pad_120F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            PlayerBiteDelegate;                                // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerSharkCharacter> PlayerSharkCharacter;                              // 0x158(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1210[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxLookSpeed;                                      // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1211[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EvadeInputDeadZone;                                // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1212[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ComboInputDeadZone;                                // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DotVectorAcceptanceValue;                          // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputWindow;                                       // 0x194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1213[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_InputComponent* GetDefaultObj();

};

// 0x98 (0x2B8 - 0x220)
// Class Maneater.ME_InterpolatedSplineActor
class AME_InterpolatedSplineActor : public AActor
{
public:
	class USplineComponent*                      SplineComponent;                                   // 0x220(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshMoveSpeed;                                     // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshTurnSpeed;                                     // 0x22C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TickRateMin;                                       // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TickRateMax;                                       // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TickDistMin;                                       // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateWhileInvisible;                             // 0x23C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1214[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class USceneComponent*, struct FRotator> InterpolationRotOffsets;                           // 0x240(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1215[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_InterpolatedSplineActor* GetDefaultObj();

};

// 0x58 (0xFB8 - 0xF60)
// Class Maneater.ME_SharkCharacter
class AME_SharkCharacter : public AME_AnimalCharacter
{
public:
	uint8                                        Pad_1216[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_OceanSurfaceParticleSystemComponent* DorsalPSComponent;                                 // 0xF80(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       GrowthStagePSTemplates[0x5];                       // 0xF88(0x28)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DorsalPSCDeactivationSpeedSq;                      // 0xFB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1217[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_SharkCharacter* GetDefaultObj();

	struct FVector GetDorsalFinLocation();
};

// 0xF70 (0x1F28 - 0xFB8)
// Class Maneater.ME_PlayerSharkCharacter
class AME_PlayerSharkCharacter : public AME_SharkCharacter
{
public:
	bool                                         DEV_UseMotherShark;                                // 0xFB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123C[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTailwhipPerformedDelegate;                       // 0xFF8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWhipShotPerformedDelegate;                       // 0x1008(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnKnifingJumpPerformedDelegate;                    // 0x1018(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLungePerformedDelegate;                          // 0x1028(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TimeDilationEventDelegate;                         // 0x1038(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           HeldTailWhipGE;                                    // 0x1048(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle           HeldTailWhipGEHandle;                              // 0x1050(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailWhipDilationLerpSpeed;                         // 0x1058(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailWhipTargetingRotationRate;                     // 0x105C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BiteChainWindowTime;                               // 0x1060(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123D[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDeltaDotForBreachKnifing;                       // 0x1070(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDeltaDotForBreachKnifing;                       // 0x1074(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_123F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThrashEndDelay;                                    // 0x107C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFocalTargetChanged;                              // 0x1080(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnKnifingStateChanged;                             // 0x1090(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1241[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FocalTargetTraceExtent;                            // 0x10C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1242[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FComboAttack>                  AllComboAttacks;                                   // 0x10C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1243[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CurrentFocusedGrabPointLoc;                        // 0x10DC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RegionCheckDelay;                                  // 0x10E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1244[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_WorldRegionVolume*                 CurrentWorldRegion;                                // 0x10F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1245[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeathFadeOutTime;                                  // 0x1108(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathSlomoRatio;                                   // 0x110C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableSlomoOnDeath;                              // 0x1110(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1246[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 LastVictim;                                        // 0x1114(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1247[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RegionAmbientNarratorPeriodFloor;                  // 0x1128(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RegionAmbientNarratorPeriodCeil;                   // 0x112C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRegionChanged;                                   // 0x1130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1249[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FrenzyHealthBonus;                                 // 0x1148(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrenzyHealthBonusMax;                              // 0x114C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrenzyStaminaBonus;                                // 0x1150(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrenzyStaminaBonusMax;                             // 0x1154(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_124B[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         StartLowHealthWarningEvent;                        // 0x1188(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         StopLowHealthWarningEvent;                         // 0x1190(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         StartDrowningEvent;                                // 0x1198(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         StopDrowningEvent;                                 // 0x11A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealthDangerStartPct;                              // 0x11A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowAirThreshold;                                   // 0x11AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_124C[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_PlayerSharkMovementComponent*      SharkMovementComponent;                            // 0x11E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_PlayerSharkState*                  SharkPlayerState;                                  // 0x11E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_PlayerSharkController*             SharkPlayerController;                             // 0x11F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_AIDirector*                        AIDirector;                                        // 0x11F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_124D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_CameraComponent*                   FollowCamera;                                      // 0x1208(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_124F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_CameraSpringArmComponent*          CameraBoom;                                        // 0x1220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerCameraMaxPitch;                              // 0x1228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerCameraMinPitch;                              // 0x122C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraPitchCapBlend;                               // 0x1230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderwaterSurfaceCameraThreshold;                  // 0x1234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderwaterSurfaceCameraMinPitch;                   // 0x1238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterSurfaceCameraBoomMultiplier;                  // 0x123C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterSurfaceAddedCameraHeight;                     // 0x1240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingCameraBoomMultiplier;                       // 0x1244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraLagDistLevelMultiplier;                      // 0x1248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraArmSprintMultiplier;                         // 0x124C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFinalSprintArmLengthMultiplier;                 // 0x1250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1250[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceConstant*             MeshFadeMIC;                                       // 0x1258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFocusCharacterDist;                             // 0x1260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFocusVehicleDist;                               // 0x1264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFocusLandSurfaceDiff;                           // 0x1268(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshFadeDistanceBuffer;                            // 0x126C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1251[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SharkGrowthScale;                                  // 0x12C8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1252[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       LevelUpParticle;                                   // 0x12D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LevelUpSocketName;                                 // 0x12D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           LevelUpBloomCurve;                                 // 0x12E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           LevelUpGlowCurve;                                  // 0x12E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1254[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TagTrackerAttachSocketName;                        // 0x1320(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    TagTrackerClass;                                   // 0x1328(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TagActivatedSound;                                 // 0x1330(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TagExpiredSound;                                   // 0x1338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MotionlessPitchLerpDelay;                          // 0x1340(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1255[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SharkTeethMeshName;                                // 0x1348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SharkMaterialName;                                 // 0x1350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SharkScarredMaterialName;                          // 0x1358(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TeethMaterialName;                                 // 0x1360(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeadMaterialName;                                  // 0x1368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TailMaterialName;                                  // 0x1370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BodyMaterialName;                                  // 0x1378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FinsMaterialName;                                  // 0x1380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HitAudioName;                                      // 0x1388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HardHitAudioName;                                  // 0x1390(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PainSoundDelay;                                    // 0x1398(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1257[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                TeethSkeletalMesh;                                 // 0x13A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                HeadSkeletalMesh;                                  // 0x13A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                TailSkeletalMesh;                                  // 0x13B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                BodySkeletalMesh;                                  // 0x13B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                FinsSkeletalMesh;                                  // 0x13C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1258[0x64];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StickHoldTimeForSprint;                            // 0x142C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoAimSpeedMin;                                   // 0x1430(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoAimSpeedMax;                                   // 0x1434(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoAimSpeedMinDot;                                // 0x1438(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoAimSpeedMaxDot;                                // 0x143C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StickForwardThresholdForSprint;                    // 0x1440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StickForwardThresholdToCancelSprint;               // 0x1444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeToBlendToFullSprint;                           // 0x1448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1259[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   SprintTier1;                                       // 0x1450(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   SprintTier2;                                       // 0x1460(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   SprintTier3;                                       // 0x1470(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                         MotherSharkMesh;                                   // 0x1480(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         ScarredAdultMesh;                                  // 0x1488(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                  MotherSharkStage;                                  // 0x1490(0xF0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                  PupSharkStage;                                     // 0x1580(0xF0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                  TeenSharkStage;                                    // 0x1670(0xF0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                  AdultSharkStage;                                   // 0x1760(0xF0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                  ElderSharkStage;                                   // 0x1850(0xF0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGrowthStageSettings                  MegaSharkStage;                                    // 0x1940(0xF0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_125A[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bBitingVulnerableCharacter;                        // 0x1A3C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_125B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PerfectEntrySplash;                                // 0x1A40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PerfectTrailBubbles;                               // 0x1A48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SmallEntrySplash;                                  // 0x1A50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SmallTrailBubbles;                                 // 0x1A58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MediumEntrySplash;                                 // 0x1A60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MediumTrailBubbles;                                // 0x1A68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LargeEntrySplash;                                  // 0x1A70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LargeTrailBubbles;                                 // 0x1A78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExitWaterSplash;                                   // 0x1A80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExitWaterSplashSound;                              // 0x1A88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExitWaterTrail;                                    // 0x1A90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ActiveTrail;                                       // 0x1A98(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FloppingTakeoffFromWater;                          // 0x1AA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FloppingLandInWater;                               // 0x1AA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttachedParticleSystem>       EnterKnifingFromUnderwaterTrail;                   // 0x1AB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttachedParticleSystem>       EnterKnifingFromBreachTrail;                       // 0x1AC0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttachedParticleSystem>       ExitKnifingUnderwaterTrail;                        // 0x1AD0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_125C[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraInterpolationSpeed;                          // 0x1B0C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFreeMoveEnabled;                                  // 0x1B10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_125D[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DoubleTapTimeWindow;                               // 0x1B24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseMovementModifier;                           // 0x1B28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StrafeMovementModifier;                            // 0x1B2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UME_InputComponent>        InputComponentClass;                               // 0x1B30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_125E[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinWhipshotAimDistance;                            // 0x1B68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWhipshotAimDistance;                            // 0x1B6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 WhipshotAimTraceChannel;                           // 0x1B70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_125F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           WhipShotMassDifferential;                          // 0x1B78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SlamDamageMassDifferential;                        // 0x1B80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerOnLand;                                     // 0x1B88(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterActionMode              CurrentActionMode;                                 // 0x1B89(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1260[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              DamageEffectScreenSpaceParticle;                   // 0x1B90(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              LoopingMeshParticle;                               // 0x1B98(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1261[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxLockOnDistance;                                 // 0x1BBC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1262[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BeginLockOnSound;                                  // 0x1BC4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EndLockOnSound;                                    // 0x1BCC(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1263[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialParameterCollection*          SharkMaterialParams;                               // 0x1BD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          CachedMovementComponent;                           // 0x1BE0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MovementLoop;                                      // 0x1BE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MovementLoopStop;                                  // 0x1BF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WaterLineMovementLoop;                             // 0x1BF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WaterLineMovementLoopStop;                         // 0x1C00(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FoliageDisplacementScalingFactor;                  // 0x1C08(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseFogRevealDistance;                             // 0x1C0C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastRevealedMapLocation;                           // 0x1C10(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CurrentMovementAudioEvent;                         // 0x1C1C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LastTickRotation;                                  // 0x1C24(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        AudioPitchRange;                                   // 0x1C30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AudioYawRange;                                     // 0x1C34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    ScreenEffectsPPM;                                  // 0x1C38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              ScreenEffectsPPMI;                                 // 0x1C40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  Param_ScreenEffect_Pain;                           // 0x1C48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeTime_ScreenEffect_Pain;                        // 0x1C50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1264[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Param_ScreenEffect_SpeedBurst;                     // 0x1C58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeInTime_ScreenEffect_SpeedBurst;                // 0x1C60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeOutTime_ScreenEffect_SpeedBurst;               // 0x1C64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Duration_ScreenEffect_SpeedBurst;                  // 0x1C68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastSpeedBurstTime;                                // 0x1C6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1265[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Param_ScreenEffect_Drowning;                       // 0x1C74(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1266[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Param_ScreenEffect_LowHealth;                      // 0x1C80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1267[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    SonarEffectsPPM;                                   // 0x1C90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              SonarEffectsPPMI;                                  // 0x1C98(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                  QueuedInputs;                                      // 0x1CA0(0x10)(Edit, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1268[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SharkFlipSpeed;                                    // 0x1CB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SharkAirTurnSpeed;                                 // 0x1CB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFaceCameraOnLanding;                              // 0x1CBC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1269[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BreachCameraAngle;                                 // 0x1CC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnifingPitchControllerGravity;                     // 0x1CC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnifingRelaxedPitch;                               // 0x1CC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnifingJumpTestAngle;                              // 0x1CCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallingMaxPitch;                                   // 0x1CD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallingMinPitch;                                   // 0x1CD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThrashingInputDampeningMultiplier;                 // 0x1CD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_126A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              LeftGillGrabBlood;                                 // 0x1CE0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              RightGillGrabBlood;                                // 0x1CE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BreachCameraPitchTransitionSpeed;                  // 0x1CF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BreachCameraYawTransitionSpeed;                    // 0x1CF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BreachSharkRotationCorrectionSpeed;                // 0x1CF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnifingCameraAngle;                                // 0x1CFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnifingCameraPitchTransitionSpeed;                 // 0x1D00(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnifingCameraYawTransitionSpeed;                   // 0x1D04(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BreachControlImpulse;                              // 0x1D08(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_126B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   SlamVehicleHitEffects;                             // 0x1D10(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   SlamCharacterHitEffects;                           // 0x1D20(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlamAttackCooldown;                                // 0x1D30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlamDamageMinDamagePct;                            // 0x1D34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlamDamageMaxDamagePct;                            // 0x1D38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlamDamageSpeedPctThreshold;                       // 0x1D3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpeedMultiplier;                                // 0x1D40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EvadeSlamDamageMultiplier;                         // 0x1D44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_126C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinVehicleDamageImpulse;                           // 0x1D58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinVehicleImpactDamageInterval;                    // 0x1D5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   VehicleDamageHitEffects;                           // 0x1D60(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_PlayerTargetingSystem*             PlayerTargetingSystem;                             // 0x1D70(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseTargetSystemRotation;                          // 0x1D78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_126D[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BiteLungeCooldownTime;                             // 0x1D8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxBiteLungeTime;                                  // 0x1D90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BiteLungeInterpSpeed;                              // 0x1D94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BiteLungeMaxTargetHeight;                          // 0x1D98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BiteLungeMinCameraDot;                             // 0x1D9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BiteLungeGroundLeapZ;                              // 0x1DA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BiteLungeStartAudioEvent;                          // 0x1DA4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BiteLungeStopAudioEvent;                           // 0x1DAC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_126E[0x25];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDebugWaveHeights;                                 // 0x1DD9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_126F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DebugWaveHeightGridCount;                          // 0x1DDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugAIVision;                                    // 0x1DE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1270[0x6F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDangerSenseUpdatedDelegate;                      // 0x1E50(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              DangerSensePSC;                                    // 0x1E60(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DangerSenseEventName;                              // 0x1E68(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DangerSenseSocketName;                             // 0x1E70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFastTravelDisabled;                               // 0x1E78(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1271[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AtomicChargeLoop;                                  // 0x1E7C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AtomicChargeLoopStop;                              // 0x1E84(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AtomicChargeMaxLoop;                               // 0x1E8C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AtomicChargeMaxLoopStop;                           // 0x1E94(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AtomicChargeDelay;                                 // 0x1E9C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AtomicBeamDistThreshold;                           // 0x1EA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1272[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       GainedMutagenParticle;                             // 0x1EA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MutagenSocketName;                                 // 0x1EB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ActiveMutagenParticle;                             // 0x1EB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1273[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           MutagenHead02crv;                                  // 0x1ED0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenHead01crv;                                  // 0x1ED8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBodyMaincrv;                                // 0x1EE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBody01crv;                                  // 0x1EE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBody02crv;                                  // 0x1EF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBody03crv;                                  // 0x1EF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBody04crv;                                  // 0x1F00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBody05crv;                                  // 0x1F08(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBody06crv;                                  // 0x1F10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBody07crv;                                  // 0x1F18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MutagenBody08crv;                                  // 0x1F20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_PlayerSharkCharacter* GetDefaultObj();

	void ZeroOutStats();
	void UpdateGrowthAssets(enum class EPlayerGrowthStage& OldGrowthStage, enum class EPlayerGrowthStage& NewGrowthStage);
	void TryUseLungeAbility();
	void TryCancelBite();
	void TailWhipTimeDilationStarted_BP(enum class ECharacterActionMode ActionMode);
	void TailWhipTimeDilationEnded_BP();
	void StopBiting(bool bFromInput);
	void StopAnimationsOnLandfall();
	void StartBiting(bool bFromInput);
	void SetWantsToLeaveKnifing(bool bWantsToLeave);
	void SetTagged(bool bNewIsTagged);
	void SetCameraRotation(const struct FRotator& NewRotation);
	bool SetActorAndCameraRotation(const struct FRotator& NewRotation, enum class ETeleportType Teleport);
	void RefreshAttachedMeshes();
	void PlayWaterReEntryAnimation(float EntryAngleDot, float VelocityAngleDot, const struct FRotator& FlatEntryRotator, bool PerfectEntry, bool IsCruisingWaterLine);
	void PlayWaterBreachFX();
	void PlayAudioEvent(class UAkAudioEvent* AudioEvent);
	void OnTimeDilationStarted();
	void OnTimeDilationEnded();
	void OnEvolutionAbilityCharged();
	void OnCinematicModeChangedEvent(bool bCinematicMode);
	void OnCinematicModeChanged(bool bCinematicMode);
	void OnAttackAbilityMeleeHit_BP(class UGameplayAbility* AttackAbility, struct FHitResult& HitResult);
	void NotifyDirectorOfAttack();
	void LerpSharkMaterialParam(const class FString& ParamName, float ParamValue, float FLerpTime);
	void KnifingStateChanged_BP(bool NewKnifingState, enum class ECharacterActionMode ChangeContext);
	bool IsSprinting();
	bool IsMotherShark();
	bool IsInputDisabled();
	enum class EFastTravelReturn IsCapableOfFastTravel(class AActor* DestGrotto);
	void HandleCameraFadeInFinished();
	void GrowthStageUpdated(enum class EPlayerGrowthStage& OldGrowthStage, enum class EPlayerGrowthStage& NewGrowthStage, bool bReinitPose);
	void GrowthStageChanged(enum class EPlayerGrowthStage& NewGrowthStage);
	void GrowthLevelChanged(int32 NewGrowthLevel, bool bChangeFromTheoretical);
	void GibLastVictim();
	class UME_PlayerTargetingSystem* GetPlayerTargetingSystem();
	class UME_PlayerSharkMovementComponent* GetPlayerSharkMovement();
	int32 GetPlayerLevel();
	float GetGrowthStageScale();
	enum class EPlayerGrowthStage GetGrowthStage();
	class AActor* GetCurrentLockOnTarget();
	class AActor* GetCurrentFocusedTarget();
	class UME_AnimInstance_PlayerShark* GetCastAnimInstance();
	class USkeletalMeshComponent* GetAttachedEvolutionMesh(enum class EEvolutionSlot EvolutionSlot, int32 MeshIndex);
	void GenericWaterlineSplash(class UParticleSystem* Particles);
	void GenericAttachedParticleTrail(class UParticleSystem* Particles, enum class ELimbBoneName LimbName);
	void ForceKnifingEntryAngle();
	void ExitKnifingUnderwater();
	void EvolutionAbilityActivatedEvent(enum class EEvolutionSetType SetType);
	void EnterKnifingFromUnderwater();
	void EnterKnifingFromBreach();
	void EndWhipshotSlomo(int32 Idx, int32 PageCount);
	void ChunkLastVictim();
	void BroadcastRegionChanged();
	bool AttemptFastTravel(class AActor* Dest);
	void ApplyEvolutionMaterial();
	void ActivateMutagenScale(class UParticleSystem* ParticleToPlay, class FName* SocketToAttach);
	void ActionModeUpdated_BP(enum class ECharacterActionMode NewActionMode);
};

// 0x178 (0x20A0 - 0x1F28)
// Class Maneater.ME_InventoryActor
class AME_InventoryActor : public AME_PlayerSharkCharacter
{
public:
	class AME_PlayerSharkCharacter*              OwningCharacter;                                   // 0x1F28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1274[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAnimInstance>             PupAnimInstance;                                   // 0x2020(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAnimInstance>             TeenAnimInstance;                                  // 0x2028(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAnimInstance>             AdultAnimInstance;                                 // 0x2030(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAnimInstance>             ElderAnimInstance;                                 // 0x2038(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAnimInstance>             MegaAnimInstance;                                  // 0x2040(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PupMeshLocation;                                   // 0x2048(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TeenMeshLocation;                                  // 0x2054(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AdultMeshLocation;                                 // 0x2060(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MegaMeshLocation;                                  // 0x206C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ElderMeshLocation;                                 // 0x2078(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1275[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneCaptureComponent2D*              SceneCaptureComponent;                             // 0x2088(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1276[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_InventoryActor* GetDefaultObj();

	void SetSharkEvolutionVisuals(TMap<enum class EEvolutionSlot, class UME_PlayerEvolution*>* EquippedEvolutionMap);
	void SetPlayerSharkCharacter(class AME_PlayerSharkCharacter* Character);
};

// 0x10 (0x230 - 0x220)
// Class Maneater.ME_InWorldWidgetCreator
class AME_InWorldWidgetCreator : public AActor
{
public:
	uint8                                        Pad_1277[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EObjectiveType                    RelatedObjectiveType;                              // 0x22A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRegisterWithSonarManager;                         // 0x22B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1278[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_InWorldWidgetCreator* GetDefaultObj();

	void SetActiveIndexFromObjective(class UME_PlayerObjective* PlayerObjective);
	void OnViewControllerVisibilityChanged(enum class ESlateVisibility ControllerVisibility);
	void OnGamePauseStateChanged(bool bPaused);
};

// 0x30 (0x250 - 0x220)
// Class Maneater.ME_LandmarkObjective
class AME_LandmarkObjective : public AActor
{
public:
	uint8                                        Pad_127B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBillboardComponent*                   Billboard;                                         // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         Box;                                               // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                       ParticleSpawnLocation;                             // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPointLightComponent*                  PointLight;                                        // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceVisible;                                // 0x248(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAboveWater;                                      // 0x24C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsActive;                                         // 0x24D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDiscovered;                                     // 0x24E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_127C[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_LandmarkObjective* GetDefaultObj();

	void OnDiscoveredSet(bool bNewDiscoveredSetting);
	class AME_DestructibleActor* GetAssociatedSign();
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_MapWidgetInterface
class IME_MapWidgetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_MapWidgetInterface* GetDefaultObj();

	bool ShouldClampToEdgeOfMap();
	void OnWidgetMouseDown(class UUserWidget* Widget, struct FPointerEvent& MouseEvent);
	enum class ESlateVisibility GetMapWidgetVisibility();
	struct FVector2D GetMapWidgetSize();
	int32 GetMapWidgetPriority();
	class UMaterialInterface* GetMapWidgetMaterial();
	class UTexture2D* GetMapWidgetIcon();
	bool GetMapWidgetEnabled();
	class FText GetMapDisplayName();
	class FText GetMapDescriptionText();
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_MercunaNavigableInterface
class IME_MercunaNavigableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_MercunaNavigableInterface* GetDefaultObj();

};

// 0x20 (0x150 - 0x130)
// Class Maneater.ME_MercunaNavigationComponent
class UME_MercunaNavigationComponent : public UMercunaNavigationComponent
{
public:
	bool                                         bCanNavigateUnderWater;                            // 0x130(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanNavigateOnWater;                               // 0x131(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanNavigateAboveWater;                            // 0x132(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1281[0x1D];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_MercunaNavigationComponent* GetDefaultObj();

};

// 0x8 (0x2C0 - 0x2B8)
// Class Maneater.ME_MercunaNavOctree
class AME_MercunaNavOctree : public AMercunaNavOctree
{
public:
	bool                                         bBoatOctree;                                       // 0x2B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAirOctree;                                        // 0x2B9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1283[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_MercunaNavOctree* GetDefaultObj();

	bool IsBoatOctree();
};

// 0x0 (0x288 - 0x288)
// Class Maneater.ME_MercunaNavVolume
class AME_MercunaNavVolume : public AMercunaNavVolume
{
public:

	static class UClass* StaticClass();
	static class AME_MercunaNavVolume* GetDefaultObj();

	bool IsBoatVolume();
	bool IsAirVolume();
};

// 0x0 (0x200 - 0x200)
// Class Maneater.ME_MercunaObstacleComponent
class UME_MercunaObstacleComponent : public UMercunaObstacleComponent
{
public:

	static class UClass* StaticClass();
	static class UME_MercunaObstacleComponent* GetDefaultObj();

};

// 0xD8 (0x100 - 0x28)
// Class Maneater.MontageInstance
class UMontageInstance : public UObject
{
public:
	TArray<struct FMontageEntry>                 MontagesToPlay;                                    // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayRate;                                          // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SectionName;                                       // 0x3C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopMontageOnHit;                                 // 0x44(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1285[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StopMontageBlendOutTime;                           // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopMontageOnExitWater;                           // 0x4C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1286[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bShouldStopMovement : 1;                           // Mask: 0x1, PropSize: 0x10x50(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldStopRotation : 1;                           // Mask: 0x2, PropSize: 0x10x50(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_B8 : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1287[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSwitchToFlying;                                   // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1288[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HomingRotationSpeed;                               // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RootMotionScale;                                   // 0x5C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseRootMotionDistance;                            // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1289[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   HitEffectClasses;                                  // 0x70(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectClassesWhileAnimating;               // 0x80(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttachedAudioEvent                   MontageStartedSound;                               // 0x90(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttachedAudioEvent                   MontageEndedSound;                                 // 0xA0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UCameraAnim*                           CamAnim;                                           // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_128A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CamRate;                                           // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CamBlendInTime;                                    // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CamBlendOutTime;                                   // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CamScale;                                          // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoop;                                             // 0xD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_128B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LoopDuration;                                      // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WakeUpSectionName;                                 // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_128C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMontageInstance* GetDefaultObj();

};

// 0x68 (0x168 - 0x100)
// Class Maneater.WildlifeMontageInstance
class UWildlifeMontageInstance : public UMontageInstance
{
public:
	bool                                         bIsLunge;                                          // 0x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDynamicLungeDistance;                          // 0x101(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_128F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DynamicLungeDistance;                              // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bContinueToHoneIn;                                 // 0x108(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1290[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DropFocusRange;                                    // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuccessfulAttackWithVictim;                       // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1291[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMontageInstanceEntry>         LungeSuccessful;                                   // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMontageInstanceEntry>         LungeMissed;                                       // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectsOnLungeSuccess;                     // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectsOnLungeMissed;                      // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectsOnLungeCompletedAndMissed;          // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWildlifeMontageInstance* GetDefaultObj();

};

// 0x10 (0x178 - 0x168)
// Class Maneater.DirectionalMontageInstance
class UDirectionalMontageInstance : public UWildlifeMontageInstance
{
public:
	TArray<struct FDirectionalLunges>            DirectionalMontagesToPlay;                         // 0x168(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDirectionalMontageInstance* GetDefaultObj();

};

// 0x70 (0x5A8 - 0x538)
// Class Maneater.ME_NavigationSystem
class UME_NavigationSystem : public UNavigationSystemV1
{
public:
	class UME_PathRequestQueue*                  PathRequestQueue;                                  // 0x538(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1293[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_NavigationSystem* GetDefaultObj();

};

// 0x90 (0x378 - 0x2E8)
// Class Maneater.ME_NutrientCache
class AME_NutrientCache : public AME_ThrashableActor
{
public:
	uint8                                        Pad_1294[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPhysicsStateChanged;                             // 0x2F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bCauseFluidDisturbance;                            // 0x300(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnDeath;                                   // 0x301(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1295[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSubclassOf<class AME_ThrashableActor>, int32> FragmentTypes;                                     // 0x308(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
	class UME_BuoyancyForceComponent*            BuoyancyComponent;                                 // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_DistanceSignificanceComponent*     DistanceSignificanceComponent;                     // 0x360(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1296[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_NutrientCache* GetDefaultObj();

};

// 0x0 (0x378 - 0x378)
// Class Maneater.ME_NutrientCache_Skeletal
class AME_NutrientCache_Skeletal : public AME_NutrientCache
{
public:

	static class UClass* StaticClass();
	static class AME_NutrientCache_Skeletal* GetDefaultObj();

};

// 0x0 (0x378 - 0x378)
// Class Maneater.ME_NutrientCache_Static
class AME_NutrientCache_Static : public AME_NutrientCache
{
public:

	static class UClass* StaticClass();
	static class AME_NutrientCache_Static* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Maneater.ME_ObjectiveConditionBase
class UME_ObjectiveConditionBase : public UObject
{
public:
	class FString                                ActivityTaskId;                                    // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_ObjectiveConditionBase* GetDefaultObj();

	bool ConditionIsValid(class AActor* WorldContextActor);
};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_ObjectiveCondition_GamePercentComplete
class UME_ObjectiveCondition_GamePercentComplete : public UME_ObjectiveConditionBase
{
public:
	float                                        RequiredPercentComplete;                           // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerObjectiveManager> ObjectiveManager;                                  // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1299[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ObjectiveCondition_GamePercentComplete* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_ObjectiveCondition_InfamyRank
class UME_ObjectiveCondition_InfamyRank : public UME_ObjectiveConditionBase
{
public:
	int32                                        InfamyRank;                                        // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_BountyManager>      BountyManager;                                     // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_129B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ObjectiveCondition_InfamyRank* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_ObjectiveCondition_ObjectiveComplete
class UME_ObjectiveCondition_ObjectiveComplete : public UME_ObjectiveConditionBase
{
public:
	enum class EObjectiveProductFilterType       ProductFilter;                                     // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FilterByMap;                                       // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldRegion                      Region;                                            // 0x3A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EObjectiveType                    ObjectiveType;                                     // 0x3B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumberToComplete;                                  // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerObjectiveManager> ObjectiveManager;                                  // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_ObjectiveCondition_ObjectiveComplete* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_ObjectiveCondition_PlayerLevel
class UME_ObjectiveCondition_PlayerLevel : public UME_ObjectiveConditionBase
{
public:
	int32                                        PlayerLevel;                                       // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerSharkCharacter> PlayerShark;                                       // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_129C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ObjectiveCondition_PlayerLevel* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_ObjectiveCondition_RegionPercentComplete
class UME_ObjectiveCondition_RegionPercentComplete : public UME_ObjectiveConditionBase
{
public:
	float                                        RequiredPercentComplete;                           // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldRegion                      Region;                                            // 0x3C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_129D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AME_PlayerObjectiveManager> ObjectiveManager;                                  // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_ObjectiveCondition_RegionPercentComplete* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.ME_ObjectiveCondition_SharkGrowthStageReached
class UME_ObjectiveCondition_SharkGrowthStageReached : public UME_ObjectiveConditionBase
{
public:
	enum class EPlayerGrowthStage                RequiredGrowthStage;                               // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_129E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AME_PlayerSharkState>   SharkState;                                        // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_129F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ObjectiveCondition_SharkGrowthStageReached* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Maneater.ME_ObjectiveCondition_TutorialComplete
class UME_ObjectiveCondition_TutorialComplete : public UME_ObjectiveConditionBase
{
public:
	TWeakObjectPtr<class AME_TutorialManager>    TutorialManager;                                   // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_ObjectiveCondition_TutorialComplete* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Maneater.ME_ObjectiveCondition_ManuallyAdvanceOnly
class UME_ObjectiveCondition_ManuallyAdvanceOnly : public UME_ObjectiveConditionBase
{
public:

	static class UClass* StaticClass();
	static class UME_ObjectiveCondition_ManuallyAdvanceOnly* GetDefaultObj();

};

// 0x8 (0x228 - 0x220)
// Class Maneater.ME_ObjectiveSpawnActor
class AME_ObjectiveSpawnActor : public AActor
{
public:
	uint8                                        Pad_12A1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_ObjectiveSpawnActor* GetDefaultObj();

};

// 0x20 (0x240 - 0x220)
// Class Maneater.ME_OceanBloodDecal
class AME_OceanBloodDecal : public AActor
{
public:
	float                                        TargetDecalScale;                                  // 0x220(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetDecalOpacity;                                // 0x224(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentDecalOpacity;                               // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_OceanBloodDecal* GetDefaultObj();

};

// 0x10 (0x4B0 - 0x4A0)
// Class Maneater.ME_OceanCameraMesh
class UME_OceanCameraMesh : public UStaticMeshComponent
{
public:
	enum class EOceanMeshVisibility              MeshVisibility;                                    // 0x4A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GridSnapSize;                                      // 0x4A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12A5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_OceanCameraMesh* GetDefaultObj();

};

// 0x1C0 (0x3E0 - 0x220)
// Class Maneater.ME_OceanManager
class AME_OceanManager : public AActor
{
public:
	class APhysicsVolume*                        OceanPhysicsVolume;                                // 0x220(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12B3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              OceanSurfaceMaterialInstance;                      // 0x230(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              OceanRoofMaterialInstance;                         // 0x238(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanCameraMesh*                   SurfaceComponentNear;                              // 0x240(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanCameraMesh*                   SurfaceComponentFar;                               // 0x248(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanCameraMesh*                   RoofComponentNear;                                 // 0x250(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanCameraMesh*                   RoofComponentFar;                                  // 0x258(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          OceanMPC;                                          // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollectionInstance*  OceanMPCInstance;                                  // 0x268(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UME_OceanPostProcessComponent*         PostProcessComponent;                              // 0x270(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GlobalWaveDirection;                               // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GlobalWaveSpeed;                                   // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GlobalWaveAmplitude;                               // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceCheck;                                     // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12BB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWaveParameter>                WaveClusters;                                      // 0x290(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWaveSetParameters>            WaveSetOffsetsOverride;                            // 0x2A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12BC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChoppyWaveSize;                                    // 0x2C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChoppyWaveSpeed;                                   // 0x2C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChoppyWaveHeight;                                  // 0x2C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaveChoppinessBias;                                // 0x2CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             WaveChoppinessDimensions;                          // 0x2D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            WaveChoppinessTexture;                             // 0x2D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint8>                                WaveChoppinessPixels;                              // 0x2E0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             WaveModulationMapDimensions;                       // 0x2F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ModulationPower;                                   // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumModulation;                                 // 0x2FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            WaveModulationTexture;                             // 0x300(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint8>                                WaveModulationPixels;                              // 0x308(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FluidUpdateRate;                                   // 0x318(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FluidSurfaceResolution;                            // 0x31C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETextureRenderTargetFormat        FluidSimRenderTargetFormat;                        // 0x320(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETextureRenderTargetFormat        FluidNormalsRenderTargetFormat;                    // 0x321(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12BD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    FluidRippleSplatMaterial;                          // 0x328(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              FluidRippleSplatMID;                               // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    FluidSimMaterial;                                  // 0x338(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    FluidColorSplatMaterial;                           // 0x340(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              FluidColorSplatMID;                                // 0x348(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    FluidNormalMaterial;                               // 0x350(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          FluidParameters;                                   // 0x358(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                FluidHeight0;                                      // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                FluidHeight1;                                      // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                FluidHeight2;                                      // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                FluidHeightNormalRT;                               // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFluidSimNeedsClear;                               // 0x380(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12BE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              FluidSimMID;                                       // 0x388(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              FluidComputeNormalMID;                             // 0x390(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreDistantDisturbances;                        // 0x398(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12BF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FluidHeightState;                                  // 0x39C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12C0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FluidSimSizeInWorld;                               // 0x3B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12C1[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTwTranslucencySortingEnabled;                     // 0x3D8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12C2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_OceanManager* GetDefaultObj();

	bool IsUnderwater(const struct FVector& InLocation);
	float GetWaveModulationAtLocation(struct FVector& Location);
	class UTextureRenderTarget2D* GetFluidHeightRT(int32 Index);
	void CauseFluidDisturbance(const struct FVector& DisturbanceOrigin, float DisturbanceRadius, float DisturbanceIntensity, enum class EFluidEffectType EffectType);
};

// 0x0 (0x288 - 0x288)
// Class Maneater.ME_OceanPhysicsVolume
class AME_OceanPhysicsVolume : public APhysicsVolume
{
public:

	static class UClass* StaticClass();
	static class AME_OceanPhysicsVolume* GetDefaultObj();

};

// 0x10 (0x760 - 0x750)
// Class Maneater.ME_OceanPostProcessComponent
class UME_OceanPostProcessComponent : public UPostProcessComponent
{
public:
	TWeakObjectPtr<class AME_OceanManager>       OceanManager;                                      // 0x750(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12C3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_OceanPostProcessComponent* GetDefaultObj();

};

// 0x0 (0x270 - 0x270)
// Class Maneater.ME_OceanSurfaceEmitter
class AME_OceanSurfaceEmitter : public AEmitter
{
public:

	static class UClass* StaticClass();
	static class AME_OceanSurfaceEmitter* GetDefaultObj();

};

// 0x98 (0x710 - 0x678)
// Class Maneater.ME_OceanSurfaceParticleSystemComponent
class UME_OceanSurfaceParticleSystemComponent : public UParticleSystemComponent
{
public:
	bool                                         bShouldOverrideVelocity;                           // 0x678(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OverrideVelocity;                                  // 0x67C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldOverrideIntensity;                          // 0x688(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12C8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideIntensity;                                 // 0x68C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCalculateSurfaceNormal;                           // 0x690(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SurfaceNormal;                                     // 0x694(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaveModulation;                                    // 0x6A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12CA[0x6C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_OceanSurfaceParticleSystemComponent* GetDefaultObj();

	void SetWakeLowSize(float NewSize);
	void SetWakeLowColor(const struct FVector& NewColor);
	void SetWakeLowAlpha(float NewAlpha);
	float GetWakeLowSize();
	struct FVector GetWakeLowColor();
	float GetWakeLowAlpha();
};

// 0x0 (0x640 - 0x640)
// Class Maneater.ME_OceanTileComponent
class UME_OceanTileComponent : public UHierarchicalInstancedStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class UME_OceanTileComponent* GetDefaultObj();

};

// 0x48 (0x268 - 0x220)
// Class Maneater.ME_OverlapDamageProjectile
class AME_OverlapDamageProjectile : public AActor
{
public:
	float                                        DamageRadius;                                      // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12CB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              ProjectileParticleComponent;                       // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProjectileMovementComponent*          ProjectileMovement;                                // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   DamageEffects;                                     // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        HitActors;                                         // 0x248(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         ProjectileDamageNoise;                             // 0x258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12CC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_OverlapDamageProjectile* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Maneater.ME_ParticleModuleManeaterBase
class UME_ParticleModuleManeaterBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UME_ParticleModuleManeaterBase* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Maneater.ME_ParticleModuleDetachFromOwner
class UME_ParticleModuleDetachFromOwner : public UME_ParticleModuleManeaterBase
{
public:
	struct FRawDistributionFloat                 TimeToDetach;                                      // 0x30(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_ParticleModuleDetachFromOwner* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Maneater.ME_ParticleModuleDynamiclyEnabled
class UME_ParticleModuleDynamiclyEnabled : public UME_ParticleModuleManeaterBase
{
public:
	bool                                         bCanSpawnAboveWater;                               // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanSpawnBelowWater;                               // 0x31(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckOnSpawnOnly;                                 // 0x32(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D0[0xD];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ParticleModuleDynamiclyEnabled* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Maneater.ME_ParticleModuleDynamicTranslucencySort
class UME_ParticleModuleDynamicTranslucencySort : public UME_ParticleModuleManeaterBase
{
public:
	int32                                        TranslucencySortValueAboveWater;                   // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TranslucencySortValueBelowWater;                   // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_ParticleModuleDynamicTranslucencySort* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class Maneater.ME_ParticleModuleFishball
class UME_ParticleModuleFishball : public UME_ParticleModuleManeaterBase
{
public:
	class UAkAudioEvent*                         DisperseAkEvent;                                   // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12D1[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ParticleModuleFishball* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Maneater.ME_ParticleModuleFluidEffect
class UME_ParticleModuleFluidEffect : public UParticleModuleColorBase
{
public:
	enum class EFluidEffectType                  FluidEffectType;                                   // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EffectStrength;                                    // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectRadiusScale;                                 // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEffectsPerUpdate;                               // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_ParticleModuleFluidEffect* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Maneater.ME_ParticleModuleSortValue
class UME_ParticleModuleSortValue : public UME_ParticleModuleManeaterBase
{
public:
	int32                                        TranslucencySortValue;                             // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ParticleModuleSortValue* GetDefaultObj();

};

// 0x238 (0x6D8 - 0x4A0)
// Class Maneater.ME_WeaponComponent
class UME_WeaponComponent : public UStaticMeshComponent
{
public:
	enum class EWeaponType                       WeaponType;                                        // 0x4A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MuzzleSocketName;                                  // 0x4A4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EjectionPortSocketName;                            // 0x4AC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasFiringAnimNotify;                              // 0x4B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideMeshDuringReload;                             // 0x4B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FireRate;                                          // 0x4B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReloadTime;                                        // 0x4BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShotsPerMagazine;                                  // 0x4C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0x4C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Damage;                                            // 0x4C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spread;                                            // 0x4CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ProjectileAdditiveImpulse;                         // 0x4D0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileFireForce;                               // 0x4DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class AActor>, int32>       WeaponProjectiles;                                 // 0x4E0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                             TargetingDelay;                                    // 0x530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserTrackingSpeed;                                // 0x538(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserLockOnThresholdDist;                          // 0x53C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilFullLaserLock;                            // 0x540(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeLaserLockLost;                           // 0x544(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumTargetVelocity;                             // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumVelocityExceededTime;                       // 0x54C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEvadeBreaksLock;                                  // 0x550(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaximumEvadedTime;                                 // 0x554(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockOnPreventsEvade;                              // 0x558(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseTargetingCircleScale;                          // 0x55C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingPctConsideredLocked;                      // 0x560(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasLoopingFireSound;                              // 0x564(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOneFireSoundPerReload;                            // 0x565(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         FireSound_Looping;                                 // 0x568(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         StopFiringSound;                                   // 0x570(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         FireSound;                                         // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RTPCLockOnTimeName;                                // 0x580(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         LockOnSound;                                       // 0x590(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         ReloadSound;                                       // 0x598(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       MuzzleFlash;                                       // 0x5A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           ShellCasingMesh;                                   // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LaserPointerBeamParticle;                          // 0x5B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LaserPointerDotParticle;                           // 0x5B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent> LaserPointerBeamParticleComponent;                 // 0x5C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystemComponent> LaserPointerDotParticleComponent;                  // 0x5C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPassengerPropSetup>           AnimationSets;                                     // 0x5D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDiverPropSetup>               DiverSets;                                         // 0x5E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          MeleeAttackCooldownTimer;                          // 0x608(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UME_AnimInstance_HumanNPC> CastAnimBP;                                        // 0x610(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentBone                   AttachmentBone;                                    // 0x618(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E9[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MeleeAttackDistance;                               // 0x624(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimMontage*>                  MeleeAttackAnimations;                             // 0x628(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeleeDelayTime;                                    // 0x638(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12EA[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinFireForce;                                      // 0x660(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxFireForce;                                      // 0x664(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireForceScale;                                    // 0x668(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RandomFiringOffset;                                // 0x66C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12EC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AME_Character>          MECharacterOwner;                                  // 0x678(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12ED[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanPredictTargetMovement;                         // 0x6C4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12EE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AimPredictionMultiplier;                           // 0x6C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AME_Character>          TargetedActor;                                     // 0x6CC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MeleeAttackCooldown;                               // 0x6D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_WeaponComponent* GetDefaultObj();

	void StartAttackCooldown(float CooldownDuration);
	void SetShowLaserPointer(bool bShowPointer, bool bResetTargeting, float CustomLockOnStartTime);
	void ResetLaserTargeting();
	void PerformFire(const struct FVector& AimDirection, bool bViaAnimNotify);
	void OnMeleeAttackCooldownTimerFinished();
	bool IsCooldownActive();
	bool HasLaserLock();
	bool HasLaser();
	class UME_WeaponComponent* GetWeapon(class USkeletalMeshComponent* Owner);
	class AME_Character* GetTargetedActor();
	struct FVector GetLaserAimDir();
	void Fire(const struct FVector& AimDirection, bool bViaAnimNotify);
	void Drop();
};

// 0x8 (0x6E0 - 0x6D8)
// Class Maneater.ME_PassengerAttachment
class UME_PassengerAttachment : public UME_WeaponComponent
{
public:
	uint8                                        Pad_12EF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_PassengerAttachment* GetDefaultObj();

};

// 0x20 (0x278 - 0x258)
// Class Maneater.ME_PathFollowingComponent
class UME_PathFollowingComponent : public UPathFollowingComponent
{
public:
	uint8                                        Pad_12F0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_PathFollowingComponent* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Maneater.ME_PathRequestQueue
class UME_PathRequestQueue : public UObject
{
public:
	struct FTimerHandle                          DecayQueueHandle;                                  // 0x28(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPathQueueEntry>               PathRequestQueue;                                  // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_PathRequestQueue* GetDefaultObj();

	void DecayQueue();
};

// 0x8 (0x228 - 0x220)
// Class Maneater.ME_PathWisp
class AME_PathWisp : public AActor
{
public:
	class USphereComponent*                      WispHead;                                          // 0x220(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_PathWisp* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_PawnSpawnInterface
class IME_PawnSpawnInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_PawnSpawnInterface* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Maneater.ME_PhysicalImpactResponse
class UME_PhysicalImpactResponse : public UObject
{
public:
	int32                                        GlobalLimit;                                       // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PerObjectLimit;                                    // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProcessScrapes;                                   // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12F2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScrapeAngle;                                       // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12F3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_PhysicalImpactResponse* GetDefaultObj();

	class AME_GameMode* GetManeaterGameMode();
	struct FImpactEffect GetImpactEffects(enum class EPhysicalSurface ImpactingSurface, bool bUnderwater, bool bScrape);
};

// 0x8 (0x88 - 0x80)
// Class Maneater.ME_PhysicalMaterial
class UME_PhysicalMaterial : public UPhysicalMaterial
{
public:
	TSubclassOf<class UME_PhysicalImpactResponse> ImpactResponse;                                    // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_PhysicalMaterial* GetDefaultObj();

};

// 0x30 (0x2770 - 0x2740)
// Class Maneater.ME_PlayerCameraManager
class AME_PlayerCameraManager : public APlayerCameraManager
{
public:
	uint8                                        Pad_12F5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         CameraEnterWaterSound;                             // 0x2748(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         CameraExitWaterSound;                              // 0x2750(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_TransparencyCaptureComponent*      TransparencyCaptureComponent;                      // 0x2758(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12F6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_PlayerCameraManager* GetDefaultObj();

};

// 0xC8 (0xF8 - 0x30)
// Class Maneater.ME_PlayerEvolution
class UME_PlayerEvolution : public UDataAsset
{
public:
	enum class EDLCType                          OwningProduct;                                     // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12F9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  EvolutionName;                                     // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  EvolutionDescription;                              // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EPlayerGrowthStage                MinGrowthStageRequirement;                         // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EEvolutionSlot>            AssociatedSlots;                                   // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEvolutionSetType                 EvolutionSetType;                                  // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GrantsAbility;                                     // 0x81(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12FD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            AbilityIcon;                                       // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  AbilityName;                                       // 0x90(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  AbilityDescription;                                // 0xA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FEvolutionVisualEffect                EquippedVFX;                                       // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                            EvolutionIcon;                                     // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEvolutionEffects>             EvolutionGameplayEffects;                          // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEvolutionUpgradePrice>        EvolutionUpgradePrices;                            // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_PlayerEvolution* GetDefaultObj();

	TArray<struct FEvolutionDisplayStat> GetDisplayStatsForEvolution(float EffectiveLevel, class UME_PlayerEvolution* Evolution, enum class EEvolutionRarity ERarity);
};

// 0x118 (0x140 - 0x28)
// Class Maneater.ME_PlayerObjective
class UME_PlayerObjective : public UObject
{
public:
	uint8                                        Pad_130A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ComparisonId;                                      // 0x40(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UME_ObjectiveConditionBase*>    AvailableConditions;                               // 0x50(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanSaveGame;                                      // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_130C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   NutritionTableRow;                                 // 0x68(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class EObjectiveProductFilterType       ProductFilter;                                     // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EObjectiveType                    Type;                                              // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_130E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Name;                                              // 0x80(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  Description;                                       // 0x98(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  ShortDescription;                                  // 0xB0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  SubtitleText;                                      // 0xC8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FString                                ActivityTaskId;                                    // 0xE0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EObjectiveState                   State;                                             // 0xF0(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWorldRegion                      AssignedRegion;                                    // 0xF1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_130F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CompletionPoints;                                  // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  UnlockNarratorEventName;                           // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartNarratorEventName;                            // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FinishNarratorEventName;                           // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStoryObjective;                                   // 0x110(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1310[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ObjectiveImage;                                    // 0x118(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         AudioLog;                                          // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPLayLogDuringUnlock;                              // 0x128(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnlyPlayLogInMenu;                                // 0x129(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoTrack;                                        // 0x12A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTracked;                                          // 0x12B(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1311[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_InWorldWidgetCreator*              OutOfRegionWidget;                                 // 0x130(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CompletionAchievementName;                         // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_PlayerObjective* GetDefaultObj();

	void SetObjectiveState(enum class EObjectiveState NewState, bool bTriggeredFromLoad, class AActor* WorldContextActor);
	void OnGateActivated(class AActor* ActivatedGate);
	bool IsStoryObjective();
	bool IsComplete();
	bool IsAssociatedWithActor(class AActor* Actor);
	void InitObjectiveFromSave();
	float GetTotalProgressPoints();
	class FText GetSubtitleText();
	class FText GetShortObjectiveDescription();
	class FText GetProgressText();
	enum class EObjectiveProductFilterType GetProductFilterType();
	enum class EObjectiveType GetObjectiveType();
	enum class EObjectiveState GetObjectiveState();
	struct FDataTableRowHandle GetObjectiveRewardsHandle();
	class UTexture2D* GetObjectiveImage();
	class FText GetObjectiveDescription();
	TArray<struct FVector> GetMapLocators();
	float GetCurrentProgressPoints();
	float GetCompletionPercentage();
	enum class EWorldRegion GetAssignedRegion();
	void Cheat_ResetObjective();
	void Cheat_ProgressObjective(int32 Increment);
	void Cheat_LogObjective();
	void Cheat_CompleteObjective();
};

// 0x38 (0x178 - 0x140)
// Class Maneater.ME_ObjectCollectObjective
class UME_ObjectCollectObjective : public UME_PlayerObjective
{
public:
	TArray<enum class EObjectiveProgressState>   SubObjectiveStates;                                // 0x140(0x10)(ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1312[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       SubObjectivePositions;                             // 0x160(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TrackedIndex;                                      // 0x170(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1313[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ObjectCollectObjective* GetDefaultObj();

};

// 0x10 (0x188 - 0x178)
// Class Maneater.ME_PlayerObjectiveLandmark
class UME_PlayerObjectiveLandmark : public UME_ObjectCollectObjective
{
public:
	TArray<struct FLandmarkSubObject>            RequiredActors;                                    // 0x178(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveLandmark* GetDefaultObj();

};

// 0x18 (0x190 - 0x178)
// Class Maneater.ME_PlayerObjectiveNutrientCache
class UME_PlayerObjectiveNutrientCache : public UME_ObjectCollectObjective
{
public:
	TArray<TSoftObjectPtr<class AME_DestructibleActor>> NutrientCaches;                                    // 0x178(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumCachesToTriggerObjective;                       // 0x188(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1314[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveNutrientCache* GetDefaultObj();

};

// 0x18 (0x190 - 0x178)
// Class Maneater.ME_PlayerObjectiveCollectable
class UME_PlayerObjectiveCollectable : public UME_ObjectCollectObjective
{
public:
	TArray<TSoftObjectPtr<class AME_CollectableActor>> AllCollectables;                                   // 0x178(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumCollectablesToTriggerObjective;                 // 0x188(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1315[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveCollectable* GetDefaultObj();

};

// 0x10 (0x188 - 0x178)
// Class Maneater.ME_PlayerObjectiveGrates
class UME_PlayerObjectiveGrates : public UME_ObjectCollectObjective
{
public:
	TArray<TSoftObjectPtr<class AME_DestructibleActor>> AllGrates;                                         // 0x178(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveGrates* GetDefaultObj();

};

// 0x10 (0x188 - 0x178)
// Class Maneater.ME_PlayerObjectiveGates
class UME_PlayerObjectiveGates : public UME_ObjectCollectObjective
{
public:
	TArray<TSoftObjectPtr<class AActor>>         AllGates;                                          // 0x178(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveGates* GetDefaultObj();

};

// 0x28 (0x168 - 0x140)
// Class Maneater.ME_PlayerObjectiveCustom
class UME_PlayerObjectiveCustom : public UME_PlayerObjective
{
public:
	TSoftObjectPtr<class AActor>                 AssociatedActor;                                   // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveCustom* GetDefaultObj();

};

// 0x30 (0x170 - 0x140)
// Class Maneater.ME_PlayerObjectiveGrotto
class UME_PlayerObjectiveGrotto : public UME_PlayerObjective
{
public:
	TSoftObjectPtr<class AActor>                 AssociatedGrotto;                                  // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GrottoPosition;                                    // 0x168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveGrotto* GetDefaultObj();

	TSoftObjectPtr<class AActor> GetAssociatedGrotto();
};

// 0x48 (0x188 - 0x140)
// Class Maneater.ME_PlayerObjectiveCutscene
class UME_PlayerObjectiveCutscene : public UME_PlayerObjective
{
public:
	TSoftObjectPtr<class AActor>                 CutsceneWidgetActor;                               // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CutscenePosition;                                  // 0x168(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TriggerDistance;                                   // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LevelCinematicName;                                // 0x178(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEndBountyWhenTriggered;                           // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1316[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveCutscene* GetDefaultObj();

};

// 0x58 (0x1E0 - 0x188)
// Class Maneater.ME_PlayerObjectiveBoss
class UME_PlayerObjectiveBoss : public UME_PlayerObjectiveCutscene
{
public:
	TSubclassOf<class AME_BoatPawn>              BossBoatClass;                                     // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AME_BoatPawn>            WeakBossBoatClass;                                 // 0x190(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AME_BoatPawn>           BossBoat;                                          // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBossFightSequence                BossFightSequence;                                 // 0x1C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1317[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  BossAnnouncementText;                              // 0x1C8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveBoss* GetDefaultObj();

};

// 0x20 (0x160 - 0x140)
// Class Maneater.ME_PlayerObjectiveDestroyThrashable
class UME_PlayerObjectiveDestroyThrashable : public UME_PlayerObjective
{
public:
	struct FVector                               SpawnPosition;                                     // 0x140(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1318[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AME_ThrashableActor>       SpawnClass;                                        // 0x150(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AME_ThrashableActor>    SpawnedActor;                                      // 0x158(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveDestroyThrashable* GetDefaultObj();

};

// 0xD0 (0xF8 - 0x28)
// Class Maneater.ME_StoryEvent
class UME_StoryEvent : public UObject
{
public:
	TArray<class UME_ObjectiveConditionBase*>    ConditionsToActivate;                              // 0x28(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AME_BoatPawn>              BossBoatClass;                                     // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_BoatPawn>           BossBoat;                                          // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BossAnnouncementText;                              // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AME_BoatPawn>>      EnemiesToSpawn;                                    // 0x58(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LevelCinematicName;                                // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseTriggerLocation;                               // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1319[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TriggerLocation;                                   // 0x74(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerDistance;                                   // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasTriggered;                                     // 0x84(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_131A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayBeforeTriggering;                             // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_131B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  EventTitle;                                        // 0x90(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        EpisodeNumber;                                     // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_131D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ActivityId;                                        // 0xB0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GrottoActivityId;                                  // 0xC0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        ActivityIdsUsedBeforeGrotto;                       // 0xD0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        UnusedActivityIdsForEpisode;                       // 0xE0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsNextEventInAnotherManager;                      // 0xF0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDLCType                          NextEventOwningManagerProduct;                     // 0xF1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_131E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NextEventIndex;                                    // 0xF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_StoryEvent* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Maneater.ME_RegionObjectiveCollection
class UME_RegionObjectiveCollection : public UObject
{
public:
	TArray<class UME_PlayerObjective*>           Objectives;                                        // 0x28(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldRegion                      Region;                                            // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_131F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            RegionIcon;                                        // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_RegionObjectiveCollection* GetDefaultObj();

};

// 0x2C0 (0x4E0 - 0x220)
// Class Maneater.ME_PlayerObjectiveManager
class AME_PlayerObjectiveManager : public AActor
{
public:
	TWeakObjectPtr<class AME_GameMode>           OwningGameMode;                                    // 0x220(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1337[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EBossFightSequence                LastBossKilled;                                    // 0x230(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1338[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PoisonBeginStoryIndex;                             // 0x234(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ObjectiveCompleteDelegate;                         // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            LandmarkFoundDelegate;                             // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ObjectiveStartedDelegate;                          // 0x258(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ObjectiveUpdatedDelegate;                          // 0x268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBossFightAvailableDelegate;                      // 0x278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNutrientCacheDestroyed;                          // 0x288(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ObjectiveStateChangedDelegate;                     // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ObjectiveDiscoveredDelegate;                       // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ObjectiveTrackDelegate;                            // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ObjectiveFirstBossDelegate;                        // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            StoryEventProgressDelegate;                        // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            AdvancedToNextEpisodeDelegate;                     // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            NewQuestAvailableChangedDelegate;                  // 0x2F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            HUDErrorMessageDelegate;                           // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AME_InWorldWidgetCreator>> AllInWorldWidgets;                                 // 0x318(0x10)(ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UME_RegionObjectiveCollection>> Regions;                                           // 0x328(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1339[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UME_PlayerObjective*>           AllObjectives;                                     // 0x348(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_PlayerObjective*>           UnavailableObjectives;                             // 0x358(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_PlayerObjective*>           AvailableObjectives;                               // 0x368(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_PlayerObjective*>           CompletedObjectives;                               // 0x378(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_PlayerObjective*>           TickedObjectives;                                  // 0x388(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UME_StoryEvent*>                StoryEvents;                                       // 0x398(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ActiveStoryIndex;                                  // 0x3A8(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        StoryEventConditionsComplete;                      // 0x3AC(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNewQuestsAvailable;                               // 0x3B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_133B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 ScalyPeteBoat;                                     // 0x3B4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_133C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FConditionStatus>              CachedConditionResults;                            // 0x3C0(0x10)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_133D[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_InWorldWidgetCreator*              PlayerWaypoint;                                    // 0x3F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AME_InWorldWidgetCreator>  PlayerWaypointClass;                               // 0x400(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              WorldMarkerPSC;                                    // 0x408(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       WorldMarkerParticleSystem;                         // 0x410(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AME_InWorldWidgetCreator>  OutOfRegionWidgetClass;                            // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDLCType                          OwningProduct;                                     // 0x420(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_133E[0x57];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftClassPtr<class AME_PlayerObjectiveManager>> OtherManagerClasses;                               // 0x478(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_133F[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_PlayerObjectiveManager* GetDefaultObj();

	void TutorialFinished();
	void StartTimeTrial(class AActor* WorldContextActor, float StartTime, int32 Rings);
	void SetObjectState(class AActor* FoundActor, enum class EObjectiveProgressState EState);
	void SetCustomObjectiveState(enum class EObjectiveState NewState, class AActor* AssociatedActor);
	void OnRingPassed(class AActor* WorldContextActor, float TimeIncrease);
	void OnRegionChanged(enum class EWorldRegion Region, class UTexture2D* RegionIcon);
	void OnPlayerLevelChanged(int32 NewGrowthLevel, bool bChangeFromTheoretical);
	void OnInfamyRankUp(int32 Rank);
	void OnGrowthStageChanged(enum class EPlayerGrowthStage& OldGrowthStage, enum class EPlayerGrowthStage& NewGrowthStage, bool bReinitPose);
	void OnGrottoEntered(class AME_Grotto* ME_Grotto);
	void OnGateActivated(class AActor* ActivatedGate);
	void OnDLCEntitlementStatusInitialized(enum class EDLCType DLCType, bool InitialStatus);
	void OnDLCEntitlementStatusChanged(enum class EDLCType DLCType, bool NewStatus);
	void OnBountyPlacedOnHold();
	void ObjectUnloaded(class AActor* UnloadedActor);
	void ObjectLoaded(class AActor* LoadedActor);
	void LandmarkObjectBitten(class AActor* LandmarkActor);
	bool IsBaseStoryFinished();
	void GetStoryConditionStatus(TArray<struct FConditionStatus>* ConditionResults);
	float GetRegionPercentComplete(enum class EWorldRegion Region);
	enum class EObjectiveProgressState GetObjectState(class AActor* FoundActor);
	class UME_PlayerObjective* GetObjectiveFromActor(class AActor* SearchingActor, enum class EObjectiveType FilterType);
	class UME_PlayerObjective* GetObjectiveById(const struct FGuid& ComparisonId);
	enum class EBossFightSequence GetLastBossKilled();
	float GetGamePercentComplete();
	float GetGameCompletionPercentage();
	float GetEpisodeProgress(int32 StoryIndex);
	int32 GetCurrentStoryIndex();
	void DelayedBossFightAvailableBroadcast(class UME_PlayerObjectiveBoss* BossObjective);
	void CheckNextStoryEvent(bool bForceAdvanceStoryCheck);
	void Cheat_ResetObjective(class FName ObjName);
	void Cheat_ProgressObjective(class FName ObjName, int32 Increment);
	void Cheat_CompleteObjective(class FName ObjName);
	void AdvanceToNextStoryEvent();
};

// 0xD8 (0x650 - 0x578)
// Class Maneater.ME_PlayerSharkController
class AME_PlayerSharkController : public APlayerController
{
public:
	uint8                                        Pad_1342[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         PauseAllAudio;                                     // 0x580(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         ResumeAllAudio;                                    // 0x588(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAIProximityCache>             NearbyAIs;                                         // 0x590(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFirstPossession;                                  // 0x5A0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1343[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_WorldMapWidget*                    WorldMapWidget;                                    // 0x5A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1344[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCinematicModeChanged;                            // 0x5D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1345[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         BeachCrowdAsset;                                   // 0x600(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          BeachCrowdComponent;                               // 0x608(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugCrowdPosition;                               // 0x610(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1346[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PreviousAveragedPosition;                          // 0x614(0xC)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CrowdPositionInterpSpeed;                          // 0x620(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HighestHumanAlertLevel;                            // 0x624(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1347[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_PlayerSharkController* GetDefaultObj();

	void SetHUDVisibilityChanged(bool bVisible);
	void ReceivePostInitializeComponents();
	void OnRevealMap(struct FVector& MapLocation, float Radius, float Intensity);
	void OnPossessedPawn(class AME_PlayerSharkCharacter* PlayerPawn);
	void OnPlayerDied(class AME_PlayerSharkCharacter* PlayerPawn);
	bool IsCinematicMode();
	void GetKeysForAction(class FName ActionName, TArray<struct FInputActionKeyMapping>* Bindings);
};

// 0xB8 (0x8A0 - 0x7E8)
// Class Maneater.ME_PlayerSharkMovementComponent
class UME_PlayerSharkMovementComponent : public UME_AnimalMovementComponent
{
public:
	bool                                         IsCruisingWaterLine;                               // 0x7E8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1348[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaterSurfaceLockMaxRequiredAngle;                  // 0x7EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterSurfaceLockMinRequiredAngle;                  // 0x7F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1349[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CruisingWaterInputDeadzone;                        // 0x7F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterSurfaceEntryDistance;                         // 0x7FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_134B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            WaterEnteredDelegate;                              // 0x808(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            WaterBreachDelegate;                               // 0x818(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSwimmingToBreachDelegate;                        // 0x828(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerMovementModeChangedDelegate;               // 0x838(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        AirbornVelocityLimitMultiplier;                    // 0x848(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_134C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BoatFriction;                                      // 0x854(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeForForcedSurfaceLock;                          // 0x858(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpeedForSurfaceLock;                            // 0x85C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinZSpeedForSurfaceLock;                           // 0x860(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDeltaDotForReentryVelocityMult;                 // 0x864(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDeltaDotForReentryVelocityMult;                 // 0x868(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinReentryVelocityMult;                            // 0x86C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxReentryVelocityMult;                            // 0x870(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_134D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AME_PlayerSharkCharacter*              SharkOwner;                                        // 0x878(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           BreachAngleAdjustmentCurve;                        // 0x880(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_134E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_PlayerSharkMovementComponent* GetDefaultObj();

	void SetCrusingWaterLine(bool bNewCrusingWaterline, enum class ECharacterActionMode ChangeContext);
};

// 0x450 (0x770 - 0x320)
// Class Maneater.ME_PlayerSharkState
class AME_PlayerSharkState : public APlayerState
{
public:
	uint8                                        Pad_137B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnExperienceGained;                                // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNutrientsGained;                                 // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNutrientsSpent;                                  // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerLevelChanged;                              // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGrowthStageChanged;                              // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGrowthStageAvailable;                            // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        CurrentProteinReserve;                             // 0x388(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentFatReserve;                                 // 0x38C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMineralReserve;                             // 0x390(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMutagenReserve;                             // 0x394(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentExpAmount;                                  // 0x398(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentPlayerLevel;                                // 0x39C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CumulativeXPGainedFromObjectives;                  // 0x3A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CumulativeXPGainedFromBounties;                    // 0x3A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CumulativeXPGainedFromEating;                      // 0x3A8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CumulativeXPGainedFromLandmarks;                   // 0x3AC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CumulativeXPGainedFromCaches;                      // 0x3B0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CumulativeXPGainedFromCollectables;                // 0x3B4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CumulativeXPGainedFromCheats;                      // 0x3B8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerGrowthStage                GrowthStageBehindTheScenesLevel;                   // 0x3BC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TheoreticalPlayerLevel;                            // 0x3C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerGrowthStage                CurrentGrowthStage;                                // 0x3C4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSharkEvolutionSettings>       EvolutionStageSettings;                            // 0x3C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWaypointDestroyed;                               // 0x3D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AME_WaypointMarker>        WaypointMarkerClass;                               // 0x3E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AME_WaypointMarker*                    CurrentWayPoint;                                   // 0x3F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DesiredRespawnLocation;                            // 0x3F8(0xC)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DesiredRespawnRotation;                            // 0x404(0xC)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        CurrentRegionIndex;                                // 0x410(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentGrotto;                                     // 0x418(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpeciesStatBinding                   PlayerStats;                                       // 0x420(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStatChanged;                                     // 0x430(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AME_PlayerSharkCharacter*              PlayerSharkPawn;                                   // 0x440(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExperienceLevelRequirements;                       // 0x448(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CameraArmLengthPerLevel;                           // 0x468(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CameraArmMinLengthPerLevel;                        // 0x488(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CameraZSocketOffsetByLevel;                        // 0x4A8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterLineCruiseHeightPerLevel;                     // 0x4C8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        KnifingSnapDistanceFromLevel;                      // 0x4E8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CameraFOVFromLevel;                                // 0x508(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CameraLagSpeedFromLevel;                           // 0x528(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSwimSpeedFromLevel;                             // 0x548(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSafeGameplaySpeedFromLevel;                     // 0x568(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PerchRadiusThreshold;                              // 0x588(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxAggroWildlifeFromLevel;                         // 0x5A8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UME_GameplayEffect>> LevelUpGameplayEffect;                             // 0x5C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UME_PlayerEvolution*, struct FEvolutionData> EvolutionInventoryData;                            // 0x5D8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
	TMap<enum class EEvolutionSlot, class UME_PlayerEvolution*> SlottedEvolutions;                                 // 0x628(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
	class UDataTable*                            EvolutionSetBonusDataTable;                        // 0x678(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            EvolutionListDataTable;                            // 0x680(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_137F[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnInventoryEvolutionChanged;                       // 0x728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSlottedEvolutionChanged;                         // 0x738(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEvolutionInventoryLoaded;                        // 0x748(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UME_PlayerEvolution*                   TigerSharkEvolution;                               // 0x758(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1380[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_PlayerSharkState* GetDefaultObj();

	class AME_WaypointMarker* SetWaypoint(class AActor* TargetActor, const struct FVector& TargetLocation);
	void SetTeleporterDestination(const struct FVector& Location, const struct FRotator& Rotation);
	void SetStat(enum class EPersistentStatType StatToModify, int32 NewValue);
	bool SetSlottedEvolution(enum class EEvolutionSlot EvolutionSlot, class UME_PlayerEvolution* Evolution);
	void SetRespawnLocation(struct FVector& NewRespawnLocation, const struct FRotator& NewRespawnRotation, bool bSaveGame);
	void SetNewEvolution(class UME_PlayerEvolution* Evolution, bool bIsNewEvolution);
	void SetInventoryEvolutionEquipped(class UME_PlayerEvolution* Evolution, enum class EEvolutionSlot AssignedSlot);
	void SetHasNewEvolutionAvailable(bool bAvailable);
	void SetGrowthStage(enum class EPlayerGrowthStage NewGrowthStage, bool bReinitPose);
	void SetGrowthLevel(int32 NewGrowthLevel, bool ForceGrowth, bool bCauseGameSave, bool bChangeFromTheoretical);
	void RemoveWaypoint();
	bool RemoveInventoryEvolution(class UME_PlayerEvolution* ToBeRemovedEvolution);
	void ReceiveBountyChange(float NewBountyDollars, class AActor* BountyChangeInstigator);
	bool PurchaseInventoryEvolutionUpgrade(class UME_PlayerEvolution* Evolution);
	void OnWorldRegionChanged(class AME_WorldRegionVolume* NewRegion);
	void OnPlayerBountyChanged(float NewBountyDollars, class AActor* BountyChangeInstigator);
	void OnNutrientsChanged(int32 NutrientDelta, enum class ENutrientType& NutrientType);
	void OnIncreasedGrowthStage(enum class EPlayerGrowthStage& NewGrowthStage);
	void OnGainedGrowthLevel(int32 NewGrowthLevel);
	int32 ModifyStat(enum class EPersistentStatType StatToModify, int32 ValueChange);
	void ModifyGrowthStage(int32 GrowthChange);
	void ModifyGrowthLevel(int32 GrowthLevelChange);
	bool LevelUpRequiresGrowth(int32 NewGrowthLevel);
	bool IsInstigatingAnyAlerts();
	bool IsGrowthStageAvailable();
	bool IsEvolutionEquip(class UME_PlayerEvolution* Evolution);
	class UME_PlayerEvolution* GetSlottedEvolution(enum class EEvolutionSlot EvolutionSlot);
	struct FTransform GetRespawnTransform();
	struct FVector GetRespawnLocation();
	int32 GetNumberOfSetItemsEquippedByType(enum class EEvolutionSetType EType);
	int32 GetMinGrowthLevel();
	int32 GetMaxGrowthLevel();
	void GetInventoryEvolutions(TArray<class UME_PlayerEvolution*>* Evolutions, enum class EEvolutionSlot SlotTypeFilter);
	bool GetInventoryEvolutionData(class UME_PlayerEvolution* Evolution, struct FEvolutionData* OutEvolutionData);
	bool GetHasNewEvolutionAvailable();
	float GetGrowthPct(bool bRelativeToNextStage);
	class FText GetEvolutionSetName(enum class EEvolutionSetType EType);
	TArray<class UME_PlayerEvolution*> GetEvolutionsBelongingToSet(enum class EEvolutionSetType EType);
	TArray<struct FEvolutionDisplayStat> GetDisplayStatsForEvolutionSetBonus(enum class EEvolutionSetType EType, int32 NumEquip);
	void DeductNutrientCost(struct FEvolutionUpgradeCost& UpgradeCost);
	void ClearTeleporterDestination();
	void CheckAndGrantPlayerEntitlements();
	bool CanPurchaseEvolutionUpgrade(struct FEvolutionUpgradePrice& UpgradePrice);
	bool CanAffordEvolutionCost(struct FEvolutionUpgradeCost& UpgradeCost);
	bool AddInventoryEvolution(class UME_PlayerEvolution* NewEvolution, enum class EEvolutionRarity Rarity);
	void AcceptGrowthStageAtGrotto(enum class EPlayerGrowthStage PlayerGrowthStage);
};

// 0xC0 (0x170 - 0xB0)
// Class Maneater.ME_PlayerTargetingSystem
class UME_PlayerTargetingSystem : public UActorComponent
{
public:
	TArray<struct FME_DotProductToDistance>      DotToDistanceArray;                                // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FME_DotProductToDistance>      PrioritizedDotToDistanceArray;                     // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1385[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EOutlineColor                     CurrentWhipshotTargetColor;                        // 0xDC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOutlineColor                     CurrentFocusedObjectiveColor;                      // 0xDD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOutlineColor                     AlertedColor;                                      // 0xDE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1387[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSoftTargetChangedEvent;                          // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRelevantTargetChangedEvent;                      // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 CurrentFocusedObjectiveTarget;                     // 0x100(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 CurrentFocusedTarget;                              // 0x108(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 CurrentLockOnTarget;                               // 0x110(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 CurrentSoftLockOnTarget;                           // 0x118(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 CurrentWhipShotTarget;                             // 0x120(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FME_TargetableActorData>       PotentialTargets;                                  // 0x128(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FME_TargetableActorData>       PotentialObjectiveTargets;                         // 0x138(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AME_PlayerSharkCharacter*              ME_PlayerSharkCharacter;                           // 0x148(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSoftLockEnabled;                                  // 0x150(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1389[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WorldDistanceWeight;                               // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DotProductWeight;                                  // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LandTargetDistanceMultiplier;                      // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TickRate;                                          // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_138A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LowHealthThreshold;                                // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPackWeightModifier;                          // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_PlayerTargetingSystem* GetDefaultObj();

	void SetShowSilhouette(class AActor* PingTarget, bool bShow, enum class EOutlineColor ForcedOutlineColor);
	void RemovePotentialTarget(class AActor* Actor);
	struct FVector GetSoftLockOnTargetLocation();
	struct FVector GetLockOnTargetLocation();
	struct FVector GetFocusedTargetLocation();
	class AActor* GetCurrentWhipShotTarget();
	class AActor* GetCurrentSoftLockOnTarget();
	class AActor* GetCurrentLockOnTarget();
	class AActor* GetCurrentFocusedTarget();
	class AActor* GetCurrentFocusedObjectiveTarget();
	void AddPotentialTarget(class AActor* Actor, bool bOnlyWhipshotTarget, bool bIsObjectiveTarget);
};

// 0x8 (0x228 - 0x220)
// Class Maneater.ME_PlayerUIAvatarActor
class AME_PlayerUIAvatarActor : public AActor
{
public:
	class USceneCaptureComponent2D*              AvatarSceneCapture;                                // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_PlayerUIAvatarActor* GetDefaultObj();

	void ReceivePostInitializeComponents();
};

// 0x0 (0xAE0 - 0xAE0)
// Class Maneater.ME_PlayerUIAvatarMeshComponent
class UME_PlayerUIAvatarMeshComponent : public USkeletalMeshComponent
{
public:

	static class UClass* StaticClass();
	static class UME_PlayerUIAvatarMeshComponent* GetDefaultObj();

};

// 0x50 (0x270 - 0x220)
// Class Maneater.ME_Projectile
class AME_Projectile : public AActor
{
public:
	class UParticleSystemComponent*              BubbleTrailComponent;                              // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SphereComponent;                                   // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProjectileMovementComponent*          ProjectileMovement;                                // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         ProjectileAmbientMovementSound;                    // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachOnHit;                                      // 0x248(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanHitVehicles;                                   // 0x249(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_138B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   DamageEffects;                                     // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AME_ExplosionActor>        ExplosionActorClass;                               // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRange;                                          // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysShowBubbleTrail;                            // 0x26C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_138C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_Projectile* GetDefaultObj();

	void OnPhysicsVolumeChanged(class APhysicsVolume* NewVolume);
	void OnHitActor(class AActor* HitActor);
};

// 0x10 (0x1E0 - 0x1D0)
// Class Maneater.ME_ProjectileMovementComponent
class UME_ProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	uint8                                        Pad_138E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_ProjectileMovementComponent* GetDefaultObj();

};

// 0x28 (0x3B8 - 0x390)
// Class Maneater.ME_ProximityBomb
class AME_ProximityBomb : public AME_ExplodingBarrelBase
{
public:
	float                                        DetectionRadius;                                   // 0x390(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1390[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       CleanupRadius;                                     // 0x398(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutomaticallyHandleDespawning;                    // 0x3A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1391[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_ProximityBomb* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.ME_SaveObjectBase
class UME_SaveObjectBase : public USaveGame
{
public:
	uint8                                        Pad_1393[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SaveObjectBase* GetDefaultObj();

	void SetDirty();
	void SetClean();
	bool IsDirty();
};

// 0x110 (0x140 - 0x30)
// Class Maneater.ME_SaveGameObject
class UME_SaveGameObject : public UME_SaveObjectBase
{
public:
	float                                        TotalPlayTime;                                     // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerLevel;                                       // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StoryLineProgress;                                 // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  StoryChapterName;                                  // 0x40(0x18)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	struct FDateTime                             SaveTimestamp;                                     // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastRestartMap;                                    // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LastRestartLocation;                               // 0x78(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139C[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, int32>                     NarratorHistory;                                   // 0xA8(0x50)(Edit, EditConst, NativeAccessSpecifierPrivate)
	TArray<class FName>                          UnlockedAchievements;                              // 0xF8(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          UnlockedAchievementsThisPlay;                      // 0x108(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        TopLevelActivities;                                // 0x118(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        InProgressActivities;                              // 0x128(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_139E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EEvolutionRarity                  ETigerSharkEvolutonRarity;                         // 0x13E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_139F[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SaveGameObject* GetDefaultObj();

	void SetTigerSkinEvolutionRarity(enum class EEvolutionRarity ERarity);
	bool SaveObject(class UObject* ObjectToSave, class UWorld* GameWorld);
	bool SaveActorWithTransform(class AActor* ActorToSave);
	bool RemoveSavedObject(class UObject* ObjectToRemove);
	bool LoadObjectProperties(class UObject* ObjectToLoad, class UWorld* GameWorld, bool bOnlyClassMustMatch);
	TArray<class UObject*> LoadAllObjectsOfClass(class UClass* ClassToLoad, class UObject* WorldContextObject);
	TArray<class AActor*> LoadAllActorsWithTransform(class UClass* ClassToLoad, class UObject* WorldContextObject);
	class AActor* LoadActorWithTransform(const class FString& ActorName, class UObject* WorldContextObject);
	enum class EEvolutionRarity GetTigerSkinEvolutionRarity();
};

// 0xD8 (0x108 - 0x30)
// Class Maneater.ME_SaveProfileObject
class UME_SaveProfileObject : public UME_SaveObjectBase
{
public:
	int32                                        PreviouslySelectedSlot;                            // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LastTimeStampWhenSaved;                            // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, int32>                     SavedTutorials;                                    // 0x40(0x50)(NativeAccessSpecifierPublic)
	class FString                                ProfileName;                                       // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          StatNames;                                         // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerPersistentStat>         GlobalStats;                                       // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ControlScheme;                                     // 0xC0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertMouseY;                                     // 0xC4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertGamepadY;                                   // 0xC5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeftStickSensitivity;                              // 0xC8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightStickSensitivity;                             // 0xCC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseSensitivity;                                  // 0xD0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        DEV_BoostType;                                     // 0xD4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B8[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MasterVolume;                                      // 0xE8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SfxVolume;                                         // 0xEC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MusicVolume;                                       // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DialogVolume;                                      // 0xF4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NarratorVolume;                                    // 0xF8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RaytracingQuality;                                 // 0xFC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSubtitlesEnabled;                                 // 0x100(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bControllerVibrationEnabled;                       // 0x101(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTutorialPopupEnabled;                             // 0x102(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B9[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SaveProfileObject* GetDefaultObj();

	void SetTutorialPopupEnabled(bool bEnable);
	void SetSubtitlesEnabled(bool bEnable);
	void SetSfxVolume(float Val);
	void SetRightStickSensitivity(float Sensitivity);
	void SetRaytracingQuality(int32 Quality);
	void SetNarratorVolume(float Val);
	void SetMusicVolume(float Val);
	void SetMouseSensitivity(float Sensitivity);
	void SetMasterVolume(float Val);
	void SetLeftStickSensitivity(float Sensitivity);
	void SetInvertMouseYEnabled(bool bEnable);
	void SetInvertMouseY(bool Val);
	void SetInvertGamepadYEnabled(bool bEnable);
	void SetInvertGamepadY(bool Val);
	void SetDialogVolume(float Val);
	void SetControlScheme(int32 Idx);
	void SetControllerVibrationEnabled(bool bEnable);
	bool IsMouseYInverted();
	bool IsInvertMouseYEnabled();
	bool IsInvertGamepadYEnabled();
	bool IsGamepadYInverted();
	bool GetTutorialPopupEnabled();
	bool GetSubtitlesEnabled();
	float GetSfxVolume();
	float GetRightStickSensitivity();
	int32 GetRaytracingQuality();
	float GetNarratorVolume();
	float GetMusicVolume();
	float GetMouseSensitivity();
	float GetMinStickSensitivity();
	float GetMinMouseSensitivity();
	float GetMaxStickSensitivity();
	float GetMaxMouseSensitivity();
	float GetMasterVolume();
	float GetLeftStickSensitivity();
	float GetDialogVolume();
	int32 GetControlScheme();
	bool GetControllerVibrationEnabled();
	void DEV_SetBoostType(uint8 Idx);
	uint8 DEV_GetBoostType();
	void ApplyAudioSettings();
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_SaveSystemStatics
class UME_SaveSystemStatics : public UObject
{
public:

	static class UClass* StaticClass();
	static class UME_SaveSystemStatics* GetDefaultObj();

	bool SaveCurrentlyActiveProfileData(class UObject* WorldContextObject);
	bool SaveCurrentlyActiveGameToSlot(class UObject* WorldContextObject, bool bForceFlush);
	class UME_SaveGameObject* PeekSaveGameSlot(int32 Slot, class UObject* WorldContextObject);
	class UME_SaveGameObject* LoadSaveGameSlot(int32 Slot, class UObject* WorldContextObject);
	class UME_SaveProfileObject* LoadProfileData(class UObject* WorldContextObjet);
	class FString GetSaveName(int32 Slot);
	class UME_SaveGameObject* GetSaveGameInstance(class UObject* WorldContextObject);
	struct FDateTime GetSavedProfileTimeStamp(class UObject* WorldContextObject);
	class FString GetSavedProfileDir();
	class UME_SaveProfileObject* GetProfileSaveInstance(class UObject* WorldContextObject);
	int32 GetPreviouslyLoadedSaveSlot(class UObject* WorldContextObject);
	bool DestroySaveGameInstance(class UObject* WorldContextObject);
	bool DeleteSaveGameSlot(int32 Slot, class UObject* WorldContextObject);
	bool CurrentPlayerDoesSlotHaveSave(int32 Slot, class UObject* WorldContextObject);
};

// 0x18 (0x288 - 0x270)
// Class Maneater.ME_SignificanceEmitter
class AME_SignificanceEmitter : public AEmitter
{
public:
	uint8                                        Pad_13C5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bKillParticlesWhenInsignificant;                   // 0x280(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13C6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_SignificanceEmitter* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_SignificanceEntity
class IME_SignificanceEntity : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_SignificanceEntity* GetDefaultObj();

	void PostSignificance(class UObject* SignificanceObject, float OldSignificance, float NewSignificance, bool bUnregistered);
	float CalculateSignificance(class UObject* SignificanceObject, struct FTransform& ViewPoint);
};

// 0x10 (0x130 - 0x120)
// Class Maneater.ME_SignificanceManager
class UME_SignificanceManager : public USignificanceManager
{
public:
	float                                        MaxAIWeight;                                       // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13CA[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SignificanceManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_SonarDetectableInterface
class IME_SonarDetectableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_SonarDetectableInterface* GetDefaultObj();

	void OnPlayerFocused();
	void OnPingedByPlayerSonar();
	void OnFoundBySonar();
	class UWidgetComponent* GetSonarWidget(bool bForce);
	float GetMaxDistanceVisible();
	class FText GetFriendlyName();
	int32 GetFocusPriority();
	int32 GetDisplayLevel();
	struct FVector GetDetectableLocation(struct FVector& AttackerLocation);
	struct FVector GetDetectableComponentLocationOffset();
	class UPrimitiveComponent* GetDetectableComponent();
	bool CanBeLockedOnTo();
	bool CanBeFocused();
};

// 0x90 (0x2B0 - 0x220)
// Class Maneater.ME_SonarManager
class AME_SonarManager : public AActor
{
public:
	uint8                                        Pad_13CD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSonarTargetEvent;                                // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSonarUntargetEvent;                              // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSonarRefreshTargetEvent;                         // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_13CE[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_SonarManager* GetDefaultObj();

	void OnCinematicModeChanged(bool bCinematicMode);
};

// 0x0 (0xB0 - 0xB0)
// Class Maneater.ME_SpawnActorVisualizerComponent
class UME_SpawnActorVisualizerComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UME_SpawnActorVisualizerComponent* GetDefaultObj();

};

// 0x68 (0x1A8 - 0x140)
// Class Maneater.ME_SpawningObjectiveBase
class UME_SpawningObjectiveBase : public UME_PlayerObjective
{
public:
	float                                        DespawnDistance;                                   // 0x140(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13D0[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnDistance;                                     // 0x168(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D1[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpawnNarratorEventName;                            // 0x19C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawningObjectiveBase* GetDefaultObj();

};

// 0x98 (0x240 - 0x1A8)
// Class Maneater.ME_KillObjective
class UME_KillObjective : public UME_SpawningObjectiveBase
{
public:
	struct FSpawnObjectiveInfo                   SpawnInfo;                                         // 0x1A8(0x68)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ApexName;                                          // 0x210(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            ApexImage;                                         // 0x228(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ApexPosition;                                      // 0x230(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDiscovered;                                       // 0x23C(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D6[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_KillObjective* GetDefaultObj();

};

// 0x28 (0x1D0 - 0x1A8)
// Class Maneater.ME_HighValueTargetObjective
class UME_HighValueTargetObjective : public UME_SpawningObjectiveBase
{
public:
	TArray<struct FSpawnObjectiveInfo>           SpawnInfo;                                         // 0x1A8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpawnObjectiveInfo>           AvailableSpawnInfo;                                // 0x1B8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ActiveSpawnInfo;                                   // 0x1C8(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HVTsToComplete;                                    // 0x1CC(0x4)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_HighValueTargetObjective* GetDefaultObj();

};

// 0x70 (0x218 - 0x1A8)
// Class Maneater.ME_AreaSpawnObjective
class UME_AreaSpawnObjective : public UME_SpawningObjectiveBase
{
public:
	TArray<struct FSpawnObjectiveInfo>           SpawnInfo;                                         // 0x1A8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TargetKillCount;                                   // 0x1B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                CompletedSubObjectives;                            // 0x1C0(0x10)(ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EObjectiveProgressState>   SubObjectiveStates;                                // 0x1D0(0x10)(ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                SubObjectiveRemaining;                             // 0x1E0(0x10)(ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       SubObjectivePositions;                             // 0x1F0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ActiveSpawnIndex;                                  // 0x200(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13DA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AME_AIController>> SpawnedControllers;                                // 0x208(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UME_AreaSpawnObjective* GetDefaultObj();

};

// 0x0 (0x218 - 0x218)
// Class Maneater.ME_HuntObjective
class UME_HuntObjective : public UME_AreaSpawnObjective
{
public:

	static class UClass* StaticClass();
	static class UME_HuntObjective* GetDefaultObj();

};

// 0x0 (0x218 - 0x218)
// Class Maneater.ME_PlayerObjectiveTerrorize
class UME_PlayerObjectiveTerrorize : public UME_AreaSpawnObjective
{
public:

	static class UClass* StaticClass();
	static class UME_PlayerObjectiveTerrorize* GetDefaultObj();

};

// 0x0 (0x218 - 0x218)
// Class Maneater.ME_PlayerObjectivePopulationControl
class UME_PlayerObjectivePopulationControl : public UME_AreaSpawnObjective
{
public:

	static class UClass* StaticClass();
	static class UME_PlayerObjectivePopulationControl* GetDefaultObj();

};

// 0x18 (0x238 - 0x220)
// Class Maneater.ME_SpawnManagerBase
class AME_SpawnManagerBase : public AActor
{
public:
	TWeakObjectPtr<class AME_PlayerSharkCharacter> PlayerShark;                                       // 0x220(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AME_AIController>> CurrentAIList;                                     // 0x228(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AME_SpawnManagerBase* GetDefaultObj();

	void AISpawned(class AME_AIController* AIC);
};

// 0xA0 (0x2D8 - 0x238)
// Class Maneater.ME_ObjectiveSpawnManager
class AME_ObjectiveSpawnManager : public AME_SpawnManagerBase
{
public:
	uint8                                        Pad_13DE[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_ObjectiveSpawnManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_SpawnlistCondition
class UME_SpawnlistCondition : public UObject
{
public:

	static class UClass* StaticClass();
	static class UME_SpawnlistCondition* GetDefaultObj();

	bool ConditionIsValid(class AActor* WorldContextActor);
};

// 0x8 (0x30 - 0x28)
// Class Maneater.ME_SpawnListCondition_ActiveBounty
class UME_SpawnListCondition_ActiveBounty : public UME_SpawnlistCondition
{
public:
	float                                        bInverseCondition;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13E2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawnListCondition_ActiveBounty* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.ME_SpawnListCondition_BossIsActive
class UME_SpawnListCondition_BossIsActive : public UME_SpawnlistCondition
{
public:
	float                                        bInverseCondition;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13E3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawnListCondition_BossIsActive* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.ME_SpawnListCondition_IgnoreForObjective
class UME_SpawnListCondition_IgnoreForObjective : public UME_SpawnlistCondition
{
public:
	float                                        bUseObjectiveSpawnManager;                         // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13E4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawnListCondition_IgnoreForObjective* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Maneater.ME_SpawnListCondition_MaxInPlay
class UME_SpawnListCondition_MaxInPlay : public UME_SpawnlistCondition
{
public:
	float                                        MaxInPlay;                                         // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumInPlay;                                         // 0x2C(0x4)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        bPrioritySpawn;                                    // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13E6[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawnListCondition_MaxInPlay* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.ME_SpawnListCondition_PoisonedWater
class UME_SpawnListCondition_PoisonedWater : public UME_SpawnlistCondition
{
public:
	float                                        bInverseCondition;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13E7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawnListCondition_PoisonedWater* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Maneater.ME_SpawnListCondition_StorylineProgress
class UME_SpawnListCondition_StorylineProgress : public UME_SpawnlistCondition
{
public:
	int32                                        MinimumStorylineProgress;                          // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumStorylineProgress;                          // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_PlayerObjectiveManager> ObjectiveManager;                                  // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UME_SpawnListCondition_StorylineProgress* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.ME_SpawnListCondition_TimeOfDay
class UME_SpawnListCondition_TimeOfDay : public UME_SpawnlistCondition
{
public:
	float                                        StartTime;                                         // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndTime;                                           // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_SpawnListCondition_TimeOfDay* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.ME_SpawnListCondition_TutorialComplete
class UME_SpawnListCondition_TutorialComplete : public UME_SpawnlistCondition
{
public:
	TWeakObjectPtr<class AME_TutorialManager>    TutorialManager;                                   // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_SpawnListCondition_TutorialComplete* GetDefaultObj();

};

// 0x78 (0x2B0 - 0x238)
// Class Maneater.ME_SpawnManager
class AME_SpawnManager : public AME_SpawnManagerBase
{
public:
	int32                                        MaxProxMines;                                      // 0x238(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13EC[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMESpawnerInfo>                ManagedSpawners;                                   // 0x258(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnsPerFrame;                                 // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13ED[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            BaseGamePoolTable;                                 // 0x278(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DLC01PoolTable;                                    // 0x280(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13EE[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_SpawnManager* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Maneater.ME_SpawnPool
class UME_SpawnPool : public UObject
{
public:
	TArray<class AActor*>                        AllSpawnedActors;                                  // 0x28(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13F0[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawnPool* GetDefaultObj();

	void RemoveActorClassFromPool(class UClass* ActorClass);
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_SpawnPoolEntity
class IME_SpawnPoolEntity : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IME_SpawnPoolEntity* GetDefaultObj();

	void ResetEntity();
	bool IsExemptFromPool();
	bool IsDespawning();
	void InitEntity();
	void EntityDespawned();
};

// 0x10 (0x40 - 0x30)
// Class Maneater.ME_SpawnData
class UME_SpawnData : public UDataAsset
{
public:
	TArray<struct FSpawnDataEntry>               SpawnDataList;                                     // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_SpawnData* GetDefaultObj();

};

// 0xD0 (0xF8 - 0x28)
// Class Maneater.ME_SpawnVolumeCollection
class UME_SpawnVolumeCollection : public UObject
{
public:
	uint8                                        Pad_13F4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                CachedNextSpawn;                                   // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13F5[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bObjectiveVolumeCollection;                        // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13F6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SignificanceMod;                                   // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsExplorable;                                     // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13F7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnListEntry>               SpawnLists;                                        // 0x70(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13F8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AME_SpawnVolume>> OwnedVolumes;                                      // 0x90(0x10)(ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13F9[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FilteredSpawnPercentage;                           // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FilterDelay;                                       // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13FA[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawnVolumeCollection* GetDefaultObj();

};

// 0x60 (0x2D8 - 0x278)
// Class Maneater.ME_SpawnVolume
class AME_SpawnVolume : public AVolume
{
public:
	class UME_SpawnVolumeCollection*             OwningCollection;                                  // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13FB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AIDensity;                                         // 0x288(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13FC[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExpectedMaxAICount;                                // 0x2A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequiresUniqueCollection;                         // 0x2A4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SignificanceMod;                                   // 0x2A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsExplorableSpawner;                              // 0x2AC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnListEntry>               SpawnLists;                                        // 0x2B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       GridSpawnPoints;                                   // 0x2C0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bObjectiveVolume;                                  // 0x2D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13FF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_SpawnVolume* GetDefaultObj();

};

// 0x68 (0x160 - 0xF8)
// Class Maneater.ME_SpawnVolumeCollection_Beachgoer
class UME_SpawnVolumeCollection_Beachgoer : public UME_SpawnVolumeCollection
{
public:
	TArray<struct FBeachActivityEntry>           CollectionActivities;                              // 0xF8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1400[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_SpawnVolumeCollection_Beachgoer* GetDefaultObj();

};

// 0x68 (0x340 - 0x2D8)
// Class Maneater.ME_SpawnVolume_Beachgoer
class AME_SpawnVolume_Beachgoer : public AME_SpawnVolume
{
public:
	TArray<struct FBeachActivityEntry>           ValidActivities;                                   // 0x2D8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnRotationType                SpawnRotation;                                     // 0x2E8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1401[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 SpawnRotationActor;                                // 0x2F0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AMEEscapeVolume>> ForcedEscapeVolumes;                               // 0x318(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AMEEscapeVolume>> ExcludedEscapeVolumes;                             // 0x328(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentChanceOfFleeing;                            // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1402[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_SpawnVolume_Beachgoer* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Maneater.ME_SpawnVolumeVisualizerComponent
class UME_SpawnVolumeVisualizerComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UME_SpawnVolumeVisualizerComponent* GetDefaultObj();

};

// 0x40 (0x2A0 - 0x260)
// Class Maneater.ME_TerrainMappedAmbience
class AME_TerrainMappedAmbience : public AAkAmbientSound
{
public:
	class UTexture2D*                            AmbienceHeatmap;                                   // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAmbienceColorChannel             HeatmapChannel;                                    // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1403[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AmbienceRTPCParam;                                 // 0x26C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrintRTPCValue;                                   // 0x274(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawHeatmapVisualization;                         // 0x275(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMultiPositionAudio;                         // 0x276(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAkMultiPositionType              EmitterPositionMethod;                             // 0x277(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1404[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_TerrainMappedAmbience* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_ThrashableInterface
class IME_ThrashableInterface : public IME_ActorDamageInterface
{
public:

	static class UClass* StaticClass();
	static class IME_ThrashableInterface* GetDefaultObj();

	void OnWhipShotImpact(class APawn* WhipInstigator);
	void OnWhipShotEnd(class APawn* WhipInstigator, struct FVector& EndVelocity, bool GrabbedActor);
	void OnWhipShotBegin(class APawn* WhipInstigator, const struct FVector& WhipVelocity);
	void OnReleasedBy(class AME_AnimalCharacter* ReleasingAnimal, bool bIgnoreFlee, bool bBrokeAway);
	void OnGrabPointDamagedVFX(const struct FThrashGrabPoint& GrabPoint, float DamageToApply, const struct FVector& DamageNormal, const struct FVector& DamageLocation);
	void OnGrabPointDamaged(const struct FThrashGrabPoint& GrabPoint, float DamageToApply, enum class EPhysicalSurface PhysSurface, class UPrimitiveComponent* DamagedComponent, class AActor* DamageInstigator, class UPrimitiveComponent* InstigatingComponent, const struct FVector& DamageNormal, const struct FVector& DamageLocation);
	void OnGrabPointConsumed(class AME_AnimalCharacter* ConsumingAnimal, const struct FThrashGrabPoint& ConsumedGrabPoint, class FName& GoreCapBoneName);
	void OnGrabPointChanged(class AME_AnimalCharacter* GrabbingAnimal, class UPrimitiveComponent* GrabbedComponent, int32 GrabPointIndex);
	void OnGrabbedBy(class AME_AnimalCharacter* GrabbingAnimal, class UPrimitiveComponent* GrabbedComponent, int32 GrabPointIndex);
	void OnConsumedWhole(class AME_AnimalCharacter* ConsumingAnimal);
	bool MoveActorToMeshPositionOnRelease();
	float GetWhipshotSpinning();
	float GetWhipshotRotationSpeed();
	float GetWhipshotRolling();
	TSubclassOf<class UME_WhipshotMovementComponent> GetWhipShotMovementClass();
	float GetWhipshotLandClearance();
	TSubclassOf<class AActor> GetWhipShotImpactEffect();
	enum class EMECustomMovementMode GetWhipShotFlightType();
	class UParticleSystem* GetWhipShotFlightParticleEffect();
	class UMeshComponent* GetThrashableMesh();
	float GetSize();
	void GetGrabPoints(class AME_AnimalCharacter* GrabbingAnimal, TArray<struct FThrashGrabPoint>* GrabPoints);
	bool CanBeWhipShot();
	bool CanBeGrabbedBy(class AME_AnimalCharacter* GrabbingAnimal);
	bool CanBeConsumedWholeBy(class AME_AnimalCharacter* GrabbingAnimal);
};

// 0x70 (0x290 - 0x220)
// Class Maneater.ME_TimeofDayInfo
class AME_TimeofDayInfo : public AInfo
{
public:
	float                                        TimeofDaySpeedScale;                               // 0x220(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_142F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentHourOfDay;                                  // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1430[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTimeOfDayPhaseSettings>       DayPhases;                                         // 0x230(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimeOfDayPhaseSettings               CurrentPhaseOfDay;                                 // 0x240(0x14)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FTimeOfDayPhaseSettings               NextPhaseOfDay;                                    // 0x254(0x14)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTimeOfDayChanged;                                // 0x268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTimeOfDayForceChanged;                           // 0x278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1431[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_TimeofDayInfo* GetDefaultObj();

	void SetTimeOfDay(float NewHourOfDay, bool bForce);
	void SetPauseState(bool bNewPause);
	bool GetPauseState();
};

// 0x1A8 (0x3C8 - 0x220)
// Class Maneater.ME_TimeOfDayWorldActor
class AME_TimeOfDayWorldActor : public AActor
{
public:
	bool                                         bEnableNativeTick;                                 // 0x220(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1436[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OceanDepthPostInterpSpeed;                         // 0x224(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       TODBaseComponent;                                  // 0x228(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          WeatherParams;                                     // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LightValueTransitionSpeed;                         // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentLightValue;                                 // 0x23C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AME_PlayerSharkCharacter> PlayerShark;                                       // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTickDayNight;                                     // 0x248(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1438[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APostProcessVolume*                    AirPostProcess;                                    // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AirPostDayExposureCompensation;                    // 0x258(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AirPostNightExposureCompensation;                  // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APostProcessVolume*                    OceanPostProcess;                                  // 0x260(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinOceanDepthExposure;                             // 0x268(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxOceanDepthExposure;                             // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OceanDepthPostMinStartingExposureDay;              // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OceanDepthPostMaxStartingExposureDay;              // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OceanDepthPostMinStartingExposureNight;            // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OceanDepthPostMaxStartingExposureNight;            // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OceanPostMaximumDepth;                             // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1439[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveLinearColor*                     HorizonColorCurve;                                 // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveLinearColor*                     ZenithColorCurve;                                  // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveLinearColor*                     CloudColorCurve;                                   // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkyLightComponent*                    SkyLightComponent;                                 // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              SkyMaterial;                                       // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkylightIntensityDay;                              // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkylightIntensityNight;                            // 0x2B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkylightSunriseColor;                              // 0x2B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkylightNoonColor;                                 // 0x2C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkylightMidnightColor;                             // 0x2D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureCube*                          UnderWaterFogCubemap;                              // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTimeOfDayCubemap>             TimeOfDayCubemapList;                              // 0x2F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LastTimeOfDayCubemapIndex;                         // 0x300(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_143B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDirectionalLightComponent*            SunLightComponent;                                 // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           SunSpeedCurve;                                     // 0x310(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartingSunIntensity;                              // 0x318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SunTemp6AM;                                        // 0x31C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SunTemp12PM;                                       // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SunHeight;                                         // 0x324(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SunAngleInTheSky;                                  // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NorthDirectionOffset;                              // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDirectionalLightComponent*            MoonLightComponent;                                // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MoonMaterial;                                      // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHideMoonDuringDay;                                // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_143D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartingMoonIntensity;                             // 0x344(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoonlightIntensity;                                // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoonPhase;                                         // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExponentialHeightFogComponent*        HeightFogComponent;                                // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogCurrentTransitionAlpha;                         // 0x358(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnderWaterFogDensity;                              // 0x35C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AboveWaterFogDensity;                              // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnderWaterFogHeightFalloff;                        // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AboveWaterFogHeightFalloff;                        // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AboveWaterFogExtinctionScale;                      // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          FogSunriseColor;                                   // 0x370(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          FogNoonColor;                                      // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          FogMidnightColor;                                  // 0x390(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFogState                         CurrentFogState;                                   // 0x3A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1441[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentRegionFogExtinctionScale;                   // 0x3A4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1442[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsDaytime;                                        // 0x3AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1444[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DayNightTransitionAlpha;                           // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentMinute;                                     // 0x3B4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1445[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_TimeOfDayWorldActor* GetDefaultObj();

	void UpdateTimeOfDayCubemaps(float InTimeOfDay);
	void TriggerStartNightTime();
	void TriggerStartDayTime();
	void TriggerForceChangeTime();
	void TriggerFogBelowWater();
	void TriggerFogAboveWater();
	void TickFogTransition();
	void TickDayNightTransition();
	void OnNewFogVolumeEntered(enum class EFogState PlayerFogOverride);
	bool IsDaytime();
	void InitTODActor();
	void InitTimeOfDaySettings();
	void InitFogSettings();
};

// 0x48 (0xF8 - 0xB0)
// Class Maneater.ME_TorpedoLauncherComponent
class UME_TorpedoLauncherComponent : public UActorComponent
{
public:
	TSubclassOf<class AME_TorpedoProjectile>     TorpedoProjectileClass;                            // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxActiveTorpedos;                                 // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireCooldownTime;                                  // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumTargetAngleDot;                             // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bMustBeFiredUnderwater : 1;                        // Mask: 0x1, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCancelUpwardLaunchZ : 1;                          // Mask: 0x2, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIncludeInCombatManager : 1;                       // Mask: 0x4, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_DA : 5;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1446[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LeftLauncherSocket;                                // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RightLauncherSocket;                               // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1448[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_TorpedoLauncherComponent* GetDefaultObj();

};

// 0x30 (0x210 - 0x1E0)
// Class Maneater.ME_TorpedoMovementComponent
class UME_TorpedoMovementComponent : public UME_ProjectileMovementComponent
{
public:
	uint8                                        Pad_144B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayBeforeHomingStart;                            // 0x1E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MininumHomingTime;                                 // 0x1EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumDistanceForDodge;                           // 0x1F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DodgeRadiusHomingAccelScale;                       // 0x1F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_144D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_TorpedoMovementComponent* GetDefaultObj();

};

// 0x48 (0x330 - 0x2E8)
// Class Maneater.ME_TorpedoProjectile
class AME_TorpedoProjectile : public AME_ThrashableActor
{
public:
	class UME_TorpedoMovementComponent*          ProjectileMovement;                                // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetonatorSocketName;                               // 0x2F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AME_ExplosionActor>        ExplosionActorClass;                               // 0x2F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ThrustParticle;                                    // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ThrustParticleSocketName;                          // 0x308(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         WhipshotImpactSound;                               // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1450[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_TorpedoProjectile* GetDefaultObj();

	void SetCanBeGrabbed(bool bCanGrab);
	void OnHomingLost();
	void OnEvaded();
};

// 0x8 (0x880 - 0x878)
// Class Maneater.ME_TransparencyCaptureComponent
class UME_TransparencyCaptureComponent : public USceneCaptureComponent2D
{
public:
	float                                        CaptureUpdateRate;                                 // 0x878(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1452[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_TransparencyCaptureComponent* GetDefaultObj();

};

// 0x230 (0x450 - 0x220)
// Class Maneater.ME_TutorialManager
class AME_TutorialManager : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnHudTipRequestedDelegate;                         // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialObjectiveAdded;                          // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialObjectiveActive;                         // 0x240(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialObjectiveComplete;                       // 0x250(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialObjectiveRemoved;                        // 0x260(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialObjectivesCleared;                       // 0x270(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialFinished;                                // 0x280(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialEnded;                                   // 0x290(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialRepeatedStepCompleted;                   // 0x2A0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialStepTimerStarted;                        // 0x2B0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialStepTimerStopped;                        // 0x2C0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TutorialEventTriggeredDelegate;                    // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialEventRequestMarker;                      // 0x2E0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialEventClearCompassMarker;                 // 0x2F0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialManagerDisabled;                         // 0x300(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialSinglePopupRequestDelegate;              // 0x310(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            RequestInvertedControlsPopup;                      // 0x320(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TMap<enum class ETutorialPopupID, float>     TutorialPopupDelay;                                // 0x330(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_1460[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         AudioEventTutorialComplete;                        // 0x3A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         AudioEventTutorialIncrementStep;                   // 0x3A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FME_TutorialEvent>             TutorialEvents;                                    // 0x3B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FME_TutorialTipEvent>          HudTips;                                           // 0x3C0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentTutorialIndex;                              // 0x3D0(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SavedStepIndex;                                    // 0x3D4(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1462[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxVisibleTutorialObjectives;                      // 0x3DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1463[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeBeforeInvertedControlsWidgetShows;             // 0x3E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1464[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ETutorialPopupID, struct FME_TutorialPopupEvent> TutorialPopupMap;                                  // 0x3F0(0x50)(Edit, NativeAccessSpecifierPrivate)
	TArray<bool>                                 TutorialPopupCompleted;                            // 0x440(0x10)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AME_TutorialManager* GetDefaultObj();

	void TriggerNarratorInitialProgressEvent();
	bool ShouldShowInGamePopupWidget(enum class ETutorialPopupID PopupId);
	bool RequestInGamePopupWidget(enum class ETutorialPopupID PopupId);
	void PushHudTip(int32 Index);
	void OnWhipShotPerformed(class AActor* Actor);
	void OnTailwhipPerformed();
	void OnPlayerConsumedPrey(class AME_AnimalCharacter* Player, class AActor* Prey);
	void OnLungePerformed();
	void OnKnifingStateChanged(bool NewKnifingState, enum class ECharacterActionMode ChangeContext);
	void OnKnifingJumpPerformed();
	void OnEvolutionEquipped(enum class EEvolutionSlot EvolutionSlot, class UME_PlayerEvolution* Evolution);
	void OnBreachPerformed();
	bool IsTutorialPartTwoComplete();
	bool IsTutorialPartOneComplete();
	bool IsEnabled();
	void IncrementObjective(bool ForceShowDelayedStep);
	enum class ETutorialEventId GetCurrentTutorialIndex();
	void DelayedShowInvertedControlsPopup();
	void DelayedIncrementObjective();
	bool CreateInGamePopupWidget(enum class ETutorialPopupID PopupId);
	void ClearHudTip();
};

// 0x0 (0x28 - 0x28)
// Class Maneater.ME_UserProfileSettings
class UME_UserProfileSettings : public UObject
{
public:

	static class UClass* StaticClass();
	static class UME_UserProfileSettings* GetDefaultObj();

};

// 0x10 (0x230 - 0x220)
// Class Maneater.ME_VehicleDebrisActor
class AME_VehicleDebrisActor : public AActor
{
public:
	class UStaticMeshComponent*                  DebrisMesh;                                        // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_BuoyancyForceComponent*            DebrisBuoyancyComponent;                           // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_VehicleDebrisActor* GetDefaultObj();

};

// 0x0 (0x150 - 0x150)
// Class Maneater.ME_VehicleNavigationComponent
class UME_VehicleNavigationComponent : public UME_MercunaNavigationComponent
{
public:

	static class UClass* StaticClass();
	static class UME_VehicleNavigationComponent* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class Maneater.ME_ViewportClient
class UME_ViewportClient : public UGameViewportClient
{
public:

	static class UClass* StaticClass();
	static class UME_ViewportClient* GetDefaultObj();

};

// 0x8 (0x238 - 0x230)
// Class Maneater.ME_WaterVehicleMoveComponent
class UME_WaterVehicleMoveComponent : public UME_VehicleMovementComponent
{
public:
	uint8                                        Pad_1465[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_WaterVehicleMoveComponent* GetDefaultObj();

};

// 0x0 (0x150 - 0x150)
// Class Maneater.ME_WaterVehicleNavComponent
class UME_WaterVehicleNavComponent : public UME_VehicleNavigationComponent
{
public:

	static class UClass* StaticClass();
	static class UME_WaterVehicleNavComponent* GetDefaultObj();

};

// 0x90 (0x2B0 - 0x220)
// Class Maneater.ME_WaypointMarker
class AME_WaypointMarker : public AActor
{
public:
	uint8                                        Pad_1468[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    WaypointMaterial;                                  // 0x228(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  WaypointFriendlyName;                              // 0x230(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  WaypointDescription;                               // 0x248(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         WaypointReachedSound;                              // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         WaypointSetSound;                                  // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      CollisionComponent;                                // 0x270(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProjectedIconCache                   WaypointIconCache;                                 // 0x278(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bRenderProjectedIcon;                              // 0x2A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1469[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_WaypointMarker* GetDefaultObj();

};

// 0x8 (0x380 - 0x378)
// Class Maneater.ME_WhippableActorBase
class AME_WhippableActorBase : public AME_NutrientCache_Static
{
public:
	int32                                        MaxUses;                                           // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_146A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_WhippableActorBase* GetDefaultObj();

};

// 0x60 (0x230 - 0x1D0)
// Class Maneater.ME_WhipshotMovementComponent
class UME_WhipshotMovementComponent : public UProjectileMovementComponent
{
public:
	float                                        FluidFrictionAdjustment;                           // 0x1D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWhipshotPhysicsTime;                            // 0x1D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_146E[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_WhipshotMovementComponent* GetDefaultObj();

	void OnWhipShotVictimImpact(class UPrimitiveComponent* SelfActor, class AActor* OtherActor, class UPrimitiveComponent* OtherPrimitive, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x10 (0xF70 - 0xF60)
// Class Maneater.ME_WildlifeCharacter
class AME_WildlifeCharacter : public AME_AnimalCharacter
{
public:
	bool                                         bCanWalkOnLand;                                    // 0xF60(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_146F[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_WildlifeCharacter* GetDefaultObj();

};

// 0x8 (0x880 - 0x878)
// Class Maneater.ME_WorldMapCaptureComponent
class UME_WorldMapCaptureComponent : public USceneCaptureComponent2D
{
public:
	uint8                                        Pad_1470[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_WorldMapCaptureComponent* GetDefaultObj();

};

// 0x48 (0x278 - 0x230)
// Class Maneater.ME_WorldMapWidget
class UME_WorldMapWidget : public UUserWidget
{
public:
	class UTextureRenderTarget2D*                FogRenderTarget;                                   // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                RTColorBuffer;                                     // 0x238(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1471[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UME_WorldMapWidget* GetDefaultObj();

	class UTextureRenderTarget2D* LoadSavedRenderTarget();
};

// 0x10 (0x40 - 0x30)
// Class Maneater.ME_WorldRegionData
class UME_WorldRegionData : public UDataAsset
{
public:
	TArray<struct FWorldRegion>                  WorldRegions;                                      // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UME_WorldRegionData* GetDefaultObj();

};

// 0x8 (0x280 - 0x278)
// Class Maneater.ME_WorldRegionVolume
class AME_WorldRegionVolume : public AVolume
{
public:
	struct FColor                                VolumeColor;                                       // 0x278(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RegionPriority;                                    // 0x27C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AME_WorldRegionVolume* GetDefaultObj();

	bool PointIsWithinRegion(const struct FVector& Point, float SphereRadius);
};

// 0x148 (0x4E8 - 0x3A0)
// Class Maneater.ME_WorldSettings
class AME_WorldSettings : public AWorldSettings
{
public:
	enum class ESceneCaptureSource               WorldCaptureSource;                                // 0x3A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1474[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WorldCaptureResolution;                            // 0x3A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeOceanInWorldCapture;                       // 0x3A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrintAlertnessDebugLogs;                          // 0x3A9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowEvolutionDrops;                              // 0x3AA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1475[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UME_WorldRegionData*                   WorldRegionData;                                   // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMED_BountyManagerTierData*            BountyManagerTierData;                             // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 WorldBoundsActor;                                  // 0x3C0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALandscape>             TheLand;                                           // 0x3E8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AME_OceanManager>       TheOcean;                                          // 0x410(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FriendlyFireDamageMultiplier;                      // 0x438(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1476[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class AActor>>         PrioritizedTargetingActors;                        // 0x440(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UME_WorldMapCaptureComponent*          WorldCaptureComponent;                             // 0x450(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1477[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FImpactResponseInstance>       ActiveImpactResponses;                             // 0x4B8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1478[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AME_WorldSettings* GetDefaultObj();

	void UpdateWorldCapture();
	void OnImpactParticleComplete(class UParticleSystemComponent* PSystem);
	void OnImpactAudioComplete(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
};

// 0x8 (0x48 - 0x40)
// Class Maneater.MEAIDataProvider_CombatHeight
class UMEAIDataProvider_CombatHeight : public UAIDataProvider_QueryParams
{
public:
	float                                        DefaultValue;                                      // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEAIDataProvider_CombatHeight* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class Maneater.MEAIDataProvider_CombatRange
class UMEAIDataProvider_CombatRange : public UAIDataProvider_QueryParams
{
public:
	float                                        DefaultValue;                                      // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEAIDataProvider_CombatRange* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.MEAIDataProvider_EscapeVolExtents
class UMEAIDataProvider_EscapeVolExtents : public UAIDataProvider
{
public:
	float                                        FloatValue;                                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IntValue;                                          // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMEAIDataProvider_EscapeVolExtents* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.MEAIDataProvider_LeashDistance
class UMEAIDataProvider_LeashDistance : public UAIDataProvider
{
public:
	float                                        FloatValue;                                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IntValue;                                          // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMEAIDataProvider_LeashDistance* GetDefaultObj();

};

// 0x48 (0xB0 - 0x68)
// Class Maneater.MEBTDecorator_AbilityBase
class UMEBTDecorator_AbilityBase : public UBTDecorator
{
public:
	bool                                         bUseAbilityType;                                   // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1483[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AbilityGameplayTag;                                // 0x6C(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EME_CharacterAbility              AbilityType;                                       // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1484[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderIntValue               AbilityIndex;                                      // 0x78(0x38)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEBTDecorator_AbilityBase* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Maneater.MEBTDecorator_BBValueChanged
class UMEBTDecorator_BBValueChanged : public UBTDecorator_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UMEBTDecorator_BBValueChanged* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class Maneater.MEBTDecorator_CanSpawnDiver
class UMEBTDecorator_CanSpawnDiver : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UMEBTDecorator_CanSpawnDiver* GetDefaultObj();

	void OnTrackedAIChange(class AME_AIController* AIC);
};

// 0x8 (0xB8 - 0xB0)
// Class Maneater.MEBTDecorator_CanUseAbility
class UMEBTDecorator_CanUseAbility : public UMEBTDecorator_AbilityBase
{
public:
	uint8                                        Pad_1488[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTDecorator_CanUseAbility* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Maneater.MEBTDecorator_CombatState
class UMEBTDecorator_CombatState : public UBTDecorator
{
public:
	enum class ECombatStatus                     DesiredStatus;                                     // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_148A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTDecorator_CombatState* GetDefaultObj();

	void OnCombatStateChanged(class AME_AIController* AIC, enum class ECombatStatus PrevStatus);
};

// 0x0 (0xC8 - 0xC8)
// Class Maneater.MEBTDecorator_HasGameplayTags
class UMEBTDecorator_HasGameplayTags : public UBTDecorator_CheckGameplayTagsOnActor
{
public:

	static class UClass* StaticClass();
	static class UMEBTDecorator_HasGameplayTags* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class Maneater.MEBTDecorator_HasGrabbedPrey
class UMEBTDecorator_HasGrabbedPrey : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UMEBTDecorator_HasGrabbedPrey* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Maneater.MEBTDecorator_IsPawnRelevant
class UMEBTDecorator_IsPawnRelevant : public UBTDecorator
{
public:
	float                                        MinTimeSinceLastRendered;                          // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistanceFromPlayer;                             // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEBTDecorator_IsPawnRelevant* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Maneater.MEBTDecorator_LandOrSea
class UMEBTDecorator_LandOrSea : public UBTDecorator
{
public:
	enum class ETerrainType                      TerrainType;                                       // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1491[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTDecorator_LandOrSea* GetDefaultObj();

};

// 0x40 (0xD0 - 0x90)
// Class Maneater.MEBTDecorator_TimeSince
class UMEBTDecorator_TimeSince : public UBTDecorator_BlackboardBase
{
public:
	struct FAIDataProviderFloatValue             TimeValue;                                         // 0x90(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	enum class EArithmeticKeyOperation           ComparisonOp;                                      // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1492[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTDecorator_TimeSince* GetDefaultObj();

};

// 0x40 (0xA8 - 0x68)
// Class Maneater.MEBTDecorator_TimeSinceLastSpawn
class UMEBTDecorator_TimeSinceLastSpawn : public UBTDecorator
{
public:
	enum class EArithmeticKeyOperation           ComparisonOp;                                      // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1493[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             ComparisonValue;                                   // 0x70(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMEBTDecorator_TimeSinceLastSpawn* GetDefaultObj();

	void OnNewSpawn(class AME_AIController* AIC);
};

// 0x40 (0xD0 - 0x90)
// Class Maneater.MEBTDecorator_WaterDepth
class UMEBTDecorator_WaterDepth : public UBTDecorator_BlackboardBase
{
public:
	struct FAIDataProviderFloatValue             ExpectedWaterDepth;                                // 0x90(0x38)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	enum class EArithmeticKeyOperation           ComparisonOp;                                      // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1494[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTDecorator_WaterDepth* GetDefaultObj();

};

// 0x48 (0xB8 - 0x70)
// Class Maneater.MEBTService_AbilityBase
class UMEBTService_AbilityBase : public UBTService
{
public:
	bool                                         bUseAbilityType;                                   // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1495[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AbilityGameplayTag;                                // 0x74(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EME_CharacterAbility              AbilityType;                                       // 0x7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1496[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderIntValue               AbilityIndex;                                      // 0x80(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMEBTService_AbilityBase* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Maneater.MEBTService_AttackTarget
class UMEBTService_AttackTarget : public UBTService_BlackboardBase
{
public:
	TSubclassOf<class UME_WeaponComponent>       WeaponPreference;                                  // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEBTService_AttackTarget* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTService_CacheEscapeRoutes
class UMEBTService_CacheEscapeRoutes : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UMEBTService_CacheEscapeRoutes* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Maneater.MEBTService_CheckThreatUnderBoat
class UMEBTService_CheckThreatUnderBoat : public UBTService
{
public:
	struct FBlackboardKeySelector                BlackboardKey;                                     // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        TimeNeededToTrigger;                               // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1497[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTService_CheckThreatUnderBoat* GetDefaultObj();

};

// 0x58 (0xF0 - 0x98)
// Class Maneater.MEBTService_ClaimCombatLocation
class UMEBTService_ClaimCombatLocation : public UBTService_BlackboardBase
{
public:
	struct FEQSParametrizedQueryExecutionRequest EQSRequest;                                        // 0x98(0x48)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1499[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTService_ClaimCombatLocation* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTService_LookForBoats
class UMEBTService_LookForBoats : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UMEBTService_LookForBoats* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTService_LookForThreats
class UMEBTService_LookForThreats : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UMEBTService_LookForThreats* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTService_RepelFromGeometry
class UMEBTService_RepelFromGeometry : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UMEBTService_RepelFromGeometry* GetDefaultObj();

};

// 0x8 (0xC0 - 0xB8)
// Class Maneater.MEBTService_UseAbility
class UMEBTService_UseAbility : public UMEBTService_AbilityBase
{
public:
	bool                                         bCancelImmediately;                                // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_149C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTService_UseAbility* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class Maneater.MEBTTask_AbilityBase
class UMEBTTask_AbilityBase : public UBTTaskNode
{
public:
	bool                                         bUseAbilityType;                                   // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_149F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AbilityGameplayTag;                                // 0x74(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EME_CharacterAbility              AbilityType;                                       // 0x7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14A0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderIntValue               AbilityIndex;                                      // 0x80(0x38)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bWaitForAbilityToFinish;                           // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14A1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_AbilityBase* GetDefaultObj();

	void OnAbilityFinished(const struct FGameplayAbilitySpecHandle& AbilityHandle, class UBehaviorTreeComponent* OwnerComp);
};

// 0x28 (0xC0 - 0x98)
// Class Maneater.MEBTTask_TargetBase
class UMEBTTask_TargetBase : public UBTTask_BlackboardBase
{
public:
	TSoftObjectPtr<class AActor>                 TargetAssetId;                                     // 0x98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMEBTTask_TargetBase* GetDefaultObj();

};

// 0x8 (0xC8 - 0xC0)
// Class Maneater.MEBTTask_AttackTarget
class UMEBTTask_AttackTarget : public UMEBTTask_TargetBase
{
public:
	TSubclassOf<class UME_WeaponComponent>       WeaponPreference;                                  // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEBTTask_AttackTarget* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTTask_CacheActivityPoints
class UMEBTTask_CacheActivityPoints : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_CacheActivityPoints* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTTask_CacheEscapeRoutes
class UMEBTTask_CacheEscapeRoutes : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_CacheEscapeRoutes* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Maneater.MEBTTask_ChangeAlertState
class UMEBTTask_ChangeAlertState : public UBTTaskNode
{
public:
	enum class EAIThreatAlertState               NewAlertState;                                     // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResetSuspicion;                                   // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14A4[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_ChangeAlertState* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Maneater.MEBTTask_ChangeCombatPriority
class UMEBTTask_ChangeCombatPriority : public UBTTaskNode
{
public:
	float                                        PriorityBuff;                                      // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Duration;                                          // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEBTTask_ChangeCombatPriority* GetDefaultObj();

};

// 0x58 (0xF0 - 0x98)
// Class Maneater.MEBTTask_ClaimCombatLocation
class UMEBTTask_ClaimCombatLocation : public UBTTask_BlackboardBase
{
public:
	struct FEQSParametrizedQueryExecutionRequest EQSRequest;                                        // 0x98(0x48)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14A9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_ClaimCombatLocation* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Maneater.MEBTTask_MoveToBase
class UMEBTTask_MoveToBase : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_MoveToBase* GetDefaultObj();

};

// 0x78 (0x110 - 0x98)
// Class Maneater.MEBTTask_DirectMoveTo
class UMEBTTask_DirectMoveTo : public UMEBTTask_MoveToBase
{
public:
	struct FAIDataProviderFloatValue             AcceptableRadius;                                  // 0x98(0x38)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             Speed;                                             // 0xD0(0x38)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bReachTestIncludesAgentRadius;                     // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReachTestIncludesGoalRadius;                      // 0x109(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14AF[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_DirectMoveTo* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Maneater.MEBTTask_EjectPassengers
class UMEBTTask_EjectPassengers : public UBTTaskNode
{
public:
	uint8                                        bEjectUsingVehicleVelocity : 1;                    // Mask: 0x1, PropSize: 0x10x70(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_E6 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_14B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleImpulseScale;                               // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysPushOverboard : 1;                          // Mask: 0x1, PropSize: 0x10x78(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_E7 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_14B5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverboardVelocityImpulseXY;                        // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverboardVelocityImpulseZ;                         // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        NumToEjectOnExecute;                               // 0x84(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14B6[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_EjectPassengers* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Maneater.MEBTTask_EmitNoise
class UMEBTTask_EmitNoise : public UBTTaskNode
{
public:
	float                                        NoiseIntensity;                                    // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECharacterVoiceEventType          NoiseVoiceType;                                    // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14B8[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_EmitNoise* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTTask_FireTorpedo
class UMEBTTask_FireTorpedo : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_FireTorpedo* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Maneater.MEBTTask_GetNextPatrol
class UMEBTTask_GetNextPatrol : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_GetNextPatrol* GetDefaultObj();

};

// 0x98 (0x130 - 0x98)
// Class Maneater.MEBTTask_MoveTo
class UMEBTTask_MoveTo : public UMEBTTask_MoveToBase
{
public:
	struct FAIDataProviderFloatValue             Speed;                                             // 0x98(0x38)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             AcceptableRadius;                                  // 0xD0(0x38)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bReachTestIncludesAgentRadius;                     // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReachTestIncludesGoalRadius;                      // 0x109(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowPartialPath;                                 // 0x10A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14BF[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bObserveBlackboardValue;                           // 0x118(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C0[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ObservedBlackboardValueTolerance;                  // 0x128(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14C1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_MoveTo* GetDefaultObj();

	void OnRequestIdUpdated(class AME_AIController* AIC, const struct FAIRequestID& UpdatedRequestId);
};

// 0x38 (0xA8 - 0x70)
// Class Maneater.MEBTTask_PlayCustomAnimations
class UMEBTTask_PlayCustomAnimations : public UBTTaskNode
{
public:
	TArray<class UAnimSequenceBase*>             Animations;                                        // 0x70(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayRate;                                          // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlendIn;                                           // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlendOut;                                          // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumLoops;                                          // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartTimeMin;                                      // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartTimeMax;                                      // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14C4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_PlayCustomAnimations* GetDefaultObj();

	void OnMontageComplete();
};

// 0x0 (0xA8 - 0xA8)
// Class Maneater.MEBTTask_PlayCustomPassengerAnimations
class UMEBTTask_PlayCustomPassengerAnimations : public UMEBTTask_PlayCustomAnimations
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_PlayCustomPassengerAnimations* GetDefaultObj();

};

// 0x10 (0xA8 - 0x98)
// Class Maneater.MEBTTask_PlayDialogueAkEvent
class UMEBTTask_PlayDialogueAkEvent : public UBTTask_BlackboardBase
{
public:
	class UAkAudioEvent*                         Event;                                             // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DialogueTableOverride;                             // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMEBTTask_PlayDialogueAkEvent* GetDefaultObj();

};

// 0x10 (0xA8 - 0x98)
// Class Maneater.MEBTTask_PlayDialogueFile
class UMEBTTask_PlayDialogueFile : public UBTTask_BlackboardBase
{
public:
	struct FDataTableRowHandle                   DialogueRowHandle;                                 // 0x98(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMEBTTask_PlayDialogueFile* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTTask_ReleasePrey
class UMEBTTask_ReleasePrey : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_ReleasePrey* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTTask_RemoveAI
class UMEBTTask_RemoveAI : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_RemoveAI* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class Maneater.MEBTTask_SpawnActor
class UMEBTTask_SpawnActor : public UBTTaskNode
{
public:
	uint8                                        Pad_14CA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ClassToSpawn;                                      // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         TriggerSound;                                      // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SpawnActorParticle;                                // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayTillActorSpawn;                               // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthToSpawnActor;                                 // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMEBTTask_SpawnActor* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class Maneater.MEBTTask_SpawnAI
class UMEBTTask_SpawnAI : public UBTTaskNode
{
public:
	TArray<struct FSpawnListEntry>               SpawnList;                                         // 0x70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMEBTTask_SpawnAI* GetDefaultObj();

	void OnSpawnComplete(class AME_BoatAIController* AIC);
};

// 0x0 (0x70 - 0x70)
// Class Maneater.MEBTTask_StopAllMovement
class UMEBTTask_StopAllMovement : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UMEBTTask_StopAllMovement* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Maneater.MEBTTask_StopCustomAnimation
class UMEBTTask_StopCustomAnimation : public UBTTaskNode
{
public:
	float                                        BlendOut;                                          // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14CE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_StopCustomAnimation* GetDefaultObj();

};

// 0x8 (0xC8 - 0xC0)
// Class Maneater.MEBTTask_UseAbility
class UMEBTTask_UseAbility : public UMEBTTask_AbilityBase
{
public:
	bool                                         bCancelImmediately;                                // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14CF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_UseAbility* GetDefaultObj();

};

// 0x28 (0xC0 - 0x98)
// Class Maneater.MEBTTask_VehicleMoveTo
class UMEBTTask_VehicleMoveTo : public UMEBTTask_MoveToBase
{
public:
	float                                        Speed;                                             // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcceptanceRadius;                                  // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveUpdateThreshold;                               // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TaskUpdateInterval;                                // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bProjectToSurface : 1;                             // Mask: 0x1, PropSize: 0x10xA8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClampToWaterEdge : 1;                             // Mask: 0x2, PropSize: 0x10xA8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_EA : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_14D1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SurfaceZOffset;                                    // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowPartialPath : 1;                             // Mask: 0x1, PropSize: 0x10xB0(0x1)(Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bObserveBlackboardValue : 1;                       // Mask: 0x2, PropSize: 0x10xB0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14D2[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMEBTTask_VehicleMoveTo* GetDefaultObj();

	void OnRequestIdUpdated(class AME_AIController* AIC, const struct FAIRequestID& UpdatedRequestId);
};

// 0x28 (0x260 - 0x238)
// Class Maneater.MED_AirVehicleMoveComponent
class UMED_AirVehicleMoveComponent : public UME_WaterVehicleMoveComponent
{
public:
	float                                        VerticalInterpSpeed;                               // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardSpeedMultiplier;                            // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAccelerationVertical;                           // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalDown;                                      // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalUp;                                        // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StrafeMultiplier;                                  // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14D3[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_AirVehicleMoveComponent* GetDefaultObj();

	void SetMaxSpeedModifier(float UpdatedSpeed);
	void SetGoalLocation(const struct FVector& Location);
};

// 0x0 (0x150 - 0x150)
// Class Maneater.MED_AirVehicleNavComponent
class UMED_AirVehicleNavComponent : public UME_WaterVehicleNavComponent
{
public:

	static class UClass* StaticClass();
	static class UMED_AirVehicleNavComponent* GetDefaultObj();

};

// 0x10 (0xA90 - 0xA80)
// Class Maneater.MED_AnimInstance_HumanNPC
class UMED_AnimInstance_HumanNPC : public UME_AnimInstance_HumanNPC
{
public:
	class UAnimMontage*                          FiringAnimation;                                   // 0xA80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFiring;                                         // 0xA88(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnLandTurn;                                       // 0xA89(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14D4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HipsUpASinD;                                       // 0xA8C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMED_AnimInstance_HumanNPC* GetDefaultObj();

};

// 0x8 (0x630 - 0x628)
// Class Maneater.MED_BountyManager
class AMED_BountyManager : public AME_BountyManager
{
public:
	bool                                         bBountySystemDisabled;                             // 0x628(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMED_BountyManager* GetDefaultObj();

	void PlaceOnHold();
	bool GetIsBountyOnHold();
};

// 0x10 (0x40 - 0x30)
// Class Maneater.MED_BountyManagerTierData
class UMED_BountyManagerTierData : public UDataAsset
{
public:
	TArray<class UME_BountyTier*>                BountyTiers;                                       // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMED_BountyManagerTierData* GetDefaultObj();

};

// 0x80 (0xBB0 - 0xB30)
// Class Maneater.MED_CharacterAttributeSet
class UMED_CharacterAttributeSet : public UME_CharacterAttributeSet
{
public:
	struct FMEGameplayAttributeData              FlyMovementSpeed;                                  // 0xB30(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              RunMovementSpeed;                                  // 0xB50(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              FallSpeedLmit;                                     // 0xB70(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMEGameplayAttributeData              GravitySpeedLmit;                                  // 0xB90(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMED_CharacterAttributeSet* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MED_CharacterFunctionLibrary
class UMED_CharacterFunctionLibrary : public UME_CharacterFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UMED_CharacterFunctionLibrary* GetDefaultObj();

	float GetRunMoveSpeed(class AME_Character* TwChar);
	float GetFlyMoveSpeed(class AME_Character* TwChar);
};

// 0x0 (0x750 - 0x750)
// Class Maneater.MED_CharacterMovementComponent
class UMED_CharacterMovementComponent : public UME_CharacterMovementComponent
{
public:

	static class UClass* StaticClass();
	static class UMED_CharacterMovementComponent* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Maneater.MED_SaveData_DLC
class UMED_SaveData_DLC : public UObject
{
public:
	bool                                         bHasEnteredMap;                                    // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasCompletedMap;                                  // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DesiredRespawnLocation;                            // 0x2C(0xC)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              DesiredRespawnRotation;                            // 0x38(0xC)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 TutorialPopupCompleted;                            // 0x48(0x10)(ZeroConstructor, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DLC_ActiveStoryIndex;                              // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14DA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DLC_StoryChapterName;                              // 0x60(0x18)(Edit, BlueprintVisible, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMED_SaveData_DLC* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class Maneater.MED_SaveData_DLC01
class UMED_SaveData_DLC01 : public UMED_SaveData_DLC
{
public:

	static class UClass* StaticClass();
	static class UMED_SaveData_DLC01* GetDefaultObj();

};

// 0x68 (0x288 - 0x220)
// Class Maneater.MED_DLCManager
class AMED_DLCManager : public AActor
{
public:
	int32                                        CurrentExpAmount;                                  // 0x220(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14DE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, bool>                     SeenTeleporterCinematics;                          // 0x228(0x50)(SaveGame, Protected, NativeAccessSpecifierProtected)
	bool                                         bDisplayCompletedObjectives;                       // 0x278(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisplayCompletedMapObjectives;                    // 0x279(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14DF[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMED_SaveData_DLC01*                   SaveDataDLC01;                                     // 0x280(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AMED_DLCManager* GetDefaultObj();

	void UnlockAchievementForEnteringDLC01Map();
	void SetHasEnteredDLC01Map(bool bSet);
	void SetHasCompletedDLC01Map(bool bSet);
	bool OwnsDLC01();
	void LaunchPurchaseOverlay(enum class EDLCType DLCType);
	bool IsInDLC01Map();
	bool HasEnteredDLC01Map();
	bool HasCompletedDLC01Map();
};

// 0x130 (0xD10 - 0xBE0)
// Class Maneater.MED_FlyingVehiclePawn
class AMED_FlyingVehiclePawn : public AME_BoatPawn
{
public:
	class UBoxComponent*                         MainRotorCollision;                                // 0xBE0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              MainRotorVFX;                                      // 0xBE8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         TailRotorCollision;                                // 0xBF0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              TailRotorVFX;                                      // 0xBF8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   PlayerRotorImpactEffects;                          // 0xC00(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotorImpactVelocity;                               // 0xC10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotorVerticalImpactVelocity;                       // 0xC14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14ED[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IsOutOfControlRTPC;                                // 0xC28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         CopterExplosionSound;                              // 0xC38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         HumanRotorContactSound;                            // 0xC40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BankingStrafeVelocity;                             // 0xC48(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BankingAngle;                                      // 0xC4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxStationaryVerticalMovement;                     // 0xC50(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StationaryVerticalMagnitude;                       // 0xC54(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StationarySideTrackingSpeed;                       // 0xC58(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StationaryYawOffset;                               // 0xC5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CircleSpeed;                                       // 0xC60(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CircleTrackingSpeed;                               // 0xC64(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SideTrackingMultiplierInterpSpeed;                 // 0xC68(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZOffset;                                           // 0xC6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinorDamageStateAddition;                          // 0xC70(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MajorDamageStateAddition;                          // 0xC74(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinorDamageYawMagnitude;                           // 0xC78(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MajorDamageYawMagnitude;                           // 0xC7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathSpinYawMagnitude;                             // 0xC80(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathSpinYawTime;                                  // 0xC84(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathSpinPitchAdd;                                 // 0xC88(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZRisingForce;                                      // 0xC8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutOfControlForwardVelocity;                       // 0xC90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SetToCrashTime;                                    // 0xC94(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MainRotorSocketName;                               // 0xC98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TailRotorSocketName;                               // 0xCA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       RearRotorDamageParticleSystem;                     // 0xCA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14EF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       BigOutOfControlExplosion;                          // 0xCB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       HumanRotorBloodCloud;                              // 0xCC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SharkRotorBladeImpact;                             // 0xCC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         SharkRotorBladeImpactSfx;                          // 0xCD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F0[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMED_FlyingVehiclePawn* GetDefaultObj();

	void TriggerFullPassengerEjection();
	void SetToCrash();
	void OnRotorOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnRotorOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRotorEjectedPassengerImpact(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void DeactivateSideTargeting();
	void DeactivateHoverMode();
	void DeactivateCircleTarget();
	void ActivateSideTargeting();
	void ActivateHoverMode(float HoverStoppingDistance, float HoverHeight, bool bActivateSideTargeting);
	void ActivateCircleTarget();
};

// 0x10 (0x7F8 - 0x7E8)
// Class Maneater.MED_HelicopterAIController
class AMED_HelicopterAIController : public AME_BoatAIController
{
public:
	TArray<class FName>                          SpawnSocketNames;                                  // 0x7E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AMED_HelicopterAIController* GetDefaultObj();

};

// 0x28 (0x7E0 - 0x7B8)
// Class Maneater.MED_LandHunterAIController
class AMED_LandHunterAIController : public AME_HumanAIController
{
public:
	TSubclassOf<class UGameplayEffect>           RunningGameplayEffect;                             // 0x7B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14F3[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMED_LandHunterAIController* GetDefaultObj();

};

// 0x20 (0x5C8 - 0x5A8)
// Class Maneater.MED_NavigationSystem
class UMED_NavigationSystem : public UME_NavigationSystem
{
public:
	uint8                                        Pad_14F7[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_NavigationSystem* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Maneater.MED_ObjectiveCondition_BountyOnHold
class UMED_ObjectiveCondition_BountyOnHold : public UME_ObjectiveConditionBase
{
public:
	TWeakObjectPtr<class AMED_BountyManager>     BountyManager;                                     // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMED_ObjectiveCondition_BountyOnHold* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.MED_ObjectiveCondition_HasCompletedDLCMap
class UMED_ObjectiveCondition_HasCompletedDLCMap : public UME_ObjectiveConditionBase
{
public:
	enum class EDLCType                          DLCType;                                           // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14F9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AMED_DLCManager>        DLCManager;                                        // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14FA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_ObjectiveCondition_HasCompletedDLCMap* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.MED_ObjectiveCondition_InfamyRank_DLC01
class UMED_ObjectiveCondition_InfamyRank_DLC01 : public UME_ObjectiveConditionBase
{
public:
	int32                                        InfamyRank;                                        // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AME_BountyManager>      BountyManager;                                     // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14FB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_ObjectiveCondition_InfamyRank_DLC01* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Maneater.MED_ObjectiveCondition_OwnsDLC
class UMED_ObjectiveCondition_OwnsDLC : public UME_ObjectiveConditionBase
{
public:
	enum class EDLCType                          DLCType;                                           // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AMED_DLCManager>        DLCManager;                                        // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14FE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_ObjectiveCondition_OwnsDLC* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Maneater.MED_ParticleModuleDynamicallyHideWithOwner
class UMED_ParticleModuleDynamicallyHideWithOwner : public UME_ParticleModuleManeaterBase
{
public:

	static class UClass* StaticClass();
	static class UMED_ParticleModuleDynamicallyHideWithOwner* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Maneater.MED_ParticleModuleDynamicTranslucencySort_AttachedToPlayerShark
class UMED_ParticleModuleDynamicTranslucencySort_AttachedToPlayerShark : public UME_ParticleModuleDynamicTranslucencySort
{
public:
	bool                                         bCountAsAboveWaterWhenKnifing;                     // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14FF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_ParticleModuleDynamicTranslucencySort_AttachedToPlayerShark* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class Maneater.MED_ParticleModuleSeagullball
class UMED_ParticleModuleSeagullball : public UME_ParticleModuleManeaterBase
{
public:
	class UAkAudioEvent*                         DisperseAkEvent;                                   // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1500[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_ParticleModuleSeagullball* GetDefaultObj();

};

// 0x40 (0x180 - 0x140)
// Class Maneater.MED_PlayerObjective_BountyTrigger
class UMED_PlayerObjective_BountyTrigger : public UME_PlayerObjective
{
public:
	TSoftObjectPtr<class AActor>                 TriggerActor;                                      // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TriggerPosition;                                   // 0x168(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TriggerDistance;                                   // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SpawnBossImediately;                               // 0x178(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1506[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TargetInfamyLevel;                                 // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMED_PlayerObjective_BountyTrigger* GetDefaultObj();

	void OnPlayerDied();
	void OnBountyEnding();
	void OnBountyBossDefeated(int32 Rank);
};

// 0x0 (0x220 - 0x220)
// Class Maneater.MED_WaveSpawner
class AMED_WaveSpawner : public AActor
{
public:

	static class UClass* StaticClass();
	static class AMED_WaveSpawner* GetDefaultObj();

	void StopWave();
	void StartWave();
	class AME_AIController* SpawnWaveAI(class UClass* SpawnClass, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation);
	void Spawn();
	void Cleanup();
};

// 0x68 (0x1A8 - 0x140)
// Class Maneater.MED_PlayerObjective_DestroyBreakable
class UMED_PlayerObjective_DestroyBreakable : public UME_PlayerObjective
{
public:
	TSoftObjectPtr<class AME_DestructibleActor>  BreakableActor;                                    // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class AMED_WaveSpawner>       WaveSpawner;                                       // 0x168(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TriggerLocation;                                   // 0x190(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnDistance;                                     // 0x19C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DespawnDistance;                                   // 0x1A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldPauseBounties;                              // 0x1A4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1512[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_PlayerObjective_DestroyBreakable* GetDefaultObj();

};

// 0x0 (0x1A8 - 0x1A8)
// Class Maneater.MED_PlayerObjective_FailureToCommunicate
class UMED_PlayerObjective_FailureToCommunicate : public UMED_PlayerObjective_DestroyBreakable
{
public:

	static class UClass* StaticClass();
	static class UMED_PlayerObjective_FailureToCommunicate* GetDefaultObj();

};

// 0x48 (0x188 - 0x140)
// Class Maneater.MED_PlayerObjective_GoTo
class UMED_PlayerObjective_GoTo : public UME_PlayerObjective
{
public:
	TSoftObjectPtr<class AActor>                 GoToWidgetActor;                                   // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               GoToPosition;                                      // 0x168(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TriggerDistance;                                   // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEndBountyWhenTriggered;                           // 0x178(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1514[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HostileBoatSpawnRange;                             // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1515[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_PlayerObjective_GoTo* GetDefaultObj();

};

// 0x18 (0x190 - 0x178)
// Class Maneater.MED_PlayerObjective_TinFoilHat
class UMED_PlayerObjective_TinFoilHat : public UME_ObjectCollectObjective
{
public:
	TArray<struct FTinFoilHatSubObject>          TinFoilHatSubObjects;                              // 0x178(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumCollectablesToTriggerObjective;                 // 0x188(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_151A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_PlayerObjective_TinFoilHat* GetDefaultObj();

	bool GetSubObjectiveByActor(class AActor* SearchingActor, struct FTinFoilHatSubObject* OutSubObjective);
};

// 0x68 (0x1A8 - 0x140)
// Class Maneater.MED_PlayerObjectiveTimeTrial
class UMED_PlayerObjectiveTimeTrial : public UME_PlayerObjective
{
public:
	TSoftObjectPtr<class AMED_TimeTrialController> TimeTrialController;                               // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeRemainingSec;                                  // 0x168(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ControllerPosition;                                // 0x16C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEndBountyWhenTriggered;                           // 0x178(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_151B[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TrialFailedNarratorEventName;                      // 0x1A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMED_PlayerObjectiveTimeTrial* GetDefaultObj();

	float GetTimerRemaining();
};

// 0x8 (0x30 - 0x28)
// Class Maneater.MED_SpawnListCondition_ActiveBountyState
class UMED_SpawnListCondition_ActiveBountyState : public UME_SpawnlistCondition
{
public:
	float                                        bInverseCondition;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_151C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_SpawnListCondition_ActiveBountyState* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.MED_SpawnListCondition_DLC01_Current_StoryEvent
class UMED_SpawnListCondition_DLC01_Current_StoryEvent : public UME_SpawnlistCondition
{
public:
	bool                                         bInverseCondition;                                 // 0x28(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_151D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StoryEvent;                                        // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMED_SpawnListCondition_DLC01_Current_StoryEvent* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.MED_SpawnListCondition_ForceHostileBoats
class UMED_SpawnListCondition_ForceHostileBoats : public UME_SpawnlistCondition
{
public:
	float                                        bInverseCondition;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_151E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_SpawnListCondition_ForceHostileBoats* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.MED_SpawnListCondition_HasCompletedDLC01
class UMED_SpawnListCondition_HasCompletedDLC01 : public UME_SpawnlistCondition
{
public:
	TWeakObjectPtr<class AMED_DLCManager>        DLCManager;                                        // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMED_SpawnListCondition_HasCompletedDLC01* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Maneater.MED_SpawnListCondition_ObjectiveTypeInProgress
class UMED_SpawnListCondition_ObjectiveTypeInProgress : public UME_SpawnlistCondition
{
public:
	bool                                         bSpawnWhileInProgress;                             // 0x28(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1520[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_SpawnListCondition_ObjectiveTypeInProgress* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Maneater.MED_SpawnListCondition_InProgressTimeTrial
class UMED_SpawnListCondition_InProgressTimeTrial : public UMED_SpawnListCondition_ObjectiveTypeInProgress
{
public:

	static class UClass* StaticClass();
	static class UMED_SpawnListCondition_InProgressTimeTrial* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Maneater.MED_SpawnListCondition_InProgressFTC
class UMED_SpawnListCondition_InProgressFTC : public UMED_SpawnListCondition_ObjectiveTypeInProgress
{
public:

	static class UClass* StaticClass();
	static class UMED_SpawnListCondition_InProgressFTC* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Maneater.MED_SpawnListCondition_InProgressHunt
class UMED_SpawnListCondition_InProgressHunt : public UMED_SpawnListCondition_ObjectiveTypeInProgress
{
public:

	static class UClass* StaticClass();
	static class UMED_SpawnListCondition_InProgressHunt* GetDefaultObj();

};

// 0x0 (0x230 - 0x230)
// Class Maneater.MED_StaticPropActor
class AMED_StaticPropActor : public AStaticMeshActor
{
public:

	static class UClass* StaticClass();
	static class AMED_StaticPropActor* GetDefaultObj();

	void HandleActorHitByPawn(class UPrimitiveComponent* SelfActor, class AActor* OtherActor, class UPrimitiveComponent* OtherPrimitive, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x18 (0x238 - 0x220)
// Class Maneater.MED_Teleporter
class AMED_Teleporter : public AActor
{
public:
	TSubclassOf<class UMED_TeleporterDestination> DestinationClass;                                  // 0x220(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsTeleportEnabled;                                // 0x228(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEndBountyWhenTriggered;                           // 0x229(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1530[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMED_Teleporter* GetDefaultObj();

	void SetTeleportEnabled(bool bEnabled);
	void OnTeleportSequenceStarted();
	bool IsTeleportEnabled();
	void HandleCinematicFinished();
	TArray<struct FMED_TeleporterProductRequirement> GetMissingRequiredProducts();
	class UMED_TeleporterDestination* GetDestination();
	enum class EFastTravelReturn CanUseTeleporter(class AME_PlayerSharkCharacter* PlayerShark, bool IsFromMenu);
};

// 0x80 (0xA8 - 0x28)
// Class Maneater.MED_TeleporterDestination
class UMED_TeleporterDestination : public UObject
{
public:
	class FName                                  LevelName;                                         // 0x28(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               WorldLocation;                                     // 0x30(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              WorldRotation;                                     // 0x3C(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class FText                                  DisplayName;                                       // 0x48(0x18)(Edit, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UTexture2D*                            DisplayIcon;                                       // 0x60(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  InWorldWidgetText;                                 // 0x68(0x18)(Edit, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FName                                  PreTravelCinematicDataTableRowName;                // 0x80(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 PreTravelCinematicSaveID;                          // 0x88(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMED_TeleporterProductRequirement> RequiredProducts;                                  // 0x98(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMED_TeleporterDestination* GetDefaultObj();

	struct FRotator GetWorldRotation();
	struct FVector GetWorldLocation();
	TArray<struct FMED_TeleporterProductRequirement> GetRequiredProducts();
	struct FGuid GetPreTravelCinematicSaveId();
	class FName GetPreTravelCinematicDataTableRowName();
	class FName GetLevelName();
	class FText GetInWorldWidgetText();
	class FText GetDisplayName();
	class UTexture2D* GetDisplayIcon();
};

// 0xD0 (0x2F0 - 0x220)
// Class Maneater.MED_TimeTrialController
class AMED_TimeTrialController : public AActor
{
public:
	uint8                                        Pad_1539[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FriendlyName;                                      // 0x228(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MaxDistanceVisible;                                // 0x240(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_153A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRingInfo>                     TimeTrialRings;                                    // 0x248(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentRingIndex;                                  // 0x258(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnabled;                                        // 0x25C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_153B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartTime;                                         // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetPlayerOnEventReset;                          // 0x264(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_153C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UTwMultiOptionModal>     MultiOptionModalAssetRef;                          // 0x268(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PopupHeader;                                       // 0x290(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  PopupBody;                                         // 0x2A8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  PopupResetOption;                                  // 0x2C0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  PopupContinueOption;                               // 0x2D8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AMED_TimeTrialController* GetDefaultObj();

	void ResetObjective();
	void ProgressObjective();
	void BeginFadeSequence();
};

// 0x0 (0x220 - 0x220)
// Class Maneater.MED_TimeTrialRingBase
class AMED_TimeTrialRingBase : public AActor
{
public:

	static class UClass* StaticClass();
	static class AMED_TimeTrialRingBase* GetDefaultObj();

};

// 0x10 (0xC30 - 0xC20)
// Class Maneater.MED_TinFoilHatActor
class AMED_TinFoilHatActor : public AME_Character
{
public:
	float                                        MaxDistanceVisible;                                // 0xC20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_153D[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMED_TinFoilHatActor* GetDefaultObj();

	bool CheckObjectStateCompleted();
};

// 0x18 (0x6F0 - 0x6D8)
// Class Maneater.MED_WeaponComponent
class UMED_WeaponComponent : public UME_WeaponComponent
{
public:
	enum class EWeaponFireCondition              FireCondition;                                     // 0x6D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1541[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          ThrownWeaponMontage;                               // 0x6E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTriggerThrownWeaponMontage;                       // 0x6E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1543[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMED_WeaponComponent* GetDefaultObj();

	void SetAITreeWindowOpen(bool SetTo);
	float GetLastFireTime();
	float GetLaserLockOnStartTime();
	bool GetIsLaserPointerShown();
};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_BoatEscape
class UMEEnvQueryContext_BoatEscape : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_BoatEscape* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_BossVehicleActor
class UMEEnvQueryContext_BossVehicleActor : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_BossVehicleActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_ClosestEscape
class UMEEnvQueryContext_ClosestEscape : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_ClosestEscape* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_ClosestLandNavPoint
class UMEEnvQueryContext_ClosestLandNavPoint : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_ClosestLandNavPoint* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_CombatLocation
class UMEEnvQueryContext_CombatLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_CombatLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_LastSawThreatLocation
class UMEEnvQueryContext_LastSawThreatLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_LastSawThreatLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_LeashLocation
class UMEEnvQueryContext_LeashLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_LeashLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_NextPatrolLoc
class UMEEnvQueryContext_NextPatrolLoc : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_NextPatrolLoc* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_PlayerCameraLocation
class UMEEnvQueryContext_PlayerCameraLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_PlayerCameraLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Maneater.MEEnvQueryContext_PlayerCameraRotation
class UMEEnvQueryContext_PlayerCameraRotation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryContext_PlayerCameraRotation* GetDefaultObj();

};

// 0x120 (0x170 - 0x50)
// Class Maneater.MEEnvQueryGenerator_3DGrid
class UMEEnvQueryGenerator_3DGrid : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderFloatValue             GridHalfExtentX;                                   // 0x50(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             GridHalfExtentY;                                   // 0x88(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             SpaceBetween;                                      // 0xC0(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderIntValue               NumLayers;                                         // 0xF8(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             SpaceBetweenLayers;                                // 0x130(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0x168(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEEnvQueryGenerator_3DGrid* GetDefaultObj();

};

// 0x78 (0xC8 - 0x50)
// Class Maneater.MEEnvQueryGenerator_CombatLocations
class UMEEnvQueryGenerator_CombatLocations : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderFloatValue             DefaultCombatDistance;                             // 0x50(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             DefaultCombatHeight;                               // 0x88(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class UEnvQueryContext>          QueryContext;                                      // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMEEnvQueryGenerator_CombatLocations* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class Maneater.MEEnvQueryGenerator_EscapeVolume
class UMEEnvQueryGenerator_EscapeVolume : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          QueryContext;                                      // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEEnvQueryGenerator_EscapeVolume* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Maneater.MEEnvQueryItemType_CombatLocation
class UMEEnvQueryItemType_CombatLocation : public UEnvQueryItemType_VectorBase
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryItemType_CombatLocation* GetDefaultObj();

};

// 0x0 (0x1F8 - 0x1F8)
// Class Maneater.MEEnvQueryTest_InsideEscapeVol
class UMEEnvQueryTest_InsideEscapeVol : public UEnvQueryTest
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryTest_InsideEscapeVol* GetDefaultObj();

};

// 0x70 (0x268 - 0x1F8)
// Class Maneater.MEEnvQueryTest_IsInsideOcean
class UMEEnvQueryTest_IsInsideOcean : public UEnvQueryTest
{
public:
	struct FAIDataProviderFloatValue             CapsuleRadius;                                     // 0x1F8(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             CapsuleHalfHeight;                                 // 0x230(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEEnvQueryTest_IsInsideOcean* GetDefaultObj();

};

// 0x38 (0x230 - 0x1F8)
// Class Maneater.MEEnvQueryTest_ProjectToSeaLevel
class UMEEnvQueryTest_ProjectToSeaLevel : public UEnvQueryTest
{
public:
	struct FAIDataProviderFloatValue             OffsetZValue;                                      // 0x1F8(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMEEnvQueryTest_ProjectToSeaLevel* GetDefaultObj();

};

// 0x0 (0x1F8 - 0x1F8)
// Class Maneater.MEEnvQueryTest_WaterDepth
class UMEEnvQueryTest_WaterDepth : public UEnvQueryTest
{
public:

	static class UClass* StaticClass();
	static class UMEEnvQueryTest_WaterDepth* GetDefaultObj();

};

// 0x8 (0x280 - 0x278)
// Class Maneater.MEEscapeVolume
class AMEEscapeVolume : public AVolume
{
public:
	uint8                                        Pad_1553[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMEEscapeVolume* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Maneater.MENavArea_Escape
class UMENavArea_Escape : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class UMENavArea_Escape* GetDefaultObj();

};

// 0x10 (0x560 - 0x550)
// Class Maneater.MerEQSTestingPawn
class AMerEQSTestingPawn : public AEQSTestingPawn
{
public:
	class UME_MercunaNavigationComponent*        MercunaNavigation;                                 // 0x550(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1554[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMerEQSTestingPawn* GetDefaultObj();

};

// 0x10 (0x438 - 0x428)
// Class Maneater.OvodusButton
class UOvodusButton : public UButton
{
public:
	class UTexture2D*                            AdvancedHitTexture;                                // 0x428(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdvancedHitAlpha;                                  // 0x430(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1558[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOvodusButton* GetDefaultObj();

	void UpdateCursorOverlaps(struct FGeometry& AllottedGeometry);
	void SetAdvancedHitTexture(class UTexture2D* InTexture);
	void SetAdvancedHitAlpha(int32 InAlpha);
};

}


