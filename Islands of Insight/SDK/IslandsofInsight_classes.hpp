#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x18 (0x238 - 0x220)
// Class IslandsofInsight.ClickableBase
class AClickableBase : public AActor
{
public:
	float                                        ClickDistance;                                     // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableDistanceMessage;                            // 0x224(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FreezePlayerOnEnableInput;                         // 0x225(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         RedoBindingsEveryFrame;                            // 0x226(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_761[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class USophiaInputComponent*                 SophiaInputComponent;                              // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaCharacter*                      InteractingPlayer;                                 // 0x230(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AClickableBase* GetDefaultObj();

	enum class EClickSuccess WouldBeSuccessfulClick(class ASophiaCharacter* Player, struct FHitResult& OutHit, class FText* RetErrorMsg);
	void BP_OnClick(class ASophiaCharacter* Player, struct FHitResult& OutHit);
};

// 0x18 (0x250 - 0x238)
// Class IslandsofInsight.SophiaNetActor
class ASophiaNetActor : public AClickableBase
{
public:
	uint8                                        Pad_77F[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFinishedServerInit;                               // 0x239(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_782[0x16];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASophiaNetActor* GetDefaultObj();

	void OnRep_FinishedServerInit();
	void BPI_TickActor(float DeltaSeconds);
};

// 0x298 (0x4E8 - 0x250)
// Class IslandsofInsight.PuzzleBase
class APuzzleBase : public ASophiaNetActor
{
public:
	uint8                                        Pad_89E[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bLocationMarkerShouldStickToComponents;            // 0x258(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_8A0[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPuzzleTypeData                       PuzzleTypeData;                                    // 0x260(0x68)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_8A4[0x20];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class ASophiaPlayerState*, class ATemporaryLocationPing*> HelpPings;                                         // 0x2E8(0x50)(BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EReplayableFadeMode               ReplayableFadeMode;                                // 0x338(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_8AD[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReplicationDistance;                               // 0x33C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEditorOnlySandboxZonePuzzle;                      // 0x340(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_8B1[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PuzzleData;                                        // 0x348(0x10)(Net, ZeroConstructor, Transient, RepNotify, NonTransactional, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8B7[0x19];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         AwakenIfAlwaysSpawn;                               // 0x371(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnBehaviour                   SpawnBehavior;                                     // 0x372(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRewardPartyMembers;                               // 0x373(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveValue;                                        // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AwardsBlueOrbs;                                    // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8C9[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ItemDropRate;                                      // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  WinMessage;                                        // 0x380(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FString                                EncyclopediaEntryID;                               // 0x398(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsInstanced;                                       // 0x3A8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanAwardAutoQuest;                                 // 0x3A9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8D2[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            SolveSound;                                        // 0x3B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CutsceneDelay;                                     // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8D4[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAwakenData                           AwakenData;                                        // 0x3C0(0x40)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        KrakenId;                                          // 0x400(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NonTransactional, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8DA[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                QuestIDForAnalytics;                               // 0x408(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8DD[0x38];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         CanBeSolvedMultipleTimes;                          // 0x450(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CanSolveAgainAfterRespawn;                         // 0x451(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8E2[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaGameMode*                       GameMode;                                          // 0x458(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PuzzleLocalId;                                     // 0x460(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NonTransactional, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         SpawnBehaviourIntentionallyModified;               // 0x470(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_8E5[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastEditorReserializedVersion;                     // 0x474(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPuzzleCharInfo                       SolverInfo;                                        // 0x478(0x28)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_8ED[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASpawnOverrideVolume*                  ConquestVolume;                                    // 0x4B8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADungeon*                              MyDungeon;                                         // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_8F2[0x20];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APuzzleBase* GetDefaultObj();

	void SetSolvedOnClient(class ASophiaCharacter* Player, float SolveDuration, float Multiplier);
	void SetPuzzleCollision(bool bCollision);
	void Server_UnlockEncyclopediaEntry(class ASophiaCharacter* Player);
	void ResetPuzzle(class ASophiaCharacter* Player, bool SendToServer);
	void OnRep_SolverInfo();
	void OnRep_SolveInfo();
	void OnRep_ReplayableFadeMode();
	void OnRep_PuzzleData();
	void OnRep_KrakenId();
	bool IsSolved();
	bool HasDynamicCollision();
	enum class EMainMapZoneName GetZoneType();
	uint8 GetSolverTeam();
	float GetSolveDurationBy(class ASophiaCharacter* Player);
	TArray<struct FVector> GetPuzzleReplicationLocations();
	float GetNonInstancedBestSolveDuration();
	TArray<bool> GetBlueOrbCounts();
	void BPI_ResetPuzzle();
	void BPI_OnClickedSleepingPuzzle();
	void BPI_OnAwakenStateChange();
	int32 BPC_getAwakenState(class FText* OutErrorMsg);
	void BP_ReplayableDisappear_Client();
	void BP_ReplayableAppear_Client();
	void BP_OnTargeted(bool WouldBeSuccessfulClick);
	void BP_OnSpawned();
	void BP_OnSolved_Server();
	void BP_OnSolved_Client();
	void BP_OnDeserialize();
	void BP_OnBeforeSerialize();
};

// 0x20 (0x508 - 0x4E8)
// Class IslandsofInsight.HiddenCube
class AHiddenCube : public APuzzleBase
{
public:
	class UPoweredMesh*                          CubeMesh;                                          // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            HiddenCubeEvent;                                   // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_949[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayBumpEffect;                                   // 0x500(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_94B[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHiddenCube* GetDefaultObj();

	void BPI_PlayBumpEffect();
	void BP_NotifyPlayerDistance(float DistanceToPlayer);
};

// 0x40 (0x528 - 0x4E8)
// Class IslandsofInsight.PuzzleContainerBase
class APuzzleContainerBase : public APuzzleBase
{
public:
	bool                                         bIsAlwaysSpawn;                                    // 0x4E8(0x1)(ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_95B[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DesiredKrakenID;                                   // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USerializedPuzzle>      DesiredDirectPuzzleRef;                            // 0x4F0(0x28)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DesiredPuzzlePool;                                 // 0x518(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APuzzleContainerBase* GetDefaultObj();

};

// 0x380 (0x8A8 - 0x528)
// Class IslandsofInsight.SophiaRune
class ASophiaRune : public APuzzleContainerBase
{
public:
	int32                                        MatPrimitiveSolvedPuzzleIndex;                     // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatPrimitiveSolvedFXIndex;                         // 0x52C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatPrimitiveEmissiveStrengthIndex;                 // 0x530(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatPrimitiveDissolveIndex;                         // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatPrimitiveEffectsIndex;                          // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A0A[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                MaxDifficultyByUpgradeLevel;                       // 0x540(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bNeverHide;                                        // 0x550(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTutorialMode;                                     // 0x551(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A11[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PuzzleTutorialText;                                // 0x558(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	bool                                         bIsHintTutorial;                                   // 0x570(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldHideExtraGridButtons;                       // 0x571(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FinalPuzzle;                                       // 0x572(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NodeBindForbidden;                                 // 0x573(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableHintSystem;                                  // 0x574(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPuzzleGridType                   GridType;                                          // 0x575(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMemGridWipe                      WipeType;                                          // 0x576(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A1D[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WipeProgress;                                      // 0x578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WipeTime;                                          // 0x57C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WipeThickness;                                     // 0x580(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A23[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Debug_override_memory_grid_upgrade_level;          // 0x58C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A26[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Debug_override_music_grid_upgrade_level;           // 0x598(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A2A[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSpawnPanelOnClick;                                // 0x59D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A2B[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaRune*                           OriginalRune;                                      // 0x5A0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASophiaRune*                           InviteRune;                                        // 0x5A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASophiaCharacter*>              InvitedPlayers;                                    // 0x5B0(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x5C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       WirePositionObject;                                // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoweredMesh*                          RuneMesh;                                          // 0x5D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FOM_Pedistal;                                      // 0x5D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DifficultyIndicatorRoot;                           // 0x5E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         DifficultyISM;                                     // 0x5E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     Particles;                                         // 0x5F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRuneMeshOverrideData>         RuneMeshOverrides;                                 // 0x5F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DissolveCurve;                                     // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseOverDissolveAnimationTime;                    // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_A40[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    NodeBindMat;                                       // 0x618(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APuzzlePanel>              PuzzlePanelClass;                                  // 0x620(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DifficultyIndicatorScale;                          // 0x628(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FormationMinScale;                                 // 0x62C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FormationMaxScale;                                 // 0x630(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StarMinScale;                                      // 0x634(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StarMaxScale;                                      // 0x638(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceRange;                                     // 0x63C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumStars;                                       // 0x640(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_A51[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     StarPositions;                                     // 0x648(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        DifficultyIndicatorHeightAboveRune;                // 0x658(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_A54[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ADifficultyIndicatorActor> DifficultyIndicatorActorClass;                     // 0x660(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         RandomizeGrid;                                     // 0x668(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_A57[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class USophiaRuneReference*                  PrereqReference;                                   // 0x670(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_A59[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationSpeed;                                     // 0x67C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotemIndex;                                        // 0x680(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_A5D[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class APuzzleTotem*                          PuzzleTotem;                                       // 0x688(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPuzzleGrid*                           PuzzleGrid;                                        // 0x690(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaCharacter*                      SPLockPlayer;                                      // 0x698(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveAnimationInitialLerpTime;                     // 0x6A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveAnimationStayTime;                            // 0x6A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveAnimationFadeOutTime;                         // 0x6A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_A62[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODAudioComponent*                   RuneHoverAudioComponent;                           // 0x6B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                   RuneHoverEndAudioComponent;                        // 0x6B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EModifierType, struct FAwakenData> TypeToAwakenByPuzzle;                              // 0x6C0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EClueType, struct FAwakenData> ClueToAwakenByPuzzle;                              // 0x710(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EAnswerKeyType, struct FAwakenData> AnswerKeyToAwakenByPuzzle;                         // 0x760(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class ALocationPing*                         HelpRequestMarker;                                 // 0x7B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReenterDelay;                                      // 0x7B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A74[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class USophiaRuneReference*                  Doppel;                                            // 0x7C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDoppel;                                         // 0x7C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A75[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            DoppelSolveSound;                                  // 0x7D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_A78[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ARunePrereqWire>           PrereqWireClass;                                   // 0x7F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ARunePrereqWire*                       PrereqWire;                                        // 0x7F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSet<class APuzzlePanel*>                    PuzzlePanels;                                      // 0x800(0x50)(NativeAccessSpecifierPrivate)
	class ADifficultyIndicatorActor*             DifficultyIndicatorActor;                          // 0x850(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_A82[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaRune*                           DEPRECATED_prereq;                                 // 0x868(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                DEPRECATED_puzzleTutorialMessage;                  // 0x870(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                DEPRECATED_puzzleFileNameOverride;                 // 0x880(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PuzzleDirectoryOverride;                           // 0x890(0x10)(ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PuzzleIndexOverride;                               // 0x8A0(0x4)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_A88[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASophiaRune* GetDefaultObj();

	void UpdateVisibleForLocalPlayer();
	void UpdateLevelDisplay(int32 Level);
	int32 TryGetPuzzleDifficulty();
	bool ShouldBeVisibleForPlayer(class ASophiaCharacter* ThePlayer);
	void PlaySolveAnimation();
	void OnRep_SPLockPlayer();
	void OnRep_InvitedPlayers(const TArray<class ASophiaCharacter*>& PrevPlayers);
	bool GetIsLocked();
	void BPC_ToggleRuneHelpPing(bool TurnOn);
	void BP_SetRuneVisible(bool IsVisible);
	void BP_OnPrerequisitesSatisfied();
	void BP_OnIsLockedStateUpdated(bool bIsLocked);
	void BP_OnExitRune();
	void BP_OnEnterRune();
	void BP_NotifyRuneDifficulty(int32 Difficulty);
};

// 0x80 (0x928 - 0x8A8)
// Class IslandsofInsight.AirDropPuzzle
class AAirDropPuzzle : public ASophiaRune
{
public:
	float                                        DistanceAboveDropPoint;                            // 0x8A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropSpeed;                                         // 0x8AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PointMultiplier;                                   // 0x8B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B09[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  beaconMesh;                                        // 0x8B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  TeleportMesh;                                      // 0x8C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x8C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DropLocation;                                      // 0x8D0(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B10[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SolvedPlayerName;                                  // 0x8E0(0x18)(Net, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_B11[0x30];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAirDropPuzzle* GetDefaultObj();

	void MultiCast_SendMessage();
	void HitBelowAirDrop(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BP_PuzzleLanded();
	void BP_PrePuzzleLanded();
};

// 0xE0 (0x300 - 0x220)
// Class IslandsofInsight.AirDropRosaryParty
class AAirDropRosaryParty : public AActor
{
public:
	class UStaticMeshComponent*                  RosaryVolume;                                      // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B7A[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APartyRosary*>                  Rosaries;                                          // 0x230(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  RosarySphere;                                      // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  beaconMesh;                                        // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APartyRosary>              RosaryClass;                                       // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberRaycastAttempts;                             // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRaycastDistance;                                // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceAboveDropPoint;                            // 0x268(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropSpeed;                                         // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RevolveTime;                                       // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlyRadius;                                         // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DragonSize;                                        // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumRosaries;                                       // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinnerScore;                                       // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DropLocation;                                      // 0x284(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B9E[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASophiaCharacter*>              ParticipatingPlayers;                              // 0x298(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                SolvedRosariesByPlayer;                            // 0x2A8(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        TotalSolvedRosaries;                               // 0x2B8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_BA3[0x44];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAirDropRosaryParty* GetDefaultObj();

	void OnTimeUp();
	void NetMultiCast_FinishParty();
	void NetMultiCast_AwardPartyWinners(TArray<class ASophiaCharacter*>& Players);
	void MultiCast_SendMessage();
	void BP_OnLanded();
};

// 0x8 (0x260 - 0x258)
// Class IslandsofInsight.AirDropSpawnVolume
class AAirDropSpawnVolume : public AVolume
{
public:
	int32                                        NumberAirDropsToSpawn;                             // 0x258(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_BCA[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAirDropSpawnVolume* GetDefaultObj();

};

// 0x38 (0x298 - 0x260)
// Class IslandsofInsight.SophiaUserWidget
class USophiaUserWidget : public UUserWidget
{
public:
	bool                                         bTickInEditor;                                     // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_BF5[0x37];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaUserWidget* GetDefaultObj();

	void BP_OnTick(float DeltaTime);
};

// 0x18 (0x2B0 - 0x298)
// Class IslandsofInsight.AirdropsWidget
class UAirdropsWidget : public USophiaUserWidget
{
public:
	TArray<class UTextBlock*>                    CreatedTextBlocks;                                 // 0x298(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          BaseCanvas;                                        // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAirdropsWidget* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class IslandsofInsight.Clue
class UClue : public UObject
{
public:
	class UPuzzleGrid*                           Puzzle;                                            // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C10[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UClue* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class IslandsofInsight.Aleph
class UAleph : public UClue
{
public:
	uint8                                        Pad_C21[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAleph* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class IslandsofInsight.AllIslandsAreCongruent
class UAllIslandsAreCongruent : public UClue
{
public:
	uint8                                        Pad_C2D[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAllIslandsAreCongruent* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class IslandsofInsight.AllIslandsHaveOneSize
class UAllIslandsHaveOneSize : public UClue
{
public:
	uint8                                        Pad_C41[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAllIslandsHaveOneSize* GetDefaultObj();

};

// 0x50 (0x530 - 0x4E0)
// Class IslandsofInsight.AutoAimDetectorComponent
class UAutoAimDetectorComponent : public UStaticMeshComponent
{
public:
	class UStaticMeshComponent*                  OutlineStencilMesh;                                // 0x4E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASophiaCharacter*                      LocalPlayer;                                       // 0x4E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         HighlightInteractable;                             // 0x4F0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C5D[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDistance;                                       // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxExtraMultiplier;                                // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinExtraMultiplier;                                // 0x4FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C64[0x30];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAutoAimDetectorComponent* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class IslandsofInsight.AvoidThisPattern
class UAvoidThisPattern : public UClue
{
public:
	uint8                                        Pad_C7D[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAvoidThisPattern* GetDefaultObj();

};

// 0x50 (0x2E8 - 0x298)
// Class IslandsofInsight.BaseWidget
class UBaseWidget : public USophiaUserWidget
{
public:
	class FText                                  TEXTTEST;                                          // 0x298(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bIsHUDWidget;                                      // 0x2B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaySoundOnOpenAndClose;                          // 0x2B1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayedClose;                                     // 0x2B2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowEvenIfFocusWidgetPresent;                     // 0x2B3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowEvenIfCutscenePlaying;                        // 0x2B4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D7F[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            UIHoverEvent;                                      // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            UIOpenEvent;                                       // 0x2C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            UIDenyEvent;                                       // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            UICloseEvent;                                      // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            UIConfirmEvent;                                    // 0x2D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            UIConfirmChildEvent;                               // 0x2E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBaseWidget* GetDefaultObj();

	void SetButtonInteractionSounds();
	void PlayFModSound(class UFMODEvent* InEvent);
	void InitAndPlayBinkVideo(class UBinkMediaPlayer* Video);
	void GetAllWidgets(class UObject* WorldContextObject, TArray<class UWidget*>* Widgets);
	void ComboSelectionSound(const class FString& SelectedItem, enum class ESelectInfo SelectionType);
	void CheckBoxSound(bool InValue);
	void ButtonHoveredSound();
	void ButtonClickedSound();
};

// 0x40 (0x520 - 0x4E0)
// Class IslandsofInsight.BlueOrbFragmentBeam
class UBlueOrbFragmentBeam : public UStaticMeshComponent
{
public:
	struct FVector                               ObeliskPoint;                                      // 0x4E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TrinketPoint;                                      // 0x4EC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeamLength;                                        // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeamAnimation;                                     // 0x4FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           BeamLengthAnimCurve;                               // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                FoundColor;                                        // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                NotFoundColor;                                     // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BeamRevealStrength;                                // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DBA[0xC];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBlueOrbFragmentBeam* GetDefaultObj();

};

// 0x90 (0x578 - 0x4E8)
// Class IslandsofInsight.BlueOrbFragmentPuzzle
class ABlueOrbFragmentPuzzle : public APuzzleBase
{
public:
	uint8                                        Pad_DE6[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       ObeliskTop;                                        // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Obelisk;                                           // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          Trinkets;                                          // 0x500(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TrinketMesh;                                       // 0x510(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBlueOrbFragmentBeam>      BeamClass;                                         // 0x518(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           BeamRevealCurve;                                   // 0x520(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimDuration;                                      // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumTrinkets;                                       // 0x52C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  QuestName;                                         // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecayRate;                                         // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BeamRadius;                                        // 0x53C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxBeamAdditionalLength;                           // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxBeamRestLength;                                 // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            TrinketFoundEvent;                                 // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UBlueOrbFragmentBeam*>          Beams;                                             // 0x550(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<bool>                                 Found;                                             // 0x560(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E0B[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABlueOrbFragmentPuzzle* GetDefaultObj();

	int32 NumFound();
	void BPI_FoundTrinket(class UStaticMeshComponent* Trinket, bool bLoadingFromPersistence);
};

// 0x28 (0x310 - 0x2E8)
// Class IslandsofInsight.CancelProgressBarWidget
class UCancelProgressBarWidget : public UBaseWidget
{
public:
	uint8                                        Pad_E36[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Progress;                                          // 0x2EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayMessage;                                    // 0x2F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                        borderOpacity;                                     // 0x308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E3A[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCancelProgressBarWidget* GetDefaultObj();

	void BPI_DisplayAnim(bool Visible);
};

// 0x10 (0x48 - 0x38)
// Class IslandsofInsight.NumericalClue
class UNumericalClue : public UClue
{
public:
	uint8                                        Pad_E4D[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNumericalClue* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class IslandsofInsight.CaveNumber
class UCaveNumber : public UNumericalClue
{
public:

	static class UClass* StaticClass();
	static class UCaveNumber* GetDefaultObj();

};

// 0x30 (0x318 - 0x2E8)
// Class IslandsofInsight.InputWidget
class UInputWidget : public UBaseWidget
{
public:
	bool                                         bDisableHudAndMovement;                            // 0x2E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMenuInput;                                  // 0x2E9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUIHiddenMouse;                                    // 0x2EA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMouseHiddenWhileDown;                             // 0x2EB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTakeParentsInputComponentIfCan;                   // 0x2EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E81[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                WorldReferenceActor;                               // 0x2F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USophiaInputComponent*                 SophiaInputComponent;                              // 0x2F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInputWidgetTakeControl;                          // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_E85[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInputWidget* GetDefaultObj();

	void OnExitClicked();
	void BP_Init();
	void BP_DoBindings(class USophiaInputComponent* InputComp, enum class EInputDeviceType E);
};

// 0x58 (0x370 - 0x318)
// Class IslandsofInsight.NotificationWidget
class UNotificationWidget : public UInputWidget
{
public:
	float                                        WaitDecayTime;                                     // 0x318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E92[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            SoundToPlay;                                       // 0x320(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNotificationsManagerContainer*        ParentContainer;                                   // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddAsFocusWidget;                                 // 0x330(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E9B[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Header;                                            // 0x338(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Content;                                           // 0x350(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        TimeToPermitAutoDestruction;                       // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EA0[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNotificationWidget* GetDefaultObj();

};

// 0x20 (0x390 - 0x370)
// Class IslandsofInsight.CenterToastCurrencyNotification
class UCenterToastCurrencyNotification : public UNotificationWidget
{
public:
	enum class ECurrencyNotificationType         Type;                                              // 0x370(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EB9[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text;                                              // 0x378(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCenterToastCurrencyNotification* GetDefaultObj();

	void BP_SetText(class FText& InText);
};

// 0x40 (0x2D8 - 0x298)
// Class IslandsofInsight.NotificationsManagerContainer
class UNotificationsManagerContainer : public USophiaUserWidget
{
public:
	class UPanelWidget*                          NotificationsParent;                               // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DoLog;                                             // 0x2A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_ED8[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UNotificationWidget*>           MessageQueue;                                      // 0x2A8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UNotificationWidget*                   CurrentlyShownWidget;                              // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaCharacter*                      SophiaChar;                                        // 0x2C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EE0[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNotificationsManagerContainer* GetDefaultObj();

	void AddToMessageQueue(class UNotificationWidget* InWidget);
};

// 0x18 (0x2F0 - 0x2D8)
// Class IslandsofInsight.CenterToastNotificationContainer
class UCenterToastNotificationContainer : public UNotificationsManagerContainer
{
public:
	TSubclassOf<class UCenterToastCurrencyNotification> CenterMinorNotificationClass;                      // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EEF[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCenterToastNotificationContainer* GetDefaultObj();

	void OnBlueOrbAnimFinished();
};

// 0xA8 (0x380 - 0x2D8)
// Class IslandsofInsight.CentralProgressionNotificationContainer
class UCentralProgressionNotificationContainer : public UNotificationsManagerContainer
{
public:
	class UTexture2D*                            QuestCompletionIcon;                               // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ObjectiveCompletionIcon;                           // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowNonConquestNotificationsInConquest;           // 0x2E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F07[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UMasteryUnlockNotificationWidget> MasteryUnlockedNotificationClass;                  // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UInsightWidget>            InsightUnlockedClass;                              // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UConquestNotificationWidget> ConquestNotificationClass;                         // 0x300(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UQuestNotificationWidget>  QuestCompletionNotificationClass;                  // 0x308(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UQuestNotificationWidget>  QuestObjectiveCompleteNotificationClass;           // 0x310(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UQuestNotificationWidget>  QuestNewObjectiveNotificationClass;                // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UQuestNotificationWidget>  QuestAvailableNotificationWidget;                  // 0x320(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UQuestNotificationWidget>  AutoQuestDiscoveredNotificationWidget;             // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UQuestNotificationWidget>  AutoCompleteNotificationWidget;                    // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNotificationWidget>       LevelUpWidgetClass;                                // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            QuestProgressSound;                                // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            QuestCompleteSound;                                // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            MainQuestAvailableSound;                           // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            Team50VictorySound;                                // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            Team80VictorySound;                                // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            Opponent50VictorySound;                            // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            Opponent80VictorySound;                            // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F27[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCentralProgressionNotificationContainer* GetDefaultObj();

};

// 0x190 (0x1C0 - 0x30)
// Class IslandsofInsight.CharacterCostumeDataAsset
class UCharacterCostumeDataAsset : public UDataAsset
{
public:
	struct FBody                                 Body;                                              // 0x30(0x38)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FHair>                         Hair;                                              // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCostume>                      Clothes;                                           // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCostume>                      Gloves;                                            // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCostume>                      HeadPieces;                                        // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWingsMesh>                    WingsMeshes;                                       // 0xA8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWingsMaterial>                WingsMaterial;                                     // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UUnisexCharacterCostumeDataAsset*      UnisexData;                                        // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F73[0xF0];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterCostumeDataAsset* GetDefaultObj();

	void InitAsset();
	struct FCostumeSingle GetCostumeDataByQuestName(const class FString& InName);
	struct FCostumeSingle GetCostumeDataByName(const class FString& InName);
	struct FCostumeSingle GetCostumeDataByMasteryName(const class FString& InName);
};

// 0x30 (0x60 - 0x30)
// Class IslandsofInsight.UnisexCharacterCostumeDataAsset
class UUnisexCharacterCostumeDataAsset : public UDataAsset
{
public:
	TArray<struct FWingsMesh>                    WingsMeshes;                                       // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWingsMaterial>                WingsMaterial;                                     // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                  TrailColors;                                       // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUnisexCharacterCostumeDataAsset* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class IslandsofInsight.SophiaCosmetic
class USophiaCosmetic : public UObject
{
public:
	int32                                        Price;                                             // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FCE[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           Representation;                                    // 0x30(0x88)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIsMale;                                           // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FD3[0x17];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaCosmetic* GetDefaultObj();

	void Select();
	bool Purchase();
	bool GetIsUnlocked();
	bool GetIsSelected();
	void Deselect();
};

// 0x30 (0x100 - 0xD0)
// Class IslandsofInsight.SophiaCostumeInfo
class USophiaCostumeInfo : public USophiaCosmetic
{
public:
	class FText                                  CostumeName;                                       // 0xD0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                          CostumeColor;                                      // 0xE8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CostumeRainbow;                                    // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FDE[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaCostumeInfo* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class IslandsofInsight.CharacterCustomizationData
class UCharacterCustomizationData : public UDataAsset
{
public:
	TArray<class USophiaCostumeInfo*>            Costumes;                                          // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterCustomizationData* GetDefaultObj();

};

// 0x340 (0x370 - 0x30)
// Class IslandsofInsight.CharacterCustomizationDataAsset
class UCharacterCustomizationDataAsset : public UDataAsset
{
public:
	TArray<struct FCustomization>                Body;                                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                Hair;                                              // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                Face;                                              // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                Clothes;                                           // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                Gloves;                                            // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                HeadPieces;                                        // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                WingsMeshes;                                       // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                WingsMaterial;                                     // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        BodyNames;                                         // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        HairNames;                                         // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        FaceNames;                                         // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        ClothesNames;                                      // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        GlovesNames;                                       // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        HeadPieceNames;                                    // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FStringArray>                  ClothesArrayNames;                                 // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FStringArray>                  GlovesArrayNames;                                  // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FStringArray>                  HeadPieceArrayNames;                               // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        WingMeshNames;                                     // 0x140(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        WingMaterialNames;                                 // 0x150(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        TrailColorNames;                                   // 0x160(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        TrailSystemNames;                                  // 0x170(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        FaceTattooNames;                                   // 0x180(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        BodyTattooNames;                                   // 0x190(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        HairColorNames;                                    // 0x1A0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        HairSecondaryColorNames;                           // 0x1B0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        HairEthericColorNames;                             // 0x1C0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        EyebrowColorNames;                                 // 0x1D0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        EyeColorNames;                                     // 0x1E0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        SkinColorNames;                                    // 0x1F0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        PatinaNames;                                       // 0x200(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        BurnishNames;                                      // 0x210(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        AuraNames;                                         // 0x220(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UUnisexCharacterCustomizationDataAsset* UnisexData;                                        // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterCustomizationDataAsset*      OppositeSexData;                                   // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1082[0x130];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterCustomizationDataAsset* GetDefaultObj();

	int32 InvertIndexRemapping(int32 Index, enum class ECustomizationTypes Type);
	void InitAsset();
	int32 IndexRemapping(int32 Index, enum class ECustomizationTypes Type);
	TArray<class FString> GetNames(enum class ECustomizationTypes Types, int32 Index, bool* bIsValid, int32* MaxIndex, bool bShowLocked);
	int32 GetItemEquipIndex(enum class ECustomizationTypes Types, const class FString& ItemId);
	struct FCustomizationSingle GetCustomizationDataByQuestName(const class FString& InName);
	struct FCustomizationSingle GetCustomizationDataByName(const class FString& InName);
	struct FCustomizationSingle GetCustomizationDataByMasteryName(const class FString& InName);
	struct FCustomizationSingle GetCustomizationDataByIndex(int32 Index, enum class ECustomizationTypes Type);
	float GetCost(const class FString& ItemId);
};

// 0xF0 (0x120 - 0x30)
// Class IslandsofInsight.UnisexCharacterCustomizationDataAsset
class UUnisexCharacterCustomizationDataAsset : public UDataAsset
{
public:
	TArray<struct FCustomization>                WingsMeshes;                                       // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                WingsMaterial;                                     // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                TrailColors;                                       // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                Hair;                                              // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                TrailSystem;                                       // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                HairColor;                                         // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                HairSecondaryColor;                                // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                HairEthericColor;                                  // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                EyebrowColor;                                      // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                EyeColor;                                          // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                SkinColor;                                         // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                Patina;                                            // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                Burnish;                                           // 0xF0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomization>                Aura;                                              // 0x100(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTattooFaceDataAsset*                  FaceTattoo;                                        // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTattooBodyDataAsset*                  BodyTattoo;                                        // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUnisexCharacterCustomizationDataAsset* GetDefaultObj();

};

// 0x0 (0x810 - 0x810)
// Class IslandsofInsight.CharacterCustomizerCamera
class ACharacterCustomizerCamera : public ACineCameraActor
{
public:

	static class UClass* StaticClass();
	static class ACharacterCustomizerCamera* GetDefaultObj();

	void ResizeSceneCapture(class USceneCaptureComponent2D* SceneCapture);
};

// 0x10 (0x40 - 0x30)
// Class IslandsofInsight.CharacterTitleDataAsset
class UCharacterTitleDataAsset : public UDataAsset
{
public:
	TArray<class FText>                          PlayerTitles;                                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterTitleDataAsset* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class IslandsofInsight.SophiaInputBoundActorComponent
class USophiaInputBoundActorComponent : public UActorComponent
{
public:
	class USophiaInputComponent*                 InputComponent;                                    // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaCharacter*                      Player;                                            // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10C6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaInputBoundActorComponent* GetDefaultObj();

};

// 0x58 (0x120 - 0xC8)
// Class IslandsofInsight.CharCutsceneComponent
class UCharCutsceneComponent : public USophiaInputBoundActorComponent
{
public:
	uint8                                        Pad_10FD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UCancelProgressBarWidget>  HoldToSkipClass;                                   // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  SkipMessage;                                       // 0xE0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1105[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCancelProgressBarWidget*              HoldToSkipWidget;                                  // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALevelSequenceActor*                   CurCutscene;                                       // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EMainMapZoneName                  QueuedZoneToUnlock;                                // 0x118(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_110E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharCutsceneComponent* GetDefaultObj();

	void StopCutscene();
	void PlayCutscene(class ALevelSequenceActor* Cutscene, float Delay);
	void ForceEndCutscene(class UWorld* World);
};

// 0x118 (0x1C8 - 0xB0)
// Class IslandsofInsight.CharGridComponent
class UCharGridComponent : public UActorComponent
{
public:
	uint8                                        Pad_1155[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APuzzlePanel*                          Panel;                                             // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1156[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                MaxHintsByLevel;                                   // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGridInputComponent*                   GridInputComp;                                     // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APuzzlePanel>              PuzzlePanelClass;                                  // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class ASophiaRune*, struct FPuzzleCoordinate> RuneToLastControllerSelect;                        // 0x118(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_115D[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharGridComponent* GetDefaultObj();

	void Server_SendGridPuzzleChange(class UPuzzleGrid* Puzzle, class ASophiaRune* Rune, const struct FSingleGridCellEdit& Move);
	void Server_CloseRune(class ASophiaRune* Rune);
	int32 GetMaxHints();
	float GetHintRechargeRate();
};

// 0xF0 (0x1A0 - 0xB0)
// Class IslandsofInsight.CharItemComponent
class UCharItemComponent : public UActorComponent
{
public:
	class UTexture2D*                            NoItemTexture;                                     // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1220[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDefaultItems*                         ItemsDataAsset;                                    // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1222[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EItemType, float>            ItemProbabilityWeights;                            // 0x118(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInventoryData>                Inventory;                                         // 0x168(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_122A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      Player;                                            // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_122C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharItemComponent* GetDefaultObj();

	void OnRep_inventory();
	bool ItemEnabled(enum class EItemType Type);
	bool ItemAvailable(enum class EItemType Type);
	float GetItemMagnitude(enum class EItemType Type);
	int32 GetItemCount(enum class EItemType Type);
	void Client_ResetItems(bool Death);
	void Client_ProcessPickupByType(enum class EItemType ItemType, bool PlayEffects, bool DisplayPickupMessage, bool SwitchTo, bool CheatVariant);
	void Client_ProcessPickup(class UItem* Item, bool PlayEffects, bool DisplayPickupMessage, bool SwitchTo);
	void Client_DeActivateItem(enum class EItemType ItemTpye);
	void Client_ActivateItem(enum class EItemType ItemType);
};

// 0xD8 (0x1A0 - 0xC8)
// Class IslandsofInsight.CharMapComponent
class UCharMapComponent : public USophiaInputBoundActorComponent
{
public:
	class UMarkerTextures*                       MarkerTextures;                                    // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EMainMapZoneName, TSubclassOf<class UUserWidget>> ZoneUnlockAnimations;                              // 0xD0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class ULargeMapViewWidget*                   LatestLargeMapWidget;                              // 0x120(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12D8[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharMapComponent* GetDefaultObj();

	void LocalPlayerExclusive_SetHideMinimap(bool MapMode);
	bool IsHidingMinimap();
	TArray<bool> GetZoneUnlockStateByIndex();
	bool GetLoreUnlockCounts(int32 ZoneIndex, int32* PickupNumerator, int32* PickupDenominator, int32* SandboxNumerator, int32* SandboxDenominator);
	class ULargeMapViewWidget* GetLatestLargeMapWidget();
	bool GetDungeons(int32 ZoneIndex, TArray<class ADungeon*>* Dungeons);
	bool GetDungeonCounts(int32 ZoneIndex, int32* MainNumerator, int32* MainDenominator, int32* OptionalNumerator, int32* OptionalDenominator);
	bool GetBlueOrbCounts(int32 ZoneIndex, int32* CampaignNumerator, int32* CampaignDenominator, int32* SideQuestNumerator, int32* SideQuestDenominator, int32* PuzzleNumerator, int32* PuzzleDenominator);
};

// 0x30 (0xF8 - 0xC8)
// Class IslandsofInsight.CharPowerComponent
class UCharPowerComponent : public USophiaInputBoundActorComponent
{
public:
	TSubclassOf<class APowerPole>                PowerPoleClass;                                    // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoAimMaxAngleDiff;                               // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_133D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APowerPole*                            PowerPole;                                         // 0xD8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAutoAimDetectorComponent*             CurTargeted;                                       // 0xE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                PowerNetworkParent;                                // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1340[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharPowerComponent* GetDefaultObj();

	void Server_ShowNode();
	void Server_PlaceNode(struct FVector& Loc);
	void Server_Cancel();
	void Server_addLaser(class AActor* Target, bool UseImpactPoint, const struct FVector& ImpactPoint, bool PrioritizeImpactPoint, class UPrimitiveComponent* TargetComponent);
	void OnRep_PowerPole(class APowerPole* Old);
	bool InPowerMode();
	void CheatAddLaser(class AActor* Puzzle, class UPrimitiveComponent* Comp);
};

// 0x108 (0x1D0 - 0xC8)
// Class IslandsofInsight.CharPuzzleComponent
class UCharPuzzleComponent : public USophiaInputBoundActorComponent
{
public:
	TArray<class APuzzleBase*>                   WorkedOnPuzzles;                                   // 0xC8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class ARacingMetaPuzzle*                     CurRacingMetaPuzzle;                               // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMultiplayerLaserPuzzleBase*           CurMultiplayerPuzzle;                              // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MultiplayerPuzzleStartTime;                        // 0xE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1531[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APathIntegration*                      CurrentPathIntegration;                            // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ARacingRings*                          CurrentRacingRingsCourse;                          // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ARacingCheckpointsMinigame*            CurrentRacingCheckpoints;                          // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKlotskiPuzzle*                        CurKlotskiPuzzle;                                  // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AViewfinderCamera*                     ActiveViewfinder;                                  // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFocusablePuzzle*                      CurrentFocusedPuzzle;                              // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRosaryComboTracker                   RosaryComboTracker;                                // 0x120(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_154B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInGravityWellMode;                                // 0x12D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_154E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGravityBallProjectile>    BP_GravProjectileClass;                            // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGravityBallProjectile*                OldGravityBallProjectile;                          // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1551[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class APuzzleBase*, float>              DynamicCollisionPuzzlesMap;                        // 0x178(0x50)(NativeAccessSpecifierPrivate)
	class ARacingBalls*                          PrevCurRacingBalls;                                // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UCharPuzzleComponent* GetDefaultObj();

	void Server_UpdatePuzzleProgress(class APuzzleBase* Puzzle, const class FString& SolverKrakenId, const class FString& SerializedProgress);
	void Server_ToggleMultiplayerLaserPuzzleTarget(class UMultiplayerLaserTarget* T);
	void Server_SpawnGravProjectiles(struct FVector& Location, struct FRotator& Rotation, class AGravityBallBase* PuzzleActor);
	void Server_SetRyoanjiLastSolveLoc(class ARyoanjiPuzzle* P, const struct FVector2D& Loc);
	void Server_SetRosaryTeam(class ARosary* P, int32 Team);
	void Server_SendSolved(class APuzzleBase* P, float SolveTime, float Multiplier, const struct FBhvrAnalyticsEvent_Base& EventData);
	void Server_SendReset(class APuzzleBase* P);
	void Server_SendFractalJigsawMove(class AFractalJigsaw* FractalJigsaw, struct FFractalJigsawMove& Move);
	void Server_RollCube(class ARollingCubeGridBase* P, int32 Direction, int32 Index);
	void Server_MoveKlotskiBlock(class AKlotskiPuzzle* P, const struct FIntPoint& Direction, int32 Index);
	void Server_ClaimFocusablePuzzle(class AFocusablePuzzle* P, bool SeatingDown, int32 SeatIndex);
	void Server_ClaimCube(class ARollingCubeGridBase* P, int32 Index, bool CLAIM, bool SOLVED);
	void Server_AddRemovePuzzleWorker(class AMultiplayerPuzzleBase* P, bool Add);
	void Multicast_SpawnGravProjectiles(struct FVector& Location, struct FRotator& Rotation, class AGravityBallBase* PuzzleActor);
	class ASeek5* GetCurrentSeek5();
	TArray<class ARacingPuzzle*> GetCurrentRacingPuzzles();
	class ARacingBalls* GetCurrentRacingBalls();
	class AMirrorMazePuzzle* GetCurrentMirrorMaze();
	TArray<class ASeek5*> GetAllActiveSeek5s();
	void Client_OnSolveMultiplayerPuzzle(class APuzzleBase* Mp);
	void Client_OnReceivePartyReward(class APuzzleBase* Pb, int32 Reward);
	void CancelRaceAndPathPuzzles();
};

// 0x90 (0x158 - 0xC8)
// Class IslandsofInsight.CharSpiritComponent
class UCharSpiritComponent : public USophiaInputBoundActorComponent
{
public:
	uint8                                        Pad_15AE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    SpiritModePostProcessRef;                          // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              SpiritModePostProcessMaterial;                     // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ASpiritGem>                SpiritGemClass;                                    // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SmallGemRigor;                                     // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LargeGemRigor;                                     // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASpiritGem*>                    SpawnedSpiritGems;                                 // 0xF8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        IllegalAreaAroundPlayerSquared;                    // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GemPerMeterSquareAverage;                          // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Seed;                                              // 0x110(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         InSpiritMode;                                      // 0x114(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15C5[0x43];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharSpiritComponent* GetDefaultObj();

	void Server_TurnOnSpiritMode(const struct FVector& PlayerLoc);
	void Server_GemOverlap(class ASpiritGem* Gem);
	void OnRep_inSpiritMode(bool Old);
};

// 0x10 (0x248 - 0x238)
// Class IslandsofInsight.ItemPickup
class AItemPickup : public AClickableBase
{
public:
	class UStaticMeshComponent*                  boxMesh;                                           // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemData*                             Item;                                              // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AItemPickup* GetDefaultObj();

};

// 0x8 (0x250 - 0x248)
// Class IslandsofInsight.Chest
class AChest : public AItemPickup
{
public:
	bool                                         bIsOpen;                                           // 0x248(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AChest* GetDefaultObj();

};

// 0x0 (0x238 - 0x238)
// Class IslandsofInsight.ClickableThroughWallBase
class AClickableThroughWallBase : public AClickableBase
{
public:

	static class UClass* StaticClass();
	static class AClickableThroughWallBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.ClueUtil
class UClueUtil : public UObject
{
public:

	static class UClass* StaticClass();
	static class UClueUtil* GetDefaultObj();

};

// 0x0 (0x260 - 0x260)
// Class IslandsofInsight.CoinAccessWidget
class UCoinAccessWidget : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UCoinAccessWidget* GetDefaultObj();

	void BPC_GetCoinsInfo(int32* AdditionalCoins, int32* TotalCoins);
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.CompleteThePatternGenerator
class UCompleteThePatternGenerator : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UCompleteThePatternGenerator* GetDefaultObj();

	void GenerateManyAndWriteToFiles(int32 Num);
};

// 0x8 (0x40 - 0x38)
// Class IslandsofInsight.Connected
class UConnected : public UClue
{
public:
	uint8                                        Pad_163A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UConnected* GetDefaultObj();

};

// 0x2B8 (0x5C0 - 0x308)
// Class IslandsofInsight.SophiaGameMode
class ASophiaGameMode : public AGameMode
{
public:
	TArray<class ARacingMetaPuzzle*>             ActivatableRacingMetaPuzzles;                      // 0x308(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1678[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBox>                          RacingMetaConeAcceptableVolumes;                   // 0x348(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDistinctColorPicker*                  DistinctColorPicker;                               // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetCorePower;                                   // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetWisdom;                                      // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TutorialTargetWisdom;                              // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TargetCubesLinkedToCore;                           // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TargetRosariesFound;                               // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TargetPurpleCubesSolved;                           // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TargetMatchboxesMatched;                           // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1685[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                AirDropCorePowerThresholds;                        // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsDungeon;                                        // 0x390(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_168A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALeaderboardMonolith*                  LeaderboardMonolith;                               // 0x398(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_168B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AGoldenRosary>           GoldenRosaryClass;                                 // 0x3A8(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AAirDropPuzzle>          SinglePlayerAirDropPuzzleClass;                    // 0x3D0(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AAirDropPuzzle>          MultiplayerAirDropPuzzleClass;                     // 0x3F8(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AAirDropRosaryParty>     RosaryPartyAirDropClass;                           // 0x420(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ARacingMetaPuzzle>       RacingMetaPuzzleClass;                             // 0x448(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AItemPickup>             ItemPickupClass;                                   // 0x470(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class APuzzleBase>             HiddenCubeClass;                                   // 0x498(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IgnoreSpawnProbabilities;                          // 0x4C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_169E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSoftClassPtr<class APuzzleBase>, float> SpawnProbability_NonSerializedPuzzles;             // 0x4C8(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        ItemSpawnChance;                                   // 0x518(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HiddenCubeSpawnOverride;                           // 0x51C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaOnlineBeaconHostObject*         HostObject;                                        // 0x520(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnProbabilityMultiplier;                        // 0x528(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGameStartType                    GameStartType;                                     // 0x52C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16AC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDistinctColorPicker*                  ColorPickerBPReference;                            // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APuzzleBase*>                   AllPuzzles;                                        // 0x538(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class ASophiaNetActor*>               InitAfterTickActors;                               // 0x548(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AAirDropSpawnVolume*>           AirDropSpawnVolumes;                               // 0x558(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AItemPickup*>                   SpawnedItemPickups;                                // 0x568(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B7[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASophiaGameMode* GetDefaultObj();

	void SpawnAirDrop(int8 Type);
	enum class EGameStartType GetGameStartType();
	float GetAverageFPS();
	bool CreateHostBeacon();
	void BlockTillLevelStreamingCompleted();
};

// 0x18 (0x5D8 - 0x5C0)
// Class IslandsofInsight.ConquestGameMode
class AConquestGameMode : public ASophiaGameMode
{
public:
	int32                                        ConquestMatchDuration;                             // 0x5C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16D6[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AConquestGameMode* GetDefaultObj();

};

// 0x258 (0x4E8 - 0x290)
// Class IslandsofInsight.SophiaGameState
class ASophiaGameState : public AGameState
{
public:
	bool                                         bSpawningDone;                                     // 0x290(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1745[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GamePower;                                         // 0x294(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TargetCorePower;                                   // 0x298(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1747[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APuzzleRegistrationPlatform*>   GlobalActivePuzzleRegistrationPlatforms;           // 0x2A0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class APuzzleRegistrationPlatform*>   LocalActivePuzzleRegistrationPlatforms;            // 0x2B0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMultiplayerLaserTarget*>       ActiveMultiplayerLaserPuzzleTargets;               // 0x2C0(0x10)(ExportObject, Net, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AJumpingPad*>                   ActiveMultiplayerJumpPads;                         // 0x2D0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AGoddessBeacon*>                GoddessBeacons;                                    // 0x2E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UPoweredMesh*>                  ActivatedMeshes;                                   // 0x2F0(0x10)(ExportObject, Net, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ActiveAirDropPuzzles;                              // 0x300(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        MarkerEmittingActors;                              // 0x310(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         MarkerEmittingActorsCacheValid;                    // 0x320(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1751[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASpawnOverrideVolume*>          AllConquestVolumes;                                // 0x328(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class APuzzleBase*>                   AllActivePuzzles;                                  // 0x338(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1755[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ARosary*>                       AllActiveRosaries;                                 // 0x398(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ASecretSignifier*>              AllSecrets;                                        // 0x3A8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                AnalyticsGameTypeName;                             // 0x3B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PuzzleSetupComplete;                               // 0x3C8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1759[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ARespawningPuzzlesVolume*>      RespawningPuzzlesVolumes;                          // 0x3D0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class USandboxZone*>                  SandboxZones;                                      // 0x3E0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<class APuzzleBase*, class FString>      AutoReplicatedPuzzlesToJsonString_Server;          // 0x3F0(0x50)(NativeAccessSpecifierPublic)
	TArray<class AMusicVolume*>                  MusicVolumes;                                      // 0x440(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ACharacter*>                    SpawnedAIs;                                        // 0x450(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EGameStartType                    GameStartType;                                     // 0x460(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         PoleGivesSolverPoints;                             // 0x461(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         PlacePoweredPolesOnly;                             // 0x462(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ForbidPowerCycles;                                 // 0x463(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         PolesEnabled;                                      // 0x464(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpiritModeEnabled;                                // 0x465(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1761[0x1A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AMapCamera*                            MapCamera;                                         // 0x480(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1762[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASophiaGameState* GetDefaultObj();

	void ServerExclusive_SendAllFeedMessages();
	void ServerExclusive_AddGlobalFeedMessage(const struct FFeedMessage& Msg);
	void RestartServer();
	void OnRep_PuzzleSetupComplete();
	void NetMultiCast_AddFeedMessage(TArray<struct FFeedMessage>& FeedMessages);
	void InitDungeonsAfterSpawn();
	void InitDungeons();
	bool GetSpiritModeEnabled();
	class ASecretSignifier* GetSecretForEntryId(const class FString& EntryId);
	bool GetPolesEnabled();
	bool GetPoleGivesSolverPoints();
	class ASophiaPlayerState* GetPlayerByKrakenId(const class FString& KrakenUserId);
	bool GetPlacePoweredPolesOnly();
	class AMapCamera* GetMapCamera();
	enum class EGameStartType GetGameStartType();
	enum class EGameModeType GetGameModeType();
	bool GetForbidPowerCycles();
	class ASpawnOverrideVolume* GetConquestVolume(int32 Index);
	void ForceStartMatch();
	TArray<class APuzzleBase*> BPC_getActivePuzzlesInMap(const class FString& KrakenType);
	void BP_OnGameEnd(class ASophiaCharacter* Victor);
};

// 0x188 (0x670 - 0x4E8)
// Class IslandsofInsight.ConquestGameState
class AConquestGameState : public ASophiaGameState
{
public:
	TArray<float>                                CoopQuestCutoffs;                                  // 0x4E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                NumExpInArea;                                      // 0x4F8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                NumPuzzlesInArea;                                  // 0x508(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                WinThresholdInArea;                                // 0x518(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTeamPuzzleCount>              SolvedPuzzlesInfoInArea;                           // 0x528(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTeamPuzzleCount>              SlowCaptureProgress;                               // 0x538(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                RedTeamPuzzleScore;                                // 0x548(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                BlueTeamPuzzleScore;                               // 0x558(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1804[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ConquestPoleEnableTimer;                           // 0x570(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1807[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GameOverTimerInSeconds;                            // 0x57C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCountdownStarted;                                 // 0x580(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMatchStarted;                                     // 0x581(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_180A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CountdownTime;                                     // 0x584(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CoopDuration;                                      // 0x588(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_180D[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ConquestScoreNeededToWin;                          // 0x5C0(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EConquestScoreType                ConquestScoreType;                                 // 0x5C4(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGameOver;                                         // 0x5C5(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1810[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GameOverAnalyticsEventID;                          // 0x5C8(0x10)(BlueprintVisible, Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumZonesRed;                                       // 0x5D8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumZonesBlue;                                      // 0x5DC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                WinningTeamInEachArea;                             // 0x5E0(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1814[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TeamRedScore;                                      // 0x600(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TeamBlueScore;                                     // 0x604(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ItemsEnabled;                                      // 0x608(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1815[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AStartingIsland*                       StartingIsland;                                    // 0x648(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APowerCore*>                    AllPowerCores;                                     // 0x650(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                        PuzzleClasses;                                     // 0x660(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AConquestGameState* GetDefaultObj();

	void ProcessWinningTeamInEachAreaChanges();
	void OnRep_TeamRedScore(int32 PrevScore);
	void OnRep_TeamBlueScore(int32 PrevScore);
	void OnRep_MatchStarted();
	void OnRep_GameOver();
	void NetMulticast_ShowCore(class APowerCore* Core);
	TArray<int32> GetWinningTeamInEachArea();
	int32 GetTeamScore(int32 TeamIndex);
	uint8 GetNumZonesTeamRed();
	uint8 GetNumZonesTeamBlue();
	bool GetMatchStarted();
	bool GetIsGameOver();
	int32 GetGameOverTimerInSeconds();
	int32 GetCountDownTime();
	bool GetCountdownStarted();
	int32 GetCoopTimeLeft();
	int32 GetCoopScore();
	enum class EConquestScoreType GetConquestScoreType();
	int32 GetConquestScoreNeededToWin();
	int32 GetConquestPoleEnableTimer();
	bool GetConquestItemsEnabled();
	TArray<class APowerCore*> GetAllPowerCores();
};

// 0x50 (0x2E8 - 0x298)
// Class IslandsofInsight.ConquestGlobalProgressBar
class UConquestGlobalProgressBar : public USophiaUserWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            RedTeamText;                                       // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BlueTeamText;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            RedScoreText;                                      // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BlueScoreText;                                     // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            GoalText;                                          // 0x2C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBox*                        ZoneIconBox;                                       // 0x2C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ZoneRedTex;                                        // 0x2D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ZoneBlueTex;                                       // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ZoneEmptyTex;                                      // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UConquestGlobalProgressBar* GetDefaultObj();

};

// 0x28 (0x2C0 - 0x298)
// Class IslandsofInsight.ConquestHUDInformationWidget
class UConquestHUDInformationWidget : public USophiaUserWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            RedTeamText;                                       // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            BlueTeamText;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            RedScoreText;                                      // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            BlueScoreText;                                     // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UConquestHUDInformationWidget* GetDefaultObj();

	void BP_VisualizeZoneWithIndex(int32 Index, bool bShow, float RedProgress, float blueProgress, const struct FLinearColor& CaptureColor, class FText& ZoneShortName, bool CompletedFully);
	void BP_VisualizeLocalZone(bool Show, float RedProgress, float blueProgress, const struct FLinearColor& CaptureColor, class FText& ZoneShortName, bool CompletedFully);
	void BP_VisualizeLocalPlayerTeam(bool IsRedTeam);
	void BP_VisualizeGlobalScore(float RedPercentage, float BluePercentage);
	void BP_VisualizeCoopScore(int32 Score, int32 Time, int32 RedSolvedNum, int32 blueSolvedNum);
	void BP_VisualizeCoopClosestPeople(TArray<struct FConquestPersonPerformanceInformation>& SortedInfos);
};

// 0x40 (0x2D8 - 0x298)
// Class IslandsofInsight.ConquestLeaderboardWidget
class UConquestLeaderboardWidget : public USophiaUserWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            RedScoreText;                                      // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BlueScoreText;                                     // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            RedListText;                                       // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BlueListText;                                      // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            RedPlayerText;                                     // 0x2C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BluePlayerText;                                    // 0x2C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPlayersInListPerTeam;                           // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1874[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UConquestLeaderboardWidget* GetDefaultObj();

};

// 0x68 (0x300 - 0x298)
// Class IslandsofInsight.ConquestLocalProgressBar
class UConquestLocalProgressBar : public USophiaUserWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                ZoneIconImage;                                     // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            ZoneNameText;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            RedScoreText;                                      // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BlueScoreText;                                     // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            RedSlowCaptureScoreText;                           // 0x2C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BlueSlowCaptureScoreText;                          // 0x2C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            HelpText;                                          // 0x2D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                ProgressBarImg;                                    // 0x2D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              ProgressDMat;                                      // 0x2E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ZoneRedTex;                                        // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ZoneBlueTex;                                       // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ZoneEmptyTex;                                      // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UConquestLocalProgressBar* GetDefaultObj();

};

// 0x10 (0x380 - 0x370)
// Class IslandsofInsight.ConquestNotificationWidget
class UConquestNotificationWidget : public UNotificationWidget
{
public:
	struct FLinearColor                          TeamColour;                                        // 0x370(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UConquestNotificationWidget* GetDefaultObj();

};

// 0x48 (0xF8 - 0xB0)
// Class IslandsofInsight.ConquestRecordComponent
class UConquestRecordComponent : public UActorComponent
{
public:
	TArray<struct FConquestAwardInfo>            AwardInfoTemplate;                                 // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class APuzzleBase>>       PuzzleTypes;                                       // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_18A2[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UConquestRecordComponent* GetDefaultObj();

	void ResetData();
	TArray<struct FConquestAwardInfo> RandomSelectAwards(TArray<struct FConquestAwardInfo>& Awards, int32 DesiredMin, int32 DesiredMax);
	TArray<struct FConquestAwardInfo> PreprocessAwards(TArray<struct FConquestAwardInfo>& Raws);
	void NotifyPuzzleSolved(class APuzzleBase* ThePuzzle);
	void NotifyPlayerMoved(const struct FVector& DeltaPosition);
	void NotifyMasteryBeforeUpdate(class UPlayerMastery* TheMastery);
	void NotifyMasteryAfterUpdate(class UPlayerMastery* TheMastery);
	class ASophiaCharacter* GetOwnerClientside();
	TArray<struct FMasterySnapshot> GetMasterySnapshots();
	TArray<struct FConquestAwardInfo> GenerateAwardsRaw();
};

// 0x18 (0x238 - 0x220)
// Class IslandsofInsight.COWYCVolume
class ACOWYCVolume : public AActor
{
public:
	class UBoxComponent*                         TheBox;                                            // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UInputWidget>              TutorialWidgetClass;                               // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputWidget*                          TutorialWidget;                                    // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ACOWYCVolume* GetDefaultObj();

};

// 0x8 (0x2F0 - 0x2E8)
// Class IslandsofInsight.Crosshair
class UCrosshair : public UBaseWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCrosshair* GetDefaultObj();

	bool HasLookTarget();
};

// 0x0 (0x30 - 0x30)
// Class IslandsofInsight.CustomRichTextBlockImageDecorator
class UCustomRichTextBlockImageDecorator : public URichTextBlockImageDecorator
{
public:

	static class UClass* StaticClass();
	static class UCustomRichTextBlockImageDecorator* GetDefaultObj();

};

// 0x3B8 (0x5F0 - 0x238)
// Class IslandsofInsight.PuzzlePanel
class APuzzlePanel : public AClickableBase
{
public:
	class UCameraComponent*                      WorldViewCamera;                                   // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNewGridUI*                            GridUIWidget;                                      // 0x248(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  PanelMesh;                                         // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       GridSpace;                                         // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNewGridUI>                GridUIClass;                                       // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, class UMaterialInterface*> DecalMaterials;                                    // 0x270(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        RedHighlightWidth;                                 // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RedHighlightThickness;                             // 0x2C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPanelMaterialOverrideData>    PanelMaterialOverrides;                            // 0x2C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UFMODEvent*>                    ColorCellEvent;                                    // 0x2D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                            BlackAndWhiteEvent;                                // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            ClueSatisfiedEvent;                                // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                   ClueUnsatisfiedEventComponent;                     // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            EnterPuzzleModeEvent;                              // 0x300(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            HintFailedEvent;                                   // 0x308(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            HoverEvent;                                        // 0x310(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            QFPSolvedEvent;                                    // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, class UFMODEvent*>         MusicPuzzleDrumEvents;                             // 0x320(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class UFMODEvent*>         MusicPuzzlePitchEvents;                            // 0x370(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         GrayCell_Shadows;                                  // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         GrayCell_OuterCorners;                             // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         GrayCell_Edges;                                    // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         GrayCell_InnerCorners;                             // 0x3D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         GrayCell_SmoothPieces;                             // 0x3E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         DarkCell_OuterCorners;                             // 0x3E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         DarkCell_Edges;                                    // 0x3F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         DarkCell_InnerCorners;                             // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         DarkCell_SmoothPieces;                             // 0x400(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         LightCell_OuterCorners;                            // 0x408(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         LightCell_Edges;                                   // 0x410(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         LightCell_InnerCorners;                            // 0x418(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         LightCell_SmoothPieces;                            // 0x420(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         GivenCasingsLight;                                 // 0x428(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         GivenCasingsDark;                                  // 0x430(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         RedHighlightOutlines;                              // 0x438(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*              PanelCaptureComponent;                             // 0x440(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    GridOverlayPostProcessMaterial;                    // 0x448(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 PostProcess;                                       // 0x450(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          GridMaterialParameters;                            // 0x458(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalSizeMultiplier;                               // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPerspectiveFollowsMouse;                          // 0x464(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             FinalPerspectiveLoc;                               // 0x468(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PerspectiveEasingExponent;                         // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PerspectiveChangeRate;                             // 0x474(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseFocusHeight;                                  // 0x478(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceFromCamera;                                // 0x47C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              GridOverlayPostProcessMaterialDynamic;             // 0x480(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1901[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaRune*                           Rune;                                              // 0x498(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGridControlType                  ControlType;                                       // 0x4A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1904[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Side;                                              // 0x4A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TileAnimationDuration;                             // 0x4A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BackgroundAnimationDuration;                       // 0x4AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BackgroundAnimationStartTime;                      // 0x4B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UIAnimationDuration;                               // 0x4B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UIAnimationStartTime;                              // 0x4B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SceneCaptureFadeDuration;                          // 0x4BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SceneCaptureFadeStartTime;                         // 0x4C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalDitherFadeDuration;                           // 0x4C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FOVChangeDuration;                                 // 0x4C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalDitherFadeStartTime;                          // 0x4CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationRotationIntensity;                        // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationMaxLateralTranslation;                    // 0x4D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationMinVerticalTranslation;                   // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationMaxVerticalTranslation;                   // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationInitialTileVelocity;                      // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationFinalTileVelocity;                        // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationInitialTileRandomVelocity;                // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationInitialTileScale;                         // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1907[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClue*>                         AssociatedCluesToInstructionTipTypes;              // 0x508(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class ATextRenderActor*>              ToolTipText;                                       // 0x518(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UDecalComponent*>               ClueDecals;                                        // 0x528(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UClue*>                         AssociatedCluesToClueDecals;                       // 0x538(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                    ButtonBeginTransforms;                             // 0x548(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                    ButtonEndTransforms;                               // 0x558(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                       ButtonInitialVelocities;                           // 0x568(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_190B[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFMODAudioComponent*>           MusicGridSounds;                                   // 0x5C8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<float>                                MusicGridSoundOnsetTimes;                          // 0x5D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_190C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APuzzlePanel* GetDefaultObj();

	struct FVector2D PuzzleRCToScreenXY(const struct FVector2D& PuzzleRC, bool bApplyInverseDPI, bool bGray);
	void OnRep_Rune();
	TArray<struct FGridHighlightInfo> HighlightsFromGridPoints(const TArray<struct FGridHighlightInfo>& GPHighlights);
	struct FGridHighlightInfo HighlightFromGridPointSingle(const struct FGridHighlightInfo& GPHighlight);
	class ASophiaRune* GetRune();
	void BPI_PuzzleFullyOpened();
	void BPI_PuzzleClosed();
	void BP_SetBackgroundColorToSolved();
	void BP_PlayBackgroundSolveAnimation();
	void BP_PlayBackgroundDoppelSolveAnimation();
};

// 0x8 (0x5F8 - 0x5F0)
// Class IslandsofInsight.CylindricalPuzzlePanel
class ACylindricalPuzzlePanel : public APuzzlePanel
{
public:
	float                                        GridBottomElevation;                               // 0x5F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1918[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACylindricalPuzzlePanel* GetDefaultObj();

};

// 0x30 (0x2C8 - 0x298)
// Class IslandsofInsight.DeathOverlayWidget
class UDeathOverlayWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            TextBlock0;                                        // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextBlock1;                                        // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextBlock2;                                        // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Vignette;                                          // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          CanvasPanel;                                       // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          TextCanvasPanel;                                   // 0x2C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDeathOverlayWidget* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class IslandsofInsight.DefaultItems
class UDefaultItems : public UDataAsset
{
public:
	TArray<class UItemData*>                     StartingItems;                                     // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UItemData*>                     DeathItems;                                        // 0x40(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UItem>>             DefaultItemBlueprints;                             // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<enum class EItemType, class UItem*>     DefaultItems;                                      // 0x60(0x50)(NonTransactional, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDefaultItems* GetDefaultObj();

};

// 0x28 (0x2C0 - 0x298)
// Class IslandsofInsight.DelayedWidgetGenerator
class UDelayedWidgetGenerator : public USophiaUserWidget
{
public:
	class UPanelWidget*                          Root;                                              // 0x298(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Delay;                                             // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1928[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           GeneratedWidget;                                   // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1929[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDelayedWidgetGenerator* GetDefaultObj();

	void ForceCreation();
	bool ChildIsGenerated();
};

// 0x20 (0x240 - 0x220)
// Class IslandsofInsight.DestinationLightPillar
class ADestinationLightPillar : public AActor
{
public:
	uint8                                        Pad_192F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ActivatedMesh;                                     // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  SolvedMesh;                                        // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ADestinationLightPillar* GetDefaultObj();

};

// 0x8 (0x268 - 0x260)
// Class IslandsofInsight.DifficultyIndicator
class UDifficultyIndicator : public UUserWidget
{
public:
	uint8                                        Pad_193F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDifficultyIndicator* GetDefaultObj();

	void Init(int32 InDiff, enum class EDifficultyIndicatorState State);
	enum class ESlateVisibility GetWidgetVisibility();
	int32 GetDifficulty();
	enum class ESlateVisibility GetCircleVisibility();
};

// 0x48 (0x268 - 0x220)
// Class IslandsofInsight.DifficultyIndicatorActor
class ADifficultyIndicatorActor : public AActor
{
public:
	int32                                        Difficulty;                                        // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FormationMinScale;                                 // 0x224(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FormationMaxScale;                                 // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StarMinScale;                                      // 0x22C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StarMaxScale;                                      // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceRange;                                     // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumStars;                                       // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1943[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     StarPositions;                                     // 0x240(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    DifficultyStarClass;                               // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        DifficultyStars;                                   // 0x258(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ADifficultyIndicatorActor* GetDefaultObj();

};

// 0x0 (0x260 - 0x260)
// Class IslandsofInsight.DifficultyPanel
class UDifficultyPanel : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UDifficultyPanel* GetDefaultObj();

	void BP_SetupDifficultyPanel(int32 DifficultyNum);
	void BP_Initialize();
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.DisplayProgress
class IDisplayProgress : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDisplayProgress* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class IslandsofInsight.DistinctColorPicker
class UDistinctColorPicker : public UDataAsset
{
public:
	TArray<struct FLinearColor>                  baseNonTeamColors;                                 // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                  baseRedTeamColors;                                 // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                  baseBlueTeamColors;                                // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1951[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDistinctColorPicker* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class IslandsofInsight.DominionSymbol
class UDominionSymbol : public UClue
{
public:
	uint8                                        Pad_1953[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDominionSymbol* GetDefaultObj();

};

// 0x0 (0x4E8 - 0x4E8)
// Class IslandsofInsight.ConquestMastery
class AConquestMastery : public APuzzleBase
{
public:

	static class UClass* StaticClass();
	static class AConquestMastery* GetDefaultObj();

};

// 0x0 (0x4E8 - 0x4E8)
// Class IslandsofInsight.mbassadorMastery
class AMbassadorMastery : public APuzzleBase
{
public:

	static class UClass* StaticClass();
	static class AMbassadorMastery* GetDefaultObj();

};

// 0x2E0 (0x7C8 - 0x4E8)
// Class IslandsofInsight.Dungeon
class ADungeon : public APuzzleBase
{
public:
	uint8                                        Pad_197C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    OverlayMaterial;                                   // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDungeonType                      Type;                                              // 0x508(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_197D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALevelSequenceActor*                   AwakenPuzzleCutscene;                              // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x518(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                   Billboard;                                         // 0x520(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ResetButton;                                       // 0x528(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMarkerEmitter*                        MarkerEmitter_asdf;                                // 0x530(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisplayGeneralProgression;                        // 0x538(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_197F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DungeonTagline;                                    // 0x540(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  DungeonLore;                                       // 0x558(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           DungeonImage;                                      // 0x570(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bHidePuzzleCount;                                  // 0x5F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1982[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               Widget;                                            // 0x600(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UTutorialWidget>           TutorialWidget;                                    // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDungeonQuest2*                        MyQuest;                                           // 0x610(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTooEarlyMessage;                              // 0x618(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1986[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TooEarlyMessage;                                   // 0x620(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        NumPoles;                                          // 0x638(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1987[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CancelMessage;                                     // 0x640(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsHiddenDungeon;                                  // 0x658(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1988[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HiddenDungeonRevealRatio;                          // 0x65C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMultiplayer;                                      // 0x660(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         HasCustomCamera;                                   // 0x661(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         KeepRosaries;                                      // 0x662(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_198B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSubclassOf<class APuzzleBase>, int32>  NumPuzzlesToSpawn;                                 // 0x668(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         OnlyAllowEntryFromInputLockedPlayers;              // 0x6B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMainMapZoneName                  BlockingZone;                                      // 0x6B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AwardsEncyclopediaEntry;                           // 0x6BA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_198F[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EntryId;                                           // 0x6C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowAfterSolve;                                   // 0x6D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1990[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class ALevelSequenceActor>    CutsceneSequence;                                  // 0x6D8(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSubtitleInfo>                 Subtitles;                                         // 0x700(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputWidget>              PuzzleAwakenWidget;                                // 0x710(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            AwakenPuzzleImg;                                   // 0x718(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  AwakenPuzzleTitle;                                 // 0x720(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  AwakenPuzzleText;                                  // 0x738(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class APuzzleBase>               AwakenPuzzleClass1;                                // 0x750(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APuzzleBase>               AwakenPuzzleClass2;                                // 0x758(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            DungeonStingerEvent;                               // 0x760(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DungeonPriority;                                   // 0x768(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1994[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            DungeonEvent;                                      // 0x770(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            DungeonTravelEvent;                                // 0x778(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1997[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APuzzleBase*>                   OverlappingPuzzles;                                // 0x798(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UPoweredMesh*>                  PoweredMeshes;                                     // 0x7A8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class ASophiaCharacter*                      PlayerInteractingWhileHidden;                      // 0x7B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1999[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADungeon* GetDefaultObj();

	void SetSolvedForPlayersInDungeon(class ASophiaCharacter* SolvedPlayer);
	class FText GetTagline();
	void GetOwnedPuzzleCompletionData(int32* TotalPuzzles, int32* SolvedPuzzles);
	class FText GetLore();
	struct FSlateBrush GetImage();
	float GetDungeonCompletionPercentage();
	float GetCompletionPercentage();
	void BPI_ShowPillar();
	void BPI_PlaySubtitles(class ASophiaCharacter* Player);
	void BPI_AddWidget(TSubclassOf<class UUserWidget> WidgetClass);
	void BPI_AddTutorialWidget(TSubclassOf<class UTutorialWidget> TutorialWidgetClass);
	void BPC_UpdateAwakenPuzzles();
	void BPC_ShowTooEarlyMessage();
	void BP_OnFullyComplete_Server();
};

// 0x40 (0x278 - 0x238)
// Class IslandsofInsight.DungeonEntrance
class ADungeonEntrance : public AClickableBase
{
public:
	bool                                         MainDungeon;                                       // 0x238(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_199D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALevelRestrictionVolume*               RestrictionVolume;                                 // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  RingMesh;                                          // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  SphereMesh;                                        // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULevelGateWidget>          PopupWidgetClass;                                  // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDungeonBeaconType                beaconType;                                        // 0x260(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19A0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelGateWidget*                      PopupWidget;                                       // 0x268(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19A1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADungeonEntrance* GetDefaultObj();

	void BPI_BeaconTypeChanged();
};

// 0x18 (0x300 - 0x2E8)
// Class IslandsofInsight.DungeonInfoWidget
class UDungeonInfoWidget : public UBaseWidget
{
public:
	bool                                         WasRevealedFromHidden;                             // 0x2E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CooldownTime;                                      // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADungeon*                              CurDungeon;                                        // 0x2F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19B5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDungeonInfoWidget* GetDefaultObj();

	void Show(class ADungeon* Dungeon, bool WasHidden);
	void SetValues(class ADungeon* Dungeon);
	bool InCooldown(class ADungeon* Dungeon);
	void BP_Show(class ADungeon* Dungeon);
};

// 0xF0 (0x118 - 0x28)
// Class IslandsofInsight.Quest
class UQuest : public UObject
{
public:
	uint8                                        Pad_19D7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMainMapZoneName                  ZoneName;                                          // 0x2A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19D8[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  QuestTitle;                                        // 0x30(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  QuestFlavor;                                       // 0x48(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FString                                QuestDifficulty;                                   // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BonusDifficulty;                                   // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        XPReward;                                          // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BlueOrbReward;                                     // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GoldReward;                                        // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19DB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EncyclopediaReward;                                // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, TSoftObjectPtr<class ALevelSequenceActor>> Cutscenes;                                         // 0xA0(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UQuestObjective*>               Objectives;                                        // 0xF0(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class ADungeon*                              MyDungeon;                                         // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19DD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EQuestState                       QuestState;                                        // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19DE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuest* GetDefaultObj();

	bool ShouldUpdate();
	bool IsFullyComplete(class ASophiaCharacter* Player);
	bool IsComplete(class ASophiaCharacter* Player);
	bool IsAllowedByThisVendor(class AQuestVendor* Vendor);
	int32 GetXPReward();
	class FText GetQuestTitle();
	enum class EQuestState GetQuestState();
	TArray<class UQuestObjective*> GetObjectives();
	int32 GetGoldReward();
	class FText GetFlavorText();
	class FString GetEncyclopediaReward();
	class FString GetDebugName();
	struct FVector2D GetCompletionProgressTargetBorb(bool CoerceToInterval);
	struct FVector2D GetCompletionProgressTarget(bool CoerceToInterval);
	int32 GetBlueOrbReward();
};

// 0x0 (0x118 - 0x118)
// Class IslandsofInsight.DungeonQuest2
class UDungeonQuest2 : public UQuest
{
public:

	static class UClass* StaticClass();
	static class UDungeonQuest2* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class IslandsofInsight.EditorTimeData
class UEditorTimeData : public UObject
{
public:
	int32                                        CurSelectedNumberOfSophiaActors;                   // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19E2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LatestKrakenPuzzleDownloadTime;                    // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class UObject>, struct FObjectArray> ClassToObject;                                     // 0x38(0x50)(NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class APuzzleBase>>    PUZZLES;                                           // 0x88(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UWorld*                                CurEditorWorld;                                    // 0x98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       LastSelectedComponent;                             // 0xA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastSelectedComponentSelectedThroughViewport;      // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19E7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEditorTimeData* GetDefaultObj();

};

// 0x170 (0x198 - 0x28)
// Class IslandsofInsight.Email
class UEmail : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnEmailSent;                                       // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEmailError;                                      // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A71[0x150];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEmail* GetDefaultObj();

	void SetSubject(const class FString& Subject);
	void SetServerType(enum class ESmtpServerType Server);
	void SetServerPort(int32 Port);
	void SetServerAddress(const class FString& Address);
	void SetSender(const class FString& EmailSender);
	void SetHeader(const class FString& HeaderName, const class FString& HeaderValue);
	void SetCredentials(const class FString& InUsername, const class FString& InPassword);
	void SetContentCharset(enum class EEmailCharset Charset);
	void SetContent(const class FString& EmailContent, const class FString& MimeType);
	void SetConnectionType(enum class ESmtpConnectionType Connection);
	void SetClientDomain(const class FString& Domain);
	void Send();
	void RemoveAttachmentFromCache(const class FString& DisplayName);
	void RemoveAttachment(const class FString& DisplayName);
	bool IsEmailSending();
	class UEmail* CreateInitializedEmail(enum class ESmtpServerType ServerType, enum class ESmtpConnectionType Connection, const class FString& ServerAddress, int32 Port);
	class UEmail* CreateEmail();
	void AddReceiver(const class FString& EmailReceiver);
	bool AddFileAsAttachment(const class FString& DisplayName, const class FString& Path, const class FString& MimeType);
	void AddDataAsAttachmentWithoutEncode(const class FString& DisplayName, const class FString& MimeType, const TArray<uint8>& Data, enum class EContentTransfertEncoding Encoding);
	void AddDataAsAttachment(const class FString& DisplayName, const class FString& MimeType, const class FString& Data, enum class EContentTransfertEncoding Encoding);
	void AddCopyCarbon(const class FString& EmailAddress);
	void AddBlindCopyCarbon(const class FString& EmailAddress);
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.EmailLibrary
class UEmailLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UEmailLibrary* GetDefaultObj();

	class FString GetYahooEmailSmtpAddress();
	class FString GetOutlookSmtpAddress();
	class FString GetOffice365SmtpAddress();
	class FString GetMimeTypeFromFileName(const class FString& Filename);
	class FString GetHotmailSmtpAddress();
	class FString GetGmailSmtpAddress();
	int32 GetDefaultPortForConnection(enum class ESmtpConnectionType Connection);
};

// 0x30 (0x60 - 0x30)
// Class IslandsofInsight.SendEmailProxy
class USendEmailProxy : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnEmailSent;                                       // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEmailError;                                      // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UEmail*                                Email;                                             // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AE6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USendEmailProxy* GetDefaultObj();

	class USendEmailProxy* SendEmail(enum class ESmtpServerType ServerType, enum class ESmtpConnectionType ConnectionType, const class FString& ServerAddress, int32 ServerPort, const class FString& UserName, const class FString& Password, const class FString& Subject, const class FString& Sender, TArray<class FString>& Receivers, TArray<class FString>& CopyCarbon, TArray<class FString>& BlindCopyCarbon, const class FString& MessageContent, TArray<class FString>& AttachedFiles, TArray<uint8>& AttachedFilesData);
	void InternalOnEmailSent();
	void InternalOnEmailError(int32 ErrorCode);
};

// 0x28 (0x58 - 0x30)
// Class IslandsofInsight.SimpleSendEmailProxy
class USimpleSendEmailProxy : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnEmailSent;                                       // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEmailError;                                      // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UEmail*                                Email;                                             // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USimpleSendEmailProxy* GetDefaultObj();

	class USimpleSendEmailProxy* SendEmail(class UEmail* Email);
	void InternalOnEmailSent();
	void InternalOnEmailError(int32 ErrorCode);
};

// 0xE8 (0x118 - 0x30)
// Class IslandsofInsight.SendEmailWithServerProxy
class USendEmailWithServerProxy : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            EmailSent;                                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            FailedToSendEmail;                                 // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B06[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UEmail*                                Email;                                             // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USendEmailWithServerProxy* GetDefaultObj();

	void OnEmailSent();
	void OnEmailFailedToSend(int32 Error);
};

// 0x0 (0x118 - 0x118)
// Class IslandsofInsight.SendEmailWithGmailProxy
class USendEmailWithGmailProxy : public USendEmailWithServerProxy
{
public:

	static class UClass* StaticClass();
	static class USendEmailWithGmailProxy* GetDefaultObj();

	class USendEmailWithGmailProxy* SendEmailWithGmail(const class FString& SenderEmailAddress, const class FString& UserName, const class FString& Password, TArray<class FString>& To, TArray<class FString>& CC, TArray<class FString>& BCC, const class FString& Subject, const class FString& Content, TArray<class FString>& AttachedFiles, TArray<uint8>& AttachedFilesData);
};

// 0x0 (0x118 - 0x118)
// Class IslandsofInsight.SendEmailWithYahooProxy
class USendEmailWithYahooProxy : public USendEmailWithServerProxy
{
public:

	static class UClass* StaticClass();
	static class USendEmailWithYahooProxy* GetDefaultObj();

	class USendEmailWithYahooProxy* SendEmailWithYahoo(const class FString& SenderEmailAddress, const class FString& UserName, const class FString& Password, TArray<class FString>& To, TArray<class FString>& CC, TArray<class FString>& BCC, const class FString& Subject, const class FString& Content, TArray<class FString>& AttachedFiles, TArray<uint8>& AttachedFilesData);
};

// 0x0 (0x118 - 0x118)
// Class IslandsofInsight.SendEmailWithOutlookProxy
class USendEmailWithOutlookProxy : public USendEmailWithServerProxy
{
public:

	static class UClass* StaticClass();
	static class USendEmailWithOutlookProxy* GetDefaultObj();

	class USendEmailWithOutlookProxy* SendEmailWithOutlook(const class FString& SenderEmailAddress, const class FString& UserName, const class FString& Password, TArray<class FString>& To, TArray<class FString>& CC, TArray<class FString>& BCC, const class FString& Subject, const class FString& Content, TArray<class FString>& AttachedFiles, TArray<uint8>& AttachedFilesData);
};

// 0x0 (0x118 - 0x118)
// Class IslandsofInsight.SendEmailWithHotmailProxy
class USendEmailWithHotmailProxy : public USendEmailWithServerProxy
{
public:

	static class UClass* StaticClass();
	static class USendEmailWithHotmailProxy* GetDefaultObj();

	class USendEmailWithHotmailProxy* SendEmailWithHotmail(const class FString& SenderEmailAddress, const class FString& UserName, const class FString& Password, TArray<class FString>& To, TArray<class FString>& CC, TArray<class FString>& BCC, const class FString& Subject, const class FString& Content, TArray<class FString>& AttachedFiles, TArray<uint8>& AttachedFilesData);
};

// 0xA8 (0x3C0 - 0x318)
// Class IslandsofInsight.EmoteWheelWidget
class UEmoteWheelWidget : public UInputWidget
{
public:
	uint8                                        Pad_1B2D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextBlock*                            CenterText;                                        // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ReceiveChirpsText;                                 // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                SelectionImage;                                    // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                MarkerImage;                                       // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                EmoteImage0;                                       // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                EmoteImage1;                                       // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                EmoteImage2;                                       // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                EmoteImage3;                                       // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                EmoteImage4;                                       // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                TooltipImage;                                      // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTexture2D*>                    TooltipTextures;                                   // 0x378(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B2F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UEmoteData*                            EmoteData;                                         // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B30[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEmoteWheelWidget* GetDefaultObj();

	void BP_Close();
};

// 0x298 (0x2C8 - 0x30)
// Class IslandsofInsight.EncyclopediaData
class UEncyclopediaData : public UDataAsset
{
public:
	TArray<class UEncyclopediaPuzzle*>           PuzzleTypes;                                       // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UEncyclopediaRule*>             Rules;                                             // 0x40(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UInsight*>                      Insights;                                          // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class ULore*>                         LoreEntries;                                       // 0x60(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class ULore*>                         LorePages;                                         // 0x70(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class USecretClue*>                   Clues;                                             // 0x80(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LoreEntryImage;                                    // 0x90(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LorePageImage;                                     // 0x118(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                           ClueImage;                                         // 0x1A0(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class FString, class ULore*>            LoreMap;                                           // 0x228(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<enum class ESubtitleType, class FText>  SubtitleNames;                                     // 0x278(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncyclopediaData* GetDefaultObj();

	struct FSlateBrush GetLoreImage(class ULore* Lore);
	class ULore* FindLoreFromID(const class FString& ID);
	class USecretClue* FindClueFromID(const class FString& ID);
};

// 0x158 (0x180 - 0x28)
// Class IslandsofInsight.EncyclopediaEntry
class UEncyclopediaEntry : public UObject
{
public:
	class FText                                  Name;                                              // 0x28(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Image;                                             // 0x40(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0xC8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                UnlockableId;                                      // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Seen;                                              // 0xF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedsSecondImage;                                  // 0xF1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HiddenEntry;                                       // 0xF2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B3F[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           SecondImage;                                       // 0xF8(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncyclopediaEntry* GetDefaultObj();

};

// 0x10 (0x190 - 0x180)
// Class IslandsofInsight.EncyclopediaPuzzle
class UEncyclopediaPuzzle : public UEncyclopediaEntry
{
public:
	class FString                                PuzzleKrakenID;                                    // 0x180(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncyclopediaPuzzle* GetDefaultObj();

};

// 0x10 (0x190 - 0x180)
// Class IslandsofInsight.EncyclopediaRule
class UEncyclopediaRule : public UEncyclopediaEntry
{
public:
	class FString                                AlternateUnlockableId;                             // 0x180(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncyclopediaRule* GetDefaultObj();

};

// 0x90 (0x210 - 0x180)
// Class IslandsofInsight.Insight
class UInsight : public UEncyclopediaEntry
{
public:
	bool                                         NeedsRulesImage;                                   // 0x180(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B43[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           RulesImage;                                        // 0x188(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInsight* GetDefaultObj();

};

// 0x10 (0x190 - 0x180)
// Class IslandsofInsight.Lore
class ULore : public UEncyclopediaEntry
{
public:
	TArray<struct FSubtitleInfo>                 Subtitles;                                         // 0x180(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULore* GetDefaultObj();

};

// 0x0 (0x180 - 0x180)
// Class IslandsofInsight.SecretClue
class USecretClue : public UEncyclopediaEntry
{
public:

	static class UClass* StaticClass();
	static class USecretClue* GetDefaultObj();

};

// 0x30 (0x268 - 0x238)
// Class IslandsofInsight.EncyclopediaPreview
class AEncyclopediaPreview : public AClickableBase
{
public:
	class USceneComponent*                       Root;                                              // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ClickableMesh;                                     // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UEncyclopediaPreviewWidget> PreviewWidgetClass;                                // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEncyclopediaPreviewWidget*            PreviewWidget;                                     // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EncyclopediaEntryID;                               // 0x258(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AEncyclopediaPreview* GetDefaultObj();

};

// 0x18 (0x330 - 0x318)
// Class IslandsofInsight.EncyclopediaPreviewWidget
class UEncyclopediaPreviewWidget : public UInputWidget
{
public:
	class UEncyclopediaEntry*                    EncyclopediaEntry;                                 // 0x318(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                EntryImage;                                        // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            EntryName;                                         // 0x328(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UEncyclopediaPreviewWidget* GetDefaultObj();

	void BP_Close();
};

// 0x28 (0x570 - 0x548)
// Class IslandsofInsight.EscortPuzzleSplineComponent
class UEscortPuzzleSplineComponent : public USplineComponent
{
public:
	float                                        SpeedCoefficient;                                  // 0x548(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RegularTime;                                       // 0x54C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseConstantSpeed;                                  // 0x550(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B4A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConstantSpeed;                                     // 0x554(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  Target;                                            // 0x558(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurDistance;                                       // 0x560(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B4E[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEscortPuzzleSplineComponent* GetDefaultObj();

};

// 0x0 (0x298 - 0x298)
// Class IslandsofInsight.EventPromptWidget
class UEventPromptWidget : public USophiaUserWidget
{
public:

	static class UClass* StaticClass();
	static class UEventPromptWidget* GetDefaultObj();

	void BP_Hide();
};

// 0x18 (0x40 - 0x28)
// Class IslandsofInsight.SophiaPostProcessBlendable
class USophiaPostProcessBlendable : public UObject
{
public:
	uint8                                        Pad_1B51[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlendableWeight;                                   // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B52[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaPostProcessVolume*              VolParent;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USophiaPostProcessBlendable* GetDefaultObj();

};

// 0x68 (0xA8 - 0x40)
// Class IslandsofInsight.ExponentialFogBlendable
class UExponentialFogBlendable : public USophiaPostProcessBlendable
{
public:
	TArray<TSoftObjectPtr<class AExponentialHeightFog>> HeightFogActors;                                   // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FExponentialFogModifier               Modifier;                                          // 0x50(0x58)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UExponentialFogBlendable* GetDefaultObj();

};

// 0x460 (0xF50 - 0xAF0)
// Class IslandsofInsight.ExtendedMovementComponent
class UExtendedMovementComponent : public UCharacterMovementComponent
{
public:
	uint8                                        Pad_1B6A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      SophiaChar;                                        // 0xB08(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B6B[0x254];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WallFrictionMinimumAngleCosine;                    // 0xD64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WallFrictionAmount;                                // 0xD68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CustomAirControl;                                  // 0xD6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CustomFallingLateralFriction;                      // 0xD70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CustomRotationRate;                                // 0xD74(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         CustomOrientRotationToMovement;                    // 0xD80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CustomUseControllerYaw;                            // 0xD81(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CustomCheatFlying;                                 // 0xD82(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B6C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstJumpZVelocity;                                // 0xD84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondJumpZVelocity;                               // 0xD88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CustomGravityScale;                                // 0xD8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSprintSpeed;                                    // 0xD90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintMinimumSpeed;                                // 0xD94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNewAutoHold;                                      // 0xD98(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B6D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         Keep3rdPersonCameraAfterGliding;                   // 0xD9A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GlideDebugArrows;                                  // 0xD9B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxGlideSpeed;                                     // 0xD9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxGlideSpeedAfterUpgrade;                         // 0xDA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlideLateralFriction;                              // 0xDA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlideLateralControl;                               // 0xDA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlideRotationDeadZoneSpeedThreshold;               // 0xDAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GlideInitialBoost;                                 // 0xDB0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostGlideGravity;                                 // 0xDBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlideGravity;                                      // 0xDC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlideTerminalSpeedMultiplierOnAscend;              // 0xDC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlidingExtraTurnSpeed;                             // 0xDC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              GlideRotation;                                     // 0xDCC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         FlyForwardWithoutHoldingW;                         // 0xDD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AllocentricGliding;                                // 0xDD9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B70[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EndGlideZBoost;                                    // 0xDDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialGlideBoost;                                 // 0xDE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlideCooldown;                                     // 0xDE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlideDiveZVelocity;                                // 0xDE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DiveInterpSpeed;                                   // 0xDEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           GlideEndSlowDownCurve;                             // 0xDF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           GlideTerminalSpeedCurve_NotHoldingForward;         // 0xDF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           GlideTerminalSpeedCurve_HoldingForward;            // 0xE00(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B74[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDebugFlySpeed;                                  // 0xE28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDebugFlyAcceleration;                           // 0xE2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerJumpChargeTimeNeeded;                         // 0xE30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerJumpZHeight;                                  // 0xE34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumberOfSecondsToAverageForSlopeJump;              // 0xE38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZChangeMultiplierForSlopeJump;                     // 0xE3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B77[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NumberOfSecondsToTrackForRespawnPoints;            // 0xE58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeInSecondsBetweenRespawnPointTracking;          // 0xE5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B78[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumberOfRespawnFailuresBeforeFallback;          // 0xE84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecallHeight;                                      // 0xE98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StageOneSpeed;                                     // 0xE9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecallSpeed;                                       // 0xEA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecallCurveOffsetMultiplier;                       // 0xEA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           RecallCurve;                                       // 0xEA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecallCrossfadeTime;                               // 0xEB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecallCrossfadePower;                              // 0xEB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecallStageTwoInitPower;                           // 0xEB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecallInitDelay;                                   // 0xEBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7C[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxVaultHeight;                                    // 0xF0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinVaultHeight;                                    // 0xF10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVaultZVelocity;                                 // 0xF14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B7D[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ItemSpeedBoostMultiplier;                          // 0xF24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RacingMetaSpeedBoostMultiplier;                    // 0xF28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpiritSpeedBoostMultiplier;                        // 0xF2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B7E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UExtendedMovementComponent* GetDefaultObj();

	void SetTeleport(bool NewWantsToTeleport, const struct FVector& Destination, bool PlayEffect);
	void SetRecall(bool NewWantsToTeleport, const struct FVector& Destination, bool IsResetting);
	void SetNetworkNoSmoothUpdateDistance(float InValue);
	void SetNetworkMaxSmoothUpdateDistance(float InValue);
	void SetMovementModeRep(enum class EMovementMode NewMovementMode, uint8 NewCustomMovementMode);
	void SetLaunchVelocity(const struct FVector& NewLaunchVelocity, bool bXYOverride, bool bZOverride);
	void SetJumpZValue(float InValue);
	void SetDefaultMovementModeRep();
	void SetCustomMovement(enum class ECustomMovementMode MovementMode_, bool Value);
	bool GetWantsToSprint();
	bool GetWantsToDive();
	class ADungeon* GetRespawnPointDungeon();
	struct FVector GetRespawnPoint();
	bool GetRecallInMovingState();
	float GetMaxGlideSpeedForThisPlayer();
	bool CheckCustomMovement(enum class ECustomMovementMode CustomMode);
};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.FadingText
class UFadingText : public USophiaUserWidget
{
public:
	class UTextBlock*                            TextBlock;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B83[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFadingText* GetDefaultObj();

};

// 0x10 (0x230 - 0x220)
// Class IslandsofInsight.FakeConquestEndFlag
class AFakeConquestEndFlag : public AActor
{
public:
	uint8                                        Pad_1B85[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UInputWidget>              EndScreenClass;                                    // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFakeConquestEndFlag* GetDefaultObj();

};

// 0x60 (0x2F8 - 0x298)
// Class IslandsofInsight.FeedMessageWidget
class UFeedMessageWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            TextBlock;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                           DefaultTextColor;                                  // 0x2A0(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                           GoldTextColor;                                     // 0x2C8(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B88[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFeedMessageWidget* GetDefaultObj();

};

// 0x18 (0x2B0 - 0x298)
// Class IslandsofInsight.FeedWidget
class UFeedWidget : public USophiaUserWidget
{
public:
	class UVerticalBox*                          VerticalBox;                                       // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FeedLimit;                                         // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B8D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFeedMessageWidget>        FeedMessageWidgetClass;                            // 0x2A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFeedWidget* GetDefaultObj();

	void AddFeedMessage(const struct FTimedMessage& Message);
};

// 0x138 (0x620 - 0x4E8)
// Class IslandsofInsight.FindChord
class AFindChord : public APuzzleBase
{
public:
	float                                        PlayingInterval;                                   // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedOfSound;                                      // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SoloMaxDistance;                                   // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistanceFromTargetToAudioPlayer;                // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistanceBetweenAudioPlayers;                    // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinThreshold;                                      // 0x4FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetSize;                                        // 0x500(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxTargetIncline;                                  // 0x504(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinAngleSweptOutByAudioPlayersFromTarget;          // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinningDelay;                                      // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  ColorBank;                                         // 0x510(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  ColorBankSolo;                                     // 0x520(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFMODEvent*>                    Sounds;                                            // 0x530(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        VolumeWhenOtherSoundSoloed;                        // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VolumeWhenNoSoundSoloed;                           // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPuzzleBoundsComponent*                Vol;                                               // 0x548(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFindChordAudioPlayer>     AudioPlayerClass;                                  // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    TargetDecalMaterial;                               // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B90[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTransform>                    AudioTransform;                                    // 0x568(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int32>                                ColorVariations;                                   // 0x578(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FVector                               TargetLocation;                                    // 0x588(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B94[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TargetDecalTransform;                              // 0x5A0(0x30)(Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B95[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFindChordAudioPlayer*>         SoundPlayers;                                      // 0x608(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B96[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFindChord* GetDefaultObj();

};

// 0x70 (0x2A8 - 0x238)
// Class IslandsofInsight.FindChordAudioPlayer
class AFindChordAudioPlayer : public AClickableBase
{
public:
	class USceneComponent*                       Cube;                                              // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                   FMODAudioComponent;                                // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDecalComponent*                       DecalComponent;                                    // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BaseColor;                                         // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          baseColorSolo;                                     // 0x260(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVibrationDistance;                              // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SingleVibrationTime;                               // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DecalMaterial;                                     // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              DecalMaterialDynamic;                              // 0x280(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B99[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFindChordAudioPlayer* GetDefaultObj();

	void SetGlow(bool Solo);
};

// 0x30 (0x268 - 0x238)
// Class IslandsofInsight.Fireworks
class AFireworks : public AClickableBase
{
public:
	class UASlider2D*                            Controls;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Base;                                              // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     Emitter;                                           // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFireworksPuzzle*                      FireworksPuzzle;                                   // 0x258(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EmitterPuzzleType                 Type;                                              // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFireworks* GetDefaultObj();

};

// 0x30 (0x518 - 0x4E8)
// Class IslandsofInsight.FireworksPuzzle
class AFireworksPuzzle : public APuzzleBase
{
public:
	TSubclassOf<class AFireworks>                FireworksClass;                                    // 0x4E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFireworks*                            Target;                                            // 0x4F0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFireworks*                            Movable;                                           // 0x4F8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetX;                                           // 0x500(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetY;                                           // 0x504(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MovablePreview;                                    // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  TargetPreview;                                     // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFireworksPuzzle* GetDefaultObj();

};

// 0xE8 (0x610 - 0x528)
// Class IslandsofInsight.FloorSocket
class AFloorSocket : public APuzzleContainerBase
{
public:
	class UBoxComponent*                         SpawnVolume;                                       // 0x528(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowSpawnExtent;                                  // 0x530(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasNoHeightLimit;                                 // 0x531(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BA4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinTileSize;                                       // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxBlockSize;                                      // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESocketGenerationMethod           GenerationMethod;                                  // 0x53C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BA5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaximumHeight;                                     // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESocketPuzzleType, TSubclassOf<class APuzzleBase>> PuzzleClass;                                       // 0x548(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<enum class ESocketPuzzleType, float>    PuzzleProbabilityWeight;                           // 0x598(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        MazeMinFloorHeight;                                // 0x5E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MazeMinCellSize;                                   // 0x5EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MazeMaxCellSize;                                   // 0x5F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MazeMargin;                                        // 0x5F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MazeMinRoomCount;                                  // 0x5F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MazeMaxRoomCount;                                  // 0x5FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BA8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFloorSocket* GetDefaultObj();

};

// 0x58 (0x580 - 0x528)
// Class IslandsofInsight.FocusablePuzzle
class AFocusablePuzzle : public APuzzleContainerBase
{
public:
	uint8                                        Pad_1BB0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bLimitSeats;                                       // 0x530(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSeats;                                          // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TransitionDuration;                                // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TransitionTween;                                   // 0x53C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         HasFocus;                                          // 0x540(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UCameraComponent*>              Cameras;                                           // 0x548(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UStandardGridUI*                       StandardGridUIWidget;                              // 0x558(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UStandardGridUI>           StandardGridUIClass;                               // 0x560(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridInputComponent*                   GridInputComp;                                     // 0x568(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASophiaCharacter*>              SeatingPlayers;                                    // 0x570(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFocusablePuzzle* GetDefaultObj();

	void SetFocusToFalse();
	void NetMultiCast_ClaimSeat(class ASophiaCharacter* SophiaChar, bool SeatingDown, int32 SeatIndex);
	int32 GetIndexOfPlayer(class ASophiaCharacter* SophiaChar);
};

// 0x108 (0x3A0 - 0x298)
// Class IslandsofInsight.ScreenMarkerWidgetBase
class UScreenMarkerWidgetBase : public USophiaUserWidget
{
public:
	class UCanvasPanelSlot*                      MySlot;                                            // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BB8[0xD0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScreenMarkerData                     MarkerData;                                        // 0x370(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BB9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UScreenMarkerWidgetBase* GetDefaultObj();

	void BP_Tick();
	void BP_Init();
};

// 0x10 (0x3B0 - 0x3A0)
// Class IslandsofInsight.PlayerInfoWidget
class UPlayerInfoWidget : public UScreenMarkerWidgetBase
{
public:
	class ASophiaPlayerState*                    RepresentedPlayerState;                            // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideLocalPlayer;                                  // 0x3A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BBD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerInfoWidget* GetDefaultObj();

	struct FLinearColor GetPlayerNameColor();
};

// 0x18 (0x3C8 - 0x3B0)
// Class IslandsofInsight.FocusedPlayerInfoWidget
class UFocusedPlayerInfoWidget : public UPlayerInfoWidget
{
public:
	bool                                         bShowSocialMenuInteract;                           // 0x3B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bScalePlayerName;                                  // 0x3B1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BBF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerHoldProgress;                                // 0x3B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SizeMultiplier;                                    // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BC0[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFocusedPlayerInfoWidget* GetDefaultObj();

};

// 0x10 (0x230 - 0x220)
// Class IslandsofInsight.FogManager
class AFogManager : public AActor
{
public:
	TArray<class AActor*>                        FogSpheres;                                        // 0x220(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFogManager* GetDefaultObj();

	bool InBox(const struct FVector& HitLoc, const struct FVector& B1, const struct FVector& B2, int32 Axis);
	struct FVector GetLineBoundsIntersectionPoint(const struct FVector& B1, const struct FVector& B2, const struct FVector& L1, const struct FVector& L2);
	bool GetIntersection(float FDst1, float FDst2, const struct FVector& P1, const struct FVector& P2, struct FVector* HitLoc);
};

// 0x20 (0x240 - 0x220)
// Class IslandsofInsight.FogSphere
class AFogSphere : public AActor
{
public:
	class UStaticMeshComponent*                  VolumetricMesh;                                    // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  FlatFogMesh;                                       // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeDist;                                          // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFadeDist;                                // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsVolumetricVisible;                              // 0x238(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BD1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFogSphere* GetDefaultObj();

};

// 0xC8 (0x5B0 - 0x4E8)
// Class IslandsofInsight.FollowTheShiny
class AFollowTheShiny : public APuzzleBase
{
public:
	float                                        EditorToolDistanceFromGround;                      // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EditorAdditionalTimeGiven;                         // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EditorMinimumTime;                                 // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EditorTimeMultiplier;                              // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EditorAssumedPlayerSpeed;                          // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFakeShinyForCutscene;                           // 0x4FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BDC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PerfectionBonusMultiplier;                         // 0x500(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BDE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFollowTheShinyPointWaypoint>  Waypoints;                                         // 0x508(0x10)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	float                                        MinTangentMagnitude;                               // 0x518(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedEasingFunctionPower;                          // 0x51C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Speed;                                             // 0x520(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BDF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPuzzleBoundsComponent*                ExamplePuzzleBounds;                               // 0x528(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       Root;                                              // 0x530(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFollowTheShinyStaticMeshComponent*    ShinyMesh;                                         // 0x538(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFollowTheShinyStaticMeshComponent*    PlayerCollisionMesh;                               // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFollowTheShinySplineComponent*        PuzzleSpline;                                      // 0x548(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            ShinyFailedSound;                                  // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            ShinyWarningAboutToExpireSound;                    // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WarningAboutToExpireTime;                          // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            ShinyMoveSound;                                    // 0x568(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurWaypointIndex;                                  // 0x570(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentSplineDistance;                             // 0x574(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurSpeed;                                          // 0x578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        T_dist;                                            // 0x57C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPuzzleBoundsComponent*>        BoundsComponents;                                  // 0x590(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFollowTheShiny* GetDefaultObj();

	void OnBallOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBallExitOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BPI_StartEndPlay(bool Started);
	void BPI_ReachedDestination();
	void BPI_AboutToExpire();
	void BP_BallOverlap();
};

// 0x8 (0x550 - 0x548)
// Class IslandsofInsight.SophiaSplineComponent
class USophiaSplineComponent : public USplineComponent
{
public:
	uint8                                        Pad_1BE6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaSplineComponent* GetDefaultObj();

};

// 0x0 (0x550 - 0x550)
// Class IslandsofInsight.FollowTheShinySplineComponent
class UFollowTheShinySplineComponent : public USophiaSplineComponent
{
public:

	static class UClass* StaticClass();
	static class UFollowTheShinySplineComponent* GetDefaultObj();

};

// 0x0 (0x4E0 - 0x4E0)
// Class IslandsofInsight.FollowTheShinyStaticMeshComponent
class UFollowTheShinyStaticMeshComponent : public UStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class UFollowTheShinyStaticMeshComponent* GetDefaultObj();

};

// 0x10 (0x270 - 0x260)
// Class IslandsofInsight.ForesightController
class UForesightController : public UUserWidget
{
public:
	class UNewGridUI*                            LinkedUI;                                          // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BEE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UForesightController* GetDefaultObj();

	enum class ESlateVisibility GetBarVisibility();
	void BP_UpdateHints(int32 HintCount, float ChargeProgress, int32 MaxHints);
	void BP_ShowSparkleAnim(int32 Index);
	void BP_ShowBorderAnim(int32 Index);
	void BP_Init();
	void BP_HideBorderAnim(int32 Index);
};

// 0x160 (0x648 - 0x4E8)
// Class IslandsofInsight.FractalJigsaw
class AFractalJigsaw : public APuzzleBase
{
public:
	class USceneComponent*                       backing;                                           // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Width;                                             // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Height;                                            // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<int32>                                  FixedCoords;                                       // 0x4F8(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UStaticMeshComponent>      PlaneClass;                                        // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    Material;                                          // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox2D                                Window;                                            // 0x558(0x14)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BF0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    RivetMaterial;                                     // 0x570(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          Tiles;                                             // 0x578(0x10)(ExportObject, Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FFractalJigsawServerState             ServerState;                                       // 0x588(0x80)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BF1[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFractalJigsaw* GetDefaultObj();

	void OnRep_Tiles();
	void OnRep_ServerState();
};

// 0x88 (0x570 - 0x4E8)
// Class IslandsofInsight.FractalMatch
class AFractalMatch : public APuzzleBase
{
public:
	class UStaticMeshComponent*                  ModifiableFractalMesh;                             // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FixedFractalMesh;                                  // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  KnobRe;                                            // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  KnobIm;                                            // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinTargetModulus;                                  // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxTargetModulus;                                  // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinThreshold;                                      // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdjustmentSpeed;                                   // 0x514(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxKnobRotation;                                   // 0x518(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinningDuration;                                   // 0x51C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector4                              InitialColor;                                      // 0x520(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector4                              WinningColor;                                      // 0x530(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BF4[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFractalMatch* GetDefaultObj();

};

// 0xD0 (0x650 - 0x580)
// Class IslandsofInsight.FractalMatch_ClickIn
class AFractalMatch_ClickIn : public AFocusablePuzzle
{
public:
	class USceneComponent*                       Root;                                              // 0x580(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      Camera;                                            // 0x588(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UASlider2D*                            Controls;                                          // 0x590(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ModifiableFractalMesh;                             // 0x598(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FixedFractalMesh;                                  // 0x5A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ModifiableFractalMeshBoundary;                     // 0x5A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FixedFractalMeshBoundary;                          // 0x5B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinningDuration;                                   // 0x5B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedMultiplier;                                   // 0x5BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFractalType2D>                DEPRECATED_fractalTypeBank;                        // 0x5C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                            DraggingEvent;                                     // 0x5D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DraggingEventIntensityScale;                       // 0x5D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DraggingEventEasingScale;                          // 0x5DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BFF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetParameterX;                                  // 0x5E8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetParameterY;                                  // 0x5EC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector4                              Variation;                                         // 0x5F0(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector4                              Variation2;                                        // 0x600(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Variation_rot;                                     // 0x610(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CheckerboardSize;                                  // 0x614(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFractalType2D                        FractalType;                                       // 0x618(0x20)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        InitialParameterX;                                 // 0x638(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialParameterY;                                 // 0x63C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C00[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFractalMatch_ClickIn* GetDefaultObj();

	void RefreshMeshes();
	bool InitFractalPuzzle(struct FFractalType2D& FractalTypeInfo, const struct FVector2D& TargetParameters);
	void BP_LeaveFocus();
	void BP_HasFocus();
};

// 0xA8 (0x590 - 0x4E8)
// Class IslandsofInsight.FractalMatchWithSlider
class AFractalMatchWithSlider : public APuzzleBase
{
public:
	class USceneComponent*                       Root;                                              // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UASlider2D*                            Controls;                                          // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ModifiableFractalMesh;                             // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FixedFractalMesh;                                  // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoweredMesh*                          PoweredMesh;                                       // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinningDuration;                                   // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C04[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFractalType2D>                FractalTypeBank;                                   // 0x518(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        CurrentParameterX;                                 // 0x528(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CurrentParameterY;                                 // 0x52C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetParameterX;                                  // 0x530(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetParameterY;                                  // 0x534(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WindowMinParameterX;                               // 0x538(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WindowMaxParameterX;                               // 0x53C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WindowMinParameterY;                               // 0x540(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WindowMaxParameterY;                               // 0x544(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C06[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              Variation;                                         // 0x550(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector4                              Variation2;                                        // 0x560(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFractalType2D                        FractalType;                                       // 0x570(0x20)(Net, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFractalMatchWithSlider* GetDefaultObj();

};

// 0xB8 (0x2F0 - 0x238)
// Class IslandsofInsight.FractalTree
class AFractalTree : public AClickableBase
{
public:
	class AFractalTreePuzzle*                    TreePuzzle;                                        // 0x238(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterial*                             MeshMaterial;                                      // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              DynamicMeshMaterial;                               // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProceduralMeshComponent*              FractalMesh;                                       // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProceduralMeshComponent*              CollisionMesh;                                     // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TransitionTime;                                    // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C0A[0x8C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFractalTree* GetDefaultObj();

};

// 0x48 (0x530 - 0x4E8)
// Class IslandsofInsight.FractalTreePuzzle
class AFractalTreePuzzle : public APuzzleBase
{
public:
	TSubclassOf<class AFractalTree>              TreeMeshClass;                                     // 0x4E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFractalTree*                          MovableTreeMesh;                                   // 0x4F0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFractalTree*                          TargetTreeMesh;                                    // 0x4F8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MovablePreview;                                    // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  TargetPreview;                                     // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetAxis;                                        // 0x510(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetSwing;                                       // 0x514(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetTwist;                                       // 0x518(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C0D[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFractalTreePuzzle* GetDefaultObj();

};

// 0xD8 (0x3C0 - 0x2E8)
// Class IslandsofInsight.FriendListWidget
class UFriendListWidget : public UBaseWidget
{
public:
	class UPlayerWidget*                         LocalPlayerWidget;                                 // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                               FriendBoxFakeSpacer;                               // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ErrorText;                                         // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          PartyPanelWidget;                                  // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox_Sophia*                   OnlineFriendPanelWidget;                           // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          OfflineFriendPanelWidget;                          // 0x310(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          BlockedPlayersPanelWidget;                         // 0x318(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPlayerWidget>             PlayerWidgetClass;                                 // 0x320(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPooledObject*>                 AllocatedFriendWidgets;                            // 0x328(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C15[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlayerWidget*>                 CreatedPartyPlayerWidgets;                         // 0x348(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UPlayerWidget*>                 CreatedBlockedPlayerWidgets;                       // 0x358(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C16[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFriendListWidget* GetDefaultObj();

	int32 GetOnlineFriendCount();
	class FText GetLocalPlayerSteamName();
	class UTexture2D* GetLocalPlayersAvatarTexture(class UTexture2D* DefaultTexture);
};

// 0x18 (0x350 - 0x338)
// Class IslandsofInsight.GA_TargetDataOverlap
class AGA_TargetDataOverlap : public AGameplayAbilityTargetActor
{
public:
	TArray<struct FTransform>                    TransformDataToPush;                               // 0x338(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C18[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGA_TargetDataOverlap* GetDefaultObj();

};

// 0x80 (0x318 - 0x298)
// Class IslandsofInsight.GameHUDBase
class UGameHUDBase : public USophiaUserWidget
{
public:
	class UPanelWidget*                          CrosshairPanel;                                    // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          GameplayPanel;                                     // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          DevmodePanel;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          ConquestPanel;                                     // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBaseWidget*                           PreviousFocusWidget;                               // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWasPlayingCutsceneLastFrame;                      // 0x2C0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C1B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UWidget*, float>                  RenderOpacitiesBeforeForcedHide;                   // 0x2C8(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGameHUDBase* GetDefaultObj();

	void IndependentTick();
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.GamepadDetection
class UGamepadDetection : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGamepadDetection* GetDefaultObj();

	bool IsGamePadConnected();
};

// 0x78 (0x3E8 - 0x370)
// Class IslandsofInsight.GeneralNotification
class UGeneralNotification : public UNotificationWidget
{
public:
	TArray<class UTexture2D*>                    BorderTextures;                                    // 0x370(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTexture2D*                            BorderTexture;                                     // 0x380(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            IconTexture;                                       // 0x388(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ToastTypeName;                                     // 0x390(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  EarnedName;                                        // 0x3A8(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UPlayerMastery*                        PlayerMastery;                                     // 0x3C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULore*                                 Lore;                                              // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInsight*                              Insight;                                           // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USecretClue*                           Clue;                                              // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGeneralNotificationType          Type;                                              // 0x3E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C1F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGeneralNotification* GetDefaultObj();

	void BP_OnAdded();
};

// 0x10 (0x270 - 0x260)
// Class IslandsofInsight.GenericGridButton
class UGenericGridButton : public UUserWidget
{
public:
	class UNewGridUI*                            LinkedUI;                                          // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStandardGridUI*                       LinkedSGUI;                                        // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGenericGridButton* GetDefaultObj();

	bool IsButtonInteractable(enum class EGenericGridButtonType Type);
	enum class ESlateVisibility GetCorrespondingVisibility(enum class EGenericGridButtonType Type);
	class FText GetCorrespondingText(enum class EGenericGridButtonType Type);
	float GetCorrespondingRenderOpacity(enum class EGenericGridButtonType Type);
	void DoButtonRelease(enum class EGenericGridButtonType behaviour);
	void DoButtonPress(enum class EGenericGridButtonType behaviour);
	void DoButtonAction(enum class EGenericGridButtonType behaviour);
	void BPI_GetButtons(TArray<class UButton*>* Buttons);
	void BP_UpdateButtonDimState();
	void BP_PerformClickAnimation(enum class EGenericGridButtonType Type);
	void BP_PerformButtonAction(enum class EGenericGridButtonType Type);
	void BP_Activate();
};

// 0x58 (0x540 - 0x4E8)
// Class IslandsofInsight.GhostHiddenObject
class AGhostHiddenObject : public APuzzleBase
{
public:
	class UBoxComponent*                         CullingBounds;                                     // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoweredMesh*                          CubeMesh;                                          // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      ClickableVolume;                                   // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGhostTypes                       GhostType;                                         // 0x500(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C34[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HideTimer;                                         // 0x504(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HideDistance;                                      // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LargeHideDistance;                                 // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HideSpeed;                                         // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ClickWhileHidden;                                  // 0x514(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C36[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SeenToleranceDegrees;                              // 0x518(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        backupSafetyDistance;                              // 0x51C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ForceTutorialColors;                               // 0x520(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C37[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGhostHiddenObject* GetDefaultObj();

	void BP_Reveal();
	void BP_Hide();
};

// 0x68 (0x550 - 0x4E8)
// Class IslandsofInsight.GigaPuzzle
class AGigaPuzzle : public APuzzleBase
{
public:
	int32                                        GigaXGridSize;                                     // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GigaYGridSize;                                     // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C38[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  PlaneMesh;                                         // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              GigaMaterialInstance;                              // 0x500(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2DDynamic*                     GridTexture;                                       // 0x508(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2DDynamic*                     AverageColorTexture;                               // 0x510(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRandomStream                         InitialGridRNG;                                    // 0x518(0x8)(Net, ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C3A[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGigaPuzzle* GetDefaultObj();

};

// 0x98 (0xC8 - 0x30)
// Class IslandsofInsight.GISEos
class UGISEos : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_1C43[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGISEos* GetDefaultObj();

	bool LoginToEos();
	bool InitializeEOS(class UObject* WorldContextObject);
	bool InitializedPlatformHandle(class UObject* WorldContextObject);
	void EOSPlatformTick();
};

// 0x18 (0x48 - 0x30)
// Class IslandsofInsight.GISFeedback
class UGISFeedback : public UGameInstanceSubsystem
{
public:
	class ULocalSavedData*                       LocalSavedData;                                    // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UParameterizedUrl*>             ParameterizedPendingSurveyUrls;                    // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGISFeedback* GetDefaultObj();

	void TriggerLaunchSurvey();
	void RequestSurveyOnce(class FText& PromptText, class UParameterizedUrl* URL, bool ShowEvenInEditor);
	void RemoveSurvey(const class FString& BaseUrl);
	TArray<class UParameterizedUrl*> GetPendingSurveys();
};

// 0x2F0 (0x320 - 0x30)
// Class IslandsofInsight.GISKraken
class UGISKraken : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_1C62[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULocalSavedData*                       LocalSavedAgeData;                                 // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bContentVersionReady;                              // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C63[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayerBanReceived;                               // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerUnbanReceived;                             // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C64[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BaseUrl;                                           // 0xA8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ContentVersionId;                                  // 0xB8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExpandedContentVersionId;                          // 0xC8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PuzzleAccessKey;                                   // 0xD8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C65[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGISKrakenData                        _KrakenData;                                       // 0x180(0x60)(NativeAccessSpecifierPrivate)
	TMap<class FString, struct FKrakenItem>      Catalog;                                           // 0x1E0(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C67[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LeaderboardPageSize;                               // 0x2D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C69[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                KrakenJwtPublicKey;                                // 0x2D8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UJWTVerifier*                          JWTVerifier;                                       // 0x2E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                BackwardsCompatibilityKrakenJwtPublicKey;          // 0x2F0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UJWTVerifier*                          BackwardsCompatibilityJwtVerifier;                 // 0x300(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UServerToKrakenAuthHandler*            _ServerAuthHandler;                                // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOnlineServicesAuthHandler*>    _PlayerAuthHandlers;                               // 0x310(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGISKraken* GetDefaultObj();

	void PlayerUnbanReceivedEvent__DelegateSignature();
	void PlayerBanReceivedEvent__DelegateSignature(struct FKrakenBanInfo& BanInfo);
	void OnContentVersionSelected();
	float IsPlayerBanned();
	void Init();
	struct FKrakenBanInfo GetPlayerBanInfo();
	float GetLastPlayerBanInfoTimestamp();
	TMap<class FString, struct FKrakenItem> GetCatalog();
	void BPC_VerifyAgeRequirement();
	void BPC_TryInitKraken();
	void BPC_SaveAgeConsentConfirmation();
	bool BPC_GetAgeConsentConfirmation();
	void BPC_ConfirmBanMessageSeen(FDelegateProperty_ FailureCallback);
	void BPC_CheckMyBanStatus(FDelegateProperty_ FailureCallback);
	void Authenticate();
};

// 0x8 (0x30 - 0x28)
// Class IslandsofInsight.PooledObject
class UPooledObject : public UObject
{
public:
	class UObject*                               Object;                                            // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPooledObject* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class IslandsofInsight.GISPooler
class UGISPooler : public UGameInstanceSubsystem
{
public:
	TMap<TSubclassOf<class UObject>, struct FArrayOfObjects> TypeToObject;                                      // 0x30(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGISPooler* GetDefaultObj();

};

// 0xA88 (0xAB8 - 0x30)
// Class IslandsofInsight.GISProgression
class UGISProgression : public UGameInstanceSubsystem
{
public:
	class UCharacterCustomizationData*           CharacterCustomizationData;                        // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEncyclopediaData*                     EncyclopediaData;                                  // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEmoteData*                            EmoteData;                                         // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GameStartTotalMastry;                              // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D00[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                GainedXPAmounts;                                   // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                GainedXPTimes;                                     // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPlayerProgressionData                PlayerProgression;                                 // 0x70(0x488)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FPlayerProgressionData                ErrorProgression;                                  // 0x4F8(0x488)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1D02[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PlayerSpawnLocation;                               // 0x9D0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D04[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ADungeon*                              borbSource;                                        // 0x9E0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASecretSignifier*>              PendingUnlockedClues;                              // 0x9E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class ASecretSignifier*>              PendingUnlockedSecrets;                            // 0x9F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<enum class ETutorialTip, bool>          TipTypeToSeen;                                     // 0xA08(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D05[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGISProgression* GetDefaultObj();

	void UpgradeSkill(class ASophiaCharacter* Player, const class FString& SkillName, bool bShouldCheckValid);
	void UpdateSeenEntries(class ASophiaCharacter* Player, const class FString& EntryId);
	void UnlockSecretsAndClues();
	void UnlockMasteryRewards(class ASophiaCharacter* Player, class UPlayerMastery* PlayerMastery, struct FBhvrAnalyticsEvent_Base& Event);
	void SetTutorialTipSeen(enum class ETutorialTip TipType, bool bSeen);
	void SetOption(const class FString& OptionId, const class FString& Value);
	void RequestProgressionSurvey(class FText& PromptText, const class FString& BaseUrl);
	bool GetTutorialTipSeen(enum class ETutorialTip TipType);
	struct FPuzzleSolveData GetPuzzleSolveStatus(class ASophiaCharacter* Player, int32 KrakenId, const class FString& LocalID, const class FString& HackID);
	struct FPlayerProgressionData GetProgressionData(class ASophiaCharacter* Player);
	TMap<class FString, bool> GetEarnedRules(class ASophiaCharacter* Player);
	TMap<class FString, bool> GetEarnedPuzzleTypes(class ASophiaCharacter* Player);
	TMap<class FString, bool> GetEarnedLore(class ASophiaCharacter* Player);
	TMap<class FString, bool> GetEarnedInsights(class ASophiaCharacter* Player);
	TMap<class FString, bool> GetEarnedClues(class ASophiaCharacter* Player);
	void DisplayInsight(class ASophiaCharacter* Player, const class FString& EncyclopediaID);
	void DisplayClue(class ASophiaCharacter* Player, const class FString& EncyclopediaID);
	void ClaimSandboxProgressionRewards(class ASophiaCharacter* Player, enum class EMainMapZoneName ZONE, enum class EPuzzleCategory PuzzleCategory, struct FBhvrAnalyticsEvent_Base& Event);
	void Cheat_UnlockChapter100();
	void Cheat_SetCheatValueOnSkill(class ASophiaCharacter* Player, const class FString& SkillName, int32 Val);
	void Cheat_SetCheatEnabledOnSkill(class ASophiaCharacter* Player, const class FString& SkillName, bool Val);
	void BPC_UnlockMasteryRewards(class ASophiaCharacter* Player, class UPlayerMastery* PlayerMastery);
	int32 BPC_GetTotalMasteryLevel();
	struct FPlayerXP BPC_GetPlayerXP();
	int32 BPC_GetPlayerLevel();
	int32 BPC_GetMasteriesPerPlayerLevel();
	TArray<class UPlayerMastery*> BPC_GetLocalMasteryLevels();
	class UPlayerMastery* BPC_GetLocalMasteryLevel(const class FString& KrakenTypeIdentifier);
	float BPC_GetFractionalPlayerLevel();
	void BPC_ClaimSandboxProgressionRewards(class ASophiaCharacter* Player, enum class EMainMapZoneName ZONE, enum class EPuzzleCategory PuzzleCategory);
	void BPC_ClaimGlobalMasteryReward(class ASophiaCharacter* Player, int32 RewardIndex);
};

// 0x28 (0x58 - 0x30)
// Class IslandsofInsight.GISSettings
class UGISSettings : public UGameInstanceSubsystem
{
public:
	int32                                        ShowFPS;                                           // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bIsAmbassador;                                     // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShowServerFPS;                                     // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShowPing;                                          // 0x3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShowInsightPopups;                                 // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SprintMode;                                        // 0x44(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CursorMode;                                        // 0x48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CrouchToggleMode;                                  // 0x4C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PartyGridMode;                                     // 0x50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoaded;                                           // 0x54(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D13[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGISSettings* GetDefaultObj();

	void SetKrakenOption(class UObject* WorldContextObject, const class FString& Name, const class FString& Value);
};

// 0xF8 (0x128 - 0x30)
// Class IslandsofInsight.GISSocial
class UGISSocial : public UGameInstanceSubsystem
{
public:
	TArray<struct FPersistentPlayerReference>    Friends;                                           // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, struct FPersistentPlayerReference> FriendsMap;                                        // 0x40(0x50)(NativeAccessSpecifierPublic)
	TArray<struct FPersistentPlayerReference>    BlockedPlayers;                                    // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UTexture2D*                            LocalPlayerIcon;                                   // 0xA0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKrakenMessageGet>             KrakenMessages;                                    // 0xA8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                NextMessageCenterPage;                             // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class UTexture2D*>       Avatars;                                           // 0xC8(0x50)(BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FPersistentPlayerReference>    FriendsIncludingBlocked;                           // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGISSocial* GetDefaultObj();

	void TryJoinFriendGame(const class FString& Friend);
	void SyncAndRetrieveFriends();
	bool RefreshMessageCenter();
	bool FetchNextMessageCenterPage();
	bool ClaimMessageAttachments(struct FKrakenMessageGet& Message, FDelegateProperty_& FailureEvent);
};

// 0x430 (0x460 - 0x30)
// Class IslandsofInsight.GISSteam
class UGISSteam : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_1D2D[0x430];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGISSteam* GetDefaultObj();

	void SteamCallbackTick();
	bool HasDLC(int32 AppId);
	bool HasDeluxe();
	void CheatEnableAllDLC();
};

// 0x10 (0x48 - 0x38)
// Class IslandsofInsight.Given
class UGiven : public UClue
{
public:
	uint8                                        Pad_1D2F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGiven* GetDefaultObj();

};

// 0x30 (0x268 - 0x238)
// Class IslandsofInsight.GoddessBeacon
class AGoddessBeacon : public AClickableBase
{
public:
	uint8                                        Pad_1D30[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  CoreMesh;                                          // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarkerEmitter*                        MarkerEmitter;                                     // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PrereqQuestName;                                   // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WaitForCutscene;                                   // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMainMapZoneName                  ZONE;                                              // 0x261(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D31[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGoddessBeacon* GetDefaultObj();

	struct FVector BP_GetDestination();
};

// 0x1A0 (0x688 - 0x4E8)
// Class IslandsofInsight.Rosary
class ARosary : public APuzzleBase
{
public:
	uint8                                        Pad_1D3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MatPrimitiveHighlightIndex;                        // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatPrimitiveDistanceFadeStartIndex;                // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatPrimitiveDistanceFadeLengthIndex;               // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CullDistance;                                      // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentOfCullDistanceToStartFade;                  // 0x4FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RosaryNumBalls;                                    // 0x500(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpirationTimeRemaining;                           // 0x504(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ARosary*                               SpawnClusterLeader;                                // 0x508(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           BallMesh;                                          // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AutomaticallySpawned;                              // 0x518(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ChooseShapeRandomly;                               // 0x519(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D41[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ERosaryShape, float>         ShapeProbabilityWeight;                            // 0x520(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class ERosaryShape                      RosaryShape;                                       // 0x570(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D42[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClockfaceAngle;                                    // 0x574(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RandomRotator;                                     // 0x578(0xC)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        RosaryRadiusDegrees;                               // 0x584(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CustomBallScaleFactor;                             // 0x588(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpecialShapeMultiplier;                            // 0x58C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseConsistentRandomFunction;                       // 0x590(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D43[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ConsistentRandomFunctionSeed;                      // 0x594(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRandomStream                         ConsistentRandomStream;                            // 0x598(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DistanceThreshold;                                 // 0x5A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngleThreshold;                                    // 0x5A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GlowThreshold;                                     // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ForceDespawn;                                      // 0x5AC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D45[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FadeDelayInSeconds;                                // 0x5B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeLengthInSeconds;                               // 0x5B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DoFade;                                            // 0x5B8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D46[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FadeDirection;                                     // 0x5BC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         WillFadeOut;                                       // 0x5C0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D48[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RemainingFadeDelay;                                // 0x5C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentFadeTime;                                   // 0x5C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D4B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UStaticMeshComponent*>          balls;                                             // 0x5D0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       BallScale;                                         // 0x5E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector_NetQuantize>           BallLoc;                                           // 0x5F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                BallDist;                                          // 0x600(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                        DelayBeforeWarning;                                // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentWarningTimer;                               // 0x614(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngleThresholdForWarning;                          // 0x618(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceThresholdForWarning;                       // 0x61C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D4D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRosaryHidden;                                     // 0x640(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D4E[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ARosarySpawnVolume*                    OwningVolume;                                      // 0x680(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARosary* GetDefaultObj();

	bool OnClickFire(struct FClickEventContext& Context);
	void NetMultiCast_SetTeam(uint8 Team);
	void InitializeConsistentRandomStream(int32 Offset);
	float GetFRandRange(float Min, float Max);
	float GetFRand();
};

// 0x28 (0x6B0 - 0x688)
// Class IslandsofInsight.GoldenRosary
class AGoldenRosary : public ARosary
{
public:
	int32                                        MatPrimitiveActiveIndex;                           // 0x688(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D53[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGoldenRosaryBeacon>       beaconClass;                                       // 0x690(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  SolvedPlayerName;                                  // 0x698(0x18)(Net, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGoldenRosary* GetDefaultObj();

};

// 0x10 (0x230 - 0x220)
// Class IslandsofInsight.GoldenRosaryBeacon
class AGoldenRosaryBeacon : public AActor
{
public:
	class UStaticMeshComponent*                  beaconMesh;                                        // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifeTime;                                          // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D55[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGoldenRosaryBeacon* GetDefaultObj();

};

// 0x50 (0x2A0 - 0x250)
// Class IslandsofInsight.RosarySpawnVolume
class ARosarySpawnVolume : public ASophiaNetActor
{
public:
	uint8                                        Pad_1D56[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ARosary>                   RosaryClass;                                       // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumRosariesToSpawn;                                // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConquestHiddenRosariesMultiplier;                  // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         RespawnRosaries;                                   // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         RigForTutorial;                                    // 0x269(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D57[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TotalTimeToRespawnRosaries;                        // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumRosariesPerCluster;                             // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumClustersPerBatch;                               // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZeroTimePuzzles;                                   // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPuzzleLifetimeSeconds;                          // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         SpawnArea;                                         // 0x280(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D5A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARosarySpawnVolume* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class IslandsofInsight.GoldenRosarySpawnVolume
class AGoldenRosarySpawnVolume : public ARosarySpawnVolume
{
public:

	static class UClass* StaticClass();
	static class AGoldenRosarySpawnVolume* GetDefaultObj();

};

// 0x70 (0x290 - 0x220)
// Class IslandsofInsight.GoldPickup
class AGoldPickup : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D61[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PickupValue;                                       // 0x22C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            PickupSound;                                       // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArriveTime;                                        // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArriveTimeRandomness;                              // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftDirUpBias;                                    // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftDistance;                                     // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftMinTimeDistance;                              // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftMinTime;                                      // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftMaxTime;                                      // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PitchIncrement;                                    // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ArriveTimeLeftCurrent;                             // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftTimeLeft;                                     // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoveDelayRemaining;                                // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoveSpeedCurrent;                                  // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftCurrent;                                      // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftAcceleration;                                 // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DriftDir;                                          // 0x270(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D62[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      TargetPlayer;                                      // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D63[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGoldPickup* GetDefaultObj();

	void BPI_OnStartAnimation(struct FLinearColor& Col);
	void BPI_OnPickup();
};

// 0x1A8 (0x690 - 0x4E8)
// Class IslandsofInsight.GravityBallBase
class AGravityBallBase : public APuzzleBase
{
public:
	class AGravityBallProjectile*                LatestProjectile;                                  // 0x4E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRings;                                          // 0x4F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumReflectors;                                     // 0x4F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumGravityWells;                                   // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RingMeshScale;                                     // 0x4FC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RingCollisionScale;                                // 0x508(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityMassMultiplier;                             // 0x514(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClampGravityPower;                                 // 0x518(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityDistanceCutoff;                             // 0x51C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityEffectDelay;                                // 0x520(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProjectileSpeed;                                   // 0x524(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProjectileLifeSpan;                                // 0x528(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsPuzzleAPickup;                                   // 0x52C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D74[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            ChimeAudioClip;                                    // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AlignRingsToSpline;                                // 0x538(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D76[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PickUpScale;                                       // 0x53C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ReflectorScale;                                    // 0x548(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D77[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           ReflectorStaticMesh;                               // 0x558(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           RingStaticMesh;                                    // 0x560(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           RingCollisionStaticMesh;                           // 0x568(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           GravityWellStaticMesh;                             // 0x570(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           PlayerPreviewStaticMesh;                           // 0x578(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      EditorSpline;                                      // 0x580(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGravitySphereComponent*               EditorSplineController;                            // 0x588(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           PickUpStaticMesh;                                  // 0x590(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           ReflectionStaticMesh;                              // 0x598(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGravitySphereComponent*>       ReflectorStaticMeshes;                             // 0x5A0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          RingStaticMeshes;                                  // 0x5B0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          RingCollisions;                                    // 0x5C0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UGravitySphereComponent*>       GravityWellMeshes;                                 // 0x5D0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USphereComponent*                      PuzzleCollision;                                   // 0x5E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PickUpMesh;                                        // 0x5E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ReflectionMesh;                                    // 0x5F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGravityWellData>              GravityWellData;                                   // 0x5F8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               SolvedColour;                                      // 0x608(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ComponentSolvedColour;                             // 0x614(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ComponentCoolingDuration;                          // 0x620(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D7C[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      PlayerSpline;                                      // 0x638(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               UnmarkedColour;                                    // 0x640(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D7D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASophiaCharacter*>              CanSolvePlayers;                                   // 0x650(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	class ASophiaCharacter*                      PlayerRef;                                         // 0x660(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USplineMeshComponent*>          PlayerSplineMeshes;                                // 0x668(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D7F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGravityBallBase* GetDefaultObj();

	void ResetPuzzleCooldown();
	void OnEndPuzzleOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	struct FVector GetUnmarkedColor();
	void BP_SetSolvedColor(class UStaticMeshComponent* Mesh);
	void BP_SetColor();
	void BP_ResetPuzzle();
	void BP_OnProjectileVisibilityChanged(bool NewVisibility);
};

// 0x70 (0x290 - 0x220)
// Class IslandsofInsight.GravityBallProjectile
class AGravityBallProjectile : public AActor
{
public:
	class UStaticMeshComponent*                  PuzzleProjectile;                                  // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumEmitters;                                       // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D85[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UNiagaraComponent*>             EmitterArray;                                      // 0x230(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AGravityBallBase*                      PuzzleActor;                                       // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        GravitationEffectAsset;                            // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D87[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VFXLifeTime;                                       // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D88[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      PlayerRef;                                         // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D89[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGravityBallProjectile* GetDefaultObj();

	void BP_StopTrail();
	void BP_StartVFX(bool IsSolved);
	void BP_ImpactedObstacle(const struct FVector& ImpactLoc);
};

// 0x0 (0x4E0 - 0x4E0)
// Class IslandsofInsight.GravitySphereComponent
class UGravitySphereComponent : public UStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class UGravitySphereComponent* GetDefaultObj();

};

// 0x58 (0x278 - 0x220)
// Class IslandsofInsight.GravitySpline
class AGravitySpline : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      Spline;                                            // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D8F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      PlayerRef;                                         // 0x240(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGravityBallBase*                      PuzzleActor;                                       // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGravityBallProjectile*                PuzzleProjectile;                                  // 0x250(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D90[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGravitySpline* GetDefaultObj();

};

// 0x28 (0x288 - 0x260)
// Class IslandsofInsight.GridButton
class UGridButton : public UUserWidget
{
public:
	class UButton*                               FullButton;                                        // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        KeybindingText;                                    // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ButtonIcon;                                        // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        ButtonText;                                        // 0x278(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlaySoundOnClick;                                 // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D94[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGridButton* GetDefaultObj();

};

// 0x40 (0x260 - 0x220)
// Class IslandsofInsight.GridButton_DEPRECATED
class AGridButton_DEPRECATED : public AActor
{
public:
	class UStaticMeshComponent*                  buttonMesh;                                        // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  Symbol;                                            // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTextRenderComponent*>          HintCounter;                                       // 0x230(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D97[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGridButton_DEPRECATED* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.HasGridInput
class IHasGridInput : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHasGridInput* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class IslandsofInsight.GridInputComponent
class UGridInputComponent : public UActorComponent
{
public:
	float                                        MinControllerHighlightDeltaSpeed;                  // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JoystickChangeDirCooldown;                         // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiagonalDeadParabolaScale;                         // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JoystickGridDeadzone;                              // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableDiagonals;                                   // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D9B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AutoMoveMaxPerSecond;                              // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoMoveHasteCoefficient;                          // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JoystickAutoMoveCooldown;                          // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DpadAutoMoveCooldown;                              // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HysteresisCoefficient;                             // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D9C[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGridInputComponent* GetDefaultObj();

};

// 0x40 (0x3B0 - 0x370)
// Class IslandsofInsight.GridInvitePromptWidget
class UGridInvitePromptWidget : public UNotificationWidget
{
public:
	struct FGridInvite                           TheInvite;                                         // 0x370(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class UPlayerWidget*                         InviterSteamWidget;                                // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGridInvitePromptWidget* GetDefaultObj();

	void ReplyToGridInvite(bool Response);
	void BP_HandleNonInviterMember(class ASophiaPlayerState* PlayerState);
};

// 0x68 (0x350 - 0x2E8)
// Class IslandsofInsight.GridInviteWidget
class UGridInviteWidget : public UBaseWidget
{
public:
	class UNewGridUI*                            LinkedUI;                                          // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpacer*                               FriendBoxFakeSpacer;                               // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ErrorText;                                         // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          PartyPanelWidget;                                  // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox_Sophia*                   OnlineFriendPanelWidget;                           // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPlayerWidget>             PlayerWidgetClass;                                 // 0x310(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPooledObject*>                 AllocatedFriendWidgets;                            // 0x318(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DA5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlayerWidget*>                 CreatedPartyPlayerWidgets;                         // 0x338(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DA6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGridInviteWidget* GetDefaultObj();

	class FText GetLocalPlayerSteamName();
	class UTexture2D* GetLocalPlayersAvatarTexture(class UTexture2D* DefaultTexture);
};

// 0xF8 (0x390 - 0x298)
// Class IslandsofInsight.GridTip
class UGridTip : public USophiaUserWidget
{
public:
	uint8                                        Pad_1DA8[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                BackgroundImg;                                     // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                OuterGlow;                                         // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                GridTipIcon;                                       // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        GridTipText;                                       // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TypeName;                                          // 0x2F8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, struct FGridTipData>     Materials;                                         // 0x308(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    AvoidPatternMaterial;                              // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDataTable*>                    TextStyles;                                        // 0x360(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTexture2DDynamic*                     PatternTexture;                                    // 0x370(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<uint8>                                TextureBytes;                                      // 0x378(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class APuzzlePanel*                          Panel;                                             // 0x388(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGridTip* GetDefaultObj();

	void OnClicked();
};

// 0x28 (0x2C0 - 0x298)
// Class IslandsofInsight.GridTotemPipWidget
class UGridTotemPipWidget : public USophiaUserWidget
{
public:
	class UImage*                                HighlightImage;                                    // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SelectedPanel;                                     // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridUI*                               GridUI;                                            // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaRune*                           SophiaRune;                                        // 0x2B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DAA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGridTotemPipWidget* GetDefaultObj();

	void OnClicked();
};

// 0x28 (0x2C0 - 0x298)
// Class IslandsofInsight.GridTutorialPopUp
class UGridTutorialPopUp : public USophiaUserWidget
{
public:
	class UCanvasPanel*                          TutorialPopUp;                                     // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                TutorialPopUpArrowLeft;                            // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                TutorialPopUpArrowRight;                           // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                TutorialPopUpArrowUp;                              // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                TutorialPopUpArrowDown;                            // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGridTutorialPopUp* GetDefaultObj();

};

// 0x210 (0x528 - 0x318)
// Class IslandsofInsight.GridUI
class UGridUI : public UInputWidget
{
public:
	uint8                                        Pad_1DCE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVerticalBox*                          AllRulesContainer;                                 // 0x320(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          GlobalRulesContainer;                              // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          SymbolRulesContainer;                              // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            TutorialMessage;                                   // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          TutorialBox;                                       // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          TotemCanvas;                                       // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox_Sophia*                   TotemVerticalBox;                                  // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            EndResultMessage;                                  // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SolvedCanvasCenter;                                // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SolvedCanvasBottom;                                // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              ComboArea;                                         // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            PuzzleSequenceCounter;                             // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ComboCounter;                                      // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          QFPCanvas;                                         // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          GlimpseCanvas;                                     // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          AudioCanvas;                                       // 0x398(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              HintArea;                                          // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              ProgressArea;                                      // 0x3A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           UndoButton;                                        // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                UndoButtonOuterGlow;                               // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           RestartButton;                                     // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           ViewTutorialButton;                                // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           InviteButton;                                      // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInsightWidgetGrid*                    InsightWidget;                                     // 0x3D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                DifficultyBackground;                              // 0x3E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        DifficultyText;                                    // 0x3E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        DifficultyBox;                                     // 0x3F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            CloseMessage;                                      // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               PlayGridAudioAnimatedImageButton;                  // 0x400(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               LeftStopAnimatedImageButton;                       // 0x408(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridButton*                           PlayGridAudioButton;                               // 0x410(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               PlayAnswerKeyAudioAnimatedImageButton;             // 0x418(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               RightStopAnimatedImageButton;                      // 0x420(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridButton*                           PlayAnswerKeyAudioButton;                          // 0x428(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           InvitePanel;                                       // 0x430(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTexture2D*>                    DifficultyTextures;                                // 0x438(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridTip>                  GridTipClass;                                      // 0x448(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridTip>                  GridSymbolRuleClass;                               // 0x450(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridTip>                  GridClickableTipClass;                             // 0x458(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridTotemPipWidget>       TotemPipClass;                                     // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APuzzlePanel*                          Panel;                                             // 0x468(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputWidget>              TutorialWidgetClass;                               // 0x470(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputWidget*                          TutorialWidget;                                    // 0x478(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               MistakeWidgetClass;                                // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           MistakeWidget;                                     // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHintTooltip>              HintTooltipClass;                                  // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHintTooltip*                          HintTooltip;                                       // 0x498(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstInstructionTipAnimationStartTime;             // 0x4A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SingleInstructionTipAnimationDuration;             // 0x4A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SingleInstructionTipAnimationDurationTutorial;     // 0x4A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationStartTimeIncrement;         // 0x4AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationStartTimeIncrementTutorial; // 0x4B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationDistanceScreenWidths;       // 0x4B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationDistanceScreenWidthsTutorial; // 0x4B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationEaseOutExponent;            // 0x4BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationEaseOutExponentTutorial;    // 0x4C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowPeriod;                     // 0x4C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowMinimumOpacity;             // 0x4C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowDuration;                   // 0x4CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowFadeOutTime;                // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowFadeInTime;                 // 0x4D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UndoButtonOuterGlowPeriod;                         // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UndoButtonOuterGlowMinimumOpacity;                 // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UndoButtonOuterGlowFadeTime;                       // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MusicPuzzleDelayTime;                              // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HintTextShowTime;                                  // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HintTextFadeTime;                                  // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  CurrentTutorialText;                               // 0x4F0(0x18)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1DD9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGridUI* GetDefaultObj();

	void ViewPuzzle();
	void UndoReleased();
	void UndoPressed();
	void ShowTutorial();
	void ShowMistakePopup(const struct FVector2D& ScreenPosition);
	void Restart();
	void Previous();
	void OnPlayGridClicked();
	void OnPlayAnswerKeyClicked();
	void NextOrClose();
	void Invite();
	void Hint();
	void HideMistakePopup();
	void Glimpse();
	enum class ESlateVisibility GetTutorialBoxVisible();
	class FText GetTextForTutorialMessage();
	void Exit();
	void BP_UpdateProgressCounter(int32 NewCounter);
	void BP_UpdateMistakesCounter(int32 NewCounter);
	void BP_UpdateHintCounterV2(float NewCounter, int32 NewMax);
	void BP_UpdateDifficulty(int32 Difficulty);
	void BP_PlaySolveAnimation();
	void BP_NotifyCaveHoverV3(const struct FGridCaveHighlightInfo& Info, bool bShow);
	void BP_NotifyAreaHoverV2(const struct FVector2D& ScreenCursorLocation, TArray<struct FGridHighlightInfo>& HighlightTiles, bool bIsLight);
	void BP_NextOrClose();
};

// 0x250 (0x778 - 0x528)
// Class IslandsofInsight.GyroPuzzle
class AGyroPuzzle : public APuzzleContainerBase
{
public:
	TArray<struct FLinearColor>                  TeamTints;                                         // 0x528(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FLinearColor                          DefaultTeamTint;                                   // 0x538(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpirationTimeRemaining;                           // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DDE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGyroPuzzle*                           SpawnClusterLeader;                                // 0x550(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRings;                                          // 0x558(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGyroPuzzleRingLayer>          RingLayers;                                        // 0x560(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     IntendedSolveCapsule;                              // 0x570(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DebugIntendedSolveBall;                            // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       RotationComponent;                                 // 0x580(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       RingRoot;                                          // 0x588(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<bool>                                 RingOKMask;                                        // 0x590(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        BaseRotationRate;                                  // 0x5A0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRotator>                      RingRotationRates;                                 // 0x5A8(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                RingIndividualSpinRates;                           // 0x5B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FRotator>                      RingStaticRotationOffsets;                         // 0x5C8(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FRotator>                      RingDynamicRotationOffsets;                        // 0x5D8(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       RingPivotTranslationOffsets;                       // 0x5E8(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       RingPostTranslationOffsets;                        // 0x5F8(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       RingSelfTranslationOffsets;                        // 0x608(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                RingScales;                                        // 0x618(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               IntendedSolveCapsulePos;                           // 0x628(0xC)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               IntendedSolveLaserPos;                             // 0x634(0xC)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              IntendedSolveLaserRot;                             // 0x640(0xC)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               BaseRingScale;                                     // 0x64C(0xC)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLaserDebugMode;                                   // 0x658(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldGenerate;                                   // 0x659(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GenerateFamily;                                    // 0x65C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GenerateStaticRotationMode;                        // 0x660(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GenerateDynamicRotationOffsetMode;                 // 0x664(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GenerateDynamicRotationMode;                       // 0x668(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GeneratePivotTranslationMode;                      // 0x66C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GenerateSelfTranslationMode;                       // 0x670(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GenerateScaleMode;                                 // 0x674(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GenerateBadMode;                                   // 0x678(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       LaserEmpty;                                        // 0x680(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  SolveLaser;                                        // 0x688(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USceneComponent*>               RingLayersComponentsDump;                          // 0x690(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialUnsolvedGood;                              // 0x6A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialUnsolvedBad;                               // 0x6A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialSolvedGood;                                // 0x6B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialSolvedBad;                                 // 0x6B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           CollisionMesh;                                     // 0x6C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IdealSpeed;                                        // 0x6C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpeedMultiplier;                                // 0x6CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserBaseExtent;                                   // 0x6D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserAnimationRate;                                // 0x6D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserEstimatedPuzzleSizeMultiplier;                // 0x6D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserMaxMinSizeMul;                                // 0x6DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserDesiredDistanceFromPlayer;                    // 0x6E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserTargetScale;                                  // 0x6E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EstimatedPuzzleSize;                               // 0x6E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeElapsed;                                       // 0x6EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveTime;                                         // 0x6F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LaserLocation;                                     // 0x6F4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LaserRotation;                                     // 0x700(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DF2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGyroSpawnVolume*                      OwningVolume;                                      // 0x710(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            FailedSound;                                       // 0x718(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ForceDespawn;                                      // 0x720(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldDespawn;                                    // 0x721(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DF3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DespawnDelay;                                      // 0x724(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DespawnAnimationTime;                              // 0x728(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DespawnTimeElapsed;                                // 0x72C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DespawnOriginalScale;                              // 0x730(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawningScaleMin;                                  // 0x73C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawningScaleMax;                                  // 0x740(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawningScaleOverride;                             // 0x744(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReservedRadius;                                    // 0x748(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IndicatorBlinkTime;                                // 0x74C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IndicatorBlinkFactor;                              // 0x750(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DF8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 LastBlinkIsGood;                                   // 0x758(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	class FString                                DEPRECATED_OriginFile;                             // 0x768(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGyroPuzzle* GetDefaultObj();

	void OnRep_SolveTime();
	struct FLinearColor GetTeamTint();
	void BP_SolveVisualUpdate();
	void BP_OnPuzzleHovered(bool bHovered);
};

// 0x60 (0x2B0 - 0x250)
// Class IslandsofInsight.GyroSpawnVolume
class AGyroSpawnVolume : public ASophiaNetActor
{
public:
	uint8                                        Pad_1DFB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AGyroPuzzle>               GyroClass;                                         // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumPuzzlesToSpawn;                                 // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConquestHiddenGyrosMultiplier;                     // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         RespawnPuzzles;                                    // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DFD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TotalTimeToRespawnPuzzles;                         // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         SpawnArea;                                         // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESpawnBehaviour                   GyroSpawnBehaviour;                                // 0x278(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseHardPool;                                      // 0x279(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E00[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumGyrosPerCluster;                                // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumClustersPerBatch;                               // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZeroTimePuzzles;                                   // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPuzzleLifetimeSeconds;                          // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E02[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGyroSpawnVolume* GetDefaultObj();

};

// 0x1B8 (0x6E0 - 0x528)
// Class IslandsofInsight.MirrorMazePuzzle
class AMirrorMazePuzzle : public APuzzleContainerBase
{
public:
	uint8                                        Pad_1E27[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                UpgradeBonusTargetTimeFractions;                   // 0x538(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                UpgradeBonusMultipliers;                           // 0x548(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IgnoreMazeBonusUpgrade;                            // 0x558(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E29[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpgradeBonusTargetTime;                            // 0x55C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E2B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Socket_VolumeSize;                                 // 0x568(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E2C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         EndDetectVolume_Server;                            // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USophiaBoxComponent*                   SpawnVolume;                                       // 0x580(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          GateMeshes;                                        // 0x588(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FloorMesh;                                         // 0x598(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       EndDome;                                           // 0x5A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USophiaBoxComponent*>           BoundingVolumes;                                   // 0x5A8(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USophiaBoxComponent*                   StartingCellBoxComponent;                          // 0x5B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         CylinderInstancedStaticMesh;                       // 0x5C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         ClearWallInstancedStaticMesh;                      // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         OpaqueWallInstancedStaticMesh;                     // 0x5D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         CeilingInstancedStaticMesh;                        // 0x5D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         TrapDoorInstancedStaticMesh;                       // 0x5E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGenerationType                   GenerationType;                                    // 0x5E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E2E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    TeleportPlatformClass;                             // 0x5F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AJumpingPad>               JumpingPadClass;                                   // 0x5F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UMirrorMazeWidget>         MirrorMazeWidgetClass;                             // 0x600(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMirrorMazeWidget*                     MirrorMazeWidget;                                  // 0x608(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UIDelayOnSolve;                                    // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GoalDistancePointMultiplier;                       // 0x614(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoalDistanceTimeMultiplier;                        // 0x618(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E2F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CancelMessage;                                     // 0x620(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                            BumpEvent;                                         // 0x638(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BumpMinimumSpeed;                                  // 0x640(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BumpMaximumSpeed;                                  // 0x644(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMirrorMazeCell>               GeneratedMaze;                                     // 0x648(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        TotalGoalDistance;                                 // 0x658(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RandSeed;                                          // 0x65C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FIntVector                            NumMazeCellsXYZ;                                   // 0x660(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Is3DMaze;                                          // 0x66C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E31[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FIntPoint                             OpeningXY;                                         // 0x670(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OpaqueWallPercentChance;                           // 0x678(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VerticalPathsChance;                               // 0x67C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TrapDoorChance;                                    // 0x680(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SpawnTrapDoorMeshes;                               // 0x684(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E34[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CellWidthX;                                        // 0x688(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CellWidthY;                                        // 0x68C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CellHeight;                                        // 0x690(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E35[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UStaticMeshComponent*>          EndingMeshes;                                      // 0x6C8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E36[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMirrorMazePuzzle* GetDefaultObj();

	void SetParams(struct FMirrorMazeParams& Params);
	void ServerExclusive_CheckEndDetectVolume();
	void RegisterEndingMesh(class UStaticMeshComponent* Comp);
	void RegenerateMaze();
	void OnWallCollision(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnStartingCellColliderOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnStartingCellColliderExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEndDetectVolumeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnEndDetectVolumeExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBoundingVolumeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBoundingVolumeExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void NotifySolved(class ASophiaCharacter* ThePlayer);
	struct FMirrorMazeParams GetParams();
};

// 0x10 (0x6F0 - 0x6E0)
// Class IslandsofInsight.HandmadeMirrorMazePuzzle
class AHandmadeMirrorMazePuzzle : public AMirrorMazePuzzle
{
public:
	class UPuzzleBoundsComponent*                PuzzleBoundsComponent;                             // 0x6E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CustomSolveValue;                                  // 0x6E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Uses4SidedEndDome;                                 // 0x6EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E3D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHandmadeMirrorMazePuzzle* GetDefaultObj();

};

// 0x10 (0x270 - 0x260)
// Class IslandsofInsight.HintBox
class UHintBox : public UUserWidget
{
public:
	class URichTextBlock*                        TextBlock;                                         // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E3F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHintBox* GetDefaultObj();

	void BP_PlayShowAnim();
	void BP_PlayHideAnim();
};

// 0x18 (0x2B0 - 0x298)
// Class IslandsofInsight.HintTooltip
class UHintTooltip : public USophiaUserWidget
{
public:
	class URichTextBlock*                        TextBlock;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E40[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHintTooltip* GetDefaultObj();

};

// 0x1B8 (0x450 - 0x298)
// Class IslandsofInsight.HintWidget
class UHintWidget : public USophiaUserWidget
{
public:
	float                                        TutorialTipMessageDelay;                           // 0x298(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TutorialTipMessageFadeInTime;                      // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipRosaryClickToSolveTimer;                        // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipProjectionConeClickToSolveTimer;                // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipGyroClickToSolveTimer;                          // 0x2A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipGravityBallClickToThrowTimer;                   // 0x2AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipViewfinderSequenceTimer;                        // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipRacingBallSequenceTimer;                        // 0x2B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipLevelGateClickToInteractTimer;                  // 0x2B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipFractalMatchSequenceTimer;                      // 0x2BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipKlotskiSequenceTimer;                           // 0x2C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipMatchboxTimer;                                  // 0x2C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipMatchboxClickTimer;                             // 0x2C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipTotemClickTimer;                                // 0x2CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipSeek5Timer;                                     // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E44[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RosaryText;                                        // 0x2D8(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ProjectionConeTutorial;                            // 0x2F0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  GravityBallTutorial;                               // 0x308(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  FractalMatchTutorial;                              // 0x320(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  KlotskiTutorial;                                   // 0x338(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  GyroTutorial;                                      // 0x350(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ViewfinderPickUpTutorial;                          // 0x368(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ViewfinderEnlargeTutorial;                         // 0x380(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ViewfinderTipAltClickToMaskTutorial;               // 0x398(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  ViewfinderTipClickToSolveTutorial;                 // 0x3B0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  RacingBallTipClickToActivateTutorial;              // 0x3C8(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  LevelGateTipClickToInteractTutorial;               // 0x3E0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  MatchboxTipTutorial;                               // 0x3F8(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  PuzzleTotemTipClickToActivateTutorial;             // 0x410(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  Seek5TipClickToActivateTutorial;                   // 0x428(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E48[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URichTextBlock*                        HintText;                                          // 0x448(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHintWidget* GetDefaultObj();

	void BP_SetHintText(class FText& AggregateHintText);
};

// 0x20 (0x338 - 0x318)
// Class IslandsofInsight.InsightModalWidget
class UInsightModalWidget : public UInputWidget
{
public:
	class UImage*                                InsightImage;                                      // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            InsightName;                                       // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        InsightDescription;                                // 0x328(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEncyclopediaEntry*                    EncyclopediaEntry;                                 // 0x330(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInsightModalWidget* GetDefaultObj();

	void Init(class UEncyclopediaEntry* Entry);
	void Build();
	void BP_Close();
};

// 0xC8 (0x5B0 - 0x4E8)
// Class IslandsofInsight.PuzzleTotem
class APuzzleTotem : public APuzzleBase
{
public:
	class USceneComponent*                       MovingComponent;                                   // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPuzzleBoundsComponent*                PuzzleBoundsComponent;                             // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                Directory;                                         // 0x4F8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                        Filenames;                                         // 0x508(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                GridKrakenIDs;                                     // 0x518(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        EncyclopediaEntryIndex;                            // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E4F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          TutorialText;                                      // 0x530(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ATotemRune>                RuneClass;                                         // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Speed;                                             // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllPuzzlesTutorialMode;                           // 0x54C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E52[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  FirstRunePreview;                                  // 0x550(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CubeRiseEvent;                                     // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldHideExtraGridButtonsInTotem;                // 0x560(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E53[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ATotemRune*>                    Runes;                                             // 0x568(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UMarkerEmitter*                        MarkerEmitter;                                     // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                        DEPRECATED_tutorialMessages;                       // 0x580(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E55[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODAudioComponent*                   RiseInstance;                                      // 0x5A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E56[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APuzzleTotem* GetDefaultObj();

};

// 0x0 (0x5B0 - 0x5B0)
// Class IslandsofInsight.InsightTotem
class AInsightTotem : public APuzzleTotem
{
public:

	static class UClass* StaticClass();
	static class AInsightTotem* GetDefaultObj();

};

// 0x0 (0x260 - 0x260)
// Class IslandsofInsight.InsightTotemWidget
class UInsightTotemWidget : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UInsightTotemWidget* GetDefaultObj();

	void BP_Close();
};

// 0x18 (0x330 - 0x318)
// Class IslandsofInsight.InsightWidget
class UInsightWidget : public UInputWidget
{
public:
	class UImage*                                InsightImage;                                      // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            InsightName;                                       // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInsight*                              Insight;                                           // 0x328(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInsightWidget* GetDefaultObj();

	void BP_Close();
};

// 0x28 (0x288 - 0x260)
// Class IslandsofInsight.InsightWidgetGrid
class UInsightWidgetGrid : public UUserWidget
{
public:
	class UImage*                                InsightImage;                                      // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            InsightName;                                       // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               RevealButton;                                      // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInsight*                              Insight;                                           // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewGridUI*                            ParentWidget;                                      // 0x280(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInsightWidgetGrid* GetDefaultObj();

	void BP_Reveal();
	void BP_Close();
};

// 0x28 (0x248 - 0x220)
// Class IslandsofInsight.InvisibleWall
class AInvisibleWall : public AActor
{
public:
	float                                        BlockedMessageCooldown;                            // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E64[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  BlockedMessage;                                    // 0x228(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class ALevelRestrictionVolume*               LRV;                                               // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AInvisibleWall* GetDefaultObj();

	void SetCollisionMask(class UStaticMeshComponent* Mesh);
};

// 0x0 (0x48 - 0x48)
// Class IslandsofInsight.IslandNumber
class UIslandNumber : public UNumericalClue
{
public:

	static class UClass* StaticClass();
	static class UIslandNumber* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class IslandsofInsight.Item
class UItem : public UObject
{
public:
	class UTexture2D*                            ItemImage;                                         // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x30(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         Disabled;                                          // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AlwaysShown;                                       // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ImmediatelyUsedAndHidden;                          // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Countable;                                         // 0x4B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Scalar;                                            // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Timed;                                             // 0x4D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AddTimes;                                          // 0x4E(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPassiveItem;                                     // 0x4F(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToggleChangable;                                   // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemType                         ItemEnum;                                          // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E68[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Quantity;                                          // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Magnitude;                                         // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondsUntilExpiry;                                // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UItem* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class IslandsofInsight.ItemData
class UItemData : public UObject
{
public:
	class UItem*                                 Item;                                              // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UItem>                     ItemClass;                                         // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OverridenQuantity;                                 // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OverridenMagnitude;                                // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OverridenSecondsUntilExpiry;                       // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E6B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UItemData* GetDefaultObj();

};

// 0xE8 (0x320 - 0x238)
// Class IslandsofInsight.JumpingPad
class AJumpingPad : public AClickableBase
{
public:
	uint8                                        Pad_1E7E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PreservePlayerMomentumConstant;                    // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JumpPadSoundPriority;                              // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            JumpPadEvent;                                      // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  RootMeshComponent;                                 // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  RibbonMesh;                                        // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  OnOverlapColliderComponent;                        // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      SplineComponent;                                   // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddedDirectionalSpeed;                             // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E81[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                JumpedMessage;                                     // 0x280(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpedMessageDelay;                                // 0x290(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddedInitialVerticalSpeed;                         // 0x294(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FreezePlayerInput;                                 // 0x298(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTangential;                                      // 0x299(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E82[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayersNeededToActivate;                           // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            LaunchEvent;                                       // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AudioCooldown;                                     // 0x2A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E83[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASophiaCharacter*>              LaunchingSophiaCharacters;                         // 0x2B0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class ASophiaCharacter*, float>         AudioCoolDowns;                                    // 0x2C0(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1E85[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AJumpingPad* GetDefaultObj();

	void UpdateJumpHeightVisuals();
	void Tick(float DeltaSeconds);
	void OnOverlapExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapEnter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	struct FVector CalculateVelocityVector(const struct FVector& InVelocity);
	struct FVector CalculateVelocity(class ASophiaCharacter* SophiaChar);
};

// 0x0 (0x320 - 0x320)
// Class IslandsofInsight.ItemJumpingPad
class AItemJumpingPad : public AJumpingPad
{
public:

	static class UClass* StaticClass();
	static class AItemJumpingPad* GetDefaultObj();

};

// 0x8 (0x228 - 0x220)
// Class IslandsofInsight.ItemTeleportPortal
class AItemTeleportPortal : public AActor
{
public:
	class UMaterialBillboardComponent*           PortalBillBoard;                                   // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AItemTeleportPortal* GetDefaultObj();

};

// 0x178 (0x6F8 - 0x580)
// Class IslandsofInsight.KlotskiPuzzle
class AKlotskiPuzzle : public AFocusablePuzzle
{
public:
	TArray<float>                                UpgradeBonusMultipliers;                           // 0x580(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UInstancedStaticMeshComponent*> AllISM;                                            // 0x590(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  GridPreview;                                       // 0x5A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ControllerCursor;                                  // 0x5A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         GridCenter;                                        // 0x5B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         ClickMesh;                                         // 0x5B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      WorldViewCameraRed;                                // 0x5C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      WorldViewCameraBlue;                               // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         TileISM;                                           // 0x5D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         SolutionTileISM;                                   // 0x5D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         borderISM;                                         // 0x5E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         blockISM;                                          // 0x5E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         JoinISM;                                           // 0x5F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         SolutionBlockISM;                                  // 0x5F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         SolutionJoinISM;                                   // 0x600(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            MoveSound;                                         // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            SelectSound;                                       // 0x610(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DEPRECATED_OriginFile;                             // 0x618(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DEPRECATED_Subdirectory;                           // 0x628(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDecalComponent*                       LightDecal;                                        // 0x638(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     DecalMaterial;                                     // 0x640(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              DecalMaterialDynamic;                              // 0x648(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E99[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FKlotskiPuzzleSpec                    Spec;                                              // 0x698(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        GridHeight;                                        // 0x6C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GridWidth;                                         // 0x6CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowBorder;                                        // 0x6D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E9A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AspectRatio;                                       // 0x6D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsMultiplayer;                                     // 0x6D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E9B[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AKlotskiPuzzle* GetDefaultObj();

	void NetMultiCast_MoveKlotskiBlock(const struct FIntPoint& Direction, int32 blockIndex, const struct FVector& TargetPosition, const struct FIntPoint& TargetOffset, class ASophiaCharacter* Sender);
	void BPI_SetUpBorder();
	void BPI_HighlightOnClick(TArray<struct FInstanceData>& InstData, bool Highlight);
};

// 0x8 (0x2A0 - 0x298)
// Class IslandsofInsight.LargeMapViewWidget
class ULargeMapViewWidget : public USophiaUserWidget
{
public:
	class UMapWidget*                            Map;                                               // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULargeMapViewWidget* GetDefaultObj();

	void CloseMapMenu();
	void BPI_HideUIPanels();
};

// 0x48 (0x268 - 0x220)
// Class IslandsofInsight.LeaderboardMonolith
class ALeaderboardMonolith : public AActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  NorthTextRender;                                   // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  EastTextRender;                                    // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  SouthTextRender;                                   // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  WestTextRender;                                    // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EA2[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALeaderboardMonolith* GetDefaultObj();

	void OnRep_TextSet();
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.LetterboxingUIScalingRule
class ULetterboxingUIScalingRule : public UDPICustomScalingRule
{
public:

	static class UClass* StaticClass();
	static class ULetterboxingUIScalingRule* GetDefaultObj();

};

// 0x50 (0x2E8 - 0x298)
// Class IslandsofInsight.LevelAndCoinsWidget
class ULevelAndCoinsWidget : public USophiaUserWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Coins;                                             // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Mirabilis;                                         // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            CoinTotal;                                         // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            MirabilisTotal;                                    // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EA9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         OnScreen;                                          // 0x2E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EAA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULevelAndCoinsWidget* GetDefaultObj();

	void PlayExitAnimation();
	void PlayEnterAnimation();
	void PlayCoinAnimation();
	void PlayBorbAnimation();
	void FinishCoinAnimation();
	void FinishBorbAnimation();
};

// 0x18 (0x330 - 0x318)
// Class IslandsofInsight.LevelGateWidget
class ULevelGateWidget : public UInputWidget
{
public:
	bool                                         ShowButtons;                                       // 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DeluxPopup;                                        // 0x319(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EB5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      LastSeenPlayer;                                    // 0x320(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALevelRestrictionVolume*               LastSeenGate;                                      // 0x328(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULevelGateWidget* GetDefaultObj();

	bool ShouldShowStore();
	void OnInputUnlock();
	void OnInputStore();
	void OnInputCancel();
	class ALevelRestrictionVolume* GetLastSeenGate();
	void BP_NotifyCurrentGate(class ASophiaCharacter* LocalPlayer, class ALevelRestrictionVolume* Gate);
};

// 0x200 (0x6E8 - 0x4E8)
// Class IslandsofInsight.LevelRestrictionVolume
class ALevelRestrictionVolume : public APuzzleBase
{
public:
	class ADungeon*                              AssociatedDungeon;                                 // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayMessage;                                    // 0x4F0(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                        ReqLevel;                                          // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EC9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, int32>                   ReqMasteries;                                      // 0x510(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         ReqDelux;                                          // 0x560(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ECA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APuzzleBase*                           ReqPuzzle;                                         // 0x568(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APuzzleBase*>                   ReqPuzzles;                                        // 0x570(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        ReqBorbs;                                          // 0x580(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ECC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EMainMapZoneName>          ReqZones;                                          // 0x588(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        ReqSecrets;                                        // 0x598(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ReqQuest;                                          // 0x59C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldStartUnlocked;                              // 0x5A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ECD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CustomText;                                        // 0x5A8(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class USceneComponent*                       Root;                                              // 0x5C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         DetectVolume;                                      // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Blocker;                                           // 0x5D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMarkerEmitter*                        MarkerEmitter;                                     // 0x5D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeDuration;                                      // 0x5E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ECF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            UnlockFModEvent;                                   // 0x5E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            LockedMarkerTex;                                   // 0x5F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            UnlockedMarkerTex;                                 // 0x5F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULevelGateWidget>          PopupWidgetClass;                                  // 0x600(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULevelGateWidget>          PopupWidgetDeluxClass;                             // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  TitleOverride;                                     // 0x610(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  LoreOverride;                                      // 0x628(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  TaglineOverride;                                   // 0x640(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           ImageOverride;                                     // 0x658(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class ULevelGateWidget*                      PopupWidget;                                       // 0x6E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ALevelRestrictionVolume* GetDefaultObj();

	void TryUnlock(class ASophiaCharacter* ThePlayer);
	bool IsZoneUnlocked(class ASophiaCharacter* ThePlayer);
	void HideBlocker();
	class FText GetTitle();
	TArray<struct FLevelRestrictionItem> GetProgressFor(class ASophiaCharacter* ThePlayer);
	void GetOwnedPuzzleCompletionData(int32* TotalPuzzles, int32* SolvedPuzzles);
	class FText GetMissingZoneName(class ASophiaCharacter* ThePlayer);
	float GetCompletionPercentage();
	void BPC_SetSolved();
	void BP_OnOpen();
};

// 0x28 (0x68 - 0x40)
// Class IslandsofInsight.LightBlendable
class ULightBlendable : public USophiaPostProcessBlendable
{
public:
	TArray<TSoftObjectPtr<class AActor>>         LightActors;                                       // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FDirectionalLightModifier             Modifier;                                          // 0x50(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULightBlendable* GetDefaultObj();

};

// 0xA8 (0x590 - 0x4E8)
// Class IslandsofInsight.LightPillar
class ALightPillar : public APuzzleBase
{
public:
	class USceneComponent*                       Root;                                              // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Pillar;                                            // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BeamSource;                                        // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ALightPillarTablet>        TabletClass;                                       // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    BeamClass;                                         // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     PillarParentMaterial;                              // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ALightPillarTablet*>            Tablets;                                           // 0x518(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        Beams;                                             // 0x528(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        MaxBeamLength;                                     // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnRadius;                                       // 0x53C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RespawnTime;                                       // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinNumTablets;                                     // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumTablets;                                     // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ED2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              PillarMaterial;                                    // 0x550(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ED3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASophiaCharacter*>              Solvers;                                           // 0x570(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int8>                                 SolveOrder;                                        // 0x580(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ALightPillar* GetDefaultObj();

	void Respawn();
	void OnRep_SolveOrder();
};

// 0x70 (0x2A8 - 0x238)
// Class IslandsofInsight.LightPillarTablet
class ALightPillarTablet : public AClickableBase
{
public:
	class UStaticMeshComponent*                  Tablet;                                            // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<uint8, class UMaterialInterface*>       TabletMaterials;                                   // 0x240(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                            FoundAudioClip;                                    // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALightPillar*                          Parent;                                            // 0x298(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8                                         TabletIndex;                                       // 0x2A0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ED5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALightPillarTablet* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class IslandsofInsight.LocalSavedData
class ULocalSavedData : public USaveGame
{
public:
	TSet<class FString>                          RequestedSurveyUrls;                               // 0x28(0x50)(Edit, EditConst, NativeAccessSpecifierPublic)
	TSet<class FString>                          PendingSurveyBaseUrls;                             // 0x78(0x50)(Edit, EditConst, NativeAccessSpecifierPublic)
	bool                                         AgeConsentGiven;                                   // 0xC8(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ED6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULocalSavedData* GetDefaultObj();

};

// 0x20 (0x258 - 0x238)
// Class IslandsofInsight.LocationPing
class ALocationPing : public AClickableBase
{
public:
	class APuzzleBase*                           PointedPuzzle;                                     // 0x238(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELocationPingType                 PingType;                                          // 0x240(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EDA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaPlayerState*                    ParentPlayerState;                                 // 0x248(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOwner;                                          // 0x250(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EDB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALocationPing* GetDefaultObj();

};

// 0x40 (0x360 - 0x320)
// Class IslandsofInsight.LockedJumpingPad
class ALockedJumpingPad : public AJumpingPad
{
public:
	class UTextRenderComponent*                  TextRenderComponent;                               // 0x320(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    UnlockedMat;                                       // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WisdomCostIncrement;                               // 0x330(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinWisdomMultiplier;                               // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxWisdomMultiplier;                               // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinSpeedMultiplier;                                // 0x33C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxSpeedMultiplier;                                // 0x340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EE0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASophiaCharacter*>              UnlockedPlayers;                                   // 0x348(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	int32                                        WisdomCost;                                        // 0x358(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EE1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALockedJumpingPad* GetDefaultObj();

	void OnRep_WisdomUpdated();
	void OnRep_UnlockedPlayer(const TArray<class ASophiaCharacter*>& Old);
	void NM_LaunchPlayer(class ASophiaCharacter* SophiaChar);
};

// 0x2E0 (0x860 - 0x580)
// Class IslandsofInsight.Lockpick
class ALockpick : public AFocusablePuzzle
{
public:
	class UFMODEvent*                            DotIncrementEvent;                                 // 0x580(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DEPRECATED_OriginFile;                             // 0x588(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELockpickPuzzlePool               DEPRECATED_PuzzlePool;                             // 0x598(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EF2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FLockpickType, int32>            WisdomAward;                                       // 0x5A0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        NumClocks;                                         // 0x5F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumButtons;                                        // 0x5F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                Ticks;                                             // 0x5F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                Hands;                                             // 0x608(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EF6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                Buttons;                                           // 0x628(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USceneComponent*                       Root;                                              // 0x638(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BaseMeshComponent;                                 // 0x640(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  CenterMeshComponent;                               // 0x648(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BackgroundComponent;                               // 0x650(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      Camera;                                            // 0x658(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, class UStaticMesh*>              HandMeshes;                                        // 0x660(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UStaticMesh*                           SymbolMesh;                                        // 0x6B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TickMesh;                                          // 0x6B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TickMeshActive;                                    // 0x6C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           BeamMesh;                                          // 0x6C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AStaticMeshActor>          ClockClass;                                        // 0x6D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    TickMaterial_On;                                   // 0x6D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    TickMaterial_Off;                                  // 0x6E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    TickMaterial_Solved;                               // 0x6E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    BeamMaterial_On;                                   // 0x6F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    BeamMaterial_Off;                                  // 0x6F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    BeamMaterial_Solved;                               // 0x700(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    WireMaterial;                                      // 0x708(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClockHeight;                                       // 0x710(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClockSpacing;                                      // 0x714(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WireInnerRadius;                                   // 0x718(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WireOuterRadius;                                   // 0x71C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClockSymbolScale;                                  // 0x720(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    CenterMaterial;                                    // 0x728(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           CenterIntensityCurve;                              // 0x730(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ClockSymbolOffset;                                 // 0x738(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULockpickWidget*                       LockpickWidget;                                    // 0x748(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULockpickWidget>           LockpickWidgetClass;                               // 0x750(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                HandAnimPositions;                                 // 0x758(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                HandAnimSpeeds;                                    // 0x768(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        CenterIntensitySpeed;                              // 0x778(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Springiness;                                       // 0x77C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Friction;                                          // 0x780(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClockRotationAnim;                                 // 0x784(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                UpgradeBonusTargetTimes;                           // 0x788(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                UpgradeBonusMultipliers;                           // 0x798(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class AStaticMeshActor*>              ClockActors;                                       // 0x7A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          BeamComponents;                                    // 0x7B8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          HandComponents;                                    // 0x7C8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UProceduralMeshComponent*>      WireComponents;                                    // 0x7D8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          SymbolComponents;                                  // 0x7E8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          TickComponents;                                    // 0x7F8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EFF[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALockpick* GetDefaultObj();

	TArray<class UProceduralMeshComponent*> GetWireComponents();
	TArray<class UStaticMeshComponent*> GetSymbolComponents();
	int32 GetNumConnections();
	int32 GetNumClocks();
	int32 GetNumButtons();
	TArray<class UStaticMeshComponent*> GetHandComponents();
	void BP_UpdateSymbolMaterials();
	void BP_SymbolRefresh();
	void BP_SymbolJoined(int32 Symbol);
	void BP_Solved();
	void BP_OnFocus(bool Focus);
	void BP_DotIncrement(int32 TurnCount);
};

// 0x30 (0x290 - 0x260)
// Class IslandsofInsight.LockpickButtonImageA
class ULockpickButtonImageA : public UUserWidget
{
public:
	class UImage*                                SymbolImage;                                       // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                CountImage;                                        // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstance*>             SymbolTextures;                                    // 0x270(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UTexture2D*>                    CountTextures;                                     // 0x280(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULockpickButtonImageA* GetDefaultObj();

};

// 0x18 (0x278 - 0x260)
// Class IslandsofInsight.LockpickButtonImageB
class ULockpickButtonImageB : public UUserWidget
{
public:
	class UHorizontalBox*                        Container;                                         // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstance*>             SymbolTextures;                                    // 0x268(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULockpickButtonImageB* GetDefaultObj();

};

// 0x18 (0x278 - 0x260)
// Class IslandsofInsight.LockpickButtonWidget
class ULockpickButtonWidget : public UUserWidget
{
public:
	class ALockpick*                             Lockpick;                                          // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F06[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UButton*                               Button;                                            // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULockpickButtonWidget* GetDefaultObj();

	void OnClick();
};

// 0x10 (0x288 - 0x278)
// Class IslandsofInsight.LockpickButtonWidgetA
class ULockpickButtonWidgetA : public ULockpickButtonWidget
{
public:
	class UHorizontalBox*                        ImageContainer;                                    // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULockpickButtonImageA>     LockpickButtonImageClass;                          // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULockpickButtonWidgetA* GetDefaultObj();

};

// 0x10 (0x288 - 0x278)
// Class IslandsofInsight.LockpickButtonWidgetB
class ULockpickButtonWidgetB : public ULockpickButtonWidget
{
public:
	class UVerticalBox*                          ImageContainer;                                    // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULockpickButtonImageB>     LockpickButtonImageClass;                          // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULockpickButtonWidgetB* GetDefaultObj();

};

// 0x20 (0x880 - 0x860)
// Class IslandsofInsight.LockpickPlaytest
class ALockpickPlaytest : public ALockpick
{
public:
	class UTextRenderComponent*                  PuzzleNameTextRender;                              // 0x860(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PuzzleDirectory;                                   // 0x868(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F14[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALockpickPlaytest* GetDefaultObj();

};

// 0x20 (0x280 - 0x260)
// Class IslandsofInsight.LockpickWidget
class ULockpickWidget : public UUserWidget
{
public:
	float                                        Tween;                                             // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F17[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHorizontalBox*                        LockpickButtonContainer;                           // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULockpickButtonWidget>     LockpickButtonWidgetClass;                         // 0x270(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALockpick*                             Attached_puzzle;                                   // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULockpickWidget* GetDefaultObj();

};

// 0x58 (0x278 - 0x220)
// Class IslandsofInsight.LorenzSystemBall
class ALorenzSystemBall : public AActor
{
public:
	class USceneComponent*                       Scene;                                             // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  Mesh;                                              // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWandering;                                      // 0x230(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F1A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Radius;                                            // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RandomMoveLength;                                  // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDistFromOrigin;                                 // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           MoveCurve;                                         // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F1C[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALorenzSystemBall* GetDefaultObj();

};

// 0x20 (0x258 - 0x238)
// Class IslandsofInsight.LorePickup
class ALorePickup : public AClickableBase
{
public:
	class FString                                EncyclopediaEntryID;                               // 0x238(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMainMapZoneName                  ZONE;                                              // 0x248(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F24[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsSecretClue;                                     // 0x254(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F25[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALorePickup* GetDefaultObj();

	class UEncyclopediaEntry* OnPickedUp(class ASophiaCharacter* Player);
	bool HasBeenPickedUp();
	void BP_OnClose();
	void BP_OnAdvance();
};

// 0x8 (0x320 - 0x318)
// Class IslandsofInsight.MainMenu
class UMainMenu : public UInputWidget
{
public:
	uint8                                        Pad_1F34[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMainMenu* GetDefaultObj();

	void SetUserName(const class FString& InName);
	void Setup();
	void SetNicknameFailed(const struct FOnlineServiceError& InError, const class FString& InName);
	void ReceivedPlayerKrakenName(const class FString& InName);
	void GetPlayerKrakenName(class APlayerController* Controller);
	bool GetParentalConsentRequirement();
	int32 GetParentalConsentAge();
	void GetKrakenNameFailed(const struct FOnlineServiceError& InError);
	void BPI_SetNickNamedFailed(const class FString& String);
	void BPI_ReceivedPlayerKrakenName(const class FString& String);
	void BPI_OnUnbanReceived();
	void BPI_OnBanReceived(struct FKrakenBanInfo& BanInfo);
	void BPI_FailedToGetNickname();
	void BP_OpenSettings();
	void BP_OpenMail();
	void BP_OpenFriends();
	void BP_CloseSubmenus();
};

// 0x30 (0x250 - 0x220)
// Class IslandsofInsight.MapCamera
class AMapCamera : public AActor
{
public:
	class USceneCaptureComponent2D*              CaptureComponent;                                  // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                ColorRenderTarget;                                 // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                DepthRenderTarget;                                 // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CaptureOnBeginPlay;                                // 0x238(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ServerCaptured;                                    // 0x239(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F38[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMapCamera* GetDefaultObj();

	void OnRep_ServerCaptured();
	void AddShowOnly(class AActor* IgnoreActor);
	void AddIgnoredComponents(class UPrimitiveComponent* IgnoreComp);
	void AddIgnoredActor(class AActor* IgnoreActor);
};

// 0x60 (0x2F8 - 0x298)
// Class IslandsofInsight.MapColCoordWidget
class UMapColCoordWidget : public USophiaUserWidget
{
public:
	uint8                                        Pad_1F3A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TextPadding;                                       // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                        Font;                                              // 0x2A0(0x58)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMapColCoordWidget* GetDefaultObj();

};

// 0x28 (0x280 - 0x258)
// Class IslandsofInsight.MapMarker
class AMapMarker : public ALocationPing
{
public:
	class UStaticMeshComponent*                  beaconMesh;                                        // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  Mesh;                                              // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            SelfAddFModEvent;                                  // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            OtherAddFModEvent;                                 // 0x270(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            SelfRemoveFModEvent;                               // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AMapMarker* GetDefaultObj();

};

// 0x18 (0x330 - 0x318)
// Class IslandsofInsight.MapMenu
class UMapMenu : public UInputWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULargeMapViewWidget*                   LargeMapViewWidget;                                // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       MapScreen_WidgetSwitcher;                          // 0x328(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMapMenu* GetDefaultObj();

	void SwapToWardrobeOrClose();
	void SwapToWardrobe();
	void SwapToUpgradesOrClose();
	void SwapToUpgrades();
	void SwapToMasteriesOrClose();
	void SwapToMasteries();
	void SwapToMapOrClose();
	void SwapToMap();
	void SwapToEncyclopediaOrClose();
	void SwapToEncyclopedia();
	void RefreshSandboxModal();
	void OnMapMenuClose();
	void CheatAddSandboxSolves();
	void BP_Close();
};

// 0x60 (0x2F8 - 0x298)
// Class IslandsofInsight.MapRowCoordWidget
class UMapRowCoordWidget : public USophiaUserWidget
{
public:
	uint8                                        Pad_1F3F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TextPadding;                                       // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                        Font;                                              // 0x2A0(0x58)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMapRowCoordWidget* GetDefaultObj();

};

// 0x690 (0x928 - 0x298)
// Class IslandsofInsight.MapWidget
class UMapWidget : public USophiaUserWidget
{
public:
	class UMaterialInterface*                    OverlayMaterial;                                   // 0x298(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ZoomCenter;                                        // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomFactor;                                        // 0x2A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F64[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             PanningBeginMouse;                                 // 0x2B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxZoom;                                           // 0x2B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinZoom;                                           // 0x2BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLargeMap;                                        // 0x2C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DrawBackground;                                    // 0x2C1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DrawMapMarkers;                                    // 0x2C2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DrawPlayers;                                       // 0x2C3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         FollowChar;                                        // 0x2C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F65[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerMarkerWidth_Self;                            // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerMarkerWidth_Party;                           // 0x2CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerMarkerWidth_Other;                           // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxPlayerNamesToDraw;                              // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             PlayerNameOffset;                                  // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DrawGridLine;                                      // 0x2E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F66[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GridLineRowCount;                                  // 0x2E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GridLineThickness;                                 // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DrawConquestVolumeName;                            // 0x2EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F67[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             ConquestVolumeNameOffset;                          // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ConquestProgressBarOffset;                         // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ConquestProgressBarSize;                           // 0x300(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ScoreOffset;                                       // 0x308(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MarkerBackgroundWidth;                             // 0x310(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultMarkerWidth;                                // 0x314(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PinWidth;                                          // 0x318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MarkerHoverScale;                                  // 0x31C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MarkerNameOffset;                                  // 0x320(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           MarkerResizingCurve;                               // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MarkerStatusOffset;                                // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MarkerStatusSize;                                  // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastTravelPromptOffset;                            // 0x340(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastTravelChargeTime;                              // 0x344(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LockedMarkerBrightness;                            // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MarkerLabelBackgroundHeight;                       // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MarkerLabelBackgroundPadding;                      // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             DungeonBlueOrbSize;                                // 0x354(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             DungeonBlueOrbOffset;                              // 0x35C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             DungeonBlueOrbSpacing;                             // 0x364(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             DungeonProgressOffset;                             // 0x36C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             CompletionIconSize;                                // 0x374(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             CompletionIconOffset;                              // 0x37C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMainMapZoneName                  ZONE;                                              // 0x384(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F68[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ZoneTexture;                                       // 0x388(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ZoneTextureCameraPosition;                         // 0x390(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoneTextureCameraWidth;                            // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialZoomLevel;                                  // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnlockZoomLevel;                                   // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoomHalfLife;                                      // 0x3A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowPuzzleBookData;                                // 0x3AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F69[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PuzzleType;                                        // 0x3B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SelectedPuzzleKrakenID;                            // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F6A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           ZoneUnlockAnimCurve;                               // 0x3C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RingFillInnerRadius;                               // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RingFillSize;                                      // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MaxVisibleWorldDistanceFromCenter;                 // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F6C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    BackgroundMaterial;                                // 0x3E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              BackgroundMatDynamic;                              // 0x3F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MapRenderMaterial;                                 // 0x3F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MapRenderMaterialDynamic;                          // 0x400(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MinervaGateRingMaterial;                           // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinervaGateRingMatDynamic;                         // 0x410(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    ConquestProgressBarMaterial;                       // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      ConquestProgressBarMatDynamic;                     // 0x420(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    RingFillMaterial;                                  // 0x430(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              RingFillMaterialDynamic;                           // 0x438(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            MapBackground;                                     // 0x440(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            PlayerMarkerTex;                                   // 0x448(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            PartyMemberMarkerTex;                              // 0x450(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            OtherPlayerMarkerTex;                              // 0x458(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            MarkerBackgroundTex;                               // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            MarkerLabelBackgroundTex;                          // 0x468(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            GridLineTex;                                       // 0x470(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            SolvedPuzzleTex;                                   // 0x478(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            ConquestOverlayTex;                                // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            DungeonBlueOrbTex_Filled;                          // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            DungeonBlueOrbTex_Blank;                           // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            MainQuestTex;                                      // 0x498(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            SideQuestTex;                                      // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            CompletionMainObjectiveTex;                        // 0x4A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            Completion100PercentTex;                           // 0x4B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            PinTex;                                            // 0x4B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EMarkerStatus, class UTexture2D*> MarkerStatusTex;                                   // 0x4C0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                        MarkerNameFont;                                    // 0x510(0x58)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                        DungeonProgressFont;                               // 0x568(0x58)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                        PlayerNameFont;                                    // 0x5C0(0x58)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                        ConquestVolumeNameFont;                            // 0x618(0x58)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                        ConquestScoreFont;                                 // 0x670(0x58)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RedScoreColor;                                     // 0x6C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BlueScoreColor;                                    // 0x6D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoneUnlockAnimDelay;                               // 0x6E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoneUnlockMarkerFadeInSpeed;                       // 0x6EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowFastTravelPrompt;                              // 0x6F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F6F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             FastTravelPromptPosition;                          // 0x6F4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowMapTutorialOnClose;                            // 0x6FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F70[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLocationMarkerData>           CurrentMarkers;                                    // 0x700(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FPlayerLocationMarkerData>     CurrentPlayerMarkers;                              // 0x710(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FVector2D                             MapWorldTopLeftPosition;                           // 0x720(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             MapWorldSize;                                      // 0x728(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             HalfViewUV;                                        // 0x730(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F71[0x1A8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       ZoneUnlockMarkerAnim;                              // 0x8E0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTexture2D*                            ZoneUnlockAnimTex;                                 // 0x8F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F73[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMapWidget* GetDefaultObj();

	struct FColor ZoneSample(const struct FVector2D& WorldCoord);
	void SwitchToPreviousZone(bool SkipIntroZone);
	void SwitchToNextZone(bool SkipIntroZone);
	struct FVector2D GetZoomCenterReal();
	int32 GetZoneIndex(const struct FVector2D& WorldCoord);
	int32 GetSelectedZoneIndex();
	struct FVector2D GetMouseWorldPos();
	struct FLocationMarkerData GetLastHoveredMarker();
	struct FLocationMarkerData GetLastClickedMarker();
	int32 GetConquestZoneIndex(const struct FVector2D& WorldCoord);
	void EnableInteraction();
	void DisableInteraction();
	void CenterOnPlayer(bool Instant);
};

// 0x48 (0xF8 - 0xB0)
// Class IslandsofInsight.MarkerComponent
class UMarkerComponent : public UActorComponent
{
public:
	TArray<class APuzzleBase*>                   AdditionalPuzzlesToMark;                           // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMarkerTextures*                       MarkerTextures;                                    // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowPoleMarkersWithoutPoleOut;                    // 0xC8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPredatorVision;                                   // 0xC9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F74[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PredatorVisionDecayTime;                           // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PredatorVisionRange;                               // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F75[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class APuzzleBase>>       PredatorActivePuzzleTypes;                         // 0xD8(0x10)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<float>                                PredatorActivePuzzleTypeTimes;                     // 0xE8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMarkerComponent* GetDefaultObj();

	void OnAnyPuzzleSolve(class APuzzleBase* Pb);
};

// 0xC8 (0x178 - 0xB0)
// Class IslandsofInsight.MarkerEmitter
class UMarkerEmitter : public UActorComponent
{
public:
	struct FLocationMarkerData                   Marker;                                            // 0xB0(0xC8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMarkerEmitter* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.MarkerFunction
class IMarkerFunction : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IMarkerFunction* GetDefaultObj();

	bool MarkerFunction(class UMapWidget* MapWidget);
};

// 0x148 (0x178 - 0x30)
// Class IslandsofInsight.MarkerTextures
class UMarkerTextures : public UDataAsset
{
public:
	class UTexture2D*                            UserMarkerTexWorld;                                // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            UserMarkerTexMap;                                  // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            WaveMarkerTexWorld;                                // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            WaveMarkerTexMap;                                  // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            NotThatMarkerTexWorld;                             // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            NotThatMarkerTexMap;                               // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            HereMarkerTexWorld;                                // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            HereMarkerTexMap;                                  // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            HelpMarkerTexWorld;                                // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            HelpMarkerTexMap;                                  // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ThxMarkerTexWorld;                                 // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ThxMarkerTexMap;                                   // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            OtherMarkerTexWorld;                               // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            OtherMarkerTexMap;                                 // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            SideQuestMarkerTexWorld;                           // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            SideQuestMarkerTexMap;                             // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                    QuestMarkerTexWorld;                               // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                    QuestMarkerTexMap;                                 // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                            QuestMarkerCompletionTexWorld;                     // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            QuestMarkerCompletionTexMap;                       // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            UnconnectedMeshesTexWorld;                         // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            UnconnectedMeshesTexMap;                           // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            PowerCoreTexWorld;                                 // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            PowerCoreTexMap;                                   // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ActivePuzzleRegistrationPointTexWorld;             // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ActivePuzzleRegistrationPointTexMap;               // 0x108(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MPLaserNotConnectedWorld;                          // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MPLaserNotConnectedMap;                            // 0x118(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MPLaserConnectedByOtherWorld;                      // 0x120(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MPLaserConnectedByOtherMap;                        // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MPLaserConnectedByLocalWorld;                      // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MPLaserConnectedByLocalMap;                        // 0x138(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MPLaserConnectedByLocalAndOtherWorld;              // 0x140(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MPLaserConnectedByLocalAndOtherMap;                // 0x148(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MatchMissionDropIcon;                              // 0x150(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MatchMissionGoalIcon;                              // 0x158(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            PingTexMap;                                        // 0x160(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            DefaultTex;                                        // 0x168(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            DefaultTexMap;                                     // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMarkerTextures* GetDefaultObj();

};

// 0x10 (0x368 - 0x358)
// Class IslandsofInsight.MasteryItem
class UMasteryItem : public URadioButton
{
public:
	class UPlayerMastery*                        MyStatistic;                                       // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F84[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMasteryItem* GetDefaultObj();

	void UpdateLastSeenMasteryProgress();
	bool ShouldHideMastery();
	bool IsMasteryEquipped();
	bool IsDoneAnimating();
	int32 GetRankNumber();
	float GetMasteryValue();
	class FText GetMasteryRankName();
	float GetMasteryProgress();
	float GetAnimMasteryProgress(float DeltaSeconds);
	void BPI_PlayLevelUpAnimation(bool PlayBorderAnimation);
	bool AreMasteryRewardsUnclaimed();
};

// 0x28 (0x410 - 0x3E8)
// Class IslandsofInsight.MasteryProgressNotification
class UMasteryProgressNotification : public UGeneralNotification
{
public:
	class UPlayerMastery*                        CurRepresentedMastery;                             // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurValue;                                          // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartValue;                                        // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndValue;                                          // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurCoins;                                          // 0x3FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Coins;                                             // 0x400(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FinalCoinCount;                                    // 0x404(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F8C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMasteryProgressNotification* GetDefaultObj();

	void StartTimer();
	void OnMasteryNotificationEnd();
	float GetOverallCurrentGain();
	void BPI_UpdateMasteryValue(float NewEndValue);
	void BPI_PlayCoinAnimation();
	void BPC_ResetIncrement();
	void BPC_ResetAmount();
	void BPC_GetCoinsInfo(int32* AdditionalCoins, int32* TotalCoins);
	void BP_UpdateWidget();
	void BP_UpdateAnimation();
};

// 0x10 (0x380 - 0x370)
// Class IslandsofInsight.MasteryUnlockNotificationWidget
class UMasteryUnlockNotificationWidget : public UNotificationWidget
{
public:
	class UPlayerMastery*                        RepresentedPlayerStatistic;                        // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            Icon;                                              // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMasteryUnlockNotificationWidget* GetDefaultObj();

};

// 0x20 (0x240 - 0x220)
// Class IslandsofInsight.Match3Button
class AMatch3Button : public AActor
{
public:
	uint8                                        Pad_1F8D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Mesh;                                              // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  TextRender;                                        // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AMatch3Button* GetDefaultObj();

};

// 0x218 (0x798 - 0x580)
// Class IslandsofInsight.Match3Puzzle
class AMatch3Puzzle : public AFocusablePuzzle
{
public:
	class UMatch3UI*                             Match3UIWidget;                                    // 0x580(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               TutorialOverlayClass;                              // 0x588(0x8)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           TutorialOverlay;                                   // 0x590(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerfectionBonusMultiplier;                         // 0x598(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredSkillLevelForPerfectionBonus;              // 0x59C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x5A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         CullingBounds;                                     // 0x5A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  GridPreview;                                       // 0x5B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ControllerCursor;                                  // 0x5B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      WorldViewCamera;                                   // 0x5C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       GridOrigin;                                        // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         TileISM;                                           // 0x5D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         backgroundTileISM;                                 // 0x5D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            StartRoundAudioClip;                               // 0x5E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            EndRoundAudioClip;                                 // 0x5E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            SwapSound;                                         // 0x5F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            SwapFailSound;                                     // 0x5F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            FallSound;                                         // 0x600(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            ClearSound;                                        // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            AppearSound;                                       // 0x610(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UMatch3UI>                 Match3UIClass;                                     // 0x618(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GridHeight;                                        // 0x620(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GridWidth;                                         // 0x624(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TileLayout;                                        // 0x628(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowBorder;                                        // 0x638(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F90[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AspectRatio;                                       // 0x63C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseGravity;                                        // 0x640(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseMatchRows;                                      // 0x641(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AlwaysFlood;                                       // 0x642(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AllowNonClearing;                                  // 0x643(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MoveLimit;                                         // 0x644(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EmptyActsAsPlatform;                               // 0x648(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SpeedDungeon;                                      // 0x649(0x1)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F92[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedDungeonSetSize;                               // 0x64C(0x4)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedDungeonTimerGainPerLevel;                     // 0x650(0x4)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedDungeonRestTime;                              // 0x654(0x4)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedDungeonStartTime;                             // 0x658(0x4)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SpeedIncrementDecayInterval;                       // 0x65C(0x4)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeIncrementAnimationSpeedUp;                     // 0x660(0x4)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GREYED_OUT_COLOUR_INDEX;                           // 0x664(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F93[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallAnimationDuration;                             // 0x66C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClearAnimationDuration;                            // 0x670(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwapAnimationDuration;                             // 0x674(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwapFailAnimationDuration;                         // 0x678(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AppearAnimationDuration;                           // 0x67C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviewAnimationDuration;                          // 0x680(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        bufferLength;                                      // 0x684(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, struct FMatch3TileData>          TileToData;                                        // 0x688(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         DEPRECATED_bRandomSelect;                          // 0x6D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F94[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DEPRECATED_OriginFile;                             // 0x6E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DEPRECATED_Subdirectory;                           // 0x6F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AMatch3Button*                         MoveCounter;                                       // 0x700(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SelectedTileIndex;                                 // 0x708(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FIntPoint                             HighlightPosition;                                 // 0x70C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      LastInteractingLocalPlayer;                        // 0x718(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F96[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMatch3PuzzleSpec>             SpeedDungeonSet;                                   // 0x740(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F97[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMatch3Puzzle* GetDefaultObj();

	bool IsSpeedDungeon();
	void BPI_SetUpBorder();
	void BPI_Selected(int32 IsmIndex, bool Selected);
	void BPI_PlaySpeedDungeonMusic();
	void BPI_PauseSpeedDungeonMusic();
	void BPI_ChangeTilesToGrey();
	void BPI_AfterPuzzleInit();
	void BP_OnExitPuzzle();
	void BP_OnEnterPuzzle();
};

// 0x28 (0x2C0 - 0x298)
// Class IslandsofInsight.Match3UI
class UMatch3UI : public USophiaUserWidget
{
public:
	class URichTextBlock*                        TimeLeftText;                                      // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        LastAttemptText;                                   // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        BestAttemptText;                                   // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        StatusText;                                        // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AMatch3Puzzle*                         Attached_puzzle;                                   // 0x2B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMatch3UI* GetDefaultObj();

	enum class ESlateVisibility GetMovesTextVisibility();
	class FText GetMovesTextMessage();
	void BPI_UpdateMovesText(class FText& Message);
	void BPI_PlayResultsAnimation(bool Reverse);
	void BPI_ForceResultsOffscreen();
};

// 0x88 (0x570 - 0x4E8)
// Class IslandsofInsight.Matchbox
class AMatchbox : public APuzzleBase
{
public:
	uint8                                        Pad_1F98[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            DragTexture;                                       // 0x4F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPoweredMesh*                          Mesh1;                                             // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoweredMesh*                          Mesh2;                                             // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MatPrimitiveTextureType;                           // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MatPrimitiveTextureIndex;                          // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MatPrimitiveHighlight;                             // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MatPrimitiveHighlightGoodBad;                      // 0x514(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMatchboxVisualData*                   VisualDataAsset;                                   // 0x518(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveAnimationInitialLerpTime;                     // 0x520(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveAnimationStayTime;                            // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveAnimationFadeOutTime;                         // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F9A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            WrongMatchBoxSound;                                // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            MatchBoxInteractEvent;                             // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        VisualDataIndex;                                   // 0x540(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F9D[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMatchbox* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class IslandsofInsight.MatchboxGenerationSettings
class UMatchboxGenerationSettings : public UObject
{
public:
	class FString                                Description;                                       // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InconsequentialAreaConstraint;                     // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlayerAreaConstraint>         PlayerAreaConstraintForAll;                        // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPlayerAreaConstraint>         PlayerAreaConstraintForAtLeastOne;                 // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MinPlayerDistanceFromBoxes;                        // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceBetweenBoxes;                           // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceBetweenBoxes;                           // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMatchboxGenerationSettings* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class IslandsofInsight.CookedMatchboxSpawningContextContainer
class UCookedMatchboxSpawningContextContainer : public UDataAsset
{
public:
	struct FCookedMatchboxSpawningContext        MatchboxCookData;                                  // 0x30(0x48)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCookedMatchboxSpawningContextContainer* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class IslandsofInsight.AutoDeletionRespawningPuzzleInfo
class UAutoDeletionRespawningPuzzleInfo : public UObject
{
public:
	class APuzzleBase*                           Puzzle;                                            // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FA0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAutoDeletionRespawningPuzzleInfo* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class IslandsofInsight.MatchboxData
class UMatchboxData : public UAutoDeletionRespawningPuzzleInfo
{
public:
	TArray<struct FTransform>                    MatchboxTransforms;                                // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TSubclassOf<class AMatchbox>                 MatchboxClass;                                     // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMatchboxData* GetDefaultObj();

};

// 0x8 (0x200 - 0x1F8)
// Class IslandsofInsight.PuzzleSpawningComponentBase
class UPuzzleSpawningComponentBase : public USceneComponent
{
public:
	uint8                                        Pad_1FA1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPuzzleSpawningComponentBase* GetDefaultObj();

};

// 0x38 (0x238 - 0x200)
// Class IslandsofInsight.PuzzleSpawningComponentWithAutoDeletion
class UPuzzleSpawningComponentWithAutoDeletion : public UPuzzleSpawningComponentBase
{
public:
	bool                                         DeletePuzzlesOnSolve;                              // 0x200(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeletionTime;                                      // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeletionTimeVariance;                              // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PuzzleReplacementCooldownTime;                     // 0x20C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PuzzleReplacementCooldownTimeVariance;             // 0x210(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RespawnPuzzleSpecificCooldownTime;                 // 0x214(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RespawnPuzzleSpecificCooldownTimeVariance;         // 0x218(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAutoDeletionRespawningPuzzleInfo*> SpawnedPuzzles;                                    // 0x220(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPuzzleSpawningComponentWithAutoDeletion* GetDefaultObj();

};

// 0xA8 (0x2E0 - 0x238)
// Class IslandsofInsight.MatchboxEditorSpawningComponent
class UMatchboxEditorSpawningComponent : public UPuzzleSpawningComponentWithAutoDeletion
{
public:
	TSubclassOf<class AMatchbox>                 MatchboxClass;                                     // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchBoxGeneration                   EditorVisualizedGeneration;                        // 0x240(0x20)(NativeAccessSpecifierPublic)
	int32                                        NumberOfMatchboxesToGenerateX;                     // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         VisualizeNavMeshPoints;                            // 0x264(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MatchboxCombinationsToTry;                         // 0x268(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceMoveAlongNormal;                           // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMatchboxData*>                 SavedMatchboxes;                                   // 0x270(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bVisibleToCameraLocAndTowardsCenterOfView;         // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NavmeshSameAreaTolerance;                          // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UMatchboxGenerationSettings>> GenerationSettingsClasses;                         // 0x288(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                        NavmeshPointSpacing;                               // 0x298(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SphereTestSegments;                                // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlayerLocModulo;                                   // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 CookingOriginActor;                                // 0x2A8(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCookedMatchboxSpawningContextContainer* CookLoc;                                           // 0x2D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FA9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMatchboxEditorSpawningComponent* GetDefaultObj();

	void Cook_SuperExpensive();
};

// 0x38 (0x520 - 0x4E8)
// Class IslandsofInsight.MatchboxExternal
class AMatchboxExternal : public APuzzleBase
{
public:
	class UStaticMeshComponent*                  boxMesh;                                           // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AActor>>         Matches;                                           // 0x4F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFMODEvent*                            InteractSound;                                     // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            DragTexture;                                       // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMatchboxExternal* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class IslandsofInsight.MatchboxRadarComponent
class UMatchboxRadarComponent : public UActorComponent
{
public:
	TArray<class APuzzleBase*>                   Highlighted;                                       // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FAB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMatchboxRadarComponent* GetDefaultObj();

};

// 0x20 (0x308 - 0x2E8)
// Class IslandsofInsight.MatchboxSymbolWidget
class UMatchboxSymbolWidget : public UBaseWidget
{
public:
	class UImage*                                MatchboxImage;                                     // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                             DragMaterial;                                      // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DragMaterialTextureParameter;                      // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              DynamicMat;                                        // 0x300(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMatchboxSymbolWidget* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class IslandsofInsight.MatchboxVisualData
class UMatchboxVisualData : public UDataAsset
{
public:
	float                                        UniqueTextureDistance;                             // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMatchboxMaterialAndTextureCombination> Data;                                              // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  MaterialTextureParameter;                          // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAD[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMatchboxVisualData* GetDefaultObj();

};

// 0x38 (0x520 - 0x4E8)
// Class IslandsofInsight.MegaRosary
class AMegaRosary : public APuzzleBase
{
public:
	int32                                        MatPrimitiveHighlightIndex;                        // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatPrimitiveSolveHighlightIndex;                   // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AStaticMeshActor*>              RosaryObjects;                                     // 0x4F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UCameraComponent*                      Camera;                                            // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceThreshold;                                 // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngleThreshold;                                    // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeStart;                                         // 0x510(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeEnd;                                           // 0x514(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FB0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMegaRosary* GetDefaultObj();

	bool OnClickFire(struct FClickEventContext& Context);
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.MeshMergeFunctionLibrary
class UMeshMergeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UMeshMergeFunctionLibrary* GetDefaultObj();

	class USkeletalMesh* MergeMeshes(struct FSkeletalMeshMergeParams& Params);
};

// 0x38 (0x60 - 0x28)
// Class IslandsofInsight.GameMessage
class UGameMessage : public UObject
{
public:
	uint8                                        Pad_1FB1[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameMessage* GetDefaultObj();

};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.MessageQueueWidget
class UMessageQueueWidget : public USophiaUserWidget
{
public:
	class UVerticalBox_Sophia*                   VerticalBox;                                       // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UMessageWidget>            MessageWidgetClass;                                // 0x2A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMessageQueueWidget* GetDefaultObj();

	void AddMessage(class UGameMessage* MessageObject, float Time, int32 MessagePriority);
};

// 0x18 (0x2B0 - 0x298)
// Class IslandsofInsight.MessageWidget
class UMessageWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            TextBlock;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameMessage*                          RepresentedGameMessage;                            // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMessageWidget* GetDefaultObj();

};

// 0x130 (0x1E0 - 0xB0)
// Class IslandsofInsight.MicrophoneSpeakComponent
class UMicrophoneSpeakComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnDataMicrophoneReceived;                          // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBF[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       VoiceCaptureAudioComponent;                        // 0xE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWaveProcedural*                  VoiceCaptureSoundWaveProcedural;                   // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC0[0xE8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMicrophoneSpeakComponent* GetDefaultObj();

	bool StartSpeaking(bool _shouldHearMyOwnVoice, bool IsGlobal, int32 RadioChannel, bool UseRange, float MaxRange);
	void SetVoiceVolume(float Volume);
	void SetAttenuationAssetPath(bool EnableAttenuation, const class FString& _pathToAttenuationAsset);
	void RPCServerBroadcastVoiceData(TArray<uint8>& Data, int32 SampleRate, int32 NumChannels, int32 PCMSize);
	void RPCReceiveVoiceFromServer(class UMicrophoneSpeakComponent* CompToOutputVoice, TArray<uint8>& DataEncoded, int32 SampleRate, int32 NumChannels, int32 PCMSize);
	void RPCClientTransmitVoiceData(TArray<uint8>& Data, int32 SampleRate, int32 NumChannels, int32 PCMSize, bool _isGlobal, int32 _radioChannel, bool _useRange, float _maxRange);
	void PayloadReceivedVoiceData(TArray<uint8>& DataEncoded, int32 SampleRate, int32 NumChannels, int32 PCMSize);
	void MuteAudio(bool _isMuted);
	bool IsPlayingAudioVoice();
	bool InitAudioResources(int32 VoiceSampleRate, int32 _voiceNumChannels);
	void EndSpeaking();
	void DataMicrophoneReceived__DelegateSignature(TArray<uint8>& Data);
};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.Minimap
class UMinimap : public USophiaUserWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMapWidget*                            MapWidget;                                         // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMinimap* GetDefaultObj();

};

// 0x10 (0x248 - 0x238)
// Class IslandsofInsight.MirrorMazeTeleportPlatform
class AMirrorMazeTeleportPlatform : public AClickableBase
{
public:
	float                                        boundedZHeight;                                    // 0x238(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AMirrorMazeTeleportPlatform* GetDefaultObj();

};

// 0x30 (0x2C8 - 0x298)
// Class IslandsofInsight.MirrorMazeWidget
class UMirrorMazeWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            YourTimeText;                                      // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            GoalText;                                          // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            AdeptGoalText;                                     // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ExpertGoalText;                                    // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            MasterGoalText;                                    // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMirrorMazeWidget* GetDefaultObj();

	enum class ESlateVisibility IsWidgetVisible();
	void BP_VisualizeMilestones(bool AdeptReached, bool ExpertReached, bool MasterReached);
};

// 0x10 (0x48 - 0x38)
// Class IslandsofInsight.MirrorSymmetrySymbol
class UMirrorSymmetrySymbol : public UClue
{
public:
	uint8                                        Pad_1FC4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMirrorSymmetrySymbol* GetDefaultObj();

};

// 0x80 (0x568 - 0x4E8)
// Class IslandsofInsight.MonolithMatch
class AMonolithMatch : public APuzzleBase
{
public:
	class UFMODEvent*                            InteractSound;                                     // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            DragTexture;                                       // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABlueOrbFragmentPuzzle*>        Monoliths;                                         // 0x4F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC5[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMonolithMatch* GetDefaultObj();

};

// 0x28 (0x550 - 0x528)
// Class IslandsofInsight.Monument
class AMonument : public APuzzleContainerBase
{
public:
	bool                                         ShouldReplace;                                     // 0x528(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPuzzleBoundsComponent*                SpawnVolume;                                       // 0x530(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class APuzzleBase>>       MonumentClass;                                     // 0x538(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x548(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AMonument* GetDefaultObj();

};

// 0xB8 (0xF8 - 0x40)
// Class IslandsofInsight.PuzzleContainerData
class UPuzzleContainerData : public UAutoDeletionRespawningPuzzleInfo
{
public:
	int32                                        DesiredKrakenIDOverride;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USerializedPuzzle>      DesiredDirectPuzzleRef;                            // 0x48(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DesiredPuzzlePool;                                 // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NameOverride;                                      // 0x80(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LocalID;                                           // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESpawnBehaviour                   SpawnBehaviour;                                    // 0xA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FCA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                ContainerPuzzleClass;                              // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTransform>                    PuzzleBoundsTransforms;                            // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FBox>                          PuzzleBoundsBoxes;                                 // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPuzzleBoundsInfo>             PuzzleBoundsInfos;                                 // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	class FString                                SerializedString;                                  // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMainMapZoneName                  OwnerZone;                                         // 0xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FCB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPuzzleContainerData* GetDefaultObj();

};

// 0xC8 (0x1C0 - 0xF8)
// Class IslandsofInsight.MonumentPuzzleContainer
class UMonumentPuzzleContainer : public UPuzzleContainerData
{
public:
	TMap<class FString, TSubclassOf<class APuzzleBase>> TypeToClass;                                       // 0xF8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class FString>                        PossiblePuzzleTypes;                               // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	bool                                         bAwakenIfAlwaysSpawn;                              // 0x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FCE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            MonumentTransform;                                 // 0x160(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               PuzzleBoxLocation;                                 // 0x190(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PuzzleBoxExtent;                                   // 0x19C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              PuzzleBoxRotation;                                 // 0x1A8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsFloorSlab;                                      // 0x1B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD0[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMonumentPuzzleContainer* GetDefaultObj();

};

// 0x58 (0x290 - 0x238)
// Class IslandsofInsight.MouseControlledRaymarchFractal
class AMouseControlledRaymarchFractal : public AClickableBase
{
public:
	class UASlider2D*                            Controls;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Fractal;                                           // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ERaymarchFractalType              FractalType;                                       // 0x248(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ARaymarchFractalMatch*                 AssociatedPuzzle;                                  // 0x250(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD2[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bControllable;                                     // 0x280(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FD3[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMouseControlledRaymarchFractal* GetDefaultObj();

};

// 0x28 (0x2C0 - 0x298)
// Class IslandsofInsight.MovementSpeedWidget
class UMovementSpeedWidget : public USophiaUserWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BuildIDText;                                       // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            HorSpeedText;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            VerSpeedText;                                      // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            PlayerCoordinatesText;                             // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMovementSpeedWidget* GetDefaultObj();

};

// 0x38 (0x520 - 0x4E8)
// Class IslandsofInsight.MultiplayerPuzzleBase
class AMultiplayerPuzzleBase : public APuzzleBase
{
public:
	uint8                                        Pad_1FD5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPuzzleCharInfo>               WorkerInfos;                                       // 0x500(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FPuzzleCharInfo>               PrevWorkerInfos;                                   // 0x510(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AMultiplayerPuzzleBase* GetDefaultObj();

	void OnRep_workerInfos();
	TArray<class ASophiaCharacter*> GetWorkerPlayers();
};

// 0xC8 (0x5E8 - 0x520)
// Class IslandsofInsight.MultiplayerLaserPuzzleBase
class AMultiplayerLaserPuzzleBase : public AMultiplayerPuzzleBase
{
public:
	uint8                                        Pad_1FD6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           LaserMesh;                                         // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    LaserMaterial;                                     // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       Root;                                              // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMultiplayerLaserPuzzleConnection> Connections;                                       // 0x548(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxPlayers;                                        // 0x558(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxConnectionDistance;                             // 0x55C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMultiplayerLaserTarget*>       AllConnectibles;                                   // 0x560(0x10)(ExportObject, ZeroConstructor, NonTransactional, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APuzzleRegistrationPlatform*>   RegistrationPlatforms;                             // 0x578(0x10)(ZeroConstructor, NonTransactional, Protected, NativeAccessSpecifierProtected)
	TMap<struct FMultiplayerLaserPuzzleConnection, class UStaticMeshComponent*> VisualConnections;                                 // 0x588(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        SolvedOn;                                          // 0x5D8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FDA[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMultiplayerLaserPuzzleBase* GetDefaultObj();

};

// 0x108 (0x6F0 - 0x5E8)
// Class IslandsofInsight.MultiplayerEscortPuzzle
class AMultiplayerEscortPuzzle : public AMultiplayerLaserPuzzleBase
{
public:
	TArray<class UStaticMeshComponent*>          VisualOnlyMeshes;                                  // 0x5E8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<struct FMultiplayerLaserPuzzleConnection, class UStaticMeshComponent*> FailureConnections;                                // 0x5F8(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FMultiplayerEscortPuzzleFailureInfo   FailureInfo;                                       // 0x648(0x40)(Net, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMultiplayerEscortPuzzleTarget> Targets;                                           // 0x688(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        ConstantSpeed;                                     // 0x698(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         UseConstantSpeed;                                  // 0x69C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FDB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          IntraPlayerLaserColor;                             // 0x6A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  PlayerColors;                                      // 0x6B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        MaxDistanceFromAssignedMesh;                       // 0x6C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeBetweenTrials;                                 // 0x6C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        FailureNiagaraEffectSystem;                        // 0x6C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FDC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UNiagaraComponent*                     CreatedFailureNiagaraComponent;                    // 0x6E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FDD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMultiplayerEscortPuzzle* GetDefaultObj();

	void OnRep_targets();
	void OnRep_failureInfo();
	void BP_VisualizeSplines();
};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.MultiplayerEscortWidget
class UMultiplayerEscortWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            TimeText;                                          // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            FailureText;                                       // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMultiplayerEscortWidget* GetDefaultObj();

};

// 0x88 (0x670 - 0x5E8)
// Class IslandsofInsight.MultiplayerLaserPuzzle
class AMultiplayerLaserPuzzle : public AMultiplayerLaserPuzzleBase
{
public:
	float                                        MaxDistanceFromSourceKickPlayer;                   // 0x5E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  SourceMesh;                                        // 0x5F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetColor;                                       // 0x5F8(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Hidden;                                            // 0x604(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SolveMessage;                                      // 0x608(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  CancelMessage;                                     // 0x620(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UMultiplayerLaserTarget*>       SolvedTargets;                                     // 0x638(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class AMultiplayerLaserPuzzleClickDetector*> ClickDetectors;                                    // 0x648(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FE6[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMultiplayerLaserPuzzle* GetDefaultObj();

	void OnRep_Hidden();
	void BP_InitializeTargets(TArray<class UMultiplayerLaserTarget*>& Targets);
};

// 0x10 (0x248 - 0x238)
// Class IslandsofInsight.MultiplayerLaserPuzzleClickDetector
class AMultiplayerLaserPuzzleClickDetector : public AClickableThroughWallBase
{
public:
	class UBoxComponent*                         boxClickDetector;                                  // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AMultiplayerLaserPuzzle*               ParentPuzzle;                                      // 0x240(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AMultiplayerLaserPuzzleClickDetector* GetDefaultObj();

};

// 0x20 (0x2B8 - 0x298)
// Class IslandsofInsight.MultiplayerLaserRegisterWidget
class UMultiplayerLaserRegisterWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            WaitingText;                                       // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            NotificationText;                                  // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            InstructionsText;                                  // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            InstructionsMarkersText;                           // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMultiplayerLaserRegisterWidget* GetDefaultObj();

};

// 0x40 (0x520 - 0x4E0)
// Class IslandsofInsight.PoweredMesh
class UPoweredMesh : public UStaticMeshComponent
{
public:
	uint8                                        Pad_1FE7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ErrorMsg;                                          // 0x4F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	bool                                         CanActivate;                                       // 0x508(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPowered;                                          // 0x509(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivated;                                        // 0x50A(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BaseWisdom;                                        // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAutoAimDetectorComponent*             AutoAimDetector;                                   // 0x510(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  OutlineStencilMesh;                                // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPoweredMesh* GetDefaultObj();

	void OnRep_isPowered();
	void OnRep_isActivated();
};

// 0x10 (0x530 - 0x520)
// Class IslandsofInsight.MultiplayerLaserTarget
class UMultiplayerLaserTarget : public UPoweredMesh
{
public:
	uint8                                        Pad_1FE9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMultiplayerLaserTarget* GetDefaultObj();

};

// 0x8 (0x2A0 - 0x298)
// Class IslandsofInsight.MultiplayerLaserWidget
class UMultiplayerLaserWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            ConnectedCubesText;                                // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMultiplayerLaserWidget* GetDefaultObj();

};

// 0x78 (0x128 - 0xB0)
// Class IslandsofInsight.MusicComponent
class UMusicComponent : public UActorComponent
{
public:
	uint8                                        Pad_1FED[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFMODEvent*>                    PreviousEvents;                                    // 0x100(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CurrentEvent;                                      // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaCharacter*                      Player;                                            // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaGameState*                      GS;                                                // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMusicComponent* GetDefaultObj();

	void RemoveMusicEvents(int32 Priority, const TArray<class UFMODEvent*>& EventsToRemove);
	void AddMusicEvents(int32 Priority, const TArray<class UFMODEvent*>& Events);
};

// 0x10 (0x268 - 0x258)
// Class IslandsofInsight.MusicVolume
class AMusicVolume : public AVolume
{
public:
	int32                                        Priority;                                          // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            Event;                                             // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AMusicVolume* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class IslandsofInsight.MyopiaSymbol
class UMyopiaSymbol : public UClue
{
public:
	uint8                                        Pad_1FF1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMyopiaSymbol* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class IslandsofInsight.NavmeshAI
class ANavmeshAI : public AAIController
{
public:
	uint8                                        Pad_1FF2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ANavmeshAI* GetDefaultObj();

	void GoToRandomWaypoint();
};

// 0x28 (0x260 - 0x238)
// Class IslandsofInsight.NavmeshAISpawner
class ANavmeshAISpawner : public AClickableBase
{
public:
	TSubclassOf<class ACharacter>                AIClass;                                           // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  SpawnOne;                                          // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  SpawnNine;                                         // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ACharacter*>                    SpawnedAIs;                                        // 0x250(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ANavmeshAISpawner* GetDefaultObj();

};

// 0x1B8 (0x4D0 - 0x318)
// Class IslandsofInsight.NewGridUI
class UNewGridUI : public UInputWidget
{
public:
	bool                                         bForceDisableButtons;                              // 0x318(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFOMMode;                                          // 0x31A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFB[0xD];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVerticalBox*                          CompleteRuleContainer;                             // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuleBoxContainer*                     PuzzleRulesContainer;                              // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuleBoxContainer*                     SymbolRulesContainer;                              // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDifficultyPanel*                      DifficultyPanel;                                   // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        AudioCanvas;                                       // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                             GlimpseContainingBox;                              // 0x350(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGenericGridButton*                    ExitCanvas;                                        // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGenericGridButton*                    UndoRestartCanvas;                                 // 0x360(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGenericGridButton*                    InviteCanvas;                                      // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGenericGridButton*                    GlimpseCanvas;                                     // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGenericGridButton*                    ContinueCanvas;                                    // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTwoStateGenericGridButton*            ListenCanvas;                                      // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTwoStateGenericGridButton*            PlayCanvas;                                        // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTwoStateGenericGridButton*            ForesightCanvas;                                   // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForesightController*                  ForesightController;                               // 0x398(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UQFPTierStreakDisplay*                 QFPTierStreakDisplay;                              // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UQFPMistakeBox*                        QFPMistakeBox;                                     // 0x3A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTotemNavigator*                       TotemNavigator;                                    // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTutorialBox*                          TutorialBox;                                       // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInsightWidgetGrid*                    InsightWidget;                                     // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInsightModalWidget*                   InsightModalWidget;                                // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridInviteWidget*                     InvitePanel;                                       // 0x3D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTexture2D*>                    DifficultyTextures;                                // 0x3D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridTip>                  GridTipClass;                                      // 0x3E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridTip>                  GridSymbolRuleClass;                               // 0x3F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridTip>                  GridClickableTipClass;                             // 0x3F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridTotemPipWidget>       TotemPipClass;                                     // 0x400(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputWidget>              TutorialWidgetClass;                               // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputWidget*                          TutorialWidget;                                    // 0x410(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               MistakeWidgetClass;                                // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           MistakeWidget;                                     // 0x420(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHintBox>                  HintTooltipClass;                                  // 0x428(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHintBox*                              HintBox;                                           // 0x430(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstInstructionTipAnimationStartTime;             // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SingleInstructionTipAnimationDuration;             // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SingleInstructionTipAnimationDurationTutorial;     // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationStartTimeIncrement;         // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationStartTimeIncrementTutorial; // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationDistanceScreenWidths;       // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationDistanceScreenWidthsTutorial; // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationEaseOutExponent;            // 0x454(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipAnimationEaseOutExponentTutorial;    // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowPeriod;                     // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowMinimumOpacity;             // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowDuration;                   // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowFadeOutTime;                // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstructionTipOuterGlowFadeInTime;                 // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UndoButtonOuterGlowPeriod;                         // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UndoButtonOuterGlowMinimumOpacity;                 // 0x474(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UndoButtonOuterGlowFadeTime;                       // 0x478(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MusicPuzzleDelayTime;                              // 0x47C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HintTextShowTime;                                  // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HintTextFadeTime;                                  // 0x484(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APuzzlePanel*                          Panel;                                             // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  CurrentTutorialText;                               // 0x490(0x18)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FFC[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNewGridUI* GetDefaultObj();

	void ViewPuzzle();
	void UndoReleased();
	void UndoPressed();
	void ShowTutorial();
	void ShowMistakePopup(const struct FVector2D& ScreenPosition);
	void Restart();
	void Previous();
	void OnPlayGridClicked();
	void OnPlayAnswerKeyClicked();
	void NextOrClose();
	void Invite();
	void Hint();
	void HideMistakePopup();
	void Glimpse();
	bool GetIsInSolvedState();
	bool FOMIsTierBreak();
	void Exit();
	void BPI_ShowStarDifficultyTutorial();
	void BPI_ShowRegularDifficultyTutorial();
	void BPI_ShowQFPInfinitePopup();
	void BPI_ShowQFPFirstTierSolvePopup();
	void BPI_ShowQFPAllTierSolvePopup();
	void BPI_ShowMultiplayerMessage(class FText& Message);
	void BPI_OnExitRune();
	void BPI_OnEnterRune();
	class APuzzlePanel* BPC_GetPanel();
	void BP_PlayQFPDamageAnimation();
	void BP_PlayOpeningAnimations();
	void BP_PlayHintAnimation();
	void BP_NotifyCaveHoverV3(const struct FGridCaveHighlightInfo& Info, bool bShow);
	void BP_NotifyAreaHoverV2(const struct FVector2D& ScreenCursorLocation, TArray<struct FGridHighlightInfo>& HighlightTiles, bool bIsLight);
	void BP_NextOrClose();
};

// 0x8 (0x40 - 0x38)
// Class IslandsofInsight.NoTwoIslandsAreCongruent
class UNoTwoIslandsAreCongruent : public UClue
{
public:
	uint8                                        Pad_1FFD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNoTwoIslandsAreCongruent* GetDefaultObj();

};

// 0x8 (0x228 - 0x220)
// Class IslandsofInsight.ObeliskLightbeam
class AObeliskLightbeam : public AActor
{
public:
	class UStaticMeshComponent*                  BeamMesh;                                          // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AObeliskLightbeam* GetDefaultObj();

};

// 0x70 (0x918 - 0x8A8)
// Class IslandsofInsight.ObeliskPuzzle
class AObeliskPuzzle : public ASophiaRune
{
public:
	class USceneComponent*                       ObeliskTop;                                        // 0x8A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       ObeliskTeleportTarget;                             // 0x8B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AObeliskLightbeam>         LightbeamClass;                                    // 0x8B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AObeliskTablet>            TabletClass;                                       // 0x8C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APowerCore>                CoreClass;                                         // 0x8C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumTablets;                                        // 0x8D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       TabletPositions;                                   // 0x8D8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AObeliskLightbeam*>             Lightbeams;                                        // 0x8E8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AObeliskTablet*>                Tablets;                                           // 0x8F8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        NumSolvedTablets;                                  // 0x908(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FFF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        EligibleTeam;                                      // 0x913(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2000[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AObeliskPuzzle* GetDefaultObj();

	void OnRep_numSolvedTablets();
};

// 0x50 (0x8F8 - 0x8A8)
// Class IslandsofInsight.ObeliskTablet
class AObeliskTablet : public ASophiaRune
{
public:
	uint8                                        Pad_2001[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AObeliskPuzzle*                        ParentPuzzle;                                      // 0x8B8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  SolvedPlayerName;                                  // 0x8C0(0x18)(Net, Protected, NativeAccessSpecifierProtected)
	class FText                                  ChargeMessage;                                     // 0x8D8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class ASophiaCharacter*                      TeleportingPlayer;                                 // 0x8F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AObeliskTablet* GetDefaultObj();

	void BP_Solved();
};

// 0x8 (0x40 - 0x38)
// Class IslandsofInsight.OneSymbolPerIsland
class UOneSymbolPerIsland : public UClue
{
public:
	uint8                                        Pad_2002[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOneSymbolPerIsland* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.OnlineServicesAuthHandler
class UOnlineServicesAuthHandler : public UObject
{
public:

	static class UClass* StaticClass();
	static class UOnlineServicesAuthHandler* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class IslandsofInsight.OnlineServicesAuthHandler_Kraken
class UOnlineServicesAuthHandler_Kraken : public UOnlineServicesAuthHandler
{
public:
	class UGISKraken*                            KrakenSubsystem;                                   // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2005[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOnlineServicesAuthHandler_Kraken* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.OnlineServicesAuthHandler_Platform
class UOnlineServicesAuthHandler_Platform : public UOnlineServicesAuthHandler
{
public:

	static class UClass* StaticClass();
	static class UOnlineServicesAuthHandler_Platform* GetDefaultObj();

};

// 0x28 (0x2C0 - 0x298)
// Class IslandsofInsight.OthersAttemptingWidget
class UOthersAttemptingWidget : public USophiaUserWidget
{
public:
	class UCanvasPanel*                          CanvasPanel;                                       // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextBlock;                                         // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Neutral;                                           // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            RedTeam;                                           // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BlueTeam;                                          // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOthersAttemptingWidget* GetDefaultObj();

};

// 0xB0 (0xD8 - 0x28)
// Class IslandsofInsight.ParameterizedUrl
class UParameterizedUrl : public UObject
{
public:
	class FString                                BasePath;                                          // 0x28(0x10)(BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>           FixedParameters;                                   // 0x38(0x50)(SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, enum class EDynamicUrlParameterValue> DynamicParameters;                                 // 0x88(0x50)(SaveGame, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UParameterizedUrl* GetDefaultObj();

	class FString ToString();
	void SetFixedParameter(const class FString& ParamName, const class FString& ParamValue);
	void SetDynamicParameter(const class FString& ParamName, enum class EDynamicUrlParameterValue ParamFunc);
	void RemoveParameter(const class FString& ParamName);
	class FString ComputeDynamicUrlParameter(enum class EDynamicUrlParameterValue ParamType);
};

// 0x70 (0x558 - 0x4E8)
// Class IslandsofInsight.Pareidolon
class APareidolon : public APuzzleBase
{
public:
	class UDecalComponent*                       DecalComponent;                                    // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DecalMaterial;                                     // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinViewDistance;                                   // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxViewDistance;                                   // 0x4FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxViewAngleDegrees;                               // 0x500(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinningDuration;                                   // 0x504(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          WinningColor;                                      // 0x508(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTexture2D*>                    FaceBank;                                          // 0x518(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            FaceOverride;                                      // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       ChosenFaceIndex;                                   // 0x530(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_200C[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              DecalMaterialInstance;                             // 0x540(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASophiaCharacter*                      PlayerWhoLastClicked;                              // 0x548(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                            Face;                                              // 0x550(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APareidolon* GetDefaultObj();

};

// 0x8 (0x2A0 - 0x298)
// Class IslandsofInsight.PartyChatMessageWidget
class UPartyChatMessageWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            Message;                                           // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPartyChatMessageWidget* GetDefaultObj();

	void SetupMessage(const class FString& UserName, class FText Message);
};

// 0x20 (0x2B8 - 0x298)
// Class IslandsofInsight.PartyChatNotificationWidget
class UPartyChatNotificationWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            UsernameBlock;                                     // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            MessageBlock;                                      // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            PressEnterBlock;                                   // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPartyChatNotificationWidget* GetDefaultObj();

};

// 0x28 (0x310 - 0x2E8)
// Class IslandsofInsight.PartyChatWidget
class UPartyChatWidget : public UBaseWidget
{
public:
	TSubclassOf<class UPartyChatMessageWidget>   MessageWidgetClass;                                // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            MessageFeed;                                       // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditableText*                         MessageInput;                                      // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          RootPanel;                                         // 0x300(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2010[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPartyChatWidget* GetDefaultObj();

	void CloseWidget();
	bool AddMessage(const class FString& UserName, class FText Message);
};

// 0x48 (0x2E0 - 0x298)
// Class IslandsofInsight.PartyDisplayWidget
class UPartyDisplayWidget : public USophiaUserWidget
{
public:
	TSubclassOf<class UPartyChatNotificationWidget> ChatMessageWidgetClass;                            // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UMessageWidget>            MessageWidgetClass;                                // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPlayerWidget>             PlayerWidgetClass;                                 // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        MembersBox;                                        // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          MessageQueue;                                      // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          PartyCanvas;                                       // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPlayerWidget*>                 CreatedPlayerWidgets;                              // 0x2C8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2012[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPartyDisplayWidget* GetDefaultObj();

	void BP_GetHelpState(bool Val, const class FString& Name, const class FString& PuzzleName);
};

// 0x38 (0x3A8 - 0x370)
// Class IslandsofInsight.PartyInvitePromptWidget
class UPartyInvitePromptWidget : public UNotificationWidget
{
public:
	struct FPartyInvite                          TheInvite;                                         // 0x370(0x30)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	class UPlayerWidget*                         InviterSteamWidget;                                // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPartyInvitePromptWidget* GetDefaultObj();

	void ReplyToPartyInvite(bool Response);
	void BP_HandleNonInviterMember(class ASophiaPlayerState* PlayerState);
};

// 0x48 (0x6D0 - 0x688)
// Class IslandsofInsight.PartyRosary
class APartyRosary : public ARosary
{
public:
	class AAirDropRosaryParty*                   ParentParty;                                       // 0x688(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2013[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DefaultColour;                                     // 0x694(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               ExplodeStartPosition;                              // 0x6A0(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2014[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                ExplodeTimes;                                      // 0x6B0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         Explode;                                           // 0x6C0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2015[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplodeStartTime;                                  // 0x6C4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2016[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APartyRosary* GetDefaultObj();

};

// 0x150 (0x200 - 0xB0)
// Class IslandsofInsight.PartySystemComponent
class UPartySystemComponent : public UActorComponent
{
public:
	struct FPartyInvite                          CurPartyInvite;                                    // 0xB0(0x30)(Net, NativeAccessSpecifierPrivate)
	struct FGridInvite                           CurGridInvite;                                     // 0xE0(0x38)(Net, NativeAccessSpecifierPrivate)
	class APuzzleBase*                           CurPuzzle;                                         // 0x118(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASophiaPlayerState*                    OwnPlayerState;                                    // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_202A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPendingPartyCreation;                             // 0x158(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_202B[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASophiaPlayerState*>            HelperBondParty;                                   // 0x190(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	class APuzzleBase*                           HelperBondPuzzle;                                  // 0x1A0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASophiaPlayerState*                    PendingGridPartner;                                // 0x1A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                KrakenPartyId;                                     // 0x1B0(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                KrakenPartyLeader;                                 // 0x1C0(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        KrakenPartyAutoJoinKey;                            // 0x1D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_202C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        KrakenPartyMembers;                                // 0x1D8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnRejectPartyGridInvite;                           // 0x1E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	int32                                        PartyGridSolveOption;                              // 0x1F8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPartySize;                                      // 0x1FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPartySystemComponent* GetDefaultObj();

	void ServerExclusive_SendGridInvite(class ASophiaPlayerState* P);
	void ServerExclusive_AddToParty(class ASophiaPlayerState* P);
	void Server_UpdateKrakenPartyMembers(TArray<class FString>& InPartyMembers);
	void Server_TestSolveTogether(class ASophiaRune* InviteRune, TArray<enum class ECellColor>& InputCopy);
	void Server_StartSolveTogether(class ASophiaRune* InviteRune, TArray<enum class ECellColor>& InputCopy);
	void Server_setPuzzle(class APuzzleBase* Puzzle);
	void Server_SendChatMessage(class ASophiaPlayerState* P, class FText& Text);
	void Server_ResetPartyInfo();
	void Server_RequestOwnerSolveTogether(class ASophiaPlayerState* OtherPlayer);
	void Server_ReplyToPartyInvite(bool JoinParty);
	void Server_ReplyToGridInvite(bool JoinParty);
	void Server_RemoveFromParty(class ASophiaPlayerState* P);
	void Server_RejectSolveTogetherOnCompletePuzzle();
	void Server_RejectPartyInvite();
	void Server_InitializeKrakenParty(const class FString& PartyId, const class FString& LeaderID, int32 AutoJoinKey);
	void Server_GiveLeadershipTo(class ASophiaPlayerState* Player);
	void Server_AddToKrakenParty(const struct FKrakenPartyDetails& PartyDetails);
	bool PlayerIsInMyParty(class ASophiaPlayerState* P);
	void OnRep_KrakenParty();
	void NetMultiCast_SendChatMessage(class ASophiaPlayerState* Sender, class FText& Text);
	bool IsPartyLeader(const class FString& ID);
	bool IsPartyFull();
	bool IsLeader();
	bool IsHelper();
	bool IsHelpee();
	bool InParty();
	bool InHelperBond();
	void GiveLeadershipTo(class ASophiaPlayerState* Player);
	struct FPartyInvite GetPendingPartyInvite();
	int32 GetPartySize();
	TArray<class ASophiaPlayerState*> GetPartyMembers();
	TArray<class FString> GetKrakenPartyMembers();
	class APuzzleBase* GetHelperBondPuzzle();
	TArray<class ASophiaPlayerState*> GetHelperBondParty();
	class APuzzleBase* GetCurPuzzle();
	struct FPartyInvite GetCurPartyInvite();
	struct FGridInvite GetCurGridInvite();
	void Client_StartSolveTogether();
	void Client_RemoveSelfFromKrakenParty(const class FString& NewLeaderId);
	void Client_RemoveRejectedPartyInvite(const class FString& InvitedPlayerId);
	void Client_RejectSolveTogether();
	void Client_GiveLeadershipTo(class ASophiaPlayerState* Player);
	bool CanRemoveFromParty(class ASophiaPlayerState* P);
	bool CanPromoteToPartyLeader(class ASophiaPlayerState* P);
	bool CanInviteToParty(class ASophiaPlayerState* P);
	void BPC_SolveTogetherReply_C(bool Response, class ASophiaPlayerState* OtherPlayer);
};

// 0x20 (0x2B8 - 0x298)
// Class IslandsofInsight.PassiveItemDisplay
class UPassiveItemDisplay : public USophiaUserWidget
{
public:
	TSubclassOf<class UPassiveItemDisplayElement> DisplayElementClass;                               // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          RootPanel;                                         // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPassiveItemDisplayElement*>    DisplayElements;                                   // 0x2A8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPassiveItemDisplay* GetDefaultObj();

};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.PassiveItemDisplayElement
class UPassiveItemDisplayElement : public USophiaUserWidget
{
public:
	class UTexture2D*                            ItemTexture;                                       // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemLeftPercentage;                                // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_202F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPassiveItemDisplayElement* GetDefaultObj();

};

// 0x160 (0x648 - 0x4E8)
// Class IslandsofInsight.PathIntegration
class APathIntegration : public APuzzleBase
{
public:
	uint8                                        Pad_203D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPathIntState                     State;                                             // 0x4F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_203E[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionMargin;                                   // 0x520(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlatformStepHeight;                                // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowCollisionBox;                                  // 0x528(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_203F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x530(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PuzzleBound;                                       // 0x538(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          Obstacles;                                         // 0x540(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UBoxComponent*>                 ObstacleColliders;                                 // 0x550(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPoweredMesh*                          StartingPlatform;                                  // 0x560(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoweredMesh*                          FinishingPlatform;                                 // 0x568(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         StartingCollider;                                  // 0x570(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         FinishingCollider;                                 // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StartingBeacon;                                    // 0x580(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FinishingBeacon;                                   // 0x588(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           ObstacleMesh;                                      // 0x590(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    Material;                                          // 0x598(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    SolvedMaterial;                                    // 0x5A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              BoundMaterial;                                     // 0x5A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              ObstacleMaterial;                                  // 0x5B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPathIntState, struct FLinearColor> BoundColor;                                        // 0x5B8(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        ExpertTime;                                        // 0x608(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveValueForExpertTime;                           // 0x60C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveValueForZero;                                 // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveValueForSolving;                              // 0x614(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  CancelMessage;                                     // 0x618(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  TeleportMessage;                                   // 0x630(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APathIntegration* GetDefaultObj();

	void OnStartExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnStartEnter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnObstacleEnter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnFinishEnter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBoundExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BP_UseMaterials();
	void BP_CreateMaterials();
};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.PathIntegrationWidget
class UPathIntegrationWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            CurrentTimeText;                                   // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            BestTimeText;                                      // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPathIntegrationWidget* GetDefaultObj();

};

// 0x58 (0x290 - 0x238)
// Class IslandsofInsight.PersonalTeleportEgg
class APersonalTeleportEgg : public AClickableBase
{
public:
	class ASophiaPlayerState*                    OwningPlayerState;                                 // 0x238(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPersistentPlayerReference            OwningPlayer;                                      // 0x240(0x40)(Net, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2042[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPersonalEggStatus                EggStatus;                                         // 0x288(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2043[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APersonalTeleportEgg* GetDefaultObj();

	void SetOwningPlayer(class ASophiaPlayerState* PS);
	void BP_EggOnTickClient(float DeltaTime, float DistanceToPlayer);
};

// 0x0 (0x298 - 0x298)
// Class IslandsofInsight.PingFPSWidget
class UPingFPSWidget : public USophiaUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPingFPSWidget* GetDefaultObj();

	class FString GetPingText();
	class FString GetFPSText();
};

// 0x48 (0x70 - 0x28)
// Class IslandsofInsight.PingIP
class UPingIP : public UObject
{
public:
	uint8                                        Pad_2044[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPingComplete;                                    // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPingFailure;                                     // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPingIP* GetDefaultObj();

	void SendPing(const class FString& IpAddress);
};

// 0x40 (0x260 - 0x220)
// Class IslandsofInsight.PlatformEditorRepresentative
class APlatformEditorRepresentative : public AActor
{
public:
	class ATowerPlatform*                        OwnerPlatform;                                     // 0x220(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATowerPlatformTrigger*                 OwnerTrigger;                                      // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Mesh;                                              // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    Material;                                          // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RegularColor;                                      // 0x240(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          IsLoopColor;                                       // 0x250(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APlatformEditorRepresentative* GetDefaultObj();

};

// 0xD0 (0xF8 - 0x28)
// Class IslandsofInsight.PlatformMovement
class UPlatformMovement : public UObject
{
public:
	struct FVector                               Loc;                                               // 0x28(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2046[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPlatformMovement*                     Next;                                              // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlatformMovement*                     Prev;                                              // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MovementCurve;                                     // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2047[0xA4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         DoLoop;                                            // 0xF4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2048[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlatformMovement* GetDefaultObj();

};

// 0x30 (0x2C8 - 0x298)
// Class IslandsofInsight.PlayerCurrencyWidget
class UPlayerCurrencyWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            BlueOrbAmountText;                                 // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            BlueOrbComboText;                                  // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            GoldAmountText;                                    // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            GoldComboText;                                     // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPanelWidget*                          RootPanel;                                         // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ControlOwnOpacity;                                 // 0x2C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShouldDisplayCombo;                                // 0x2C1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShouldFade;                                        // 0x2C2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2049[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DesiredOpacity;                                    // 0x2C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerCurrencyWidget* GetDefaultObj();

	void ResetCurrencyTime();
};

// 0x108 (0x4B8 - 0x3B0)
// Class IslandsofInsight.PlayerLocationMarkerInfoWidget
class UPlayerLocationMarkerInfoWidget : public UPlayerInfoWidget
{
public:
	bool                                         bShowNotificationTypeEvenIfThereIsPuzzle;          // 0x3B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerLocationMarkerData             MyLocationMarkerData;                              // 0x3B8(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerLocationMarkerInfoWidget* GetDefaultObj();

};

// 0x78 (0xA8 - 0x30)
// Class IslandsofInsight.PlayerStatisticRankingData
class UPlayerStatisticRankingData : public UDataAsset
{
public:
	TArray<float>                                RankThresholds;                                    // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRankName>                     RankNames;                                         // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        LastClaimedMasteryRankIndex;                       // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FMasteryRankReward>       RankToRewards;                                     // 0x58(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerStatisticRankingData* GetDefaultObj();

};

// 0x120 (0x148 - 0x28)
// Class IslandsofInsight.PlayerMastery
class UPlayerMastery : public UObject
{
public:
	class UPlayerStatisticRankingData*           RankingData;                                       // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  RankingDisplayName;                                // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                KrakenAchievementId;                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                KrakenLeaderboardPrefix;                           // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PuzzleKrakenID;                                    // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x78(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2050[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MasteryImage;                                      // 0x80(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FKrakenLeaderboardEntry>       bestLeaderboardEntries;                            // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FKrakenLeaderboardEntry>       MyLeaderboardEntries;                              // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_2051[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUsePP;                                            // 0x130(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2052[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerMastery* GetDefaultObj();

	void RefreshLeaderboards();
	float GetValueForRank(int32 RankIndex);
	float GetValue();
	class FText GetRankNameForRankIndex(int32 Rank);
	float GetRankIndexWithFractionForValue(float Value);
	float GetRankIndexWithFraction();
	int32 GetRankIndexForValue(float Value);
	int32 GetRankIndex();
	class UTexture2D* GetRankIconForRankIndex(int32 Rank);
	class UTexture2D* GetRankBorderIconForRankIndex(int32 Rank);
	float GetProgressToNextRankForValue(float Value);
	float GetProgressToNextRank();
	class FText GetFormattableCurrentRankName();
	class FText GetCurrentRankName();
	bool AreLeaderboardsLoaded();
};

// 0x10 (0x40 - 0x30)
// Class IslandsofInsight.PlayerMasteryLevelsSeed
class UPlayerMasteryLevelsSeed : public UDataAsset
{
public:
	TArray<class UPlayerMastery*>                MasterySeed;                                       // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerMasteryLevelsSeed* GetDefaultObj();

};

// 0x18 (0x330 - 0x318)
// Class IslandsofInsight.PlayerSocialMenuWidget
class UPlayerSocialMenuWidget : public UInputWidget
{
public:
	class ASophiaPlayerState*                    TargetPlayer;                                      // 0x318(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerPingMessage>            PossiblePingMessages;                              // 0x320(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPlayerSocialMenuWidget* GetDefaultObj();

	enum class EPingMessageAttemptResult TrySendPingMessageToPingTarget(const struct FPlayerPingMessage& PingMessage);
	enum class EPingMessageAttemptResult TryPartyInvitePingTarget();
};

// 0x30 (0x2C8 - 0x298)
// Class IslandsofInsight.PlayerStatsBar
class UPlayerStatsBar : public USophiaUserWidget
{
public:
	class UImage*                                ProgressBarImg;                                    // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            LevelText;                                         // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPanelWidget*                          RootPanel;                                         // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              ProgressDMat;                                      // 0x2B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2057[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         ShouldFade;                                        // 0x2C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2058[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerStatsBar* GetDefaultObj();

	void DisplayExperience(float NewExp);
};

// 0x48 (0x2A0 - 0x258)
// Class IslandsofInsight.PlayerTeleportVolume
class APlayerTeleportVolume : public ATriggerVolume
{
public:
	uint8                                        Pad_205B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       CollisionBox;                                      // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  EditorViewBox;                                     // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseDestinationPosition;                            // 0x270(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DestinationPosition;                               // 0x274(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredWisdom;                                    // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredCorePower;                                 // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowSafetyText;                                    // 0x288(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DamageUponTeleporting;                             // 0x28C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldStopMovement;                               // 0x290(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldTeleportIfPlayerIsInputLocked;              // 0x291(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205E[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APlayerTeleportVolume* GetDefaultObj();

	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
};

// 0x48 (0x268 - 0x220)
// Class IslandsofInsight.PlayerVoiceChatActor
class APlayerVoiceChatActor : public AActor
{
public:
	class USceneComponent*                       RootSceneComponent;                                // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMicrophoneSpeakComponent*             MicrophoneSpeakComponent;                          // 0x228(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerState*                          OwnerPlayerState;                                  // 0x230(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IdVoiceChat;                                       // 0x238(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VoiceVolume;                                       // 0x23C(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                RadioChannelSubscribed;                            // 0x240(0x10)(BlueprintVisible, Net, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class FString                                PathToAttenuationAsset;                            // 0x250(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, RepNotify, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ServerPerformAntiCheat;                            // 0x260(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AntiCheatAllowUseProximity;                        // 0x261(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AntiCheatAllowUseGlobal;                           // 0x262(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2068[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AntiCheatMaxProximityRange;                        // 0x264(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APlayerVoiceChatActor* GetDefaultObj();

	void ServerSetMaxProximityRange(float _maxProximityRange);
	void ServerSetAttenuation(bool EnableAttenuation, const class FString& _pathToAttenuationAsset);
	void ServerSetAllowUseProximity(bool _allowUseRange);
	void ServerSetAllowUseGlobal(bool _allowUseGlobal);
	void ServerRemoveChannel(int32 ChannelToRemove);
	void ServerAddChannel(int32 ChannelToAdd);
	void RPCServerUpdatePosAudioComp(const struct FVector& WorldPos);
	void RPCClientSetMicrophoneVolume(float Volume);
	void RPCClientAskRemoveChannel(int32 ChannelToRemove);
	void RPCClientAskAddChannel(int32 ChannelToAdd);
	void RepNotifyVoiceVolume();
	void RepNotifyMicComp();
	void RepNotifyAttenuationAsset();
	void MuteAudio(bool IsMute);
	void DelegateEndPlayOwner(class AActor* Act, enum class EEndPlayReason EndPlayReason);
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.UniversalVoiceChat
class UUniversalVoiceChat : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UUniversalVoiceChat* GetDefaultObj();

	bool VoiceChatWasInitAudioVoiceChatQuality();
	bool VoiceChatStopSpeak();
	bool VoiceChatStartSpeak(bool _shouldHearMyOwnVoice, bool IsGlobal, int32 RadioChannel, bool UseProximity, float MaxProximityRange);
	bool VoiceChatSetMicrophoneVolume(float Volume);
	bool VoiceChatRemoveChannel(int32 ChannelToRemove);
	void VoiceChatLocalMuteSomeone(class UObject* WorldContextObject, class APlayerState* PlayerToMute, bool ShouldMute);
	bool VoiceChatLocalIsMutedSomeone(class UObject* WorldContextObject, class APlayerState* PlayerToCheckMute);
	bool VoiceChatInitAudioVoiceChatQuality(int32 _sampleRate, int32 _numChannels);
	bool VoiceChatHasMicrophonePermission();
	class APlayerVoiceChatActor* VoiceChatGetMyLocalPlayerVoiceChat();
	bool VoiceChatCheckRegisteredToChannel(int32 ChannelToCheck);
	void VoiceChatAskMicrophonePermission();
	bool VoiceChatAddChannel(int32 ChannelToAdd);
};

// 0xC8 (0x360 - 0x298)
// Class IslandsofInsight.PlayerWidget
class UPlayerWidget : public USophiaUserWidget
{
public:
	class FString                                KrakenId;                                          // 0x298(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                KrakenNickname;                                    // 0x2A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPersonSocialState                SocialState;                                       // 0x2B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTryShowButtons;                                   // 0x2B9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowStatus;                                       // 0x2BA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2084[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPersistentPlayerReference            LatestSetPlayerReference;                          // 0x2C0(0x40)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  LatestSteamStatus;                                 // 0x300(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class UGridInviteWidget*                     ParentPanel;                                       // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bParty;                                            // 0x320(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlock;                                            // 0x321(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2085[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            DefaultAvatarTexture;                              // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                UserAvatar;                                        // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            UserName;                                          // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialClass;                                     // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGISSocial*                            Social;                                            // 0x348(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2086[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              DynMaterial;                                       // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPlayerWidget* GetDefaultObj();

	class ASophiaPlayerState* TryGetPlayerState();
	void SetupLocalPlayer();
	bool IsInPartyWithLocalPlayer();
	bool IsBlockedByLocalPlayer();
	void BP_Setup(const class FString& KrakenId, const class FString& KrakenName, bool TryToShowButtons, bool ShowStatus);
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.PostWorkTickInterface
class IPostWorkTickInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPostWorkTickInterface* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class IslandsofInsight.PostWorkTickComponent
class UPostWorkTickComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPostWorkTickComponent* GetDefaultObj();

};

// 0x10 (0x248 - 0x238)
// Class IslandsofInsight.PoweredBase
class APoweredBase : public AClickableBase
{
public:
	class UPoweredMesh*                          BasePoweredMesh;                                   // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAutoAimDetectorComponent*             AutoAimDetector;                                   // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APoweredBase* GetDefaultObj();

	int32 ServerExclusive_SetPowered(class APowerLaser* Laser, TMap<class ASophiaCharacter*, int32>* ConnectedPlayers, class ASophiaCharacter* OwnerRef);
};

// 0x8 (0x250 - 0x248)
// Class IslandsofInsight.PowerCore
class APowerCore : public APoweredBase
{
public:
	bool                                         DestroyInSandbox;                                  // 0x248(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APowerCore* GetDefaultObj();

};

// 0x170 (0x390 - 0x220)
// Class IslandsofInsight.PowerLaser
class APowerLaser : public AActor
{
public:
	class AActor*                                Source;                                            // 0x220(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Target;                                            // 0x228(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   TargetComponent;                                   // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASophiaCharacter*                      SophiaChar;                                        // 0x238(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  CloseUpMesh;                                       // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FarSourceMesh;                                     // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FarTargetMesh;                                     // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     Emitter;                                           // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPoleStatus, class UMaterialInterface*> CloseMaterial;                                     // 0x260(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EPoleStatus, class UMaterialInterface*> FarMaterial;                                       // 0x2B0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        NearThreshold;                                     // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FarThreshold;                                      // 0x304(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NearRadius;                                        // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FarRadius;                                         // 0x30C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetLoc;                                         // 0x310(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SourceLoc;                                         // 0x31C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2090[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class APowerRing*>                      OverlappedPowerRings;                              // 0x340(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APowerLaser* GetDefaultObj();

	void BPI_OnStatusChanged(enum class EPoleStatus NewStatus);
};

// 0xE0 (0x328 - 0x248)
// Class IslandsofInsight.PowerPole
class APowerPole : public APoweredBase
{
public:
	uint8                                        Pad_2095[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DesiredHeight;                                     // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OwnedPlayerName;                                   // 0x250(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHidden;                                          // 0x260(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2096[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  StickMesh;                                         // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MidSec;                                            // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PoleBase;                                          // 0x278(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPoleStatus                       PoleStatus;                                        // 0x280(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2097[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APowerLaser>               LaserClass;                                        // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  NameTextRender;                                    // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoverNameDistance;                                 // 0x298(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowNameRender;                                    // 0x29C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2098[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            PoleSound;                                         // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            PolePlantSound;                                    // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            PoleAuraSound;                                     // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                   PoleAuraAudioComponent;                            // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APowerLaser*>                   Lasers;                                            // 0x2C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class APowerLaser*>                   LasersToMe;                                        // 0x2D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FLaserData>                    LasersData;                                        // 0x2E0(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class ASophiaCharacter*                      PlayerRef;                                         // 0x2F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASophiaCharacter*                      PlayerPoleRef;                                     // 0x2F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                      PlayerCamera;                                      // 0x300(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2099[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFMODEventInstance                    PoleAudioInstance;                                 // 0x320(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APowerPole* GetDefaultObj();

	void OnRep_Status();
	void OnRep_named();
	void OnRep_lasersData();
	void OnRep_isHidden();
	void Multicast_addLaser(class AActor* Target, bool UseImpactPoint, const struct FVector& ImpactPoint, bool PrioritizeImpactPoint, class UPrimitiveComponent* TargetComponent);
	void FinalTick();
	void BP_SetFloorLocation(const struct FVector& NewLocation);
	void BP_PlantPole();
	void BP_ColorValid();
	void BP_ColorInvalid();
};

// 0xB8 (0x5A0 - 0x4E8)
// Class IslandsofInsight.PowerRing
class APowerRing : public APuzzleBase
{
public:
	class UStaticMeshComponent*                  RingMeshComponent;                                 // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  HitComponent;                                      // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class APowerLaser*>                     CollidingLasers;                                   // 0x4F8(0x50)(Protected, NativeAccessSpecifierProtected)
	TSet<class APowerLaser*>                     PotentialCollidingLasers;                          // 0x548(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_209A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APowerRing* GetDefaultObj();

	void UpdateColor();
	void BP_OnZeroPotentialLaserOverlap();
	void BP_OnPotentialLaserOverlap();
};

// 0x80 (0x568 - 0x4E8)
// Class IslandsofInsight.ProjectionCone
class AProjectionCone : public APuzzleBase
{
public:
	class USceneCaptureComponent2D*              CaptureComponent;                                  // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            LightTexture;                                      // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDecalComponent*                       LightDecal;                                        // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DecalMaterial;                                     // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     PlayerCapsuleMeasurer;                             // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          LoseColor;                                         // 0x510(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          WinColor;                                          // 0x520(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          SolvedColor;                                       // 0x530(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinThreshold;                                      // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceThreshold;                                 // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngleThreshold;                                    // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GlowThreshold;                                     // 0x54C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GlowAngleThreshold;                                // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_209E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextureRenderTarget2D*                DepthMap;                                          // 0x558(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              DecalMaterialInstance;                             // 0x560(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AProjectionCone* GetDefaultObj();

	void Recolor(float T, float Solvable);
	bool OnClickFire(struct FClickEventContext& Context);
};

// 0xC0 (0x540 - 0x480)
// Class IslandsofInsight.PuzzleBoundsComponent
class UPuzzleBoundsComponent : public UBoxComponent
{
public:
	uint8                                        Pad_209F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldSerializeIfNonDefault;                      // 0x488(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPuzzleBoundsInfo                     PuzzleBoundsInfo;                                  // 0x490(0xA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bBlockSpawning;                                    // 0x538(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseForDungeonIdentification;                      // 0x539(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InPlay;                                            // 0x53A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20A1[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPuzzleBoundsComponent* GetDefaultObj();

};

// 0x98 (0x2B8 - 0x220)
// Class IslandsofInsight.PuzzleCamera
class APuzzleCamera : public AActor
{
public:
	class UCameraComponent*                      TopDownCameraComponent;                            // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                   SpringArmComponent;                                // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         BeginCollisionMesh;                                // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         EndCollisionMesh;                                  // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraDelay;                                       // 0x240(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AttachCameraToPlayer;                              // 0x244(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20A6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      SophiaPlayer;                                      // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20A8[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APuzzleCamera* GetDefaultObj();

	void OnExitRegion(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEnterRegion(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0xE0 (0x300 - 0x220)
// Class IslandsofInsight.PuzzleCellButton_DEPRECATED
class APuzzleCellButton_DEPRECATED : public AActor
{
public:
	class UStaticMeshComponent*                  GreyTileMeshUpperLeft;                             // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  GreyTileMeshUpperRight;                            // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  GreyTileMeshLowerLeft;                             // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  GreyTileMeshLowerRight;                            // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PaintTileMeshUpperLeft;                            // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PaintTileMeshUpperRight;                           // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PaintTileMeshLowerLeft;                            // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PaintTileMeshLowerRight;                           // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  GivenCasingMesh;                                   // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20AB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            AnimStartTransform;                                // 0x270(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                            AnimEndTransform;                                  // 0x2A0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     TilePlacementEffectComponent;                      // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TileMeshOutsideCorner;                             // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TileMeshEdge;                                      // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TileMeshSmooth;                                    // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           TileMeshInsideCorner;                              // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20AC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APuzzleCellButton_DEPRECATED* GetDefaultObj();

	void BPI_CellColorChanged(enum class ECellColor CurCellColor, enum class ECellColor NewCellColor);
};

// 0xC8 (0xF0 - 0x28)
// Class IslandsofInsight.PuzzleClassesInfo
class UPuzzleClassesInfo : public UObject
{
public:
	TSoftClassPtr<class APuzzleBase>             InfoClass;                                         // 0x28(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, TSoftClassPtr<class APuzzleBase>> Classes;                                           // 0x50(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FString, class FString>           ClassToDefaultSerializedInfo;                      // 0xA0(0x50)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPuzzleClassesInfo* GetDefaultObj();

};

// 0xA0 (0xD0 - 0x30)
// Class IslandsofInsight.PuzzleClasses
class UPuzzleClasses : public UDataAsset
{
public:
	TMap<class FString, class UPuzzleClassesInfo*> KrakenIdentifierToClassesInfo;                     // 0x30(0x50)(Edit, BlueprintVisible, ExportObject, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<class FString, TSubclassOf<class UActorComponent>> PrefixToComponentClass;                            // 0x80(0x50)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPuzzleClasses* GetDefaultObj();

};

// 0x0 (0xF8 - 0xF8)
// Class IslandsofInsight.SlabPuzzleContainer
class USlabPuzzleContainer : public UPuzzleContainerData
{
public:

	static class UClass* StaticClass();
	static class USlabPuzzleContainer* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class IslandsofInsight.PuzzleData
class UPuzzleData : public UObject
{
public:
	class FString                                LogName;                                           // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KrakenId;                                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMainMapZoneName                  ZoneEnum;                                          // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PuzzleTypeIdentifier;                              // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurSpawnGroup;                                     // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsContainedPuzzle;                                // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        IDHashOverride;                                    // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B0[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPuzzleData* GetDefaultObj();

};

// 0xB0 (0x120 - 0x70)
// Class IslandsofInsight.WorldPuzzleData
class UWorldPuzzleData : public UPuzzleData
{
public:
	uint8                                        Pad_20B2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LocalID;                                           // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MapString;                                         // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            ActorTransform;                                    // 0xA0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                    PuzzleBoundsTransforms;                            // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FBox>                          PuzzleBoundsBoxes;                                 // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FPuzzleBoundsInfo>             PuzzleBoundsInfos;                                 // 0xF0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	enum class ESpawnBehaviour                   SpawnBehaviour;                                    // 0x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                IncompatibleKrakenIDs;                             // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWorldPuzzleData* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class IslandsofInsight.ContainedPuzzleData
class UContainedPuzzleData : public UPuzzleData
{
public:
	uint8                                        Pad_20B5[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UContainedPuzzleData* GetDefaultObj();

};

// 0x4A0 (0x4D0 - 0x30)
// Class IslandsofInsight.PuzzleDatabase
class UPuzzleDatabase : public UDataAsset
{
public:
	uint8                                        Pad_20D6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EMainMapZoneName, bool>      ZoneToSandboxProgressionRelevant;                  // 0x38(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class EMainMapZoneName, struct FZoneNumPuzzlesPerGroupOverride> PuzzleZoneToGroupNumOverrides;                     // 0x88(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        NumPuzzlesPerGroup;                                // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GroupLifespan;                                     // 0xDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PossibleOffset;                                    // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class FString>                   KrakenIDToWorldPuzzleData;                         // 0xE8(0x50)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	TMap<int32, struct FKrakenPuzzleSpawnData>   KrakenIDToContainedPuzzleData;                     // 0x138(0x50)(NativeAccessSpecifierPublic)
	TMap<int32, class FString>                   KrakenIDToKrakenIDOnlyPuzzleData;                  // 0x188(0x50)(NativeAccessSpecifierPublic)
	TMap<int32, class FString>                   KrakenIDToPuzzleStatus;                            // 0x1D8(0x50)(NativeAccessSpecifierPublic)
	bool                                         bIsFakingKraken;                                   // 0x228(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocalDatabaseReflectsEditor_EditorOnly;           // 0x229(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class UPuzzleData*>              KrakenIDToPuzzleData;                              // 0x230(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_20D9[0x1E0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInitialized;                                      // 0x460(0x1)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DA[0x5F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPuzzleData*>                   EmptyPuzzleDataArray;                              // 0x4C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPuzzleDatabase* GetDefaultObj();

	void GetZoneNames(TArray<enum class EMainMapZoneName>* OutNames);
	void GetZoneCompletion(class ASophiaCharacter* Player, enum class EMainMapZoneName& ZoneName, const class FString& PuzzleType, int32* OutSolved, int32* OutTotal, int32* Percent, class FString* PercentStr);
	int64 GetSecondsUntilPuzzleTypeBatchSpawnInZone(const class FString& KrakenPuzzleType, enum class EMainMapZoneName ZoneName);
	void GetPuzzleTypesInZone(enum class EMainMapZoneName& ZoneName, TArray<class FString>* OutNames, bool bNoAlwaysSpawn);
	TArray<class UPuzzleData*> GetAllSolvedPuzzleDataOfCategoryInZone(class ASophiaCharacter* Player, enum class EPuzzleCategory& PuzzleCategory, enum class EMainMapZoneName& ZoneName, bool bSandboxProgressionRelevant);
	TArray<class UPuzzleData*> GetAllSolvedPuzzleDataInZone(class ASophiaCharacter* Player, enum class EMainMapZoneName& ZoneName);
	TArray<class UPuzzleData*> GetAllSolvedDataOfTypeInZone(class ASophiaCharacter* Player, const class FString& KrakenPuzzleType, enum class EMainMapZoneName& ZoneName, bool bSandboxProgressionRelevant);
	TArray<class UPuzzleData*> GetAllPuzzleDataOfTypeInZone(const class FString& KrakenPuzzleType, enum class EMainMapZoneName& ZoneName, bool bSandboxProgressionRelevant);
	TArray<class UPuzzleData*> GetAllPuzzleDataOfCategoryInZone(enum class EPuzzleCategory& PuzzleCategory, enum class EMainMapZoneName& ZoneName, bool bSandboxProgressionRelevant);
	TArray<class UPuzzleData*> GetAllPuzzleDataInZone(enum class EMainMapZoneName& ZoneName);
	TArray<class UPuzzleData*> GetAllActiveSolvedSandboxPuzzleDataOfTypeInZone(class ASophiaCharacter* Player, const class FString& KrakenPuzzleType, enum class EMainMapZoneName ZoneName, bool bSandboxProgressionRelevant);
	TArray<class UPuzzleData*> GetAllActiveSandboxPuzzleDataOfTypeInZone(const class FString& KrakenPuzzleType, enum class EMainMapZoneName ZoneName, bool bSandboxProgressionRelevant);
};

// 0x6E0 (0x790 - 0xB0)
// Class IslandsofInsight.PuzzleGrid
class UPuzzleGrid : public UActorComponent
{
public:
	uint8                                        Pad_20DC[0x3F8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                PuzzleBytes;                                       // 0x4A8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FPuzzleGridServerState                ServerState;                                       // 0x4B8(0x80)(Net, RepNotify, NativeAccessSpecifierPrivate)
	enum class EPuzzleGridType                   PuzzleGridType;                                    // 0x538(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20DD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Filename;                                          // 0x540(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MyGridKrakenID;                                    // 0x550(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20DE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FServerSolution>               ServerSolutionPaths;                               // 0x558(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                        ScorePerCell;                                      // 0x568(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20DF[0x12C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClue*>                         Clues;                                             // 0x698(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20E0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LevelOverride;                                     // 0x6B8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20E1[0x74];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class APuzzlePanel*>                    PanelsListeningForNetworkGridChange;               // 0x730(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_20E2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPuzzleGrid* GetDefaultObj();

	void OnRep_ServerState();
	int32 GetLevel();
};

// 0x8 (0x2A0 - 0x298)
// Class IslandsofInsight.PuzzleGridFilenameWidget
class UPuzzleGridFilenameWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            Text;                                              // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPuzzleGridFilenameWidget* GetDefaultObj();

};

// 0xC8 (0x2E8 - 0x220)
// Class IslandsofInsight.PuzzleInstructionTip_DEPRECATED
class APuzzleInstructionTip_DEPRECATED : public AActor
{
public:
	uint8                                        Pad_20E3[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  buttonMesh;                                        // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, class UMaterialInterface*> Materials;                                         // 0x268(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class ADecalActor*                           buttonDecal;                                       // 0x2B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClue*>                         AssociatedClues;                                   // 0x2C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTexture2DDynamic*                     PatternTexture;                                    // 0x2D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<uint8>                                TextureBytes;                                      // 0x2D8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APuzzleInstructionTip_DEPRECATED* GetDefaultObj();

};

// 0x8 (0x2A0 - 0x298)
// Class IslandsofInsight.PuzzleLeaderboardWidget
class UPuzzleLeaderboardWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            Text;                                              // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPuzzleLeaderboardWidget* GetDefaultObj();

};

// 0x20 (0x340 - 0x320)
// Class IslandsofInsight.TargetedJumpingPad
class ATargetedJumpingPad : public AJumpingPad
{
public:
	uint8                                        Pad_20E5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTargetedLocationCapsule*              CapsuleComponent;                                  // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFixOrientation;                                   // 0x330(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20E6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetedSpeedMultiplier;                           // 0x334(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SecondsToDestination;                              // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20E7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATargetedJumpingPad* GetDefaultObj();

	struct FVector CalculateVelocityFromJumpPad(bool IsInverse, bool bValidOnServer);
};

// 0x28 (0x368 - 0x340)
// Class IslandsofInsight.PuzzleLockedJumpingPad
class APuzzleLockedJumpingPad : public ATargetedJumpingPad
{
public:
	class UMaterialInterface*                    UnlockedMat;                                       // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASophiaCharacter*>              UnlockedPlayers;                                   // 0x348(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	class APuzzleBase*                           LockingPuzzle;                                     // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20E8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APuzzleLockedJumpingPad* GetDefaultObj();

	void OnRep_UnlockedPlayers(const TArray<class ASophiaCharacter*>& Old);
	void NM_LaunchPlayer(class ASophiaCharacter* SophiaChar);
};

// 0x40 (0x260 - 0x220)
// Class IslandsofInsight.PuzzleRegistrationPlatform
class APuzzleRegistrationPlatform : public AActor
{
public:
	class ASophiaCharacter*                      OverlappingPlayer;                                 // 0x220(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         TriggerBox;                                        // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  VisualMesh;                                        // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AMultiplayerLaserPuzzleBase*           ParentPuzzle;                                      // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        PriorOverlapping;                                  // 0x250(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APuzzleRegistrationPlatform* GetDefaultObj();

	void OnParentPuzzleWorkersUpdate(TArray<struct FPuzzleCharInfo>& Solvers);
};

// 0x8 (0x3A8 - 0x3A0)
// Class IslandsofInsight.PuzzleScreenMarkerWidget
class UPuzzleScreenMarkerWidget : public UScreenMarkerWidgetBase
{
public:
	class APuzzleBase*                           RepresentedPuzzle;                                 // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPuzzleScreenMarkerWidget* GetDefaultObj();

};

// 0x8 (0x2E0 - 0x2D8)
// Class IslandsofInsight.PuzzleSolveNotificationContainer
class UPuzzleSolveNotificationContainer : public UNotificationsManagerContainer
{
public:
	TSubclassOf<class UMasteryProgressNotification> MasteryProgressNotificationClass;                  // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPuzzleSolveNotificationContainer* GetDefaultObj();

};

// 0x0 (0x228 - 0x228)
// Class IslandsofInsight.PyramidShadowTrigger
class APyramidShadowTrigger : public ATriggerBox
{
public:

	static class UClass* StaticClass();
	static class APyramidShadowTrigger* GetDefaultObj();

};

// 0x8 (0x268 - 0x260)
// Class IslandsofInsight.QFPMistakeBox
class UQFPMistakeBox : public UUserWidget
{
public:
	class UNewGridUI*                            LinkedUI;                                          // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQFPMistakeBox* GetDefaultObj();

	enum class ESlateVisibility GetBoxVisibility();
	void BP_SetIconStates(int32 ErrorCount);
	void BP_PlayMistakeAnim(int32 ErrorCount);
	void BP_Init();
};

// 0x0 (0x260 - 0x260)
// Class IslandsofInsight.QFPMistakeIcon
class UQFPMistakeIcon : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UQFPMistakeIcon* GetDefaultObj();

	void SetState(bool Error);
	void BP_SetState(bool Error);
};

// 0x8 (0x268 - 0x260)
// Class IslandsofInsight.QFPTierStreakDisplay
class UQFPTierStreakDisplay : public UUserWidget
{
public:
	class UNewGridUI*                            LinkedUI;                                          // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQFPTierStreakDisplay* GetDefaultObj();

	enum class ESlateVisibility GetDisplayVisibility();
	void BP_UpdateTier(int32 Tier);
	void BP_UpdateStreak(class FText& StreakMessage);
	void BP_UpdateSolvedCount(class FText& SolvedMessage);
	void BP_PlayTierUpgradeAnim();
	void BP_Init();
};

// 0x18 (0x238 - 0x220)
// Class IslandsofInsight.QFPVolume
class AQFPVolume : public AActor
{
public:
	class UBoxComponent*                         TheBox;                                            // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UInputWidget>              TutorialWidgetClass;                               // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputWidget*                          TutorialWidget;                                    // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AQFPVolume* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class IslandsofInsight.QuestData
class UQuestData : public UDataAsset
{
public:
	TArray<struct FQuestNamePair>                QuestsData;                                        // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FQuestNamePair>                SideQuestsData;                                    // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FQuestNamePair>                DailyQuestsData;                                   // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FQuestNamePair>                AutoQuestsData;                                    // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UQuestData* GetDefaultObj();

	void InitPlaceHolderQuests();
};

// 0x28 (0x2C0 - 0x298)
// Class IslandsofInsight.QuestInfoContainer
class UQuestInfoContainer : public USophiaUserWidget
{
public:
	class UVerticalBox*                          Box;                                               // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UQuestInfoWidget*>              Widgets;                                           // 0x2A0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        MaxWidgets;                                        // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTutorialHide;                                     // 0x2B4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AlwaysShowGlobalQuests;                            // 0x2B5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2110[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UQuestInfoWidget>          QuestInfoWidgetClass;                              // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuestInfoContainer* GetDefaultObj();

	void BPI_SlideIn(class UWorldQuest* Quest);
};

// 0x38 (0x2D0 - 0x298)
// Class IslandsofInsight.QuestInfoLineWidget
class UQuestInfoLineWidget : public USophiaUserWidget
{
public:
	bool                                         ObjectiveComplete;                                 // 0x298(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AwardsBorb;                                        // 0x299(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2116[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayedLine;                                     // 0x2A0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  DisplayedProgressLine;                             // 0x2B8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UQuestInfoLineWidget* GetDefaultObj();

	void InitializeQuestInfoLine();
};

// 0x68 (0x300 - 0x298)
// Class IslandsofInsight.QuestInfoWidget
class UQuestInfoWidget : public USophiaUserWidget
{
public:
	bool                                         bSideQuest;                                        // 0x298(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDungeon;                                          // 0x299(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllPuzzlesSolved;                                 // 0x29A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2117[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MainObjectiveCount;                                // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainObjectiveCompleteCount;                        // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2118[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UQuestInfoLineWidget>      QuestInfoLineClass;                                // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShouldDisplayBonus;                                // 0x2B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2119[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPanelWidget*                          Root;                                              // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TitleText;                                         // 0x2C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        GeneralProgressionText;                            // 0x2C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          IncompleteBox;                                     // 0x2D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          CompleteBox;                                       // 0x2D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          BonusBox;                                          // 0x2E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          BonusCompleteBox;                                  // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UQuestInfoLineWidget*>          AllChildren;                                       // 0x2F0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuestInfoWidget* GetDefaultObj();

};

// 0x10 (0x380 - 0x370)
// Class IslandsofInsight.QuestNotificationWidget
class UQuestNotificationWidget : public UNotificationWidget
{
public:
	int32                                        BlueOrbReward;                                     // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XPReward;                                          // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoldReward;                                        // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EQuestType                        QuestType;                                         // 0x37C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPertainsToBonusObjective;                         // 0x37D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_211E[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestNotificationWidget* GetDefaultObj();

	void BPC_InitNotification(class FText Text, enum class EQuestType Type, int32 Orbs, int32 Xp, int32 Gold);
};

// 0xE0 (0x108 - 0x28)
// Class IslandsofInsight.QuestObjective
class UQuestObjective : public UObject
{
public:
	uint8                                        Pad_2128[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayMessage;                                    // 0x30(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  DisplayMessageWhenCompleted;                       // 0x48(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TSet<int32>                                  PrereqIndices;                                     // 0x60(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bRemoveWhenDone;                                   // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOptional;                                         // 0xB1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceAwardBlueOrbsEvenIfNotOptional;              // 0xB2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumPuzzlesToSolve;                                 // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowMapMarkersInDungeon;                           // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class ADestinationLightPillar> DestinationPillar;                                 // 0xC0(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumCompleted;                                      // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UQuest*                                MyQuest;                                           // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADungeon*                              MyDungeon;                                         // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestObjective* GetDefaultObj();

	bool ShouldDisplay();
	bool PrereqChainIsComplete();
	bool PertainsToPuzzle(class APuzzleBase* Pb);
	bool IsOptional();
	bool IsGiveBorbOnCompletion();
	bool IsComplete(class ASophiaCharacter* Player);
	class FText GetProgressMessage();
	class FText GetDisplayMessage();
};

// 0x0 (0x108 - 0x108)
// Class IslandsofInsight.QuestObjective_CompleteDaily
class UQuestObjective_CompleteDaily : public UQuestObjective
{
public:

	static class UClass* StaticClass();
	static class UQuestObjective_CompleteDaily* GetDefaultObj();

};

// 0x0 (0x108 - 0x108)
// Class IslandsofInsight.QuestObjective_ConnectMeshes
class UQuestObjective_ConnectMeshes : public UQuestObjective
{
public:

	static class UClass* StaticClass();
	static class UQuestObjective_ConnectMeshes* GetDefaultObj();

};

// 0x28 (0x130 - 0x108)
// Class IslandsofInsight.QuestObjective_Interact
class UQuestObjective_Interact : public UQuestObjective
{
public:
	TArray<class USophiaClickableReference*>     ObjectiveInteractables;                            // 0x108(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AClickableBase*>                InteractedWith;                                    // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2130[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestObjective_Interact* GetDefaultObj();

};

// 0x0 (0x108 - 0x108)
// Class IslandsofInsight.QuestObjective_Mirabilis
class UQuestObjective_Mirabilis : public UQuestObjective
{
public:

	static class UClass* StaticClass();
	static class UQuestObjective_Mirabilis* GetDefaultObj();

};

// 0x60 (0x168 - 0x108)
// Class IslandsofInsight.QuestObjective_ParticularPuzzle
class UQuestObjective_ParticularPuzzle : public UQuestObjective
{
public:
	TArray<class USophiaPuzzleReference*>        ObjectivePuzzles;                                  // 0x108(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSet<TSoftObjectPtr<class APuzzleBase>>      PUZZLES;                                           // 0x118(0x50)(UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestObjective_ParticularPuzzle* GetDefaultObj();

};

// 0x8 (0x110 - 0x108)
// Class IslandsofInsight.QuestObjective_ParticularPuzzleProgress
class UQuestObjective_ParticularPuzzleProgress : public UQuestObjective
{
public:
	class USophiaPuzzleReference*                ObjectivePuzzle;                                   // 0x108(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuestObjective_ParticularPuzzleProgress* GetDefaultObj();

};

// 0x10 (0x118 - 0x108)
// Class IslandsofInsight.QuestObjective_ParticularPuzzleSolveDuration
class UQuestObjective_ParticularPuzzleSolveDuration : public UQuestObjective
{
public:
	TArray<struct FPuzzleAndSolveDurationConfiguration> ObjectivePuzzles;                                  // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuestObjective_ParticularPuzzleSolveDuration* GetDefaultObj();

};

// 0x60 (0x168 - 0x108)
// Class IslandsofInsight.QuestObjective_PuzzlesOfType
class UQuestObjective_PuzzlesOfType : public UQuestObjective
{
public:
	uint8                                        Pad_2133[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<TSoftClassPtr<class APuzzleBase>>       Types;                                             // 0x110(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bEncompassesAllPuzzles;                            // 0x160(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2134[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestObjective_PuzzlesOfType* GetDefaultObj();

};

// 0x58 (0x160 - 0x108)
// Class IslandsofInsight.QuestObjective_PuzzlesOfTypeCounting
class UQuestObjective_PuzzlesOfTypeCounting : public UQuestObjective
{
public:
	TSet<TSoftClassPtr<class APuzzleBase>>       Types;                                             // 0x108(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_2135[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestObjective_PuzzlesOfTypeCounting* GetDefaultObj();

};

// 0x10 (0x178 - 0x168)
// Class IslandsofInsight.QuestObjective_PuzzlesOfTypeRespawning
class UQuestObjective_PuzzlesOfTypeRespawning : public UQuestObjective_PuzzlesOfType
{
public:
	TArray<class APuzzleBase*>                   SolvedSeen;                                        // 0x168(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestObjective_PuzzlesOfTypeRespawning* GetDefaultObj();

};

// 0x68 (0x170 - 0x108)
// Class IslandsofInsight.QuestObjective_UniqueKIDPuzzlesOfTypeCounting
class UQuestObjective_UniqueKIDPuzzlesOfTypeCounting : public UQuestObjective
{
public:
	TArray<uint32>                               InteractedWithKIDs;                                // 0x108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSet<TSoftClassPtr<class APuzzleBase>>       Types;                                             // 0x118(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_2136[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestObjective_UniqueKIDPuzzlesOfTypeCounting* GetDefaultObj();

};

// 0x18 (0x250 - 0x238)
// Class IslandsofInsight.QuestPickup
class AQuestPickup : public AClickableBase
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropSpeed;                                         // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2138[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AQuestVendor*                          QuestVendor;                                       // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AQuestPickup* GetDefaultObj();

	void SelectPickup(class ASophiaCharacter* Player);
	bool OnConfirm(class ASophiaCharacter* Player);
	void DeselectPickup(class ASophiaCharacter* Player);
};

// 0x168 (0x218 - 0xB0)
// Class IslandsofInsight.QuestSystemComponent
class UQuestSystemComponent : public UActorComponent
{
public:
	uint8                                        Pad_2142[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UWorldQuest*>        Quests;                                            // 0xB8(0x50)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AQuestVendor*>                  QuestVendors;                                      // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2143[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UQuestData*                            QuestData;                                         // 0x168(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPinnedQuests;                                   // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberMainSideAutoPin;                             // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberDailyAutoPin;                                // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxActiveDailies;                                  // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumDailiesFromEasyPool;                            // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumDailiesFromMediumPool;                          // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumDailiesFromHardPool;                            // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DailyResetInterval;                                // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ResetTimeOffset;                                   // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2145[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWorldQuest*>                   ActiveSandboxQuests;                               // 0x198(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxActiveSandboxQuests;                            // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AutoResetInterval;                                 // 0x1AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UQuestData*                            QuestPlaceHolderData;                              // 0x1B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2146[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestSystemComponent* GetDefaultObj();

	void UpdateMaxSandboxQuests();
	TArray<struct FBlueOrbSourceData> UnwrapBorbChildren(struct FBlueOrbSourceData& InBorb);
	void TogglePinQuest(class FName& QuestIndex);
	void SetupDailies();
	void Server_UpdateQuestState(class FName& QuestID, const class FString& SerializedData, struct FKrakenAddBasicRewardsParams& Rewards, struct FBhvrAnalyticsEvent_ProgressionQuest& EventData);
	void Server_CheatQuestObjective();
	void Server_CheatQuest();
	void Server_AddQuest(class FName& QuestID);
	void Server_AddBlueOrb(struct FBhvrAnalyticsEvent_ProgressionQuest& EventData);
	void LoadQuestData();
	bool IsQuestValid(class FName& QuestID);
	TArray<class FName> GetCompletedActiveQuests();
	TArray<struct FBlueOrbSourceData> GetAllBlueOrbSourcesFormatted();
	TArray<struct FBlueOrbSourceDataForBP> GetAllBlueOrbSourceData();
	void CheatCompleteQuestObjective();
	void CheatCompleteQuest();
	void CancelDailyQuest(class FName& QuestID);
	void BPC_AnnounceNewQuest();
	void AddQuest(class FName& QuestID);
};

// 0x68 (0x2A0 - 0x238)
// Class IslandsofInsight.QuestVendor
class AQuestVendor : public AClickableBase
{
public:
	uint8                                        Pad_2148[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  HoverStaticMeshComponent;                          // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        QuestSpawnDistance;                                // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        QuestDropHeight;                                   // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AQuestPickup>              QuestPickupClass;                                  // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMarkerEmitter*                        MarkerEmitter;                                     // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ZoneDetectionDebug;                                // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMainMapZoneName                  VendorZone;                                        // 0x269(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2149[0x26];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                AvailableQuests;                                   // 0x290(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AQuestVendor* GetDefaultObj();

	void OpenActiveQuests();
	TArray<class AQuestPickup*> GetSpawnedQuests();
};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.QuestVendorMessage
class UQuestVendorMessage : public USophiaUserWidget
{
public:
	class URichTextBlock*                        TextBlock;                                         // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_214C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestVendorMessage* GetDefaultObj();

};

// 0xC8 (0x5B0 - 0x4E8)
// Class IslandsofInsight.RacingPuzzle
class ARacingPuzzle : public APuzzleBase
{
public:
	bool                                         bHasHardTimeLimit;                                 // 0x4E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2150[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExtraXpPerMilliSecondOptimization;                 // 0x4EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SandboxMilestoneAward;                             // 0x4F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastMilestoneReward;                               // 0x4F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSandboxMilestone>             SandboxMilestones;                                 // 0x4F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FText                                  StartInstructions;                                 // 0x508(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  RetryInstructions;                                 // 0x520(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<class ASophiaPlayerState*, struct FPlayerRacingMilestoneData> PlayerMilestoneDatas;                              // 0x538(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2152[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaGameState*                      GS;                                                // 0x590(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SandboxMilestonesOverriden;                        // 0x598(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2153[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARacingPuzzle* GetDefaultObj();

	void OnPlayerDisconnected(class AActor* A, enum class EEndPlayReason Reason);
	void BPI_NewlyCompleteMilestone(int32 Idx, int32 NumMilestones, float LocalBestSolveTime, float MilestoneTime);
};

// 0x148 (0x6F8 - 0x5B0)
// Class IslandsofInsight.RacingBalls
class ARacingBalls : public ARacingPuzzle
{
public:
	uint8                                        Pad_2163[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class URacingBallsMeshComponent*             Mesh_0;                                            // 0x5C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Mesh_0_InnerMesh;                                  // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class URacingBallsMeshComponent*>     ballMeshes;                                        // 0x5D0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          InnerMeshes;                                       // 0x5E0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        ReadyToRaceTime;                                   // 0x5F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2164[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            TimerEvent;                                        // 0x5F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CollectEvent;                                      // 0x600(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            OldCollectEvent;                                   // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseOldCollectSound;                               // 0x610(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2165[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SolvedColour;                                      // 0x614(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                ballMeshesTimeLeftNormalized;                      // 0x620(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2166[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               UnmarkedColour;                                    // 0x634(0xC)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               blueTeamColour;                                    // 0x640(0xC)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RedTeamColour;                                     // 0x64C(0xC)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<bool>                                 IsMarked;                                          // 0x658(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         beingSolved;                                       // 0x668(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2167[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastReadyToRaceTime;                               // 0x66C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ExitUponComplete;                                  // 0x670(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SolveValueOverriden;                               // 0x671(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2168[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LargestScale;                                      // 0x680(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2169[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CancelMessage;                                     // 0x6B8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class USphereComponent*>              Colliders;                                         // 0x6D0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_216A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         ClientInitialized;                                 // 0x6E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_216C[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARacingBalls* GetDefaultObj();

	void OnRep_unmarkedColour();
	void OnBallOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BP_UpdateOnSolve();
	void BP_OnUpdateRacingBallsVisual(class URacingBallsMeshComponent* Mesh, class UStaticMeshComponent* InnerMesh, int32 Index, float NormalizedTimeLeft, const struct FLinearColor& C, enum class ERacingBallsVisualState VisualState, bool CurrentlyBeingControlledByATeam);
	void BP_OnClientInitialized();
};

// 0x0 (0x4E0 - 0x4E0)
// Class IslandsofInsight.RacingBallsMeshComponent
class URacingBallsMeshComponent : public UStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class URacingBallsMeshComponent* GetDefaultObj();

};

// 0xB8 (0x2F0 - 0x238)
// Class IslandsofInsight.RacingCheckpointsMinigame
class ARacingCheckpointsMinigame : public AClickableBase
{
public:
	uint8                                        Pad_2178[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  StartingPlatformMesh;                              // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  beaconMesh;                                        // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UBoxComponent*>                 RacingCheckpointVolumes;                           // 0x258(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     CancelTeleportComponent;                           // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CheckpointScale;                                   // 0x270(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2179[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           CheckpointMesh;                                    // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    CheckpointMaterial;                                // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SoloRace;                                          // 0x290(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_217B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxRaceTime;                                       // 0x294(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_217C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UStaticMeshComponent*>          SpawnedCheckpointMeshes;                           // 0x2A8(0x10)(ExportObject, Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FCheckPointReachedEntry>       RacingCheckpointsReached;                          // 0x2B8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	bool                                         InRace;                                            // 0x2C8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_217D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              DynamicCheckpointMatInstance;                      // 0x2D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_217F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARacingCheckpointsMinigame* GetDefaultObj();

	void OnStartPlatformOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnStartPlatformExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnRep_SpawnedCheckpointMeshes();
	void OnRep_RacingCheckpointsReached();
	void OnRep_InRace();
	void OnCheckpointMeshOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x1C0 (0x6A8 - 0x4E8)
// Class IslandsofInsight.RacingMetaPuzzle
class ARacingMetaPuzzle : public APuzzleBase
{
public:
	TArray<class ARacingMetaPuzzleCollectible*>  Collectibles;                                      // 0x4E8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         Started;                                           // 0x4F8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2187[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ERacingMetaPuzzleState            CurState;                                          // 0x4FC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Failed;                                            // 0x500(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2188[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  TimerBaseMesh;                                     // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DaisMesh;                                          // 0x518(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DaisEmissiveMesh;                                  // 0x520(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DaisOverlapDetector;                               // 0x528(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            RoundStartSound;                                   // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            RoundEndSound;                                     // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RevolveTime;                                       // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlyRadius;                                         // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DragonSize;                                        // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2189[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ARacingMetaPuzzleCollectible> CollectibleClass;                                  // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxRounds;                                         // 0x558(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurRounds;                                         // 0x55C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FinalConeGoal;                                     // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CoOpStableScore;                                   // 0x564(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CoOpTentativeScore;                                // 0x568(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AdditionalConesPerRound;                           // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FConeNumberMilestone>          Milestones;                                        // 0x570(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        TimeUntilInitialStart;                             // 0x580(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_218A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollectionTime;                                    // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_218B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WisdomPerBall;                                     // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalConesAngleRange;                         // 0x594(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASophiaPlayerState*>            Participants;                                      // 0x598(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class ASophiaPlayerState*>            ParticipantsInCurrentCollection;                   // 0x5A8(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        CollectiblesLeft;                                  // 0x5B8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DropLocation;                                      // 0x5BC(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropSpeed;                                         // 0x5C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PoolSize;                                          // 0x5CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberCollectiblesToSpawn;                         // 0x5D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinGenerationScore;                                // 0x5D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxScoreLossFromProximity;                         // 0x5D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRangeAccountedForNoProximity;                   // 0x5DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxScoreLossFromDaisDistance;                      // 0x5E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScoreLossPerSameNumberOfRaycastsAlreadySpawned;    // 0x5E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxScoreFromRayCasts;                              // 0x5E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ScoreLossPerRaycastRequired;                       // 0x5EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RaycastNormalStep;                                 // 0x5F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinXYDistance;                                     // 0x5F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxZDistance;                                      // 0x5F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AntiVerticalityFactor;                             // 0x5FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         HaveAntiVerticalityScaleWithDistanceFromDais;      // 0x600(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_218C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxFlatIdealXYDistance;                            // 0x604(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSlopeOffsetAngle;                               // 0x608(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_218D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaGameState*                      GS;                                                // 0x610(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class ASophiaPlayerState*, struct FPlayerRacingMetaPuzzleScore> PlayerScores;                                      // 0x618(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_218E[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARacingMetaPuzzle* GetDefaultObj();

	void Server_Cancel(class ASophiaPlayerState* Player);
	void Overlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_started();
	void OnRep_failed();
	void OnRep_curState();
	void OnRep_curRounds();
	void OnRep_CollectiblesLeft();
	void NetMultiCast_TentativeScore(class ASophiaPlayerState* Player, int32 CollectibleCount);
	void NetMultiCast_NotifyMoreCones(int32 ConeCount);
	void NetMultiCast_NotifyDrop(class ASophiaPlayerState* P);
	void NetMultiCast_FinalScore(class ASophiaPlayerState* Player, int32 Score, bool ShowCollectionCount);
	void BP_OnLanded();
};

// 0x8 (0x228 - 0x220)
// Class IslandsofInsight.RacingMetaPuzzleAcceptableVolume
class ARacingMetaPuzzleAcceptableVolume : public AActor
{
public:
	class UBoxComponent*                         Volume;                                            // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ARacingMetaPuzzleAcceptableVolume* GetDefaultObj();

};

// 0x50 (0x288 - 0x238)
// Class IslandsofInsight.RacingMetaPuzzleCollectible
class ARacingMetaPuzzleCollectible : public AClickableBase
{
public:
	float                                        ChanceToBecomeSpeed;                               // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BeaconMaxSizeGrowth;                               // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BeaconGrowSpeed;                                   // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsSpeed;                                           // 0x244(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2191[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedTime;                                         // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2192[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      SpedUpChar;                                        // 0x250(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2193[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      Collector;                                         // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ARacingMetaPuzzle*                     RacingPuzzle;                                      // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Mesh;                                              // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  beacon;                                            // 0x278(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Collected;                                         // 0x280(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2194[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARacingMetaPuzzleCollectible* GetDefaultObj();

	void Overlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_isSpeed();
	void OnRep_collected();
};

// 0x20 (0x2B8 - 0x298)
// Class IslandsofInsight.RacingMetaWidget
class URacingMetaWidget : public USophiaUserWidget
{
public:
	class UProgressBar*                          RacingTimer;                                       // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            CentralText;                                       // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            TimerText;                                         // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ScoreText;                                         // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class URacingMetaWidget* GetDefaultObj();

};

// 0x40 (0x2D8 - 0x298)
// Class IslandsofInsight.RacingPuzzleWidget
class URacingPuzzleWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            YourTimeText;                                      // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            TimeLimitText;                                     // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ProgressText;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            CapturedText;                                      // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            BestTimeText;                                      // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentTime;                                       // 0x2C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeLimit;                                         // 0x2C4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21A1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ARacingPuzzle*                         ActivePuzzle;                                      // 0x2D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URacingPuzzleWidget* GetDefaultObj();

	void BP_ShowResultsPopup(class FText& TITLE);
	void BP_Show(class UTexture2D* PuzzleIcon);
	void BP_SetTeamColor(const struct FLinearColor& ControllerTeamColor, const struct FLinearColor& PlayerTeamColor);
	void BP_RemoveResultsPopup();
	void BP_Hide();
	void BP_DisplayInstructions(class FText& Instructions);
	void BP_AddScore(class FText& Label, class FText& Value, class FText& Delta, float DeltaSign);
	void BP_AddMilestone(struct FMilestoneResultData& Data);
};

// 0x1C8 (0x6B0 - 0x4E8)
// Class IslandsofInsight.RacingRings
class ARacingRings : public APuzzleBase
{
public:
	uint8                                        Pad_21B5[0x11];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ERingIntState                     State;                                             // 0x4F9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21B6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  StartInstructions;                                 // 0x500(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  GoalMessage;                                       // 0x518(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  TeleportMessage;                                   // 0x530(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        AbandonmentCheckInterval;                          // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbandonmentDistance;                               // 0x54C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResultsTimeout;                                    // 0x550(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPoweredMesh*                          StartingPlatform;                                  // 0x558(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StartingBeacon;                                    // 0x560(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         StartingCollider;                                  // 0x568(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERacingRingsHighlightType         HighlightType;                                     // 0x570(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoPostProcess;                                    // 0x571(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    RacingRingsPostProcessRef;                         // 0x578(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              RacingRingsPostProcessDynamicMaterial;             // 0x580(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlatformStepHeight;                                // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowCollisionBox;                                  // 0x58C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URacingRingsMeshComponent*             RingTemplate;                                      // 0x590(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  RingCollisionTemplate;                             // 0x598(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class URacingRingsMeshComponent*>     Rings;                                             // 0x5A0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>          RingColliders;                                     // 0x5B0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UPrimitiveComponent*>           WarningPostProcessPrimitives;                      // 0x5C0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class ALandscapeProxy*>               WarningPostProcessLandscapes;                      // 0x5D0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        NumMarkedRings;                                    // 0x5E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21BB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultScale;                                      // 0x5E4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerfectRadiusinCm;                                 // 0x5E8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GreatRadiusinCm;                                   // 0x5EC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PerfectScoreGain;                                  // 0x5F0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GreatScoreGain;                                    // 0x5F4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultScoreGain;                                  // 0x5F8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21BD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SandboxMilestoneAwards;                            // 0x600(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSandboxScoreMilestone>        SandboxMilestones;                                 // 0x610(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class ASophiaPlayerState*, struct FPlayerScoreMilestoneData> PlayerMilestoneDatas;                              // 0x620(0x50)(NativeAccessSpecifierPublic)
	class UFMODEvent*                            CollectEvent;                                      // 0x670(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            FailEvent;                                         // 0x678(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            DisengageEvent;                                    // 0x680(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameMessage*                          MyGameMessage;                                     // 0x688(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21BF[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARacingRings* GetDefaultObj();

	void OnStartExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnStartEnter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRingOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnPlayerDisconnected(class AActor* A, enum class EEndPlayReason Reason);
	void OnInteractionStateChange(enum class ERingIntState NewState, enum class ERingIntState OldState);
	int32 GetMostRecentPlayerScore();
	void ForceExit();
	void BPI_OnRingAcquire(class URacingRingsMeshComponent* Ring, bool bEndOfRace, class ASophiaCharacter* Player);
	void BP_PostClientInit();
};

// 0x10 (0x4F0 - 0x4E0)
// Class IslandsofInsight.RacingRingsMeshComponent
class URacingRingsMeshComponent : public UStaticMeshComponent
{
public:
	bool                                         Marked;                                            // 0x4E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21C3[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URacingRingsMeshComponent* GetDefaultObj();

};

// 0x18 (0x2B0 - 0x298)
// Class IslandsofInsight.RacingRingsScoreWidget
class URacingRingsScoreWidget : public USophiaUserWidget
{
public:
	float                                        BronzePercentage;                                  // 0x298(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SilverPercentage;                                  // 0x29C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoldPercentage;                                    // 0x2A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ARacingRings*                          ActiveRings;                                       // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URacingRingsScoreWidget* GetDefaultObj();

	class FText GetScoreText();
	void BP_ShowResultsPopup(class UTexture2D* PuzzleIcon, class FText& TITLE, bool ShowPreviousScore, bool ShowRestartButton);
	void BP_ShowProgressPanel(class UTexture2D* PuzzleIcon);
	void BP_SetMilestoneThresholds(float Bronze, float Silver, float Gold);
	void BP_SetCurrentProgress(float Percentage);
	void BP_SetBestProgress(float Percentage);
	void BP_Hide();
	void BP_DisplayInstructions(class FText& Instructions);
	void BP_AddScore(class FText& Label, class FText& Value);
};

// 0x50 (0x538 - 0x4E8)
// Class IslandsofInsight.RaymarchFractalMatch
class ARaymarchFractalMatch : public APuzzleBase
{
public:
	int8                                         ClassIndex;                                        // 0x4E8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AMouseControlledRaymarchFractal*       MovableFractal;                                    // 0x4F0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AMouseControlledRaymarchFractal*       TargetFractal;                                     // 0x4F8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetX;                                           // 0x500(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetY;                                           // 0x504(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WinThreshold;                                      // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AMouseControlledRaymarchFractal> FractalClass;                                      // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AMouseControlledRaymarchFractal>> AvailableClasses;                                  // 0x518(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MovablePreview;                                    // 0x528(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  TargetPreview;                                     // 0x530(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARaymarchFractalMatch* GetDefaultObj();

};

// 0x18 (0x238 - 0x220)
// Class IslandsofInsight.RespawningPuzzlesVolume
class ARespawningPuzzlesVolume : public AActor
{
public:
	TArray<class UPuzzleSpawningComponentWithAutoDeletion*> ChildrenPuzzleSpawners;                            // 0x220(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bKeepSpawningAfterInitial;                         // 0x230(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumberToKeepSpawned;                               // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARespawningPuzzlesVolume* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class IslandsofInsight.RichTextBlockInputKeyDecorator
class URichTextBlockInputKeyDecorator : public URichTextBlockDecorator
{
public:
	struct FGameplayTag                          KeyGroup;                                          // 0x28(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TranslateY;                                        // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalPadding;                                 // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KeyScale;                                          // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FKeyScaleOverride>             ScaleOverrides;                                    // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FKey>                          AlwaysIconKeys;                                    // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class URichTextBlockInputKeyDecorator* GetDefaultObj();

};

// 0x10 (0x4F8 - 0x4E8)
// Class IslandsofInsight.RingFind
class ARingFind : public APuzzleBase
{
public:
	class ARingFindGrouping*                     ParentGroup;                                       // 0x4E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERingFindType                     RingFindType;                                      // 0x4F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21DE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARingFind* GetDefaultObj();

	void Solve(class ASophiaCharacter* Player);
	void SetEmissiveColour(const struct FVector& Colour);
	bool InBox(const struct FVector& HitLoc, const struct FVector& B1, const struct FVector& B2, int32 Axis);
	struct FVector GetLineBoundsIntersectionPoint(const struct FVector& B1, const struct FVector& B2, const struct FVector& L1, const struct FVector& L2);
	bool GetIntersection(float FDst1, float FDst2, const struct FVector& P1, const struct FVector& P2, struct FVector* HitLoc);
};

// 0x18 (0x510 - 0x4F8)
// Class IslandsofInsight.RingFindGrouping
class ARingFindGrouping : public ARingFind
{
public:
	float                                        TotalSolveValue;                                   // 0x4F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21DF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ARingFind*>                     RingFinds;                                         // 0x500(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ARingFindGrouping* GetDefaultObj();

};

// 0x18 (0x238 - 0x220)
// Class IslandsofInsight.RollercoasterBall
class ARollercoasterBall : public AActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21E1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARollercoasterBall* GetDefaultObj();

};

// 0x70 (0x2A8 - 0x238)
// Class IslandsofInsight.RollercoasterButton
class ARollercoasterButton : public AClickableBase
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         buttonCollider;                                    // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BaseButtonMaterial;                                // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              ButtonMaterial;                                    // 0x250(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ARollercoasterManipulator*>     Gates;                                             // 0x258(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class ARollercoasterButton*>          Buttons;                                           // 0x268(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                        PlatformStepHeight;                                // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowCollisionBox;                                  // 0x27C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         PlayerTriggerOnly;                                 // 0x27D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         PressIsPermanent;                                  // 0x27E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsTimer;                                           // 0x27F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimerDuration;                                     // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          Color;                                             // 0x284(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Countingdown;                                      // 0x294(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21EB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InternalTimer;                                     // 0x298(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Index;                                             // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsPairedWithOthers;                                // 0x2A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21EC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARollercoasterButton* GetDefaultObj();

	void OnStopPress(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnStartPress(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x238 - 0x238)
// Class IslandsofInsight.RollercoasterManipulator
class ARollercoasterManipulator : public AClickableBase
{
public:

	static class UClass* StaticClass();
	static class ARollercoasterManipulator* GetDefaultObj();

};

// 0x48 (0x280 - 0x238)
// Class IslandsofInsight.RollercoasterGate
class ARollercoasterGate : public ARollercoasterManipulator
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BaseMaterialActive;                                // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BaseMaterialInactive;                              // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              MaterialInactive;                                  // 0x250(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              MaterialActive;                                    // 0x258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ActiveByDefault;                                   // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21EE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Index;                                             // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PairedWithOthers;                                  // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Active;                                            // 0x269(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21EF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Color;                                             // 0x26C(0x10)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21F0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARollercoasterGate* GetDefaultObj();

};

// 0x50 (0x270 - 0x220)
// Class IslandsofInsight.RollercoasterGravityField
class ARollercoasterGravityField : public AActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BaseMaterial;                                      // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              Material;                                          // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               NormalVector;                                      // 0x240(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Multiplier;                                        // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          Color;                                             // 0x250(0x10)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ARollercoasterBall*>            balls;                                             // 0x260(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARollercoasterGravityField* GetDefaultObj();

};

// 0x68 (0x2A0 - 0x238)
// Class IslandsofInsight.RollercoasterLauncher
class ARollercoasterLauncher : public ARollercoasterManipulator
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BaseMaterial;                                      // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              Material;                                          // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         Collider;                                          // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxChargeSeconds;                                  // 0x258(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinCharge;                                         // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        X;                                                 // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Y;                                                 // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Z;                                                 // 0x268(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChargeGainPerSecond;                               // 0x26C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsHoverPad;                                        // 0x270(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Hovering;                                          // 0x271(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Range;                                             // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          Color;                                             // 0x278(0x10)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ARollercoasterBall*>            balls;                                             // 0x288(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                        Charge;                                            // 0x298(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21F9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARollercoasterLauncher* GetDefaultObj();

};

// 0x70 (0x558 - 0x4E8)
// Class IslandsofInsight.RollercoasterPuzzle
class ARollercoasterPuzzle : public APuzzleBase
{
public:
	class UBoxComponent*                         GoalCollider;                                      // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PuzzleBound;                                       // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ResetButtonMesh;                                   // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         ResetButtonCollider;                               // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ARollercoasterBall*>            balls;                                             // 0x508(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class ARollercoasterGate*>            Gates;                                             // 0x518(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class ARollercoasterButton*>          Buttons;                                           // 0x528(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class AStaticMeshActor*>              Walls;                                             // 0x538(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                        PlatformStepHeight;                                // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowCollisionBox;                                  // 0x54C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2204[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      Player;                                            // 0x550(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARollercoasterPuzzle* GetDefaultObj();

	void OnResetButtonStopPress(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnResetButtonStartPress(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnFinish(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x128 (0x360 - 0x238)
// Class IslandsofInsight.RollingCube
class ARollingCube : public AClickableBase
{
public:
	class UPoweredMesh*                          CubeMesh;                                          // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        brightGlow;                                        // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DarkGlow;                                          // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2207[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector4                              DefaultColour;                                     // 0x250(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector4                              IceColour;                                         // 0x260(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector4                              SolvedColour;                                      // 0x270(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector4                              LockedColour;                                      // 0x280(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    GoalMeshMaterial;                                  // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CubeFailToMoveEvent;                               // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CubeMoveEvent;                                     // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CubeSelectEvent;                                   // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CubeFinishedEvent;                                 // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationSinkRate;                                 // 0x2B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationFinalHeight;                              // 0x2BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationDoneAtFraction;                           // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationFinalScaleFactor;                         // 0x2C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ARollingCubeGridBase*                  RollingCubeGrid;                                   // 0x2C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASophiaCharacter*                      OwningPlayer;                                      // 0x2D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  GoalMesh;                                          // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsMutexCube;                                       // 0x2E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         MetaSolved;                                        // 0x2E1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2208[0x7E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARollingCube* GetDefaultObj();

	void SetMetaSolved(bool IsSolved);
	void OnRep_GoalMesh();
	void BP_InitCube();
	void BP_CubeLands();
};

// 0x1B8 (0x6E0 - 0x528)
// Class IslandsofInsight.RollingCubeGridBase
class ARollingCubeGridBase : public APuzzleContainerBase
{
public:
	uint8                                        Pad_2214[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInstancedStaticMeshComponent*         TraversableISM;                                    // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         blockISM;                                          // 0x548(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         GoalISM;                                           // 0x550(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         PaintedISM;                                        // 0x558(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         IceISM;                                            // 0x560(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumCubes;                                          // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2215[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                CubeStartX;                                        // 0x570(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CubeStartY;                                        // 0x580(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CubeLength;                                        // 0x590(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CubeWidth;                                         // 0x5A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CubeHeight;                                        // 0x5B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CurrentX;                                          // 0x5C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CurrentY;                                          // 0x5D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CurrentLength;                                     // 0x5E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CurrentWidth;                                      // 0x5F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                CurrentHeight;                                     // 0x600(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2217[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraComponent*                      TopDownCameraComponent;                            // 0x620(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2218[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        Pedestals;                                         // 0x638(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class ARollingCube*>                  RollingCube;                                       // 0x648(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UGridInputComponent*                   GridInputComp;                                     // 0x658(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        GridLength;                                        // 0x660(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        GridWidth;                                         // 0x661(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         HasMutexCubes;                                     // 0x662(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2219[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ARollingCube>              CubeClass;                                         // 0x668(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    PedestalClass;                                     // 0x670(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  GridPreview;                                       // 0x678(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  GridBase;                                          // 0x680(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GridLayout;                                        // 0x688(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RollingSpeed;                                      // 0x698(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastRollingSpeed;                                  // 0x69C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EControlMethods                   ControlMethods;                                    // 0x6A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_221B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoMoveHasteCoefficient;                          // 0x6A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DpadAutoMoveCooldown;                              // 0x6A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ManualCamera;                                      // 0x6AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_221C[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                PaintoverISMState;                                 // 0x6B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_221D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UStandardGridUI>           StandardGridUIClass;                               // 0x6D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStandardGridUI*                       StandardGridUIWidget;                              // 0x6D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARollingCubeGridBase* GetDefaultObj();

	void SetCubeMaterial(class UMaterialInterface* Mat, bool CallInit, int32 Index);
	void NetMultiCast_RollCube(enum class EDirections Direction, int32 CubeIndex, bool AbleToRoll, class ASophiaCharacter* Sender, int32 X, int32 Y, int32 Length, int32 Width, int32 Height);
	void NetMultiCast_ClaimCube(class ASophiaCharacter* Player, int32 CubeIndex, bool CLAIM, bool SOLVED);
	void BPI_ExitPuzzle();
	void BPI_EnterPuzzle();
	void BP_UpdatePaintedTiles();
};

// 0xA8 (0x788 - 0x6E0)
// Class IslandsofInsight.RollingCubeGridMeta
class ARollingCubeGridMeta : public ARollingCubeGridBase
{
public:
	bool                                         bLoadSP;                                           // 0x6E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_221E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                OriginFile;                                        // 0x6E8(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RollCubeSolveReward;                               // 0x6F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_221F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInstancedStaticMeshComponent*         SolveLaserISM;                                     // 0x700(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           GoalStaticMesh;                                    // 0x708(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinCubeSize;                                       // 0x710(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxCubeSize;                                       // 0x714(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberGenerationPaths;                             // 0x718(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinGenerationNumberOfMoves;                        // 0x71C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxGenerationNumberOfMoves;                        // 0x720(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberObstacleClumps;                              // 0x724(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinObstacleClumpSize;                              // 0x728(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxObstacleClumpSize;                              // 0x72C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APowerCore>                PowerCoreClass;                                    // 0x730(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RelativeCoreSpawnHeight;                           // 0x738(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SpawnCore;                                         // 0x73C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2221[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                Replicated_metatiles;                              // 0x748(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<uint8>                                Replicated_cubeData;                               // 0x758(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2222[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARollingCubeGridMeta* GetDefaultObj();

};

// 0x18 (0x6F8 - 0x6E0)
// Class IslandsofInsight.RollingCubeGridMulti
class ARollingCubeGridMulti : public ARollingCubeGridBase
{
public:
	bool                                         FitToAvailableArea;                                // 0x6E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2224[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             AvailableArea;                                     // 0x6E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnsureLandscapeOrientation;                        // 0x6EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2226[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceDelay;                                     // 0x6F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2227[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARollingCubeGridMulti* GetDefaultObj();

	struct FRollingCubeMultiPuzzleSpec GetSpec();
};

// 0x38 (0x258 - 0x220)
// Class IslandsofInsight.RollingCubeTile
class ARollingCubeTile : public AActor
{
public:
	class UStaticMeshComponent*                  TraversableMesh;                                   // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  blockMesh;                                         // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  GoalMesh;                                          // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  UnpaintedMesh;                                     // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PaintedMesh;                                       // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  IceMesh;                                           // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Traversable;                                       // 0x250(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2229[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARollingCubeTile* GetDefaultObj();

};

// 0x0 (0x298 - 0x298)
// Class IslandsofInsight.RosaryComboWidget
class URosaryComboWidget : public USophiaUserWidget
{
public:

	static class UClass* StaticClass();
	static class URosaryComboWidget* GetDefaultObj();

	enum class ESlateVisibility IsWidgetVisible();
	float GetProgressBarPercentage();
	class FText GetBonusText();
};

// 0x18 (0x2B0 - 0x298)
// Class IslandsofInsight.RosaryPartyComboWidget
class URosaryPartyComboWidget : public USophiaUserWidget
{
public:
	class UProgressBar*                          ComboTimer;                                        // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ComboText;                                         // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            BonusText;                                         // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class URosaryPartyComboWidget* GetDefaultObj();

};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.RosaryPartyLeaderboardWidget
class URosaryPartyLeaderboardWidget : public USophiaUserWidget
{
public:
	class UVerticalBox*                          LeaderboardVerticalBox;                            // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UTextBlock>                TextBoxClass;                                      // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class URosaryPartyLeaderboardWidget* GetDefaultObj();

};

// 0x80 (0x630 - 0x5B0)
// Class IslandsofInsight.RosarySpeedRound
class ARosarySpeedRound : public ARacingPuzzle
{
public:
	uint8                                        Pad_222C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESpeedRosaryIntState              State;                                             // 0x5D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_222D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbandonmentDistance;                               // 0x5D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StartPlatform;                                     // 0x5D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         StartingColliderSmall;                             // 0x5E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         StartingColliderLarge;                             // 0x5E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ARosarySpeedrunSpawnVolume*>    RosarySpawnVolumes;                                // 0x5F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        MinRosaryRequirement;                              // 0x600(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_222E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CancelMessage;                                     // 0x608(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_222F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARosarySpeedRound* GetDefaultObj();

	void OnStartPlatformOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnStartPlatformExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BP_EndRound();
};

// 0x40 (0x2D8 - 0x298)
// Class IslandsofInsight.RosarySpeedRoundWidget
class URosarySpeedRoundWidget : public USophiaUserWidget
{
public:
	class UTextBlock*                            YourTimeText;                                      // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            TimeLimitText;                                     // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ProgressText;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            CapturedText;                                      // 0x2B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            BestTimeText;                                      // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentTime;                                       // 0x2C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeLimit;                                         // 0x2C4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2231[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ARosarySpeedRound*                     ActivePuzzle;                                      // 0x2D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URosarySpeedRoundWidget* GetDefaultObj();

	void BP_ShowResultsPopup(class FText& TITLE);
	void BP_Show(class UTexture2D* PuzzleIcon);
	void BP_SetTeamColor(const struct FLinearColor& ControllerTeamColor, const struct FLinearColor& PlayerTeamColor);
	void BP_RemoveResultsPopup();
	void BP_Hide();
	void BP_DisplayInstructions(class FText& Instructions);
	void BP_AddScore(class FText& Label, class FText& Value, class FText& Delta, float DeltaSign);
	void BP_AddMilestone(struct FMilestoneResultData& Data);
};

// 0x30 (0x250 - 0x220)
// Class IslandsofInsight.RosarySpeedrunSpawnVolume
class ARosarySpeedrunSpawnVolume : public AActor
{
public:
	uint8                                        Pad_2232[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASpeedrunRosary>           RosaryClass;                                       // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumRosariesToSpawn;                                // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2233[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         SpawnArea;                                         // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASpeedrunRosary*>               AllRosaries;                                       // 0x240(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ARosarySpeedrunSpawnVolume* GetDefaultObj();

};

// 0x278 (0x2A0 - 0x28)
// Class IslandsofInsight.RtmConnection
class URtmConnection : public UObject
{
public:
	uint8                                        Pad_2236[0x270];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          RetryTimerHandle;                                  // 0x298(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URtmConnection* GetDefaultObj();

	void HandleNewConnection();
	void HandleMessage(const class FString& Message);
	void HandleConnectionError(const class FString& Error);
	void HandleClose(int32 StatusCode, const class FString& Reason, bool bWasClean);
};

// 0xE8 (0x348 - 0x260)
// Class IslandsofInsight.RuleBox
class URuleBox : public UUserWidget
{
public:
	uint8                                        Pad_2237[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                RuleImage;                                         // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                RuleBoxStatusEffect;                               // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        RuleText;                                          // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                StatusBar;                                         // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, struct FGridRuleData>    Materials;                                         // 0x2C0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    AvoidPatternMaterial;                              // 0x310(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDataTable*>                    TextStyles;                                        // 0x318(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTexture2DDynamic*                     PatternTexture;                                    // 0x328(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<uint8>                                TextureBytes;                                      // 0x330(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2238[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URuleBox* GetDefaultObj();

	void BP_UpdateStatus(bool ShowBar);
	void BP_PlayOpeningAnims();
};

// 0x28 (0x288 - 0x260)
// Class IslandsofInsight.RuleBoxContainer
class URuleBoxContainer : public UUserWidget
{
public:
	uint8                                        Pad_2239[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class URuleBox>                  RuleBoxClass;                                      // 0x278(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          RuleContainer;                                     // 0x280(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class URuleBoxContainer* GetDefaultObj();

	class FText GetRuleContainerText();
	enum class ESlateVisibility GetContainerVisibility();
};

// 0x28 (0x248 - 0x220)
// Class IslandsofInsight.RunePrereqWire
class ARunePrereqWire : public AActor
{
public:
	class USceneComponent*                       Source;                                            // 0x220(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Target;                                            // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_223A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  Mesh;                                              // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    OnMaterial;                                        // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARunePrereqWire* GetDefaultObj();

	void BP_ActivateWire();
};

// 0x60 (0x298 - 0x238)
// Class IslandsofInsight.RyoanjiObstacle
class ARyoanjiObstacle : public AClickableBase
{
public:
	int32                                        MatCrystalTimeOffsetIndex;                         // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatCrystalSolvedIndex;                             // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ARyoanjiPuzzle*                        ParentPuzzle;                                      // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_223B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  LineMeshComponent;                                 // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  CrystalMesh;                                       // 0x278(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialNeutral;                                   // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialActivated;                                 // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialSolved;                                    // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARyoanjiObstacle* GetDefaultObj();

	void BP_UpdateOnSolve();
};

// 0x118 (0x640 - 0x528)
// Class IslandsofInsight.RyoanjiPuzzle
class ARyoanjiPuzzle : public APuzzleContainerBase
{
public:
	uint8                                        Pad_2240[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  PlatformMeshComponent;                             // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostWorkTickComponent*                TickComponent;                                     // 0x548(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         PlayerDetectorBoxV2;                               // 0x550(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         ObstacleBaseISM;                                   // 0x558(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         ObstacleTopISM;                                    // 0x560(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         ObstacleBaseStencilISM;                            // 0x568(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         ObstacleTopStencilISM;                             // 0x570(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*         LaserISM;                                          // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         CullingBounds;                                     // 0x580(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    StoneCollisionActor;                               // 0x588(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumStoneRadius;                                // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxStoneRadius;                                    // 0x594(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClusterChance;                                     // 0x598(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberStonesBeforeCluster;                         // 0x59C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberGenerationTries;                             // 0x5A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SmallStoneScale;                                   // 0x5A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConeStoneScale;                                    // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TallStoneScale;                                    // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LaserHeight;                                       // 0x5B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolveDelay;                                        // 0x5B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRyoanjiVariant                       Variant;                                           // 0x5B8(0x3)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2241[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IntendedSize;                                      // 0x5BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       PlacedLocations;                                   // 0x5C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       PlacedScales;                                      // 0x5D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FRyoanjiPlayerState>           CurrentPlayingPlayers;                             // 0x5E0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                            LoopEvent;                                         // 0x5F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            LightUpEvent;                                      // 0x5F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            LightDownEvent;                                    // 0x600(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2242[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastServerSolveLocation;                           // 0x614(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SolveLocation;                                     // 0x620(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2243[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        CollisionActors;                                   // 0x630(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ARyoanjiPuzzle* GetDefaultObj();

	void StopPlaying(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void StartPlaying(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	float GetZOffsetAtCoordinate(float X, float Y);
	float GetLaserAbsoluteZAtCoordinate(float X, float Y);
	void BPI_SetObstacleState(int32 IsmIndex, enum class EObstacleState NewState);
	void BPI_SetObstacleHidden(int32 IsmIndex, bool Hidden);
};

// 0x10 (0x5D0 - 0x5C0)
// Class IslandsofInsight.SandboxGameMode
class ASandboxGameMode : public ASophiaGameMode
{
public:
	TArray<class AActor*>                        AllDungeons;                                       // 0x5C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASandboxGameMode* GetDefaultObj();

	void LaunchEvent();
};

// 0x20 (0x508 - 0x4E8)
// Class IslandsofInsight.SandboxGameState
class ASandboxGameState : public ASophiaGameState
{
public:
	TArray<struct FSpawnTimeOffsetCheatInfo>     SpawnRateCheatZoneAndPuzzleTypes;                  // 0x4E8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2246[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASandboxGameState* GetDefaultObj();

	void ServerExclusive_UpdateEventPrompt(int32 State);
};

// 0x158 (0x188 - 0x30)
// Class IslandsofInsight.SandboxProgressionData
class USandboxProgressionData : public UDataAsset
{
public:
	TMap<enum class EPuzzleCategory, class FText> PuzzleCategoryToDisplayText;                       // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class EPuzzleCategory, class UTexture2D*> PuzzleCategoryToImage;                             // 0x80(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class EPuzzleCategory, class UTexture2D*> PuzzleCategoryToBackgroundImage;                   // 0xD0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FSandboxProgressionZoneData>   ZoneDataEntries;                                   // 0x120(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_224A[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USandboxProgressionData* GetDefaultObj();

	struct FSandboxProgressionPuzzleCategoryData GetPuzzleCategoryData(enum class EMainMapZoneName ZONE, enum class EPuzzleCategory PuzzleCategory);
};

// 0x68 (0x3D8 - 0x370)
// Class IslandsofInsight.SandboxProgressionNotification
class USandboxProgressionNotification : public UNotificationWidget
{
public:
	class FText                                  ZoneName;                                          // 0x370(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  PuzzleCategoryName;                                // 0x388(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	int32                                        CurPuzzleNum;                                      // 0x3A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndingPuzzleNum;                                   // 0x3A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSandboxProgressionRewardData         RewardData;                                        // 0x3A8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USandboxProgressionNotification* GetDefaultObj();

};

// 0x2B0 (0x4B0 - 0x200)
// Class IslandsofInsight.SandboxZone
class USandboxZone : public UPuzzleSpawningComponentBase
{
public:
	bool                                         bInitialized;                                      // 0x200(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMainMapZoneName                  ZoneEnum;                                          // 0x201(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_224E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Priority;                                          // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastTimeReceivedRPC;                               // 0x208(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnedWorldPuzzleInfos_ServerReplicatedLatestVersion; // 0x20C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpawnedWorldPuzzleInfosDirtied_Server;             // 0x210(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_224F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnedContainers_ServerReplicatedLatestVersion;   // 0x214(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpawnedContainersDirtied_Server;                   // 0x218(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2250[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnedWorldPuzzleInfo>       SpawnedWorldPuzzleInfos_ServerReplicated;          // 0x220(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        SpawnedWorldPuzzleInfosCount_ServerReplicated;     // 0x230(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2251[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FContainerAndContainedPuzzleInfo> SpawnedContainers_ServerReplicated;                // 0x238(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        SpawnedContainersCount_ServerReplicated;           // 0x248(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2252[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASophiaPlayerState*>            DirtyPlayers_spawnedWorldPuzzleInfos;              // 0x250(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class ASophiaPlayerState*>            DirtyPlayers_spawnedContainers;                    // 0x260(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FTimerHandle                          TimerHandle_TrySpawnPuzzles;                       // 0x270(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, float>                   PuzzleTypeToLastNotificationTime;                  // 0x278(0x50)(Protected, NativeAccessSpecifierProtected)
	float                                        StaggeredSpawnInterval;                            // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumberOfPuzzlesSpawnedPerTick;                  // 0x2CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPuzzleData*>                   PertinentData;                                     // 0x2D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2253[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UPuzzleData*, class APuzzleBase*> PuzzleDataToSpawnedPuzzleInstance;                 // 0x380(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class APuzzleBase*, class UPuzzleData*> SpawnedPuzzleInstanceToPuzzleData;                 // 0x3D0(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2254[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APuzzleBase*>                   SpawnedPuzzles;                                    // 0x470(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UPuzzleContainerData*>          AlwaysSpawnContainerPuzzlesToBeSpawned;            // 0x480(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UPuzzleContainerData*>          DefaultContainerPuzzlesToBeSpawned;                // 0x490(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2255[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USandboxZone* GetDefaultObj();

};

// 0x130 (0x3C8 - 0x298)
// Class IslandsofInsight.ScreenMarkerContainer
class UScreenMarkerContainer : public USophiaUserWidget
{
public:
	class UCanvasPanel*                          RootCanvas;                                        // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPlayerInfoWidget>         PlayerConquestMarkerClass;                         // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPlayerInfoWidget>         PlayerInfoWidgetClass;                             // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPlayerLocationMarkerInfoWidget> PlayerLocationMarkerWidgetClass;                   // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UScreenMarkerWidgetBase>   GenericMarkerClass;                                // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UScreenMarkerWidgetBase>   QuestMarkerClass;                                  // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class APuzzleBase>, TSubclassOf<class UScreenMarkerWidgetBase>> SpecializedPuzzleMarkerClasses;                    // 0x2C8(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        ConquestMarkerDistance;                            // 0x318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerViewDistance;                                // 0x31C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerFocusDistance;                               // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxScreenMarkersPerTypeToCache;                    // 0x324(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FScreenMarkerWidgets> ClassesToCreatedWidgets;                           // 0x328(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UClass*, int32>                   ClassesToLastAssignedIndices;                      // 0x378(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UScreenMarkerContainer* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class IslandsofInsight.ScreenshotTaker
class UScreenshotTaker : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnScreenshotJpeg;                                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2256[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UScreenshotTaker* GetDefaultObj();

	void RequestScreenshot();
};

// 0x38 (0x258 - 0x220)
// Class IslandsofInsight.SecretSignifier
class ASecretSignifier : public AActor
{
public:
	uint8                                        Pad_225C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USophiaPuzzleReference*                ClueTriggerPuzzle;                                 // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USophiaPuzzleReference*                CompletionTriggerPuzzle;                           // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClueEntryID;                                       // 0x238(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChildActorComponent*                  ClueComponent;                                     // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ALorePickup*                           CluePickup;                                        // 0x250(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASecretSignifier* GetDefaultObj();

	bool IsSecretUnlocked(class ASophiaCharacter* Player);
	bool IsClueUnlocked(class ASophiaCharacter* Player);
	void BP_SetSecretActivated();
	void BP_SetClueActivated();
	void ActivateSecret();
	void ActivateClue();
};

// 0x98 (0x580 - 0x4E8)
// Class IslandsofInsight.Seek5
class ASeek5 : public APuzzleBase
{
public:
	TArray<class UStaticMeshComponent*>          ClickTriggerObjects;                               // 0x4E8(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USceneComponent*                       Root;                                              // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USophiaStaticMeshComponent*            Boundary;                                          // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USophiaStaticMeshComponent*            CentralPillar;                                     // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeek5HiddenObject*                    HiddenObject;                                      // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USeek5HiddenObject*>            HiddenObjects;                                     // 0x518(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                            PuzzleFindFailedEvent;                             // 0x528(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BoundaryDestinationScale;                          // 0x530(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeInSecondsToReachDestination;                   // 0x53C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeInSecondsToShrinkBoundary;                     // 0x540(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeInSecondsElapsed;                              // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BoundaryDestinationPosition;                       // 0x548(0xC)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2263[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CancelMessage;                                     // 0x558(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        CentralPillarClickDistance;                        // 0x570(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClickWarningMultiplier;                            // 0x574(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   LookTarget;                                        // 0x578(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASeek5* GetDefaultObj();

	enum class ESeek5State GetState();
	int32 GetNumberCompleted();
	class USeek5HiddenObject* GetHiddenObjectForUpgrade();
	void BP_ProcessStateConsequences_C();
	void BP_OnHiddenObjectFoundStateChanged_C(class USeek5HiddenObject* Object);
	void BP_OnComponentHovered_C(class UPrimitiveComponent* Object, bool Hover);
};

// 0x10 (0x4F0 - 0x4E0)
// Class IslandsofInsight.Seek5HiddenObject
class USeek5HiddenObject : public UStaticMeshComponent
{
public:
	bool                                         IsFound;                                           // 0x4E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2264[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USeek5HiddenObject* GetDefaultObj();

};

// 0x18 (0x2B0 - 0x298)
// Class IslandsofInsight.Seek5Widget
class USeek5Widget : public USophiaUserWidget
{
public:
	class UPanelWidget*                          RootPanel;                                         // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2265[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASeek5*                                LastSeek5;                                         // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USeek5Widget* GetDefaultObj();

	void BP_ProcessSeek5(class ASeek5* Seek5);
	void BP_CloseSeek5();
	void BP_ActivateSeek5(class ASeek5* Seek5);
};

// 0x40 (0x68 - 0x28)
// Class IslandsofInsight.SerializedPuzzle
class USerializedPuzzle : public UObject
{
public:
	class FString                                PuzzleType;                                        // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                BinaryData;                                        // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FString                                PoolName;                                          // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseInSandbox;                                     // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2266[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PuzzleAccessLevel;                                 // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLive;                                             // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2267[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        KrakenId;                                          // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USerializedPuzzle* GetDefaultObj();

};

// 0x20 (0x60 - 0x40)
// Class IslandsofInsight.AutoDeletingGenericPuzzleInfo
class UAutoDeletingGenericPuzzleInfo : public UAutoDeletionRespawningPuzzleInfo
{
public:
	class FString                                SerializedPuzzleData;                              // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LocalID;                                           // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAutoDeletingGenericPuzzleInfo* GetDefaultObj();

};

// 0x18 (0x250 - 0x238)
// Class IslandsofInsight.SerializedPuzzleSpawningComponentWithAutoDeletion
class USerializedPuzzleSpawningComponentWithAutoDeletion : public UPuzzleSpawningComponentWithAutoDeletion
{
public:
	TArray<class UAutoDeletingGenericPuzzleInfo*> PuzzleInfos;                                       // 0x238(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2269[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USerializedPuzzleSpawningComponentWithAutoDeletion* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class IslandsofInsight.ServerToKrakenAuthHandler
class UServerToKrakenAuthHandler : public UObject
{
public:
	class UGISKraken*                            KrakenSubsystem;                                   // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_226C[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UServerToKrakenAuthHandler* GetDefaultObj();

};

// 0x8 (0x320 - 0x318)
// Class IslandsofInsight.SettingsMenu
class USettingsMenu : public UInputWidget
{
public:
	uint8                                        Pad_2271[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USettingsMenu* GetDefaultObj();

	void SwapToMasteries(bool Toggled);
	void SwapToGameMenu();
	void SwapToBugReport();
	void SwapToAdmin();
	void Close();
	void BP_OnAdminUnlocked();
	void BP_BugReportMenu();
};

// 0x20 (0x2F8 - 0x2D8)
// Class IslandsofInsight.SideNotificationContainer
class USideNotificationContainer : public UNotificationsManagerContainer
{
public:
	TSubclassOf<class UNotificationWidget>       HelperBondEndNotificationClass;                    // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGeneralNotification>      WidgetClass;                                       // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USandboxProgressionNotification> SandboxProgressionNotificationClass;               // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            SparkTexture;                                      // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USideNotificationContainer* GetDefaultObj();

};

// 0x110 (0x138 - 0x28)
// Class IslandsofInsight.Skill
class USkill : public UObject
{
public:
	uint8                                        Pad_2276[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCheatToggled;                                     // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2277[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CheatPoints;                                       // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUpgradeTierInformation>       TierInformation;                                   // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        RequiredLevel;                                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2278[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x50(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FString                                Name;                                              // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  Description;                                       // 0x78(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           Image;                                             // 0x90(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxPoints;                                         // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2279[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SkillCosts;                                        // 0x120(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bVisibleInUI;                                      // 0x130(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_227A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USkill* GetDefaultObj();

	bool MeetsLevelRequirements();
	bool IsCheatToggled();
	TArray<struct FUpgradeTierInformation> GetUpgradeTierInformation();
	int32 GetSpentPoints();
	class FString GetSkillIdentifierName();
	class FText GetSkillDisplayName();
	class FText GetSkillDescription();
	int32 GetSkillCost();
	int32 GetRequiredLevel();
	int32 GetMaxPoints();
	struct FSlateBrush GetImage();
	bool CanUpgrade();
};

// 0x18 (0x48 - 0x30)
// Class IslandsofInsight.SkillTreeData
class USkillTreeData : public UDataAsset
{
public:
	TArray<class USkill*>                        Skills;                                            // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_227D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USkillTreeData* GetDefaultObj();

	void SortSkills();
	TArray<class USkill*> GetVisibleSkills();
	int32 GetTotalSpentSkillPoints();
	TArray<class USkill*> GetSkills();
	class USkill* GetSkill(const class FString& SkillName);
	int32 GetNextSkillPointGoldCost(const class FString& SkillName);
};

// 0x8 (0x2E0 - 0x2D8)
// Class IslandsofInsight.SlideInSideNotificationContainer
class USlideInSideNotificationContainer : public UNotificationsManagerContainer
{
public:
	TSubclassOf<class UMasteryUnlockNotificationWidget> EncyclopediaUnlockedNotificationClass;             // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USlideInSideNotificationContainer* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class IslandsofInsight.ASlider2D
class UASlider2D : public UActorComponent
{
public:
	float                                        SliderX;                                           // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliderY;                                           // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingSpeed;                                      // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESliderShape                      Shape;                                             // 0xBC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_227E[0x23];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UASlider2D* GetDefaultObj();

};

// 0x20 (0x2B8 - 0x298)
// Class IslandsofInsight.SocialMenuPreliminaryWidget
class USocialMenuPreliminaryWidget : public USophiaUserWidget
{
public:
	class UPanelWidget*                          Root;                                              // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerHoldProgress;                                // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_227F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetPlayerName;                                  // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USocialMenuPreliminaryWidget* GetDefaultObj();

};

// 0xC8 (0x178 - 0xB0)
// Class IslandsofInsight.SocialSystemComponent
class USocialSystemComponent : public UActorComponent
{
public:
	TArray<struct FPersistentPlayerReference>    BlockedPlayers;                                    // 0xB0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPublic)
	class ASophiaPlayerState*                    FriendRequestPlayer;                               // 0xC0(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class ELocationPingType, TSubclassOf<class ALocationPing>> PingTypeToClass;                                   // 0xC8(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FLocationPingInfo>             LatestUpdatedLocationPings;                        // 0x118(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                        ChirpCooldownCount;                                // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChirpSendCooldownTime;                             // 0x12C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PingCooldownTriggerWindow;                         // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PingCooldownTriggerThreshold;                      // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                MapMarkerCountByUpgradeLevel;                      // 0x138(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        DistanceBoundMarkerDistance;                       // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2292[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDirectPingEvent>              PingLogs;                                          // 0x150(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                LastSocialPingSendTimesInCooldown;                 // 0x160(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class ALocationPing*                         HoveredHelpPing;                                   // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USocialSystemComponent* GetDefaultObj();

	enum class EPingMessageAttemptResult TrySendPingMessage_C(class ASophiaPlayerState* Target, const struct FPlayerPingMessage& PingMessage);
	enum class EPingMessageAttemptResult TrySendPartyInviteByKrakenId_C(const class FString& TargetKrakenUserId);
	enum class EPingMessageAttemptResult TrySendPartyInvite_C(class ASophiaPlayerState* Target);
	enum class EPingMessageAttemptResult TrySendGridInvite_C(class ASophiaPlayerState* Invitee);
	class ALocationPing* TrySendCreateLocationPing(const struct FVector& Loc, enum class ELocationPingType PingType, class USceneComponent* HitComponent, class APuzzleBase* Puzzle);
	bool TryRemoveLocationPing_C(class ALocationPing* MapMarker);
	void TryEstablishHelperBond();
	void Server_UpdateLocationPings(TArray<struct FLocationPingInfo>& UndirectedLocationPings);
	void Server_TryEstablishHelperBond(const struct FLocationPingInfo& PingInfo);
	void Server_SetBlockedPlayers(TArray<struct FPersistentPlayerReference>& BlockedPlayersList);
	void Server_SendPingMessage(class ASophiaPlayerState* InTarget, class FText& InText);
	void Server_SendGridInvite(class ASophiaPlayerState* Invitee);
	void Server_SendFriendRequest(class ASophiaPlayerState* Target);
	void Server_RemoveFriendRequest();
	void Server_BlockUnblock(const struct FPersistentPlayerReference& SocialPlayerRef, bool bLock);
	void NetMulti_UpdateLocationPings(TArray<struct FLocationPingInfo>& Pings);
	bool IsFriendsWith(const class FString& KrakenId);
	bool HasBlockedPlayer(const class FString& KrakenId);
	int32 GetMaxLocationPingCount(enum class ELocationPingType Type);
	void Client_TryEstablishHelperBond(bool HasHelperBond, const struct FLocationPingInfo& PingInfo);
	void Client_SendPingMessage(class ASophiaPlayerState* Sender, class FText& InText);
	void Client_RemoveGridHelpMarker();
	void Client_OnMessageSentByPlayer(class ASophiaPlayerState* Sender);
	bool CanSendCooldownLocationPings();
	bool CanSee(struct FLocationPingInfo* Ping);
	void BPC_TryRemoveFriend_C(const struct FPersistentPlayerReference& Target);
	void BPC_TryAddFriend_C(class ASophiaPlayerState* Target);
	void BPC_RejectFriendRequest();
	void BPC_AcceptFriendRequest();
	void BlockUnblock_C(class ASophiaPlayerState* Target, bool bLock);
};

// 0x68 (0x90 - 0x28)
// Class IslandsofInsight.SocketRSThread
class USocketRSThread : public UObject
{
public:
	uint8                                        Pad_2293[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USocketRSThread* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class IslandsofInsight.SophiaActorReferenceBase
class USophiaActorReferenceBase : public UObject
{
public:
	uint8                                        Pad_2294[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LocalID;                                           // 0x38(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        KrakenId;                                          // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2295[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CachedReference;                                   // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2296[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaActorReferenceBase* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class IslandsofInsight.SophiaPuzzleReference
class USophiaPuzzleReference : public USophiaActorReferenceBase
{
public:
	TSoftObjectPtr<class APuzzleBase>            Puzzle;                                            // 0x68(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USophiaPuzzleReference* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class IslandsofInsight.SophiaClickableReference
class USophiaClickableReference : public USophiaActorReferenceBase
{
public:
	TSoftObjectPtr<class AClickableBase>         Clickable;                                         // 0x68(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USophiaClickableReference* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class IslandsofInsight.SophiaRuneReference
class USophiaRuneReference : public USophiaActorReferenceBase
{
public:
	TSoftObjectPtr<class ASophiaRune>            Rune;                                              // 0x68(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USophiaRuneReference* GetDefaultObj();

};

// 0xA8 (0x360 - 0x2B8)
// Class IslandsofInsight.SophiaAnimInstance
class USophiaAnimInstance : public UAnimInstance
{
public:
	struct FVector2D                             AimOffset;                                         // 0x2B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Direction;                                         // 0x2C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Speed;                                             // 0x2C4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocomotionPlaySpeed;                               // 0x2C8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurnPlaySpeed;                                     // 0x2CC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        YawDelta;                                          // 0x2D0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RootYawOffset;                                     // 0x2D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DirectionalBlendValue;                             // 0x2D8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiagonalScaleAmount;                               // 0x2DC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInAir;                                          // 0x2E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsFlying;                                         // 0x2E1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRecalling;                                        // 0x2E2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWantsToMove;                                      // 0x2E3(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrouching;                                      // 0x2E4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGlidingAimOffsetEnabled;                          // 0x2E5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2299[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      PlayerRef;                                         // 0x2E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECardinalDirections               CardinalDirections;                                // 0x2F0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_229A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVelocityBlend                        VelocityBlend;                                     // 0x2F4(0x10)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLeanAmount                           LeanAmount;                                        // 0x304(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_229B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DiagonalCurve;                                     // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Acceleration;                                      // 0x318(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Velocity;                                          // 0x324(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              Rotation;                                          // 0x330(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              RootRotation;                                      // 0x33C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_229C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaAnimInstance* GetDefaultObj();

	float GetRelevantAnimTimeSetValue(int32 MachineIndex, int32 StateIndex);
};

// 0x0 (0x480 - 0x480)
// Class IslandsofInsight.SophiaBoxComponent
class USophiaBoxComponent : public UBoxComponent
{
public:

	static class UClass* StaticClass();
	static class USophiaBoxComponent* GetDefaultObj();

};

// 0x888 (0xD40 - 0x4B8)
// Class IslandsofInsight.SophiaCharacter
class ASophiaCharacter : public ACharacter
{
public:
	uint8                                        Pad_22E2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToOpenSocialMenu;                              // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      SocialMenuPotentialTarget;                         // 0x4D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E4[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCustomizationData                    MaleCustomizationData;                             // 0x514(0x28)(BlueprintVisible, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FCustomizationData                    CustomizationData;                                 // 0x53C(0x28)(BlueprintVisible, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        EquippedTitle;                                     // 0x564(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGlideSkill;                                       // 0x568(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFastSkill;                                        // 0x569(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDiveSkill;                                        // 0x56A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoubleJumpSkill;                                  // 0x56B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            LevelUpSound;                                      // 0x570(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22E6[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChargeJumpStacks;                                  // 0x584(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChargeJumpEnabled;                                // 0x588(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E7[0xB7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AClickableBase*                        CurClickTarget;                                    // 0x640(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                            LatestHitResultUnderCursor;                        // 0x648(0x88)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AClickableBase*                        CurLookTarget;                                     // 0x6D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APuzzleCamera*                         OverlappingOverheadCamera;                         // 0x6D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseTurnRate;                                      // 0x6E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseLookUpRate;                                    // 0x6E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ScaleHLODViewDistanceWhenZooming;                  // 0x6E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         Dead;                                              // 0x6ED(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ACharacter>                AIClass;                                           // 0x6F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0x6F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PlayerFired;                                       // 0x700(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EB[0xA4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationHalfLife;                                  // 0x7B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APersonalTeleportEgg>      TeleportEggClass;                                  // 0x7C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AGoldPickup>               GoldActorClass;                                    // 0x7D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             GoldWisdomConversion;                              // 0x7D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoldSpawnAngle;                                    // 0x7E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             GoldSpawnRange;                                    // 0x7E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22ED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentlyLaunchingJumpingPad;                      // 0x7F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AJumpingPad*                           InputLockingJumpingPad;                            // 0x7F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EGlideMode                        GlideMode;                                         // 0x804(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EReceiveChirpsMode                ChirpsMode;                                        // 0x805(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22EF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               InputAxisValue;                                    // 0x808(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ADungeon*                              CurDungeon;                                        // 0x818(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USophiaCostumeInfo*                    DesiredCostume;                                    // 0x820(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USophiaCostumeInfo*                    SelectedCostume;                                   // 0x828(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         CrouchToggleMode;                                  // 0x832(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F3[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMapMenu*                              MapMenu;                                           // 0x838(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsScrolling;                                      // 0x840(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  SpiritBase;                                        // 0x848(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                FirstPersonGloves;                                 // 0x850(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     SpiritEmitterComponent;                            // 0x858(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USophiaSpringArmComponent*             CameraBoom;                                        // 0x860(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      FirstPersonCameraComponent;                        // 0x868(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCableComponent*                       CableComponent;                                    // 0x870(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  HookMeshComponent;                                 // 0x878(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          DitherParameters;                                  // 0x880(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayLevelUpPostProcess;                           // 0x888(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22F5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    LevelUpLocalMatReference;                          // 0x890(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              LevelUpLocalMaterial;                              // 0x898(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharPowerComponent*                   CharPowerComponent;                                // 0x8A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharMapComponent*                     CharMapComponent;                                  // 0x8A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharSpiritComponent*                  CharSpiritComponent;                               // 0x8B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharGridComponent*                    CharGridComponent;                                 // 0x8B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharItemComponent*                    CharItemComponent;                                 // 0x8C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UQuestSystemComponent*                 QuestSystemComponent;                              // 0x8C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharPuzzleComponent*                  CharPuzzleComponent;                               // 0x8D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharCutsceneComponent*                CharCutsceneComponent;                             // 0x8D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMusicComponent*                       MusicComponent;                                    // 0x8E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConquestRecordComponent*              ConquestRecordComponent;                           // 0x8E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMatchboxRadarComponent*               PuzzleRadarComponent;                              // 0x8F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AItemJumpingPad>           ItemJumpingPadClass;                               // 0x8F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AItemTeleportPortal>       ItemTeleportPortalClass;                           // 0x900(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AItemTeleportPortal*                   PlacedPortal;                                      // 0x908(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     WingsComponent;                                    // 0x910(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     ContrailComponent;                                 // 0x918(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    Skin0;                                             // 0x920(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    Skin1;                                             // 0x928(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    Skin2;                                             // 0x930(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  CameraOccluder;                                    // 0x938(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               SettingsMenuClass;                                 // 0x940(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               MapMenuClass;                                      // 0x948(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              HandMaterialDynamic;                               // 0x950(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingsMenu*                         SettingsMenu;                                      // 0x958(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFMODEvent*>                    WalkingFootstepSounds;                             // 0x960(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFMODEvent*>                    SprintingFootstepSounds;                           // 0x970(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFMODEvent*>                    LandSounds;                                        // 0x980(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFMODEvent*>                    JumpSounds;                                        // 0x990(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFMODEvent*                            DoubleJumpSound;                                   // 0x9A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            WingsSound;                                        // 0x9A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            VaultSound;                                        // 0x9B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CrouchSound;                                       // 0x9B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            UncrouchSound;                                     // 0x9C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            TeleportSound;                                     // 0x9C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODAudioComponent*                   WingsAudioComponent;                               // 0x9D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          DoubleJumpMontage;                                 // 0x9D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  QuestGiverNavigationLaser;                         // 0x9E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ARollingCube*                          CurrentMutexCube;                                  // 0x9E8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22F7[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMapSubMenu                       RelevantMapSubMenu;                                // 0x9F9(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            UIHoverEvent;                                      // 0xA00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            UIOpenEvent;                                       // 0xA08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            UIDenyEvent;                                       // 0xA10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            UICloseEvent;                                      // 0xA18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            UIConfirmEvent;                                    // 0xA20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            UIConfirmChildEvent;                               // 0xA28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            ClickPlayerEvent;                                  // 0xA30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                            UIStartConquestEvent;                              // 0xA38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RecallDestination;                                 // 0xA40(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpPressedTime;                                   // 0xA5C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeJumpRechargeDelay;                           // 0xA60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FA[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRecievingBlueOrbState;                            // 0xA78(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCollapseHUD;                                      // 0xA79(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlueOrbCamera;                                    // 0xA7A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FB[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ForceFirstPersonActors;                            // 0xA80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ESprintMode                       SprintMode;                                        // 0xA90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBlueOrbAnimFinished;                             // 0xA98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurSkinIndex;                                      // 0xAAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22FE[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlightZoomMultiplier;                              // 0xAE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightClickTransitionHalfLife;                      // 0xAEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22FF[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BoomLength_BlueOrb;                                // 0xB04(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BoomLengthHalfLife;                                // 0xB08(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlueOrbThirdPersonLingerTime;                      // 0xB0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2300[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              BoomRotation_BlueOrb;                              // 0xB28(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        BoomRotationHalfLife;                              // 0xB34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2301[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BoomLocation_BlueOrb;                              // 0xB74(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BoomLocationHalfLife;                              // 0xB80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2302[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         ShowFirstPersonMesh;                               // 0xBB8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisableFirstPersonMeshShadows;                     // 0xBB9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2303[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AAirDropRosaryParty*                   ActiveRosaryParty;                                 // 0xBD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoyoteTime;                                        // 0xBD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2304[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALockedJumpingPad*                     StandingLockedJumpPad;                             // 0xBE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2305[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsPlayerReady;                                    // 0xBF0(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2306[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FPS;                                               // 0xBF4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2307[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShowUnsolvedLimitedDistance;                       // 0xBFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize                   InputVector;                                       // 0xC00(0xC)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RosaryMinJoystickSensitivityMultiplier;            // 0xC0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2308[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APuzzleCamera*                         ActiveOverheadCamera;                              // 0xC40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEventPrompt                          EventPromptState;                                  // 0xC48(0x2)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2309[0x1A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsAmbassador;                                     // 0xC64(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_230A[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USophiaInputComponent*                 DeathInputComponent;                               // 0xC78(0x8)(ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USophiaInputComponent*                 FreezeInputComponent;                              // 0xC80(0x8)(ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USophiaInputComponent*                 BlueOrbInputComponent;                             // 0xC88(0x8)(ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USophiaInputComponent*                 LoreItemInputComponent;                            // 0xC90(0x8)(ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USophiaInputComponent*                 HelpHoverInputComponent;                           // 0xC98(0x8)(ExportObject, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_230B[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaCharacter*                      PingPlayer;                                        // 0xD08(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraActor*                          RecallCamera;                                      // 0xD10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_230C[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASophiaCharacter* GetDefaultObj();

	void WardrobeClick();
	void UpgradesClick();
	void ToggleMenuCamera(bool Activate);
	void ThankHelper(class ASophiaPlayerState* Helper);
	void StartTeamVsTeam();
	void SpawnTeleportEggOnServer();
	void SpawnBots(class ANavmeshAISpawner* MeshSpawner, struct FHitResult& OutHit);
	void ShowServerFPS(bool bVal);
	bool ShowChargeJumpUI();
	bool ShouldHairBeVisible();
	void SetWidgetInputMode(class UUserWidget* InWidget);
	void SetTitle(int32 Index);
	void SetThirdPerson(bool NewThirdPerson);
	void SetSprintMode(enum class ESprintMode NewSprintMode);
	void SetHudDisabled(bool Disabled);
	void SetGameInputMode();
	void SetGameAndUIInputMode(class UUserWidget* InWidget);
	void SetEmoteIndex(int32 Index);
	void SetDefaultMovementMode();
	void SetCustomizationData(const struct FCustomizationData& InInfo, bool bMale, bool bSetKraken);
	void SetCurrentJumpCount(int32 NewJumpCount);
	void SetCostume(class USophiaCostumeInfo* CostumeInfo);
	void SetCanControlCamera(bool InBool);
	void SetBlinkStartingNumJumps(int32 NewJumpCount);
	void ServerExclusive_SendAllMessages();
	void Server_UseItem(enum class EItemType Type);
	void Server_UpdateLevel(int32 NewLevel);
	void Server_UpdateEarnedCosmetic(const class FString& ID);
	void Server_UnlockJumpPadByPuzzle(class APuzzleLockedJumpingPad* JumpingPad);
	void Server_UnlockJumpPad(class ALockedJumpingPad* JumpingPad);
	void Server_UnlockEncyclopediaEntry(const class FString& EncyclopediaEntryID);
	void Server_TryUnlockGate(class ALevelRestrictionVolume* TheGate);
	void Server_SwitchSkin();
	void Server_StartTeamVsTeam();
	void Server_SpawnItemJumpingPad();
	void Server_SpawnBots(class ANavmeshAISpawner* MeshSpawner, struct FHitResult& OutHit);
	void Server_ShowServerFPS(bool bVal);
	void Server_SetTitle(int32 Index);
	void Server_SetServerParams(const struct FServerParams& NewParams);
	void Server_SetSeenEncyclopedia(const class FString& ID);
	void Server_SetReady();
	void Server_SetMaleCustomizationData(struct FCustomizationData& InInfo);
	void Server_SetLockingJumpPadAndTime(class AJumpingPad* InPad, uint8 Ping);
	void Server_SetInputVector(struct FVector& NewInputVector);
	void Server_SetIgnoreClientMovementErrorChecksAndCorrection(bool Val);
	void Server_SetEmoteIndex(int32 Index);
	void Server_SetCustomizationData(struct FCustomizationData& InInfo);
	void Server_SetCostume(class USophiaCostumeInfo* CostumeInfo);
	void Server_SetCheatBlink(bool NewCheatValue);
	void Server_SendHelpMessage(class ASophiaPlayerState* SendTo, class APlayerState* SendFrom);
	void Server_SendCombo(class APartyRosary* Rosary, int32 Combo);
	void Server_SendClicked(class AClickableBase* P, struct FHitResult& OutHit);
	void Server_SendChatMessage(class ASophiaPlayerState* P, class FText& Text);
	void Server_RespawnPlayer();
	void Server_PlayerLevelUp();
	void Server_PlayDoubleJumpMontage();
	void Server_GyroPuzzle_Sync(class AGyroPuzzle* P, float TrueSolveTime, const struct FVector& TrueLaserLocation, const struct FRotator& TrueLaserRotation);
	void Server_GridPuzzle_RequestSPLock(class ASophiaRune* Puzzle);
	void Server_GridPuzzle_ReleaseSPLock(class ASophiaRune* Puzzle);
	void Server_CheatUnlockUpgrades();
	void Server_CheatUnlockItems();
	void Server_CheatSpawnRandomAirdrop(int32 Type);
	void Server_CheatPowerPoles();
	void Server_CheatForceStartMatch();
	void Server_CheatEndgame();
	void Server_CheatAddXP(struct FBhvrAnalyticsEvent_Base& Event);
	void Server_CheatAddMasteryXP(struct FBhvrAnalyticsEvent_Base& Event);
	void Server_CheatAddGold(struct FBhvrAnalyticsEvent_Base& Event);
	void Server_CheatAddBlueOrb(struct FBhvrAnalyticsEvent_Base& Event);
	void Server_CheatActivateEvent();
	void Server_ChangeMap(const class FString& MapName);
	void Server_CancelRacingCheckpoints(class ARacingCheckpointsMinigame* RacingCheckpoints);
	void Server_CancelDoubleJumpMontage();
	void Server_ApplyDamageWithTimer(int32 Amount, float Timer);
	void Server_ApplyDamage(int32 Amount);
	void Server_AdminSpawnBots(int32 SpawnCount);
	void Server_AdminDespawnBots();
	void RemoveFakeLoadingScreen();
	void ReceivedBlueOrbEnd();
	void PurchaseCosmetic(const class FString& ItemId);
	void PlayFootstepSound(bool bIsWater);
	void PerformRespawnTeleport();
	class UUserWidget* OpenUpgradeMenu();
	void OnRep_UnlockedCosmetics();
	void OnRep_selectedCostume(class USophiaCostumeInfo* Prior);
	void OnRep_PlayerTitle();
	void OnRep_MaleCustomizationData();
	void OnRep_IsPlayerReady();
	void OnRep_EventPromptState();
	void OnRep_CustomizationData();
	void OnRep_curSkinIndex();
	void OnRecall();
	void OnPlayerCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& HitLocation, struct FHitResult& Result);
	void OnCosmeticBoughtFailed(const class FString& ItemId);
	void OnCosmeticBought(const struct FKrakenPurchaseData& ItemId);
	void NetMultiCast_SendChatMessage(class ASophiaPlayerState* Sender, class FText& Text);
	void NetMultiCast_PlayerLevelUp();
	void MultiCast_PlayDoubleJumpMontage();
	void MultiCast_CancelDoubleJumpMontage();
	void MasteriesClick();
	void MapToggle();
	void MapClick();
	void LocalPlayerExclusive_TeleportToNearestBeacon();
	void LocalPlayerExclusive_OnLocalPLayerLevelUp();
	bool IsPauseMenuVisible();
	bool IsMapMenuVisible();
	bool IsLoadingComplete();
	bool IsInPuzzleMode();
	bool IsInGridMode();
	bool IsCreationVisible();
	bool IsBlueOrbVisible();
	void HandleHelpMessage_PS(class ASophiaPlayerState* PS);
	void HandleHelpMessage(class APuzzleBase* Puzzle);
	bool GetThirdPerson();
	class ALockedJumpingPad* GetStandingLockedJumpPad();
	class FString GetPlayerName();
	class UMusicComponent* GetMusicComponent();
	class UCharMapComponent* GetMapComponent();
	struct FVector GetInputVector();
	class UExtendedMovementComponent* GetExtendedCMC();
	struct FEventPrompt GetEventPromptState();
	int32 GetEmoteIndex();
	int32 GetCheatSandboxSolves();
	bool GetCheatInfiniteBlink();
	struct FVector GetCapsuleBaseLocation(float ZOffset);
	struct FVector GetCameraForwardFacingVector();
	struct FRotator GetCameraFacingDirection();
	int32 GetBlinkStartingNumJumps();
	class UAbilitySystemComponent* GetAbilitySystemComponent();
	void ExitLoreFragmentInput();
	void EncyclopediaPuzzlesClick();
	bool DoesGridNeedCursor();
	void ContextAwareMapToggle();
	void Client_SetControlRot(struct FRotator& ControlRot);
	void Client_SendHelpMessage(class APlayerState* SendFrom);
	void Client_RemoveLoading();
	void Client_AddAllFeedMessages(TArray<struct FFeedMessage>& Msgs);
	void Client_AddAllCentralMessages(TArray<class FText>& Msgs);
	void CheckIfLanded(struct FHitResult& Hit);
	void CheatUnlockZone(enum class EMainMapZoneName ZONE);
	void CheatUnlockUpgrades();
	void CheatUnlockEncyclopedia();
	void CheatUnlockCosmetic();
	void CheatSolvePuzzle();
	void CheatShowOrphanPuzzles();
	void CheatExtendTrailLength();
	void CheatDie();
	void CheatAddXP(struct FBhvrAnalyticsEvent_Base& Event);
	void CheatAddSandboxSolves();
	void CheatAddMasteryXP(struct FBhvrAnalyticsEvent_Base& Event);
	void CheatAddGold(struct FBhvrAnalyticsEvent_Base& Event);
	void CheatAddBlueOrb(struct FBhvrAnalyticsEvent_Base& Event, int32 Amount);
	void ChargeJumpTimer();
	void ChangeFOV(float FOV, float ZoomFOV);
	void BPI_OnTeleport(float TeleportDistance);
	void BPI_OnSleepingPuzzleClicked(class APuzzleBase* Puzzle, class FText& ErrorMsg);
	void BPI_OnLevelUp();
	void BPC_cheatAddXP();
	void BPC_cheatAddMasteryXP();
	void BPC_cheatAddManyBlueOrb(int32 Amount);
	void BPC_cheatAddGold();
	void BPC_cheatAddBlueOrb();
	void BP_TriggerUpgradeTutorial();
	void BP_ToggleWings(bool IsWingsActive);
	void BP_TickLocal(float DeltaTime);
	void BP_SpawnMatchboxVTrail(const struct FVector& BoxLoc1, const struct FVector& BoxLoc2, const struct FVector& PlayerLoc, class UTexture* MatchboxTexture);
	void BP_SetPlayerVisible();
	void BP_SetGravProjectileVisibility(bool NewVisibility);
	void BP_ScrollingWhileForcedFirstPerson();
	void BP_RemoveFakeLoadingScreen();
	void BP_ReceivedBlueOrb();
	void BP_PuzzleForcedFirstPerson();
	void BP_PostInit();
	void BP_PlayEmote();
	void BP_OpenNewPuzzleModal();
	void BP_OnWave();
	void BP_OnVault();
	void BP_OnUnlockedCosmetics();
	void BP_OnRecall();
	void BP_OnMoreThanNecessaryPuzzlesInObjectiveSolvedForTheFirstTime();
	void BP_OnMaleCustomizationDataUpdated();
	void BP_OnLaunch();
	void BP_OnCustomizationDataUpdated();
	void BP_OnCosmeticBoughtFailed(const class FString& ItemId);
	void BP_OnCosmeticBought(const class FString& ItemId);
	void BP_OnClickedViewFinder();
	void BP_OnClickedRosary();
	void BP_OnClickedProjectionCone();
	void BP_OnClickedMatchBox();
	void BP_OnClickedGyroRing();
	void BP_OnCancelMatchBox();
	void BP_NewGravProjectile(class AGravityBallProjectile* Projectile);
	void BP_LoreItemInput();
	void BP_LoreItemExit();
	bool BP_IsWaterActor(class AActor* InActor);
	void BP_IsThirdPersonView(bool ThirdPersonViewIsActive);
	void BP_HasPole(bool HasPole);
	void BP_GrantWings();
	void BP_GrantEtherealHair();
	bool BP_GetFirstLocalPlayerHUD(class UObject* WorldContextObject, class ASophiaHUD** HUD);
	void BP_GetDefaultCustomization(struct FCustomizationData* Data, struct FCustomizationData* MaleData);
	void BP_ClickedLoreFragment(class UEncyclopediaEntry* Lore);
	void BP_BlueOrbInput();
	void BP_AssignDummyGravProjectileTo(class USceneComponent* ObjRef);
	bool AreOtherInputWidgetsVisible(class UUserWidget* InWidget);
	void AdminSpawnBots(int32 SpawnCount);
	void AdminDespawnBots();
	void AddMessage(class FText& MessageText, bool bPreventSpam);
};

// 0x188 (0x6F8 - 0x570)
// Class IslandsofInsight.SophiaController
class ASophiaController : public APlayerController
{
public:
	TArray<class UInputWidget*>                  HudInputWidgets;                                   // 0x570(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UInputWidget*>                  HudRemovingActiveInputWidgets;                     // 0x580(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_231E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                URL;                                               // 0x5A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_231F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                KrakenUserId;                                      // 0x5D0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2320[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinMouseDeltaForInputSwitch;                       // 0x5E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2321[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerSessionId;                                   // 0x610(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MatchmakingPlayerId;                               // 0x620(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class FString>                          CreatedPuzzles;                                    // 0x630(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                        CreatedPuzzleToBeSent;                             // 0x680(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                        RemovedPuzzlesToBeSent;                            // 0x690(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2323[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APuzzleBase*>                   UnReplicatedPuzzlesList;                           // 0x6E8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASophiaController* GetDefaultObj();

	void VisualizePuzzleBounds(bool Visualize);
	void ServerFPS(int32 Index);
	void ServerExclusive_SavePlayerLoc();
	void ServerConsole(const class FString& CommandLine);
	void Server_SetKrakenId(const class FString& KrakenToken, bool bAutoLogin);
	void Server_SendCreatedPuzzleNames(TArray<class FString>& ClientCreatedPuzzles, TArray<class FString>& ClientDestroyedPuzzles);
	void Server_SendAnalyticsInfo(struct FGSAnalyticsData& Data);
	void Server_RefreshBasicPlayerData();
	void Server_PrintRuneTypePerZone();
	void Server_DebugQuests(int32 Type);
	void Server_DebugPlayerProgression();
	void Server_CallConsoleCmdOnServer(const class FString& CommandLine);
	void Server_AddSandboxSpawnTimer(enum class EMainMapZoneName ZoneName, const class FString& PuzzleType, float Time);
	void SDebugQuests(int32 Type);
	void SDebugPlayerProgression();
	void SDebugCheckRefs();
	void SCheatQuestObj();
	void RosaryPercent(int32 Percent);
	void PrintSandboxZonePuzzles();
	void PrintRuneTypePerZone();
	void PrintPuzzleDatabaseInfo();
	void OnBeforePuzzleRemoved(class APuzzleBase* Pb);
	bool MouseInGameWindow();
	void KickLocalClient(bool bIsConquest);
	bool IsWalkable(struct FHitResult& HitResult);
	class FString GetKrakenNickname();
	void Client_SendKrakenAuthInfo();
	void Client_SendAnalyticsInfo(const class FString& EventType);
	void Client_PrintMessage(const class FString& Msg);
	void Client_DebugPlayerProgression(int32 Xp, int32 Gold, int32 Orbs, TArray<float>& MasteryValues);
	void ChangeShowPuzzlesCheatType(const class FString& PuzzleType);
	void ChangeShowPuzzlesCheatSolved(bool bSolved);
	void BPC_SendAnalyticsEvent(const class FString& EventType);
	class FString BPC_GetKrakenID();
	void BP_ServerFPS(int32 Index);
	void BP_RemovePartyInvite();
	void BP_OnPartyInvite(const struct FPartyInvite& Invite);
	void BP_KickClient(bool bIsConquest);
	void AddSandboxSpawnTimer(enum class EMainMapZoneName ZoneName, const class FString& PuzzleType, float Time);
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.SophiaEditorFunctionalityInterface
class ISophiaEditorFunctionalityInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISophiaEditorFunctionalityInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.SophiaEditorHelpers
class USophiaEditorHelpers : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USophiaEditorHelpers* GetDefaultObj();

};

// 0xB8 (0xE0 - 0x28)
// Class IslandsofInsight.SophiaEmote
class USophiaEmote : public UObject
{
public:
	class UAnimMontage*                          EmoteAnimation;                                    // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           EmoteImage;                                        // 0x30(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  EmoteDescription;                                  // 0xB8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                ID;                                                // 0xD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USophiaEmote* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class IslandsofInsight.EmoteData
class UEmoteData : public UDataAsset
{
public:
	TArray<class USophiaEmote*>                  Emotes;                                            // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEmoteData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class IslandsofInsight.SophiaEngineSubsystem
class USophiaEngineSubsystem : public UEngineSubsystem
{
public:

	static class UClass* StaticClass();
	static class USophiaEngineSubsystem* GetDefaultObj();

};

// 0x650 (0x7F8 - 0x1A8)
// Class IslandsofInsight.SophiaGameInstance
class USophiaGameInstance : public UGameInstance
{
public:
	uint8                                        Pad_2348[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GameMapMinimumLoadingScreenWaitTime;               // 0x1FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterCustomizationData*           CharacterCustomizationData;                        // 0x200(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPuzzleDatabase*                       PuzzleDatabase;                                    // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPuzzleDatabase*                       PuzzleDatabase_Editor;                             // 0x210(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPuzzleClasses*                        PuzzleDefaultData;                                 // 0x218(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneData*                             ZoneData;                                          // 0x220(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FConquestServerValues                 ServerValues;                                      // 0x228(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                UniqueId;                                          // 0x258(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalVideoMemoryInGigabytes;                       // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                Save_ConquestPoints;                               // 0x270(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<int32, int32>                           Save_RedSolvedPuzzlesInArea;                       // 0x280(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<int32, int32>                           Save_BlueSolvedPuzzlesInArea;                      // 0x2D0(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<int32, class FText>                     Save_ZoneNames;                                    // 0x320(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<int32, float>                           Save_RedZoneSolvePercent;                          // 0x370(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<int32, float>                           Save_BlueZoneSolvePercent;                         // 0x3C0(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<float>                                Save_RedTeamPuzzleScore;                           // 0x410(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                Save_BlueTeamPuzzleScore;                          // 0x420(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Save_PlayerTeam;                                   // 0x430(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Save_PlayerTotalPuzzleContribution;                // 0x434(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Save_AreaCaptureThreshold;                         // 0x438(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2350[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Save_RedTeamTotalScore;                            // 0x440(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Save_BlueTeamTotalScore;                           // 0x458(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Save_RedPlayerScores;                              // 0x470(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Save_BluePlayerScores;                             // 0x488(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FConquestLeaderboardEntry>     Save_RedLeaderboard;                               // 0x4A0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FConquestLeaderboardEntry>     Save_BlueLeaderboard;                              // 0x4B0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x4C0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Wisdom;                                            // 0x4D0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2352[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Time;                                              // 0x4D8(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayerStatisticRankingData*           RankingDataAsset;                                  // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayerMasteryLevelsSeed*              MasteryLevelsData;                                 // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestData*                            QuestData;                                         // 0x4F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShutdown;                                         // 0x500(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SteamAPIWasInitialized;                            // 0x501(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2354[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFMODBus*>                      Bus;                                               // 0x508(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        BusVolume;                                         // 0x518(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2355[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterCustomizationDataAsset*      FemaleCustomizationAsset;                          // 0x520(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterCustomizationDataAsset*      MaleCustomizationAsset;                            // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTattooBodyDataAsset*                  BodyTattooAsset;                                   // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTattooFaceDataAsset*                  FaceTattooAsset;                                   // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        ValidRegions;                                      // 0x540(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TutorialProgression;                               // 0x550(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcceptedEULA;                                      // 0x554(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcceptedPrivacy;                                   // 0x558(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcceptedMarketing;                                 // 0x55C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcceptedCompendium;                                // 0x560(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bHasDeluxeEdition;                                 // 0x564(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTest;                                             // 0x568(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWithEditor;                                       // 0x569(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShipping;                                         // 0x56A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoLogin;                                        // 0x56B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2356[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnMatchMakingInfoReceived;                         // 0x570(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2357[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               FakeLoadingWidgetClass;                            // 0x5D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           FakeLoadingWidget;                                 // 0x5D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRejoinedKraken;                                  // 0x5E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2358[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ActorsHiddenFromProjectionCones;                   // 0x5F8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ALevelSequenceActor>    UnlockSecretsCutscene;                             // 0x608(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_235B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CustomizationDummy;                                // 0x638(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACineCameraActor*                      CineCamera;                                        // 0x640(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACineCameraActor*                      CineCameraFace;                                    // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACineCameraActor*                      CineCameraUpperBody;                               // 0x650(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACineCameraActor*                      CharacterCreationCamera;                           // 0x658(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SavePlayerLocation;                                // 0x660(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              SavePlayerRotation;                                // 0x66C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                        JoinServerCount;                                   // 0x678(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_235D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BuildID;                                           // 0x680(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsXbox;                                           // 0x690(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsMapLoading;                                      // 0x691(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_235E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LevelToLoad;                                       // 0x694(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2360[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnMapLoadDone;                                     // 0x6A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	class USandboxProgressionData*               SandboxProgressionData;                            // 0x6B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkillTreeData*                        SkillTreeData;                                     // 0x6B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEncyclopediaData*                     EncyclopediaData;                                  // 0x6C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEmoteData*                            EmoteData;                                         // 0x6C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UPingIP*, struct FRegionPing>     NetworkRegions;                                    // 0x6D0(0x50)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UPlayerWidget>             PlayerWidgetClass;                                 // 0x720(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USurveyPromptBase>         SurveyPromptWidgetClass;                           // 0x728(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2362[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaGameInstance* GetDefaultObj();

	void UnlockEarnedCosmetic(const class FString& KrakenId);
	void SetValuesForEndgameScreen();
	void SetMouseYSensitivity(float InVal);
	void SetMouseXSensitivity(float InVal);
	void SetGameStartType(enum class EGameStartType InByte);
	void SetFoliageClusterCullingDistancesFast(int32 Size1, int32 Dist1, int32 Size2, int32 Dist2, int32 Size3, int32 Dist3);
	void SetControllerYSensitivity(float InVal);
	void SetControllerXSensitivity(float InVal);
	void SetConquestValuesOnMatchEnd(bool GameOverOverride);
	void SetConquestMode(int32 Val);
	void SetBusVolume(int32 Volume);
	void SetArrayBusVolume(int32 Volume, const TArray<class UFMODBus*>& InArray);
	void RestartServer();
	void ReportPlayer(const class FString& ReportedPlayerId, const class FString& Reasons, const class FString& Details);
	void PrintStringInTestBuild(const class FString& InString);
	void PlayLoadingScreen(bool bPlayUntilStopped, float PlayTime, class FName PackageName);
	void OnPingSuccess(class UPingIP* PingIP, const class FString& Region, int32 Ping);
	void OnPingFailed(class UPingIP* PingIP, const class FString& Region);
	void OnMapLoaded(class UWorld* InLoadedWorld);
	void LoadGeneralKrakenData();
	void LeaveQueueForGameSession();
	void KrakenHeartbeatFailed(const struct FOnlineServiceError& Error);
	bool IsTestOrShippingBuild();
	bool IsStringLesserThen(const class FString& A, const class FString& B);
	bool IsFTUE();
	void InvalidateActorCaches();
	void InitQueueForGameSession();
	void InitLoadingScreens();
	void InitHardwareBenchmark(float* CPUValue, float* GPUValue, int32 WorkScale, float CPUMultiplier, float GPUMultiplier);
	void InitCustomizationMap();
	class FString GetNetworkURL(class UObject* WorldContextObject);
	class FString GetKrakenNickname(const struct FPlayerProgressionData& Data);
	class FString GetKrakenID(const struct FPlayerProgressionData& Data);
	struct FVector2D GetGameViewportSize();
	struct FVector2D GetGameResolution();
	void ForceStopLoadingScreen();
	void FetchKrakenHeartbeat();
	void CreateSurveyPrompt(class FText& PromptText, class UParameterizedUrl* URL);
	void ChangeMap(class FName MapName);
	void BPI_TutorialWidget(TSubclassOf<class UUserWidget> WidgetClass);
	void BPI_TryJoinServerFromSaveData();
	void BPI_TryJoinServerFromMenu(const struct FBlueprintSessionResult& RSession, class UMainMenu* Menu);
	void BPI_StoreGameInstanceValuesAndSwapServer(const class FString& ServerName, int32 GainedXP, bool bPartyJoin);
	class FString BPI_ShortenMapName(const class FString& String);
	void BPI_SaveCharacterData(bool Sex, int32 SkinIndex, class USkeletalMesh* Skin);
	void BPI_RefreshServer(const class FString& ServerName, bool bPartyJoin);
	void BPI_OnServerInviteSent();
	void BPI_OnInvitedToJoinServer(const class FString& ID);
	void BPI_LoadCharacterData(bool* Sex, int32* SkinIndex, class USkeletalMesh** Skin);
	void BPI_JoinSession(const struct FBlueprintSessionResult& RSession, class UMainMenu* InMenu, bool bPartyJoin, const class FString& MapName);
	bool BPI_IsFTUE();
	class UCharacterCustomizationDataAsset* BPI_GetCustomizationAsset(int32 Index);
	void BPI_GetCurrentHorizontalFOVs(float* FOV, float* ZoomFOV);
	void BPI_FindGameLiftServer();
	void BPI_DestroySession(TSoftObjectPtr<class UWorld>& Level);
	TArray<struct FSessionPropertyKeyPair> BPI_CreateServerExtraSettings(const class FString& ServerName, const class FString& ServerMapName);
	class FString BPI_ConvertMapNames(const class FString& String);
	void BPI_AutoDetectQualitySettings();
	TMap<class FString, class FString> BPC_GetPatchNotesByLanguage();
	void BP_PreMapLoad();
	void BP_PostMapLoad();
	void BP_PlayFakeLoadingScreen();
	void BP_OnKrakenLoginFailed();
	void BP_GetSteamAvatar(const class FString& SteamID, const class FString& KrakenId);
	void BP_DoVideoSettingsCorrection();
	void BenchmarkAndReturnSuggestedSettings(float* CPUScore, float* GPUScore, int32* ResolutionScale, int32* ViewDistance, int32* GeometryDetail, int32* PostProcessing, int32* Shadows, int32* Textures, int32* Effects, int32* Foliage, int32* Shaders, int32* SSGI, int32* VolumetricFog);
	void BeginLoadingScreen(const class FString& MapName);
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.SophiaGameplayStatics
class USophiaGameplayStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USophiaGameplayStatics* GetDefaultObj();

	struct FVector2D RandomNormal();
	class FText PuzzleCategoryToText(class UObject* WorldContextObject, enum class EPuzzleCategory Category);
	class UTexture2D* PuzzleCategoryToImage(class UObject* WorldContextObject, enum class EPuzzleCategory Category);
	class UTexture2D* PuzzleCategoryToBackgroundImage(class UObject* WorldContextObject, enum class EPuzzleCategory Category);
	bool LocalPlayerIsInDevMode(class UObject* WorldContextObject);
	class UZoneData* GetZoneData(class UObject* WorldContextObject);
	float GetTimeSyncedWithMaterials(bool bIsForUIMaterial, class UWorld* ReferenceWorld, class AActor* ReferenceActor);
	class USandboxProgressionData* GetSandboxProgressionDataOriginalInfo(class UObject* WorldContextObject);
	struct FPuzzleTypeData GetPuzzleDefaultTypeInfo(class UObject* WorldContextObject, const class FString& KrakenIdentifier);
	class UPuzzleDatabase* GetPuzzleDatabase(class UObject* WorldContextObject);
	class UPuzzleData* GetPuzzleData(class UObject* WorldContextObject, int32 KrakenId);
	int32 GetPlayerSkillLevel(class ASophiaCharacter* Player, const class FString& SkillName);
	class USkill* GetPlayerSkill(class UWorld* World, const class FString& SkillName, class ASophiaCharacter* Player);
	enum class EMainMapZoneName GetPlayerCurrentZone(class ASophiaCharacter* Player);
	class FString GetDifferenceBetweenJsons(const class FString& JsonString1, const class FString& JsonString2);
	TArray<enum class EPuzzleCategory> GetAllDisplayTypeCategoriesForPuzzleTypes(class UObject* WorldContextObject, const TArray<class FString>& KrakenTypeIDs);
	bool GetActiveRewardLevelForPuzzleCategory(class ASophiaCharacter* Player, enum class EPuzzleCategory PuzzleCategory, enum class EMainMapZoneName ZONE, struct FSandboxProgressionRewardData* OutRewardData, int32* OutSolvedPuzzleCount, int32* OutTargetPuzzleCount);
	bool FileSaveString(const class FString& Filename, const class FString& Text);
	bool FileLoadString(const class FString& Filename, class FString* Text);
};

// 0x8 (0x368 - 0x360)
// Class IslandsofInsight.SophiaGameViewportClient
class USophiaGameViewportClient : public UGameViewportClient
{
public:
	uint8                                        Pad_2375[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaGameViewportClient* GetDefaultObj();

};

// 0x2D8 (0x5E8 - 0x310)
// Class IslandsofInsight.SophiaHUD
class ASophiaHUD : public AHUD
{
public:
	TSubclassOf<class UPlayerWidget>             PlayerWidgetClass;                                 // 0x310(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2377[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         ShowServerFPS;                                     // 0x330(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowPing;                                          // 0x331(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFPS;                                           // 0x332(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowInsightPopups;                                 // 0x333(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2378[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AQuestVendor*                          CurrentlySelectedQuestVendor;                      // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AQuestPickup*                          CurrentQuestPickup;                                // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarkerComponent*                      MarkerComponent;                                   // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           GameHUDBaseWidget;                                 // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDungeonInfoWidget*                    DungeonInfoWidget;                                 // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputWidget*                          RadialEmoteWidget;                                 // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           MatchStartWidget;                                  // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPartyDisplayWidget*                   PartyDisplayWidget;                                // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputWidget*                          NewsBoardWidget;                                   // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputWidget*                          ConquestTutorialWidget;                            // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputWidget*                          SandboxTutorialWidget;                             // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEventPromptWidget*                    EventPromptWidget;                                 // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputWidget*                          FriendRequestEventPromptWidget;                    // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPartyInvitePromptWidget*              PartyInviteEventPromptWidget;                      // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGridInvitePromptWidget*               GridInviteEventPromptWidget;                       // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPartyChatWidget*                      PartyChatWidget;                                   // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPanelWidget*>                  FocusWidgetParents;                                // 0x3B8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UBaseWidget*>                   FocusWidgets;                                      // 0x3C8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  CurrentCursorName;                                 // 0x3D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECursorMode                       CursorMode;                                        // 0x3E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2379[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   Widgets;                                           // 0x3E8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UFont*                                 RuneFont;                                          // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFont*                                 DefaultFont;                                       // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFont*                                 ExoFont;                                           // 0x408(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PeripheryItemsMaterial;                            // 0x410(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    ItemIndicatorMaterial;                             // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            ItemBackgroundTex;                                 // 0x420(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            ItemScrimTex;                                      // 0x428(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCursorInfo                           SmallGridCursorInfo;                               // 0x430(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCursorInfo                           MediumGridCursorInfo;                              // 0x440(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCursorInfo                           LargeGridCursorInfo;                               // 0x450(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCursorInfo                           SmallGameCursorInfo;                               // 0x460(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCursorInfo                           MediumGameCursorInfo;                              // 0x470(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCursorInfo                           LargeGameCursorInfo;                               // 0x480(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            DefaultTexture;                                    // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            HudBackgroundTex;                                  // 0x498(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    blinkCooldownIndicatorMaterial;                    // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    CancelBarMaterial;                                 // 0x4A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    ComboCooldownBarMaterial;                          // 0x4B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            WhiteVignetteTex;                                  // 0x4B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            StarTex;                                           // 0x4C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            EmptyStarTex;                                      // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            SkullTex;                                          // 0x4D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    RacingMetaCoOpBarMaterial;                         // 0x4D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameHUDBase>              GameHUDBaseClass;                                  // 0x4E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBaseWidget>               DungeonInfoClass;                                  // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputWidget>              RadialEmoteClass;                                  // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBaseWidget>               MatchStartClass;                                   // 0x4F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPlayerSocialMenuWidget>   SocialMenuWidgetClass;                             // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputWidget>              NewsBoardClass;                                    // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputWidget>              ConquestTutorialClass;                             // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputWidget>              SandboxTutorialClass;                              // 0x518(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UEventPromptWidget>        EventPromptClass;                                  // 0x520(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputWidget>              FriendRequestEventPromptClass;                     // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPartyInvitePromptWidget>  PartyInviteEventPromptClass;                       // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGridInvitePromptWidget>   GridInviteEventPromptClass;                        // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPartyDisplayWidget>       PartyDisplayWidgetClass;                           // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBaseWidget>               PartyChatWidgetClass;                              // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UViewfinderUIWidget>       ViewfinderUIWidgetClass;                           // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_237A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ALockedJumpingPad*>             UnlockedJumpingPads;                               // 0x570(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class APowerPole*>                    PlacedPowerPoles;                                  // 0x580(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              blinkCooldownIndicatorMaterialDynamic;             // 0x590(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              PeripheryItemsMaterialDynamicRight;                // 0x598(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              PeripheryItemsMaterialDynamicLeft;                 // 0x5A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              ItemIndicatorMaterialDynamic;                      // 0x5A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              ItemIndicatorBackMaterialDynamic;                  // 0x5B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              CancelBarMaterialDynamic;                          // 0x5B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              RacingMetaCoOpBarDynamic;                          // 0x5C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_237B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaGameState*                      GameStateRef;                                      // 0x5D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMasteryItem*                          MasteryNotification;                               // 0x5E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASophiaHUD* GetDefaultObj();

	void SetCursorMode(uint8 Option);
	enum class ECursorMode GetCurrentCursorMode();
	void BPI_StopCutscene();
};

// 0x70 (0x1A8 - 0x138)
// Class IslandsofInsight.SophiaInputComponent
class USophiaInputComponent : public UInputComponent
{
public:
	uint8                                        Pad_2386[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASophiaController*                     PC;                                                // 0x198(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2387[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaInputComponent* GetDefaultObj();

	void DoActionIfBound(FDelegateProperty_ Action);
	void DisableInput();
	void BP_BindAction(class FName ActionName, enum class EInputEvent KeyEvent, FDelegateProperty_ Action);
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.SophiaLevelLibrary
class USophiaLevelLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USophiaLevelLibrary* GetDefaultObj();

	void PopulateGemsForOpenEditorWorld();
};

// 0x68 (0x290 - 0x228)
// Class IslandsofInsight.SophiaLevelScriptActor
class ASophiaLevelScriptActor : public ALevelScriptActor
{
public:
	uint8                                        Pad_2388[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpiritGemGeneration                  GemGeneration;                                     // 0x230(0x30)(NativeAccessSpecifierPublic)
	bool                                         bPlayQuestAvailableSplash;                         // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayQuestNotificationsByDefault;                  // 0x261(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2389[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SkylightRecaptureCooldown;                         // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGamePlayLevel;                                   // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldLevelShowFTUE;                              // 0x269(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_238A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                NameTag;                                           // 0x270(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USophiaVisuals*                        SophiaVisualsObject;                               // 0x280(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           GemMeshRef;                                        // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASophiaLevelScriptActor* GetDefaultObj();

};

// 0x0 (0x2C0 - 0x2C0)
// Class IslandsofInsight.SophiaOnlineBeaconHostObject
class ASophiaOnlineBeaconHostObject : public APartyBeaconHost
{
public:

	static class UClass* StaticClass();
	static class ASophiaOnlineBeaconHostObject* GetDefaultObj();

};

// 0x0 (0x370 - 0x370)
// Class IslandsofInsight.SophiaPartyBeaconClient
class ASophiaPartyBeaconClient : public APartyBeaconClient
{
public:

	static class UClass* StaticClass();
	static class ASophiaPartyBeaconClient* GetDefaultObj();

	bool ConnectToSever(const class FString& Address);
};

// 0x560 (0x880 - 0x320)
// Class IslandsofInsight.SophiaPlayerState
class ASophiaPlayerState : public APlayerState
{
public:
	int32                                        PlayerPower;                                       // 0x320(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   PlayerLocation;                                    // 0x324(0xC)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerRotation;                                    // 0x330(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerConquestExp;                                 // 0x334(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerConquestSolvedCount;                         // 0x338(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Team;                                              // 0x33C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B9[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastSolvedTimeStamp;                               // 0x34C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayerMastery*                        EquippedMastery;                                   // 0x350(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NamePrefix;                                        // 0x358(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NamePrefixRank;                                    // 0x368(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerProgressionData                PlayerProgression;                                 // 0x370(0x488)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_23BB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPartySystemComponent*                 PartySystemComponent;                              // 0x800(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USocialSystemComponent*                PingSystemComponent;                               // 0x808(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        EnqueuedSerializedPuzzleDatas;                     // 0x810(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                        EnqueuedSerializedPuzzleNameOverrides;             // 0x820(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_23BC[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDevMode;                                          // 0x839(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23BD[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerWisdom;                                      // 0x848(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                WisdomMultipliers;                                 // 0x850(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<float>                                WisdomMultiplierEndTimes;                          // 0x860(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         IsReadyToStartMatch;                               // 0x870(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23BF[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASophiaPlayerState* GetDefaultObj();

	void SetTeam(uint8 InByte);
	bool SetDevMode(bool DevMode);
	void Server_UpgradeSkill(const class FString& SkillName, bool bShouldCheckValid);
	void Server_UnlockMasteryRewards(const class FString& KrakenAchievementId, struct FBhvrAnalyticsEvent_Base& Event);
	void Server_SetTeam(uint8 InByte);
	void Server_SetNamePrefix(const class FString& NewPrefix, int32 Rank);
	void Server_SetIsReadyToStartMatch(bool ShouldStartMatch);
	void Server_SetDevMode(bool DevMode);
	void Server_SendBondThanks(class ASophiaPlayerState* Helper);
	void Server_ConfirmStartReceivingPuzzleData();
	void Server_ClaimSandboxRewards(enum class EMainMapZoneName ZONE, enum class EPuzzleCategory PuzzleCategory, struct FBhvrAnalyticsEvent_Base& Event);
	void Server_ClaimGlobalMasteryReward(int32 RewardLevel, struct FBhvrAnalyticsEvent_Base& Event);
	void Server_CheatSetCheatValueOnSkill(const class FString& SkillName, int32 Val);
	void Server_CheatSetCheatEnabledOnSkill(const class FString& SkillName, bool Val);
	void Server_AcceptSpawnSerializedPuzzles();
	void OnRep_PlayerPower(int32 Old);
	uint8 GetTeam();
	bool GetReadyToStartMatch();
	int32 GetPlayerWisdom();
	class FString GetNicknameID();
	class FString GetKrakenID();
	void EquipMastery(class UPlayerMastery* Mastery);
	void Client_SpawnSerializedPuzzles(TArray<class FString>& SerializedDatas, TArray<class FString>& NameOverrides);
	void Client_ReceiveSpawnedWorldPuzzleInfos(class USandboxZone* ZONE, TArray<struct FSpawnedWorldPuzzleInfo>& SpawnedPuzzlesInfo, int32 Version, int32 TotalNum);
	void Client_ReceiveSpawnedContainersInfos(class USandboxZone* ZONE, TArray<struct FContainerAndContainedPuzzleInfo>& SpawnedPuzzlesInfo, int32 Version, int32 TotalNum);
	void Client_ReceivedBondThanks(class ASophiaPlayerState* Helpee);
	void Client_completePuzzle(class APuzzleBase* Completed, float RandomValue);
	void Client_AddPlayer(class APlayerState* PS);
	void BPI_AskSolveTogether(class ASophiaPlayerState* OtherPlayer);
	void BP_AskTravelWithParty(const class FString& IP);
};

// 0x20 (0x7F0 - 0x7D0)
// Class IslandsofInsight.SophiaPostProcessVolume
class ASophiaPostProcessVolume : public APostProcessVolume
{
public:
	uint8                                        Pad_23C0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USophiaPostProcessBlendable*>   SophiaBlendables;                                  // 0x7D8(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_23C1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASophiaPostProcessVolume* GetDefaultObj();

};

// 0x0 (0xD0 - 0xD0)
// Class IslandsofInsight.ReplicationGraphNode_AlwaysRelevant_ForConnection_WithLog
class UReplicationGraphNode_AlwaysRelevant_ForConnection_WithLog : public UReplicationGraphNode_ActorList
{
public:

	static class UClass* StaticClass();
	static class UReplicationGraphNode_AlwaysRelevant_ForConnection_WithLog* GetDefaultObj();

};

// 0xC8 (0x570 - 0x4A8)
// Class IslandsofInsight.SophiaReplicationGraph
class USophiaReplicationGraph : public UReplicationGraph
{
public:
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorList*       AlwaysRelevantNode;                                // 0x4B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        OnlyRelevantActorsWithoutNetConnection;            // 0x4B8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        PlayerCharacters;                                  // 0x4C8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ASophiaController*>             PlayerControllersPersistent;                       // 0x4D8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, class APuzzleBase*>      NameToPuzzles;                                     // 0x4E8(0x50)(Transient, NativeAccessSpecifierPublic)
	TArray<struct FConnectionAlwaysRelevantForOwnerNodePair> AlwaysRelevantForConnectionList;                   // 0x538(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ActorsWithoutNetConnection;                        // 0x548(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APuzzleBase*>                   PuzzlesToCheckForKrakenID;                         // 0x560(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USophiaReplicationGraph* GetDefaultObj();

};

// 0x1A8 (0xA28 - 0x880)
// Class IslandsofInsight.SophiaScrollBox
class USophiaScrollBox : public UScrollBox
{
public:
	uint8                                        Pad_23C3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           barMiddleBrush;                                    // 0x890(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           barMiddleBrushDragged;                             // 0x918(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           barMiddleBrushHovered;                             // 0x9A0(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USophiaScrollBox* GetDefaultObj();

	bool IsScrollBarCollapsed();
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.SophiaSerializableObjectInterface
class ISophiaSerializableObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISophiaSerializableObjectInterface* GetDefaultObj();

};

// 0x10 (0x290 - 0x280)
// Class IslandsofInsight.SophiaSpringArmComponent
class USophiaSpringArmComponent : public USpringArmComponent
{
public:
	uint8                                        Pad_23C4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USophiaSpringArmComponent* GetDefaultObj();

};

// 0x0 (0x4E0 - 0x4E0)
// Class IslandsofInsight.SophiaStaticMeshComponent
class USophiaStaticMeshComponent : public UStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class USophiaStaticMeshComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.SophiaUtilityStatics
class USophiaUtilityStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USophiaUtilityStatics* GetDefaultObj();

	int64 ToUnixTimestamp(struct FDateTime& DateTime);
	int64 GetCurrentUnixTimestamp();
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.SophiaUXStatics
class USophiaUXStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USophiaUXStatics* GetDefaultObj();

	class UPanelSlot* SetSlotIndex(class UPanelSlot* Slot, int32 DesiredIndex, bool MoveOtherUp);
	void RenameTexture(class UTexture2D* Texture, class UObject* Outer, const class FString& NewName);
	class FString PasteFromClipboard();
	struct FLinearColor GetRegularHUDTextColor();
	struct FLinearColor GetRedTeamColor();
	enum class ELocalizationCulture GetLocalizationCultureTextFromText(class FText Lang);
	class FText GetLocalizationCultureText(enum class ELocalizationCulture C);
	class FString GetLanguageISO(enum class ELocalizationCulture C);
	enum class ELocalizationCulture GetCurrentLocalizationCulture();
	struct FLinearColor GetBlueTeamColor();
	class FText GetBindingDisplayName(class UUserWidget* Widget, class FName Binding, bool ShortDisplayName, bool EnsureIfNoBinding);
	struct FCustomizationSingle GetAnyCustomizationSingleByID(class UObject* WorldContextObject, const class FString& KrakenId);
	void GetAllNonBaseWidgetChildWidgetsRecursive(class UWidget* Widget, TArray<class UWidget*>* Widgets, const TArray<TSubclassOf<class UUserWidget>>& ExcludedClasses);
	void GetAllChildWidgetsRecursive(class UWidget* Widget, TArray<class UWidget*>* Widgets, const TArray<TSubclassOf<class UUserWidget>>& ExcludedClasses);
	void CopyToClipboard(const class FString& ToBeCopied);
	bool ChangeLocalizationCultureWithISO(const class FString& ISO, class UObject* ContextObject, bool bUpdateKrakenSetting);
	bool ChangeLocalizationCultureText(class FText C, class UObject* ContextObject, bool bUpdateKrakenSetting);
	bool ChangeLocalizationCulture(enum class ELocalizationCulture C, class UObject* ContextObject, bool bUpdateKrakenSetting);
	void ChangeLocaleToSteam(class UObject* ContextObject);
	void AddLocalPlayerMessage(class UObject* WorldContextObject, class FText Message);
	void AddFocusWidgetToQueue(class UBaseWidget* BaseWidget, class UPanelWidget* Parent);
};

// 0x80 (0xA8 - 0x28)
// Class IslandsofInsight.SophiaVisuals
class USophiaVisuals : public UObject
{
public:
	uint8                                        Pad_23E3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, struct FVisualModifierArray> PrevActorModifiers;                                // 0x38(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FExponentialFogData>           ExponentialFogDatas;                               // 0x88(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLightActorData>               LightActorDatas;                                   // 0x98(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USophiaVisuals* GetDefaultObj();

};

// 0x0 (0x3A0 - 0x3A0)
// Class IslandsofInsight.SophiaWorldSettings
class ASophiaWorldSettings : public AWorldSettings
{
public:

	static class UClass* StaticClass();
	static class ASophiaWorldSettings* GetDefaultObj();

};

// 0x10 (0x108 - 0xF8)
// Class IslandsofInsight.SpawnedPuzzleContainer
class USpawnedPuzzleContainer : public UPuzzleContainerData
{
public:
	TArray<class FString>                        PossiblePuzzleTypes;                               // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USpawnedPuzzleContainer* GetDefaultObj();

};

// 0x98 (0x2B8 - 0x220)
// Class IslandsofInsight.SpawnOverrideVolume
class ASpawnOverrideVolume : public AActor
{
public:
	class FText                                  ShortDisplayName;                                  // 0x220(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x238(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSubclassOf<class APuzzleBase>, float>  SpawnProbability;                                  // 0x258(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                   Billboard;                                         // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASpawnOverrideVolume* GetDefaultObj();

};

// 0x10 (0x698 - 0x688)
// Class IslandsofInsight.SpeedrunRosary
class ASpeedrunRosary : public ARosary
{
public:
	class ARosarySpeedRound*                     ParentPuzzle;                                      // 0x688(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23E8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASpeedrunRosary* GetDefaultObj();

};

// 0x30 (0x268 - 0x238)
// Class IslandsofInsight.SpiritGem
class ASpiritGem : public AClickableBase
{
public:
	bool                                         IsLarge;                                           // 0x238(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  Mesh;                                              // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaCharacter*                      ShownPlayer;                                       // 0x248(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23ED[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASpiritGem*                            HiddenLocalCounterpart;                            // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASpiritGem* GetDefaultObj();

	void Overlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_ShownPlayer();
	void BP_OnCollected();
};

// 0x120 (0x608 - 0x4E8)
// Class IslandsofInsight.SpotTheDifference
class ASpotTheDifference : public APuzzleBase
{
public:
	bool                                         NoConfirmMode;                                     // 0x4E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       Root;                                              // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoweredMesh*                          Side1;                                             // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoweredMesh*                          Side2;                                             // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Base1;                                             // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Base2;                                             // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  FrontText1;                                        // 0x518(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  FrontText2;                                        // 0x520(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            CheckFailedAudioClip;                              // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinSingles;                                        // 0x530(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxSingles;                                        // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinPartners;                                       // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxPartners;                                       // 0x53C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinTwins;                                          // 0x540(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxTwins;                                          // 0x544(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FeatureScale;                                      // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinLandmarkFeatures;                               // 0x54C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxLandmarkFeatures;                               // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LandmarkFeatureTwinChance;                         // 0x554(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LandmarkFeatureSingleChance;                       // 0x558(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinSingleIslandFeatures;                           // 0x55C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxSingleIslandFeatures;                           // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinTwinIslandFeatures;                             // 0x564(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxTwinIslandFeatures;                             // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TwinIslandFeatureTwinChance;                       // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TwinIslandFeatureSingleChance;                     // 0x570(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TooCloseThreshold_Globe;                           // 0x574(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TooCloseThreshold_Disk;                            // 0x578(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinRadius_Disk;                                    // 0x57C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRadius_Disk;                                    // 0x580(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeightVariation_Disk;                              // 0x584(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Mirrored;                                          // 0x588(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23F0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationRPM;                                       // 0x58C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESpawningPattern                  SpawningPattern;                                   // 0x590(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23F1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class ASpotTheDifferenceItem>> Landmarks;                                         // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class ASpotTheDifferenceItem>> Islands;                                           // 0x5A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FSpotTheDifferenceFeatureGroup> FeatureGroups;                                     // 0x5B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FSpotTheDifferenceSpec                Puzzle;                                            // 0x5C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        DifferencesRemaining;                              // 0x5D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DifferencesRemaining1;                             // 0x5DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DifferencesRemaining2;                             // 0x5E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalDifferences;                                  // 0x5E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalDifferences1;                                 // 0x5E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalDifferences2;                                 // 0x5EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASpotTheDifferenceItem*>        AllItems;                                          // 0x5F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_23F2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASpotTheDifference* GetDefaultObj();

	void OnRep_TotalDifferences();
	void OnRep_AllItems();
};

// 0x50 (0x288 - 0x238)
// Class IslandsofInsight.SpotTheDifferenceItem
class ASpotTheDifferenceItem : public AClickableBase
{
public:
	bool                                         IsDifferent;                                       // 0x238(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Clicked;                                           // 0x239(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSockets;                                        // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASpotTheDifference*                    Puzzle;                                            // 0x240(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASpotTheDifferenceItem*                Partner;                                           // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Side;                                              // 0x250(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Root;                                              // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MaterialNotHighlighted;                            // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialFoundSingle;                               // 0x270(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MaterialFoundPartner;                              // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23F7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASpotTheDifferenceItem* GetDefaultObj();

};

// 0x38 (0x350 - 0x318)
// Class IslandsofInsight.StandardGridUI
class UStandardGridUI : public UInputWidget
{
public:
	class UGenericGridButton*                    ExitCanvas;                                        // 0x318(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGenericGridButton*                    UndoRestartCanvas;                                 // 0x320(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGenericGridButton*                    ContinueCanvas;                                    // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23FC[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStandardGridUI* GetDefaultObj();

	void UndoReleased();
	void UndoPressed();
	void TryAgain();
	void Restart();
	void Next();
	bool IsRestartTryAgain();
	void GridButtonOnClick(enum class EGenericGridButtonType Type);
	enum class ESlateVisibility GetUpgradeTextVisibility();
	class FText GetUpgradeTextMessage();
	enum class ESlateVisibility GetUndoButtonVisibility();
	enum class ESlateVisibility GetRestartButtonVisibility();
	enum class ESlateVisibility GetContinueButtonVisibility();
	class FText GetContinueButtonMessage();
	void Exit();
};

// 0xE8 (0x400 - 0x318)
// Class IslandsofInsight.StarsEffect
class UStarsEffect : public UInputWidget
{
public:
	uint8                                        Pad_2400[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           StarBrush;                                         // 0x320(0x88)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2401[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumRings;                                          // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumDistractions;                                   // 0x3BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDepth;                                          // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDepth;                                          // 0x3C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinRadius;                                         // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRadius;                                         // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinStarSize;                                       // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxStarSize;                                       // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinRadiusRing;                                     // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRadiusRing;                                     // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LissajousMagnitude;                                // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LissajousPeriod;                                   // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpringConstant;                                    // 0x3E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2402[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStarsEffect* GetDefaultObj();

};

// 0x0 (0x220 - 0x220)
// Class IslandsofInsight.StartingIsland
class AStartingIsland : public AActor
{
public:

	static class UClass* StaticClass();
	static class AStartingIsland* GetDefaultObj();

};

// 0x8 (0x268 - 0x260)
// Class IslandsofInsight.StyledButton
class UStyledButton : public UUserWidget
{
public:
	class FName                                  BindingName;                                       // 0x260(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UStyledButton* GetDefaultObj();

	void OnBindingCalled();
};

// 0x0 (0x318 - 0x318)
// Class IslandsofInsight.SurveyPromptBase
class USurveyPromptBase : public UInputWidget
{
public:

	static class UClass* StaticClass();
	static class USurveyPromptBase* GetDefaultObj();

	void DisplayPrompt(class FText& PromptText, class UParameterizedUrl* URL);
};

// 0x0 (0x470 - 0x470)
// Class IslandsofInsight.TargetedLocationCapsule
class UTargetedLocationCapsule : public UCapsuleComponent
{
public:

	static class UClass* StaticClass();
	static class UTargetedLocationCapsule* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class IslandsofInsight.TattooBodyDataAsset
class UTattooBodyDataAsset : public UDataAsset
{
public:
	TArray<struct FTattooBodyInfo>               Info;                                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTattooBodyDataAsset* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class IslandsofInsight.TattooFaceDataAsset
class UTattooFaceDataAsset : public UDataAsset
{
public:
	TArray<struct FTattooFaceInfo>               Info;                                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTattooFaceDataAsset* GetDefaultObj();

};

// 0x30 (0x250 - 0x220)
// Class IslandsofInsight.TCPClient
class ATCPClient : public AActor
{
public:
	FMulticastInlineDelegateProperty_            ReceiveSocketDataDelegate;                         // 0x220(0x10)(Edit, ZeroConstructor, EditConst, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2409[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USocketRSThread*>               RecThreads;                                        // 0x240(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATCPClient* GetDefaultObj();

	void SendToServer(const TArray<uint8>& Message);
	void OnServerDisconnect(class USocketRSThread* PThread);
	void DisconnectFromServer();
	void CreateClientAndConnect(const class FString& ServerIP, int32 Port, int32 ReceiveSize, int32 SendSize);
	bool ConnectServer(const class FString& ServerIP, int32 Port);
};

// 0x60 (0x280 - 0x220)
// Class IslandsofInsight.TCPServer
class ATCPServer : public AActor
{
public:
	FMulticastInlineDelegateProperty_            SocketCreateDelegate;                              // 0x220(0x10)(Edit, ZeroConstructor, EditConst, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ConnectReceiveDelegate;                            // 0x230(0x10)(Edit, ZeroConstructor, EditConst, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ReceiveSocketDataDelegate;                         // 0x240(0x10)(Edit, ZeroConstructor, EditConst, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_240D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USocketRSThread*>               RecThreads;                                        // 0x268(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class ASophiaGameState*                      GameStateRef;                                      // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATCPServer* GetDefaultObj();

	void SendToClient(const TArray<uint8>& Message);
	void OnClientDisconnect(class USocketRSThread* PThread);
	void CreateServer(const class FString& ServerIP, int32 ServerPort, int32 ReceiveBufferSize, int32 SendBufferSize);
	void CloseServer();
};

// 0x40 (0x528 - 0x4E8)
// Class IslandsofInsight.Telescope
class ATelescope : public APuzzleBase
{
public:
	class USceneComponent*                       Root;                                              // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  Platform;                                          // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPuzzleBoundsComponent*                PlatformExclusion;                                 // 0x4F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  Target;                                            // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPuzzleBoundsComponent*                TargetExclusion;                                   // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  beaconMesh;                                        // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         TriggerBox;                                        // 0x518(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowBeaconWhileSearching;                          // 0x520(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ClickToStart;                                      // 0x521(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_240F[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATelescope* GetDefaultObj();

	bool OnClickFire(struct FClickEventContext& Context);
};

// 0x20 (0x278 - 0x258)
// Class IslandsofInsight.TemporaryLocationPing
class ATemporaryLocationPing : public ALocationPing
{
public:
	uint8                                        Pad_2410[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToDestroy;                                     // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2412[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            SelfFModEvent;                                     // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            OtherFModEvent;                                    // 0x270(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATemporaryLocationPing* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class IslandsofInsight.TextRenderClue
class UTextRenderClue : public UClue
{
public:
	uint8                                        Pad_2414[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTextRenderClue* GetDefaultObj();

};

// 0x10 (0x2A8 - 0x298)
// Class IslandsofInsight.TooltipWidget
class UTooltipWidget : public USophiaUserWidget
{
public:
	enum class ETooltipBehaviour                 TooltipBehaviour;                                  // 0x298(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2415[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           OwningWidget;                                      // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTooltipWidget* GetDefaultObj();

	bool ParentIsAboveScreenMiddle();
};

// 0x18 (0x278 - 0x260)
// Class IslandsofInsight.TotemIcon
class UTotemIcon : public UUserWidget
{
public:
	class UNewGridUI*                            LinkedUI;                                          // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASophiaRune*                           LinkedRune;                                        // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2417[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTotemIcon* GetDefaultObj();

	void PlaySolveAnimation();
	void OnIconClicked();
	void BP_PlaySolveAnimation();
	void BP_InitVisuals(bool Unlocked, bool Selected, bool SOLVED);
};

// 0x20 (0x280 - 0x260)
// Class IslandsofInsight.TotemNavigator
class UTotemNavigator : public UUserWidget
{
public:
	TSubclassOf<class UTotemIcon>                IconClass;                                         // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox_Sophia*                   IconContainer;                                     // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewGridUI*                            LinkedUI;                                          // 0x270(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTotemIcon*                            SelectedIcon;                                      // 0x278(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTotemNavigator* GetDefaultObj();

	void OnUpArrowClicked();
	void OnDownArrowClicked();
	bool IsUpArrowInteractable();
	bool IsDownArrowInteractable();
	enum class ESlateVisibility GetNavigatorVisibility();
	void BPI_Resize();
};

// 0x20 (0x8C8 - 0x8A8)
// Class IslandsofInsight.TotemRune
class ATotemRune : public ASophiaRune
{
public:
	class UTextRenderComponent*                  TextLeft;                                          // 0x8A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  TextForward;                                       // 0x8B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  TextRight;                                         // 0x8B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  TextBack;                                          // 0x8C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATotemRune* GetDefaultObj();

	int32 GetTotemPuzzleCount();
	int32 GetTotemIndex();
};

// 0x48 (0x280 - 0x238)
// Class IslandsofInsight.TowerPlatformTrigger
class ATowerPlatformTrigger : public AClickableBase
{
public:
	uint8                                        Pad_241C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DefaultCurve;                                      // 0x248(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APlatformEditorRepresentative> RepresentativeAsset;                               // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RepresentativeSpawnOffset;                         // 0x258(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CommandsCurrentlyActivated;                        // 0x264(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_241D[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMovementData>                 EditorExposedCommands;                             // 0x270(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATowerPlatformTrigger* GetDefaultObj();

	void OnRep_commandsCurrentlyActivated(bool Old);
};

// 0x20 (0x2A0 - 0x280)
// Class IslandsofInsight.TowerClickTriggerPlatform
class ATowerClickTriggerPlatform : public ATowerPlatformTrigger
{
public:
	bool                                         IsToggle;                                          // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsOnAtStart;                                       // 0x281(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_241F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  TriggerMesh;                                       // 0x288(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2420[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATowerClickTriggerPlatform* GetDefaultObj();

};

// 0xA8 (0x2C8 - 0x220)
// Class IslandsofInsight.TowerPlatform
class ATowerPlatform : public AActor
{
public:
	class UStaticMeshComponent*                  PlatformMesh;                                      // 0x220(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               StartingLoc;                                       // 0x22C(0xC)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMovementToProgress>           CurCommandToServerProgress;                        // 0x238(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2421[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlatformMovement*>             CurCommands;                                       // 0x260(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class UPlatformMovement*, class UPlatformMovement*> CurActiveCommand;                                  // 0x270(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2422[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATowerPlatform* GetDefaultObj();

	void OnRep_startingLoc();
	void OnRep_curCommandToServerProgress();
};

// 0x98 (0x5B8 - 0x520)
// Class IslandsofInsight.TowerPuzzle
class ATowerPuzzle : public AMultiplayerPuzzleBase
{
public:
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x520(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         OnSolverComponent;                                 // 0x528(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         PlayerEnterCollideComponent;                       // 0x530(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxPlayerCount;                                    // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_242C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStandOnMeshAndCollider>       StandOns;                                          // 0x540(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class UPrimitiveComponent*, int32>      SolveColliderToPlayersOn;                          // 0x550(0x50)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         MultipleStandOns;                                  // 0x5A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_242D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASophiaCharacter*>              Challengers;                                       // 0x5A8(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATowerPuzzle* GetDefaultObj();

	void OnSolverExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnSolverCollide(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnChallengerExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnChallengerCollide(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x18 (0x298 - 0x280)
// Class IslandsofInsight.TowerStandTriggerPlatform
class ATowerStandTriggerPlatform : public ATowerPlatformTrigger
{
public:
	class UStaticMeshComponent*                  StandMesh;                                         // 0x280(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         StandOverlapComponent;                             // 0x288(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurStanding;                                       // 0x290(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2433[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATowerStandTriggerPlatform* GetDefaultObj();

	void OnStandOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnStandOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x10 (0x270 - 0x260)
// Class IslandsofInsight.TutorialBox
class UTutorialBox : public UUserWidget
{
public:
	class UNewGridUI*                            LinkedUI;                                          // 0x260(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2434[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTutorialBox* GetDefaultObj();

	enum class ESlateVisibility GetBoxVisibility();
	class FText GetBoxMessage();
	void BP_UpdateTutorialMessage();
	void BP_PlayAppearAnimation();
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.TutorialTextTools
class UTutorialTextTools : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UTutorialTextTools* GetDefaultObj();

	void MarkAllLevelsNotUpdated();
	bool ChangePuzzleTutorialMessageToFText();
	void ChangeAllPuzzleTutorialMessageToFText();
};

// 0x8 (0x2F0 - 0x2E8)
// Class IslandsofInsight.TutorialWidget
class UTutorialWidget : public UBaseWidget
{
public:
	bool                                         bAddToSmallSideNotifications;                      // 0x2E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2436[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WidgetLifeTime;                                    // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTutorialWidget* GetDefaultObj();

	void BP_RemoveWidget();
};

// 0x0 (0x28 - 0x28)
// Class IslandsofInsight.TwoSidedPuzzleMaker
class UTwoSidedPuzzleMaker : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UTwoSidedPuzzleMaker* GetDefaultObj();

	class FText WriteTwoSidedPuzzleToFile(const class FString& InFilename1, const class FString& InFilename2, const class FString& OutFilename, bool bAddQuestionMarks);
};

// 0x0 (0x270 - 0x270)
// Class IslandsofInsight.TwoStateGenericGridButton
class UTwoStateGenericGridButton : public UGenericGridButton
{
public:

	static class UClass* StaticClass();
	static class UTwoStateGenericGridButton* GetDefaultObj();

	bool IsInBaseState(enum class EGenericGridButtonType Type);
	void BP_UpdateVisualState();
};

// 0x68 (0x98 - 0x30)
// Class IslandsofInsight.UGISPlayers
class UUGISPlayers : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_2439[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APlayerState*>                  UnproccessPlayerState;                             // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class FString, class ASophiaPlayerState*> KrakenIdToPlayerState;                             // 0x48(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UUGISPlayers* GetDefaultObj();

};

// 0x0 (0x130 - 0x130)
// Class IslandsofInsight.VerticalBox_Sophia
class UVerticalBox_Sophia : public UVerticalBox
{
public:

	static class UClass* StaticClass();
	static class UVerticalBox_Sophia* GetDefaultObj();

};

// 0x118 (0x600 - 0x4E8)
// Class IslandsofInsight.ViewfinderCamera
class AViewfinderCamera : public APuzzleBase
{
public:
	uint8                                        Pad_243A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              UiMaterialDynamic;                                 // 0x4F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraComponent*                      Camera;                                            // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*              CaptureComponent;                                  // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SpawnPoint;                                        // 0x518(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  LensPreview;                                       // 0x520(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              ImageMaterialDynamic;                              // 0x528(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterial*                             ImageMaterial;                                     // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterial*                             UiMaterial;                                        // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AViewfinderImage>          ImageClass;                                        // 0x540(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoinSpawnDistance;                                 // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_243D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            ZoomInSound;                                       // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            ZoomOutSound;                                      // 0x560(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            DitherSound;                                       // 0x568(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMODEvent*                            UnDitherSound;                                     // 0x570(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASophiaCharacter*                      SophiaPlayer;                                      // 0x578(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                UpgradeBonusTargetTimes;                           // 0x580(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                UpgradeBonusMultipliers;                           // 0x590(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bManualPlacement;                                  // 0x5A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_243E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnRadius;                                       // 0x5A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceThreshold;                                 // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngleThreshold;                                    // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GlowThreshold;                                     // 0x5B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowBurnTime;                                      // 0x5B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastBurnTime;                                      // 0x5B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ActiveBurnTime;                                    // 0x5BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  CancelMessage;                                     // 0x5C0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AViewfinderImage*                      ViewfinderImage;                                   // 0x5D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameMessage*                          MyGameMessage;                                     // 0x5E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               StartPosition;                                     // 0x5E8(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_243F[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AViewfinderCamera* GetDefaultObj();

};

// 0x38 (0x270 - 0x238)
// Class IslandsofInsight.ViewfinderImage
class AViewfinderImage : public AClickableBase
{
public:
	uint8                                        Pad_2442[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFMODEvent*                            PickupSound;                                       // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AViewfinderCamera*                     Camera;                                            // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              ImageMaterialDynamic;                              // 0x250(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PlaneMesh;                                         // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2443[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AViewfinderImage* GetDefaultObj();

};

// 0x50 (0x270 - 0x220)
// Class IslandsofInsight.ViewfinderUIPanel
class AViewfinderUIPanel : public AActor
{
public:
	uint8                                        Pad_2444[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AViewfinderCamera*                     Camera;                                            // 0x228(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PlaneMesh;                                         // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              Material;                                          // 0x238(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2445[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AViewfinderUIPanel* GetDefaultObj();

};

// 0x68 (0x300 - 0x298)
// Class IslandsofInsight.ViewfinderUIWidget
class UViewfinderUIWidget : public USophiaUserWidget
{
public:
	class UImage*                                ViewfinderImage;                                   // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          CornerPlacement;                                   // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          CenterPlacement;                                   // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            BonusRewardsText;                                  // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           ControlsWidget;                                    // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AViewfinderCamera*                     Camera;                                            // 0x2C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              Material;                                          // 0x2C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2447[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UViewfinderUIWidget* GetDefaultObj();

	enum class ESlateVisibility GetBonusRewardsTextVisibility();
	class FText GetBonusRewardsMessage();
};

// 0x98 (0x1B0 - 0x118)
// Class IslandsofInsight.WorldQuest
class UWorldQuest : public UQuest
{
public:
	uint8                                        Pad_244C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPinned;                                           // 0x120(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_244D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PinPriority;                                       // 0x124(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x128(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsHiddenFromUI;                                   // 0x129(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWorldQuestType                   QuestType;                                         // 0x12A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDailyQuestPoolType               DailyPool;                                         // 0x12B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDailyQuestSlot                   DailySlot;                                         // 0x12C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_244F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UnlockCost;                                        // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinLevelToUnlock;                                  // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class FName>                            PrereqQuestID;                                     // 0x138(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2450[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWorldQuest* GetDefaultObj();

	void SetDailySlot(enum class EDailyQuestSlot Slot);
	bool IsHiddenFromUI();
	bool IsFirstTimeDailyCompleted();
	bool IsFeatured();
	bool IsEnabled();
	bool IsDailyComplete();
	int32 GetUnlockCost();
	enum class EWorldQuestType GetQuestType();
	TSet<class FName> GetPrereqQuests();
	int32 GetMinLevelToUnlock();
	enum class EDailyQuestSlot GetDailySlot();
	enum class EDailyQuestPoolType GetDailyPool();
	struct FDateTime GetCreationTime();
	void CompleteDaily();
};

// 0x8 (0x50 - 0x48)
// Class IslandsofInsight.YajilinNumber
class UYajilinNumber : public UNumericalClue
{
public:
	uint8                                        Pad_2452[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UYajilinNumber* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class IslandsofInsight.ZoneDataEntry
class UZoneDataEntry : public UObject
{
public:
	int32                                        Index;                                             // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisplayIndex;                                      // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMainMapZoneName                  NameEnum;                                          // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2453[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Name;                                              // 0x38(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                            Icon;                                              // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BlueOrbsToUnlock;                                  // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2455[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UZoneDataEntry* GetDefaultObj();

	class FText GetNumberedZoneName();
};

// 0x18 (0x48 - 0x30)
// Class IslandsofInsight.ZoneData
class UZoneData : public UDataAsset
{
public:
	TArray<class UZoneDataEntry*>                ZoneDataArray;                                     // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UZoneDataEntry*                        INVALID_ZONE;                                      // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UZoneData* GetDefaultObj();

	class UZoneDataEntry* ZoneIndex_to_Zone(int32 ZoneIndex);
	class UZoneDataEntry* ZoneEnum_to_Zone(enum class EMainMapZoneName ZoneEnum);
};

}


