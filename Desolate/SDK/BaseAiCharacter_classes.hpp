#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x39C (0x112C - 0xD90)
// BlueprintGeneratedClass BaseAiCharacter.BaseAiCharacter_C
class ABaseAiCharacter_C : public ASHAICharacter
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xD90(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                       ParameterAudio;                                    // 0xD98(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USHPawnSensingComponent*               SHPawnSensing;                                     // 0xDA0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNavigationInvokerComponent*           NavigationInvoker;                                 // 0xDA8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                       Audio;                                             // 0xDB0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDissolveComponent_C*                  DealthDissolveComponent;                           // 0xDB8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                        Timeline_1_AttackStateMeleeMoveSpeed_BFA6456F4157E6539B864784A6B11DA6; // 0xDC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                Timeline_1__Direction_BFA6456F4157E6539B864784A6B11DA6; // 0xDC4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22BF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTimelineComponent*                    Timeline_1;                                        // 0xDC8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        MoveAltHit_AttackStateMeleeMoveSpeed_C0AA19074CDE1A5D90E564B365384072; // 0xDD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                MoveAltHit__Direction_C0AA19074CDE1A5D90E564B365384072; // 0xDD4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22C3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTimelineComponent*                    MoveAltHit;                                        // 0xDD8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        MoveHit_AttackStateMeleeMoveSpeed_A70877114DDFBC465717DAAB6A0E7D63; // 0xDE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                MoveHit__Direction_A70877114DDFBC465717DAAB6A0E7D63; // 0xDE4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTimelineComponent*                    MoveHit;                                           // 0xDE8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Timeline_0_PhysicsBlendWeight_81C38A6E411D4397976D43852B20A2F4; // 0xDF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                Timeline_0__Direction_81C38A6E411D4397976D43852B20A2F4; // 0xDF4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTimelineComponent*                    Timeline_0;                                        // 0xDF8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                          CurrentMontage;                                    // 0xE00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        BlendWeight;                                       // 0xE08(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  BoneName;                                          // 0xE0C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsHit;                                             // 0xE14(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22CD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BodyDissolveTime;                                  // 0xE18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22CF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            CurrentSound;                                      // 0xE20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        HearingRange;                                      // 0xE28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        NoiseAggro;                                        // 0xE2C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        NoiseAggroMax;                                     // 0xE30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        NoiseAggroLosePerSecond;                           // 0xE34(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        NoiseHeardTime;                                    // 0xE38(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        NoiseHeardTimeMax;                                 // 0xE3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               PatrolPoint;                                       // 0xE40(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            SpawnTransform;                                    // 0xE50(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UBTS_BaseSyncService_C*                SyncService;                                       // 0xE80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               LastNoiseLocation;                                 // 0xE88(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            DefaultFootstep;                                   // 0xE98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            ConcreteFootstep;                                  // 0xEA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            DirtFootstep;                                      // 0xEA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            WaterFootstep;                                     // 0xEB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            MetalFootstep;                                     // 0xEB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            WoodFootstep;                                      // 0xEC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            GrassFootstep;                                     // 0xEC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            GlassFootstep;                                     // 0xED0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            SnowFootstep;                                      // 0xED8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            FleshFootstep;                                     // 0xEE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            GravelFootstep;                                    // 0xEE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            RockFootstep;                                      // 0xEF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            SpecialFootstep;                                   // 0xEF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bUseDamageMaterial;                                // 0xF00(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22DD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              DynamicDamageMaterial;                             // 0xF08(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                     DynamicDamageMaterialParent;                       // 0xF10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        DynamicDamageMaterialSlot;                         // 0xF18(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         DamageTakenSoundReady;                             // 0xF1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22DF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageTakenSoundCooldown;                          // 0xF20(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundCue*                             DamageTakenSound;                                  // 0xF28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        LastWaypointIndex;                                 // 0xF30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22E2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            IceFootstep;                                       // 0xF38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            FooliageFootstep;                                  // 0xF40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DeathNoiseRadius;                                  // 0xF48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DeathNoiseVolume;                                  // 0xF4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            EvadeSound;                                        // 0xF50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIInfoWidget_C*                       AIInfoWidget;                                      // 0xF58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        VisualAggroPerTick;                                // 0xF60(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22E4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       DeathParticleEffect;                               // 0xF68(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bShowAiInfo;                                       // 0xF70(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22E5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  NormalAttackDazeMontage;                           // 0xF78(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                  HeavyAttackDazeMontage;                            // 0xF88(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                  AttackBlockDazeMontage;                            // 0xF98(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                  BleedingAttackDazeMontage;                         // 0xFA8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                  ElectricAttackDazeMontage;                         // 0xFB8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                  PoisonAttackDazeMontage;                           // 0xFC8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                  FireAttackDazeMontage;                             // 0xFD8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                  ForgedAttackDazeMontage;                           // 0xFE8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                  IceAttackDazeMontage;                              // 0xFF8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                               TeleportationOffset;                               // 0x1008(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         HearNoises;                                        // 0x1014(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsPeacefulNPC;                                     // 0x1015(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                         bKickOnCooldown;                                   // 0x1016(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22EA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          TH_KickCooldown;                                   // 0x1018(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         bAttackOnCooldown;                                 // 0x1020(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22EB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          TH_AttackCooldown;                                 // 0x1028(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                        DamageTypesWithoutBlood;                           // 0x1030(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                         IsInAttackJump;                                    // 0x1040(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          TH_OnAttackJumpCooldown;                           // 0x1048(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         bBackwardJumpReady;                                // 0x1050(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22ED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BackwardJumpDistance;                              // 0x1054(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        BackwardJumpHeight;                                // 0x1058(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        BackwardJumpMaxDistanceToEnemyCharacter;           // 0x105C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        BackwardJumpCooldown;                              // 0x1060(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        BackwardJumpChance;                                // 0x1064(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        BackwardJumpDuration;                              // 0x1068(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22EF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          TH_OnBackwardJumpCooldown;                         // 0x1070(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         ForwardJumpReady;                                  // 0x1078(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22F0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForwardJumpMaxDistanceToEnemyCharacter;            // 0x107C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ForwardJumpDistance;                               // 0x1080(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ForwardJumpHeight;                                 // 0x1084(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ForwardJumpMinDistanceToEnemyCharacter;            // 0x1088(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                ForwardJumpWeaponClass;                            // 0x1090(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ForwardJumpChance;                                 // 0x1098(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22F2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASHWeapon_MeleeBase*                   ForwardJumpWeapon;                                 // 0x10A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          TH_OnForwardJumpCooldown;                          // 0x10A8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                        ForwardJumpCooldown;                               // 0x10B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bSkipForwardJumpChance;                            // 0x10B4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22F3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          BackwardJumpMontage;                               // 0x10B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DodgeMaxDistanceToEnemyCharacter;                  // 0x10C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_22F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          DodgeMontage;                                      // 0x10C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        BackwardJumpMontageDistance;                       // 0x10D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ForwardJumpMontageDistance;                        // 0x10D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ForwardJumpDotToEnemy;                             // 0x10D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bPushBackOnHit;                                    // 0x10DC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         DesiredRotation;                                   // 0x10DD(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_22FA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HittedMovingLocation;                              // 0x10E0(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        HittedMovingDuration;                              // 0x10EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                              RotationCache;                                     // 0x10F0(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsInCriticalZone;                                  // 0x10FC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         bIsEnemyAttacking;                                 // 0x10FD(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         bBlockedRecently;                                  // 0x10FE(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         bReturnToMesh;                                     // 0x10FF(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                        AttackStateMoveSpeedCache;                         // 0x1100(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        AttackStateMeleeMoveSpeedCache;                    // 0x1104(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        HitCounter;                                        // 0x1108(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        MaxHitCounter;                                     // 0x110C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAIActionSet>                  EscapeActionSet;                                   // 0x1110(0x10)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                        CurrentEscapeActionSetID;                          // 0x1120(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CurrentEscapeActionID;                             // 0x1124(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        HitCounterResetTime;                               // 0x1128(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class ABaseAiCharacter_C* GetDefaultObj();

	void GetEscapeActionMontage(class UAnimMontage** AnimMontage, bool* bIsLastMontage, class UAnimMontage* Result, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Percent_IntInt_ReturnValue);
	bool SetEnemyCharacter(class ASHCharacter* Character, bool CallFunc_SetEnemyCharacter_ReturnValue, class AAIController* CallFunc_GetAIController_ReturnValue, class AAIController* CallFunc_GetAIController_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class AAIController* CallFunc_GetAIController_ReturnValue_2, class AActor* CallFunc_GetFocusActor_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void CheckCriticalZone(const struct FVector& ObjectLocation, bool* bIsInCriticalZone, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_Vector_Distance_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);
	void Get_Reactive_Action_Montage(class UAnimMontage** AnimMontage, class UAnimMontage* Result, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Percent_IntInt_ReturnValue);
	void _GetProactiveActionMontage(class UAnimMontage** AnimMontage, class UAnimMontage* Result, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Percent_IntInt_ReturnValue);
	bool OnStateChanged(class AAIController* CallFunc_GetAIController_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_OnStateChanged_ReturnValue);
	void CalculateMoveDistance(enum class EMeleeWeaponType WeaponType, float* MoveDistance, bool K2Node_SwitchEnum_CmpSuccess);
	void Get_HIt_Reaction_Direction(const struct FVector& HitDirection, enum class EDirection* Backward, enum class EDirection* Left, bool Temp_bool_Variable, const struct FVector& CallFunc_Vector_Normal2D_ReturnValue, enum class EDirection Temp_byte_Variable, enum class EDirection Temp_byte_Variable_1, bool Temp_bool_Variable_1, enum class EDirection Temp_byte_Variable_2, enum class EDirection Temp_byte_Variable_3, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_GetRightVector_ReturnValue, const struct FVector& CallFunc_Vector_Normal2D_ReturnValue_1, const struct FVector& CallFunc_Vector_Normal2D_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue_1, float CallFunc_DegAcos_ReturnValue, float CallFunc_DegAcos_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, enum class EDirection K2Node_Select_Default, enum class EDirection K2Node_Select_Default_1);
	void TakeHitImplementation(const struct FVector& HitLocation, const struct FVector& HitDirection, class FName HittedBoneName, class UClass* DamageType, enum class EMeleeWeaponType MeleeWeaponType, enum class EAttackActionType AttackActionType, enum class EBodyPart Hit_Body_Part, class AActor* DamageCauser, struct FVector* NewParam, float* MoveDistance, const struct FVector& HittedMovementDirection, float ParentDamageImpulse, float MainDamageImpulse);
	void BB_SetHittedMovingDuration(float Value, bool CallFunc_IsValid_ReturnValue);
	void BB_SetHittedMovingLocation(const struct FVector& Value, bool CallFunc_IsValid_ReturnValue);
	void SetIsHittedState(bool bIsHitted);
	void BB_SyncIsHittedState(bool CallFunc_IsValid_ReturnValue);
	void PlayAnimMon(class UAnimMontage* AnimMontage, float InPlayRate, class FName StartSectionName, float* MontageDuration, float CallFunc_PlayAnimMontage_ReturnValue);
	void GetHitReactionAnim(const struct FVector& HitDirection, enum class EAttackActionType Attack_Type, enum class EMeleeWeaponType Melee_Weapon_Type, class UAnimMontage** HitReactionMontage, enum class EDirections Left, enum class EDirections Back, enum class EDirection CallFunc_Get_HIt_Reaction_Direction_Forward_Backward, enum class EDirection CallFunc_Get_HIt_Reaction_Direction_Right_Left, const struct FHitReactionInfo& K2Node_MakeStruct_HitReactionInfo, class UAnimMontage* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void DestroyAllWeapons(bool* Result, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class ASHWeapon* CallFunc_GetKickWeapon_ReturnValue, class ASHWeapon* CallFunc_GetWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3);
	void BackwardJumpStarted(bool* Result);
	void GetDodgeMontage(class UAnimMontage** Montage);
	void StartDodge(bool* Result, class UAnimMontage* CallFunc_GetDodgeMontage_Montage, bool CallFunc_StartDodgingAttack_ReturnValue);
	void CanDodge(bool* Result, bool CallFunc_IsDodgingAttackValidAngle_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_IsDodgingAttackReady_ReturnValue, class ASHCharacter* CallFunc_GetEnemyCharacter_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class ASHWeapon* CallFunc_GetWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_Montage_IsPlaying_ReturnValue, bool CallFunc_GetAttackCanBeDodged_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void GetForwardJumpWeapon(class ASHWeapon_MeleeBase** Weapon);
	void FarToForwardJump(bool* Result, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);
	void ForceFowardJump();
	void OnForwardJumpCooldown();
	void StartForwardJumpCooldown(const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue);
	void StartForwardJump(bool* Result, class ASHWeapon_MeleeBase* CallFunc_GetForwardJumpWeapon_Weapon, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ShouldHappen_ReturnValue, bool CallFunc_CanJumpForward_Result);
	void CanJumpForward(bool* Result, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_Montage_IsPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, float CallFunc_GetDotToEnemyCharacter_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_1, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_ProjectPointToNavigation_ProjectedLocation, bool CallFunc_K2_ProjectPointToNavigation_ReturnValue);
	void GetBackwardJumpMontage(class UAnimMontage** Montage);
	void OnBackwardJumpCooldown();
	void StartBackwardJumpCooldown(const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue);
	void StartBackwardJump(bool* Result, class UAnimMontage* CallFunc_GetBackwardJumpMontage_Montage, bool CallFunc_ShouldHappen_ReturnValue, bool CallFunc_CanJumpBackward_Result, bool CallFunc_BackwardJumpStarted_REsult);
	void CanJumpBackward(bool* Result, class ASHCharacter* CallFunc_GetEnemyCharacter_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_Montage_IsPlaying_ReturnValue, class ASHWeapon* CallFunc_GetWeapon_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_GetAttackCanBeDodged_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_ProjectPointToNavigation_ProjectedLocation, bool CallFunc_K2_ProjectPointToNavigation_ReturnValue);
	void OnAttackJumpCooldown();
	void StartAttackJump(float Duration, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue);
	bool CanStartStunEvent(bool CallFunc_Not_PreBool_ReturnValue);
	bool CanStartDazeEvent(enum class EDazeType DazeType, bool CallFunc_Not_PreBool_ReturnValue);
	bool OnDazedStateStop(bool CallFunc_OnDazedStateStop_ReturnValue);
	bool OnDazeEventStarted(class UAnimMontage* DazeMontage);
	bool BB_SetSlowProjectileReady(bool CallFunc_IsValid_ReturnValue);
	void StopAttackCooldown();
	void StartAttackCooldown(float Time, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	void StopKickCooldown();
	void StartKickCooldown(float Time, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	bool OnStunState(bool CallFunc_OnStunState_ReturnValue);
	void SetUpdatedEvadePoint(const struct FVector& Location, const struct FVector& CallFunc_K2_ProjectPointToNavigation_ProjectedLocation, bool CallFunc_K2_ProjectPointToNavigation_ReturnValue);
	void TeleportToLocation(const struct FVector& TargetLocation, class AActor* TargetActor, const struct FVector& TeleportLocation, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, int32 Temp_int_Variable, const struct FVector& CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation, bool CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue, bool CallFunc_K2_TeleportTo_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_2, bool CallFunc_K2_TeleportTo_ReturnValue_1, bool CallFunc_K2_TeleportTo_ReturnValue_2);
	void InitializeSpawn(const struct FTransform& Transform, bool CallFunc_SetPatrolPoint_Result, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale);
	bool AiSpawnPointUpdated(bool CallFunc_IsValid_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue);
	void GetDazeAnimMontages(enum class EDazeType DazeType, TArray<class UAnimMontage*>* Montages, bool K2Node_SwitchEnum_CmpSuccess);
	bool OnDazeStarted(enum class EDazeType DazeType, bool CallFunc_NotEqual_ByteByte_ReturnValue, TArray<class UAnimMontage*>& CallFunc_GetDazeAnimMontages_Montages, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class UAnimMontage* CallFunc_Array_Get_Item);
	bool BB_EvadePoint(bool CallFunc_IsValid_ReturnValue);
	bool CouldSeePawn(class APawn* Other, bool CallFunc_CouldSeePawn_K2_ReturnValue);
	bool BB_AggroEmotionReady(bool CallFunc_IsValid_ReturnValue);
	bool BB_SyncBehaviorType(bool CallFunc_IsValid_ReturnValue);
	bool BB_GroupMovingLocation(bool CallFunc_BB_GroupMovingLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void CalculatePatrolPoi(bool* Result);
	void PlayDamageTakenSoundHandle();
	void PlayDamageTakenSound(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsServer_ReturnValue);
	void GetPoint(const struct FVector& From, float MinRadius, float MaxRadius, struct FVector* ResultPoint, const struct FVector& Temp, int32 Temp_int_Variable, const struct FVector& CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation, bool CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);
	void UpdateDamageMaterial(float Health, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	bool SightRadiusChanged(bool CallFunc_SightRadiusChanged_ReturnValue);
	bool OnFootStep(enum class EPhysicalSurface Temp_byte_Variable, TArray<class AActor*>& Temp_object_Variable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_OnFootStep_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, enum class EPhysicalSurface CallFunc_GetSurfaceType_ReturnValue, class USoundBase* K2Node_Select_Default);
	bool OnPatrolState(bool CallFunc_SetEnemyCharacter_ReturnValue, bool CallFunc_OnPatrolState_ReturnValue);
	bool OnDeathState(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_OnDeathState_ReturnValue);
	void BB_SyncPatrolPoi();
	void ResetPatrolPOI(bool* Result);
	bool OnEvadeState(bool CallFunc_OnEvadeState_ReturnValue);
	bool UpdateEvadeState(float DeltaTime, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_UpdateEvadeState_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);
	bool BB_SyncState(bool CallFunc_IsValid_ReturnValue, bool CallFunc_BB_SyncState_ReturnValue);
	void SetPatrolPoint(const struct FVector& Point, bool* Result, bool CallFunc_BB_SyncPatrolPoint_Result);
	void BB_SyncLastNoiseLocation(bool CallFunc_IsValid_ReturnValue);
	void SetLastNoiseLocation(const struct FVector& LastNoiseLocation, bool* Result);
	void AddNoiseAggro(float Volume, const struct FVector& Location, float* ResultAggro, bool CallFunc_SetLastNoiseLocation_Result, const struct FVector& CallFunc_K2_ProjectPointToNavigation_ProjectedLocation, bool CallFunc_K2_ProjectPointToNavigation_ReturnValue, bool CallFunc_SetLastNoiseLocation_Result_1, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue);
	void BB_SyncSpawnPoint(bool CallFunc_IsValid_ReturnValue);
	void BB_SyncPatrolPoint(bool* Result, bool CallFunc_IsValid_ReturnValue);
	void SetSyncService(class UBTS_BaseSyncService_C* Service, bool* Result, bool CallFunc_BB_SetSlowProjectileReady_ReturnValue, bool CallFunc_BB_EvadePoint_ReturnValue, bool CallFunc_BB_AggroEmotionReady_ReturnValue, bool CallFunc_BB_SyncBehaviorType_ReturnValue, bool CallFunc_BB_GroupMovingLocation_ReturnValue, bool CallFunc_BB_SyncPatrolPoint_Result, bool CallFunc_BB_SyncState_ReturnValue);
	void CalculateNextPatrolPoint(enum class EAI_PatrolPointMode PatrolPointMode, const struct FVector& Point, float MinPointRadius, float MaxPointRadius, bool bUseMinRadius, struct FVector* PatrolPoint, float Distance, const struct FVector& TargetPoint, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetNextRandomWaypointLocation_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_GetNextWaypointLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_GetPoint_ResultPoint, bool CallFunc_SetPatrolPoint_Result, const struct FVector& CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation, bool CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue, bool CallFunc_SetPatrolPoint_Result_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, int32 CallFunc_RandomIntegerInRange_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4);
	void UpdateNoiseAggro(float DeltaTime, bool ResetState, bool* Updated, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);
	void PlaySoundWithAudioComponent(class USoundBase* Sound, float StartTime, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsPlaying_ReturnValue);
	bool OnDeathEvent(float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_OnDeathEvent_ReturnValue);
	void UserConstructionScript(const struct FTransform& CallFunc_GetTransform_ReturnValue);
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void MoveAltHit__FinishedFunc();
	void MoveAltHit__UpdateFunc();
	void MoveHit__FinishedFunc();
	void MoveHit__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void UpdateDamageMaterialEvent(float Health);
	void ReceiveAnyDamage(float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void PlayDamageSoundEvent();
	void BndEvt__SHPawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature(class APawn* Pawn);
	void PlayEvadeSound();
	void PlayMulticastComponentSound(class USoundBase* Sound);
	void ReceiveDestroyed();
	void StopMontage();
	void CreateAiInfoWidgets();
	void PlaySoundWithIntegerParameter(class USoundCue* Sound, class FName Name);
	void PlayMontage(class UAnimMontage* Montage);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void ResetBlockedRecently();
	void AIAttack();
	void ResetScoreLoweringFlag();
	void ReceiveAnyDamageCustom(float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser, bool bDamageBlocked);
	void SpawnDeathEffects();
	void OnHearNoise(float Volume, class AActor* Actor, const struct FVector& Location, float Distance);
	void ReceiveTick(float DeltaSeconds);
	void PlayHitReactionAnimation(const struct FVector& HitDirection, enum class EAttackActionType AttackActionType, enum class EMeleeWeaponType MeleeWeaponType, enum class EDazeType WeaponDazeType, float WeaponDazeChance);
	void AnimateBlendWeight();
	void PushBackOnHit(const struct FVector& MovingDiretion, enum class EHitResult HitResult, enum class EMeleeWeaponType MeleeWeaponType);
	void ExecuteUbergraph_BaseAiCharacter(int32 EntryPoint, enum class EMeleeWeaponType Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable_1, float Temp_float_Variable_2, float Temp_float_Variable_3, float Temp_float_Variable_4, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, float K2Node_CustomEvent_Health, float CallFunc_GetPercentageValue_ReturnValue, class UMaterialInterface* CallFunc_GetMaterial_ReturnValue, float K2Node_Event_Damage_1, class UDamageType* K2Node_Event_DamageType_1, class AController* K2Node_Event_InstigatedBy_1, class AActor* K2Node_Event_DamageCauser_1, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UMaterialInstanceDynamic* K2Node_DynamicCast_AsMaterial_Instance_Dynamic, bool K2Node_DynamicCast_bSuccess, class APawn* K2Node_ComponentBoundEvent_Pawn, bool CallFunc_IsAllowedEnemy_ReturnValue, bool CallFunc_SensingSeePawn_ReturnValue, class ASHCharacter* K2Node_DynamicCast_AsSHCharacter, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsInSafeZone_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class USoundBase* K2Node_CustomEvent_Sound, bool CallFunc_NotEqual_ObjectObject_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class UAIInfoWidget_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue_2, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class USHGameInstance* K2Node_DynamicCast_AsSHGame_Instance, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class USoundCue* K2Node_Event_Sound, class FName K2Node_Event_Name, bool CallFunc_BooleanAND_ReturnValue, class UAnimMontage* K2Node_CustomEvent_Montage, bool CallFunc_IsValid_ReturnValue_3, float CallFunc_PlayAnimMon_MontageDuration, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FTransform& CallFunc_MakeTransform_ReturnValue, bool CallFunc_NotEqual_ClassClass_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ASHWeapon_MeleeBase* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_DestroyAllWeapons_Result, enum class EEndPlayReason K2Node_Event_EndPlayReason, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue_1, class FName CallFunc_MakeLiteralName_ReturnValue_1, bool CallFunc_LessEqual_FloatFloat_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue_2, bool CallFunc_CheckCriticalZone_bIsInCriticalZone, class FName CallFunc_MakeLiteralName_ReturnValue_2, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue_3, class FName CallFunc_MakeLiteralName_ReturnValue_3, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue_4, class FName CallFunc_MakeLiteralName_ReturnValue_4, int32 CallFunc_Array_LastIndex_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue_1, int32 CallFunc_RandomIntegerInRange_ReturnValue, int32 CallFunc_RandomIntegerInRange_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, bool Temp_bool_Has_Been_Initd_Variable, const struct FVector& CallFunc_K2_ProjectPointToNavigation_ProjectedLocation, bool CallFunc_K2_ProjectPointToNavigation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4, bool Temp_bool_IsClosed_Variable, bool CallFunc_EqualEqual_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, float K2Node_Event_Damage, class UDamageType* K2Node_Event_DamageType, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, bool K2Node_Event_bDamageBlocked, bool CallFunc_IsAlive_ReturnValue, class APainVolume_Molotov_C* K2Node_DynamicCast_AsPain_Volume_Molotov, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_BooleanAND_ReturnValue_2, class APawn* CallFunc_GetInstigator_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_5, class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FVector& CallFunc_GetDirectionUnitVector_ReturnValue, class ASHCharacter* K2Node_DynamicCast_AsSHCharacter_1, bool K2Node_DynamicCast_bSuccess_4, const struct FVector& CallFunc_Multiply_VectorInt_ReturnValue, bool CallFunc_SensingTakeDamage_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, class UClass* CallFunc_GetObjectClass_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_SensingHearNoise_ReturnValue, bool CallFunc_IsAlive_ReturnValue_1, bool CallFunc_IsAlive_ReturnValue_2, bool CallFunc_IsServer_ReturnValue, class UNavigationSystemV1* CallFunc_GetNavigationSystem_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_1, float K2Node_Event_Volume, class AActor* K2Node_Event_Actor, const struct FVector& K2Node_Event_Location, float K2Node_Event_Distance, float K2Node_Event_DeltaSeconds, bool CallFunc_SensingHearNoise_ReturnValue_1, bool CallFunc_IsAllowedEnemy_ReturnValue_1, class ASHCharacter* K2Node_DynamicCast_AsSHCharacter_2, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_IsInSafeZone_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue_2, const struct FVector& K2Node_Event_HitDirection, enum class EAttackActionType K2Node_Event_AttackActionType, enum class EMeleeWeaponType K2Node_Event_MeleeWeaponType_1, enum class EDazeType K2Node_Event_WeaponDazeType, float K2Node_Event_WeaponDazeChance, class UAnimMontage* CallFunc_GetHitReactionAnim_HitReactionMontage, float CallFunc_PlayAnimMon_MontageDuration_1, const struct FVector& K2Node_Event_MovingDiretion, enum class EHitResult K2Node_Event_HitResult, enum class EMeleeWeaponType K2Node_Event_MeleeWeaponType, bool K2Node_SwitchEnum_CmpSuccess, float K2Node_Select_Default, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_5, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue_1);
};

}


