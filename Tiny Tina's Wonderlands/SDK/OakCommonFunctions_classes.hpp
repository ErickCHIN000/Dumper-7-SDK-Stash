#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass OakCommonFunctions.OakCommonFunctions_C
class UOakCommonFunctions_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakCommonFunctions_C* GetDefaultObj();

	void Bitmask_EnumArrayToInt(TArray<uint8>& Enum, class UObject* __WorldContext, int32* Bitmask, int32 MyBitmaskAdds, const TArray<uint8>& MyEnumUnique, int32 MyBitmaskInt, TMap<int32, uint8> MyBitmaskLookup, const TArray<int32>& MyBytes, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable1, TMap<int32, uint8> K2Node_MakeVariable_MakeVariableOutput, uint8 CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable1, uint8 CallFunc_Array_Get_Item1, int32 CallFunc_Array_Length_ReturnValue1, int32 CallFunc_Bitmask_EnumToInt_Bitmask, bool CallFunc_Less_IntInt_ReturnValue1, int32 CallFunc_Add_IntInt_ReturnValue1, int32 CallFunc_Add_IntInt_ReturnValue2, int32 CallFunc_Array_AddUnique_ReturnValue);
	void Bitmask_EnumToInt(uint8 Enum, class UObject* __WorldContext, int32* Bitmask, int32 MyBitmaskInt, TMap<int32, uint8> MyBitmaskLookup, const TArray<int32>& MyBytes, TMap<int32, uint8> K2Node_MakeVariable_MakeVariableOutput, int32 CallFunc_Conv_ByteToInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_MultiplyMultiply_FloatFloat_ReturnValue, int32 CallFunc_FTrunc_ReturnValue);
	void Bitmask_RandomEnum(int32 BitmaskInt, class UObject* __WorldContext, uint8* RandomEnum, TMap<int32, uint8> MyBitmaskLookup, const TArray<int32>& MyBytes, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue1, int32 CallFunc_And_IntInt_ReturnValue, int32 CallFunc_And_IntInt_ReturnValue1, TMap<int32, uint8> K2Node_MakeVariable_MakeVariableOutput, int32 CallFunc_MakeLiteralInt_ReturnValue2, int32 CallFunc_And_IntInt_ReturnValue2, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue3, int32 CallFunc_RandomInteger_ReturnValue, int32 CallFunc_And_IntInt_ReturnValue3, int32 CallFunc_Array_Get_Item, int32 CallFunc_MakeLiteralInt_ReturnValue4, uint8 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_And_IntInt_ReturnValue4, int32 CallFunc_MakeLiteralInt_ReturnValue5, int32 CallFunc_MakeLiteralInt_ReturnValue6, int32 CallFunc_And_IntInt_ReturnValue5, int32 CallFunc_And_IntInt_ReturnValue6, int32 CallFunc_MakeLiteralInt_ReturnValue7, int32 CallFunc_MakeLiteralInt_ReturnValue8, int32 CallFunc_And_IntInt_ReturnValue7, int32 CallFunc_And_IntInt_ReturnValue8, int32 CallFunc_MakeLiteralInt_ReturnValue9, int32 CallFunc_MakeLiteralInt_ReturnValue10, int32 CallFunc_And_IntInt_ReturnValue9, int32 CallFunc_And_IntInt_ReturnValue10, int32 CallFunc_MakeLiteralInt_ReturnValue11, int32 CallFunc_MakeLiteralInt_ReturnValue12, int32 CallFunc_And_IntInt_ReturnValue11, int32 CallFunc_And_IntInt_ReturnValue12, int32 CallFunc_MakeLiteralInt_ReturnValue13, int32 CallFunc_MakeLiteralInt_ReturnValue14, int32 CallFunc_And_IntInt_ReturnValue13, int32 CallFunc_And_IntInt_ReturnValue14, int32 CallFunc_MakeLiteralInt_ReturnValue15, int32 Temp_int_Variable, int32 CallFunc_And_IntInt_ReturnValue15, TArray<int32>& K2Node_MakeArray_Array, bool CallFunc_Array_RemoveItem_ReturnValue);
	void CheckChallengeArrayStatus(TArray<class UClass*>& Challenge_Array, class APlayerController* Chracter_Controller, class UObject* __WorldContext, TArray<class UClass*>* Completed_Challenges_Array, const TArray<class UClass*>& CompletedChallengeArray, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UClass* CallFunc_Array_Get_Item, bool CallFunc_CheckChallengeStatus_Complete, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void CheckChallengeStatus(class APlayerController* CharacterController, class UClass* Challenge, class UObject* __WorldContext, bool* Complete, bool CallFunc_IsValid_ReturnValue, class UChallengesComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsChallengeComplete_ReturnValue, bool CallFunc_IsValid_ReturnValue1);
	void ChallengeComplete_AllPlayers(class UClass* Challenge, class UObject* __WorldContext, TArray<class AOakCharacter_Player*>& CallFunc_GetAllPlayerCharacters_Characters, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class AOakCharacter_Player* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void ChallengeActivate_AllPlayers(class UClass* Challenge, class UObject* __WorldContext, TArray<class AOakCharacter_Player*>& CallFunc_GetAllPlayerCharacters_Characters, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class AOakCharacter_Player* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void ChallengeComplete(class AOakCharacter_Player* Character, class UClass* Challenge, class UObject* __WorldContext, class APlayerController* CallFunc_GetAssociatedPlayerController_ReturnValue, class UChallengesComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue1);
	void ChallengeActivate(class AOakCharacter_Player* Character, class UClass* Challenge, class UObject* __WorldContext, class APlayerController* CallFunc_GetAssociatedPlayerController_ReturnValue, class UChallengesComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue1);
	void Cosh(float A, class UObject* __WorldContext, float* _result, float CallFunc_Exp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Exp_ReturnValue1, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);
	void SetMissionDoorState(const struct FMissionObjectiveReference& ObjectiveRef, class UObject* Context, class UObject* __WorldContext, class UObject* Door, TScriptInterface<class IBPI_Door_C> K2Node_DynamicCast_AsBPI_Door, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IBPI_Door_C> K2Node_DynamicCast_AsBPI_Door1, bool K2Node_DynamicCast_bSuccess1, TScriptInterface<class IBPI_Door_C> K2Node_DynamicCast_AsBPI_Door2, bool K2Node_DynamicCast_bSuccess2, enum class EMissionObjectiveStatus CallFunc_GetMissionObjectiveStatusRef_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void SetMissionSwitchState(const struct FMissionObjectiveReference& ObjectiveRef, class UObject* Context, class UObject* __WorldContext, class UObject* Switch, TScriptInterface<class IBPI_IO_Switch_C> K2Node_DynamicCast_AsBPI_IO_Switch, bool K2Node_DynamicCast_bSuccess, enum class EMissionObjectiveStatus CallFunc_GetMissionObjectiveStatusRef_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, TScriptInterface<class IBPI_IO_Switch_C> K2Node_DynamicCast_AsBPI_IO_Switch1, bool K2Node_DynamicCast_bSuccess1, TScriptInterface<class IBPI_IO_Switch_C> K2Node_DynamicCast_AsBPI_IO_Switch2, bool K2Node_DynamicCast_bSuccess2);
	void SetDebugConsoleCommands(class APlayerController* PlayerController, bool Stat_Unit, bool Stat_FPS, bool ShowDebug_Missions, bool ToggleAllScreenMessages, bool BalanceMe, bool NoTarget, bool God, bool Demigod, bool Loaded, bool AllAmmo, class UObject* __WorldContext, class APlayerController* Player, bool CallFunc_IsEditorSession_ReturnValue);
	void MissionTempHudText(class UObject* WorldContextObject, class FText Text, float TextSize, float Duration, const struct FLinearColor& TextColor, class UObject* __WorldContext, int32 CallFunc_FTrunc_ReturnValue);
	void MissionTempSpeakText(class UObject* WorldContextObject, class UClass* ActorClass, class FText Text, float TextSize, float Duration, const struct FLinearColor& TextColor, bool FacePlayer, class UObject* __WorldContext, TArray<class AOakCharacter*>& CallFunc_GetAllActorsOfClass_OutActors, bool CallFunc_IsValid_ReturnValue, class AOakCharacter* CallFunc_Array_Get_Item, TScriptInterface<class IBPInterface_TempHudTextProvider_C> K2Node_DynamicCast_AsBPInterface_Temp_Hud_Text_Provider, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void DisplayErrorMessage(class UObject* Context, const class FString& ErrorMessage, class UObject* __WorldContext, const class FString& CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue1);
	void Compare_Damage_Source(class UDamageSource* Damage_Source_1, class UClass* Damage_Source_2, class UObject* __WorldContext, bool* Equal, bool* Not_Equal, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void Make_Transforms_Around_Cone(const struct FVector& Cone_Axis, const struct FVector& Cone_Location, float Cone_Angle_Min, float Cone_Angle_Max, float Rotation_Angle_Divergence, float Sweep_Angle, float Distance_From_Cone_Center, int32 Number_Of_Transforms, class UObject* __WorldContext, TArray<struct FTransform>* Out_Transforms, const TArray<struct FTransform>& Transforms, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue1, float CallFunc_Subtract_FloatFloat_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, int32 Temp_int_Variable, float CallFunc_Multiply_IntFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_TransformDirection_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue1, const struct FTransform& CallFunc_MakeTransform_ReturnValue1, int32 CallFunc_Array_Add_ReturnValue);
	void Get_Player_View_Trace(class AOakCharacter_Player* Player_Character, float Trace_Length, class UObject* __WorldContext, struct FVector* Trace_Start, struct FVector* Trace_End, class AController* CallFunc_GetController_ReturnValue, const struct FVector& CallFunc_GetActorAimViewPoint_OutLocation, const struct FRotator& CallFunc_GetActorAimViewPoint_OutRotation, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void Get_Regeneration_Rate(class UObject* Context, float Max_Regen_Rate, class UObject* __WorldContext, float* Regen_Rate, float CallFunc_GetValueOfAttribute_ReturnValue, float CallFunc_EvaluateAttributeInitializer_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue1);
};

}


