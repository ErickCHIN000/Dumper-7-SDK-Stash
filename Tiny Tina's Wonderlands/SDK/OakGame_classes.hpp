#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x1E0 (0x638 - 0x458)
// Class OakGame.Agonizer9kFloor
class AAgonizer9kFloor : public AActor
{
public:
	class UTeam*                                 PlayersTeam;                                       // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     HeatingElementMaterial;                            // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               DamageData;                                        // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               DamageData_SmallDamage;                            // 0x470(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BurstFlameAudio1;                                  // 0x478(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BurstFlameAudio2;                                  // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BurstFlameAudio3;                                  // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BurstFlameAudio4;                                  // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioSmall1;                                // 0x498(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioSmall2;                                // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioSmall3;                                // 0x4A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioSmall4;                                // 0x4B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioBig1;                                  // 0x4B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioBig2;                                  // 0x4C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioBig3;                                  // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioBig4;                                  // 0x4D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstFlameAudioGain;                               // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstFlamesAudioRadius;                            // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstFlamesAudioRadiusRingMultiplier;              // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B0B[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       SceneRootComp;                                     // 0x4E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarmupTime;                                        // 0x4F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarmUpDelayWhenAllWarmUpDone;                      // 0x4F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationFloorDoneTime;                             // 0x4F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloorRotationTimeBetweenSector;                    // 0x4FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnticipationTimeOneRing;                           // 0x500(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnticipationTime;                                  // 0x504(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnticipationTimeRotationPattern;                   // 0x508(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstinitialOffset;                                // 0x50C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstOffsetPerRing;                                // 0x510(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RingPatternInterval;                               // 0x514(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatingPipeEmissiveInterval;                       // 0x518(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_B22[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           EmissiveStrengthOverTime;                          // 0x520(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           EmissiveStrengthOverTimeFadeOut;                   // 0x528(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFloorFirstFlame;                                 // 0x530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FSectorFromBP>                 SectorsBP;                                         // 0x540(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_B28[0x50];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AAgonizer9k*                           AgonizerRef;                                       // 0x5A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_B2B[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseAudioComponent*                  AudioComponent1;                                   // 0x5C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  AudioComponent2;                                   // 0x5C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  AudioComponent3;                                   // 0x5D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  AudioComponent4;                                   // 0x5D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_B30[0x58];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAgonizer9kFloor* GetDefaultObj();

	void StopHeatingPipeEmissive(struct FRing* SectorRing);
	void StartSafeSpotPattern(float DelayBeforeStart);
	void StartRotationPattern(float DelayBeforeStart);
	void StartRingPattern(float DelayBeforeStart);
	void StartHeatingPipeEmissive(struct FRing* SectorRing);
	void StartAnticipationSafeSpot(TArray<int32>& SafeSpotSectorIds);
	void SetFloorRotationParameters(int32 Direction, int32 StartingSectorId);
	void SetAgonizerRef(class AAgonizer9k* AgonizerRef);
	void PlayBurstFlameAudio();
	void OnWarmUpDone(struct FSector* FloorSector);
	void OnRotationAnticipationDone(struct FSector* FloorSector, bool IsLast);
	void OnFloorPatternDone();
	void OnAnticipationOneRingDone(struct FSector* FloorSector, struct FRing* SectorRing);
	void OnAnticipationDone();
	void CreateSectorsDataFromBP();
};

// 0x718 (0x890 - 0x178)
// Class OakGame.ActiveWeaponsComponent
class UActiveWeaponsComponent : public UActorComponent
{
public:
	uint8                                        Pad_C71[0x40];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnZoomChange;                                      // 0x1B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWeaponChanged;                                   // 0x1C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWeaponReloadStarted;                             // 0x1D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWeaponReloadEnded;                               // 0x1E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UWeaponSlotData*>               WeaponSlots;                                       // 0x1F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        WeaponsScale;                                      // 0x208(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C7A[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AWeapon>                   DefaultWeaponClass;                                // 0x210(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryBalanceData*                 DefaultBalanceWeaponData;                          // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoSpawnDefaultWeapon;                           // 0x220(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C80[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponSlotContainer                  Weapons;                                           // 0x228(0x650)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class APawn*                                 OwnerPawn;                                         // 0x878(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryCategoryData*                WeaponItemType;                                    // 0x880(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C87[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActiveWeaponsComponent* GetDefaultObj();

	void ZoomEvent__DelegateSignature(enum class EZoomEventType IsZooming);
	void WeaponReloadStarted(class AWeapon* Weapon, bool bAuto);
	void WeaponReloadEnded(class AWeapon* Weapon, bool bCompleted, bool bAmmoGiven);
	void WeaponPutDown(class AWeapon* PutDownWeapon);
	void WeaponChangedEvent__DelegateSignature(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	class AWeapon* SpawnWeaponFromClass(TSubclassOf<class AWeapon> WeaponClass, class UWeaponSlotData* Slot);
	class AWeapon* SpawnWeaponFromBalanceData(class UInventoryBalanceData* WeaponBalanceData, class UWeaponSlotData* Slot);
	class AWeapon* SpawnVehicleWeaponFromAspectData(class UVehicleAttachWeaponAspectData* VehicleWeaponAspectData, class UWeaponSlotData* Slot);
	void SpawnDefaultWeapon();
	void ServerUnlockWeaponActions(class FName Reason, int32 ChannelsMask);
	void ServerStopWeaponActions(uint8 Slot, int32 ChannelsMask, bool bClearInput);
	void ServerSetCurrentWeapon(class AWeapon* NewWeapon, uint8 NewWeaponSlot, enum class EWeaponPutDownType PutDownType, enum class EWeaponEquipType EquipType);
	void ServerLockWeaponActions(class FName Reason, int32 ChannelsMask, bool bStopActions, bool bClearInput);
	void OnWeaponResumeUse(class UWeaponSlotData* AttachedSlot);
	class AWeapon* GetWeapon(uint8 Slot);
	void ClientUnlockWeaponActions(class FName Reason, int32 ChannelsMask);
	void ClientStopWeaponActions(uint8 Slot, int32 ChannelsMask, bool bClearInput);
	void ClientLockWeaponActions(class FName Reason, int32 ChannelsMask, bool bStopActions, bool bClearInput);
};

// 0x20 (0x50 - 0x30)
// Class OakGame.ActivityFeedActionData
class UActivityFeedActionData : public UGbxDataAsset
{
public:
	class FString                                CaptionString;                                     // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ButtonImageURL;                                    // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UActivityFeedActionData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.UActivityFeedData
class UUActivityFeedData : public UGbxDataAsset
{
public:

	static class UClass* StaticClass();
	static class UUActivityFeedData* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class OakGame.ActivityFeedOpenStoreActionData
class UActivityFeedOpenStoreActionData : public UActivityFeedActionData
{
public:

	static class UClass* StaticClass();
	static class UActivityFeedOpenStoreActionData* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class OakGame.ActivityFeedReward
class UActivityFeedReward : public UGbxDataAsset
{
public:
	class FText                                  CaptionString;                                     // 0x30(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  CondensedCaptionString;                            // 0x48(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                SmallImageUrl;                                     // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EActivityFeedImageAspectRatio     SmallImageAspectRatio;                             // 0x70(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_CFF[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LargeImageUrl;                                     // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActivityFeedURLActionData*            URLBrowserActionData;                              // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActivityFeedOpenStoreActionData*      URLStoreActionData;                                // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActivityFeedStartGameActionData*      StartGameActionData;                               // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UActivityFeedReward* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class OakGame.ActivityFeedStartGameActionData
class UActivityFeedStartGameActionData : public UActivityFeedActionData
{
public:
	class FString                                CommandLineArgumentsString;                        // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UActivityFeedStartGameActionData* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class OakGame.ActivityFeedURLActionData
class UActivityFeedURLActionData : public UActivityFeedActionData
{
public:
	class FString                                URLString;                                         // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UActivityFeedURLActionData* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class OakGame.AdditionalZoneMapData
class UAdditionalZoneMapData : public UGbxDataAsset
{
public:
	class UZoneMapData*                          ParentZoneMap;                                     // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ZoneMapMeshAssetReference;                         // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapPOIEntry>              AdditionalZoneMapPOIList;                          // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UPatchExpansionData*                   AssociatedPatch;                                   // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDownloadableContentData*              AssociatedDLC;                                     // 0x68(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAdditionalZoneMapData* GetDefaultObj();

};

// 0x130 (0x588 - 0x458)
// Class OakGame.InteractiveObject
class AInteractiveObject : public AActor
{
public:
	uint8                                        Pad_EC7[0x60];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCompiledUserStatesData               CompiledUserStatesData;                            // 0x4B8(0x10)(Edit, DisableEditOnInstance, EditConst, DuplicateTransient, Protected, NativeAccessSpecifierProtected)
	bool                                         bUserStatesWaitForSaveGame;                        // 0x4C8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSimulateUserStates;                               // 0x4C9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_ECC[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUserStatesRuntimeData                RuntimeUserStatesData;                             // 0x4D0(0x10)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FUserStatesReplicationData            ReplicatedUserStatesData;                          // 0x4E0(0x8)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bRegisterAsTargetable;                             // 0x4E8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldDisplayNameplate;                           // 0x4E9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_ED7[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakDamageComponent*                   CachedDamageComponent;                             // 0x4F0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTargetableComponent*                  CachedTargetableComponent;                         // 0x4F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EInteractiveObjectState           RepCurrentState;                                   // 0x500(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EInteractiveObjectLockState       RepCurrentLockState;                               // 0x501(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EInteractiveObjectInteractiveState RepCurrentInteractiveState;                        // 0x502(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EInteractiveObjectState           CurrentState;                                      // 0x503(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EInteractiveObjectLockState       CurrentLockState;                                  // 0x504(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EInteractiveObjectInteractiveState CurrentInteractiveState;                           // 0x505(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_EEB[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCullableIO                           CullSettings;                                      // 0x508(0x8)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        bShouldShowLevelSyncedNameplate : 1;               // Mask: 0x1, PropSize: 0x10x510(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ShouldColorCrosshairRed : 1;                       // Mask: 0x2, PropSize: 0x10x510(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHideWhenAttachedToHiddenCharacter : 1;            // Mask: 0x4, PropSize: 0x10x510(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanNotifyKillersOfDeath : 1;                      // Mask: 0x8, PropSize: 0x10x510(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanTriggerAttackerCausedDamageEvents : 1;         // Mask: 0x10, PropSize: 0x10x510(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoEnvironmentalLevelSync : 1;                     // Mask: 0x20, PropSize: 0x10x510(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_8F : 2;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsTrapTrigger : 1;                                // Mask: 0x1, PropSize: 0x10x511(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTrapBreaker : 1;                                  // Mask: 0x2, PropSize: 0x10x511(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bReverseTriggerInstructionWhenTriggerDeactivates : 1; // Mask: 0x4, PropSize: 0x10x511(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTrapIsBroken : 1;                                 // Mask: 0x8, PropSize: 0x10x511(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_90 : 4;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_F02[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInteractiveObjectTrapEntry>   TrapsList;                                         // 0x518(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                        Pad_F0F[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                PrimarySkeletalMeshComponent;                      // 0x530(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       OnEnablingAnimation;                               // 0x538(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       OnEnabledAnimation;                                // 0x540(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       OnDisablingAnimation;                              // 0x548(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       OnDisabledAnimation;                               // 0x550(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       OnLockedAnimation;                                 // 0x558(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F27[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPlayerAlertType                  PlayerAlertType;                                   // 0x568(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F2D[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UTrackedInteractionData*               TrackedInteractionData;                            // 0x570(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 TrackedInteractionGuid;                            // 0x578(0x10)(Edit, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AInteractiveObject* GetDefaultObj();

	void SetGbxUserState(class FName VariableName, uint8 Value);
	void ResetTrapBrokenState();
	void OnTrapTriggerStateChanged(bool bTriggerActivated);
	void OnTrapDeactivated();
	void OnTrapActivated();
	void OnSaveGameLoaded(class AOakPlayerController* OakPlayerController);
	void OnRep_ReplicatedUserStatesData();
	void OnRep_RepCurrentState();
	void OnRep_RepCurrentLockState();
	void OnRep_RepCurrentInteractiveState();
	void OnLStateUnlocked();
	void OnLStateLocked();
	void OnLocked();
	void OnIStateNonInteractive();
	void OnIStateInteractive();
	void OnEnabling();
	void OnEnabled();
	void OnDisabling();
	void OnDisabled();
	void OnAnimationEnded(class UAnimationAsset* Asset);
	bool IsTrackedInteractionComplete();
	void CompleteTrackedInteraction();
	void ChangeState(enum class EInteractiveObjectState NewState);
	void ChangeLockState(enum class EInteractiveObjectLockState NewState);
	void ChangeInteractiveState(enum class EInteractiveObjectInteractiveState NewState);
	void ChangeBalanceTableRow(struct FDataTableRowHandle& NewBalanceTableRow);
};

// 0xF8 (0x680 - 0x588)
// Class OakGame.AdvancedInteractiveObject
class AAdvancedInteractiveObject : public AInteractiveObject
{
public:
	class UAIO_CameraData*                       CameraData;                                        // 0x588(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraMode;                                        // 0x590(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraBlendInTime;                                 // 0x598(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraBlendOutTime;                                // 0x59C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraExitTransitionDuration;                      // 0x5A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayBeforeCameraExitTransitionStarts;             // 0x5A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockPlayerMovement;                               // 0x5A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockPlayerWeaponUsage;                            // 0x5A9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRestrictPlayerWeapons;                            // 0x5AA(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrackNearbyPlayers;                               // 0x5AB(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideHUDInstantly;                                 // 0x5AC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1060[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  PlayerBeginInteraction;                            // 0x5B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PlayerStopInteraction;                             // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AAdvancedInteractiveObjectProxy> ProxyActorClass;                                   // 0x5D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableActorCulling;                               // 0x5D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreAssociatedNPCForCulling;                    // 0x5D9(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1069[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class ASpawner>>       AssociatedNPCSpawners;                             // 0x5E0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AActor>>          IgnoreCullingForActorClass;                        // 0x5F0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UUsableComponent*                      UsableComponent;                                   // 0x600(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxMenuData*                          AIOMenuData;                                       // 0x608(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseCoherentMenu;                                  // 0x610(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1071[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CoherentMenuState;                                 // 0x618(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAnyoneInInteractRange;                          // 0x620(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1075[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakPlayerController*>          PlayersInInteractRange;                            // 0x628(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsAnyoneInteracting;                              // 0x638(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1079[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakPlayerController*>          InteractingPlayers;                                // 0x640(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AAdvancedInteractiveObjectProxy*> LocalProxies;                                      // 0x650(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AOakPlayerController*                  LookedAtByController;                              // 0x660(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UObject>                AssociatedPushedMenu;                              // 0x668(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseProxyForPlayerAlert;                           // 0x670(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1086[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HardwareLightingState;                             // 0x678(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AAdvancedInteractiveObject* GetDefaultObj();

	void OnRep_bIsAnyoneInteracting();
	void OnPlayerStopInteraction(class AOakPlayerController* Player);
	void OnPlayerExitedInteractRange(class AOakPlayerController* Player);
	void OnPlayerEnteredInteractRange(class AOakPlayerController* Player);
	void OnPlayerBeginInteraction(class AOakPlayerController* Player);
	void OnNoPlayersNowInInteractRange();
	void OnLookedAwayFromByPlayer();
	void OnLookedAtByPlayer(class APlayerController* InstigatingPlayer, bool bCanInteractWith, const struct FVector& NewUsableComponentImpactPoint, float NewUsableDistanceAway);
	void OnAnyPlayersNowInInteractRange();
	void NotifyUsed(struct FUseEvent& UseEvent);
	void HandleActorDestroyed(class AActor* Actor);
};

// 0x0 (0x668 - 0x668)
// Class OakGame.AdvancedInteractiveObjectOwnedGFxMenu
class UAdvancedInteractiveObjectOwnedGFxMenu : public UGbxGFxMenu
{
public:

	static class UClass* StaticClass();
	static class UAdvancedInteractiveObjectOwnedGFxMenu* GetDefaultObj();

};

// 0xB0 (0x508 - 0x458)
// Class OakGame.AdvancedInteractiveObjectProxy
class AAdvancedInteractiveObjectProxy : public AActor
{
public:
	uint8                                        Pad_112C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftClassPath                        GbxInputComponentClass;                            // 0x460(0x18)(Config, GlobalConfig, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          DefaultSchemas;                                    // 0x478(0x10)(ZeroConstructor, Config, GlobalConfig, Protected, NativeAccessSpecifierProtected)
	struct FAIOOrientedParticleData              ProjectionFXData;                                  // 0x488(0x40)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bAllowInput;                                       // 0x4C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_112E[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DefaultCameraState;                                // 0x4E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CurrentCameraState;                                // 0x4E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CameraEntryTransitionIndex;                        // 0x4F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCurrentlyInteracting;                             // 0x4F4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPlayerWithinInteractRange;                        // 0x4F5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCameraTransitionInProgress;                       // 0x4F6(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_113E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  OwningPlayer;                                      // 0x4F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAdvancedInteractiveObject*            OwningAIO;                                         // 0x500(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AAdvancedInteractiveObjectProxy* GetDefaultObj();

	void OnOwningPlayerStoppedInteraction();
	void OnOwningPlayerStartedInteraction();
	void OnOwningPlayerExitedInteractRange();
	void OnOwningPlayerEnteredInteractRange();
	void OnFinalizeStopInteraction();
};

// 0x16A8 (0x2458 - 0xDB0)
// Class OakGame.OakCharacter
class AOakCharacter : public AGbxCharacter
{
public:
	uint8                                        Pad_1DAC[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGbxAIController*                      OwnerGbxAIController;                              // 0xEA0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakAIActionComponent*                 AIActionComponent;                                 // 0xEA8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakCharacterMovementComponent*        OakCharacterMovement;                              // 0xEB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameResourcePoolManagerComponent*     ResourcePoolComponent;                             // 0xEB8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDamageComponent*                   OakDamageComponent;                                // 0xEC0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDamageCauserComponent*             OakDamageCauserComponent;                          // 0xEC8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakCharacterAbilityManagerComponent*  AbilityManagerComponent;                           // 0xED0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakStatusEffectManagerComponent*      StatusEffectManagerComponent;                      // 0xED8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryListComponent*               OakCharacterInventory;                             // 0xEE0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryListComponent*               OakCharacterBankInventory;                         // 0xEE8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWadingEffectsComponent*               WadingEffectsComponent;                            // 0xEF0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyWeaponHoldManagerComponent*       CachedBodyWeaponHoldManager;                       // 0xEF8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIWeaponUserComponent*                AIWeaponUser;                                      // 0xF00(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHealthState                      HealthState;                                       // 0xF08(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathType                        DeathType;                                         // 0xF09(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRunNormalCharacterPhysicsOnDeath;                 // 0xF0A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDeadAttached;                                    // 0xF0B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDeadInSeatedTurret;                             // 0xF0C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DDF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHealthStateChanged;                              // 0xF10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthy;                                         // 0xF20(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthLow;                                       // 0xF30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthVeryLow;                                   // 0xF40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInjured;                                         // 0xF50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDead;                                            // 0xF60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DEE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         CanGoToInjuredState;                               // 0xF88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DEF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterCorpseState                 CorpseState;                                       // 0xF90(0xE8)(Edit, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnZoomChange;                                      // 0x1078(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DF2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnWeaponChanged;                                   // 0x1098(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWeaponReloadStarted;                             // 0x10A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWeaponReloadEnded;                               // 0x10B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWeaponUsed;                                      // 0x10C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCompareToEquippedItem;                           // 0x10D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndCompareToEquippedItem;                        // 0x10E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTransported;                                     // 0x10F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEquippedArmorChanged;                            // 0x1108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCameraModeSetData*                    CameraModesSet;                                    // 0x1118(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCameraModeSetData*>            CameraModeSetList;                                 // 0x1120(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UBalanceStateComponent*                BalanceComponent;                                  // 0x1130(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFightForYourLifeComponent*            FFYLComponent;                                     // 0x1138(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USprintData*                           SprintInfo;                                        // 0x1140(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPostLoadGame;                                    // 0x1148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bForcePenetrateOnSelf;                             // 0x1158(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETargetedNameplateType            DesiredNameplateType;                              // 0x1159(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E0D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxHUDData*                           HUDInfo;                                           // 0x1160(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerGivenNicknameKey;                            // 0x1168(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayerStandInData*                    StandInData;                                       // 0x1170(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEligibleForIgnoreCollisionWithPlayers;            // 0x1178(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPushOverlappingPlayersAway;                       // 0x1179(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanUseWeaponWhileSprinting;                       // 0x117A(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoEquipWeapons;                                 // 0x117B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIkOverride;                                       // 0x117C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeRooted;                                      // 0x117D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E32[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class ITravelStationSpawnPointInterface> LastSpawnPoint;                                    // 0x1180(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E35[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MusicThreatValue;                                  // 0x1194(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCopyPlayerCustomizationsFromInstigator;           // 0x1198(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCustomSlidingEyeHeight;                        // 0x1199(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E39[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlidingEyeHeight;                                  // 0x119C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxAttributeModifierHandle>   SprintingAttributeModifiers;                       // 0x11A0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E43[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStaticRagdollReplicationData         DeadRagdollReplicationData;                        // 0x1248(0x10)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E4A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  ShieldEquipped;                                    // 0x1260(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ShieldUnequipped;                                  // 0x1270(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E50[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bBlockVehicle;                                     // 0x1318(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E52[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleCollisionResistanceFactor;                  // 0x131C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageToVehicleFactor;                             // 0x1320(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E5B[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnInventoryEquippedEvent;                          // 0x1368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInventoryUnequippedEvent;                        // 0x1378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInventoryItemPickedUp;                           // 0x1388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInventorySlotEnableEvent;                        // 0x1398(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E67[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCausedElementalEffect;                           // 0x13C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCausedMaxResourceEffect;                         // 0x13D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E6C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerAlert;                                     // 0x1400(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E6D[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AInteractiveObject*>            AttachedHidableIOs;                                // 0x14A8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E71[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AWeapon>                   DefaultWeaponClass;                                // 0x14C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryBalanceData*                 DefaultBalanceWeaponData;                          // 0x14C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UInventorySlotData*>            EquipmentSlots;                                    // 0x14D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UWeaponSlotData*>               ActiveWeaponSlots;                                 // 0x14E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        ActiveWeaponScale;                                 // 0x14F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideBalanceInventory : 1;                     // Mask: 0x1, PropSize: 0x10x14F4(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDiscardInventoryOnDeath : 1;                      // Mask: 0x2, PropSize: 0x10x14F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRebuildInventoryOnLevelChange : 1;                // Mask: 0x4, PropSize: 0x10x14F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanShowHolsterableItemsOnBody : 1;                // Mask: 0x8, PropSize: 0x10x14F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_B7 : 4;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1E8B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABodyArmor*                            EquippedBodyArmor;                                 // 0x14F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E8D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HideWeaponOnSpawnReason;                           // 0x1508(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHideWeaponOnSpawn : 1;                            // Mask: 0x1, PropSize: 0x10x1510(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_B8 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1E9E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHolsteredWeaponData>          WeaponHolsterData;                                 // 0x1518(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UInventoryCategoryData*                WeaponItemType;                                    // 0x1528(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryCategoryData*                CreditsItemType;                                   // 0x1530(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryCategoryData*                BodyArmorItemType;                                 // 0x1538(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryCategoryData*                ShieldItemType;                                    // 0x1540(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryCategoryData*                SpellItemType;                                     // 0x1548(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryCategoryData*                MeleeWeaponItemType;                               // 0x1550(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInventorySlotContainer               EquippedInventory;                                 // 0x1558(0xE8)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	struct FWeaponSlotContainer                  ActiveWeapons;                                     // 0x1640(0x650)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AHolsteredGearSlot*>            HolsteredGear;                                     // 0x1C90(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EB9[0x1D0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AWeapon*                               HolsteredWeapon;                                   // 0x1E70(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventorySlotData*                    PreferredHolsterWeaponSlot;                        // 0x1E78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    WeaponSwapTimeScale;                               // 0x1E80(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseAccuracyPattern;                               // 0x1E8C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeaponsRestricted;                                // 0x1E8D(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EC6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter*                         InventoryProxy;                                    // 0x1E90(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlideModifierAspectData*              CurrentSlideModifier;                              // 0x1E98(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ECB[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecentlyEquippedWeaponInSprintTime;                // 0x1EBC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ECE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CameraSocket;                                      // 0x1ED0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         BaseTransformsAnimation;                           // 0x1ED8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverrideVisibleCorpseRemovalTime;                  // 0x1EE0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ED5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction_CoordinatedEffect> CorpseRemovalActionOverride;                       // 0x1EE8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AudioRandomVariationValue;                         // 0x1EF0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ED9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseAudioComponent*                  CachedDefaultAudioComponent;                       // 0x1EF8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  AddInWorldIconEvent;                               // 0x1F00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  RemoveInWorldIconEvent;                            // 0x1F10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EE1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageSource>             LastDamageSourceClass;                             // 0x1F28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                KillerActor;                                       // 0x1F30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActorComponent*                       CachedFaceFXComponent;                             // 0x1F38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanStomp;                                         // 0x1F40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EE8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StompDivideModifier;                               // 0x1F44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnterVehicleStarted;                             // 0x1F48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnterVehicleFinished;                            // 0x1F58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitVehicleStarted;                              // 0x1F68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitVehicleFinished;                             // 0x1F78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnChangeVehicleSeat;                               // 0x1F88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnChangeVehicleSeatFinished;                       // 0x1F98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnterTurretStarted;                              // 0x1FA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnterTurretFinished;                             // 0x1FB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitTurretStarted;                               // 0x1FC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitTurretFinished;                              // 0x1FD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UVehicleClassIdentifier*               VehicleClassIDBeforeDeath;                         // 0x1FE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VehicleSeatSlotBeforeDeath;                        // 0x1FF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVehicleSeatComponent*                 LastVehicleSeat;                                   // 0x1FF8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVehicleSeatComponent*                 CurrentVehicleSeat;                                // 0x2000(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F01[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakVehicle*                           OwnedVehicle;                                      // 0x2010(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakVehicle*                           CARVehicle;                                        // 0x2018(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F07[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakPawnAttachSlotComponent*           LastTurretSeat;                                    // 0x2028(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPawnAttachSlotComponent*           CurrentTurretSeat;                                 // 0x2030(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F0D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EOakGender                        Gender;                                            // 0x2039(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseGender;                                        // 0x203A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F2E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakGenderData                        MaleGenderData;                                    // 0x2040(0x98)(Edit, NativeAccessSpecifierPrivate)
	struct FOakGenderData                        FemaleGenderData;                                  // 0x20D8(0x98)(Edit, NativeAccessSpecifierPrivate)
	struct FOakCharacterCustomizationData        CustomizationSettings;                             // 0x2170(0x248)(Edit, NativeAccessSpecifierPrivate)
	int32                                        CustomizationSeed;                                 // 0x23B8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F3B[0x1D];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseSocketsForIconPlacement;                       // 0x23D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPolymorphed;                                    // 0x23DA(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F3E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAIAction>                 MainAIAction;                                      // 0x23E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOakCoordinatedEffectSwitch           CoordinatedEffectSwitch;                           // 0x23E8(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, Net, RepNotify, ContainsInstancedReference, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class UEnum*                                 AnimStyleEnum;                                     // 0x2440(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AnimStyleInitial;                                  // 0x2448(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AnimStyleCurrent;                                  // 0x2449(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F43[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAICloakComponent*                     CloakComp;                                         // 0x2450(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakCharacter* GetDefaultObj();

	void ZoomEvent__DelegateSignature(enum class EZoomEventType IsZooming);
	void WeaponReloadStarted(class AWeapon* Weapon, bool bAuto);
	void WeaponReloadEnded(class AWeapon* Weapon, bool bCompleted, bool bAmmoGiven);
	void WeaponPutDown(class AWeapon* PutDownWeapon);
	void WeaponPrev();
	void WeaponNext();
	void WeaponEquipped();
	void WeaponChangedEvent__DelegateSignature(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	bool WantsToZoom();
	bool WantsToUseWeapon(class UWeaponSlotData* Slot);
	void UpdatePreToggleWeaponMode();
	void UnlockActiveWeaponActions(class FName Reason, int32 ChannelsMask, bool bReplicate);
	void TryDetachFromAttachSlot(bool bInstant);
	void TriggerResurrectEvent(int32 CashLost);
	void ToggleWeaponMode();
	void ToggleFirstPersonClothSimulation(bool TurnOn);
	void ToggleCrouch();
	void TeleportPawnAndAssociatedVehicle(const struct FVector& StartLoc, const struct FRotator& StartRot, bool bDisableClientCameraUpdates, bool bIsFastTravel);
	void StopZooming(bool bForcedStop, bool bSkipTransitions);
	void StopWantingToStartSprinting();
	void StopUsingWeapon(class UWeaponSlotData* SlotToUse);
	void StopReload(class UWeaponSlotData* SlotToUse);
	void StartZooming();
	void StartUsingWeapon(class UWeaponSlotData* SlotToUse);
	class AWeapon* SpawnDefaultWeapon();
	void SetWantsToSprint(bool bNewWantsToSprint);
	void SetWantsToSlide(bool bNewWantsToSlide);
	void SetIsPolymorphed(bool bNewIsPolymorphed);
	void SetInventoryProxy(class AOakCharacter* Proxy);
	void SetDead(enum class EDeathType InDeathType);
	void SetCurrentWeapon(class AWeapon* NewWeapon, class UWeaponSlotData* NewWeaponSlot, enum class EWeaponPutDownType PutDownType, enum class EWeaponEquipType EquipType);
	void SetCurrentEquippedWeapon(class UInventorySlotData* EquippedInventorySlot, class UWeaponSlotData* NewWeaponSlot, enum class EWeaponPutDownType PutDownType, enum class EWeaponEquipType EquipType);
	void SetCorpseRemovalOverride(float RemovelTime, TSubclassOf<class UGbxAction_CoordinatedEffect> DissolveAction);
	void SetCharacterRooted(bool bRooted, class FName Reason);
	void SetCARVehicle(class AOakVehicle* Vehicle);
	void SetAbilityWeaponEffectState(enum class EWeaponAbilityEffectType EffectType, bool bEnabled);
	void ServerUnlockActiveWeaponActions(class FName Reason, int32 ChannelsMask);
	void ServerUnequipInventorySlot(class UInventorySlotData* SlotToEquip);
	void ServerStopWeaponActions(uint8 Slot, int32 ChannelsMask, bool bClearInput);
	void ServerSpawnDroppedPickup(struct FSelectedInventoryInfo& SelectedInventoryInfo, class UWorld* World, struct FVector& Location, struct FVector& LinearVelocity, struct FVector& AngularVelocity);
	void ServerSetCurrentWeapon(class AWeapon* NewWeapon, uint8 Slot, enum class EWeaponPutDownType PutDownType, enum class EWeaponEquipType EquipType);
	void ServerSelectInventoryItem(class UInventoryCategoryData* SelectedCategory, struct FInventoryListEntryHandle& SelectedHandle);
	void ServerOnMissionDeliveryChoice(bool bMissionAccepted, bool bEmergencyExit, int32 MissionChoiceIndex, class AActor* MissionGiver);
	void ServerLockActiveWeaponActions(class FName Reason, int32 ChannelsMask, bool bStopActions, bool bClearInput);
	void ServerInterruptEmote();
	void ServerEquipInventorySlot(class UInventorySlotData* SlotToEquip, struct FInventoryListEntryHandle& SelectedHandle, bool bSwapSlots);
	void SafeRemoveCorpse();
	void ResetCharacterInventory();
	void ReplaceInventoryItemWithPickup(class AActor* OldInventoryItem, class AInventoryItemPickup* Pickup);
	void ReplaceInventoryItem(class AActor* OldInventoryItem, class AActor* NewInventoryItem);
	void RemovingFromInventory(class UInventoryCategoryData* RemovedCategory, class AActor* RemovedActor, struct FInventoryListEntryHandle& RemovedHandle);
	void RemoveInWorldIcon(struct FHUDInWorldIconTargetInfo& TargetInfo);
	void RemoveInventoryItem(struct FInventoryListEntryHandle& SelectedHandle);
	void RemoveHealthTypeAtIndex(int32 Index, struct FHealthType* ReturnType);
	void Reload(class UWeaponSlotData* SlotToUse, bool bAutoReload);
	void RebuildInventory();
	bool PreInventoryItemPickupCheck(class AActor* PickupActor, int32 Quantity, bool UsedByInstigator, class AInventoryItemPickup* WorldPickupActor);
	void PreDropInventoryActor(class AActor* RemovedActor);
	void PreAddToFullInventory(class UInventoryCategoryData* Category, class AActor* NewActor, int32 Flags, int32 DesiredSlot);
	void PostLoadGameEvent__DelegateSignature(bool SaveGameFound);
	void PerformMeleeImpact(float MeleeRange, class UImpactData* ImpactData);
	void OnZoomedNotifyActions(enum class EZoomEventType IsZooming);
	void OnWeaponResumeUse(class UWeaponSlotData* AttachedSlot);
	void OnStartSprinting();
	void OnRep_OverrideVisibleCorpseRemovalTime();
	void OnRep_HolsteredWeapon();
	void OnRep_HealthState();
	void OnRep_DeadRagdollReplicationData();
	void OnRep_Customization();
	void OnRep_CoordinatedEffectSwitch();
	void OnRep_bIsPolymorphed();
	void OnRecentlyEquippedWeaponInSprintTimerEnd();
	void OnPlayerAlert__DelegateSignature(class AActor* TargetActor, const struct FVector& TargetLocation, class AOakPlayerController* AlertInstigator);
	void OnMissionDeliveryChoice(bool bMissionAccepted, bool bEmergencyExit, int32 MissionChoiceIndex, class AActor* MissionGiver);
	void OnInventoryUnequippedFromSlot(class AActor* InUnequippedInventory, class UInventorySlotData* SlotData);
	void OnInventorySlotEnabled(class UInventorySlotData* SlotData, bool SlotEnabled);
	void OnInventoryItemReplaced(struct FInventoryListEntryHandle& UpdatedItemHandle, class AActor* OldInventoryActor);
	void OnInventoryEquippedOnSlot(class AActor* InEquippedInventory, class UInventorySlotData* SlotData);
	void OnFirstPersonCreated(bool bCreatedArms);
	void OnEndSprinting();
	void OnDodged(enum class EAIDodgeType DodgeType);
	void OnCryoThawing();
	void OnCryoFreezing();
	void OnCharacterTransported(bool bTransportStarted);
	void OnCharacterMeshAnimReinit();
	void OnAIUncloaked();
	void OnAICloaked();
	void NetMulticast_DeactivateEmitter(class FName& ComponentTagName);
	void NetMulticast_BroadcastPickedUpShieldBoost(class UWwiseEvent* PickupAudioEvent, class UParticleSystem* ScreenEffect, float ModifierDuration);
	void NetMulticast_BroadcastCharacterSoundTag(class UCharacterSoundTag* Tag);
	void NetMulticast_ActivateEmitter(class UParticleSystem* EmitterTemplate, class FName& EmitterAttachPointName, class FName& ComponentTagName);
	void Multicast_StopPlayerAlert();
	void LockActiveWeaponActions(class FName Reason, int32 ChannelsMask, bool bStopActions, bool bClearInput, bool bReplicate);
	void K2_StopPlayerAlert();
	void K2_OnIsPolymorphedChanged(bool bNewIsPolymorphed);
	bool K2_CanWeaponZoom();
	bool K2_CanPerformWeaponAction(enum class EWeaponActionChannel Channel);
	bool IsUsingWeapon(class UWeaponSlotData* Slot);
	bool IsSprinting();
	bool IsSlotOpenInventoryCategory(class UInventoryCategoryData* PickupCategory);
	bool IsSlotEnabledForInventoryCategory(class UInventoryCategoryData* PickupCategory);
	bool IsShowingCrosshair(uint8 Slot);
	bool IsPolyMorphed();
	bool IsPlayingEmote();
	bool IsPerformingGroundSlam();
	bool IsLeaping();
	bool IsInventoryItemEquipped(class AActor* InventoryItem);
	bool IsFrozenToDeath();
	bool IsEquippingWeapon(class UWeaponSlotData* SlotToUse);
	bool IsCharacterSliding();
	bool IsCharacterRooted();
	bool IsAttachedToSlot();
	bool IsAttachedToSeat();
	bool IsAttached();
	void InterruptEmote();
	void HealthStateChangeEvent__DelegateSignature(enum class EHealthState HealthState);
	bool HasShieldEquipped();
	bool HasRecentlyEquippedWeaponInSprint();
	bool HasInfiniteAmmo();
	bool HasHealthOfType(class UHealthTypeData* HealthTypeToFind);
	void GoFromInjuredToHealed(class AOakPlayerController* HealedByPlayer);
	void GoFromInjuredToDead();
	void GoFromDeadToHealed();
	bool GetZoomToggle();
	struct FRotator GetWeaponOffsetRotation();
	struct FVector GetWeaponOffsetLocation();
	class AWeapon* GetWeapon(class UWeaponSlotData* SlotToGet);
	bool GetWantsToSprint();
	bool GetWantsToCrouch();
	struct FRotator GetViewModelOffsetRotation(int32 Index);
	struct FVector GetViewModelOffsetLocation(int32 Index);
	class AOakVehicle* GetVehicle();
	class AOakVehicle* GetOwnedVehicle();
	class AOakAIController* GetOakAIController();
	struct FVector GetMovementDirection(enum class EAxis AXIS);
	class UInventoryListComponent* GetInventoryComponent();
	struct FHealthType GetHealthInformationAtIndex(int32 Index, enum class EValidIndex* Branch);
	bool GetFirstHealthInformationByType(class UHealthTypeData* HealthTypeToFind, struct FHealthType* OutHealthType);
	float GetFaceFXBlendWeight(float DeltaTime, float BlendTime, class USkeletalMeshComponent* InSkelMeshComp);
	class AActor* GetEquippedInventoryForSlot(class UInventorySlotData* InventorySlot);
	class AOakVehicle* GetCARVehicle();
	class UInventoryListComponent* GetBankInventoryComponent();
	class UOakAIActionComponent* GetAIActionComponent();
	class AWeapon* GetActiveWeapon(uint8 Slot);
	void GenericEvent__DelegateSignature();
	void FillAllHealth();
	void ExitVehicle(bool bInstant);
	void ExitTurret(bool bInstant);
	void EquipInventorySlotDirect(class UInventorySlotData* SlotToEquip, class AActor* SelectedActor, bool bSwapSlots);
	void EquipInventorySlot(class UInventorySlotData* SlotToEquip, struct FInventoryListEntryHandle& SelectedHandle, bool bSwapSlots);
	void EquipArmorEvent__DelegateSignature(class ABodyArmor* NewBodyArmor);
	void EndCompareToEquippedItemEvent__DelegateSignature();
	void EnableInventorySlot(class UInventorySlotData* InventorySlot, bool bEnabled);
	void DropCurrentWeapon();
	void DelayWeaponsUse(float DelayTime, bool bForceUseAfterDelay);
	void CompareToEquippedItemEvent__DelegateSignature(class UOakInventoryBalanceStateComponent* EquippedItem, class UOakInventoryBalanceStateComponent* OtherItem);
	void ClientUnlockActiveWeaponActions(class FName Reason, int32 ChannelsMask);
	void ClientStopWeaponActions(uint8 Slot, int32 ChannelsMask, bool bClearInput);
	void ClientQuickResetResurrectionFX();
	void ClientLockActiveWeaponActions(class FName Reason, int32 ChannelsMask, bool bStopActions, bool bClearInput);
	void ChangeSeat__DelegateSignature(class UPawnAttachSlotComponent* FromSeat, class UPawnAttachSlotComponent* ToSeat);
	bool CanMelee();
	bool CanEquipInventoryItem(class AActor* InInventoryToEquip);
	bool AttemptGroundSlam();
	void AttachedItemPickedUp(class AInventoryItemPickup* InventoryItemPickedUp, class AActor* PickedUpBy);
	void AttachDetachSeat__DelegateSignature(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void AnimNotify_BossClosedCaption(class UAnimNotify* IncomingNotify);
	void AddInWorldIcon(struct FHUDInWorldIconTargetInfo& TargetInfo);
	void AddHealthTypeAtIndex(class UHealthTypeData* HealthTypeData, class UGameResourcePoolData* HealthPoolData, int32 Index, enum class EHealthAdded* Branch);
	void AddHealthType(class UHealthTypeData* HealthTypeData, class UGameResourcePoolData* HealthPoolData, enum class EHealthAdded* Branch);
	void AddedToInventory(class UInventoryListComponent* InventoryList, class UInventoryCategoryData* AddedCategory, class AActor* AddedActor, struct FInventoryListEntryHandle& AddedHandle, int32 Flags, int32 DesiredSlot);
	void AddDefaultItemPoolsToInventory(TArray<struct FItemPoolInfo>* ItemPools, bool SingleEquippedItem, bool ClearInventory, bool EquipIfNoInventory);
	void AddDefaultItemPoolListInventory(class UItemPoolListData* DefaultItemPoolList, bool ClearInventory, bool EquipIfNoInventory);
	void AddDefaultItemPoolInventory(class UItemPoolData* DefaultItemPoolData, bool ClearInventory, bool EquipIfNoInventory);
};

// 0x80 (0x24D8 - 0x2458)
// Class OakGame.OakCharacter_Default
class AOakCharacter_Default : public AOakCharacter
{
public:
	uint8                                        Pad_2064[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStanceComponent*                      Stance;                                            // 0x2460(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxDialogComponent*                   GbxDialog;                                         // 0x2468(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDialogEvent*                          DeathDialogEvent;                                  // 0x2470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UDialogParameter*, struct FDialogParameterValue> DeathDialogEventParameterValues;                   // 0x2478(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UCharacterSoundTag*                    DeathVocalizationTag;                              // 0x24C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_206B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakCharacter_Default* GetDefaultObj();

	void OnStartInjured_Common();
	void OnReaped();
};

// 0xD8 (0x25B0 - 0x24D8)
// Class OakGame.Agonizer9k
class AAgonizer9k : public AOakCharacter_Default
{
public:
	enum class EA9KFightPhase                    FightPhase;                                        // 0x24D8(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              SawTargetRotation;                                 // 0x24DC(0xC)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class APawn*                                 SawTarget;                                         // 0x24E8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EA9KSawState                      SawState;                                          // 0x24F0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SawAngleReached;                                   // 0x24F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSawStateChanged;                                 // 0x24F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        TimeSinceBeginingOfPhase;                          // 0x2508(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeSinceBeginingOfFight;                          // 0x250C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeSinceLastSponsorBegan;                         // 0x2510(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  EquiptProjectileSaw;                               // 0x2518(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CancelSaw;                                         // 0x2528(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ShootProjectile;                                   // 0x2538(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ShootProjectileSaw;                                // 0x2548(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  SawTargetBlackboardKeyName;                        // 0x2558(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFloorDoneEvent;                                  // 0x2560(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBlackboardComponent*                  Blackboard;                                        // 0x2570(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SawTimeCooldown;                                   // 0x2578(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SawRotateSpeedTryToReachTarget;                    // 0x257C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SawTimeBetweenReachAndEquip;                       // 0x2580(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SawTimeAnticipation;                               // 0x2584(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SawPercentageStopFollowAnticipation;               // 0x2588(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WaitForEquipAnimDoneFailSafe;                      // 0x258C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20D5[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAgonizer9k* GetDefaultObj();

	void StopSaw();
	void StartSponsorsTimer();
	void StartSaw();
	void StartBossFight();
	void ResetBossTimers();
	void EquipSawAnimDone();
};

// 0x20 (0x478 - 0x458)
// Class OakGame.Agonizer9kCore
class AAgonizer9kCore : public AActor
{
public:
	uint8                                        Pad_20F0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTargetableComponent*                  TargetableComponent;                               // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakDamageComponent*                   DamageComponent;                                   // 0x468(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      RootSphereComponent;                               // 0x470(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AAgonizer9kCore* GetDefaultObj();

};

// 0x38 (0x490 - 0x458)
// Class OakGame.Agonizer9kFollowSpot
class AAgonizer9kFollowSpot : public AActor
{
public:
	class USceneComponent*                       SceneRootComp;                                     // 0x458(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  LightConeComp;                                     // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpotLightComponent*                   SpotLightComp;                                     // 0x468(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2150[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAgonizer9kFollowSpot* GetDefaultObj();

	void TurnOn();
	void TurnOff();
	void StartRotating(float RotationTime, const struct FRotator& RotationDelta);
	void LookAtTarget(float RotationTime, class AActor* Target);
};

// 0x270 (0x6C8 - 0x458)
// Class OakGame.AgonizerFloor
class AAgonizerFloor : public AActor
{
public:
	class UParticleSystem*                       FireHeat;                                          // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       WarmUp;                                            // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BurstFlameRing1;                                   // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BurstFlameRing2;                                   // 0x470(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BurstFlameRing3;                                   // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BurstFlameRing4;                                   // 0x480(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           MeshCollisionRing02;                               // 0x488(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           MeshCollisionRing03;                               // 0x490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           MeshCollisionRing04;                               // 0x498(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           MeshCollisionRing05;                               // 0x4A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           FakeEmmisiveRing02;                                // 0x4A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           FakeEmmisiveRing03;                                // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           FakeEmmisiveRing04;                                // 0x4B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           FakeEmmisiveRing05;                                // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           HeatingElementmeshRing02;                          // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           HeatingElementmeshRing03;                          // 0x4D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           HeatingElementmeshRing04;                          // 0x4D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           HeatingElementmeshRing05;                          // 0x4E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     HeatingElementMaterial;                            // 0x4E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           FakeEmmisiveAllRings;                              // 0x4F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               DamageData;                                        // 0x4F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>               DamageTypeFire;                                    // 0x500(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BurstFlameAudio1;                                  // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BurstFlameAudio2;                                  // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BurstFlameAudio3;                                  // 0x518(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BurstFlameAudio4;                                  // 0x520(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioSmall1;                                // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioSmall2;                                // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioSmall3;                                // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioSmall4;                                // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioBig1;                                  // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioBig2;                                  // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioBig3;                                  // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PreheatAudioBig4;                                  // 0x560(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstFlameAudioGain;                               // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstFlamesAudioRadius;                            // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstFlamesAudioRadiusRingMultiplier;              // 0x570(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2297[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       SceneRootComp;                                     // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarmupTime;                                        // 0x580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarmUpDelayWhenAllWarmUpDone;                      // 0x584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationFloorDoneTime;                             // 0x588(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloorRotationTimeBetweenSector;                    // 0x58C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnticipationTimeOneRing;                           // 0x590(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnticipationTime;                                  // 0x594(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnticipationTimeRotationPattern;                   // 0x598(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageOverlapTime;                                 // 0x59C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstinitialOffset;                                // 0x5A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstOffsetPerRing;                                // 0x5A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloorFireDamage;                                   // 0x5A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RingPatternInterval;                               // 0x5AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeatingPipeEmissiveInterval;                       // 0x5B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           EmissiveStrengthOverTime;                          // 0x5B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           EmissiveStrengthOverTimeFadeOut;                   // 0x5C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFloorFirstFlame;                                 // 0x5C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDisplayDebugCollisionZones;                       // 0x5D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22CB[0xEF];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAgonizerFloor* GetDefaultObj();

	void StopHeatingPipeEmissive(struct FFloorSectorRing* SectorRing);
	void StopDamageFeedbackRing(struct FFloorSector* FloorSector, struct FFloorSectorRing* SectorRing);
	void StartSafeSpotPattern(float DelayBeforeStart);
	void StartRotationPattern(float DelayBeforeStart);
	void StartRingPattern(float DelayBeforeStart);
	void StartHeatingPipeEmissive(struct FFloorSectorRing* SectorRing);
	void StartAnticipationSafeSpot(int32 SafeSpotSectorId);
	void SetFloorRotationParameters(int32 Direction, int32 StartingSectorId);
	void SetAgonizerRef(class AAgonizer9k* AgonizerRef);
	void PlayBurstFlameAudio();
	void OnWarmUpDone(struct FFloorSector* FloorSector);
	void OnRotationAnticipationDone(struct FFloorSector* FloorSector, bool IsLast);
	void OnDamageFeedbackDone();
	void OnAnticipationOneRingDone(struct FFloorSector* FloorSector, struct FFloorSectorRing* SectorRing);
	void OnAnticipationDone();
};

// 0x2B8 (0x418 - 0x160)
// Class OakGame.AIAction_AngryPatrolTaunt
class UAIAction_AngryPatrolTaunt : public UAIAction_Selector
{
public:
	struct FGbxParam                             ProbabilityOfPlayingTauntAction;                   // 0x160(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIAspectSettings_GbxAction           TauntAction;                                       // 0x1E0(0x238)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAIAction_AngryPatrolTaunt* GetDefaultObj();

};

// 0x8 (0x150 - 0x148)
// Class OakGame.AIAction_GetOutVehicle
class UAIAction_GetOutVehicle : public UAIAction
{
public:
	bool                                         bInstantDetach;                                    // 0x148(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23C1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAction_GetOutVehicle* GetDefaultObj();

};

// 0x30 (0x178 - 0x148)
// Class OakGame.AIAction_LeapOnVehicle
class UAIAction_LeapOnVehicle : public UAIAction
{
public:
	struct FGbxBlackboardKeySelector             Target;                                            // 0x148(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakAction_LeapOnVehicle>  LeapAction;                                        // 0x158(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxLeapDistance;                                   // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLeapOnHostile;                                    // 0x164(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D2[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAction_LeapOnVehicle* GetDefaultObj();

};

// 0x180 (0x2F0 - 0x170)
// Class OakGame.AIAction_PatrolPath
class UAIAction_PatrolPath : public UAIAction_Priority
{
public:
	struct FAIAspectSettings_Navigation          NavSettings;                                       // 0x170(0x140)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIAspectSettings_MovePath            MovePathSetting;                                   // 0x2B0(0x40)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAction_PatrolPath* GetDefaultObj();

};

// 0xA48 (0xB90 - 0x148)
// Class OakGame.AIAction_ReviveActor
class UAIAction_ReviveActor : public UAIAction
{
public:
	struct FAIAspectSettings_Revive              ReviveSettings;                                    // 0x148(0x90)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIAspectSettings_Ticket              TicketSettings;                                    // 0x1D8(0x128)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIAspectSettings_EnvQuery            QuerySettings;                                     // 0x300(0x3A0)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseQuerySettings;                                 // 0x6A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIAspectSettings_Navigation          NavSettings;                                       // 0x6A8(0x140)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIAspectSettings_EnvQuery            NavigationQuerySettings;                           // 0x7E8(0x3A0)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseNavigationQuery;                               // 0xB88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAction_ReviveActor* GetDefaultObj();

};

// 0x208 (0x3F0 - 0x1E8)
// Class OakGame.AIAction_VehicleEscort
class UAIAction_VehicleEscort : public UAIAction_Sequence
{
public:
	struct FAIAspectSettings_VehicleEscortSpeed  EscortSettings;                                    // 0x1E8(0x1A0)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             TargetKey;                                         // 0x388(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             EscortFindComponentKey;                            // 0x398(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             EscortLocationComponentKey;                        // 0x3A8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             EscortLocationReferenceKey;                        // 0x3B8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             EscortLocationOffsetKey;                           // 0x3C8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             IsEscortingTargetActorInfoKey;                     // 0x3D8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bMoveEvenIfUnreachable;                            // 0x3E8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2447[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAction_VehicleEscort* GetDefaultObj();

	void InitEscortTarget(class AActor* Target, struct FVector& OffsetVector, class AActor* OrientationReference);
	void InitCustomEscort(class AActor* Target, class AActor* ActorToEscort, struct FVector& OffsetVector, class AActor* OrientationReference);
};

// 0x20 (0x410 - 0x3F0)
// Class OakGame.AIAction_VehicleEscortTarget
class UAIAction_VehicleEscortTarget : public UAIAction_VehicleEscort
{
public:
	struct FVector                               OffsetVector;                                      // 0x3F0(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_245D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxBlackboardKeySelector             OrientationReferenceKey;                           // 0x400(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAction_VehicleEscortTarget* GetDefaultObj();

};

// 0x140 (0x240 - 0x100)
// Class OakGame.AIAspect_Dialog
class UAIAspect_Dialog : public UAIAspect
{
public:
	struct FAIAspectSettings_Dialog              Settings;                                          // 0x100(0x140)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAspect_Dialog* GetDefaultObj();

	class FString GetDialogSettingsDescription(struct FAIAspectSettings_Dialog& DialogSettings, class UProperty* Property);
	class FString GetDialogConditionSettingsDescription(struct FAIAspectSettings_DialogCondition& DialogSettings, class UProperty* Property);
};

// 0x40 (0x280 - 0x240)
// Class OakGame.AIAspect_MovePath
class UAIAspect_MovePath : public UAIAspect_Navigation
{
public:
	struct FAIAspectSettings_MovePath            MovePathSettings;                                  // 0x240(0x40)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAspect_MovePath* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class OakGame.AIAspect_NpcGreeting
class UAIAspect_NpcGreeting : public UAIAspect
{
public:

	static class UClass* StaticClass();
	static class UAIAspect_NpcGreeting* GetDefaultObj();

};

// 0x90 (0x190 - 0x100)
// Class OakGame.AIAspect_Revive
class UAIAspect_Revive : public UAIAspect
{
public:
	struct FAIAspectSettings_Revive              Settings;                                          // 0x100(0x90)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAspect_Revive* GetDefaultObj();

	class FString GetReviveSettingsDescription(struct FAIAspectSettings_Revive& ReviveSettings, class UProperty* Property);
};

// 0x8 (0x108 - 0x100)
// Class OakGame.AIAspect_VehicleArchetype
class UAIAspect_VehicleArchetype : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleArchetype    Settings;                                          // 0x100(0x2)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24DC[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAspect_VehicleArchetype* GetDefaultObj();

};

// 0x8 (0x108 - 0x100)
// Class OakGame.AIAspect_VehicleAttitude
class UAIAspect_VehicleAttitude : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleAttitude     Settings;                                          // 0x100(0x2)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E7[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAspect_VehicleAttitude* GetDefaultObj();

};

// 0x8 (0x108 - 0x100)
// Class OakGame.AIAspect_VehicleDriverLeaves
class UAIAspect_VehicleDriverLeaves : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleDriverLeaves Settings;                                          // 0x100(0x1)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAspect_VehicleDriverLeaves* GetDefaultObj();

};

// 0x80 (0x180 - 0x100)
// Class OakGame.AIAspect_VehicleDriving
class UAIAspect_VehicleDriving : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleDriving      Settings;                                          // 0x100(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAspect_VehicleDriving* GetDefaultObj();

};

// 0x208 (0x448 - 0x240)
// Class OakGame.AIAspect_VehicleEscortSpeed
class UAIAspect_VehicleEscortSpeed : public UAIAspect_Navigation
{
public:
	struct FAIAspectSettings_VehicleEscortSpeed  EscortSettings;                                    // 0x240(0x1A0)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             TargetKey;                                         // 0x3E0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             FindComponentKey;                                  // 0x3F0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             LocationKey;                                       // 0x400(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             EscortLocationReferenceKey;                        // 0x410(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             EscortLocationOffsetKey;                           // 0x420(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             IsEscortingTargetActorInfoKey;                     // 0x430(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bDebugTestDirectPath;                              // 0x440(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAspect_VehicleEscortSpeed* GetDefaultObj();

};

// 0x18 (0x118 - 0x100)
// Class OakGame.AIAspect_VehicleHorn
class UAIAspect_VehicleHorn : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleHorn         Settings;                                          // 0x100(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAspect_VehicleHorn* GetDefaultObj();

};

// 0x8 (0x108 - 0x100)
// Class OakGame.AIAspect_VehicleHover
class UAIAspect_VehicleHover : public UAIAspect
{
public:
	bool                                         bTrackTarget;                                      // 0x100(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIAspect_VehicleHover* GetDefaultObj();

};

// 0x18 (0x118 - 0x100)
// Class OakGame.AIAspect_VehicleParts
class UAIAspect_VehicleParts : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleParts        Settings;                                          // 0x100(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAspect_VehicleParts* GetDefaultObj();

};

// 0x6B8 (0x7B8 - 0x100)
// Class OakGame.AIAspect_VehicleSpeed
class UAIAspect_VehicleSpeed : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleSpeed        Settings;                                          // 0x100(0x6B8)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIAspect_VehicleSpeed* GetDefaultObj();

};

// 0x160 (0x338 - 0x1D8)
// Class OakGame.AIBalanceStateComponent
class UAIBalanceStateComponent : public UBalanceStateComponent
{
public:
	UMulticastDelegateProperty_                  OnAnointedDeathStateChanged;                       // 0x1D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FAIPlayThroughData>            PlayThroughs;                                      // 0x1E8(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          ExperienceLevelFormula;                            // 0x1F8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bUseExperienceLevelFormula;                        // 0x230(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EBalanceValueType                 BaseItemGameStageSource;                           // 0x231(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_258C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          ItemGameStageOffset;                               // 0x238(0x38)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FItemPoolCollection                   DropOnDeathItemPools;                              // 0x270(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FItemPoolCollection                   CharacterExpansionDropOnDeathItemPools;            // 0x290(0x20)(Transient, NativeAccessSpecifierPrivate)
	class FName                                  DropLootSocketName;                                // 0x2B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULootSpawnPatternData*                 DropLootPattern;                                   // 0x2B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAILootDropOverride>           ExtraDropLootSockets;                              // 0x2C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        bWaitForNotifyToSpawnLoot : 1;                     // Mask: 0x1, PropSize: 0x10x2D0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_D1 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_259B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayedSpawnLootFailSafeTimer;                     // 0x2D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeToSpawnLootOver;                               // 0x2D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_259E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeEffectData>          DropLootAttributeEffects;                          // 0x2E0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bIsAnointed;                                       // 0x2F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25A3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnointedEnemyData                    AnointedData;                                      // 0x2F8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UItemPoolListInterface*                ExtraItemPoolToDropOnDeath;                        // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EItemDropOnDeathType              ExtraItemPoolDropRule;                             // 0x310(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bSuppressDropOnDeathItemPools : 1;                 // Mask: 0x1, PropSize: 0x10x311(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_D2 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_25AC[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUsableComponent*                      AnointedUsableComponent;                           // 0x320(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAnointedDeathState               AnointedDeathState;                                // 0x328(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25B1[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIBalanceStateComponent* GetDefaultObj();

	void SuppressDropOnDeathItemPools(bool bSuppress);
	void ShatterFrozenAnointed();
	void SetCustomDropsOnDeath(class UItemPoolListInterface* ExtraPoolToDropOnDeath, bool AddedToBalanceDropItems, enum class EItemDropOnDeathType ItemPoolDropRule);
	void ManuallyTriggerAnointedDeath();
	void ForceDropLoot();
	void FinalizeAnointedFreeze();
	void EnableDropLootSocket(class FName SocketName);
	void ApplyNameForCurrentPlayThrough();
};

// 0x108 (0x138 - 0x30)
// Class OakGame.AIDialogEventData
class UAIDialogEventData : public UGbxDataAsset
{
public:
	class UDialogEvent*                          TargetAcquiredEvent;                               // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          TargetLostEvent;                                   // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          TargetKilledOneEnemyTargetEvent;                   // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          TargetDownEvent;                                   // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          TargetDeadEvent;                                   // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          ShootingEvent;                                     // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          ReloadEvent;                                       // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          ReinforcementsEvent;                               // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          ReinforcementsArriveEvent;                         // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReinforcementsArriveEventDelay;                    // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EAIDodgeType, struct FDodgeVOInfo> DodgeVO;                                           // 0x80(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDialogParameter*                      TargetParam;                                       // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      InstigatorParam;                                   // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      MethodOfDeathParam;                                // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      ActionSkillParam;                                  // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             ActionSkillDamageSourceClass;                      // 0xF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEnumValue*                      MethodOfDeath_Normal;                              // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEnumValue*                      MethodOfDeath_Gibbed;                              // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEnumValue*                      MethodOfDeath_ActionSkill;                         // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          NpcGreetingHelloEvent;                             // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          NpcGreetingHelloMissionEvent;                      // 0x118(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          NpcGreetingIdleEvent;                              // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          NpcGreetingGoodbyeEvent;                           // 0x128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      NpcGreetingTargetParam;                            // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIDialogEventData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.AIHeldActorInterface
class IAIHeldActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAIHeldActorInterface* GetDefaultObj();

	void AIHeldActor_OnThrow();
	void AIHeldActor_OnPrime();
	void AIHeldActor_OnDrop();
	enum class EOakElementalType AIHeldActor_GetElementalType();
};

// 0x90 (0x3B0 - 0x320)
// Class OakGame.AIHeldActorComponent
class UAIHeldActorComponent : public UGbxChildActorComponent
{
public:
	struct FGbxBlackboardKeySelector             BlackboardKeyEquipped;                             // 0x320(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxBlackboardKeySelector             BlackboardKeyRequesting;                           // 0x330(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       DefaultDeathTagName;                               // 0x340(0x18)(Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitReactionTag*                       DeathTag;                                          // 0x358(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutofillDeathTag;                                 // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDisableCollisionWhileHeld;                        // 0x361(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2762[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DroppedCollisionProfile;                           // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bChangeCollisionProfileOnDrop;                     // 0x370(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxTriggerProperty                   PresetTrigger;                                     // 0x371(0x1)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bInitialized;                                      // 0x372(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2770[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                HeldActor;                                         // 0x378(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTargetingComponent*                   TargetingComponent;                                // 0x380(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                  BlackboardComponent;                               // 0x388(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class IAIHeldActorInterface> HeldActorInterface;                                // 0x390(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class AActor*                                ClientDisabledCollisionActor;                      // 0x3A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_277E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIHeldActorComponent* GetDefaultObj();

	void ThrowHeldActorAtTarget(float ThrowSpeed, float ThrowAnglePercent, class FName TargetSocket, const struct FVector& TargetOffset, const struct FRotator& AngleOffset, float MaxPrediction, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist);
	void ThrowHeldActorAtLocation(const struct FVector& ThrowAtLocation, float ThrowSpeed, float ThrowAnglePercent, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist);
	void ThrowHeldActorAtActor(class AActor* ThrowAtActor, float ThrowSpeed, float ThrowAnglePercent, class FName ActorSocket, const struct FVector& ActorOffset, const struct FRotator& AngleOffset, float MaxPrediction, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist);
	void SpawnHeldActor();
	void SetNewHeldActorClass(TSubclassOf<class AActor> NewHeldActorClass);
	void PrimeHeldActor();
	void OnTriggerPreset(enum class EHeldActorPreset Preset);
	void OnHeldActorSpawned(class AActor* NewHeldActor);
	void OnHeldActorNativeDrop(class AActor* Actor);
	enum class EOakElementalType GetHeldActorElementalType();
	class AActor* GetHeldActor();
	void DropHeldActor(bool bRequestNewHeldActor, class AActor* InstigatorOverride);
	void DetonateHeldActor(bool bKillSelf, bool bRequestNewHeldActor, class AActor* InstigatorOverride);
};

// 0x660 (0x690 - 0x30)
// Class OakGame.AIO_CameraData
class UAIO_CameraData : public UGbxDataAsset
{
public:
	TArray<struct FAIOCameraStateInfo>           CameraStates;                                      // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FAIOCameraEntryTransition>     CameraEntryTransitions;                            // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGbxEasingFunc                        CameraEntryEasing;                                 // 0x50(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        CameraEntryLocationDuration;                       // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraEntryRotationDuration;                       // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetFOV;                                         // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetFOVSplitscreen;                              // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetFOVVerticalSplitscreen;                      // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetFOVQuadSplitscreen;                          // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRestoreCameraRotation;                            // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27C2[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x80(0x600)(Edit, NativeAccessSpecifierPublic)
	float                                        DOFMagnitudeInterpTime;                            // 0x680(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VignetteInterpTime;                                // 0x684(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27C7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIO_CameraData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.AIProjectileInterface
class IAIProjectileInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAIProjectileInterface* GetDefaultObj();

	void AIProjectile_Disarm();
	void AIProjectile_Detonate();
	bool AIProjectile_CanBeStolen();
	void AIProjectile_Arm();
};

// 0x100 (0x820 - 0x720)
// Class OakGame.AIStolenProjectileComponent
class UAIStolenProjectileComponent : public UBoxComponent
{
public:
	UMulticastDelegateProperty_                  OnStolenProjectileUpdated;                         // 0x720(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStolenProjectileReturned;                        // 0x730(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStolenProjectileDestroyed;                       // 0x740(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             BlackboardKeyProjectile;                           // 0x750(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxBlackboardKeySelector             BlackboardKeyHasProjectile;                        // 0x760(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        DirectionConeHalfAngle;                            // 0x770(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bLimitedByDirection;                               // 0x774(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_295E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChanceToSucceed;                                   // 0x778(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2961[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           LerpToSocketCurve;                                 // 0x780(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanStealWhenLeftComponent;                        // 0x788(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2966[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToForget;                                      // 0x78C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_296A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                StolenProjectile;                                  // 0x7B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        IgnoreProjectiles;                                 // 0x7C0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                SkelMeshComp;                                      // 0x7D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTargetingComponent*                   TargetingComponent;                                // 0x7D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                  BlackboardComponent;                               // 0x7E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FReplicatedStolenProjectileData       ClientData;                                        // 0x7E8(0x10)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_296F[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIStolenProjectileComponent* GetDefaultObj();

	void StolenProjectileReleased();
	void SetChanceToSucceed(float NewChanceToSucceed);
	bool ReturnProjectileToTarget(float Speed, float AnglePercent, class FName Socket, const struct FVector& TargetOffset, const struct FRotator& AngleOffset, float MaxPrediction);
	bool ReturnProjectileToOwner(float Speed, float AnglePercent, class FName Socket, const struct FVector& TargetOffset, const struct FRotator& AngleOffset, float MaxPrediction);
	bool ReturnProjectileToLocation(const struct FVector& Location, float Speed, float AnglePercent);
	bool ReturnProjectileToActor(class AActor* Actor, float Speed, float AnglePercent, class FName Socket, const struct FVector& TargetOffset, const struct FRotator& AngleOffset, float MaxPrediction);
	void ReleaseOnStolenProjectileDestroyed(class AActor* Unused);
	void OnRep_ClientData();
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool LerpToSocket(class FName Socket, float Duration);
	enum class EOakElementalType GetElementalType();
	bool DisarmProjectile();
	bool DidInteractionSucceed();
	bool DetonateProjectile();
	bool DestroyProjectile();
	bool AttachProjectile(class FName SocketName);
	bool ArmProjectile();
};

// 0x38 (0x4C8 - 0x490)
// Class OakGame.OakTriggerVolume
class AOakTriggerVolume : public ATriggerVolume
{
public:
	class UOakTriggerComponent*                  TriggerComponent;                                  // 0x490(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TouchedTrigger;                                    // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  UnTouchedTrigger;                                  // 0x4A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  AllPlayersTouchingTrigger;                         // 0x4B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakTriggerVolume* GetDefaultObj();

	void NotifyTriggerUntouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyAllPlayersTouchingTrigger();
};

// 0x10 (0x4D8 - 0x4C8)
// Class OakGame.AllPlayersRequiredVolume
class AAllPlayersRequiredVolume : public AOakTriggerVolume
{
public:
	UMulticastDelegateProperty_                  OnPlayerTouchedButNotAllPlayersTouching;           // 0x4C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AAllPlayersRequiredVolume* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.AlwaysLoadedData
class UAlwaysLoadedData : public UPrimaryDataAsset
{
public:
	TArray<TSoftObjectPtr<class UObject>>        AlwaysLoadedAssets;                                // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAlwaysLoadedData* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.AmmoAspectData
class UAmmoAspectData : public UInventoryAspectData
{
public:
	class UGbxAmmoTypeData*                      AmmoType;                                          // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAmmoAspectData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.AnimNotify_EnableDropLootSocket
class UAnimNotify_EnableDropLootSocket : public UAnimNotify
{
public:
	TArray<class FName>                          SocketNames;                                       // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_EnableDropLootSocket* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class OakGame.AnimNotify_OakPawnAttachSlotTransition
class UAnimNotify_OakPawnAttachSlotTransition : public UAnimNotify_PawnAttachSlotTransition
{
public:
	bool                                         bAdvanceCameraState;                               // 0x40(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29FD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_OakPawnAttachSlotTransition* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class OakGame.AnimNotify_PlayerMelee
class UAnimNotify_PlayerMelee : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_PlayerMelee* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class OakGame.AnimNotify_PlayerMeleeChainBufferStart
class UAnimNotify_PlayerMeleeChainBufferStart : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_PlayerMeleeChainBufferStart* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class OakGame.AnimNotify_PlayerMeleeEnd
class UAnimNotify_PlayerMeleeEnd : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_PlayerMeleeEnd* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.AnimNotify_PlayerMeleeFOVToggle
class UAnimNotify_PlayerMeleeFOVToggle : public UAnimNotify
{
public:
	bool                                         bActivate;                                         // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A2E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_PlayerMeleeFOVToggle* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class OakGame.AnimNotify_PlayerMeleePullBegin
class UAnimNotify_PlayerMeleePullBegin : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_PlayerMeleePullBegin* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.AnimNotify_SpellTrigger
class UAnimNotify_SpellTrigger : public UAnimNotify
{
public:
	class FName                                  TriggerName;                                       // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_SpellTrigger* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.AnimNotify_CatchPickup
class UAnimNotify_CatchPickup : public UAnimNotifyState
{
public:
	class FName                                  HideWeaponLock;                                    // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HideWeaponBone;                                    // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_CatchPickup* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.AnimNotifyState_CryoFreeze
class UAnimNotifyState_CryoFreeze : public UAnimNotifyState
{
public:
	bool                                         bDisableAnimFreeze;                                // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A47[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_CryoFreeze* GetDefaultObj();

};

// 0x30 (0x4C0 - 0x490)
// Class OakGame.AreaResetVolume
class AAreaResetVolume : public AVolume
{
public:
	uint8                                        Pad_2A5B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsEnabled;                                        // 0x4A8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableOnReset;                                   // 0x4A9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A60[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  ResetAreaEvent;                                    // 0x4B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AAreaResetVolume* GetDefaultObj();

	void SetEnabled(bool bEnabled);
	void ResetAreaIfEmpty();
};

// 0x50 (0x660 - 0x610)
// Class OakGame.AsyncSpinner
class UAsyncSpinner : public UGbxGFxHUDWidget
{
public:
	TSoftObjectPtr<class UTexture2D>             TextureToLoad;                                     // 0x610(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       TextureToLoadStringReference;                      // 0x638(0x18)(BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A84[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAsyncSpinner* GetDefaultObj();

	void StartLoadingTexture(struct FSoftObjectPath& AssetPathToLoad);
	void CompleteLoadingTexture();
};

// 0x40 (0x70 - 0x30)
// Class OakGame.AttributeEffectMutatorData_AlliesInRange
class UAttributeEffectMutatorData_AlliesInRange : public UAttributeEffectMutatorData
{
public:
	bool                                         bInfiniteRange;                                    // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A8F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          RangeData;                                         // 0x38(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAttributeEffectMutatorData_AlliesInRange* GetDefaultObj();

};

// 0x48 (0x4A0 - 0x458)
// Class OakGame.BasicSpellActor
class ABasicSpellActor : public AActor
{
public:
	uint8                                        Pad_2A99[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnableSpellBasicData              SpellData;                                         // 0x460(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ABasicSpellActor* GetDefaultObj();

};

// 0x48 (0x4A0 - 0x458)
// Class OakGame.BeamTargetEmptyActor
class ABeamTargetEmptyActor : public AActor
{
public:
	class USceneComponent*                       SceneRootComp;                                     // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                BeamTarget;                                        // 0x460(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FollowLerpSpeed;                                   // 0x468(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AD1[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABeamTargetEmptyActor* GetDefaultObj();

	void SetBeamTarget(class AActor* NewBeamTarget, float NewFollowLerpSpeed);
};

// 0x58 (0x1D0 - 0x178)
// Class OakGame.BlackJackComponent
class UBlackJackComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnCardUpdated;                                     // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FBlackJackCardDefinition>      CardDefinitions;                                   // 0x188(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BC5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                IndicesOfCurrentCards;                             // 0x1B0(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BC7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBlackJackComponent* GetDefaultObj();

	bool ShouldOpenChest();
	void Reset();
	void OpenChest();
	void OnRep_CurrentCards();
	int32 GetNbOfCard();
	int32 GetCurrentHandValue();
	int32 GetCardValueIndexAtIndex(int32 Index);
	int32 GetCardSuitIndexAtIndex(int32 Index);
	class FString GetCardAtIndex(int32 Index);
	bool CanUseOpenChest();
	bool CanUseAddCard();
	void AddCard();
};

// 0x48 (0x4A0 - 0x458)
// Class OakGame.OakInventoryItem
class AOakInventoryItem : public AActor
{
public:
	UMulticastDelegateProperty_                  OnItemPickedUp;                                    // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemUsedInInventory;                             // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         CanBeUsedInInventory;                              // 0x478(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ConsumeWhenUsed;                                   // 0x479(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C44[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  OverrideErrorText;                                 // 0x480(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class UInventoryBalanceStateComponent*       InventoryBalanceState;                             // 0x498(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakInventoryItem* GetDefaultObj();

	void OnPickedUp(class AOakCharacter* PickupInstigator);
	void InventoryUsedDelegate__DelegateSignature(class AOakCharacter* PickupInstigator);
	void InventoryPickedUpDelegate__DelegateSignature(class AOakCharacter* PickupInstigator);
	bool HasValidInventoryBalanceState();
	class FText GetOverrideErrorText();
	bool CanBeUsedFromInventory(class AOakCharacter* InventoryOwner);
	bool CanBePickedUp(class AOakCharacter* PickupInstigator, int32 Quantity, bool UsedByInstigator, class AInventoryItemPickup* WorldPickupActor);
};

// 0x28 (0x4C8 - 0x4A0)
// Class OakGame.OakInventoryEquippableItem
class AOakInventoryEquippableItem : public AOakInventoryItem
{
public:
	UMulticastDelegateProperty_                  OnEquippedDelegate;                                // 0x4A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUnequippedDelegate;                              // 0x4B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AOakCharacter*                         ClientPendingEquipInstigator;                      // 0x4C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakInventoryEquippableItem* GetDefaultObj();

	void OnUnequipped(class AOakCharacter* EquipInstigator);
	void OnEquipped(class AOakCharacter* EquipInstigator);
	void InventoryEquipDelegate__DelegateSignature(class AOakCharacter* EquipInstigator);
};

// 0x48 (0x510 - 0x4C8)
// Class OakGame.BodyArmor
class ABodyArmor : public AOakInventoryEquippableItem
{
public:
	class UBodyArmorInventoryBalanceStateComponent* BalanceStateComponent;                             // 0x4C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxSkeletalMeshComponent*             BodyArmorMesh;                                     // 0x4D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter*                         EquippedCharacter;                                 // 0x4D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxSkeletalMeshComponent*             BodyArmorMesh1P;                                   // 0x4E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxSkeletalMeshComponent*             ArmsArmorMesh;                                     // 0x4E8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakCustomizationComponent*            CustomizationComponent;                            // 0x4F0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  PickupMeshTemplate;                                // 0x4F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFoleyAccessoryComponent*>      FoleyAccessories;                                  // 0x500(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ABodyArmor* GetDefaultObj();

	void ShowPlayerUnderarmor(class AActor* EquippedPlayer);
	void OnUnequippedBy(class AOakCharacter* EquipInstigator);
	void OnEquippedBy(class AOakCharacter* EquipInstigator);
	void HidePlayerUnderarmor(class AActor* EquippedPlayer);
	void HandleEquippedCharacterDestroyed(class AActor* DestroyedActor);
};

// 0x10 (0x48 - 0x38)
// Class OakGame.BodyArmorFoleyAccessoryAspectData
class UBodyArmorFoleyAccessoryAspectData : public UInventoryAspectData
{
public:
	class UFoleyAccessoryComponent*              FoleyAccessory;                                    // 0x38(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentSocket;                                  // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBodyArmorFoleyAccessoryAspectData* GetDefaultObj();

};

// 0x90 (0x3F0 - 0x360)
// Class OakGame.OakInventoryBalanceStateComponent
class UOakInventoryBalanceStateComponent : public UInventoryBalanceStateComponent
{
public:
	uint8                                        Pad_2CC7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  GeneratedStatsSection;                             // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GeneratedStatPriority;                             // 0x370(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CCB[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUIStatData_Ability*>           CachedUIAbilityStats;                              // 0x388(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsInstanced;                                      // 0x398(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CCC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UInventoryAbilityAspectData*>   AbilityAspects;                                    // 0x3A0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UWeaponBonusAspectData*>        BonusAspectList;                                   // 0x3B0(0x10)(Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UInventoryMeshAttachmentAspectData*> AttachmentAspects;                                 // 0x3C0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CD3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UInventoryStaticMeshAttachmentAspectData*> StaticMeshAttachmentAspects;                       // 0x3D8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CD5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakInventoryBalanceStateComponent* GetDefaultObj();

	void HandleActorDestroyed(class AActor* Actor);
};

// 0x38 (0x428 - 0x3F0)
// Class OakGame.BodyArmorInventoryBalanceStateComponent
class UBodyArmorInventoryBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	class UBodyArmorPickupMeshAspectData*        PickupMeshAspectData;                              // 0x3F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyArmorMaterialModAspectData*       MaterialModAspectData;                             // 0x3F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UBodyArmorFoleyAccessoryAspectData*> FoleyAspectList;                                   // 0x400(0x10)(Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CDB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBodyArmorInventoryBalanceStateComponent* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class OakGame.BodyArmorMaterialModAspectData
class UBodyArmorMaterialModAspectData : public UInventoryAspectData
{
public:
	TArray<struct FWeightedFloatRange>           QualityRanges;                                     // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            ParameterSetDataTable;                             // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          ParameterSetRowNames;                              // 0x50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBodyArmorMaterialModAspectData* GetDefaultObj();

	void EnumerateDataTableRowNames(class UDataTable* DataTable, TArray<class FName>* OutRowNames);
};

// 0x38 (0x70 - 0x38)
// Class OakGame.BodyArmorNamingStrategyData
class UBodyArmorNamingStrategyData : public UInventoryNamingStrategyData
{
public:
	class UDataTable*                            SuffixCombinationDataTable;                        // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FBodyArmorNamingData>          PrefixNames;                                       // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FBodyArmorNamingData>          TitleNames;                                        // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FBodyArmorNamingData>          SuffixNames;                                       // 0x60(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBodyArmorNamingStrategyData* GetDefaultObj();

	void ForceExtractCombinationNamingData();
};

// 0x8 (0x40 - 0x38)
// Class OakGame.BodyArmorPickupMeshAspectData
class UBodyArmorPickupMeshAspectData : public UInventoryAspectData
{
public:
	class UStaticMesh*                           PickupMesh;                                        // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBodyArmorPickupMeshAspectData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.BodyArmorUnderarmorAspectData
class UBodyArmorUnderarmorAspectData : public UInventoryAspectData
{
public:
	TArray<class FName>                          GestaltPartsToHide;                                // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBodyArmorUnderarmorAspectData* GetDefaultObj();

	void EnumerateGestaltMeshPartNames(TArray<class FName>* OutPartNameList);
};

// 0xC0 (0xE8 - 0x28)
// Class OakGame.DungeonBonusObjective
class UDungeonBonusObjective : public UObject
{
public:
	UMulticastDelegateProperty_                  OnBonusObjectiveCompleted;                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBonusObjectiveCompletedSuccess;                  // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBonusObjectiveCompletedFail;                     // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EBonusObjectiveType               BonusObjectiveType;                                // 0x58(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D81[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakGameMode*                          OakGameMode;                                       // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointsPercentageToGiveToMainObjective;             // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBonusObjectiveState              BonusObjectiveState;                               // 0x6C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D8A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ObjectiveTimerHandle;                              // 0x70(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	class AEndlessdungeon*                       Endlessdungeon;                                    // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCombatEncounter*                      CurrentEncounter;                                  // 0x80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEndlessDungeonGlobalsData*            EndlessDungeonGlobals;                             // 0x88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D93[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ObjectiveTitle;                                    // 0xA0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  ObjectiveCompletedTitle;                           // 0xB8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  ObjectiveFailedTitle;                              // 0xD0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDungeonBonusObjective* GetDefaultObj();

	void OnRoomCompleted();
	void OnBonusObjectiveStarted();
	void AddTimeToMission(float SecondsToAdd);
};

// 0x8 (0xF0 - 0xE8)
// Class OakGame.BonusObjective_Activate
class UBonusObjective_Activate : public UDungeonBonusObjective
{
public:
	uint8                                        Pad_2DD4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBonusObjective_Activate* GetDefaultObj();

	void OnSwitchStateChanged(enum class EPuzzleState SwitchPuzzleState);
};

// 0x18 (0x100 - 0xE8)
// Class OakGame.BonusObjective_Defend
class UBonusObjective_Defend : public UDungeonBonusObjective
{
public:
	TArray<class AActor*>                        DefendSpawners;                                    // 0xE8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        NbDefendObjectiveSpawners;                         // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DFF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBonusObjective_Defend* GetDefaultObj();

	void OnDefendObjectiveDied(class ASpawner* Spawner);
};

// 0x18 (0x100 - 0xE8)
// Class OakGame.BonusObjective_Destroy
class UBonusObjective_Destroy : public UDungeonBonusObjective
{
public:
	TArray<class AActor*>                        SpawnersDestroy;                                   // 0xE8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        NbSpawnersDestroy;                                 // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E2E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBonusObjective_Destroy* GetDefaultObj();

	void OnAllDied(class ASpawner* Spawner);
};

// 0x38 (0x120 - 0xE8)
// Class OakGame.BonusObjective_Fusion
class UBonusObjective_Fusion : public UDungeonBonusObjective
{
public:
	float                                        ObjectiveTime;                                     // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnOrbEveryXEnemiesKilled;                       // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    OrbToSpawn;                                        // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentageOfEnemyToDropAnOrb;                      // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EB7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        EnemySpawners;                                     // 0x100(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        EnemyDeadCount;                                    // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AIO_CollectMasterOrb*                  CollectMasterOrb;                                  // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBonusObjective_Fusion* GetDefaultObj();

	void OnTimeExpired();
	void OnOrbDepleted();
	void OnEnemyKilled(class AOakCharacter* EnemyKilled);
	void OnCollectMasterOrbSpawned(class ASpawner* Spawner, class AActor* Actor);
};

// 0x88 (0x170 - 0xE8)
// Class OakGame.BonusObjective_KillConfirmed
class UBonusObjective_KillConfirmed : public UDungeonBonusObjective
{
public:
	float                                        KillPercentageNeeded;                              // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeAllowedAfterMelee;                             // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        EnemySpawners;                                     // 0xF0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AOakCharacter_Player*>          OakCharacters;                                     // 0x100(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F3C[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBonusObjective_KillConfirmed* GetDefaultObj();

	void OnPlayerCausedMeleeDamage(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnPlayerCausedDeath(class UDamageComponent* Damaged, struct FCausedDeathDetails& Details);
};

// 0x70 (0x158 - 0xE8)
// Class OakGame.BonusObjective_SacredGround
class UBonusObjective_SacredGround : public UDungeonBonusObjective
{
public:
	float                                        KillPercentageNeeded;                              // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FA5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USpawnerStyle_Den*                     SpawnerStyleDen;                                   // 0xF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        EnemySpawners;                                     // 0xF8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        SacredGroundSpawners;                              // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AIO_SacredGround*>              SacredGrounds;                                     // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AOakCharacter_Player*>          OakCharacters;                                     // 0x128(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        NbSpawners;                                        // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TotalActorsKilled;                                 // 0x13C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NbActorsToKill;                                    // 0x140(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NbActorsKilled;                                    // 0x144(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FB7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBonusObjective_SacredGround* GetDefaultObj();

	void OnSacredGroundSpawned(class ASpawner* Spawner, class AActor* Actor);
	void OnPlayerCausedDeath(class UDamageComponent* Damaged, struct FCausedDeathDetails& Details);
};

// 0x20 (0x108 - 0xE8)
// Class OakGame.BonusObjective_TimeTrial
class UBonusObjective_TimeTrial : public UDungeonBonusObjective
{
public:
	float                                        ObjectiveTime;                                     // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        Spawners;                                          // 0xF0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        NbSpawners;                                        // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FFF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBonusObjective_TimeTrial* GetDefaultObj();

	void ValidateEverythingIsDead();
	void OnTimeTrialTimeExpired();
	void OnAllDied(class ASpawner* Spawner);
};

// 0xB8 (0x640 - 0x588)
// Class OakGame.BoundaryTurret
class ABoundaryTurret : public AInteractiveObject
{
public:
	int32                                        StartingDistance;                                  // 0x588(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WarningZoneDistance;                               // 0x58C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WarningZoneWidth;                                  // 0x590(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ZoneHeight;                                        // 0x594(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        KillExtent;                                        // 0x598(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ZoneVerticalOffset;                                // 0x59C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowDebugZones;                                   // 0x5A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3115[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFeedbackData*                         WarningFeedback;                                   // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           WarningStartAudioEvent;                            // 0x5B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           WarningStopAudioEvent;                             // 0x5B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           KillAudioEvent;                                    // 0x5C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         WarningTriggerComponent;                           // 0x5C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         KillTriggerComponent;                              // 0x5D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                TurretMeshComponent;                               // 0x5D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AOakCharacter_Player*>          AllTrackedTargets;                                 // 0x5E0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AOakVehicle*>                   OverlappedVehicles;                                // 0x5F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AOakCharacter_Player*                  PriorityTrackedTarget;                             // 0x600(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WarningTriggerName;                                // 0x608(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  KillTriggerName;                                   // 0x610(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TurretMeshName;                                    // 0x618(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FXSwitchName;                                      // 0x620(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LaserSwitchName;                                   // 0x628(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FXStateName;                                       // 0x630(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LaserStateName;                                    // 0x638(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABoundaryTurret* GetDefaultObj();

	void WarningTrigger_OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void WarningTrigger_OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void PlayKillEffects(struct FVector& TargetLocation);
	void NetMulticast_PlayKillEffects(struct FVector& TargetLocation);
	void KillTrigger_OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void KillTrigger_OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	float GetWarningIntensity(class AActor* WarningActor);
	class AOakCharacter_Player* GetTrackedTarget();
};

// 0x28 (0x560 - 0x538)
// Class OakGame.BoundaryTurretAnimInstance
class UBoundaryTurretAnimInstance : public UGbxAnimInstance
{
public:
	class ABoundaryTurret*                       OwnerTurret;                                       // 0x538(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PivotSocketName;                                   // 0x540(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              BarrelRotation;                                    // 0x548(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        RotationSpeed;                                     // 0x554(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertTurret;                                     // 0x558(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3157[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBoundaryTurretAnimInstance* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class OakGame.BTService_FireWeapon
class UBTService_FireWeapon : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UBTService_FireWeapon* GetDefaultObj();

};

// 0x60 (0xD0 - 0x70)
// Class OakGame.BTService_TriggerDialog
class UBTService_TriggerDialog : public UBTService
{
public:
	class UDialogEvent*                          DialogEvent;                                       // 0x70(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxTriggerProperty                   RefreshParamsProperty;                             // 0x78(0x1)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_317A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UDialogParameter*, struct FGbxParam> ParameterValues;                                   // 0x80(0x50)(Edit, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTService_TriggerDialog* GetDefaultObj();

	void RefreshParams();
};

// 0x18 (0x4A8 - 0x490)
// Class OakGame.BulletNotificationVolume
class ABulletNotificationVolume : public AVolume
{
public:
	uint8                                        Pad_3188[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnBulletThrough;                                   // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ABulletNotificationVolume* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class OakGame.CameraBehavior_AdjustForFocusObject
class UCameraBehavior_AdjustForFocusObject : public UCameraBehavior
{
public:
	float                                        CamReturnTime;                                     // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CamMovementThreshold;                              // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CamMovementSpeed_Fast;                             // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CamMovementSpeed_Slow;                             // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableComponent*                   LastFocusObject;                                   // 0x40(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_319C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_AdjustForFocusObject* GetDefaultObj();

};

// 0x1E8 (0x218 - 0x30)
// Class OakGame.CameraBehavior_AIO
class UCameraBehavior_AIO : public UCameraBehavior
{
public:
	struct FVector                               FirstPersonComponentTranslationOffset;             // 0x30(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AAdvancedInteractiveObject*            CurrentAIO;                                        // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAdvancedInteractiveObjectProxy*       CurrentProxy;                                      // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAIO_CameraData*                       CameraData;                                        // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31A9[0x1C0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_AIO* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class OakGame.CameraBehavior_AutoFollow2DMovement
class UCameraBehavior_AutoFollow2DMovement : public UCameraBehavior
{
public:
	float                                        RotationRate;                                      // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FavorCameraForwardFraction;                        // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFollowPitch;                                      // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFollowYaw;                                        // 0x39(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFollowRoll;                                       // 0x3A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31B8[0x1D];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_AutoFollow2DMovement* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.CameraBehavior_AutoFollowVehicleRotation
class UCameraBehavior_AutoFollowVehicleRotation : public UCameraBehavior
{
public:
	float                                        RotationRate;                                      // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EaseInSpeed;                                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFollowInAir : 1;                                  // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFollowWhileBoosting : 1;                          // Mask: 0x2, PropSize: 0x10x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_E6 : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_31C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinVehicleSpeed;                                   // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputDelay;                                        // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31CB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_AutoFollowVehicleRotation* GetDefaultObj();

};

// 0x148 (0x1F0 - 0xA8)
// Class OakGame.CameraBehavior_ExitLadder
class UCameraBehavior_ExitLadder : public UCameraBehavior_InitialRotation
{
public:
	struct FLadderBehaviorGoalParams             ExitTopParams;                                     // 0xA8(0x68)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FLadderBehaviorGoalParams             ExitBottomParams;                                  // 0x110(0x68)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FLadderBehaviorGoalParams             ExitJumpParams;                                    // 0x178(0x68)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_31DD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_ExitLadder* GetDefaultObj();

};

// 0x1280 (0x12B0 - 0x30)
// Class OakGame.CameraBehavior_FocusDOF
class UCameraBehavior_FocusDOF : public UCameraBehavior
{
public:
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x30(0x600)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        BlendInTime;                                       // 0x630(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendOutTime;                                      // 0x634(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWorldFocus;                                       // 0x638(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDynamicFocus;                                     // 0x639(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31F6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TraceDistance;                                     // 0x63C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FocusSpeed;                                        // 0x640(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceBasedNearTransitionRegionScale;            // 0x644(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceBasedFarTransitionRegionScale;             // 0x648(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForegroundFocus;                                  // 0x64C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31FC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForegroundFocusDistance;                           // 0x650(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForegroundFocusNearRegionPct;                      // 0x654(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomedForegroundNearRegion;                        // 0x658(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlurVignetteSharpness;                             // 0x65C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartBlurVignetteSize;                             // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ColorVignetteSharpness;                            // 0x664(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartColorVignetteSize;                            // 0x668(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LongitudinalMotionScale;                           // 0x66C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LateralMotionScale;                                // 0x670(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableZoomTransition;                             // 0x674(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_320F[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  BlendOutPPSettings;                                // 0x680(0x600)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3212[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  AppliedPPSettings;                                 // 0xCA0(0x600)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3214[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              ZoomMaterialInst;                                  // 0x12A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCameraBehavior_FocusDOF* GetDefaultObj();

	void ApplyPostProcess(class UCameraState* State, float DeltaTime, float BlendWeight, struct FPostProcessSettings& PPSettings);
};

// 0x140 (0x1E8 - 0xA8)
// Class OakGame.CameraBehavior_Ladder
class UCameraBehavior_Ladder : public UCameraBehavior_InitialRotation
{
public:
	struct FLadderBehaviorGoalParams             EnterBottomParams;                                 // 0xA8(0x68)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FLadderBehaviorGoalParams             EnterTopParams;                                    // 0x110(0x68)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FLadderBehaviorGoalParams             SlidingParams;                                     // 0x178(0x68)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3239[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_Ladder* GetDefaultObj();

};

// 0x100 (0x1A8 - 0xA8)
// Class OakGame.CameraBehavior_LimitPitchBySlope
class UCameraBehavior_LimitPitchBySlope : public UCameraBehavior_InitialRotation
{
public:
	struct FRuntimeFloatCurve                    SlopeToMaxPitchCurve;                              // 0xA8(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    SlopeToMinPitchCurve;                              // 0x120(0x78)(Edit, NativeAccessSpecifierPublic)
	float                                        PitchLimitEasingSpeed;                             // 0x198(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3246[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_LimitPitchBySlope* GetDefaultObj();

};

// 0xD00 (0xD30 - 0x30)
// Class OakGame.CameraBehavior_MainMenu
class UCameraBehavior_MainMenu : public UCameraBehavior
{
public:
	class UMenuMapCameraData*                    CameraData;                                        // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMenuMapMenuFlow*                      MenuFlow;                                          // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_324B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACameraActor*                          CurrentViewTarget;                                 // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_324C[0xCE0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_MainMenu* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class OakGame.CameraBehavior_MeleeFOV
class UCameraBehavior_MeleeFOV : public UCameraBehavior_BlendToFOV
{
public:

	static class UClass* StaticClass();
	static class UCameraBehavior_MeleeFOV* GetDefaultObj();

};

// 0x20 (0xC0 - 0xA0)
// Class OakGame.CameraBehavior_MeleeLock
class UCameraBehavior_MeleeLock : public UCameraBehavior_Look
{
public:
	class AActor*                                LockedTarget;                                      // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxLockDistance;                                   // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHorizontalLockAngle;                            // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVerticalLockAngle;                              // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockBreakDistance;                                 // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockSpeed;                                         // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_325A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_MeleeLock* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.CameraBehavior_OverworldAudioListener
class UCameraBehavior_OverworldAudioListener : public UCameraBehavior
{
public:

	static class UClass* StaticClass();
	static class UCameraBehavior_OverworldAudioListener* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.CameraBehavior_PitchFOV
class UCameraBehavior_PitchFOV : public UCameraBehavior
{
public:
	class UCurveFloat*                           PitchFOVCurve;                                     // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PitchFOVScaleCurve;                                // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPitch;                                          // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPitch;                                          // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCameraBehavior_PitchFOV* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class OakGame.CameraBehavior_RaidSpectator
class UCameraBehavior_RaidSpectator : public UCameraBehavior
{
public:
	float                                        HorizontalOffset;                                  // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VerticalOffset;                                    // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRotateSpeed;                                    // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxZoom;                                           // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxZoomSpeed;                                      // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraPitchMin;                                    // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraPitchMax;                                    // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3271[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_RaidSpectator* GetDefaultObj();

};

// 0xC40 (0xC70 - 0x30)
// Class OakGame.CameraBehavior_ScriptedDOF
class UCameraBehavior_ScriptedDOF : public UCameraBehavior
{
public:
	float                                        BlendOutTime;                                      // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3278[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  BlendOutPPSettings;                                // 0x40(0x600)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_327B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  AppliedPPSettings;                                 // 0x650(0x600)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_327C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_ScriptedDOF* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.CameraBehavior_SnapLookToTarget
class UCameraBehavior_SnapLookToTarget : public UCameraBehavior
{
public:
	uint8                                        Pad_3283[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_SnapLookToTarget* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.CameraBehavior_SprintFOV
class UCameraBehavior_SprintFOV : public UCameraBehavior
{
public:
	float                                        CurrentDelay;                                      // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlendPct;                                          // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTransitioningToSprintFoV;                         // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_328A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_SprintFOV* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class OakGame.CameraBehavior_Sway
class UCameraBehavior_Sway : public UCameraBehavior
{
public:
	struct FVector                               LocationWaveformScale;                             // 0x30(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3293[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVectorWaveform>               LocationWaveforms;                                 // 0x40(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               RotationWaveformScale;                             // 0x50(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3296[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVectorWaveform>               RotationWaveforms;                                 // 0x60(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3297[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_Sway* GetDefaultObj();

};

// 0x280 (0x2B0 - 0x30)
// Class OakGame.CameraBehavior_VehicleBoost
class UCameraBehavior_VehicleBoost : public UCameraBehavior
{
public:
	float                                        FOVScale;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RelativeLocationOffset;                            // 0x34(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBlendWithSpeed;                                   // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_329E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlendInSpeed;                                      // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlendOutSpeed;                                     // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseBoostFOVAnimation;                             // 0x4C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BoostAnimationDuration;                            // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    BoostFOVAnimation;                                 // 0x58(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        BoostAnimationFOV;                                 // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    BoostTranslationAnimation;                         // 0xD8(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bAllowBoostFOVAnimationToStop;                     // 0x150(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSeparatePowerSlideAndNormalBoost;                 // 0x151(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32A8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PowerSlideBoostAnimationDuration;                  // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    PowerSlideBoostFOVAnimation;                       // 0x158(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    PowerSlideBoostTranslationAnimation;               // 0x1D0(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bAllowPowerSlideBoostFOVAnimationToStop;           // 0x248(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleOverrideData>          OverrideByParts;                                   // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_32AB[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_VehicleBoost* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class OakGame.CameraBehavior_VehicleCollision
class UCameraBehavior_VehicleCollision : public UCameraBehavior
{
public:
	struct FVector                               LocalOriginRayCast;                                // 0x30(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DodgeRadius;                                       // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimalRadius;                                     // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementDampingSpeed;                              // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32B2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_VehicleCollision* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class OakGame.CameraBehavior_VehicleFOV
class UCameraBehavior_VehicleFOV : public UCameraBehavior_FOV
{
public:

	static class UClass* StaticClass();
	static class UCameraBehavior_VehicleFOV* GetDefaultObj();

};

// 0xA00 (0xA30 - 0x30)
// Class OakGame.CameraBehavior_VehicleLook
class UCameraBehavior_VehicleLook : public UCameraBehavior
{
public:
	bool                                         bFollowGroundNormal;                               // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32B9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               GroundDetectionOrigin;                             // 0x34(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               GroundDetectionPoint0;                             // 0x40(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               GroundDetectionPoint1;                             // 0x4C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               GroundDetectionPoint2;                             // 0x58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BankingTolerance;                                  // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    BankingDampingBySpeed;                             // 0x68(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FVector                               BaseLookAtPosition;                                // 0xE0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LookAtOffsetInTheAir;                              // 0xEC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtOffsetInTheAirDamping;                       // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtOffsetInTheGroundDamping;                    // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseCameraFollowVehicleBody;                       // 0x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32C0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    CameraFollowBodyPitchRotationBySpeed;              // 0x108(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    CameraFollowBodyRollRotationBySpeed;               // 0x180(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        CameraBodyFollowDelay;                             // 0x1F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseForwardOffset;                                 // 0x1FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseFOV;                                           // 0x200(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultPitch;                                      // 0x204(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PitchMin;                                          // 0x208(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PitchMax;                                          // 0x20C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraOffsetDamping;                               // 0x210(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FreeAimMinTime;                                    // 0x214(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCameraKeyOffset                      FreeLookOffset;                                    // 0x218(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bKeepCameraOffsetsInFreeLook;                      // 0x244(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32C4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    ForwardOffsetByPitchAngle;                         // 0x248(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    UpOffsetByPitchAngle;                              // 0x2C0(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCameraPitchOffset>            PitchKeysByYawAngle;                               // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        ClampToRotateOnly;                                 // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableAutoLookInDrivingCamera;                    // 0x34C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32C8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    MinVelocityByTurnRateForAutoLook;                  // 0x350(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        AutoLookPitchDamping;                              // 0x3C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoResetDamping;                                  // 0x3CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    AutoLookYawFixBySpeed;                             // 0x3D0(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        LatteralOffsetDampingFactor;                       // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardOffsetDampingFactor;                        // 0x44C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowAutoLookInReverse;                           // 0x450(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        KeepLookAtRatio;                                   // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KeepLookAtSpeedTreshold;                           // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BodySocketToFollow;                                // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCameraKeyOffset                      StationaryOffset;                                  // 0x468(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_32D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    ForwardInterpolationRatio;                         // 0x498(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        ForwardMaxSpeed;                                   // 0x510(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCameraKeyOffset                      ForwardOffset;                                     // 0x514(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    ReverseInterpolationRatio;                         // 0x540(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        ReverseMaxSpeed;                                   // 0x5B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCameraKeyOffset                      ReverseOffset;                                     // 0x5BC(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bApplyTurnSettingsInReverse;                       // 0x5E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32D9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    TurnInterpolationRatio;                            // 0x5F0(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        TurnMaxSpeed;                                      // 0x668(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCameraKeyOffset                      TurnOffset;                                        // 0x66C(0x2C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               LocalOriginRayCast;                                // 0x698(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DodgeRadius;                                       // 0x6A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimalRadius;                                     // 0x6A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementDampingSpeed;                              // 0x6AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCameraIntroBlend                     DefaultIntro;                                      // 0x6B0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EIntroType, struct FCameraIntroBlend> IntroByType;                                       // 0x748(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleOverrideData>          OverrideByParts;                                   // 0x798(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_32DE[0x288];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_VehicleLook* GetDefaultObj();

};

// 0x1B0 (0x1E0 - 0x30)
// Class OakGame.CameraBehavior_VehicleTransitionOut
class UCameraBehavior_VehicleTransitionOut : public UCameraBehavior
{
public:
	float                                        RotateSpeed;                                       // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtFactor;                                      // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PitchMin;                                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PitchMax;                                          // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    RotationCurve;                                     // 0x40(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    LocationCurve;                                     // 0xB8(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FName                                  LookAtSocket;                                      // 0x130(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVehicleOverrideData>          OverrideByParts;                                   // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        NoAnimationDuration;                               // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxActionComponent*                   ActionComp;                                        // 0x150(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32E7[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_VehicleTransitionOut* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.CameraBehavior_ViewWeaponFOV
class UCameraBehavior_ViewWeaponFOV : public UCameraBehavior
{
public:
	float                                        SplitScreenScale;                                  // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32EC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraBehavior_ViewWeaponFOV* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class OakGame.CameraBehavior_ViewWeaponOffset
class UCameraBehavior_ViewWeaponOffset : public UCameraBehavior_OffsetViewModel
{
public:
	bool                                         bSetFOV;                                           // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32F3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SplitScreenFOVScale;                               // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalSplitScreenFOVScale;                       // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuadSplitScreenFOVScale;                           // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCameraBehavior_ViewWeaponOffset* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class OakGame.CameraBehavior_WeaponLook
class UCameraBehavior_WeaponLook : public UCameraBehavior_Look
{
public:

	static class UClass* StaticClass();
	static class UCameraBehavior_WeaponLook* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.CameraBehavior_WeaponRecoil
class UCameraBehavior_WeaponRecoil : public UCameraBehavior
{
public:

	static class UClass* StaticClass();
	static class UCameraBehavior_WeaponRecoil* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.CameraBehavior_WeaponSway
class UCameraBehavior_WeaponSway : public UCameraBehavior
{
public:

	static class UClass* StaticClass();
	static class UCameraBehavior_WeaponSway* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.CameraBehavior_WeaponZoomFOV
class UCameraBehavior_WeaponZoomFOV : public UCameraBehavior
{
public:

	static class UClass* StaticClass();
	static class UCameraBehavior_WeaponZoomFOV* GetDefaultObj();

};

// 0x10 (0x450 - 0x440)
// Class OakGame.CARConsoleAnimInstance
class UCARConsoleAnimInstance : public UAnimInstance
{
public:
	float                                        NearRadiusOfPlayer;                                // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECARStatus                        LastStatus;                                        // 0x444(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECARStatus                        Status;                                            // 0x445(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLocked;                                         // 0x446(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUnfolding;                                      // 0x447(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsActive;                                         // 0x448(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInactive;                                       // 0x449(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_330D[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCARConsoleAnimInstance* GetDefaultObj();

};

// 0x1E0 (0x6A0 - 0x4C0)
// Class OakGame.Carnivora
class ACarnivora : public APawn
{
public:
	class ACarnivoraTrackBuilder*                TrackBuilder;                                      // 0x4C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LineTracesToExecutePerFrame;                       // 0x4C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAheadDirectionPrediction;                      // 0x4CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelMaxAngle;                                     // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleMultiplierWheel;                              // 0x4D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionPredictionWheelAngle;                     // 0x4D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DesiredHeightAboveGround;                          // 0x4DC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DesiredAdditionalRoll;                             // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DesiredAdditionalPitch;                            // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugPlaneTilt;                               // 0x4E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3340[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                PartLocation;                                      // 0x4F0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        DefaultSocketToGroundDistanceTireTrack;            // 0x500(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultSocketToGroundDistanceFrontWheel;           // 0x504(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  SMFrame;                                           // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxSkeletalMeshComponent*             SKTireTrack;                                       // 0x510(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACarnivoraTread*                       LeftTread;                                         // 0x518(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACarnivoraTread*                       RightTread;                                        // 0x520(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FrontRight_SocketNameDistToGround;                 // 0x528(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FrontLeft_SocketNameDistToGround;                  // 0x530(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackRight_SocketNameDistToGround;                  // 0x538(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackLeft_SocketNameDistToGround;                   // 0x540(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftWheelDotRatioCollision;                        // 0x548(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightWheelDotRatioCollision;                       // 0x54C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontWheelDotRatioCollision;                       // 0x550(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMustMoveToDoDamage;                               // 0x554(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugCollisionTreadsAndWheels;                // 0x555(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoDamageOnTreadAndWheelCollision;                 // 0x556(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_334E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCarnivoraFakeTurrets>         FakeCarnivoraTurrets;                              // 0x558(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bShootLightProjectileAtPlayers;                    // 0x568(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3355[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SquaredDistanceReplicationCorrectionTreshold;      // 0x56C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldUpdateCarnivoraTiltBasedOnGround;           // 0x570(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3357[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               InitialCarnivoraLocation;                          // 0x574(0xC)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3358[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSplineTriggers>               SplineTriggers;                                    // 0x588(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	int32                                        CurrentCarnivoraSplineId;                          // 0x598(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_335D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineFollowerComponent*              SplineFollower;                                    // 0x5A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_335E[0xF8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACarnivora* GetDefaultObj();

	void StartCarnivoraMovement(int32 SplineTriggersId);
	void SetTrackBuilder(class ACarnivoraTrackBuilder* NewTrack, bool bReverse);
	void SetShouldUpdateTitlBasedOnGround(bool bShouldUpdate);
	void SetShouldUpdateTiltBasedOnGround(bool bShouldUpdate);
	void SetShouldShootAtPlayers(bool bShootAtPlayers);
	void SetCarnivoraTickEnabled(bool bEnabled);
	void OnRep_InitialcarnivoraLocation();
	void OnComponentHitCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
};

// 0x6F0 (0xB30 - 0x440)
// Class OakGame.CarnivoraAnimInstance
class UCarnivoraAnimInstance : public UAnimInstance
{
public:
	uint8                                        Pad_336A[0x6E0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class ACarnivora*                            CarnivoraOwner;                                    // 0xB20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_336B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCarnivoraAnimInstance* GetDefaultObj();

};

// 0x80 (0x4D8 - 0x458)
// Class OakGame.CarnivoraCannon
class ACarnivoraCannon : public AActor
{
public:
	class USkeletalMeshComponent*                CannonMeshComponent;                               // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ShellBoneName;                                     // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           Shell;                                             // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  ShellComponent;                                    // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Cannon;                                            // 0x478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACarnivora*                            Carnivora;                                         // 0x480(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineFollowerComponent*              SplineFollower;                                    // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimingAngle;                                       // 0x490(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_337F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ProjectileClass;                                   // 0x498(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ShellClass;                                        // 0x4A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumberOfProjectile;                                // 0x4A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontStartingDistance;                             // 0x4AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalDispersionAngle;                         // 0x4B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalToHorizontalDispersionRatio;               // 0x4B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileSpreadAngle;                             // 0x4B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileSpeed;                                   // 0x4BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ShellAngularVelocity;                              // 0x4C0(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShellLinearVelocity;                               // 0x4CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetDistanceAheadOnSpline;                       // 0x4D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3389[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACarnivoraCannon* GetDefaultObj();

	class AActor* GetCannon();
	void FireCannon();
};

// 0xC0 (0x7E0 - 0x720)
// Class OakGame.CarnivoraDamageZoneComponent
class UCarnivoraDamageZoneComponent : public UBoxComponent
{
public:
	class USceneComponent*                       OrgAttachParent;                                   // 0x720(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33AD[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          DamageFormula;                                     // 0x760(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        VehicleImpulseFactor;                              // 0x798(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterImpulseFactor;                            // 0x79C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageCooldownTime;                                // 0x7A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCarnivoraDamageZoneInfo              PlayerDamageInfo;                                  // 0x7A4(0xC)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCarnivoraDamageZoneInfo              OtherDamageInfo;                                   // 0x7B0(0xC)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_33B6[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCarnivoraDamageZoneComponent* GetDefaultObj();

	void OnActorComponentHit(class UPrimitiveComponent* HitComp, class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& SweepResult);
};

// 0x70 (0x4C8 - 0x458)
// Class OakGame.CarnivoraTrackBuilder
class ACarnivoraTrackBuilder : public AActor
{
public:
	class USplineComponent*                      BuilderSpline;                                     // 0x458(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      BodySpline;                                        // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TreadHeightOffset;                                 // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      LeftTreadSpline;                                   // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      RightTreadSpline;                                  // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TreadSideOffset;                                   // 0x480(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TreadTraceRadius;                                  // 0x484(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyTraceRadius;                                   // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceHeightOffset;                                 // 0x48C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceSpacing;                                      // 0x490(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 LandscapeToSnapTo;                                 // 0x498(0x28)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33CA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACarnivoraTrackBuilder* GetDefaultObj();

};

// 0x120 (0x578 - 0x458)
// Class OakGame.CarnivoraTread
class ACarnivoraTread : public AActor
{
public:
	float                                        MinAngle;                                          // 0x458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAngle;                                          // 0x45C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      TreadSpline;                                       // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumberOfPlate;                                     // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWheelState                           TreadState;                                        // 0x46C(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UStaticMesh*                           PlateMesh;                                         // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                TreadSKComponent;                                  // 0x480(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationForward;                              // 0x488(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationBackward;                             // 0x48C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInstancedStaticMeshComponent*         InstancedPlates;                                   // 0x490(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DotRatioCollision;                                 // 0x498(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WheelSplineIndexKey[0x4];                          // 0x49C(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SuspensionWheelRadius;                             // 0x4AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_33E2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                SuspensionAngles;                                  // 0x4B8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_33E3[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACarnivoraTread* GetDefaultObj();

	void OnComponentHitCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_CanSecondaryUseDeployVehicle
class UGbxCondition_CanSecondaryUseDeployVehicle : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_CanSecondaryUseDeployVehicle* GetDefaultObj();

};

// 0xD0 (0x750 - 0x680)
// Class OakGame.CatchARide
class ACatchARide : public AAdvancedInteractiveObject
{
public:
	UMulticastDelegateProperty_                  OnVehicleSpawned;                                  // 0x680(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FColor>                        AllColors;                                         // 0x690(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ECARRestrictionType               RestrictionType;                                   // 0x6A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_341C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACatchARidePlatform*                   CatchARide_Platform1;                              // 0x6A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACatchARidePlatform*                   CatchARide_Platform2;                              // 0x6B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsDeploymentAllowed;                              // 0x6B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsTeleportToDeployedAllowed;                      // 0x6B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3422[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DeploymentLocationOffset;                          // 0x6BC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  StationName;                                       // 0x6C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  CannotSpawnText;                                   // 0x6E0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  CatchARideLockedText;                              // 0x6F8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  CatchARideDisabledText;                            // 0x710(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UGbxGFxMenu*                           AssociatedMenu;                                    // 0x728(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AOakCharacter_Player*>          OverlappingPlayers;                                // 0x730(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3429[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACatchARide* GetDefaultObj();

	void SetDeployedNonInteractiveState(bool bForceDeployed);
	void OnVehicleDeployedFromMenu();
	void OnNewPartEquipped(enum class ECARPartType PartType, class UOakCARVehiclePartData* PartData);
	void OnNewBodyEquipped(class UOakCARVehicleData* VehicleData);
	void HandleSecondaryUse(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	bool CanRespawnVehicle(class AOakPlayerController* Pc, struct FOakCARMenuVehicleConfig& VehicleConfig);
};

// 0x58 (0x88 - 0x30)
// Class OakGame.OakCARVehicleData
class UOakCARVehicleData : public UGbxDataAsset
{
public:
	enum class ECARRestrictionType               RestrictionType;                                   // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSmallVehicle;                                   // 0x31(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3437[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SortPriority;                                      // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StandInDefault;                                    // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StandInByPart[0x9];                                // 0x40(0x48)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCARVehicleData* GetDefaultObj();

};

// 0x98 (0xC8 - 0x30)
// Class OakGame.OakCARVehiclePartData
class UOakCARVehiclePartData : public UGbxDataAsset
{
public:
	class UOakCARVehicleData*                    PartOfVehicle;                                     // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECARPartType                      PartType;                                          // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3442[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UInventoryData>         Wheel;                                             // 0x40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInventoryBalanceData>  WheelBalance;                                      // 0x68(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UVehiclePartData>       Part;                                              // 0x90(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortPriority;                                      // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                DefaultColor1;                                     // 0xBC(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                DefaultColor2;                                     // 0xC0(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                DefaultColor3;                                     // 0xC4(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCARVehiclePartData* GetDefaultObj();

};

// 0x60 (0x4B8 - 0x458)
// Class OakGame.CatchARidePlatform
class ACatchARidePlatform : public AActor
{
public:
	class UStaticMeshComponent*                  PlatformMesh;                                      // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         PlatformSafeZone;                                  // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         PlatformSmallVehicleSafeZone1;                     // 0x468(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USocketComponent*                      SmallVehicleSpawnSocket1;                          // 0x470(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         PlatformSmallVehicleSafeZone2;                     // 0x478(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USocketComponent*                      SmallVehicleSpawnSocket2;                          // 0x480(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScanDuration;                                      // 0x488(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EjectStartDuration;                                // 0x48C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsSupportScanning;                                 // 0x490(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_34A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinSpeedForScan;                                   // 0x494(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          WaitTimer;                                         // 0x498(0x8)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                          EjectTimer;                                        // 0x4A0(0x8)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                          UpdateTimer;                                       // 0x4A8(0x8)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class AOakVehicle*                           VehicleInScan;                                     // 0x4B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ACatchARidePlatform* GetDefaultObj();

	void StopScanFeedback();
	void OnSafeZoneEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnSafeZoneBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool GetPlatformBlocked(class AActor* ActorToIgnore, bool bForSmallVehicle);
	class AOakVehicle* GetOwnedVehicleOnPlatform(class AActor* TestOwner, bool bOnlySpawnedByCAR);
	void DigistructOut();
	void DigistructIn(bool bIsScanning);
};

// 0x8 (0x510 - 0x508)
// Class OakGame.CatchARideProxy
class ACatchARideProxy : public AAdvancedInteractiveObjectProxy
{
public:
	uint8                                        Pad_34D8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACatchARideProxy* GetDefaultObj();

	void OnTurnedOn();
	void OnTurnedOff();
	void OnStartForceDeployed();
	void OnOwningPlayerInRangeCanUse();
	void OnOwningPlayerInRangeCannotUse();
	void OnInteractionPossible();
	void OnInteractionNotPossible();
	void OnEndForceDeployed();
	bool CanBeUsedByAPlayerInRange();
};

// 0x20 (0x5A8 - 0x588)
// Class OakGame.ChanceGame
class AChanceGame : public AInteractiveObject
{
public:
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x588(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUsableComponent*                      UsableComponent;                                   // 0x590(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakLootableComponent*                 LootableComponent;                                 // 0x598(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULootableBalanceData*                  LootDefinition;                                    // 0x5A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AChanceGame* GetDefaultObj();

	void SpawnLoot();
	void OnUsedBy(struct FUseEvent& UseEvent);
};

// 0x0 (0x208 - 0x208)
// Class OakGame.CharacterCreationMenu
class UCharacterCreationMenu : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UCharacterCreationMenu* GetDefaultObj();

};

// 0x98 (0xD8 - 0x40)
// Class OakGame.CharacterEchoData
class UCharacterEchoData : public UCharacterEchoDataBase
{
public:
	class UGbxUIName*                            SpeakerUIName;                                     // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxUIName*                            CustomizationUIName;                               // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             SpeakerPortrait;                                   // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3500[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class UMediaSource*>     SpeakerMediaEntries;                               // 0x80(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ECharacterEchoDataMediaPlaybackType SpeakerMediaPlaybackType;                          // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoPortrait;                                       // 0xD4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3502[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterEchoData* GetDefaultObj();

};

// 0x8 (0x498 - 0x490)
// Class OakGame.CharacterForcedSlidingVolume
class ACharacterForcedSlidingVolume : public AVolume
{
public:
	uint8                                        bDisableJumping : 1;                               // Mask: 0x1, PropSize: 0x10x490(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3508[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACharacterForcedSlidingVolume* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.CharacterGroundSlamData
class UCharacterGroundSlamData : public UGbxDataAsset
{
public:
	TArray<struct FCharacterGroundSlamGradeData> GroundSlamGrades;                                  // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class ULandingData*                          DefaultLandingData;                                // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterGroundSlamData* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class OakGame.CharacterItemPoolExpansionData
class UCharacterItemPoolExpansionData : public UGbxDataAsset
{
public:
	TMap<class FName, struct FCharacterItemPoolExpansionInfo> CharacterExpansions;                               // 0x30(0x50)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterItemPoolExpansionData* GetDefaultObj();

};

// 0x1060 (0x1090 - 0x30)
// Class OakGame.CharacterSlidingData
class UCharacterSlidingData : public UGbxDataAsset
{
public:
	float                                        MinSprintSpeedPctToStartSliding;                   // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_351D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UControlledMove>           ControlledMove;                                    // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FootBone;                                          // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImpactData*                           FootImpact;                                        // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImpactData*                           FootImpact1st;                                     // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3520[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FElementalSlideEffect                 ElementalSlideEffects[0x6];                        // 0x60(0x7E0)(Edit, NativeAccessSpecifierPublic)
	struct FElementalSlideEffect                 ElementalSlideEffects1P[0x6];                      // 0x840(0x7E0)(Edit, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           WwiseEventStart;                                   // 0x1020(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           WwiseEventStop;                                    // 0x1028(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseBone;                                          // 0x1030(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpeedParticleParameterName;                        // 0x1038(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImpactData*                           BaseImpact;                                        // 0x1040(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegsRotationSpeed;                                 // 0x1048(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDesiredAngleRotationBetweenCameraAndLegsYaw;    // 0x104C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAllowedAimOffset;                               // 0x1050(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootCollisionDistance;                             // 0x1054(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootTraceLateralOffset;                            // 0x1058(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootCollisionStopAngle;                            // 0x105C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootCollisionStopAngleDot;                         // 0x1060(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootCollisionStopSpeed;                            // 0x1064(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegsCollisionInterpolationSpeed;                   // 0x1068(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSprintSpeedPctToTriggerSlideJump;               // 0x106C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterJumpGoalSetting             JumpGoal;                                          // 0x1070(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        JumpHorizontalSpeedScale;                          // 0x107C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinForceSlideFloorAngle;                           // 0x1080(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceSlideFloorZ;                                  // 0x1084(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDownhillSpeedToStartForcedSlide;                // 0x1088(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDirectionDeviationFromDownhillAngle;            // 0x108C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterSlidingData* GetDefaultObj();

};

// 0x88 (0x610 - 0x588)
// Class OakGame.TravelStationObject
class ATravelStationObject : public AInteractiveObject
{
public:
	uint8                                        Pad_3642[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTrackChallengesInitialization;                    // 0x590(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3644[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGFxFriendsInArea>         DefaultFriendsInArea;                              // 0x598(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxMenuData*                       FriendsInAreaListMenuData;                         // 0x5A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResurrectionProximityDetection;                   // 0x5A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3646[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DebugFriendsCount;                                 // 0x5AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUsableComponent*                      UsableComponent;                                   // 0x5B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                MeshComponent;                                     // 0x5B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxAreaComponent*                     AreaComponent;                                     // 0x5C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFastTravelStationComponent*           FastTravelStationComponent;                        // 0x5C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelTravelStationComponent*          LevelTravelStationComponent;                       // 0x5D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxBillboardComponent*                FriendsInNextAreaBillboard;                        // 0x5D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxFriendsInArea*                     CachedFriendsInNextArea;                           // 0x5E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOutOfMapWaypointComponent*            OutOfMapWaypoint;                                  // 0x5E8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_364B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATravelStationObject* GetDefaultObj();

	void SetStationResurrectActive(bool bResurrectionActive);
	void PlayerExitedArea(class AGbxPlayerController* GbxPC);
	void PlayerEnteredArea(class AGbxPlayerController* GbxPC);
	void OnUsedSecondaryBy(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedBy(struct FUseEvent& UseEvent);
	void OnTravelStationActivated(class AActor* OtherStation);
	void OnFastTravelStationDiscovered(bool bNoActivationSequence);
	void OnChallengesInitialized();
	bool IsDestinationInstalled();
	bool HasNearbyFriends(class AGbxPlayerController* GbxPC);
	bool GetStationResurrectActive();
	class FString GetNameOfNextLevel();
	void CheckTravelDependencies();
};

// 0x0 (0x610 - 0x610)
// Class OakGame.CheckpointTravelStationObject
class ACheckpointTravelStationObject : public ATravelStationObject
{
public:

	static class UClass* StaticClass();
	static class ACheckpointTravelStationObject* GetDefaultObj();

};

// 0x150 (0x2C8 - 0x178)
// Class OakGame.CollisionDamageComponent
class UCollisionDamageComponent : public UActorComponent
{
public:
	struct FLastCollisionDamageInfo              LastCollisionDamageInfo;                           // 0x178(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MinVelocityToCauseDamage;                          // 0x190(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3661[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          CollisionDamageFormula;                            // 0x198(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        HitForceVelocityFactor;                            // 0x1D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    DamageMultiplier;                                  // 0x1D4(0xC)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    AIDamageMultiplier;                                // 0x1E0(0xC)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3664[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         ConditionalDamageCondition;                        // 0x1F0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    ConditionalDamageMultiplier;                       // 0x1F8(0xC)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3666[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          SelfCollisionDamageFormula;                        // 0x208(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    SelfDamageMultiplier;                              // 0x240(0xC)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    SelfAIDamageMultiplier;                            // 0x24C(0xC)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageCurveRefSpeed;                               // 0x258(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HitCooldown;                                       // 0x25C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FrontalCollisionAngle;                             // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3667[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDamageSource>             DamageSource;                                      // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FForceSelection                       ImpactForceSelection;                              // 0x278(0x20)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnActorHit;                                        // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AOakVehicle*                           MyOakVehicle;                                      // 0x2A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_366A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCollisionDamageComponent* GetDefaultObj();

	void OnMeshComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x1D8 (0x200 - 0x28)
// Class OakGame.StreamingEncounterBase
class UStreamingEncounterBase : public UObject
{
public:
	UMulticastDelegateProperty_                  OnCreatedEvent;                                    // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDestroyedEvent;                                  // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActivatedEvent;                                  // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDeactivatedEvent;                                // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeginPlayEvent;                                  // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndPlayEvent;                                    // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_36B5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LevelTransform;                                    // 0x90(0x30)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UStreamingEncounterDataBase*           EncounterData;                                     // 0xC0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHighPriority;                                     // 0xC8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_36B6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ADynamicRoomBase*                      DynamicRoomBase;                                   // 0xD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEncounterLoadItemState>       LoadItemStates;                                    // 0xD8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AActor>>         SpawnPointActors;                                  // 0xE8(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_36B7[0x108];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStreamingEncounterBase* GetDefaultObj();

	void UnloadScheduleItem(class FName ItemName);
	void StartLoadingScheduleItem(class FName ItemName);
	void StartCleaningUp();
	void SetLoadSchedule(TArray<struct FEncounterLoadScheduleItem>& ScheduleItems);
	void SetExistingLevelAsLoadItem(class FName LoadItemName, const struct FSoftObjectPath& PersistentLevelPath, class UObject* WorldContextObject);
	void ResetMilestone(class FName Milestone);
	void RemoteEvent(class FName EventName);
	void OnRoomVisible(class ADynamicRoomBase* RoomReference);
	void OnRoomLoaded(class ADynamicRoomBase* RoomReference);
	void OnMilestoneReached(class FName Milestone);
	void OnLevelLoaded(class ULevelStreaming* Level, class FName LoadItemName);
	void OnEncounterEndPlay();
	void OnEncounterDeactivated();
	void OnEncounterBeginPlay();
	void OnEncounterActivated();
	void OnDestroyed();
	void OnCreated();
	bool IsMilestoneComplete(class FName Milestone);
	bool IsFullyUnloaded();
	bool IsFullyInstalled();
	bool IsCleaningUp();
	bool Init(int32 Seed);
	enum class EEncounterInstanceState GetEncounterState();
	class UStreamingEncounterDataBase* GetEncounterData();
	void FindEncounterActors(TSubclassOf<class AActor> ActorClass, class FName WithTag, TSoftObjectPtr<class UWorld> LimitToLevel, TArray<class AActor*>* OutActors, bool bSortActors);
	void EndEncounter();
	void CancelScheduledLoads();
	void ActivateMilestone(class FName Milestone);
};

// 0x38 (0x238 - 0x200)
// Class OakGame.DaffodilEncounter
class UDaffodilEncounter : public UStreamingEncounterBase
{
public:
	class UDaffodilEncounterRunner*              Runner;                                            // 0x200(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Seed;                                              // 0x208(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRandomStream                         RandomStream;                                      // 0x20C(0x8)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_36C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEncounterContext*                     EncounterContext;                                  // 0x218(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBegunPlay;                                     // 0x220(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopped;                                          // 0x221(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36C9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTransform>                    CleanupRegionTransforms;                           // 0x228(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDaffodilEncounter* GetDefaultObj();

	void GetPrimaryLoadContent(TArray<TSoftObjectPtr<class UWorld>>* Out_LoadLevels, TArray<TSoftObjectPtr<class UObject>>* Out_LoadAssets, struct FEncounterDynamicRoomConfig* Out_LoadRoom);
	void GetOverworldLoadContent(TArray<TSoftObjectPtr<class UObject>>* Out_OverworldAssets);
	void ExitEncounter();
};

// 0x18 (0x250 - 0x238)
// Class OakGame.OverworldRepresentedEncounter
class UOverworldRepresentedEncounter : public UDaffodilEncounter
{
public:
	TWeakObjectPtr<class AOverworldRepresentation> OverworldRepresentation;                           // 0x238(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36D1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOverworldRepresentedEncounter* GetDefaultObj();

};

// 0x30 (0x280 - 0x250)
// Class OakGame.CombatEncounter
class UCombatEncounter : public UOverworldRepresentedEncounter
{
public:
	uint8                                        Pad_36E9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCombatEncounterData*                  Data;                                              // 0x258(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEncounterGameMode*                    GameMode;                                          // 0x260(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentOPLevel;                                    // 0x268(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36EC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URegionData*                           RoomRegionData;                                    // 0x270(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36EE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCombatEncounter* GetDefaultObj();

	void PreBeginPlay();
	void OnWon();
	void OnStartingRespawn();
	void OnRespawnToOverworld();
	void OnReadyToExit(bool bToAnotherRoom);
	void OnEndRoomRewardTaken();
	void InitTraps(struct FTrapConfiguration& TrapConfiguration);
	void FindKeyActors();
};

// 0x8 (0x38 - 0x30)
// Class OakGame.StreamingEncounterDataBase
class UStreamingEncounterDataBase : public UGbxDataAsset
{
public:
	TSubclassOf<class UStreamingEncounterBase>   EncounterClass;                                    // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UStreamingEncounterDataBase* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class OakGame.DaffodilEncounterData
class UDaffodilEncounterData : public UStreamingEncounterDataBase
{
public:
	enum class EEncounterType                    EncounterType;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDungeonBonusObjective>    BonusObjective;                                    // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnusedBool_ToBeDeleted;                           // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36FD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULootableBalanceData*                  RoomRewardLootableData;                            // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnOptionData*                      EndlessBossPuzzleSpawnOption;                      // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDownloadableExpansionData*            DLCData;                                           // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3700[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDaffodilEncounterData* GetDefaultObj();

};

// 0xA0 (0x110 - 0x70)
// Class OakGame.CombatEncounterData
class UCombatEncounterData : public UDaffodilEncounterData
{
public:
	class UCombatRoomData*                       Room;                                              // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEncounterGameMode>        GameModeClass;                                     // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEncounterCombatModeOptions*           GameModeOptions;                                   // 0x80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTrapConfiguration                    Traps;                                             // 0x88(0x6)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3713[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionEventReference                MissionEventOnEnter;                               // 0x90(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionEventReference                MissionEventOnVictory;                             // 0xA0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionEventReference                MissionEventOnExit;                                // 0xB0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                RoomConfig;                                        // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UWorld>>         AdditionalSublevels;                               // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            HidePortalUntilObjective;                          // 0xE0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCombatEncounterData* GetDefaultObj();

};

// 0x30 (0xB8 - 0x88)
// Class OakGame.EncounterRoomData
class UEncounterRoomData : public UDynamicRoomBaseData
{
public:
	uint8                                        Pad_3723[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDownloadableExpansionData*            DLCData;                                           // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 AssetGuid;                                         // 0x98(0x10)(DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UEncounterRoomLevelSet*>        PendingUnloads;                                    // 0xA8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEncounterRoomData* GetDefaultObj();

	void RoomLevelSetUnloadComplete(class UEncounterRoomLevelSet* RoomLevelSet);
};

// 0xB0 (0x168 - 0xB8)
// Class OakGame.CombatRoomData
class UCombatRoomData : public UEncounterRoomData
{
public:
	TArray<TSoftObjectPtr<class UWorld>>         PersistentLevels;                                  // 0xB8(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FString>                        ExcludedArmyFilterTags;                            // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        IncludedArmyFilterTags;                            // 0xD8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UEncounterGameMode>, TSoftObjectPtr<class UWorld>> GameModeSublevels;                                 // 0xE8(0x50)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FBox                                  Bounds;                                            // 0x138(0x1C)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_372D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseState*                           MusicState;                                        // 0x158(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HardwareLightingState;                             // 0x160(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCombatRoomData* GetDefaultObj();

};

// 0x58 (0x4B0 - 0x458)
// Class OakGame.CommandRing
class ACommandRing : public AActor
{
public:
	UMulticastDelegateProperty_                  OnAcquiredTarget;                                  // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReleasedTarget;                                  // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        BitPad_F3 : 1;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bOnlyVisibleToOwner : 1;                           // Mask: 0x2, PropSize: 0x10x478(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_F4 : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_37BA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECommandRingReferenceActorType    RelativeActorType;                                 // 0x47C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECommandRingLocationType          RelativeLocationType;                              // 0x47D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_37BD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RelativeLocationSearchDistance;                    // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECommandRingAlignmentType         RelativeAlignmentType;                             // 0x484(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_37C0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCommandRingTarget                    TargetInfo;                                        // 0x488(0x28)(Transient, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ACommandRing* GetDefaultObj();

	void UpdateTarget(class AActor* Target, const struct FVector& Location, const struct FRotator& Rotation, class USceneComponent* Base, const struct FVector& SurfaceNormal);
	void SetVisibility(bool bIsVisible);
	void ReleaseTarget();
	bool IsTargetValid();
	struct FCommandRingTarget GetTarget();
	struct FVector GetCommandRingTargetWorldLocation(struct FCommandRingTarget& TargetInfo);
	struct FRotator ComputeRotation(enum class ECommandRingAlignmentType Type, class AActor* RefActor, const struct FRotator& RefRotation, const struct FVector& SurfaceNormal);
	struct FVector ComputeLocation(enum class ECommandRingLocationType Type, class AActor* RefActor, const struct FVector& RefLocation, float SearchDistance, struct FVector* SurfaceNormal);
	void CommandRingReleasedTargetEvent__DelegateSignature(struct FCommandRingTarget& TargetInfo);
	void CommandRingAcquiredTargetEvent__DelegateSignature(struct FCommandRingTarget& TargetInfo);
};

// 0x30 (0x6B0 - 0x680)
// Class OakGame.ConditionalFlavorTextIO
class AConditionalFlavorTextIO : public AAdvancedInteractiveObject
{
public:
	TArray<struct FTextElementCondition>         FlavorTextElements;                                // 0x680(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FText                                  TitleText;                                         // 0x690(0x18)(Edit, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          MenuData;                                          // 0x6A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AConditionalFlavorTextIO* GetDefaultObj();

};

// 0x20 (0x2F0 - 0x2D0)
// Class OakGame.ConsoleCommandSetterIntComponent
class UConsoleCommandSetterIntComponent : public USceneComponent
{
public:
	int32                                        Value;                                             // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_37D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Command;                                           // 0x2D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bXboxOne;                                          // 0x2E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPS4;                                              // 0x2E9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWindows;                                          // 0x2EA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_37D7[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UConsoleCommandSetterIntComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.CorpseableInterface
class ICorpseableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ICorpseableInterface* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.CorpseManager
class UCorpseManager : public UObject
{
public:
	TArray<struct FCorpseRecord>                 TrackedCorpses;                                    // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UCorpseManager* GetDefaultObj();

};

// 0x8 (0x460 - 0x458)
// Class OakGame.CosmeticDamageableActor
class ACosmeticDamageableActor : public AActor
{
public:
	uint8                                        Pad_37F6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACosmeticDamageableActor* GetDefaultObj();

	void OnTakeDamage(struct FCosmeticDamageEventDetails& Details);
};

// 0x8 (0x460 - 0x458)
// Class OakGame.CosmeticFrozenActor
class ACosmeticFrozenActor : public AActor
{
public:
	class UDestructibleComponent*                DestructibleComponent;                             // 0x458(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ACosmeticFrozenActor* GetDefaultObj();

};

// 0x10 (0x690 - 0x680)
// Class OakGame.CrazyEarlDoor
class ACrazyEarlDoor : public AAdvancedInteractiveObject
{
public:
	uint8                                        Pad_3827[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomizationList*                    CustomizationList;                                 // 0x688(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ACrazyEarlDoor* GetDefaultObj();

	void OnPurchase(class UOakCustomizationData* PurchasedItem);
	void OnExitMenu();
};

// 0x0 (0x508 - 0x508)
// Class OakGame.CrazyEarlDoorProxy
class ACrazyEarlDoorProxy : public AAdvancedInteractiveObjectProxy
{
public:

	static class UClass* StaticClass();
	static class ACrazyEarlDoorProxy* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class OakGame.CrosshairDataAsset
class UCrosshairDataAsset : public UGbxDataAsset
{
public:
	class FString                                CrosshairID;                                       // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CrosshairFrameName;                                // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCrosshairDataAsset* GetDefaultObj();

};

// 0x10 (0x260 - 0x250)
// Class OakGame.CustomEncounter
class UCustomEncounter : public UOverworldRepresentedEncounter
{
public:
	class UCustomEncounterData*                  Data;                                              // 0x250(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3848[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomEncounter* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class OakGame.CustomEncounterData
class UCustomEncounterData : public UDaffodilEncounterData
{
public:
	class UCustomEncounterRoomData*              Room;                                              // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCustomEncounterData* GetDefaultObj();

};

// 0x50 (0x108 - 0xB8)
// Class OakGame.CustomEncounterRoomData
class UCustomEncounterRoomData : public UEncounterRoomData
{
public:
	TSoftObjectPtr<class UWorld>                 PersistentLevel;                                   // 0xB8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AOverworldRepresentation> OverworldRepresentationClass;                      // 0xE0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCustomEncounterRoomData* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.CustomizationInventoryAssetSetup
class UCustomizationInventoryAssetSetup : public UGbxDataAsset
{
public:
	class UManufacturerData*                     ManufacturerData;                                  // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                InventoryCategory;                                 // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    InventoryActorClass;                               // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCustomizationInventoryAssetSetup* GetDefaultObj();

};

// 0x0 (0x168 - 0x168)
// Class OakGame.CustomizationInventoryBalanceData
class UCustomizationInventoryBalanceData : public UInventoryBalanceData
{
public:

	static class UClass* StaticClass();
	static class UCustomizationInventoryBalanceData* GetDefaultObj();

};

// 0x0 (0x310 - 0x310)
// Class OakGame.CustomizationInventoryData
class UCustomizationInventoryData : public UInventoryData
{
public:

	static class UClass* StaticClass();
	static class UCustomizationInventoryData* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.CustomizationList
class UCustomizationList : public UGbxDataAsset
{
public:
	TArray<class UGbxCustomizationData*>         CustomizationList;                                 // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCustomizationList* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.CustomizationProviderInterface
class ICustomizationProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ICustomizationProviderInterface* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DaffodilChallengeBonusGlobalsData
class UDaffodilChallengeBonusGlobalsData : public UGbxDataAsset
{
public:
	TArray<struct FDaffodilChallengeBonusData>   ChallengeBonuses;                                  // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDaffodilChallengeBonusGlobalsData* GetDefaultObj();

};

// 0x0 (0x458 - 0x458)
// Class OakGame.DaffodilCreditsSlide
class ADaffodilCreditsSlide : public AActor
{
public:

	static class UClass* StaticClass();
	static class ADaffodilCreditsSlide* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class OakGame.DaffodilCreditsSlideshowManager
class UDaffodilCreditsSlideshowManager : public UObject
{
public:
	TArray<TSoftClassPtr<class ADaffodilCreditsSlide>> SlideClasses;                                      // 0x28(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           EndCreditsMusicStart;                              // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           EndCreditsMusicStop;                               // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlideClassWrapper                    CurrentSlideClass;                                 // 0x48(0x10)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FSlideClassWrapper                    NextSlideClass;                                    // 0x58(0x10)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_39B6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               WorldContextObject;                                // 0x80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_39BD[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SecondsPerSlide;                                   // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_39BE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDaffodilCreditsSlideshowManager* GetDefaultObj();

	float GetXPercentage();
	class UObject* GetWorldContext();
	TArray<TSoftClassPtr<class ADaffodilCreditsSlide>> GetSlideClassesArray();
	float GetSecondsUntilNextSlide();
	float GetSecondsPerSlide();
	int32 GetNumberOfSlides();
	int32 GetCurrentSlideIndex();
	int32 GetCameraDistance();
	void BPEvent_OnSlideTransitionBegin(class UClass* NewSlideClass);
	void BPEvent_OnLoop();
	void BPEvent_OnCreditsEnd();
	void BPEvent_OnCreditsBegin(class UClass* FirstSlideClass);
};

// 0x30 (0x58 - 0x28)
// Class OakGame.EncounterRoomLevelSet
class UEncounterRoomLevelSet : public UObject
{
public:
	class ADynamicRoomBase*                      ReferenceActor;                                    // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULevelStreaming*>               StreamingLevels;                                   // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         bWantsRemoval;                                     // 0x40(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_39E5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           OnRemovalComplete;                                 // 0x48(0x10)(ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterRoomLevelSet* GetDefaultObj();

	void SelectedRoomVisible();
	void SelectedRoomLoaded();
};

// 0x50 (0x5D8 - 0x588)
// Class OakGame.DamageableHISM
class ADamageableHISM : public AInteractiveObject
{
public:
	struct FBox                                  DamageHitBox;                                      // 0x588(0x1C)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3A1A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnInstancesDestroyed;                              // 0x5A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A1D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADamageableHISM* GetDefaultObj();

	void TakeDamageOnInstances(const struct FVector& HitLocation, float Radius, const struct FVector& Origin);
};

// 0x90 (0xC0 - 0x30)
// Class OakGame.DamageBlockData
class UDamageBlockData : public UGbxDataAsset
{
public:
	struct FAttributeInitializationData          BlockedDamageScale;                                // 0x30(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          BlockAngle;                                        // 0x68(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UDamageSource>>     BlockDamageSources;                                // 0xA0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGbxDamageType>>    BlockDamageTypes;                                  // 0xB0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDamageBlockData* GetDefaultObj();

};

// 0x10 (0x218 - 0x208)
// Class OakGame.DamageIndicator
class UDamageIndicator : public UUserWidget
{
public:
	float                                        ShowDuration;                                      // 0x208(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutDuration;                                   // 0x20C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                DamageCauser;                                      // 0x210(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDamageIndicator* GetDefaultObj();

	void SetDamageCauser(class AActor* NewDamageActor);
	void SetAlpha(float NewAlpha);
};

// 0x168 (0x6F0 - 0x588)
// Class OakGame.DamageLinkNode
class ADamageLinkNode : public AInteractiveObject
{
public:
	uint8                                        Pad_3AC0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bLinkingEnabled;                                   // 0x5A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AC4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LinkBeamSocket;                                    // 0x5A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakLightBeamData>         NodeLinkBeam;                                      // 0x5B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          NodeLinkDistance;                                  // 0x5B8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          NodeLinkDamage;                                    // 0x5F0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bUseNodeLinkDamage;                                // 0x628(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AD2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UOakLightBeamData>         EnemyLinkBeam;                                     // 0x630(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          EnemyLinkDistance;                                 // 0x638(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          EnemyLinkDamage;                                   // 0x670(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               EnemyLinkDamageData;                               // 0x6A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseEnemyLinkDamageData;                           // 0x6B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AE1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       DeathFX;                                           // 0x6B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         RumbleData;                                        // 0x6C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRangedDistanceOverrides              RumbleDistanceOverrides;                           // 0x6C8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakDamageComponent*                   OakDamage;                                         // 0x6D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetableComponent*                  Targetable;                                        // 0x6E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AF3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADamageLinkNode* GetDefaultObj();

	void GetAvailableSocketNames(TArray<class FName>* Array);
};

// 0x10 (0x38 - 0x28)
// Class OakGame.DebugMenuCategoryConfig
class UDebugMenuCategoryConfig : public UObject
{
public:
	TArray<struct FDebugMenuCommandItemData>     ConfigExecData;                                    // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDebugMenuCategoryConfig* GetDefaultObj();

};

// 0x30 (0x2E8 - 0x2B8)
// Class OakGame.DebugMenuCategoryList
class UDebugMenuCategoryList : public UGbxUserWidget
{
public:
	class UGbxScrollBoxList*                     CommandList;                                       // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TitleText;                                         // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            DescriptionText;                                   // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            CommandText;                                       // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDebugMenuCommandItemData>     CommandListItemData;                               // 0x2D8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDebugMenuCategoryList* GetDefaultObj();

	void RemoveAllItems();
	void OnExecItemActivated(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnCommandItemSelected(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	class UGbxListItem* AddExecItem(class FText Label, class FText Description, const class FString& Command);
	void AddConfigExecItems(class FName& CategoryName);
	class UGbxListItem* AddCommandItem(class FText Label, class FText Description, UDelegateProperty_ OnActivate);
};

// 0xA8 (0x3A0 - 0x2F8)
// Class OakGame.DebugMenuCategoryCharacterSkills
class UDebugMenuCategoryCharacterSkills : public UGbxDebugMenuSubmenu
{
public:
	class UOakAbilityDebugMenuCascadingList*     CascadingListRef;                                  // 0x2F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            CharacterNameRef;                                  // 0x300(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                          DescriptionPanelRef;                               // 0x308(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            DescriptionRef;                                    // 0x310(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDebugMenuGradebox                    Grade1Details;                                     // 0x318(0x28)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  PrimaryPlayer;                                     // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityManagerComponent*     PrimaryPlayerAbilityManager;                       // 0x348(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerCharacterComponent*             PrimaryPlayerCharacterCompoment;                   // 0x350(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityTree*                 PlayerAbilityTree;                                 // 0x358(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerBalanceStateComponent*          BalanceState;                                      // 0x360(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOakPlayerAbilityTreeItemData_Ability*> AbilitiesSorted;                                   // 0x368(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UOakPlayerAbilityTreeItemData_ActionAbilityAugment*> AugmentsSorted;                                    // 0x378(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DEE[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDebugMenuCategoryCharacterSkills* GetDefaultObj();

	void OnSelectionMade();
	void OnSelectionFailed();
	void OnPlayerAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnCascadeListItemSelected(class UGbxListItemText_CharacterDebugMenu* ListItem);
	void OnCascadeListItemRefresh(class UGbxListItemText_CharacterDebugMenu* ListItem);
	void OnCascadeListItemClicked(class UGbxListItemText_CharacterDebugMenu* ListItem);
	void OnActionAbilityAugmentChanged(TSubclassOf<class UOakActionAbility> ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void OnAbilityTreeReset();
	void OnAbilityPointsChanged(int32 RemainingAbilityPoints);
	void OnAbilityItemChanged(class UOakPlayerAbilityTreeItemData* ItemData);
	void ConstructCharacterPage();
};

// 0x10 (0x308 - 0x2F8)
// Class OakGame.DebugMenuCategoryEndless
class UDebugMenuCategoryEndless : public UGbxDebugMenuSubmenu
{
public:
	class UDebugMenuCategoryList*                CategoryList;                                      // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCascadingList*                     CascadingList;                                     // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDebugMenuCategoryEndless* GetDefaultObj();

	void StartPlaylist(class UEncounterPlaylist* Playlist);
	void OnItemClicked(struct FGbxCascadingListItemData& ItemData, class UGbxListItem* ItemView, class FName& ParentId);
};

// 0x8 (0x300 - 0x2F8)
// Class OakGame.DebugMenuCategoryEssentials
class UDebugMenuCategoryEssentials : public UGbxDebugMenuSubmenu
{
public:
	class UDebugMenuCategoryList*                CategoryList;                                      // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDebugMenuCategoryEssentials* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.GbxReportTags
class UGbxReportTags : public UObject
{
public:
	TArray<struct FGbxReportTag>                 Tags;                                              // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGbxReportTags* GetDefaultObj();

};

// 0x30 (0x328 - 0x2F8)
// Class OakGame.DebugMenuCategoryTelemetry
class UDebugMenuCategoryTelemetry : public UGbxDebugMenuSubmenu
{
public:
	class UDebugMenuCategoryList*                CategoryList;                                      // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextExecutionGUID;                                 // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextReportTag;                                     // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextGameGUID;                                      // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextKeys;                                          // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextValues;                                        // 0x320(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDebugMenuCategoryTelemetry* GetDefaultObj();

};

// 0x20 (0x478 - 0x458)
// Class OakGame.DecoNPCManager
class ADecoNPCManager : public AActor
{
public:
	float                                        MinDistanceToSleep;                                // 0x458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FastestDistanceToSleep;                            // 0x45C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeToSleep;                                    // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTimeToSleep;                                    // 0x464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FManagedNPCIO>                 NPCActors;                                         // 0x468(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ADecoNPCManager* GetDefaultObj();

	void UnregisterNPCActor(class AActor* NPC);
	void RegisterNPCActor(class AActor* NPC);
};

// 0x20 (0x50 - 0x30)
// Class OakGame.DefaultCrosshairComponentData
class UDefaultCrosshairComponentData : public UGbxDataAsset
{
public:
	TArray<struct FDefaultCrosshairData>         CrosshairWidgetsData;                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          CrosshairAnimationWidgetNames;                     // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDefaultCrosshairComponentData* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckAttitude
class UDialogSelectorImplementation_CheckAttitude : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      ObserverParam;                                     // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      TargetParam;                                       // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETeamAttitude                     DesiredAttitude;                                   // 0x40(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F7E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckAttitude* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckCombatState
class UDialogSelectorImplementation_CheckCombatState : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      TestSubjectParam;                                  // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrueIfInCombat;                                   // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F9E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckCombatState* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckLevel
class UDialogSelectorImplementation_CheckLevel : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      BalancedActorParam;                                // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinLevel;                                          // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLevel;                                          // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckLevel* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckMissionState
class UDialogSelectorImplementation_CheckMissionState : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      MissionParam;                                      // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMissionStatus                    DesiredMissionStatus;                              // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_400D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckMissionState* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckWeaponElement
class UDialogSelectorImplementation_CheckWeaponElement : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      WeaponUserParam;                                   // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      ElementParam;                                      // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckWeaponElement* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckWeaponIsUnderleveled
class UDialogSelectorImplementation_CheckWeaponIsUnderleveled : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      WeaponUserParam;                                   // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinLevelGap;                                       // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_405D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckWeaponIsUnderleveled* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckWeaponManufacturer
class UDialogSelectorImplementation_CheckWeaponManufacturer : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      WeaponUserParam;                                   // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      ManufacturerParam;                                 // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckWeaponManufacturer* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckWeaponRarity
class UDialogSelectorImplementation_CheckWeaponRarity : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      WeaponUserParam;                                   // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  Rarity;                                            // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckWeaponRarity* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_CheckWeaponType
class UDialogSelectorImplementation_CheckWeaponType : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      WeaponUserParam;                                   // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      WeaponTypeParam;                                   // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_CheckWeaponType* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_GbxCondition
class UDialogSelectorImplementation_GbxCondition : public UDialogSelectorImplementation
{
public:
	class UGbxCondition*                         Condition;                                         // 0x30(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      ContextParam;                                      // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_GbxCondition* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_HasGameplayTag
class UDialogSelectorImplementation_HasGameplayTag : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      ActorParam;                                        // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      TagParam;                                          // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_HasGameplayTag* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.DialogSelectorImplementation_HasShield
class UDialogSelectorImplementation_HasShield : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      TestSubjectParam;                                  // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_HasShield* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_IsDriver
class UDialogSelectorImplementation_IsDriver : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      CandidateParam;                                    // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      VehicleParam;                                      // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_IsDriver* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.DialogSelectorImplementation_IsFlag
class UDialogSelectorImplementation_IsFlag : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      FlagParam;                                         // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_IsFlag* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_IsNearbyPlayerDown
class UDialogSelectorImplementation_IsNearbyPlayerDown : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      ObserverParam;                                     // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCustomDistance;                                // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4198[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CustomDistance;                                    // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_IsNearbyPlayerDown* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_IsPassenger
class UDialogSelectorImplementation_IsPassenger : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      CandidateParam;                                    // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      VehicleParam;                                      // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_IsPassenger* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.DialogSelectorImplementation_IsPetAlive
class UDialogSelectorImplementation_IsPetAlive : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      PetOwnerParam;                                     // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_IsPetAlive* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.DialogSelectorImplementation_MissionCommentary
class UDialogSelectorImplementation_MissionCommentary : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      MissionParam;                                      // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_MissionCommentary* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.DialogSelectorImplementation_MissionCommentaryIndefinite
class UDialogSelectorImplementation_MissionCommentaryIndefinite : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      RangeStartParam;                                   // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_MissionCommentaryIndefinite* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.DialogSelectorImplementation_OnMissionInRange
class UDialogSelectorImplementation_OnMissionInRange : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                      RangeStartParam;                                   // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      RangeEndParam;                                     // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDialogSelectorImplementation_OnMissionInRange* GetDefaultObj();

};

// 0x80 (0x7D0 - 0x750)
// Class OakGame.DiscoveryAreaComponent
class UDiscoveryAreaComponent : public UGbxAreaComponent
{
public:
	class FName                                  DefaultWorldAreaShortName;                         // 0x750(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  WorldAreaDisplayName;                              // 0x758(0x18)(Edit, NativeAccessSpecifierPublic)
	class UGbxUIName*                            WorldAreaDisplayUIName;                            // 0x770(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DiscoverySoundEvent;                               // 0x778(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UChallenge>                DiscoveryChallenge;                                // 0x780(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URegionData*                           BalanceToRegionDef;                                // 0x788(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          ExperienceRewardMultiplier;                        // 0x790(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_4228[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDiscoveryAreaComponent* GetDefaultObj();

};

// 0x48 (0x1C0 - 0x178)
// Class OakGame.DiscoveryComponent
class UDiscoveryComponent : public UActorComponent
{
public:
	TArray<struct FDiscoveredLevelInfo>          DiscoveredLevels;                                  // 0x178(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FDiscoveredPlanetInfo>         DiscoveredPlanets;                                 // 0x188(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_4417[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFoundDiscoveryArea;                              // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnteredDiscoveryArea;                            // 0x1B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDiscoveryComponent* GetDefaultObj();

	void UnlockPlanetForAllPlayers(class UObject* WorldContextObject, class UPlanetData* Planet);
	void ServerFirstDiscoveryOfArea(class UDiscoveryAreaComponent* AreaComponent);
	void OnHostDiscoveredPlanetsChanged();
	bool IsPlanetNew(class UPlanetData* Planet);
	bool IsPlanetDiscovered(class UPlanetData* Planet);
	bool IsLevelDiscovered(class FName LevelName);
	bool IsCurrentLevelDiscovered();
	bool IsAreaDiscovered(class FName AreaName, bool CurrentLevelOnly);
	void FixupAreaDiscoveryAchievement();
	void DiscoverLevelForAllPlayers(class UObject* WorldContextObject, class FName LevelName, bool bAutoDiscoverPlanet);
	void DiscoverAreaForAllPlayers(class UObject* WorldContextObject, class FName AreaName);
	void ClientUnlockPlanet(class UPlanetData* Planet);
	void ClientDiscoverLevel(class FName LevelName);
};

// 0x38 (0x5C0 - 0x588)
// Class OakGame.DisplacementZone
class ADisplacementZone : public AInteractiveObject
{
public:
	UMulticastDelegateProperty_                  OnMovedActor;                                      // 0x588(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AActor>>            ClassesToPush;                                     // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedPullToCenter;                                 // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         BoxCollision;                                      // 0x5B0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       ArrowDirectionComponent;                           // 0x5B8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ADisplacementZone* GetDefaultObj();

};

// 0x38 (0x2F0 - 0x2B8)
// Class OakGame.DisplayedNotificationWidget
class UDisplayedNotificationWidget : public UGbxUserWidget
{
public:
	class UTextBlock*                            MessageText;                                       // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDisplayedEvent;                                  // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnHiddenEvent;                                     // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  HideCompleteEvent;                                 // 0x2E0(0x10)(ZeroConstructor, InstancedReference, Protected, BlueprintCallable, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDisplayedNotificationWidget* GetDefaultObj();

	void SetMessageText(class FText* Text);
	void OnHideComplete__DelegateSignature();
	void OnHidden__DelegateSignature();
	void OnDisplayed__DelegateSignature();
	void Hidden();
	void Displayed();
};

// 0x48 (0x1C0 - 0x178)
// Class OakGame.DodgeTriggerZoneComponent
class UDodgeTriggerZoneComponent : public UActorComponent
{
public:
	float                                        MinVelocityToDodge;                                // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVelocityToScale;                                // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DodgeLength;                                       // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Radius;                                            // 0x184(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxScale;                                          // 0x188(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartOffsetX;                                      // 0x18C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OffsetZ;                                           // 0x190(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_457E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        PreviousInZoneActors;                              // 0x198(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_4580[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDodgeTriggerZoneComponent* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class OakGame.DownloadableEntitlementCategoryData
class UDownloadableEntitlementCategoryData : public UDataAsset
{
public:
	class FText                                  CategoryName;                                      // 0x30(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  CategoryDescription;                               // 0x48(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDownloadableEntitlementCategoryData* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.DownloadableEntitlementPartData
class UDownloadableEntitlementPartData : public UDataAsset
{
public:
	uint8                                        Pad_45DB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 AssetGuid;                                         // 0x38(0x10)(DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDownloadableEntitlementPartData* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class OakGame.DownloadableEntitlementPartData_Currency
class UDownloadableEntitlementPartData_Currency : public UDownloadableEntitlementPartData
{
public:
	class UInventoryCategoryData*                CurrencyCategory;                                  // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDownloadableEntitlementPartData_Currency* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class OakGame.DownloadableEntitlementSourceData
class UDownloadableEntitlementSourceData : public UDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FName                                  SourceName;                                        // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDownloadableEntitlementSourceData*    ParentSourceData;                                  // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDownloadableEntitlementSourceData* GetDefaultObj();

};

// 0x388 (0x410 - 0x88)
// Class OakGame.DownloadableExpansionData
class UDownloadableExpansionData : public UDownloadableContentData
{
public:
	TArray<struct FDlcLevelTravelPair>           LevelTravelPairs;                                  // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFastTravelStationData*                GatewayStationData;                                // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapListData*                      ZoneMapList;                                       // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLevelTravelDataListStationPatch> LevelTravelDataLists;                              // 0xA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UMission>                InitialMission;                                    // 0xB8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DescriptionForStartDLC;                            // 0xE0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class URegionManagerData*                    RegionManagerData;                                 // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UChallengeList*>                ChallengeLists;                                    // 0x100(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UGameStatList*>                 GameStatLists;                                     // 0x110(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UGameStatData*> KillStatMap;                                       // 0x120(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UOakLoadingScreenExpansionData*        LoadingScreenData;                                 // 0x170(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMayhemOverrideDataAsset*>      MayhemModeTwoData;                                 // 0x178(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             EnvironmentEncounterTable;                         // 0x188(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UChallengeCategoryData*>        ProgressChallengeCategories;                       // 0x1B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FChallengeFilterType>          AvailableZoneChallengeFilters;                     // 0x1C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FChallengeFilterType>          AvailableGalaxyChallengeFilters;                   // 0x1D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UGbxCustomizationData*>         CrazyEarlCustomizations;                           // 0x1E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLevelledSaveGameData                 LevelledSaveGameData;                              // 0x1F0(0xB0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAdditionalZoneMapData*>        ZoneMapAdditions;                                  // 0x2A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UVaultCardGeneralData*                 GlobalVaultCardData;                               // 0x2B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UOakPlayerAbilityTreeBranchData>> UnlockedSkillBranches;                             // 0x2B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FOverworldTravelStationExpansionData> OverworldTravelStationExpansions;                  // 0x2C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EDLCCurrencyType, struct FCurrencyInfo> Currencies;                                        // 0x2D8(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FOakMapPatchData>              MapPatches;                                        // 0x328(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAdditionalPlayerClass>        AdditionalPlayerClasses;                           // 0x338(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UPlayerStandInDataPatch*               GlobalPlayerStandInPatch;                          // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ReplaceStandInDataTable;                           // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakMultiClassNamingAttributePair> MultiClassNamingArrayExpansions;                   // 0x358(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          LegArmorVisibleParts;                              // 0x368(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCreationAspectOfTheVaultExpansionData> AspectOfTheVaultExpansions;                        // 0x378(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDataTable*                            AdditionalPassiveAbilityBuffTable;                 // 0x388(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                       LicensedCustomizations;                            // 0x390(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, struct FSpawnedLTSSpawnLocations> SpawnedTravelStationTransforms;                    // 0x3A0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomizationCustomFloatEntry> AdditionalPlayerCustomizationCustomFloatEntryData; // 0x3F0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomizationMorphTargetSetExpansionData> AdditionalCustomizationMorphTargetData;            // 0x400(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDownloadableExpansionData* GetDefaultObj();

};

// 0x58 (0x4B0 - 0x458)
// Class OakGame.DuelArena
class ADuelArena : public AActor
{
public:
	float                                        ArenaSetupTime;                                    // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArenaTakeDownTime;                                 // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerDuelArenaState>         DuelingPlayers;                                    // 0x460(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UDuelGlobals*                          DuelGlobals;                                       // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADuelManager*                          DuelManager;                                       // 0x478(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4776[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EActiveDuelStatus                 DuelStatus;                                        // 0x484(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4778[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimerStartTime;                                    // 0x488(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumParticipants;                                   // 0x48C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDuelMode                         DuelMode;                                          // 0x490(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_477F[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADuelArena* GetDefaultObj();

	void K2_InitDuelArena();
	float GetTimeBeforeDuelStarts();
	float GetMaxDuelLength();
	float GetMaxArenaRadius();
	float GetDuelTimeRemaining();
};

// 0x118 (0x148 - 0x30)
// Class OakGame.DuelGlobals
class UDuelGlobals : public UGbxDataAsset
{
public:
	TSoftClassPtr<class ADuelArena>              DuelArenaBlueprint;                                // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ADuelTotem>              DuelTotemBlueprint;                                // 0x58(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                DuelInitiateAction;                                // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             DamageSourceForInitiatingDuels;                    // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDuelModeSettings                     Settings_OnFoot;                                   // 0x90(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FDuelModeSettings                     Settings_Vehicle;                                  // 0xC0(0x30)(Edit, NativeAccessSpecifierPublic)
	float                                        ReviveDownedPlayerDelay;                           // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_479C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDuelTeamGroup>                DuelTeams;                                         // 0xF8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  EnterVehicleDuelErrorMessage;                      // 0x108(0x18)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          WinStat;                                           // 0x120(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDuelGlobals* GetDefaultObj();

};

// 0xC8 (0x520 - 0x458)
// Class OakGame.DuelManager
class ADuelManager : public AActor
{
public:
	TArray<class ADuelArena*>                    ActiveDuelArenas;                                  // 0x458(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FActiveDuelState                      ActiveDuels[0x2];                                  // 0x468(0xA0)(Transient, NativeAccessSpecifierPrivate)
	TArray<class ADuelTotem*>                    PotentialDuelTotems;                               // 0x508(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UDuelGlobals*                          DuelGlobals;                                       // 0x518(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ADuelManager* GetDefaultObj();

	void MulticastUnacceptedDuel(class AOakCharacter_Player* Player, class AOakCharacter_Player* DuelInstigator);
	void MulticastDuelWon(TArray<class AOakCharacter_Player*>& Winners, enum class EDuelClassification Classification);
	void MulticastDuelTimedOut(class AOakCharacter_Player* Player);
	void MulticastDuelStarted(TArray<class AOakCharacter_Player*>& Participants);
	void MulticastDuelSetupStarted(TArray<class AOakCharacter_Player*>& Participants);
	void MulticastDuelLost(class AOakCharacter_Player* Player, enum class EDuelLoseReason LoseReason, enum class EDuelClassification Classification);
	void MulticastDuelLengthElapsed(class AOakCharacter_Player* Player);
	void MulticastDuelInitiated(class AOakCharacter_Player* Player, class AOakCharacter_Player* TargetedPlayer);
	void MulticastDuelCanceled(class AOakCharacter_Player* Player);
	void MulticastAcceptedDuel(class AOakCharacter_Player* Player, class AOakCharacter_Player* DuelInstigator);
};

// 0x50 (0x5D8 - 0x588)
// Class OakGame.DuelTotem
class ADuelTotem : public AInteractiveObject
{
public:
	float                                        FailsafeDestroyDelay;                              // 0x588(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_48A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUsableComponent*                      UsableComponent;                                   // 0x590(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter_Player*                  PlayerInstigator;                                  // 0x598(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumParticipants;                                   // 0x5A0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_48A9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakCharacter_Player*>          AcceptedPlayers;                                   // 0x5A8(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	float                                        TimerStartTime;                                    // 0x5B8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_48AD[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EDuelTotemDestroyReason           DestroyReason;                                     // 0x5C8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPotentialDuelState               DuelState;                                         // 0x5C9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDuelMode                         DuelMode;                                          // 0x5CA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_48B2[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDuelGlobals*                          DuelGlobals;                                       // 0x5D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ADuelTotem* GetDefaultObj();

	void OnRep_NumParticipants();
	void OnRep_DuelState();
	void OnRep_DestroyReason();
	void OnRep_AcceptedPlayers();
	void OnNumParticipantsChanged(int32 NewNumParticipants);
	void OnDuelStateChanged(enum class EPotentialDuelState NewDuelState);
	void OnDestroyTotem(enum class EDuelTotemDestroyReason TheDestroyReason);
	void OnAcceptedPlayersChanged();
	void HandleUsedEvent(struct FUseEvent& UseEvent);
	float GetTimeBeforeTimeout();
	float GetTimeBeforeDuelStarts();
	class AOakCharacter_Player* GetPlayerInstigator();
	int32 GetNumParticipants();
	TArray<class AOakCharacter_Player*> GetAcceptedPlayers();
};

// 0x20 (0x540 - 0x520)
// Class OakGame.DynamicEncounterRoomBase
class ADynamicEncounterRoomBase : public ADynamicRoomBase
{
public:
	class UBoxComponent*                         BoxComponent;                                      // 0x520(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxExtent;                                         // 0x528(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_48D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AStaticWorldBounds*                    RoomBounds;                                        // 0x538(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ADynamicEncounterRoomBase* GetDefaultObj();

	void GenerateMBPBounds(bool bUseRoomBounds);
};

// 0xA0 (0x3D0 - 0x330)
// Class OakGame.EchoLogData
class UEchoLogData : public UInventoryData_Simple
{
public:
	struct FDialogTimeSlotReference              Dialog;                                            // 0x330(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	enum class EEchoLogBlockedStartMethod        BlockedStartMethod;                                // 0x370(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_48E6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionEventReference                InitialPlayMissionEvent;                           // 0x378(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAllowPlayingFromInWorldSpeaker;                   // 0x388(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEchoLogDisplayCategory           DisplayCategory;                                   // 0x389(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_48EA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UZoneMapData>           ContainedZone;                                     // 0x390(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AreaName;                                          // 0x3B8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldShowInUI;                                   // 0x3C0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_48EF[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEchoLogData* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class OakGame.EchoManager
class UEchoManager : public UObject
{
public:
	uint8                                        Pad_48FE[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FEchoInfo>                     CurrentEchoInfoStack;                              // 0xA8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEchoManager* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class OakGame.ElementalEffectCollectionData
class UElementalEffectCollectionData : public UEffectCollectionData
{
public:
	uint8                                        bHasElementalEffect : 1;                           // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasElementalAudio : 1;                            // Mask: 0x2, PropSize: 0x10x28(0x1)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFallbackToDefault : 1;                            // Mask: 0x4, PropSize: 0x10x28(0x1)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_FE : 5;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_4916[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ElementalEffect[0x6];                              // 0x30(0x30)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           ElementalAudio[0x6];                               // 0x60(0x30)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UElementalEffectCollectionData* GetDefaultObj();

};

// 0x568 (0x6E0 - 0x178)
// Class OakGame.ElementalInteractionComponent
class UElementalInteractionComponent : public UActorComponent
{
public:
	uint8                                        Pad_4A28[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EElementalInteractionMode         InteractionMode;                                   // 0x184(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreDamage;                                     // 0x185(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A2C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UElementalInteractionData*             NaturalState;                                      // 0x188(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSupportedElementalInteractionData> SupportedStates;                                   // 0x190(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UElementalInteractionData*             InitialState;                                      // 0x1A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInitiallySource;                                // 0x1A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A33[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialSourceDuration;                             // 0x1AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A37[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnElementalInteractionStarted;                     // 0x1F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A39[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AElementalInteractionManager*          ElementalInteractionManager;                       // 0x220(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AController*                           InstigatorController;                              // 0x228(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A3F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UElementalInteractionData*             CurrentState;                                      // 0x238(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSource;                                         // 0x240(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A44[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UElementalInteractionData*             PendingState;                                      // 0x248(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalInteractionComponent*        ClosestSourceComponent;                            // 0x250(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize                   PendingStateHitLocation;                           // 0x258(0xC)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TransitionPercent;                                 // 0x264(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDamagePrimitives;                              // 0x268(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A4C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          DamagePrimitiveNames;                              // 0x270(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           DamagePrimitives;                                  // 0x280(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseInteractionPrimitives;                         // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A4F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          InteractionPrimitiveNames;                         // 0x298(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           InteractionPrimitives;                             // 0x2A8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bInheritTeamFromOwner;                             // 0x2B8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A51[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeam*                                 Team;                                              // 0x2C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttitudeDamageRules                  AttitudeDamageRules;                               // 0x2C8(0x4)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bForceDamageToPlayerControlled;                    // 0x2CC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FElementalInteractionActorReference, struct FElementalInteractionDamageOverlapData> DamageOverlaps;                                    // 0x2D0(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A57[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UElementalInteractionComponent*> IgnoredElementalInteractionComponents;             // 0x328(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FElementalInteractionComponentReference> NegateDamageElementalInteractionComponents;        // 0x338(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class UElementalInteractionComponent*, int32> OtherElementalInteractionComponents;               // 0x348(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<class UElementalInteractionComponent*, struct FDeferredElementalInteractionOverlapData> DeferredOverlaps;                                  // 0x398(0x50)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FElementalDamageTriggeredInteractionData DamageTriggeredInteraction;                        // 0x3E8(0x28)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A60[0x254];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasElementalEffects;                              // 0x664(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A62[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          EffectPrimitiveNames;                              // 0x668(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           EffectPrimitives;                                  // 0x678(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UWwiseAudioComponent*                  EffectAudioComponent;                              // 0x688(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          EffectSizePrimitiveNames;                          // 0x690(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bCustomEffectSize;                                 // 0x6A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A6F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EffectSize;                                        // 0x6A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A71[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UElementalInteractionComponent* GetDefaultObj();

	void SetElementalInteractionMode(enum class EElementalInteractionMode NewInteractionMode);
	void SetElementalInteractionConfiguration(class UElementalInteractionConfigurationData* ElementalInteractionConfigurationData);
	void OnRep_PendingStateData();
	void OnRep_PendingState();
	void OnRep_CurrentState();
	void OnEndInteractionOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEndDamageOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginInteractionOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBeginDamageOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void NotifySourceDurationEnded();
	void K2_BeginInteraction(class UElementalInteractionData* NewState, bool bInIsSource, float SourceDuration, class AController* NewInstigatorController);
	bool IsInElementalState(class UElementalInteractionData* State);
	void ComputeEffectSize(enum class EElementalEffectSizeComputationType EffectSizeComputationType, float EffectSizeScale);
};

// 0x30 (0x60 - 0x30)
// Class OakGame.ElementalInteractionConfigurationData
class UElementalInteractionConfigurationData : public UGbxDataAsset
{
public:
	enum class EElementalInteractionMode         InteractionMode;                                   // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreDamage;                                     // 0x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4A9A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UElementalInteractionData*             NaturalState;                                      // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSupportedElementalInteractionData> SupportedStates;                                   // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UElementalInteractionData*             InitialState;                                      // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInitiallySource;                                // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4AA1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialSourceDuration;                             // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UElementalInteractionConfigurationData* GetDefaultObj();

};

// 0x140 (0x170 - 0x30)
// Class OakGame.ElementalInteractionData
class UElementalInteractionData : public UGbxDataAsset
{
public:
	enum class EElementalInteractionSourceMode   SourceMode;                                        // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4AAD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxDamageType>            InitiatingDamageType;                              // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          DamageAmount;                                      // 0x48(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        InitialDamageDelay;                                // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageInterval;                                    // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseTargetAsDamageEvaluationContext;               // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4AB6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageTriggeredInteractionChance;                  // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageTriggeredDuration;                           // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4AB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FElementalInteractionTransitionData> Transitions;                                       // 0x98(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          BaseStatusEffectChance;                            // 0xA8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bBaseStatusEffectDamageIsPercent;                  // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4AC1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          BaseStatusEffectDamage;                            // 0xE8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          BaseStatusEffectDuration;                          // 0x120(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UGbxNavArea*                           GbxNavArea;                                        // 0x158(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMimicBasedOnDamageType;                           // 0x160(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4AC8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavArea>                  NavArea;                                           // 0x168(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UElementalInteractionData* GetDefaultObj();

};

// 0x0 (0x170 - 0x170)
// Class OakGame.ElementalInteractionData_Generated
class UElementalInteractionData_Generated : public UElementalInteractionData
{
public:

	static class UClass* StaticClass();
	static class UElementalInteractionData_Generated* GetDefaultObj();

};

// 0x138 (0x590 - 0x458)
// Class OakGame.ElementalInteractionManager
class AElementalInteractionManager : public AActor
{
public:
	uint8                                        Pad_4ADB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FElementalInteractionManagerPostPhysicsTickFunction PostPhysicsTickFunction;                           // 0x468(0x58)(Transient, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UDamageSource>             DamageSource;                                      // 0x4C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FElementalInteractionActorReference, struct FActorElementalDamageData> ActorsTakingDamage;                                // 0x4C8(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FElementalInteractionComponentReference> ComponentsNeedingSourceUpdate;                     // 0x518(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FElementalInteractionComponentReference> ComponentsNeedingTransitionUpdate;                 // 0x528(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class ALargeLiquidBody*>              LargeLiquidBodies;                                 // 0x538(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AElementalPuddle*>              TickingPuddles;                                    // 0x548(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AElementalPuddle*>              PendingPuddleCollisionUpdates;                     // 0x558(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ASplat*>                        TickingSplats;                                     // 0x568(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_4AEE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      MaterialInstanceDynamicPool;                       // 0x580(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AElementalInteractionManager* GetDefaultObj();

};

// 0x30 (0x720 - 0x6F0)
// Class OakGame.ElementalPuddleOverlapCollisonComponent
class UElementalPuddleOverlapCollisonComponent : public UPrimitiveComponent
{
public:
	struct FColor                                ProbeColor;                                        // 0x6F0(0x4)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B01[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       ProbePoints;                                       // 0x6F8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        ProbeRadius;                                       // 0x708(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B07[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBodySetup*                            BodySetup;                                         // 0x710(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B08[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UElementalPuddleOverlapCollisonComponent* GetDefaultObj();

};

// 0x1C0 (0x618 - 0x458)
// Class OakGame.ElementalPuddle
class AElementalPuddle : public AActor
{
public:
	uint8                                        Pad_4B5D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AElementalInteractionManager*          ElementalInteractionManager;                       // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FProjectedMeshOptions                 PuddleCollisionOptions;                            // 0x468(0x48)(Protected, NativeAccessSpecifierProtected)
	class UProceduralMeshComponent*              PuddleCollision;                                   // 0x4B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B60[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PuddleCollisionSurfaceArea;                        // 0x4C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PuddleOverlapProbeSphereRadius;                    // 0x4C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B63[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UElementalPuddleOverlapCollisonComponent* PuddleOverlapCollision;                            // 0x4D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalInteractionComponent*        ElementalInteraction;                              // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBalanceStateComponent*                BalanceState;                                      // 0x4E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   VisualComponent;                                   // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalPuddleConfigurationData*     ElementalPuddleConfiguration;                      // 0x4F0(0x8)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPuddleState                      PuddleState;                                       // 0x4F8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B6D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseAudioComponent*                  AudioComponent;                                    // 0x500(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B6F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentOpacity;                                    // 0x510(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentScale;                                      // 0x514(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             Scale2D;                                           // 0x518(0x8)(Edit, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideColor;                                    // 0x520(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B75[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Color;                                             // 0x524(0x10)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorHighlights;                                   // 0x534(0x10)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnableRipples : 1;                                // Mask: 0x1, PropSize: 0x10x544(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideNormalStrength : 1;                       // Mask: 0x2, PropSize: 0x10x544(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideMovementSpeed : 1;                        // Mask: 0x4, PropSize: 0x10x544(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_FF : 5;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_4B7E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RipplesStrength;                                   // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RipplesSize;                                       // 0x54C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RipplesSpeed;                                      // 0x550(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NormalStrength;                                    // 0x554(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementSpeed;                                     // 0x558(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWasSpawned;                                       // 0x55C(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B84[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideTraceDistance;                             // 0x560(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnTransitionTime;                               // 0x564(0x4)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialOpacity;                                    // 0x568(0x4)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialScale;                                      // 0x56C(0x4)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullSizeOpacity;                                   // 0x570(0x4)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullSizeScale;                                     // 0x574(0x4)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifeTime;                                          // 0x578(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CleanUpTransitionTime;                             // 0x57C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CleanUpOpacity;                                    // 0x580(0x4)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CleanUpScale;                                      // 0x584(0x4)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCleanUpDuration;                         // 0x588(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4B90[0x7C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHavokNavObstacle*                     NavObstacle;                                       // 0x608(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleSystem;                                    // 0x610(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AElementalPuddle* GetDefaultObj();

	class AElementalPuddle* SpawnElementalPuddle(class UObject* WorldContextObject, TSubclassOf<class AElementalPuddle> PuddleClass, const struct FTransform& SpawnTransform, class UElementalPuddleConfigurationData* PuddleConfiguration, class UElementalPuddleSpawnData* PuddleSpawnData, float AutoAlignTraceDistance, class AActor* SpawnOwner, float OverrideFullSizeScale, class APawn* OverrideInstigator);
	class AElementalPuddle* SimpleSpawnElementalPuddle(class UObject* WorldContextObject, class UElementalPuddleSimpleSpawnData* SimpleSpawnData, const struct FTransform& SpawnTransform, class AActor* SpawnOwner, class APawn* OverrideInstigator);
	void OnRep_CleanUpDuration();
	void K2_CleanUpPuddle(float CleanUpTime);
};

// 0x10 (0x628 - 0x618)
// Class OakGame.ElementalPuddle_Decal
class AElementalPuddle_Decal : public AElementalPuddle
{
public:
	class UDecalComponent*                       PuddleDecal;                                       // 0x618(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4C9F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AElementalPuddle_Decal* GetDefaultObj();

};

// 0x10 (0x628 - 0x618)
// Class OakGame.ElementalPuddle_LargeLiquidBody
class AElementalPuddle_LargeLiquidBody : public AElementalPuddle
{
public:
	class UProceduralMeshComponent*              PuddleMesh;                                        // 0x618(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4CAB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AElementalPuddle_LargeLiquidBody* GetDefaultObj();

};

// 0x10 (0x628 - 0x618)
// Class OakGame.ElementalPuddle_Mesh
class AElementalPuddle_Mesh : public AElementalPuddle
{
public:
	class UStaticMeshComponent*                  PuddleMesh;                                        // 0x618(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSquarePuddle : 1;                                 // Mask: 0x1, PropSize: 0x10x620(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bMaskEdges : 1;                                    // Mask: 0x2, PropSize: 0x10x620(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideDepthFade : 1;                            // Mask: 0x4, PropSize: 0x10x620(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_100 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_4CB9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DepthFade;                                         // 0x624(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AElementalPuddle_Mesh* GetDefaultObj();

};

// 0xE8 (0x118 - 0x30)
// Class OakGame.ElementalPuddleConfigurationData
class UElementalPuddleConfigurationData : public UGbxDataAsset
{
public:
	class UElementalInteractionConfigurationData* ElementalInteractionConfiguration;                 // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ElementalEffectSizeScale;                          // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4CC5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UElementalInteractionData*, struct FElementalPuddleTransitionConfigurationData> ElementalInteractionTransitionConfigurations;      // 0x40(0x50)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PuddleDecalMaterial;                               // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PuddleDecalMaterial_Ripples;                       // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PuddleMeshMaterial;                                // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PuddleMeshMaterial_Ripples;                        // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    LargeLiquidBodySurfaceMaterial;                    // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          Color;                                             // 0xB8(0x10)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorHighlights;                                   // 0xC8(0x10)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NormalStrength;                                    // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementSpeed;                                     // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DepthFade;                                         // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4CD7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           NaturalStateAudioLoop;                             // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ParticleSystem;                                    // 0xF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParticleSystemSurfaceAreaScalar;                   // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4CDB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          NaturalStateEmitterNames;                          // 0x100(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                     NaturalStatePhysMat;                               // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UElementalPuddleConfigurationData* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class OakGame.ElementalPuddleSimpleSpawnData
class UElementalPuddleSimpleSpawnData : public UGbxDataAsset
{
public:
	TSubclassOf<class AElementalPuddle>          PuddleClass;                                       // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalPuddleConfigurationData*     PuddleConfiguration;                               // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalPuddleSpawnData*             PuddleSpawnData;                                   // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoAlignTraceDistance;                            // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverrideFullSizeScale;                             // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UElementalPuddleSimpleSpawnData* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class OakGame.ElementalPuddleSpawnData
class UElementalPuddleSpawnData : public UGbxDataAsset
{
public:
	float                                        SpawnTransitionTime;                               // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialOpacity;                                    // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialScale;                                      // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullSizeOpacity;                                   // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullSizeScale;                                     // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifeTime;                                          // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CleanUpTransitionTime;                             // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CleanUpOpacity;                                    // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CleanUpScale;                                      // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GroundingDecalCleanUpDelay;                        // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UElementalPuddleSpawnData* GetDefaultObj();

};

// 0x1D8 (0x630 - 0x458)
// Class OakGame.Elevator
class AElevator : public AActor
{
public:
	uint8                                        Pad_4E0A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  ElevatorMesh;                                      // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  Floor1Position;                                    // 0x468(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  Floor2Position;                                    // 0x470(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTimelineComponent*                    ElevatorMovementTimeline;                          // 0x478(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         CrushPlayerCeilingTrigger;                         // 0x480(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxNavMeshSectionComponent*           NavMeshSection;                                    // 0x488(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      ElevatorMovementSpline;                            // 0x490(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceBaseBoundedCharacters;                       // 0x498(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCylindricalElevatorBounds;                        // 0x499(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFastAttachedMoveBasedCharacters;                  // 0x49A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E0F[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         ElevatorBounds;                                    // 0x4A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         ElevatorMovementBounds;                            // 0x4A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           FloatCurve;                                        // 0x4B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwitchDelayTime;                                   // 0x4B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartAtFloor2;                                    // 0x4BC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseTimeForTravel;                                 // 0x4BD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E13[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ElevatorSpeed;                                     // 0x4C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElevatorTravelTime;                                // 0x4C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AInteractiveObject*>            InternalButtons;                                   // 0x4C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class AInteractiveObject*>            Floor1RecallButtons;                               // 0x4D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class AInteractiveObject*>            Floor2RecallButtons;                               // 0x4E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StartedMovingAudio;                                // 0x4F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StoppedMovingAudio;                                // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         StartMovingFeedback;                               // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         StopMovingFeedback;                                // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCrushPlayersUnderElevator;                        // 0x518(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCrushPlayersAgainstCeiling;                       // 0x519(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E20[0x36];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimelinePlayRate;                                  // 0x550(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RepOverrideTimelinePlayRate;                       // 0x554(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Floor1Location;                                    // 0x558(0xC)(Net, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Floor2Location;                                    // 0x564(0xC)(Net, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FQuat                                 Floor1Rotation;                                    // 0x570(0x10)(Net, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FQuat                                 Floor2Rotation;                                    // 0x580(0x10)(Net, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                        DesiredFloor;                                      // 0x590(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStoppedBetweenFloor;                              // 0x594(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4E28[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentPercentage;                                 // 0x598(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasEverMoved;                                     // 0x59C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4E2B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerCrushedAgainstCeiling;                     // 0x5A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnElevatorStartsMoving;                            // 0x5B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnElevatorReachedFloor;                            // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnElevatorReachedFloor1;                           // 0x5D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnElevatorReachedFloor2;                           // 0x5E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<class AOakCharacter*>                 OverlappingCharacters;                             // 0x5F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AOakCharacter*>                 LastUpdateBoundedCharacters;                       // 0x600(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_4E2E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         MissionConditionGoToFloor2;                        // 0x618(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         MissionConditionGoToFloor1;                        // 0x620(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         MissionConditionLockSwitches;                      // 0x628(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AElevator* GetDefaultObj();

	void TimelineFinishedCallback();
	void TimelineCallback(float Val);
	void TeleportFloor2(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	void TeleportFloor1(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	void SetFloor2Rotation(const struct FRotator& NewRotation);
	void SetFloor2Location(const struct FVector& NewLocation);
	void SetFloor1Rotation(const struct FRotator& NewRotation);
	void SetFloor1Location(const struct FVector& NewLocation);
	void OnRep_StoppedBetweenFloor();
	void OnRep_Floor2Rotation();
	void OnRep_Floor2Location();
	void OnRep_Floor1Rotation();
	void OnRep_Floor1Location();
	void OnRep_DesiredFloor();
	void OnRep_CurrentPercentage();
	void OnPlayerCrushed(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnEndBoundsOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginBoundsOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	struct FVector GetFloor2Location();
	struct FVector GetFloor1Location();
	void ElevatorTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void ElevatorStopMovement();
	void ElevatorStartsMoving();
	void ElevatorReachedFloor2();
	void ElevatorReachedFloor1();
	void ElevatorReachedFloor();
	void ElevatorMoveToFloor2(float OverrideSpeed);
	void ElevatorMoveToFloor1(float OverrideSpeed);
	void ElevatorInternalButtonPressed();
	void ElevatorFloor2RecallPressed();
	void ElevatorFloor1RecallPressed();
	void ElevatorButtonPressed(class AInteractiveObject* PressedButton);
	void ChangeElevatorTravelTime(float NewTime);
	void ChangeElevatorSpeed(float NewSpeed);
};

// 0x0 (0x458 - 0x458)
// Class OakGame.EliteRoomManager
class AEliteRoomManager : public AActor
{
public:

	static class UClass* StaticClass();
	static class AEliteRoomManager* GetDefaultObj();

	void Initialize();
};

// 0x7B8 (0x12F0 - 0xB38)
// Class OakGame.OakVehicleAnimInstance
class UOakVehicleAnimInstance : public UVehicleAnimInstance
{
public:
	class AOakVehicle*                           OakVehicle;                                        // 0xB38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWheeledVehicleMovementComponentNW*    WheeledComponent;                                  // 0xB40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVehicleHoverComponent*                HoverComponent;                                    // 0xB48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GearShiftSlotName;                                 // 0xB50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     GearShiftUp;                                       // 0xB58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     GearShiftDown;                                     // 0xB60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E45[0x788];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakVehicleAnimInstance* GetDefaultObj();

	void PlayGearShiftAnim(int32 Gear, bool bIsUpShifting);
	void OwnerPostBeginPlay();
};

// 0x840 (0x1B30 - 0x12F0)
// Class OakGame.EmperorVehicleAnimInstance
class UEmperorVehicleAnimInstance : public UOakVehicleAnimInstance
{
public:
	bool                                         bHasHeavyWheels;                                   // 0x12F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasThreads;                                       // 0x12F1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E4B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              F_L_Threads_MID;                                   // 0x12F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              F_R_Threads_MID;                                   // 0x1300(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              R_L_Threads_MID;                                   // 0x1308(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              R_R_Threads_MID;                                   // 0x1310(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThreadMaterialAnimDivider;                         // 0x1318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E51[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ThreadUVOffsetParam;                               // 0x1320(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HellFireRecoilOffset;                              // 0x1328(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasGunnerSeatOccupant;                            // 0x1334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasDriverSeatOccupant;                            // 0x1335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasLeftTurretOccupant;                            // 0x1336(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasRightTurretOccupant;                           // 0x1337(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasTurretUser;                                    // 0x1338(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDroneDoorOpen;                                  // 0x1339(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDroneOutside;                                   // 0x133A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E59[0x7F5];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEmperorVehicleAnimInstance* GetDefaultObj();

};

// 0x0 (0x680 - 0x680)
// Class OakGame.EnchantmentVendingMachine
class AEnchantmentVendingMachine : public AAdvancedInteractiveObject
{
public:

	static class UClass* StaticClass();
	static class AEnchantmentVendingMachine* GetDefaultObj();

	void OnPlayerReRolledInventory(class AOakPlayerController* Player, class AActor* OldInventoryActor, class AActor* NewInventoryActor);
};

// 0x18 (0x470 - 0x458)
// Class OakGame.EncounterCleanupRegion
class AEncounterCleanupRegion : public AActor
{
public:
	class UBoxComponent*                         BoxComponent;                                      // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxExtent;                                         // 0x460(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E75[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AEncounterCleanupRegion* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.EncounterContext
class UEncounterContext : public UObject
{
public:
	uint8                                        Pad_4E7B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEncounterContext* GetDefaultObj();

};

// 0xE0 (0x110 - 0x30)
// Class OakGame.EncounterContext_Overworld
class UEncounterContext_Overworld : public UEncounterContext
{
public:
	class URandomEncounterAreaComponent*         REArea;                                            // 0x30(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnTerritory;                                    // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASpawner*                              UseSpawner;                                        // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnPointComponent*                  UseSpawnPoint;                                     // 0x48(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UEnvQueryInstanceBlueprintWrapper*, struct FFoundGoodOWContextLocationContainer> PendingLocationSearches;                           // 0x50(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TMap<int32, struct FOWContextSpawnedAIContainer> PendingSpawnRequests;                              // 0xA0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_4E93[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEncounterContext_Overworld* GetDefaultObj();

	void OnLocationSearchEQSQueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, enum class EEnvQueryStatus QueryStatus);
};

// 0x0 (0x78 - 0x78)
// Class OakGame.RandomEncounterEnvQueryInstanceWrapper
class URandomEncounterEnvQueryInstanceWrapper : public UEnvQueryInstanceBlueprintWrapper
{
public:

	static class UClass* StaticClass();
	static class URandomEncounterEnvQueryInstanceWrapper* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class OakGame.DaffodilEncounterEnvironment
class UDaffodilEncounterEnvironment : public UObject
{
public:
	class UDaffodilEncounterRunner*              Runner;                                            // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TravellingToEncounter;                             // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4EA2[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDaffodilEncounterEnvironment* GetDefaultObj();

};

// 0xA8 (0xF0 - 0x48)
// Class OakGame.DaffodilEncounterEnvironment_Overworld
class UDaffodilEncounterEnvironment_Overworld : public UDaffodilEncounterEnvironment
{
public:
	TMap<int32, struct FOverworldEncounterRequest> EncounterRequests;                                 // 0x48(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	class URandomEncounterAreaComponent*         REArea;                                            // 0x98(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnTerritory;                                    // 0xA0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASpawner*                              UseSpawner;                                        // 0xA8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnPointComponent*                  UseSpawnPoint;                                     // 0xB0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4EAD[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class UObject>>        PreserveActorsList;                                // 0xE0(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDaffodilEncounterEnvironment_Overworld* GetDefaultObj();

};

// 0x78 (0xC0 - 0x48)
// Class OakGame.DaffodilEncounterEnvironment_Direct
class UDaffodilEncounterEnvironment_Direct : public UDaffodilEncounterEnvironment
{
public:
	TArray<struct FTransform>                    Transforms;                                        // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	TArray<class ADynamicRoomBase*>              RoomBases;                                         // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	int32                                        CurrentTransform;                                  // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4EB4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class UDaffodilEncounter*>       Encounters;                                        // 0x70(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDaffodilEncounterEnvironment_Direct* GetDefaultObj();

};

// 0x90 (0xD8 - 0x48)
// Class OakGame.EncounterEnvironment_Endless
class UEncounterEnvironment_Endless : public UDaffodilEncounterEnvironment
{
public:
	TArray<struct FTransform>                    Transforms;                                        // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	TArray<class ADynamicRoomBase*>              RoomBases;                                         // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	int32                                        CurrentTransform;                                  // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4EB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class UDaffodilEncounter*>       Encounters;                                        // 0x70(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        LastRoomBaseId;                                    // 0xC0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4EBB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class UObject>>        PreserveActorsList;                                // 0xC8(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterEnvironment_Endless* GetDefaultObj();

};

// 0xE8 (0x110 - 0x28)
// Class OakGame.EncounterGameMode
class UEncounterGameMode : public UObject
{
public:
	class FText                                  TakeRewardText;                                    // 0x28(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ClearTheEncounterText;                             // 0x40(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TakePortalText;                                    // 0x58(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  KillTargetText;                                    // 0x70(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  KillTargetCombinedText;                            // 0x88(0x18)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_4EE1[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEncounterCombatModeOptions> ModeOptionsClass;                                  // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCombatEncounter*                      Encounter;                                         // 0xD8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4EE3[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEncounterGameMode* GetDefaultObj();

	void WinEncounter();
	void PreBeginPlay();
	void GetPrimaryLoadContent(TArray<TSoftObjectPtr<class UObject>>* Out_LoadAssets);
	void GetOverworldLoadContent(TArray<TSoftObjectPtr<class UObject>>* Out_OverworldAssets);
	enum class EGameModeType GetGameModeType();
	class UGameInstance* GetGameInstance();
	void BeginPlay();
};

// 0x18 (0x48 - 0x30)
// Class OakGame.EncounterCombatModeOptions
class UEncounterCombatModeOptions : public UGbxDataAsset
{
public:
	uint8                                        Pad_4EEE[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEncounterCombatModeOptions* GetDefaultObj();

};

// 0x18 (0x128 - 0x110)
// Class OakGame.EncounterGameMode_EndlessBoss
class UEncounterGameMode_EndlessBoss : public UEncounterGameMode
{
public:
	class FText                                  KillEndlessBossText;                               // 0x110(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameMode_EndlessBoss* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class OakGame.EncounterGameModeOptions_EndlessBoss
class UEncounterGameModeOptions_EndlessBoss : public UEncounterCombatModeOptions
{
public:

	static class UClass* StaticClass();
	static class UEncounterGameModeOptions_EndlessBoss* GetDefaultObj();

};

// 0x0 (0x110 - 0x110)
// Class OakGame.EncounterGameMode_Intro
class UEncounterGameMode_Intro : public UEncounterGameMode
{
public:

	static class UClass* StaticClass();
	static class UEncounterGameMode_Intro* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class OakGame.EncounterGameModeOptions_Intro
class UEncounterGameModeOptions_Intro : public UEncounterCombatModeOptions
{
public:

	static class UClass* StaticClass();
	static class UEncounterGameModeOptions_Intro* GetDefaultObj();

};

// 0x48 (0x158 - 0x110)
// Class OakGame.EncounterGameMode_KillAllThreeWaves
class UEncounterGameMode_KillAllThreeWaves : public UEncounterGameMode
{
public:
	class UEncounterGameModeOptions_KillAllThreeWaves* Options;                                           // 0x110(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCombatEncounter*                      CurrentEncounter;                                  // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        EnemySpawners;                                     // 0x120(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCompleted;                                        // 0x130(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4F0E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IncreasePointsPerPlayerPercentage;                 // 0x134(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentPoints;                                     // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4F12[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     ExpTypeResolver;                                   // 0x140(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakGameInstance*                      OakGameInstance;                                   // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEndlessdungeon*                       Endlessdungeon;                                    // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameMode_KillAllThreeWaves* GetDefaultObj();

	void OnEnoughEnemyKilled();
	void OnEnemyDied(class AOakCharacter* DeadCharacter);
};

// 0x68 (0xB0 - 0x48)
// Class OakGame.EncounterGameModeOptions_KillAllThreeWaves
class UEncounterGameModeOptions_KillAllThreeWaves : public UEncounterCombatModeOptions
{
public:
	float                                        TotalPoints;                                       // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEncounterArmy                    Army1;                                             // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEncounterArmy                    Army2;                                             // 0x4D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOverworldRepresentationType      OverworldRepresentation;                           // 0x4E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4F25[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USpawnOptionData>       SpawnOption;                                       // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnerStyle_Encounter_Dungeon> SpawnStyle;                                        // 0x78(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        FilterTags;                                        // 0xA0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameModeOptions_KillAllThreeWaves* GetDefaultObj();

};

// 0x40 (0x150 - 0x110)
// Class OakGame.EncounterGameMode_KillAllTwoWaves
class UEncounterGameMode_KillAllTwoWaves : public UEncounterGameMode
{
public:
	class UEncounterGameModeOptions_KillAllTwoWaves* Options;                                           // 0x110(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCombatEncounter*                      CurrentEncounter;                                  // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        EnemySpawners;                                     // 0x120(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCompleted;                                        // 0x130(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4F2F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     ExpTypeResolver;                                   // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakGameInstance*                      OakGameInstance;                                   // 0x140(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEndlessdungeon*                       Endlessdungeon;                                    // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameMode_KillAllTwoWaves* GetDefaultObj();

};

// 0x90 (0xD8 - 0x48)
// Class OakGame.EncounterGameModeOptions_KillAllTwoWaves
class UEncounterGameModeOptions_KillAllTwoWaves : public UEncounterCombatModeOptions
{
public:
	enum class EEncounterArmy                    Army1;                                             // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEncounterArmy                    Army2;                                             // 0x49(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4F36[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USpawnOptionData>       SpawnOption;                                       // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnOptionData>       SpawnOptionNamedBadass;                            // 0x78(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnerStyle_Encounter_Dungeon> SpawnStyle;                                        // 0xA0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        FilterTags;                                        // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameModeOptions_KillAllTwoWaves* GetDefaultObj();

};

// 0x20 (0x130 - 0x110)
// Class OakGame.EncounterGameMode_KillBoss
class UEncounterGameMode_KillBoss : public UEncounterGameMode
{
public:
	class UEncounterGameModeOptions_KillBoss*    Options;                                           // 0x110(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ReachTheArenaText;                                 // 0x118(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameMode_KillBoss* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class OakGame.EncounterGameModeOptions_KillBoss
class UEncounterGameModeOptions_KillBoss : public UEncounterCombatModeOptions
{
public:

	static class UClass* StaticClass();
	static class UEncounterGameModeOptions_KillBoss* GetDefaultObj();

};

// 0x20 (0x130 - 0x110)
// Class OakGame.EncounterGameMode_KillMiniBoss
class UEncounterGameMode_KillMiniBoss : public UEncounterGameMode
{
public:
	class UEncounterGameModeOptions_KillMiniBoss* Options;                                           // 0x110(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  KillAllEnemiesText;                                // 0x118(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameMode_KillMiniBoss* GetDefaultObj();

};

// 0xC8 (0x110 - 0x48)
// Class OakGame.EncounterGameModeOptions_KillMiniBoss
class UEncounterGameModeOptions_KillMiniBoss : public UEncounterCombatModeOptions
{
public:
	TSoftObjectPtr<class USpawnOptionData>       SpawnOptionsMiniBoss;                              // 0x48(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnOptionData>       SpawnOptionsNormal;                                // 0x70(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnerStyle_Den_Dungeon> SpawnStyleNormal;                                  // 0x98(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnOptionData>       SpawnOptionsBadass;                                // 0xC0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnerStyle_Den_Dungeon> SpawnStyleBadass;                                  // 0xE8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameModeOptions_KillMiniBoss* GetDefaultObj();

};

// 0x30 (0x140 - 0x110)
// Class OakGame.EncounterGameMode_LootRoom
class UEncounterGameMode_LootRoom : public UEncounterGameMode
{
public:
	class FText                                  LootRoomText;                                      // 0x110(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LeaveRoomText;                                     // 0x128(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterGameMode_LootRoom* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class OakGame.EncounterGameModeOptions_LootRoom
class UEncounterGameModeOptions_LootRoom : public UEncounterCombatModeOptions
{
public:

	static class UClass* StaticClass();
	static class UEncounterGameModeOptions_LootRoom* GetDefaultObj();

};

// 0x28 (0x480 - 0x458)
// Class OakGame.EncounterPlayerStart
class AEncounterPlayerStart : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x458(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationSpawnPointComponent*     Player1Start;                                      // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationSpawnPointComponent*     Player2Start;                                      // 0x468(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationSpawnPointComponent*     Player3Start;                                      // 0x470(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationSpawnPointComponent*     Player4Start;                                      // 0x478(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AEncounterPlayerStart* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class OakGame.EncounterPlaylist
class UEncounterPlaylist : public UGbxDataAsset
{
public:
	TArray<class UDaffodilEncounterData*>        Encounters;                                        // 0x30(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FMissionEventReference                MissionEventOnAbort;                               // 0x40(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        SeedAltar;                                         // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedChallenge;                                     // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedSpawnOption;                                   // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedPortal;                                        // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedSpawnCrystal;                                  // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedReward;                                        // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedSwitch;                                        // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedBonusObjectives;                               // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedBossPuzzle;                                    // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeedBarrel;                                        // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          DisallowChallenges;                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                SerialNumberString;                                // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterPlaylist* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class OakGame.EncounterPlaylistDataCreator
class UEncounterPlaylistDataCreator : public UGbxDataAsset
{
public:
	enum class EEncounterType                    EncounterType;                                     // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4FAB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRoomDataInfo>                 RoomsInformations;                                 // 0x38(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        IncreaseOPLevelsEveryXRoomOverride;                // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OPLevelScaling;                                    // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEncounterPlaylistDataCreator* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.PlaylistList
class UPlaylistList : public UGbxDataAsset
{
public:
	TArray<TSoftObjectPtr<class UEncounterPlaylist>> Playlists;                                         // 0x30(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlaylistList* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.GameModeType
class UGameModeType : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGameModeType* GetDefaultObj();

	bool CanContainBossPuzzle(enum class EGameModeType ModeType);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.EncounterType
class UEncounterType : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UEncounterType* GetDefaultObj();

	bool IsOverworld(enum class EEncounterType EncounterType);
	bool IsEndlessDungeon(enum class EEncounterType EncounterType);
};

// 0x50 (0x78 - 0x28)
// Class OakGame.DaffodilEncounterRunner
class UDaffodilEncounterRunner : public UObject
{
public:
	class UDaffodilEncounterEnvironment*         Environment;                                       // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5005[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ERunnerCompletionStatus           RunnerState;                                       // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5007[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEncounterLoaded;                                 // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        EncounterRefIndex;                                 // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRunnerEncounterRef                   CurrentEncounter;                                  // 0x6C(0x4)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FRunnerEncounterRef                   PendingEncounter;                                  // 0x70(0x4)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bPlaying;                                          // 0x74(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugStart;                                       // 0x75(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_500D[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDaffodilEncounterRunner* GetDefaultObj();

	void StartPreloadingNext();
	void StartPendingEncounter();
	void PrepInitialEncounter();
	void Play(class URegionData* OverrideRegion);
	void ForgetInitialEncounter();
	void ExitCurrentEncounterAndAdvance(bool bWon);
};

// 0x10 (0x88 - 0x78)
// Class OakGame.EncounterPlaylistRunner
class UEncounterPlaylistRunner : public UDaffodilEncounterRunner
{
public:
	class UEncounterPlaylist*                    Playlist;                                          // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistCursorIndex;                               // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_502C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEncounterPlaylistRunner* GetDefaultObj();

	void Init(TSubclassOf<class UDaffodilEncounterEnvironment> EnvironmentClass, class UEncounterPlaylist* InPlaylist);
};

// 0x10 (0x88 - 0x78)
// Class OakGame.TestCurrentLevelEncounterRunner
class UTestCurrentLevelEncounterRunner : public UDaffodilEncounterRunner
{
public:
	class UDaffodilEncounterData*                EncounterData;                                     // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistCursorIndex;                               // 0x80(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5038[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTestCurrentLevelEncounterRunner* GetDefaultObj();

};

// 0x20 (0x98 - 0x78)
// Class OakGame.RandomEncounterRunner
class URandomEncounterRunner : public UDaffodilEncounterRunner
{
public:
	TArray<class FString>                        EnvironmentFilterTags;                             // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UDaffodilEncounterData*                EncounterData;                                     // 0x88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistCursorIndex;                               // 0x90(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5043[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URandomEncounterRunner* GetDefaultObj();

};

// 0x20 (0x98 - 0x78)
// Class OakGame.EndlessDungeonRunner
class UEndlessDungeonRunner : public UDaffodilEncounterRunner
{
public:
	class UDaffodilEncounterData*                EncounterData;                                     // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEncounterPlaylistDataCreator*         DataCreator;                                       // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistCursorIndex;                               // 0x88(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5052[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEncounterPlaylist*                    Playlist;                                          // 0x90(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEndlessDungeonRunner* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class OakGame.EndGamePartMinGameStageAttributeValueResolver
class UEndGamePartMinGameStageAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FAttributeInitializationData          GameStageToReturnWhenEndGamePartsAreAllowed;       // 0x28(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          GameStageToReturnWhenEndGamePartsAreNotAllowed;    // 0x60(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UGbxCondition*                         OverrideEnableCondition;                           // 0x98(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UEndGamePartMinGameStageAttributeValueResolver* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.OakCondition_IsEndGamePartGuaranteedForLoot
class UOakCondition_IsEndGamePartGuaranteedForLoot : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UOakCondition_IsEndGamePartGuaranteedForLoot* GetDefaultObj();

};

// 0x4D8 (0x930 - 0x458)
// Class OakGame.endlessdungeon
class AEndlessdungeon : public AActor
{
public:
	bool                                         bIsLobbyVisible;                                   // 0x458(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_534C[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFeaturedRunData>              FeaturedRuns;                                      // 0x478(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UEndlessDungeonGlobalsData*            EndlessDungeonGlobalsData;                         // 0x488(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverworldGlobalsData*                 OverworldGlobalsData;                              // 0x490(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyVisibilityChanged;                          // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncountersFinished;                              // 0x4A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerHasControl;                                // 0x4B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UEndlessDungeonRunner*                 Runner;                                            // 0x4C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDaffodilEncounterRunner*              OverworldCurrentRunner;                            // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEndlessDungeonBrain*                  EndlessDungeonBrain;                               // 0x4D8(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDungeonRunInfo                       CurrentRunInfo;                                    // 0x4E0(0x1C8)(Edit, Net, EditConst, RepNotify, NativeAccessSpecifierPublic)
	enum class ERunnerType                       ReplicatedRunnerType;                              // 0x6A8(0x1)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5355[0x47];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDungeonRunChosen;                                // 0x6F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FDungeonRunDef>                DungeonRunDefList;                                 // 0x700(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UDungeonBonusObjective*                CurrentBonusObjective;                             // 0x710(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCombatEncounter*                      CurrentEncounter;                                  // 0x718(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRandomStream                         BonusObjectiveRandomStream;                        // 0x720(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	class UEncounterEnvironment_Endless*         EncounterEnvironmentEndless;                       // 0x728(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCurrentBonusObjectiveCompletedSuccess;           // 0x730(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCurrentBonusObjectiveCompletedFail;              // 0x740(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDebugBossPuzzleComplete;                         // 0x750(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCaliberResultsReceived;                          // 0x760(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFirstRoomBeginPlayEvent;                         // 0x770(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRoomBeginPlayEvent;                              // 0x780(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRoomCompleted;                                   // 0x790(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAfterBeginPlayEvent;                             // 0x7A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLoadScreenHiddenEvent;                           // 0x7B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnemySpawned;                                    // 0x7C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnemyKilled;                                     // 0x7D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnemyDied;                                       // 0x7E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDungeonStatusChanged;                            // 0x7F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUIUpdateNeeded;                                  // 0x800(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FEndlessDungeonWaypoint>       ObjectiveWaypoints;                                // 0x810(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	int32                                        WaypointCurrentId;                                 // 0x820(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5368[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          BonusObjectiveTimerHandle;                         // 0x828(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	struct FTimerHandle                          HideCompletedObjectivesTimerHandle;                // 0x830(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UEndlessEndStats>          EndStatsManagerClass;                              // 0x838(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               CurrentEncounterWorldOffset;                       // 0x840(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_536B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TWeakObjectPtr<class UEncounterPlaylist>, struct FPlaylistAssociatedData> PlaylistToData;                                    // 0x858(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_536D[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakPassiveAbilityBuffAspectData*> BuffAspects;                                       // 0x8F0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FDungeonAttributeModifier>     AttributeModifiers;                                // 0x900(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FDialogScriptPinnedRef                PinnedDialogScript;                                // 0x910(0x10)(Transient, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                       LoadedObjects;                                     // 0x920(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AEndlessdungeon* GetDefaultObj();

	void WantEncounters(bool bWant);
	void UpdateUI();
	void UpdateCursesAndBonusesList();
	void TestPlaylistSerialNumber(class UObject* WorldContextObject, class UEncounterPlaylist* Playlist);
	void StartRun(enum class EDungeonRunType RunType);
	void StartPreloadingNext();
	void StartEncounters(bool bDebug);
	void SpawnBrain();
	void SkipNextRoom();
	void ShowEndlessMissionTracker();
	bool ShouldSpawnPortalToBoss();
	void SetObjectiveActor(class AActor* Actor);
	void SetNextRoomIcon(const class FString& RoomIcon, const class FString& CompletedRoomIcon);
	void SetNextRoomAsElite();
	void SetEncounterBaseActors(const TArray<class ADynamicRoomBase*>& Bases);
	void SetDungeonRunDefList_Deprecated(const TArray<struct FDungeonRunDef>& DungeonRunDef, class AController* User, bool bIncludeFeaturedRuns);
	void SetDungeonRun(class AController* User, class UClass* DungeonRunProviderClass, bool bTutorialRun, bool bIncludeFeaturedRuns);
	void SetDataAssociatedToPlaylist(class UEncounterPlaylist* Playlist, const struct FPlaylistAssociatedData& Data);
	void SetCurrentPlaylist(class UEncounterPlaylist* Playlist);
	void SetChosenRunId(const struct FGuid& ID);
	void SetBossPuzzleNatureCompleted();
	void SetBossPuzzleDesertCompleted();
	void SetBossPuzzleAbyssCompleted();
	void RemoveObjectiveWaypoint(int32 UniqueId);
	void QuitRunTravelDelegate(bool bSuccess);
	void PreloadPassiveAbilityBuffTable(class APawn* Player, class FName Tag);
	void OnRep_Waypoints();
	void OnRep_CurrentRunInfo();
	void OnPostApplyLevelOffset(class ULevel* InLevel, class UWorld* InWorld, struct FVector& InOffset, bool bWorldShift);
	void OnPortalTaken();
	void OnPlayerRespawn(class AController* RespawnedController);
	void OnPlayerLostPawn(class AOakPlayerController* OakPC, class AOakCharacter* OakCharacter);
	void OnPlayerHasControlRoomStart();
	void OnPlayerHasControl__DelegateSignature();
	void OnPlayerGetNewPawn(class AOakPlayerController* OakPC, class AOakCharacter* OakCharacter);
	void OnPlayerAliveUpdated(int32 NbPlayerAlive);
	void OnEndlessLobbyVisibilityChanged();
	void OnEncounterHelperFinished__DelegateSignature(bool bCancelled, bool bWon);
	void OnCurrentBonusObjectiveSuccess();
	void OnCurrentBonusObjectiveFailed();
	void OnCrystalQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void NotifyCancelledRun();
	void MulticastSetDungeonRun(class AController* User, class UClass* DungeonRunProviderClass, TArray<struct FGuid>& FeaturedRunIds, bool bTutorialRun);
	void Multicast_StartBonusObjectiveTimer(const struct FTimerHandle& TimerHandle, int32 RemainingTime);
	void Multicast_OpenDungeonStatusScreen();
	void Multicast_OnRoomBeginPlay();
	void Multicast_OnLootRoomBegin();
	void Multicast_OnFirstRoomBeginPlay();
	void Multicast_CurrentBonusObjectiveSuccess();
	void Multicast_CurrentBonusObjectiveFailed();
	bool IsDungeonContentInstalled();
	bool IsCurrentRoomElite();
	void IncrementObjectiveStep();
	void HideEndlessMissionTracker();
	void HideCompletedObjectives();
	void GoToNextRoom();
	float GetTotalMainObjectivePoints();
	class UEncounterRoomData* GetRoomForEnvironmentAndGameMode(class UObject* WorldContextObject, struct FRoomDataInfo* RoomDataInfo, TArray<class UEncounterRoomData*>& AlreadyUsedRooms);
	enum class EGameModeType GetNextRoomGameModeType();
	class AEndlessdungeon* GetEndlessDungeonEx(class UObject* WorldContextObject, bool bCreateIfNotFound);
	class AEndlessdungeon* GetEndlessDungeon(class UObject* WorldContextObject, bool bCreateIfNotFound);
	struct FPlaylistAssociatedData GetDataAssociatedToPlaylist(class UEncounterPlaylist* Playlist);
	enum class ERunnerType GetCurrentRunnerType();
	class UEncounterPlaylist* GetCurrentPlaylist();
	float GetCurrentMainObjectivePoints();
	struct FTransform GetCurrentEncounterLevelTransform();
	class UCombatEncounter* GetCurrentEncounter();
	class AEndlessDungeonBrain* GetBrain();
	bool GetBossPuzzleNatureCompleted();
	bool GetBossPuzzleDesertCompleted();
	bool GetBossPuzzleAbyssCompleted();
	float GetBonusObjectiveRemainingTime();
	class UEncounterPlaylist* GeneratePlaylistFromSerialNumber(class UObject* WorldContextObject, const class FString& SerialNumberString);
	class UEncounterPlaylist* GeneratePlaylistFromDataCreator(class UObject* WorldContextObject, class UEncounterPlaylistDataCreator* DataCreator);
	void FailRun();
	void EndlessDungeonEvent__DelegateSignature();
	void DungeonRunChosen__DelegateSignature(const struct FDungeonRunDef& RunDef);
	bool DoesPlayerHaveEntitlements(class AOakPlayerController* OakPC);
	void DisplayNewGearNotification(class AOakPlayerController* PlayerController, class FText Message);
	class UDaffodilEncounterData* CreateEncounterForRoomAndGameMode(class UObject* WorldContextObject, class UEncounterRoomData* Room, enum class EGameModeType GameMode, enum class EEncounterType EncounterType, TArray<TSoftObjectPtr<class USpawnOptionData>>* AlreadyUsedSpawnOptions);
	void ClearPlayersBuffs(class APawn* Player);
	void ClearObjectiveWaypoints();
	void ClearAllPlayersBuffs();
	class FName BuffPlayerAllocatedPassiveAbility(class APawn* Player, class FName Tag, class UTutorialMessageDataAsset** TutorialMessage, bool bShouldAlreadyHavePoint);
	void Broadcast_MainObjectiveComplete();
	void BonusObjectiveTimerDepleted();
	void AddPointsToMainObjective(float Points);
	void AddPointsPercentToMainObjective(float Points);
	void AddPassiveBuffAspectToPlayer(class APawn* Player, class UOakPassiveAbilityBuffAspectData* BuffAspect);
	void AddPassiveBuffAspectToAllPlayers(class UOakPassiveAbilityBuffAspectData* BuffAspect);
	int32 AddObjectiveWaypointOnActor(class AActor* TargetActor, int32 WaypointRadius);
	int32 AddObjectiveWaypoint(const struct FVector& WaypointLocation, int32 WaypointRadius);
	void AddLifeToDungeonRun(int32 LifeToAdd);
	void AddGbxAttributeModifierToPlayer(class APawn* Player, class UGbxAttributeData* Attribute, float ModifierValue, enum class EGbxAttributeModifierType ModifierType);
	void AddGbxAttributeModifierToAllPlayers(class UGbxAttributeData* Attribute, float ModifierValue, enum class EGbxAttributeModifierType ModifierType);
	void AddGbxAttributeAbsoluteScaleToPlayer(class APawn* Player, class UGbxAttributeData* Attribute, float ScaleValue);
	void AddGbxAttributeAbsoluteScaleToAllPlayers(class UGbxAttributeData* Attribute, float ScaleValue);
};

// 0x0 (0x458 - 0x458)
// Class OakGame.EndlessDungeonBrain
class AEndlessDungeonBrain : public AActor
{
public:

	static class UClass* StaticClass();
	static class AEndlessDungeonBrain* GetDefaultObj();

	void OnNewPlayerJoined(class AOakPlayerController* PlayerController);
	void GetCurseList(TArray<struct FEDBlessingAndCurseUIData>* OutCurses);
	void GetBonusList(TArray<struct FEDBonusUIData>* OutBonuses);
	void GetBlessingList(TArray<struct FEDBlessingAndCurseUIData>* OutBlessings);
	void FillCurseText(class FName& RowName, class FText* Title, class FText* Description);
	void FillCrystalBonusText(enum class ECrystalBonusType CrystalBonusType, class FText* BonusTitle);
	void FillBonusText(class FName& RowName, class FText* BonusTitle);
};

// 0x20 (0x478 - 0x458)
// Class OakGame.EndlessDungeonEventSender
class AEndlessDungeonEventSender : public AActor
{
public:
	UMulticastDelegateProperty_                  OnEndlessDungeonBossRoomCompleted;                 // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLootRoomCompleted;                               // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AEndlessDungeonEventSender* GetDefaultObj();

	void OnBossRoomCompleted();
	void LootRoomCompleted();
};

// 0x488 (0x4B8 - 0x30)
// Class OakGame.EndlessDungeonGlobalsData
class UEndlessDungeonGlobalsData : public UGbxDataAsset
{
public:
	TSoftObjectPtr<class UEncounterRoomData>     EndlessDungeonLootRoom;                            // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UEncounterRoomData>     EndlessDungeonBossRoom;                            // 0x58(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            EnvironmentEncounterTables;                        // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                    MasterEnvironmentEncounterTablesList;              // 0x88(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TMap<class FName, class UDataTable*>         ModeDataTables;                                    // 0x98(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UDataTable*                            PassiveAbilityBuffTable;                           // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class ENativeEnemyExperienceType, float> EnemyTypeExperienceMultiplier;                     // 0xF0(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EGameModeType, TSubclassOf<class UEncounterGameMode>> GameModesClasses;                                  // 0x140(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UEncounterRoomData>, TSoftClassPtr<class UDaffodilEncounterData>> RoomEncounterClasses;                              // 0x190(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AEndlessDungeonBrain>    BrainClass;                                        // 0x1E0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UEndlessEndStats>        EndStatClass;                                      // 0x208(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                CookiesInventoryType;                              // 0x230(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeam*                                 PlayerTeam;                                        // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          LobbyLevelsToHide;                                 // 0x240(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  LobbyTravelStationTag;                             // 0x250(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbOfLives;                                         // 0x258(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_53F7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxParam                             TotalPointsNeededKillAllThreeWavesParam;           // 0x260(0x80)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             TotalPointsNeededKillAllThreeWaves_FeaturedRun;    // 0x2E0(0x80)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        TotalPointsNeededKillAllThreeWaves;                // 0x360(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_53FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EBonusObjectiveType, TSubclassOf<class UDungeonBonusObjective>> PossiblesBonusObjectives;                          // 0x368(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UDungeonBonusObjective>    DebugBonusObjective;                               // 0x3B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            BonusObjectivesArmyFilters;                        // 0x3C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             MeleeDamageType;                                   // 0x3C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             TrapDamageType;                                    // 0x3D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                ValidCeilingTrapsIndex;                            // 0x3D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                ValidFloorTrapsIndex;                              // 0x3E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                ValidWallTrapsIndex;                               // 0x3F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                ValidBarrelTrapsIndex;                             // 0x408(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ChancesToHaveOnePuzzle;                            // 0x418(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChancesToHaveTwoPuzzle;                            // 0x41C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChancesToHaveThreePuzzle;                          // 0x420(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5404[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USpawnOptionData*                      AbyssAspectPuzzleSpawnOption;                      // 0x428(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnOptionData*                      DesertAspectPuzzleSpawnOption;                     // 0x430(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnOptionData*                      NatureAspectPuzzleSpawnOption;                     // 0x438(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseAbyssAspectPuzzleInFirstRoom;                   // 0x440(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseDesertAspectPuzzleInFirstRoom;                  // 0x441(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseNatureAspectPuzzleInFirstRoom;                  // 0x442(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5409[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UPlaylistList>>  DebugMenuPlaylists;                                // 0x448(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class URegionData*                           NormalRoomRegionData;                              // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URegionData*                           EliteRoomRegionData;                               // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseOPLevels;                                      // 0x468(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_540C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        IncreaseOPLevelsEveryXRoom;                        // 0x46C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class URegionData*>                   NormalRoomRegionDataOPs;                           // 0x470(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class URegionData*>                   EliteRoomRegionDataOPs;                            // 0x480(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDialogScriptData>      DungeonDialogScript;                               // 0x490(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEndlessDungeonGlobalsData* GetDefaultObj();

};

// 0x60 (0x1D8 - 0x178)
// Class OakGame.EndlessDungeonPlayerModifierComponent
class UEndlessDungeonPlayerModifierComponent : public UActorComponent
{
public:
	uint8                                        Pad_541C[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FEndlessDungeonAttributeScaling> AttributesScaling;                                 // 0x1A8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UOakPassiveAbilityBuffAspectData*> CurrentBuffAspects;                                // 0x1B8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UGbxDataAsset*>                 AttributeAssets;                                   // 0x1C8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEndlessDungeonPlayerModifierComponent* GetDefaultObj();

	void OnCurrentBuffAspectsChanged();
};

// 0x0 (0x28 - 0x28)
// Class OakGame.EndlessDungeonRunProviderInterface
class IEndlessDungeonRunProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IEndlessDungeonRunProviderInterface* GetDefaultObj();

	TArray<struct FDungeonRunDef> GetTutorialDungeonRun();
	TArray<struct FDungeonRunDef> GetDungeonRun();
};

// 0x38 (0x60 - 0x28)
// Class OakGame.EndlessEndStats
class UEndlessEndStats : public UObject
{
public:
	class AOakPlayerController*                  CachedStatOwner;                                   // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FEDEndStat>                    OffenseStats;                                      // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FEDEndStat>                    DefenseStats;                                      // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FEDEndStat>                    RUNSTATS;                                          // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEndlessEndStats* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class OakGame.EnemyExperienceMultiplierAttributeValueResolver
class UEnemyExperienceMultiplierAttributeValueResolver : public UAttributeValueResolver
{
public:
	TMap<enum class ENativeEnemyExperienceType, float> ExperienceTypeToMultiplierMap;                     // 0x28(0x50)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        DefaultMultiplier;                                 // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_543F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEnemyExperienceMultiplierAttributeValueResolver* GetDefaultObj();

};

// 0x18 (0x78 - 0x60)
// Class OakGame.EnvQueryGenerator_Allies
class UEnvQueryGenerator_Allies : public UEnvQueryGenerator
{
public:
	struct FOakPlayerAbilityAllyQuerySpec        Spec;                                              // 0x60(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bIncludeSelf;                                      // 0x70(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5445[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEnvQueryGenerator_Allies* GetDefaultObj();

};

// 0xA0 (0x100 - 0x60)
// Class OakGame.EnvQueryGenerator_InteractiveObjects
class UEnvQueryGenerator_InteractiveObjects : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderFloatValue             DistanceMax;                                       // 0x60(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UGbxCondition*                         Condition;                                         // 0x90(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActorTagCompositeQuery               TagQuery;                                          // 0x98(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AActor>>          AllowedTypes;                                      // 0xA8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        bUseAllowedTypes : 1;                              // Mask: 0x1, PropSize: 0x10xB8(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_121 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_5446[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftClassPtr<class AActor>>          DisallowedTypes;                                   // 0xC0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        bUseDisallowedTypes : 1;                           // Mask: 0x1, PropSize: 0x10xD0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_122 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_5448[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClass*>                        AllowedTypesCache;                                 // 0xD8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                        DisallowedTypesCache;                              // 0xE8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_544A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEnvQueryGenerator_InteractiveObjects* GetDefaultObj();

};

// 0x38 (0x98 - 0x60)
// Class OakGame.EnvQueryGenerator_Lootables
class UEnvQueryGenerator_Lootables : public UEnvQueryGenerator
{
public:
	bool                                         bAllowOpenedLootables;                             // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5452[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             DistanceMax;                                       // 0x68(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UEnvQueryGenerator_Lootables* GetDefaultObj();

};

// 0x0 (0x110 - 0x110)
// Class OakGame.EnvQueryGenerator_PlayerTarget
class UEnvQueryGenerator_PlayerTarget : public UEnvQueryGenerator_TargetableActors
{
public:

	static class UClass* StaticClass();
	static class UEnvQueryGenerator_PlayerTarget* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class OakGame.EnvQueryTest_CompanionTargetable
class UEnvQueryTest_CompanionTargetable : public UEnvQueryTest
{
public:

	static class UClass* StaticClass();
	static class UEnvQueryTest_CompanionTargetable* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class OakGame.EnvQueryTest_DownStateBoost
class UEnvQueryTest_DownStateBoost : public UEnvQueryTest
{
public:

	static class UClass* StaticClass();
	static class UEnvQueryTest_DownStateBoost* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class OakGame.EnvQueryTest_PlayerLineOfSight
class UEnvQueryTest_PlayerLineOfSight : public UEnvQueryTest
{
public:

	static class UClass* StaticClass();
	static class UEnvQueryTest_PlayerLineOfSight* GetDefaultObj();

};

// 0x8 (0x1E0 - 0x1D8)
// Class OakGame.EnvQueryTest_PlayerTarget
class UEnvQueryTest_PlayerTarget : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          SourceContext;                                     // 0x1D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEnvQueryTest_PlayerTarget* GetDefaultObj();

};

// 0x20 (0x2F0 - 0x2D0)
// Class OakGame.EscortLocationComponent
class UEscortLocationComponent : public USceneComponent
{
public:
	float                                        SnapToGroundDistance;                              // 0x2D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_54CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakVehicle*                           Escorter;                                          // 0x2D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSnapToGround;                                     // 0x2E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_54D0[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEscortLocationComponent* GetDefaultObj();

	void SetOccupation(class AOakVehicle* Vehicle);
	bool IsOccupied();
	void InitEscort(class AOakVehicle* Target, class AActor* ActorToEscort, bool bUseNearest);
	TArray<class UEscortLocationComponent*> FindEscortLocation(class AActor* ActorToEscort, bool bIsFree);
	class UEscortLocationComponent* FindEscortComponent(class AOakVehicle* Target, class AActor* ActorToEscort, bool bUseNearest);
	void ClearEscortOccupation(class AOakVehicle* Target);
};

// 0x120 (0x150 - 0x30)
// Class OakGame.ExperienceGlobals
class UExperienceGlobals : public UGbxDataAsset
{
public:
	struct FAttributeInitializationData          BaseEnemyExperienceFormula;                        // 0x30(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FLevelBasedExpScale>           ExpScaleByLevelDifference;                         // 0x68(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          VehicleVSCharacterExpModifier;                     // 0x78(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FExpAwardWeight>               ExpAwardWeights;                                   // 0xB0(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          BaseScanVehicleExperienceFormula;                  // 0xC0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          BaseDiscoverAreaExperienceFormula;                 // 0xF8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerExperienceFormula              PlayerExperienceFormula;                           // 0x130(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPlayerGuardianRankFormula            PlayerGuardianRankFormula;                         // 0x13C(0x14)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UExperienceGlobals* GetDefaultObj();

};

// 0xA40 (0xA70 - 0x30)
// Class OakGame.ExtensionUIData
class UExtensionUIData : public UGbxDataAsset
{
public:
	class FText                                  JoinCount;                                         // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  JoinLabel;                                         // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Joined;                                            // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SubscribersBonus;                                  // 0x78(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ShiftAccountNotLinked;                             // 0x90(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PollResultTitle;                                   // 0xA8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PollResultVotes;                                   // 0xC0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileGameSettingsDifficulty;                     // 0xD8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileGameSettingsGroupMode;                      // 0xF0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileGameSettingsPlaythrough;                    // 0x108(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileGameSettingsMayhem;                         // 0x120(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  StoryModeName;                                     // 0x138(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  StoryModeShortName;                                // 0x150(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  StoryModeDescription;                              // 0x168(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NormalModeName;                                    // 0x180(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NormalModeShortName;                               // 0x198(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NormalModeDescription;                             // 0x1B0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CooperationName;                                   // 0x1C8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CooperationShortName;                              // 0x1E0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CooperationDescription;                            // 0x1F8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CoopetitionName;                                   // 0x210(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CoopetitionShortName;                              // 0x228(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CoopetitionDescription;                            // 0x240(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MayhemName;                                        // 0x258(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MayhemShortName;                                   // 0x270(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MayhemDescription;                                 // 0x288(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlaythroughNormalName;                             // 0x2A0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlaythroughNormalShortName;                        // 0x2B8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlaythroughNormalDescription;                      // 0x2D0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlaythroughTVHMName;                               // 0x2E8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlaythroughTVHMShortName;                          // 0x300(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlaythroughTVHMDescription;                        // 0x318(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PopupClose;                                        // 0x330(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PopupSend;                                         // 0x348(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PopupSelect;                                       // 0x360(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MenuToggle;                                        // 0x378(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MenuProfile;                                       // 0x390(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MenuInventory;                                     // 0x3A8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MenuSkillTree;                                     // 0x3C0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MenuEvents;                                        // 0x3D8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MenuAccountLink;                                   // 0x3F0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MenuGameSettings;                                  // 0x408(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TabProfile;                                        // 0x420(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TabProfileStats;                                   // 0x438(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TabInventoryEquipment;                             // 0x450(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TabInventoryBackpack;                              // 0x468(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TabSkillTreeLeftBranch;                            // 0x480(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TabSkillTreeMiddleBranch;                          // 0x498(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TabSkillTreeRightBranch;                           // 0x4B0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TabEvents;                                         // 0x4C8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastLoaderHeader;                                 // 0x4E0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastLoaderMessage;                                // 0x4F8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastPreorderHeader;                               // 0x510(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastPreorderMessage;                              // 0x528(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastBuyHeader;                                    // 0x540(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastBuyMessage;                                   // 0x558(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastDisabledHeader;                               // 0x570(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastDisabledMessage;                              // 0x588(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ToastEventStarted;                                 // 0x5A0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileCharacterLevel;                             // 0x5B8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileMayhemLevel;                                // 0x5D0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileStatSessionLifetime;                        // 0x5E8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileStatDamageCaused;                           // 0x600(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileStatEnemiesKilled;                          // 0x618(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileStatTimeInjured;                            // 0x630(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ProfileStatTimeDead;                               // 0x648(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InventoryCardRating;                               // 0x660(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InventoryCardLevelRequired;                        // 0x678(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardDefaultTypeName;                          // 0x690(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardAugmentTypeName;                          // 0x6A8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardActionSkillTypeName;                      // 0x6C0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardActionSkillAugmentTypeName;               // 0x6D8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardPassiveTypeName;                          // 0x6F0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardPetTypeName;                              // 0x708(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardPoints;                                   // 0x720(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardEquipped;                                 // 0x738(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardNotEquipped;                              // 0x750(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardPurchased;                                // 0x768(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardNotEnoughPoints;                          // 0x780(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardNotPurchased;                             // 0x798(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardNotUnlocked;                              // 0x7B0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardCurrentEffect;                            // 0x7C8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardNextRank;                                 // 0x7E0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SkillCardCustomizeBuild;                           // 0x7F8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellHeader;                                      // 0x810(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellMessage;                                     // 0x828(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellGrantAccessMessage;                          // 0x840(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellGrantAccessAction;                           // 0x858(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellLinkAccountMessage;                          // 0x870(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellLinkAccountAction;                           // 0x888(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellRefreshAction;                               // 0x8A0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellLinkedMessage;                               // 0x8B8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UpsellViewShiftAction;                             // 0x8D0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentOperativeGrenadeMod1;                       // 0x8E8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentOperativeGrenadeMod2;                       // 0x900(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentOperativeActionSkillMod1;                   // 0x918(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentOperativeActionSkillMod2;                   // 0x930(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentGunnerRightHardPointSlot;                   // 0x948(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentGunnerRightHardPointMod;                    // 0x960(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentGunnerLeftHardPointSlot;                    // 0x978(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentGunnerLeftHardPointMod;                     // 0x990(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentBeastmasterActionSkillMod1;                 // 0x9A8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AugmentBeastmasterActionSkillMod2;                 // 0x9C0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BreadcrumbHome;                                    // 0x9D8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NoTrinket;                                         // 0x9F0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Redacted;                                          // 0xA08(0x18)(Edit, NativeAccessSpecifierPublic)
	TMap<class FString, class FText>             AdditionalLines;                                   // 0xA20(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UExtensionUIData* GetDefaultObj();

};

// 0x1018 (0x13F0 - 0x3D8)
// Class OakGame.FightForYourLifeComponent
class UFightForYourLifeComponent : public UUsableComponent
{
public:
	uint8                                        Pad_55D2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameResourceData*                     DownStateTimeResourceData;                         // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameResourceData*                     ReviveTimeResourceData;                            // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumRevivingActors;                             // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_55D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameResourcePoolReference            DownTimeResourcePool;                              // 0x3F8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        GiveUpDownTimeConsumptionRate;                     // 0x410(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StartDownStateTimePaused;                          // 0x414(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_55D7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHUDNotificationAsset*                 DefaultExitNotificationAsset;                      // 0x418(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DefaultExitNotificationText;                       // 0x420(0x18)(Edit, NativeAccessSpecifierPublic)
	uint32                                       ExitNotificationPriority;                          // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_55D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStatusEffectData*                     BeingRevivedStatusEffectData;                      // 0x440(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_55DA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  PostProcessTransition;                             // 0x450(0x600)(Edit, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PostProcessTransitionCurve;                        // 0xA50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_55DC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  PostProcessBleedOut;                               // 0xA60(0x600)(Edit, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PostProcessBleedOutCurve;                          // 0x1060(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DownstateStartAudio;                               // 0x1068(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DownstateStopAudio;                                // 0x1070(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DeathStartAudio;                                   // 0x1078(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DeathWormholeAudio;                                // 0x1080(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           InstantDeathWormholeAudio;                         // 0x1088(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ResurrectionStartAudio;                            // 0x1090(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ResurrectionStopAudio;                             // 0x1098(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxHUDStateData*                      OverrideHUDState;                                  // 0x10A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       RevivingParticleTemplate;                          // 0x10A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              RevivingParticle;                                  // 0x10B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRevivingParticleActive;                           // 0x10B8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_55E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     RevivingTimeRateScalarFormula;                     // 0x10C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameResourcePoolReference            BeingRevivedTimeResourcePool;                      // 0x10C8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameResourcePoolReference            RevivingTimeResourcePool;                          // 0x10E0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        BeingRevivedByActors;                              // 0x10F8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                ActorToRevive;                                     // 0x1108(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActorsRevivingCount;                               // 0x1110(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBeingRevivedByPlayer;                             // 0x1114(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDownState                        CurrentDownState;                                  // 0x1115(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EReviveState                      ReviveState;                                       // 0x1116(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReviveSuccessful;                                 // 0x1117(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExitDownStateInformation             DownStateExitReason;                               // 0x1118(0x28)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	bool                                         bCinematicPause;                                   // 0x1140(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_55EA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStatusEffectInstanceReference        BeingRevivedEffectRef;                             // 0x1148(0x18)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_StartLocal;                            // 0x1160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_StartClient;                           // 0x1170(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_StartHost;                             // 0x1180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_StartOther;                            // 0x1190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_CinematicPauseLocal;                   // 0x11A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_CinematicPauseHost;                    // 0x11B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_StopLocal;                             // 0x11C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_StopClient;                            // 0x11D0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_StopHost;                              // 0x11E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_StopOther;                             // 0x11F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_FinishLocal;                           // 0x1200(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_FinishClient;                          // 0x1210(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownState_FinishHost;                            // 0x1220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownAndExertingState_StartLocal;                 // 0x1230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDownAndExertingState_StopLocal;                  // 0x1240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeingRevivedState_StartLocal;                    // 0x1250(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeingRevivedState_StartClient;                   // 0x1260(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeingRevivedState_StartHost;                     // 0x1270(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeingRevivedState_StartOther;                    // 0x1280(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeingRevivedState_StopLocal;                     // 0x1290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeingRevivedState_StopClient;                    // 0x12A0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeingRevivedState_StopHost;                      // 0x12B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeingRevivedState_StopOther;                     // 0x12C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRevivingState_StartLocal;                        // 0x12D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRevivingState_StartHost;                         // 0x12E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRevivingState_StopLocal;                         // 0x12F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRevivingState_StopHost;                          // 0x1300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_5600[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnGivingUpState_StartLocal;                        // 0x1328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnGivingUpState_StartHost;                         // 0x1338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnGivingUpState_StopLocal;                         // 0x1348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnGivingUpState_StopHost;                          // 0x1358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRespawnStart;                                    // 0x1368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTransport;                                       // 0x1378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        StockDownTimeConsumptionRate;                      // 0x1388(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StockRevivingTimeConsumptionRate;                  // 0x138C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResurrectedAtStation;                            // 0x1390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDamageComponent*                      CurrentSecondWindTargetComp;                       // 0x13A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondWindTargetRetainTime;                        // 0x13A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5607[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSuppressWidget;                                   // 0x13B8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5609[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RadiusExpansion;                                   // 0x13BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfHeightExpansion;                               // 0x13C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_560C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGbxAction>>        ActionClassesToStopOnQuickRes;                     // 0x13C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_560D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFightForYourLifeComponent* GetDefaultObj();

	void UpdatePreGiveUp();
	void TransportEvent__DelegateSignature(bool bTransportStarted);
	void ServerGivingUpState_Stop();
	void ServerGivingUpState_Start();
	void SecondWindTargetDied(class AActor* DamageReceiver, class AActor* DamageCauser);
	void RevivingState_Stop(bool IsHealed);
	void RevivingState_Start(class AActor* ActorBeingRevived);
	void ResurrectingState_Stop();
	void ResurrectingState_Start();
	void RestoreAttributeValue(class UGbxAttributeData* CurrentValueAttribute, class UGbxAttributeData* MaxValueAttribute, class UGbxAttributeData* PercentAfterDeathAttribute);
	void ReplenishHealthAndShield(float HealthPercent, float ShieldPercent, class UWwiseEvent* WwiseEvent);
	void PlayWwiseEventOnOwner(class UWwiseEvent* EventToPlay);
	void PauseDownStateTimer(bool PauseTimer);
	void OtherFightForYourLifeEvent__DelegateSignature(class UFightForYourLifeComponent* OtherFFYL);
	void OnRep_RevivingParticleActive();
	void OnRep_ReviveState(enum class EReviveState OldREviveState);
	void OnRep_DownStateExitReason();
	void OnRep_CurrentDownState(enum class EDownState OldDownState);
	void OnRep_ActorToRevive();
	void NotifyRespawnStart();
	void MarkSecondWindTarget(class AActor* DamagedActor);
	bool IsReviving();
	bool IsResurrecting();
	bool IsLocalOwner();
	bool IsInDownState();
	bool IsCharacterAHealer(class AActor* HealingActor);
	bool IsBeingRevivedByPlayer();
	bool IsBeingRevived();
	void GivingUpState_Stop();
	void GivingUpState_Start();
	float GetReviveTimePercentage();
	float GetDownTimePercentage();
	void FightForYourLifeWithStateEvent__DelegateSignature(enum class EExitDownStateReason ExitDownStateReason);
	void FightForYourLifeWithBoolEvent__DelegateSignature(bool IsSuccessful);
	void FightForYourLifeResurrected__DelegateSignature(class UTravelStationResurrectComponent* ResurrectStation);
	void FightForYourLifeEventWithActorBeingRevived__DelegateSignature(class AActor* ActorBeingRevived);
	void FightForYourLifeEvent__DelegateSignature();
	void DownStateTimeExpired(const struct FGameResourcePoolReference& ResourcePool);
	void DownStateCausedDamage(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void DownState_Stop(enum class EExitDownStateReason Reason, class FText CustomExitMessageText, class UHUDNotificationAsset* CustomExitNotification);
	void DownState_Start(bool InstantDeath);
	void DownState_Finish();
	void DownAndExertingState_Stop();
	void DownAndExertingState_Start();
	void DisplayExitNotification();
	void ClearSecondWindTarget();
	void ClearDownStateExitReason();
	void BeingRevivedTimeExpired(const struct FGameResourcePoolReference& ResourcePool);
	void BeingRevivedState_Stop(bool IsHealed);
	bool BeingRevivedState_Start(class AActor* RevivingActor);
	void ActivateSecondWind();
};

// 0x20 (0x198 - 0x178)
// Class OakGame.FocusableComponent
class UFocusableComponent : public UActorComponent
{
public:
	struct FVector2D                             FocusScreenOffset;                                 // 0x178(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseFocusSocket;                                   // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5613[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FocusSocket;                                       // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FocusRadius;                                       // 0x190(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5614[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFocusableComponent* GetDefaultObj();

};

// 0x40 (0x498 - 0x458)
// Class OakGame.FogOfDiscoveryCapture
class AFogOfDiscoveryCapture : public AActor
{
public:
	bool                                         RunBlueprintLogic;                                 // 0x458(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5619[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextureRenderTarget2D*                OverrideDiscoveryTexture;                          // 0x460(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UDelegateProperty_                           OnFogSceneUpdated;                                 // 0x468(0x10)(ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                WorldPositionTexture;                              // 0x478(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapData*                          CurrentLevelZoneMap;                               // 0x480(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapData*                          PendingLevelZoneMap;                               // 0x488(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PendingCaptureSize;                                // 0x490(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFogOfDiscoveryCapture* GetDefaultObj();

	bool SetUpDataForLevel(class UZoneMapData* LevelZoneMap, struct FVector2D* CaptureSize, bool bImmediateLoad);
	bool SetupComponentsForCapture();
	void OnZoneMapMeshDataLoaded();
	void OnFogLevelLoaded(class UZoneMapData* UpdatedZoneMap);
	void FogTextureCreated();
	void CaptureScene();
};

// 0x68 (0x1E0 - 0x178)
// Class OakGame.FogOfDiscoveryComponent
class UFogOfDiscoveryComponent : public UActorComponent
{
public:
	class UMaterialInstanceDynamic*              FogOfDiscoveryMID;                                 // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UZoneMapData>           CurrentLevelZoneMap;                               // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UZoneMapData>           PendingLevelZoneMap;                               // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5622[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFogOfDiscoveryComponent* GetDefaultObj();

	void SaveFODTexture(bool bFast);
	void OnZoneMapMeshDataLoaded();
	void OnPlayerExitedVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnPlayerEnteringVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCharacterChanged(class APawn* NewPawn, class APawn* OldPawn);
	void DeferredInitializeZoneMapMesh();
};

// 0x28 (0x58 - 0x30)
// Class OakGame.VaultHunterStatusData
class UVaultHunterStatusData : public UGbxDataAsset
{
public:
	class FText                                  DisplayText;                                       // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVaultHunterStatusData* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class OakGame.FriendGlobals
class UFriendGlobals : public UGbxDataAsset
{
public:
	class UChallengeList*                        AchievementChallengeList;                          // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            FriendEventDataTable;                              // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UVaultHunterStatusData*>        VaultHunterStatusTable;                            // 0x40(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EnemyTag;                                          // 0x50(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          NamedEnemyTag;                                     // 0x58(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BossTag;                                           // 0x60(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Lifetime_Normal;                                   // 0x68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Lifetime_Long;                                     // 0x6C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Lifetime_VeryLong;                                 // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Frequency_VeryLow;                                 // 0x74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Frequency_Low;                                     // 0x78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Frequency_Normal;                                  // 0x7C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Frequency_High;                                    // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_562E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFriendGlobals* GetDefaultObj();

};

// 0x48 (0x580 - 0x538)
// Class OakGame.FrontendStandInAnimInstance
class UFrontendStandInAnimInstance : public UGbxAnimInstance
{
public:
	bool                                         bIsCharacterSelect;                                // 0x538(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFrontendStandInAnimType          StandInType;                                       // 0x539(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5634[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StandInSlotIndex;                                  // 0x53C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInNeutralPose;                                  // 0x540(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5636[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStandInGlobals*                       StandInGlobals;                                    // 0x550(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter*                         Character;                                         // 0x558(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerStandIn*                        PlayerStandIn;                                     // 0x560(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter_StandIn*                 StandInCharacter;                                  // 0x568(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakPlayerAbilityTreeBranchData*       PrimaryClassBranch;                                // 0x570(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInClassSelection;                               // 0x578(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsWearingBigHat;                                  // 0x579(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_563B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FacialAnimWeight;                                  // 0x57C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFrontendStandInAnimInstance* GetDefaultObj();

};

// 0x78 (0xA8 - 0x30)
// Class OakGame.GalaxyData
class UGalaxyData : public UGbxDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       GalaxyMesh;                                        // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlanetData*>                   PlanetData;                                        // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UChallengeCategoryData*>        ProgressChallengeCategories;                       // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGalaxyDataProgressCategoriesGroup> ProgressCategoriesGroups;                          // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGalaxyData* GetDefaultObj();

	class UPlanetData* GetPlanetForTrackedMission(class UObject* WorldContextObject);
};

// 0x20 (0x6A0 - 0x680)
// Class OakGame.GalaxyMapStation
class AGalaxyMapStation : public AAdvancedInteractiveObject
{
public:
	class UPlanetData*                           CurrentPlanetData;                                 // 0x680(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlanetMeshData*                       CurrentPlanetMeshData;                             // 0x688(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlanetData*                           OrbitingPlanetData;                                // 0x690(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGalaxyMapStationPatch*                GalaxyMapStationPatch;                             // 0x698(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGalaxyMapStation* GetDefaultObj();

	void SetCurrentPlanetData(class UPlanetData* PlanetData);
	void OnTravelIDsChanged();
	void OnRep_CurrentPlanetData();
	void OnPlanetMeshDataLoaded();
	void K2_PostLoadedPlanetMesh();
	void K2_OnPlanetSelected(class UPlanetData* Planet);
	void K2_OnBrowsePlanet(class UPlanetData* Planet);
	class UPlanetData* GetPlanetDataFromZoneNameID(uint8 ZoneNameID);
	class UPlanetData* GetPlanetDataFromMapNameID(uint8 MapNameID);
};

// 0x0 (0x458 - 0x458)
// Class OakGame.GalaxyMapStationPatch
class AGalaxyMapStationPatch : public AActor
{
public:

	static class UClass* StaticClass();
	static class AGalaxyMapStationPatch* GetDefaultObj();

	void K2_OnPlanetSelected(class UPlanetData* Planet);
};

// 0x0 (0x508 - 0x508)
// Class OakGame.GalaxyMapStationProxy
class AGalaxyMapStationProxy : public AAdvancedInteractiveObjectProxy
{
public:

	static class UClass* StaticClass();
	static class AGalaxyMapStationProxy* GetDefaultObj();

	void OnSelectedPlanet(class UPlanetData* InPlanetData);
};

// 0x1780 (0x19A0 - 0x220)
// Class OakGame.GameplayGlobals
class UGameplayGlobals : public UGbxGameplayGlobals
{
public:
	float                                        PrimaryHealthLowPercent;                           // 0x220(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrimaryHealthVeryLowPercent;                       // 0x224(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResurrectionCostPercent;                           // 0x228(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondaryHealthLowPercent;                         // 0x22C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondaryHealthVeryLowPercent;                     // 0x230(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5680[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHitRegionData*                        ProjectedShieldHitRegion;                          // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AmmoLowPercent;                                    // 0x240(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoVLoadedAmmoRegenScalar;                          // 0x244(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEffectCollectionData>     AmpedShotTracerFX;                                 // 0x248(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEffectCollectionData>     AmpedShotBeamFX;                                   // 0x250(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           AmpedShotSound;                                    // 0x258(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponShotModifierType, struct FAmpedShotSettings> AmpedShotSettingsByType;                           // 0x260(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                WeaponInventoryType;                               // 0x2B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                ShieldInventoryType;                               // 0x2B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                GrenadeModInventoryType;                           // 0x2C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                CreditsInventoryType;                              // 0x2C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                EridiumInventoryType;                              // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                VaultCoinInventoryType;                            // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                DiamondKeyInventoryType;                           // 0x2E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                GoldenKeyInventoryType;                            // 0x2E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                WeaponSkinInventoryType;                           // 0x2F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                HealthPickupInventoryType;                         // 0x2F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                ArtifactInventoryType;                             // 0x300(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                MeleeWeaponInventoryType;                          // 0x308(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                AmmoInventoryType;                                 // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                BodyArmorInventoryType;                            // 0x318(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInventoryCategoryData*>        InventoryTypeCategories;                           // 0x320(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UUIStatData*                           EnchantedInventoryStat;                            // 0x330(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UInventorySlotData>        BaseWeaponInventorySlotType;                       // 0x338(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UInventorySlotData>        ShieldInventorySlotType;                           // 0x340(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  InventoryRarityMission;                            // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  InventoryRarityMoney;                              // 0x350(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  InventoryRarityCommon;                             // 0x358(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  InventoryRarityUncommon;                           // 0x360(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  InventoryRarityRare;                               // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  InventoryRarityVeryRare;                           // 0x370(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  InventoryRarityLegendary;                          // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInventoryRarityData*>          LostLootRarities;                                  // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        MaxLostLootSize;                                   // 0x390(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LostLootIncrementPerSDU;                           // 0x394(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakSDUData*                           LostLootSDUData;                                   // 0x398(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InventorySaveGameFrequency;                        // 0x3A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverworldLootBeamScale;                            // 0x3A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNPCMailSize;                                    // 0x3A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5697[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2DWaveform>             CharacterAccuracyPattern;                          // 0x3B0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        CharacterAccuracyPatternTimeScale;                 // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EditorCharacterAccuracyPatternHistoryTime;         // 0x3C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EditorCharacterAccuracyPatternHistoryDelta;        // 0x3C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassPickupRadius;                                  // 0x3CC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MassPickupMaxPullAmount;                           // 0x3D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassPickupMaxDelay;                                // 0x3D4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassPickupMinDelay;                                // 0x3D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassPickupMaxTotalDelay;                           // 0x3DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPickupEvaluationSettings             PickupEvaluationSettings;                          // 0x3E0(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FOakVehicleManagerSettings            OakVehicleManagerSettings;                         // 0x418(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class ULootSpawnPatternData*                 DefaultDropLootPattern;                            // 0x438(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutomaticallyMassPickupConsumablesFromLootables;  // 0x440(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56A5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultAutoLootConsumableDelay;                    // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConsumablesAttachedToLootablesCanBeTouchPickuped; // 0x448(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56A7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TriggerForceCleanupLongLifeOverflowPercent;        // 0x44C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceCleanupLongLifePickupsPercent;                // 0x450(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCleanupPickupsBetweenSlaughterRounds;             // 0x454(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinimumAgeToCleanupSlaughterPickups;               // 0x458(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ForeverPickupSlaughterCleanupThreshold;            // 0x45C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletMagnetismTargetOffset;                       // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTargetingDistance;                              // 0x464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingTraceUpdateTime;                          // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDialogScriptData*                     MissionKickoffScript;                              // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManufacturerData*                     MissionManufacturer;                               // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  MissionRarity;                                     // 0x480(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFriendGlobals*                        FriendGlobals;                                     // 0x488(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                MissionInventoryCategory;                          // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                MissionInventoryCategory_Vehicle;                  // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          MissionCreditsRewardFormula;                       // 0x4A0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        PickupFailsafeMinutes;                             // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       MissionSpawnerFailsafeMinutes;                     // 0x4DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissionDeliveryRequiredProximityRadius;            // 0x4E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameStatData*                         OptionalObjectiveCompletedStat;                    // 0x4E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UMission>                TutorialSkipMission;                               // 0x4F0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         UnlockClassFeatureCondition;                       // 0x518(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         UnlockInitialSecondaryClassCondition;              // 0x520(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         UnlockSecondaryClassSwapCondition;                 // 0x528(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIDialogEventData*                    AIDialogEventData;                                 // 0x530(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> DefaultEnemyFadeoutEffect;                         // 0x538(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDuelGlobals*                          DuelGlobals;                                       // 0x540(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayerPrestigeTreeData*>       PlayerPrestigeTreeData;                            // 0x548(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SkillRespecCostPercent;                            // 0x558(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56BD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhotoModeGlobals*                     PhotoModeGlobals;                                  // 0x560(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTutorialGlobals*                      TutorialGlobals;                                   // 0x568(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerAlertRetriggerDelay;                         // 0x570(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56C0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           PlayerAlertSound;                                  // 0x578(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                PlayerAlertPointingAction;                         // 0x580(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayerAlertData*>              PlayerAlertData;                                   // 0x588(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ReceivedMailSound;                                 // 0x598(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapGlobalsData*                   ZoneMapGlobals;                                    // 0x5A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGalaxyData*                           GalaxyMap;                                         // 0x5A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UZoneMapListData>> ZoneMaps;                                          // 0x5B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UGbxCustomizationTypeData*             CustomizationTypeData_Head;                        // 0x5C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCustomizationTypeData*             CustomizationTypeData_Body;                        // 0x5C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCustomizationTypeData*             CustomizationTypeData_Skin;                        // 0x5D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCustomizationTypeData*             CustomizationTypeData_Emote;                       // 0x5D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaultHunterProfileCard*               VaultHunterProfileCard;                            // 0x5E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> DigistructOutGearEffect;                           // 0x5E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> DigistructInGearEffect;                            // 0x5F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ModifierTargetResolverTable;                       // 0x5F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ModifierStatusEffectTable;                         // 0x600(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ModifierTable;                                     // 0x608(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                  StatusMenuPPSettings;                              // 0x610(0x600)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        StatusMenuPPBlendInTime;                           // 0xC10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusMenuPPBlendOutTime;                          // 0xC14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableSeparateTransluencyInStatusMenu;           // 0xC18(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56CA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ActorCullingRadius;                                // 0xC1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                  NewCharacterMenuPPSettings;                        // 0xC20(0x600)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DefaultSingularityIgnoreTags;                      // 0x1220(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          SuicideByExplosionStat;                            // 0x1240(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          WeaponsFoundStat;                                  // 0x1268(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          MeleeWeaponsFoundStat;                             // 0x1290(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          ShieldsFoundStat;                                  // 0x12B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          SpellsFoundStat;                                   // 0x12E0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          ArmorsFoundStat;                                   // 0x1308(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInventoryFoundAssociation>    GenericInventoryFoundStats;                        // 0x1330(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          MayhemLootFoundStat;                               // 0x1340(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          MayhemLevelUnlockedStat;                           // 0x1368(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          AmpShieldKillStat;                                 // 0x1390(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          CompletedTradeStat;                                // 0x13B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ExplodingBarrelBaseClass;                          // 0x13E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          KillWithExplodingBarrelStat;                       // 0x13E8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          CosmeticPurchasedStat;                             // 0x1410(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          SDUsPurchasedStat;                                 // 0x1438(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          ItemSoldStat;                                      // 0x1460(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          HijackedVehiclePartStat;                           // 0x1488(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          ShieldDamageStat;                                  // 0x14B0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          LegendariesFoundStat;                              // 0x14D8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          EnchantedLegendariesFoundStat;                     // 0x1500(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          MaxMoneyStat;                                      // 0x1528(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          SDUsMaxedStat;                                     // 0x1550(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          RandomEncountersFinishedStat;                      // 0x1578(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          CharacterCustomizationsUnlockedStat;               // 0x15A0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          AllCustomizationsUnlockedStat;                     // 0x15C8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          EnchantmentRerollStat;                             // 0x15F0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          ChallengeCreditsRewardFormula;                     // 0x1618(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          ChallengeEridiumRewardFormula;                     // 0x1650(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AnointedEridianCrystalGameplayTag;                 // 0x1688(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUsabilityDataSelection*               AnointedCrystalMeleeUsableSelection;               // 0x1690(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UDamageSource>           EridianResonatorDamageSource;                      // 0x1698(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHitReactionTag*                       AnointedDeathHitReaction;                          // 0x16C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxCustomizationTargetData> BodyMeshTarget;                                    // 0x16C8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxCustomizationTypeData> BodyMeshType;                                      // 0x16F0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakBodyMeshLinkedParameterData> BodyMeshLinkedParameters;                          // 0x1718(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxCustomizationTypeData*>     PlayerBannerCustomizationTypes;                    // 0x1740(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> PlayerBannerShowEffect;                            // 0x1750(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> PlayerBannerHideEffect;                            // 0x1758(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMissionEnableCondition*               PlayerBannerEnableCondition;                       // 0x1760(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APlayerBanner>             EmotePlayerBanner;                                 // 0x1768(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            EmotePlayerBannerRelativeTransform;                // 0x1770(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UGlobalHeroPointsData*                 HeroPointsData;                                    // 0x17A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDaffodilChallengeBonusGlobalsData*    ChallengeBonusGlobalsData;                         // 0x17A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHeroStatueCustomizationData          HeroStatueMaterialCustomization;                   // 0x17B0(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FHeroStatueCustomizationData          HeroStatuePoseCustomization;                       // 0x17C0(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  HeroStatueEnableParameter;                         // 0x17D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          HeroStatueScalarParameters;                        // 0x17D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          HeroStatueVectorParameters;                        // 0x17E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          HeroStatueTextureParameters;                       // 0x17F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UChallengeCategoryData*>        LevelTransitionTelemetryChallengeCategories;       // 0x1808(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bOverpowerLevelAvailableOnlyInEndlessDungeon;      // 0x1818(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_56E1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EOakPlayerClass, TSoftObjectPtr<class UOakPlayerAbilityTreeBranchData>> PlayerClassAbilityTrees;                           // 0x1820(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UChallengeList*>                MasterChallengeLists;                              // 0x1870(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UGameStatList*>                 MasterGameStatLists;                               // 0x1880(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UOakLoadingScreenExpansionData*> MasterLoadingScreenData;                           // 0x1890(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UMayhemOverrideDataAsset*>      MasterMayhemModeTwoData;                           // 0x18A0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UPatchExpansionData*>           MasterPatchExpansionData;                          // 0x18B0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UDownloadableExpansionData*>    MasterDownloadableExpansionData;                   // 0x18C0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class UGameStatData*> MasterKillStatMap;                                 // 0x18D0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FAdditionalPlayerClass>        MasterAdditionalPlayerClassData;                   // 0x1920(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<enum class EOakPlayerClass, TSoftObjectPtr<class UOakPlayerAbilityTreeBranchData>> MasterPlayerClassAbilityTrees;                     // 0x1930(0x50)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FCustomizationCustomFloatEntry> MasterPlayerCustomizationCustomFloatData;          // 0x1980(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FCustomizationMorphTargetSetExpansionData> MasterCustomizationMorphTargetSetData;             // 0x1990(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGameplayGlobals* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class OakGame.GameplayTask_PlayGbxAction
class UGameplayTask_PlayGbxAction : public UGameplayTask
{
public:
	UMulticastDelegateProperty_                  OnEnd;                                             // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAnimEnd;                                         // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGbxAction*                            Action;                                            // 0x88(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGameplayTask_PlayGbxAction* GetDefaultObj();

	class UGameplayTask_PlayGbxAction* PlayGbxAction(TSubclassOf<class UGbxAction> ActionClass, TArray<struct FGbxActionRegister>& GbxActionRegisters, enum class EGbxActionNetMode NetMode, class AActor* Target, class UWeaponSlotData* WeaponSlot, float Duration, float PlayRate, const struct FVector& Direction, int32 MontageLoopCount);
};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_A9K_AssignFFYLTarget
class UGbxCondition_A9K_AssignFFYLTarget : public UGbxCondition
{
public:
	bool                                         bIncludeGivingUp;                                  // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIncludeResurrecting;                              // 0x89(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5702[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_A9K_AssignFFYLTarget* GetDefaultObj();

};

// 0x40 (0xC8 - 0x88)
// Class OakGame.GbxCondition_AreEnemiesWithinRadius
class UGbxCondition_AreEnemiesWithinRadius : public UGbxCondition
{
public:
	struct FAttributeInitializationData          RadiusInit;                                        // 0x88(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5704[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_AreEnemiesWithinRadius* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_OakAbility_Base
class UGbxCondition_OakAbility_Base : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_OakAbility_Base* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_CanAugmentBeUsed
class UGbxCondition_CanAugmentBeUsed : public UGbxCondition_OakAbility_Base
{
public:
	class UOakActionAbilityAugmentData*          Augment;                                           // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_CanAugmentBeUsed* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_CanBeRevivedBy
class UGbxCondition_CanBeRevivedBy : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_CanBeRevivedBy* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class OakGame.GbxCondition_CheckHealthPoolStateByResourceType
class UGbxCondition_CheckHealthPoolStateByResourceType : public UGbxCondition
{
public:
	class UGameResourceData*                     ResourceType;                                      // 0x88(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGameResourcePoolState            ResourcePoolState;                                 // 0x90(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_570A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_CheckHealthPoolStateByResourceType* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class OakGame.GbxCondition_CheckRarity
class UGbxCondition_CheckRarity : public UGbxCondition
{
public:
	TArray<class UInventoryRarityData*>          Rarities;                                          // 0x88(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_CheckRarity* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_DoesAnyPlayerHaveLowHealth
class UGbxCondition_DoesAnyPlayerHaveLowHealth : public UGbxCondition
{
public:
	bool                                         bIncludeLowHealth;                                 // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIncludeVeryLowHealth;                             // 0x89(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAccountForReservedHealth;                         // 0x8A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5724[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_DoesAnyPlayerHaveLowHealth* GetDefaultObj();

};

// 0x18 (0xA0 - 0x88)
// Class OakGame.GbxCondition_EnemiesAreHurtingActor
class UGbxCondition_EnemiesAreHurtingActor : public UGbxCondition
{
public:
	struct FGbxBlackboardKeySelector             HurtTarget;                                        // 0x88(0x10)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        MinTargetScore;                                    // 0x98(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DecayRate;                                         // 0x9C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_EnemiesAreHurtingActor* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class OakGame.GbxCondition_HasHealthOfType
class UGbxCondition_HasHealthOfType : public UGbxCondition
{
public:
	TArray<class UHealthTypeData*>               HealthTypes;                                       // 0x88(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_HasHealthOfType* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class OakGame.GbxCondition_HasStatusEffect
class UGbxCondition_HasStatusEffect : public UGbxCondition
{
public:
	class UStatusEffectData*                     StatusEffectData;                                  // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        InstanceCount;                                     // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bQueryOwnerOnly;                                   // 0x94(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5731[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_HasStatusEffect* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class OakGame.GbxCondition_IsAbilityTimerActive
class UGbxCondition_IsAbilityTimerActive : public UGbxCondition
{
public:
	class UOakAbilityTimerData*                  Timer;                                             // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxAbility>               OptionalAbility;                                   // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_IsAbilityTimerActive* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_IsActionAbilityActive
class UGbxCondition_IsActionAbilityActive : public UGbxCondition_OakAbility_Base
{
public:
	TSubclassOf<class UOakActionAbility>         ActionAbilityClass;                                // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_IsActionAbilityActive* GetDefaultObj();

};

// 0x18 (0xA0 - 0x88)
// Class OakGame.GbxCondition_IsActionAbilityAugmentSlotted
class UGbxCondition_IsActionAbilityAugmentSlotted : public UGbxCondition
{
public:
	TSubclassOf<class UOakActionAbility>         ActionAbilityClass;                                // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakActionAbilityAugmentData*          AugmentData;                                       // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakActionAbilityAugmentSlotData*      AugmentSlotData;                                   // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_IsActionAbilityAugmentSlotted* GetDefaultObj();

};

// 0x108 (0x190 - 0x88)
// Class OakGame.GbxCondition_IsBetweenActors
class UGbxCondition_IsBetweenActors : public UGbxCondition
{
public:
	struct FGbxParam                             ForwardActor;                                      // 0x88(0x80)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             BehindActor;                                       // 0x108(0x80)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bCanBeAhead;                                       // 0x188(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanBeBehind;                                      // 0x189(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5743[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDistance;                                       // 0x18C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_IsBetweenActors* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_IsChallengeComplete
class UGbxCondition_IsChallengeComplete : public UGbxCondition
{
public:
	TSubclassOf<class UChallenge>                Challenge;                                         // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGbxCondition_IsChallengeComplete* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_IsInjuredSprinting
class UGbxCondition_IsInjuredSprinting : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_IsInjuredSprinting* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_IsLicensedToDLC
class UGbxCondition_IsLicensedToDLC : public UGbxCondition
{
public:
	class UDownloadableContentData*              ContentData;                                       // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_IsLicensedToDLC* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_IsMaybeFallingOffACliff
class UGbxCondition_IsMaybeFallingOffACliff : public UGbxCondition
{
public:
	float                                        TraceDistance;                                     // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TraceRadius;                                       // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_IsMaybeFallingOffACliff* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_IsMovingOnGround
class UGbxCondition_IsMovingOnGround : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_IsMovingOnGround* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_IsPassiveAbilityGradeMet
class UGbxCondition_IsPassiveAbilityGradeMet : public UGbxCondition
{
public:
	int32                                        MinGradeRequired;                                  // 0x88(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5759[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_IsPassiveAbilityGradeMet* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_IsPlayerClass
class UGbxCondition_IsPlayerClass : public UGbxCondition
{
public:
	class UPlayerClassIdentifier*                PlayerClass;                                       // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGbxCondition_IsPlayerClass* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_IsPlayerTiredFromSprinting
class UGbxCondition_IsPlayerTiredFromSprinting : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_IsPlayerTiredFromSprinting* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_IsWeaponHidden
class UGbxCondition_IsWeaponHidden : public UGbxCondition
{
public:
	uint8                                        WeaponSlotIndex;                                   // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseWeaponSlotIndex;                               // 0x89(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5765[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_IsWeaponHidden* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class OakGame.GbxCondition_LowOnAmmo
class UGbxCondition_LowOnAmmo : public UGbxCondition
{
public:
	class UGameResourceData*                     AmmoResource;                                      // 0x88(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bLoadedAmmo : 1;                                   // Mask: 0x1, PropSize: 0x10x90(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUsePercent : 1;                                   // Mask: 0x2, PropSize: 0x10x90(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_129 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_5769[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LowAmmoPercent;                                    // 0x94(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_LowOnAmmo* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_MapTravelID
class UGbxCondition_MapTravelID : public UGbxCondition
{
public:
	uint8                                        MapNameEnumIdx;                                    // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        ZoneNameEnumIdx;                                   // 0x89(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5770[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_MapTravelID* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_OakCharacterMovementCondition
class UGbxCondition_OakCharacterMovementCondition : public UGbxCondition
{
public:
	enum class EOakCharacterMovementConditionType Type;                                              // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5774[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_OakCharacterMovementCondition* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class OakGame.GbxCondition_OakStatusEffects_IsPresenting
class UGbxCondition_OakStatusEffects_IsPresenting : public UGbxCondition
{
public:
	class UOakElementalEffectData*               ElementalEffectData;                               // 0x88(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakStatusEffectPresentationData*      PresentationData;                                  // 0x90(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGbxCondition_OakStatusEffects_IsPresenting* GetDefaultObj();

};

// 0x50 (0xD8 - 0x88)
// Class OakGame.GbxCondition_StandInHasAbilityInSlot
class UGbxCondition_StandInHasAbilityInSlot : public UGbxCondition
{
public:
	TSoftClassPtr<class UOakPlayerAbility>       Ability;                                           // 0x88(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UOakPlayerAbilitySlotData> AbilitySlot;                                       // 0xB0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGbxCondition_StandInHasAbilityInSlot* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_VehicleBoostChargeCount
class UGbxCondition_VehicleBoostChargeCount : public UGbxCondition
{
public:
	enum class EBoostChargeCountComparisonMode   ComparisonMode;                                    // 0x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5778[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NeededChargeCount;                                 // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGbxCondition_VehicleBoostChargeCount* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class OakGame.GbxCondition_VehicleBoostPoolValue
class UGbxCondition_VehicleBoostPoolValue : public UGbxCondition
{
public:
	enum class EBoostPoolValueComparisonMode     ComparisonMode;                                    // 0x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_577A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BoostPoolValue;                                    // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bValueIsPercentage;                                // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_577B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_VehicleBoostPoolValue* GetDefaultObj();

};

// 0x40 (0xC8 - 0x88)
// Class OakGame.GbxCondition_VehicleHasEquippedParts
class UGbxCondition_VehicleHasEquippedParts : public UGbxCondition
{
public:
	TArray<TSoftClassPtr<class AOakVehicle>>     IncludedClassesFilter;                             // 0x88(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class AOakVehicle>>     ExcludedClassesFilter;                             // 0x98(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UVehiclePartData>> IncludedPartsFilter;                               // 0xA8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UVehiclePartData>> ExcludedPartsFilter;                               // 0xB8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGbxCondition_VehicleHasEquippedParts* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_WasPickupDroppedByPlayer
class UGbxCondition_WasPickupDroppedByPlayer : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_WasPickupDroppedByPlayer* GetDefaultObj();

};

// 0x0 (0x610 - 0x610)
// Class OakGame.GbxGFXConnectionWidget
class UGbxGFXConnectionWidget : public UGbxGFxHUDWidget
{
public:

	static class UClass* StaticClass();
	static class UGbxGFXConnectionWidget* GetDefaultObj();

	void OnConnectionStatusChanged(bool bIsLagging);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.GbxGFxCoreDialogBoxHelpers
class UGbxGFxCoreDialogBoxHelpers : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGbxGFxCoreDialogBoxHelpers* GetDefaultObj();

	class UGbxGFxDialogBox* ShowYesNoDialog(class AGbxPlayerController* Pc, class FText& HeaderText, class FText& MessageText, UDelegateProperty_& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, enum class EOakUIDialogBoxStyle DialogBoxStyle, int32 InitialChoiceIndex, bool CanCancel);
	class UGbxGFxDialogBox* ShowOkayDialog(class AGbxPlayerController* Pc, class FText& HeaderText, class FText& MessageText, UDelegateProperty_& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, enum class EOakUIDialogBoxStyle DialogBoxStyle);
	class UGbxGFxDialogBox* ShowDialog(class AGbxPlayerController* Pc, struct FOakUIDialogBoxInfo& DialogBoxInfo);
	class UGbxGFxDialogBox* ShowCustomDialog(class AGbxPlayerController* Pc, class FText& HeaderText, class FText& MessageText, TArray<struct FOakUIDialogBoxChoiceInfo>& Choices, UDelegateProperty_& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, enum class EOakUIDialogBoxStyle DialogBoxStyle, int32 InitialChoiceIndex, bool CanCancel);
	class UGbxGFxDialogBox* ShowConfirmCancelDialog(class AGbxPlayerController* Pc, class FText& HeaderText, class FText& MessageText, UDelegateProperty_& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, enum class EOakUIDialogBoxStyle DialogBoxStyle, bool CanCancel);
	class UGbxGFxDialogBox* ShowBlockingDialog(class AGbxPlayerController* Pc, class FText& HeaderText, class FText& MessageText, bool bBlocksAllUsers, class AGbxPlayerController* InTargetPC, bool bAllowedToDismiss, const class FString& InIdent);
	class UGbxGFxDialogBox* ShowAcceptRefuseDialog(class AGbxPlayerController* Pc, class FText& HeaderText, class FText& MessageText, UDelegateProperty_& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, enum class EOakUIDialogBoxStyle DialogBoxStyle, int32 InitialChoiceIndex, bool CanCancel);
	void HideDialog(class AGbxPlayerController* Pc, const class FString& DialogIndexIdent);
};

// 0xF0 (0x1B0 - 0xC0)
// Class OakGame.GbxGFxDialogBoxData
class UGbxGFxDialogBoxData : public UGbxGFxMenuData
{
public:
	struct FGbxGFxDialogBoxInfo                  DialogInfo;                                        // 0xC0(0xF0)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGbxGFxDialogBoxData* GetDefaultObj();

};

// 0x198 (0x800 - 0x668)
// Class OakGame.GbxGFxDialogBox
class UGbxGFxDialogBox : public UGbxGFxMenu
{
public:
	uint8                                        Pad_581E[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         HeaderTextField;                                   // 0x758(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         BodyTextField;                                     // 0x760(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxEditableTextField*              InputTextField;                                    // 0x768(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxGridScrollingList*              ContentPanel;                                      // 0x770(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         DialogBoxBackground;                               // 0x778(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         PlayerNameTextField;                               // 0x780(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         ProcessingIcon;                                    // 0x788(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InitialChoice;                                     // 0x790(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_581F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  HeaderText;                                        // 0x798(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	class FText                                  BodyText;                                          // 0x7B0(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	class FText                                  InputText;                                         // 0x7C8(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_5821[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           OnChoiceMadeDelegate;                              // 0x7F0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGbxGFxDialogBox* GetDefaultObj();

	void SetInputTextFormatArg(const class FString& ArgName, class FText& ReplacementText);
	void SetInputText(class FText& NewText, bool bClearFormatArgs);
	void SetHeaderTextFormatArg(const class FString& ArgName, class FText& ReplacementText);
	void SetHeaderText(class FText& NewText, bool bClearFormatArgs);
	void SetBodyTextFormatArg(const class FString& ArgName, class FText& ReplacementText);
	void SetBodyText(class FText& NewText, bool bClearFormatArgs);
	void OnDialogBoxItemClicked(class UGbxGFxButton* PressedButton, struct FGbxMenuInputEvent& InputInfo);
	void Dismiss();
};

// 0x10 (0x810 - 0x800)
// Class OakGame.GbxGFxDirectXUpgradeDialogBox
class UGbxGFxDirectXUpgradeDialogBox : public UGbxGFxDialogBox
{
public:
	class UGbxGFxSlider*                         MsgScrollBar;                                      // 0x800(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5825[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxGFxDirectXUpgradeDialogBox* GetDefaultObj();

};

// 0x40 (0x840 - 0x800)
// Class OakGame.GbxGFxEULA
class UGbxGFxEULA : public UGbxGFxDialogBox
{
public:
	uint8                                        Pad_582D[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxSlider*                         EULAScrollBar;                                     // 0x830(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_582E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxGFxEULA* GetDefaultObj();

	void OnSliderPositionUpdate(float SliderPercent);
};

// 0x30 (0x830 - 0x800)
// Class OakGame.GbxGFxReportPlayerDialogBox
class UGbxGFxReportPlayerDialogBox : public UGbxGFxDialogBox
{
public:
	uint8                                        Pad_5845[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FReportReason>                 ReportReasons;                                     // 0x810(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              ReportReasonList;                                  // 0x820(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5848[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxGFxReportPlayerDialogBox* GetDefaultObj();

	void OnReportReasonClicked(class UGbxGFxButton* PressedButton, struct FGbxMenuInputEvent& InputInfo);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.GbxInputActionReceiverDelegateBinding
class UGbxInputActionReceiverDelegateBinding : public UDynamicBlueprintBinding
{
public:

	static class UClass* StaticClass();
	static class UGbxInputActionReceiverDelegateBinding* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.GbxInputActionReceiverDelegateBinding_Continuous_Vector
class UGbxInputActionReceiverDelegateBinding_Continuous_Vector : public UGbxInputActionReceiverDelegateBinding
{
public:
	TArray<struct FBlueprintGbxInputActionReceiverDelegateBinding_Continuous_Vector> InputActionReceiverDelegateBindings;               // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGbxInputActionReceiverDelegateBinding_Continuous_Vector* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.GbxInputActionReceiverDelegateBinding_Discrete
class UGbxInputActionReceiverDelegateBinding_Discrete : public UGbxInputActionReceiverDelegateBinding
{
public:
	TArray<struct FBlueprintGbxInputActionReceiverDelegateBinding_Discrete> InputActionReceiverDelegateBindings;               // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGbxInputActionReceiverDelegateBinding_Discrete* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.GbxInputActionReceiverInterface
class IGbxInputActionReceiverInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGbxInputActionReceiverInterface* GetDefaultObj();

};

// 0x8 (0x618 - 0x610)
// Class OakGame.GearUpRespawnStation
class AGearUpRespawnStation : public ACheckpointTravelStationObject
{
public:
	bool                                         bAlreadyUsed;                                      // 0x610(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_585E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGearUpRespawnStation* GetDefaultObj();

};

// 0x8 (0x460 - 0x458)
// Class OakGame.GenericStandInActor
class AGenericStandInActor : public AActor
{
public:
	class UGbxActionComponent*                   ActionComponent;                                   // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGenericStandInActor* GetDefaultObj();

};

// 0x48 (0x5D0 - 0x588)
// Class OakGame.Geyser
class AGeyser : public AInteractiveObject
{
public:
	class UCapsuleComponent*                     CapsuleCollision;                                  // 0x588(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ParticleSystem;                                    // 0x590(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ParticleSystemAnticipation;                        // 0x598(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGeyserAlwaysOnData*                   GeyserData;                                        // 0x5A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoAdjustParticleToCapsuleHeight;                // 0x5A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGeyserState                      GeyserState;                                       // 0x5A9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5876[0x26];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGeyser* GetDefaultObj();

	void OnSteamOn();
	void OnSteamOff();
	void OnRep_GeyserState();
	void OnAnticipationStopped();
	void OnAnticipationStarted();
	enum class EGeyserState GetGeyserState();
};

// 0x90 (0xC0 - 0x30)
// Class OakGame.GeyserAlwaysOnData
class UGeyserAlwaysOnData : public UGbxDataAsset
{
public:
	struct FRuntimeFloatCurve                    VerticalAcceleration;                              // 0x30(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        MaxVelocity;                                       // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPullToCenter;                                     // 0xAC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_587E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToReachCenter;                                 // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FalloffRange;                                      // 0xB4(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_587F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGeyserAlwaysOnData* GetDefaultObj();

};

// 0x18 (0xD8 - 0xC0)
// Class OakGame.GeyserIntermittentData
class UGeyserIntermittentData : public UGeyserAlwaysOnData
{
public:
	struct FVector2D                             MinMaxStartDelay;                                  // 0xC0(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOn;                                            // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOff;                                           // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnticipationOnTime;                                // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostAnticipationOffTime;                           // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGeyserIntermittentData* GetDefaultObj();

};

// 0x170 (0x780 - 0x610)
// Class OakGame.GFxActionSkillWidget
class UGFxActionSkillWidget : public UGbxGFxHUDWidget
{
public:
	class FString                                GFxKEY_ActionSkillInner;                           // 0x610(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         ActionSkillInner;                                  // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GFxKEY_CantUseFlourish;                            // 0x628(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         CantUseFlourish;                                   // 0x638(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GFxKEY_StatusBar;                                  // 0x640(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxProgressBar*                    StatusBar;                                         // 0x650(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GFxKEY_CountdownTimerText;                         // 0x658(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5916[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GFxKEY_SkillIconContainer;                         // 0x680(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         SkillIconContainer;                                // 0x690(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5919[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         DynamicSkillIcon;                                  // 0x6A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GFxKEY_RemainingChargesDisplay;                    // 0x6A8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_591B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GFxKEY_RemainingChargesContainer;                  // 0x6D0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_591C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          ReadyForActivationColor;                           // 0x6F0(0x10)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RechargingOrCooldownColor;                         // 0x700(0x10)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESkillWidgetSlot                  SlotToWidgetMapping;                               // 0x710(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_591F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CoundownSecondsMaxValue;                           // 0x718(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CountdownSecondsAudioValue;                        // 0x71C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SlotIndex;                                         // 0x720(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5921[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SkillUsedFailAudioEventName;                       // 0x728(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOakPlayerAbilitySlotData*>     AssignedSlots;                                     // 0x730(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UOakActionAbility*                     TrackedActionAbility;                              // 0x740(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5923[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SkillFailedCharacterSpecific;                      // 0x760(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                IconKey;                                           // 0x768(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5924[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxActionSkillWidget* GetDefaultObj();

	void SetRemainingCharges(int32 NewRemainingCharges);
	void SetBarColor(const struct FLinearColor& InColor);
	void ResourceRegeneratingEvent();
	void ResourceDepletedEvent();
	void OnTrackedActionAbilityStateChanged(class UGbxAbility* UpdatedAbility);
	void OnActionSkillFailedActivation(class UOakActionAbility* InActionAbility, uint8 ErrorCode);
	void OnActionSkillChargeCountChanged(class UOakActionAbility* InActionAbility);
	void OnActionSkillActivated(class UOakActionAbility* InActionAbility);
	void OnActionAbilityAugmentChanged(TSubclassOf<class UOakActionAbility> ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void ForceResourceProgress(float PercentProgress);
	void ExtActivatedAnimationComplete();
};

// 0xB8 (0x570 - 0x4B8)
// Class OakGame.GFxDisplayedNotificationWidget
class UGFxDisplayedNotificationWidget : public UGbxGFxMovie
{
public:
	TArray<struct FGFxDisplayNotificationWidgetTextFields> TextFields;                                        // 0x4B8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, class FText>             TextFieldConstantsMap;                             // 0x4C8(0x50)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_592F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxMenuData*                          LinkedMenuData;                                    // 0x538(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakHUD*                               CachedOakHUD;                                      // 0x540(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         HintTextBox;                                       // 0x548(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                MenuName;                                          // 0x550(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                HintTextID;                                        // 0x560(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGFxDisplayedNotificationWidget* GetDefaultObj();

	void OnHideComplete();
	void LoadLinkedMenuData();
};

// 0x40 (0x5B0 - 0x570)
// Class OakGame.GFxAreaDiscoveredNotificationWidget
class UGFxAreaDiscoveredNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	bool                                         bUseNowEnteringMessaging;                          // 0x570(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5937[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  AreaDiscoveredText;                                // 0x578(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  NowEnteringText;                                   // 0x590(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UGbxTextField*                         TitleTextClip;                                     // 0x5A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxAreaDiscoveredNotificationWidget* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class OakGame.GFxBackpackWidgetListener
class UGFxBackpackWidgetListener : public UObject
{
public:
	uint8                                        Pad_5948[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UGbxGFxGridScrollingList> ListeningList;                                     // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UOakThumbnailManager>   ListeningThumbnailManager;                         // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxBackpackWidgetListener* GetDefaultObj();

	void OnThumbnailLoaded();
	void OnBackpackGridItemSelected(class UGbxGFxListCell* ListItem);
	void OnBackpackGridItemPressed(class UGbxGFxListCell* PressedItem, struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackGridItemClicked(class UGbxGFxListCell* ClickedItem, struct FGbxMenuInputEvent& InputInfo);
};

// 0x148 (0x450 - 0x308)
// Class OakGame.GFxBackpackWidgetItem
class UGFxBackpackWidgetItem : public UGbxGFxListCell
{
public:
	struct FOakUIInventoryItemDisplayInfo        DisplayInfo;                                       // 0x308(0x148)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGFxBackpackWidgetItem* GetDefaultObj();

};

// 0x58 (0x800 - 0x7A8)
// Class OakGame.GFxBillboardComponent
class UGFxBillboardComponent : public UStaticMeshComponent
{
public:
	class FName                                  TextureParameterName;                              // 0x7A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldBillboard;                                  // 0x7B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5953[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CustomTranslucentSortPriority;                     // 0x7B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ContentSize;                                       // 0x7B8(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DistanceScaleCurve;                                // 0x7C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DistanceAlphaCurve;                                // 0x7C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGbxPlayerController*                  TrackedPlayerController;                           // 0x7D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxMovie*                          CurrentMovie;                                      // 0x7D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x7E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              DisplayedMaterial;                                 // 0x7E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SizeOfPlaneMesh;                                   // 0x7F0(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5959[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxBillboardComponent* GetDefaultObj();

	void OnMovieStarted();
};

// 0x0 (0x610 - 0x610)
// Class OakGame.GFxBossBar
class UGFxBossBar : public UGbxGFxHUDWidget
{
public:

	static class UClass* StaticClass();
	static class UGFxBossBar* GetDefaultObj();

};

// 0x200 (0x370 - 0x170)
// Class OakGame.GFxBuddyWidget
class UGFxBuddyWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         WidgetAnims;                                       // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    HealthBar;                                         // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    ShieldBar;                                         // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    ReviveBar;                                         // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    DyingBar;                                          // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         GodRay;                                            // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_596E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class INameplateInfoProviderInterface> CurrentTarget;                                     // 0x1C0(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AActor*                                CurrentTargetActor;                                // 0x1D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    CurrentTargetClass;                                // 0x1D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBuddyWidgetState                 CachedBuddyWidgetState;                            // 0x1E0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBuddyWidgetFanfareState          CachedFanfareState;                                // 0x1E1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_596F[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InstanceName;                                      // 0x200(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5970[0x160];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxBuddyWidget* GetDefaultObj();

	void OnPlayerClassChanged();
	void OnLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnDownStateExitReasonChanged(enum class EExitDownStateReason ExitReason);
};

// 0xC0 (0x6D0 - 0x610)
// Class OakGame.GFxBuddyWidgetContainer
class UGFxBuddyWidgetContainer : public UGbxGFxHUDWidget
{
public:
	uint8                                        Pad_5977[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxBuddyWidget*                       PlayerBuddyWidgets[0x3];                           // 0x650(0x18)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxBuddyWidget*                       PetBuddyWidget;                                    // 0x668(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PlayerGodRays[0x3];                                // 0x670(0x18)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PetGodRays;                                        // 0x688(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGFxBuddyWidgetAnimQueueItem>  AnimQueue;                                         // 0x690(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	enum class EBuddyWidgetContainerAnimState    AnimState;                                         // 0x6A0(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5979[0x2F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxBuddyWidgetContainer* GetDefaultObj();

	void OnPlayerStateUpdated();
	void OnPlayerStateRemoved();
	void OnPlayerStateAdded(class AOakPlayerState* NewPlayerState);
	void OnPetSpawnStateChanged(class AActor* Pet);
	void NotifyPrimaryCharacterChanged(class AGbxCharacter* NewPrimaryCharacter);
	void ExtSlideFinished();
	void ExtFanfareAnimationFinished(const class FString& TargetName);
};

// 0x160 (0x770 - 0x610)
// Class OakGame.GFxChallengeProgressWidget
class UGFxChallengeProgressWidget : public UGbxGFxHUDWidget
{
public:
	float                                        WidgetDuration;                                    // 0x610(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayToThingTransitions;                           // 0x614(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxWidgetRolloutTime;                              // 0x618(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_599A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ChallengeCompleteText;                             // 0x620(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	enum class EGFxChallegeProgressWidgetState   WidgetState;                                       // 0x638(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_599D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxChallengeProgressItem             CurrentChallenge;                                  // 0x640(0xB8)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	float                                        WidgetStateTime;                                   // 0x6F8(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasStartedThingTransitions;                       // 0x6FC(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_599F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AChallengeManager>      ChallengeManager;                                  // 0x700(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UChallengesComponent>   ChallengesComponent;                               // 0x708(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         WidgetWrapper;                                     // 0x710(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         Widget;                                            // 0x718(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         LabelText;                                         // 0x720(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         BodyText;                                          // 0x728(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    ProgressBarClip;                                   // 0x730(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ProgressText;                                      // 0x738(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         TypeIconClip;                                      // 0x740(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ScanlinesClip;                                     // 0x748(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGFxChallengeProgressItem>     ChallengesQueue;                                   // 0x750(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                         bBlockedByTutorial;                                // 0x760(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59A5[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxChallengeProgressWidget* GetDefaultObj();

	void OnInputDeviceChanged();
	void OnChallengeUpdated(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass, int32 NewValue, bool bDisplayNotification, bool bCompleted);
	void OnChallengeCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnChallengeChildCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnChallengeActivated(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void ExtOnUpdateThingComplete(const class FString& Thing);
	void ExtOnUpdateThing(const class FString& Thing);
	void ExtOnRolloutComplete();
	void ExtOnRollOnComplete();
};

// 0x20 (0x630 - 0x610)
// Class OakGame.GFxCheckpointWidget
class UGFxCheckpointWidget : public UGbxGFxHUDWidget
{
public:
	int32                                        NumCheckpointIdleLoops;                            // 0x610(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECheckpointWidgetState            CurrentState;                                      // 0x614(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECheckpointWidgetState            NextState;                                         // 0x615(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59AD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CheckpointLoopsRemaining;                          // 0x618(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         InnerClip;                                         // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         CheckpointTextClip;                                // 0x628(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxCheckpointWidget* GetDefaultObj();

	void PlayCheckpointAnimation();
	void AnimationComplete(const class FString& AnimationName);
};

// 0x48 (0x350 - 0x308)
// Class OakGame.GFxColorPickerItem
class UGFxColorPickerItem : public UGbxGFxListCell
{
public:
	struct FColor                                AssociatedColor;                                   // 0x308(0x4)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_59B3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         DefaultColorClip;                                  // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         TopHintWrapper;                                    // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxHintWidget*                     TopHint;                                           // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         TopTextField;                                      // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         BottomHintWrapper;                                 // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxHintWidget*                     BottomHint;                                        // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         BottomTextField;                                   // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_59B6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxColorPickerItem* GetDefaultObj();

};

// 0x28 (0x2F0 - 0x2C8)
// Class OakGame.GFxColorPickerSwatch
class UGFxColorPickerSwatch : public UGbxGFxButton
{
public:
	bool                                         bIsSplit;                                          // 0x2C8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_59B8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         ColorSquare;                                       // 0x2D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ColorSquareSplit;                                  // 0x2D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsPickingForThis;                                 // 0x2E0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59BA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AssignedColorListIndex;                            // 0x2E4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        AssignedSplitColorListIndex;                       // 0x2E8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59BB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxColorPickerSwatch* GetDefaultObj();

};

// 0x100 (0x270 - 0x170)
// Class OakGame.GFxColorPickerWidget
class UGFxColorPickerWidget : public UGbxGFxObject
{
public:
	uint8                                        Pad_59DB[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxGridScrollingList*              ColorList;                                         // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         SelectionsWrapper;                                 // 0x1B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxColorPickerSwatch*                 PrimarySwatch;                                     // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         PrimaryLabel;                                      // 0x1C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxColorPickerSwatch*                 SecondarySwatch;                                   // 0x1D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         SecondaryLabel;                                    // 0x1D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxColorPickerSwatch*                 TertiarySwatch;                                    // 0x1E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         TertiaryLabel;                                     // 0x1E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxColorPickerSwatch*                 CurrentSwatch;                                     // 0x1F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         LeftSwatchArrow;                                   // 0x1F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     LeftSwatchArrowHint;                               // 0x200(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         RightSwatchArrow;                                  // 0x208(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     RightSwatchArrowHint;                              // 0x210(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxMenu*                           OwningMenu;                                        // 0x218(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EColorPickerMode                  CurrentMode;                                       // 0x220(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_59E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FColor>                        AvailableColors;                                   // 0x228(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FColor>                        PrimarySwatchDefaults;                             // 0x238(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FColor>                        SecondarySwatchDefaults;                           // 0x248(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FColor>                        TertiarySwatchDefaults;                            // 0x258(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_59E5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxColorPickerWidget* GetDefaultObj();

	void OnTopColorSelected(class UGbxGFxListCell* ClickedItem, struct FGbxMenuInputEvent& InputInfo);
	void OnTertiaryColorSwatchSelected(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnSwatchFocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnSecondaryColorSwatchSelected(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnPrimaryColorSwatchSelected(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnColorFocused(class UGbxGFxListCell* ClickedItem);
	void OnBottomColorSelected(class UGbxGFxListCell* ClickedItem, struct FGbxMenuInputEvent& InputInfo);
};

// 0x58 (0x510 - 0x4B8)
// Class OakGame.GFxControllerDisconnectMovie
class UGFxControllerDisconnectMovie : public UGbxGFxMovie
{
public:
	class FText                                  ControllerDisconnectHeaderText;                    // 0x4B8(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  ControllerDisconnectBodyText;                      // 0x4D0(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ContentClip;                                       // 0x4E8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         WindowFrameClip;                                   // 0x4F0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         HeaderTextFieldClip;                               // 0x4F8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         BodyTextFieldClip;                                 // 0x500(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TotalNumDisconnectMovies;                          // 0x508(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59F1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxControllerDisconnectMovie* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class OakGame.OakUIControllerDisconnectManager
class UOakUIControllerDisconnectManager : public UObject
{
public:
	TArray<struct FOakUIControllerConnectedState> ConnectedStates;                                   // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59F6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIControllerDisconnectManager* GetDefaultObj();

};

// 0x148 (0x7B0 - 0x668)
// Class OakGame.GFxCreditsMenu
class UGFxCreditsMenu : public UGbxGFxMenu
{
public:
	TArray<struct FCreditsSection>               CreditsSections;                                   // 0x668(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        SizeTextureCache;                                  // 0x678(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSoftObjectPath>               CreditsImages;                                     // 0x680(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        InsertPosYDelta;                                   // 0x690(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NumCreditsLinesCached;                             // 0x694(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FCreditsTextureCache>          CreditsTextureCache;                               // 0x698(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         Image;                                             // 0x6A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         CreditsContainer;                                  // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FCreditsLineInfo>              CreditsLineInfos;                                  // 0x6B8(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FCreditsTextFieldInfo>         TextFieldInfos;                                    // 0x6C8(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_59FD[0xD8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxCreditsMenu* GetDefaultObj();

	void PushCreditsMenuFor(class AOakPlayerController* Target, const struct FLatentActionInfo& LatentInfo, bool bDismissWhenEndReached, class UGbxMenuData* OverrideCreditsMenuData);
	void OnImageLoaded();
};

// 0x30 (0x5A0 - 0x570)
// Class OakGame.GFxCrewChallengeCompletedNotificationWidget
class UGFxCrewChallengeCompletedNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	uint8                                        Pad_59FE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         CrewChallengeCompletedText;                        // 0x578(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         CrewChallengeCompletedTextShadow;                  // 0x580(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         CrewChallengeTitleText;                            // 0x588(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_59FF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxCrewChallengeCompletedNotificationWidget* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class OakGame.CrosshairColorEnumMapToFrames
class UCrosshairColorEnumMapToFrames : public UGbxDataAsset
{
public:
	TMap<enum class ECrosshairColorsEnum, int32> MapStringToFrames;                                 // 0x30(0x50)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCrosshairColorEnumMapToFrames* GetDefaultObj();

};

// 0x240 (0x850 - 0x610)
// Class OakGame.GFxCrosshairWidget
class UGFxCrosshairWidget : public UGbxGFxHUDWidget
{
public:
	uint8                                        Pad_5A0F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCrosshairDataAsset*                DefaultCrosshairData;                              // 0x618(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECrosshairType                    CrosshairEnumType;                                 // 0x620(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5A10[0xB7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AWeapon*                               CachedWeapon;                                      // 0x6D8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AWeapon*>                       CachedWeapons;                                     // 0x6E0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UWeaponZoomComponent*                  CachedZoomComponent;                               // 0x6F0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                CrosshairActor;                                    // 0x6F8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                CurrentTarget;                                     // 0x700(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class IGbxWeaponUserInterface> CachedWeaponUser;                                  // 0x708(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FString                                CrosshairContainerInstanceName;                    // 0x718(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MeleeCrosshairInstanceName;                        // 0x728(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ActionSkillCrosshairInstanceName;                  // 0x738(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                SprintCrosshairInstanceName;                       // 0x748(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                DefaultCrosshairInstanceName;                      // 0x758(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class ECrosshairColorsEnum, struct FLinearColor> CrosshairColorMap;                                 // 0x768(0x50)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                        MaxRepresentableAngle;                             // 0x7B8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A11[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakReticleFeedbackWidget*             FeedbackWidget;                                    // 0x7C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A12[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxCrosshairWidget* GetDefaultObj();

	void UpdateWeaponSlot();
	void UpdateLightForDamageType();
	void SetLockedTargetClipsState(bool bIsEnabled);
	void SetCrosshairColor(enum class ECrosshairColorsEnum NewColor);
	void OnZoomed(uint8 ZoomLevel);
	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnTargetLockChange(class AWeapon* EventWeapon, bool bInLockedOn);
	void OnSwitchedWeaponMode();
	void OnNotZoomed();
	void OnMeleeStateChangeEvent(bool bMeleePossible);
	void HandleCrosshairSpread();
	enum class ECrosshairColorsEnum FindCrosshairColor();
	void CheckForCrosshairVisibility();
	void ChangeCrosshairType(class UGbxCrosshairDataAsset* NewCrosshairDataAsset);
	void ChangeCrosshairByString(const class FString& NewFrame);
};

// 0x110 (0x280 - 0x170)
// Class OakGame.GFxCurrencyCounterClip
class UGFxCurrencyCounterClip : public UGbxGFxObject
{
public:
	uint8                                        Pad_5A18[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGFxCurrencyCounterCategoryData> Categories;                                        // 0x188(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UGFxUISpinnerWidget*>           SpinnerWidgets;                                    // 0x198(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A1A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentDisplayedValue;                             // 0x1C8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGFxCurrencyCounterState          CurrencyCounterState;                              // 0x1CC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          HoldOnValueTimerHandle;                            // 0x1D0(0x8)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A1C[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         AnimationContainer;                                // 0x228(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGFxCurrencyCounterQueueInfo>  CounterQueue;                                      // 0x230(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        TotalSpinnerHeightOverride;                        // 0x240(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CostSpinTime;                                      // 0x244(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PauseOnNewValueTime;                               // 0x248(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A21[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bGamePaused;                                       // 0x260(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A22[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalSliders;                                      // 0x264(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A23[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxCurrencyCounterClip* GetDefaultObj();

	void OnPostChangeDisplayHoldComplete();
	void OnDisplayValueAnimationComplete();
	void OnCurrencyQuantityChanged(class UInventoryCategoryData* ItemCategory, int32 Quantity);
};

// 0x50 (0x660 - 0x610)
// Class OakGame.GFxCurrencyWidget
class UGFxCurrencyWidget : public UGbxGFxHUDWidget
{
public:
	float                                        TotalSpinnerHeightOverride;                        // 0x610(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PauseOnNewValueTime;                               // 0x614(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A28[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CostSpinTime;                                      // 0x61C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayAfterResurrect;                               // 0x620(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CostSpinTimeOnResurrect;                           // 0x624(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PauseOnNewValueTimeOnResurect;                     // 0x628(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A2A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxCurrencyCounterClip*               CurrencyCounter;                                   // 0x630(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AnimationContainerID;                              // 0x638(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryListComponent*               InventoryComponent;                                // 0x648(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter*                         OakCharacter;                                      // 0x650(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A2B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxCurrencyWidget* GetDefaultObj();

	void OnPauseStateChanged(bool bPaused);
	void OnOwnerResurrected(int32 CashLost);
	void OnDisplayCurrencyWidgetOnHUD(class UGbxInventoryCategoryData* CurrencyType);
	void OnCurrencyQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void OnCurrencyDisplayCompleted();
};

// 0x100 (0x270 - 0x170)
// Class OakGame.GFxEchologWidgetBase
class UGFxEchologWidgetBase : public UGbxGFxObject
{
public:
	class FString                                GFxKEY_SpeakerImage;                               // 0x170(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         SkinWrapper;                                       // 0x180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         SpeakerImage;                                      // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GFxKEY_PassiveAnimation;                           // 0x190(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A34[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GFxKEY_SpeakerName;                                // 0x1B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EEchoPerformanceMode              AssociatedPerformanceMode;                         // 0x1C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A36[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxMovie*                          CurrentlyDisplayedMovie;                           // 0x1C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxGFxMediaPlayerConfig              MediaPlayerConfig;                                 // 0x1D0(0x30)(Edit, NativeAccessSpecifierPublic)
	bool                                         bEchoIsPlaying;                                    // 0x200(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EECHOLOGWidgetState               CurrentState;                                      // 0x201(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A38[0x3E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         CachedSpeakerImage;                                // 0x240(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CachedMoodKeyframe;                                // 0x248(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxMediaPlayer*                    MediaPlayer;                                       // 0x258(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMediaIsPlaying;                                   // 0x260(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCloseMediaWhenEchoEnds;                           // 0x261(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEchoIsShown;                                      // 0x262(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A39[0xD];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxEchologWidgetBase* GetDefaultObj();

	void OnMediaMovieStopped();
	void OnMediaMovieStarted();
	void OnEchoStarted(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, const class FString& MoodKeyframe, const class FString& VoGMoodKey, enum class EVoiceOfGodSpeaker VoGSpeakerID, bool bIsNewEchoLog);
	void OnEchoFinished(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, bool bCompleted);
};

// 0x110 (0x720 - 0x610)
// Class OakGame.GFxECHOWidget
class UGFxECHOWidget : public UGbxGFxHUDWidget
{
public:
	class FString                                GFxKEY_SpeakerImage;                               // 0x610(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         SpeakerImage;                                      // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GFxKEY_PassiveAnimation;                           // 0x628(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A40[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GFxKEY_SpeakerName;                                // 0x648(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EEchoPerformanceMode              AssociatedPerformanceMode;                         // 0x658(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A41[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxMovie*                          CurrentlyDisplayedMovie;                           // 0x660(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxGFxMediaPlayerConfig              MediaPlayerConfig;                                 // 0x668(0x30)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class EECHOWidgetState                  CurrentState;                                      // 0x698(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A42[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         CachedSpeakerImage;                                // 0x6D8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CachedMoodKeyframe;                                // 0x6E0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxMediaPlayer*                    MediaPlayer;                                       // 0x6F0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEchoIsPlaying;                                    // 0x6F8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMediaIsPlaying;                                   // 0x6F9(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCloseMediaWhenEchoEnds;                           // 0x6FA(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A44[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxEchologWidgetBase*                 EchoWidgetBase;                                    // 0x700(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                EchoStringID;                                      // 0x708(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A45[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxECHOWidget* GetDefaultObj();

	void OnMediaMovieStopped();
	void OnMediaMovieStarted();
	void OnEchoStarted(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, const class FString& MoodKeyframe, const class FString& VoGMoodKey, enum class EVoiceOfGodSpeaker VoGSpeakerID, bool bIsNewEcho);
	void OnEchoFinished(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, bool bCompleted);
};

// 0x80 (0x300 - 0x280)
// Class OakGame.GFxEditableCurrencyCounterClip
class UGFxEditableCurrencyCounterClip : public UGFxCurrencyCounterClip
{
public:
	uint8                                        Pad_5A46[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxMenu*                           OwningMenu;                                        // 0x290(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A47[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxEditableTextField*              CurrencyInputTextField;                            // 0x2B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A48[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxEditableCurrencyCounterClip* GetDefaultObj();

};

// 0x20 (0x630 - 0x610)
// Class OakGame.GFxFeedWidget
class UGFxFeedWidget : public UGbxGFxHUDWidget
{
public:
	float                                        WidgetDuration;                                    // 0x610(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxWidgetRolloutTime;                              // 0x614(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxFeedWidgetState               WidgetState;                                       // 0x618(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WidgetStateTime;                                   // 0x61C(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         Widget;                                            // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         LabelText;                                         // 0x628(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxFeedWidget* GetDefaultObj();

	void ExtOnRolloutComplete();
};

// 0x70 (0x680 - 0x610)
// Class OakGame.GFxFightForYourLifeWidget
class UGFxFightForYourLifeWidget : public UGbxGFxHUDWidget
{
public:
	class UFightForYourLifeComponent*            AssociatedFFYLComponent;                           // 0x610(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5A59[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         IconSwitcher;                                      // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         LabelContainer;                                    // 0x628(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         MainLabel;                                         // 0x630(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    DyingBar;                                          // 0x638(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    ReviveBar;                                         // 0x640(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHoldToGiveUpTime;                               // 0x648(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5A5B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         ActionText;                                        // 0x650(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxHintWidget*                     GiveUpHint;                                        // 0x658(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxHUDStateData*                      FFYLHUDState;                                      // 0x660(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5A5E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxFightForYourLifeWidget* GetDefaultObj();

	void OnRevivingStop(bool IsHealed);
	void OnRevivingStart();
	void OnRevivingNonLocalStop(class UFightForYourLifeComponent* OtherFFYL);
	void OnInputDeviceChanged();
	void OnGiveUpStop();
	void OnDownStop();
	void OnDownStart();
	void OnDownFinish();
	void OnBeingRevivedStop();
	void OnBeingRevivedStart();
	void OnActionSkillCoolingDown(class UOakActionAbility* InActionAbility);
	void OnActionSkillActivated(class UOakActionAbility* InActionAbility);
	void OnAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
};

// 0xA8 (0x710 - 0x668)
// Class OakGame.GFxFlavorTextMenu
class UGFxFlavorTextMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	class AConditionalFlavorTextIO*              CachedFlavorTextIO;                                // 0x668(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         DescriptionTextBox;                                // 0x670(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         TitleTextBox;                                      // 0x678(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxSlider*                         ScrollBar;                                         // 0x680(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         DescriptionTextMask;                               // 0x688(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTextElementCondition>         CachedFlavorTextData;                              // 0x690(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class FText                                  CachedTitleText;                                   // 0x6A0(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	class FString                                DescriptionTextBoxClipID;                          // 0x6B8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                TitleTextBoxClipID;                                // 0x6C8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ScrollBarClipID;                                   // 0x6D8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                DescriptionTextMaskClipID;                         // 0x6E8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  BackOutText;                                       // 0x6F8(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxFlavorTextMenu* GetDefaultObj();

	void InitWithData(const TArray<struct FTextElementCondition>& FlavorTextData, class FText TitleText, class AConditionalFlavorTextIO* FlavorTextIO);
};

// 0x18 (0x4D0 - 0x4B8)
// Class OakGame.GFxFriendsInArea
class UGFxFriendsInArea : public UGbxGFxMovie
{
public:
	class UGbxTextField*                         FriendCount;                                       // 0x4B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A67[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxFriendsInArea* GetDefaultObj();

};

// 0x88 (0x6F0 - 0x668)
// Class OakGame.GFxFriendsInAreaListMenu
class UGFxFriendsInAreaListMenu : public UGbxGFxMenu
{
public:
	struct FVector2D                             ContextMenuOffsetExpandingDown;                    // 0x668(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ContextMenuOffsetExpandingUp;                      // 0x670(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ContextMenuScale;                                  // 0x678(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGFxFriendsInAreaListMenu_Adjustment  ContextMenuAdjustmentHorizontalSplitScreen;        // 0x680(0x10)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_5A6C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxGridScrollingList*              FriendList;                                        // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         HeaderLabel;                                       // 0x6B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         LocationLabel;                                     // 0x6C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         HeaderFriendCount;                                 // 0x6C8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CachedMapName;                                     // 0x6D0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A6D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxFriendsInAreaListMenu* GetDefaultObj();

	void OnFriendSelected(class UGbxGFxListCell* ListItem);
	void OnFriendClicked(class UGbxGFxListCell* ListItem, struct FGbxMenuInputEvent& InputInfo);
};

// 0x78 (0x380 - 0x308)
// Class OakGame.GFxFriendsInAreaListCell
class UGFxFriendsInAreaListCell : public UGbxGFxListCell
{
public:
	uint8                                        Pad_5A71[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerName;                                        // 0x328(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5A72[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         LevelText;                                         // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PlayerIcon;                                        // 0x348(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FriendNameText;                                    // 0x350(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FriendInfoText;                                    // 0x358(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         PartyInfoText;                                     // 0x360(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A76[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxFriendsInAreaListCell* GetDefaultObj();

};

// 0x88 (0x6F0 - 0x668)
// Class OakGame.GFxFullScreenMovieMenu
class UGFxFullScreenMovieMenu : public UGbxGFxMenu
{
public:
	struct FGbxGFxMediaPlayerConfig              GFxMediaPlayerConfig;                              // 0x668(0x30)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UGbxGFxMediaPlayer*                    GFxMediaPlayer;                                    // 0x698(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMediaSource*                          MediaSourceObject;                                 // 0x6A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMediaSource>           MediaSourceSoftPtr;                                // 0x6A8(0x28)(BlueprintReadOnly, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bScaleformHasStarted;                              // 0x6D0(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMoviePlaybackComplete;                            // 0x6D1(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A78[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxFullScreenMovieMenu* GetDefaultObj();

	void OnMoviePlaybackComplete();
};

// 0xA0 (0x210 - 0x170)
// Class OakGame.GFxGrenadeIndicatorClip
class UGFxGrenadeIndicatorClip : public UGbxGFxObject
{
public:
	uint8                                        Pad_5A79[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IndicatorSpread;                                   // 0x1E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DangerRadiusScalar;                                // 0x1E4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GrenadeDangerMinimumRadius;                        // 0x1E8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxGrenadeIndicatorMode          IndicatorMode;                                     // 0x1EC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AOakProjectile>         TrackedGrenade;                                    // 0x1F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               PlayerLocation;                                    // 0x1F8(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              PlayerRotation;                                    // 0x204(0xC)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxGrenadeIndicatorClip* GetDefaultObj();

};

// 0x40 (0x650 - 0x610)
// Class OakGame.GFxGrenadeIndicatorWidget
class UGFxGrenadeIndicatorWidget : public UGbxGFxHUDWidget
{
public:
	float                                        IndicatorDistanceFromCrosshair;                    // 0x610(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5A7C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IndicatorClass;                                    // 0x618(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTrackedGrenades;                                // 0x628(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5A7D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGFxGrenadeIndicatorClip*>      TrackedGrenades;                                   // 0x630(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FGFxGrenadeIndicatorSortItem>  SortHelper;                                        // 0x640(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxGrenadeIndicatorWidget* GetDefaultObj();

	void EndTrackingGrenades();
	void BeginTrackingGrenades();
};

// 0xA0 (0x6B0 - 0x610)
// Class OakGame.GFxInteractionPrompt
class UGFxInteractionPrompt : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxHintWidget*                     HintWidgetPrimary;                                 // 0x610(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         InteractionLabelPrimary;                           // 0x618(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         ModeIconsPrimary;                                  // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxHintWidget*                     HintWidgetSecondary;                               // 0x628(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         InteractionLabelSecondary;                         // 0x630(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         ModeIconsSecondary;                                // 0x638(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             DefaultGlyphSize;                                  // 0x640(0x8)(Edit, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUseComponent*                         UseComponent;                                      // 0x648(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUsableComponent*                      CachedUsableComponent;                             // 0x650(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUsabilityInfo                        CachedUsabilityInfo;                               // 0x658(0x40)(BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A90[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryListComponent*               CachedInventoryList;                               // 0x6A0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPromptLinesLayouts               LinesLayout;                                       // 0x6A8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A92[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxInteractionPrompt* GetDefaultObj();

	void UpdateUsabilityTextColor();
	void OnUsedSecondaryHold(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedSecondary(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedPrimaryHold(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedPrimary(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsabilityChanged(class UUsableComponent* NewUsableComponent, struct FUsabilityInfo& InUsabilityInfo);
	void OnRevivingStop(bool IsHealed);
	void OnRevivingStart();
	void OnInputDeviceChanged();
	void OnHoldUseStopped();
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
	void OnCurrencyQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
};

// 0x90 (0x200 - 0x170)
// Class OakGame.GFxInventoryFeedbackWidget
class UGFxInventoryFeedbackWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         AnimUnlockedClip;                                  // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A96[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         AnimDroppedClip;                                   // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5A97[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxInventoryFeedbackWidget* GetDefaultObj();

};

// 0x2B0 (0x700 - 0x450)
// Class OakGame.GFxInventoryItemWidget
class UGFxInventoryItemWidget : public UGFxBackpackWidgetItem
{
public:
	bool                                         bIsNewItemWidgetContent;                           // 0x450(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A99[0x237];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxHintWidget*                     ButtonHelpClip;                                    // 0x688(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EOakInventoryItemWidgetDisabledReason DisabledReason;                                    // 0x690(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEquippingToThis;                                  // 0x691(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A9A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventorySlotData*                    SlotData;                                          // 0x698(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FilterTypeId;                                      // 0x6A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             WidgetLineAnchorLocationAbsolute;                  // 0x6A8(0x8)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             WidgetLineAnchorLocationViewport;                  // 0x6B0(0x8)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAnchorLocationValid;                              // 0x6B8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A9B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakThumbnailManagerIcon              IconData;                                          // 0x6C0(0x28)(Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseCosmeticLabel;                                 // 0x6E8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAppearsDisabled;                                  // 0x6E9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseTrashButtonStates;                             // 0x6EA(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5A9C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastFavoriteTrashFrame;                            // 0x6F0(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGFxInventoryItemWidget* GetDefaultObj();

};

// 0xF0 (0x260 - 0x170)
// Class OakGame.GFxInventoryMenuAmmoWidget
class UGFxInventoryMenuAmmoWidget : public UGbxGFxObject
{
public:
	uint8                                        Pad_5A9D[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxInventoryMenuAmmoWidget* GetDefaultObj();

};

// 0x0 (0xC0 - 0xC0)
// Class OakGame.OakGFxMenuData
class UOakGFxMenuData : public UGbxGFxMenuData
{
public:

	static class UClass* StaticClass();
	static class UOakGFxMenuData* GetDefaultObj();

};

// 0x40 (0x100 - 0xC0)
// Class OakGame.GFxStatusMenuSubmenuData
class UGFxStatusMenuSubmenuData : public UOakGFxMenuData
{
public:
	class FString                                IconFrameString;                                   // 0xC0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  StatusMenuSubMenuName;                             // 0xD0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  StandInConfigName;                                 // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MenuID;                                            // 0xF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MenuPriority;                                      // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5AA1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxStatusMenuSubmenuData* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class OakGame.GFxInventoryMenuData
class UGFxInventoryMenuData : public UGFxStatusMenuSubmenuData
{
public:

	static class UClass* StaticClass();
	static class UGFxInventoryMenuData* GetDefaultObj();

};

// 0x20 (0x690 - 0x670)
// Class OakGame.GFxStatusMenuSubmenu
class UGFxStatusMenuSubmenu : public UGbxGFxMenuSwitcherSubmenu
{
public:
	float                                        IntroTimeout;                                      // 0x670(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuttroTimeout;                                     // 0x674(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPause;                                       // 0x678(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMapMesh;                                      // 0x679(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowMapMenuAxisInput;                            // 0x67A(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHidStatusMenuForPauseMenu;                        // 0x67B(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayingIntro;                                   // 0x67C(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayingOuttro;                                  // 0x67D(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AA5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransitionTimeRemaining;                           // 0x680(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGFxStatusMenuTransitionReason    QueuedTransitionAction;                            // 0x684(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AA6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  QueuedTransitionSwitchToMenu;                      // 0x688(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGFxStatusMenuSubmenu* GetDefaultObj();

	void OnOuttroAnimationComplete();
	void OnIntoAnimationComplete();
};

// 0x8D0 (0xF60 - 0x690)
// Class OakGame.GFxInventoryMenu
class UGFxInventoryMenu : public UGFxStatusMenuSubmenu
{
public:
	struct FGFxInventoryMenuConfig               Config;                                            // 0x690(0x298)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGFxInventoryMenuUnlockLookupItem> ManufacturerToUnlockTextLookupTable;               // 0x928(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             BackpackCellSizeTwoColumn;                         // 0x938(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             BackpackCellSpacingTwoColumn;                      // 0x940(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             BackpackCellSizeOneColumn;                         // 0x948(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             BackpackCellSpacingOneColumn;                      // 0x950(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  AmmoLabelText;                                     // 0x958(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UObject>                KeyBindCategory_Common;                            // 0x970(0x28)(BlueprintReadOnly, Deprecated, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDelayTimeToLoadThumbnails;                      // 0x998(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxInventoryMenuSwapItem             ItemSwapSource;                                    // 0x9A0(0x14)(BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UGFxInventoryItemWidget> LastFocusedPaperDollWidget;                        // 0x9B4(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5ABA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InventoryEventDisabledCount;                       // 0x9CC(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGFxInventoryMenuEquipToSlot>  PaperDollSlots;                                    // 0x9D0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UGFxInventoryMenuTrinketButton*        EquippingToTrinketButton;                          // 0x9E0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentFilterIndex;                                // 0x9E8(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UInventoryCategoryData> CurrentFilterCategory;                             // 0x9EC(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UInventorySlotData>     CurrentFilterSlotData;                             // 0x9F4(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5ABB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakInventoryMenuFilter>       CurrentFilters;                                    // 0xA00(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UOakThumbnailManager*                  IconManager;                                       // 0xA10(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakThumbnailManager*                  TrinketThumbnailManager;                           // 0xA18(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxLoadedItemCardBase*                LeftItemCard;                                      // 0xA20(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxLoadedItemCardBase*                RightItemCard;                                     // 0xA28(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UGFxInventoryItemWidget> LeftItemCardTargetWidget;                          // 0xA30(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UGFxInventoryItemWidget> RightItemCardTargetWidget;                         // 0xA38(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxInventoryFeedbackWidget*           PaperDollFeedbackWidget;                           // 0xA40(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxInventoryFeedbackWidget*           BackpackFeedbackWidget;                            // 0xA48(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGFxBackpackWidget                    LargeBackpackWidget;                               // 0xA50(0x198)(BlueprintReadOnly, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FGFxBackpackWidget                    SmallBackpackWidget;                               // 0xBE8(0x198)(BlueprintReadOnly, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UGbxGFxButton*                         BackpackBrowseButton;                              // 0xD80(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         BackpackClip;                                      // 0xD88(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5ABD[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxHintWidget*                     BackpackNextHintClip;                              // 0xDC0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     BackpackPrevHintClip;                              // 0xDC8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         EquippedSlotsClip;                                 // 0xDD0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxButton*                         SplitScreenPaperDollPageUpButton;                  // 0xDD8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxButton*                         SplitScreenPaperDollPageDownButton;                // 0xDE0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         SplitScreenPaperDollPageBackground;                // 0xDE8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxTutorialWidget*                    TutorialWidget;                                    // 0xDF0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGFxInventoryMenuFocusSide        FocusSide;                                         // 0xDF8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGFxInventoryMenuBackpackSize     BackpackSize;                                      // 0xDF9(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInspecting;                                     // 0xDFA(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBeastmaster;                                    // 0xDFB(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasExtraArtifacts;                                // 0xDFC(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStandInHasBeenShown;                              // 0xDFD(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5ABF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInventoryListEntryHandle>     CurrentInventory;                                  // 0xE00(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AC0[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentInventoryMaxSize;                           // 0xE38(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        UnequipToTargetIndex;                              // 0xE3C(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PaperDollElementalIndex;                           // 0xE40(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BackpackElementalIndex;                            // 0xE44(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBackpackIsTrinkets;                               // 0xE48(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AC1[0x5F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         HeaderTextClip;                                    // 0xEA8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxCurrencyCounterClip*               CashCounterClip;                                   // 0xEB0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AC2[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxInventoryMenu* GetDefaultObj();

	void OnThumbnailLoaded();
	void OnSplitScreenPaperDollPageButtonClicked(class UGbxGFxButton* UserWidget, struct FGbxMenuInputEvent& InputInfo);
	void OnRefreshEverything();
	void OnPaperDollTrinketClicked(class UGbxGFxButton* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnPaperDollSlotClicked(class UGbxGFxButton* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnPaperDollItemCardReady();
	void OnPaperDollarItemCardElementalUpdated(const class FString& NewElementalFrameName);
	void OnInventoryQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void OnInventoryItemUpdated(struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryItemUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnInventoryItemRemoved(struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryItemEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnInventoryItemAdded(struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryCustomizationUnlocked(class UOakInventoryCustomizationPartData* CustomizationPart);
	void OnCurrentWeaponChanged(class AWeapon* EquippedWeapon, class AWeapon* LastWeapon);
	void OnCurrentWeaponAmmoCountChanged();
	void OnBrowseBackpackButtonClicked(class UGbxGFxButton* UserWidget, struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackSelectionChanged(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBackpackItemClicked(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackItemCardReady();
	void OnBackpackItemCardElementalUpdated(const class FString& NewElementalFrameName);
};

// 0x68 (0x330 - 0x2C8)
// Class OakGame.GFxInventoryMenuTrinketButton
class UGFxInventoryMenuTrinketButton : public UGbxGFxButton
{
public:
	uint8                                        Pad_5AC3[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsEquippingToThis;                                // 0x328(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5AC4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxInventoryMenuTrinketButton* GetDefaultObj();

};

// 0xD8 (0x248 - 0x170)
// Class OakGame.GFxInWorldIcon
class UGFxInWorldIcon : public UGbxGFxObject
{
public:
	uint8                                        Pad_5AD7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Stacks;                                            // 0x180(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5AD8[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             CurrentLocation;                                   // 0x190(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TransitionStartingLocation;                        // 0x198(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SmoothTransitionStart;                             // 0x1A0(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      IconData;                                          // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TargetSocketName;                                  // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               TargetLocation;                                    // 0x1B8(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5AD9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 TargetGuid;                                        // 0x1CC(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxInWorldIconClampUpdate        LastClampUpdateType;                               // 0x1DC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5ADA[0x6B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxInWorldIcon* GetDefaultObj();

	void SetTargetRadius(float InRadius);
	void SetTargetLocationOffset(const struct FVector& InLocationOffset);
	void SetTargetLocationComponent(class USceneComponent* InTargetLocationComponent);
	void SetTargetActor(class AActor* InTarget);
	void SetLifeTimer(float LifeTime);
	void SetIconData(class UInWorldIconData* InIconData);
	void OnNumberOfStacksChanged(int32 NewStacksNumber);
	bool IsForTarget(struct FHUDInWorldIconTargetInfo& Target);
	bool HasValidTarget();
	bool HasLifeTimeExpired();
	float GetTargetRadius();
	struct FVector GetTargetLocationOffset();
	class USceneComponent* GetTargetLocationComponent();
	struct FVector GetTargetLocation();
	class AActor* GetTargetActor();
	class UInWorldIconData* GetIconData();
};

// 0x250 (0x860 - 0x610)
// Class OakGame.GFxInWorldIconContainer
class UGFxInWorldIconContainer : public UGbxGFxHUDWidget
{
public:
	uint8                                        Pad_5AED[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInWorldIconData*                      OverheadNameplateIconData;                         // 0x630(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      CustomWaypointIconData;                            // 0x638(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SplitscreenOffset;                                 // 0x640(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSplitscreenYValue;                              // 0x644(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTopPlayerSplitscreenYValue;                     // 0x648(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IconSnapThreshold;                                 // 0x64C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmoothTransitionDuration;                          // 0x650(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NextIconInstId;                                    // 0x654(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          TimerHandle_RegisterNameplates;                    // 0x658(0x8)(BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ContainerObject;                                   // 0x660(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             ContainerSize;                                     // 0x668(0x8)(BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             ContainerOrigin;                                   // 0x670(0x8)(BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPetNameplateData>             Pets;                                              // 0x678(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        RangeCutoff;                                       // 0x688(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             ContainerOriginStandard;                           // 0x68C(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             ContainerOriginSplit;                              // 0x694(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxTransitionToMapTime;                            // 0x69C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGFxInWorldIcon*>               ActiveIcons;                                       // 0x6A0(0x10)(BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5AF0[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bNeedRefreshTrackedMissionIcons;                   // 0x6E0(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5AF1[0x17F];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxInWorldIconContainer* GetDefaultObj();

	void UnregisterTarget(struct FHUDInWorldIconTargetInfo& TargetInfo);
	void RegisterTarget(struct FHUDInWorldIconTargetInfo& TargetInfo);
	void OnRemovePlayerAlert(struct FUniqueNetIdRepl& Instigator);
	void OnPrimaryCharacterChanged(class AGbxCharacter* NewPrimaryCharacter);
	void OnPetRenamed(class FText& NewName);
	void OnIconRemoved(class UGFxInWorldIcon* Icon);
	void OnIconAdded(class UGFxInWorldIcon* Icon);
	void OnCreatePlayerAlert(struct FUniqueNetIdRepl& Instigator, class AActor* Actor, const struct FVector& AlertLocation, class UPlayerAlertData* AlertData);
	void AddNewNameplateForPlayerState(class AOakPlayerState* NewPlayerState);
};

// 0x600 (0xC10 - 0x610)
// Class OakGame.GFxItemCard
class UGFxItemCard : public UGbxGFxHUDWidget
{
public:
	float                                        UpdateElementalInfoTime;                           // 0x610(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5AF8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ElementalTimerHandle;                              // 0x618(0x8)(BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FGFxItemCardObject                    ItemCardObject;                                    // 0x620(0x538)(Edit, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        HideSmallIconDistance;                             // 0xB58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShowSmallIconDistance;                             // 0xB5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HideItemCardDistance;                              // 0xB60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShowItemCardDistance;                              // 0xB64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BeamAlignmentOffset;                               // 0xB68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverworldBeamAlignmentOffset;                      // 0xB6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ItemCardHeightPivotOffsetFactor;                   // 0xB70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SplitscreenOffset;                                 // 0xB74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CalibrationResolutionX;                            // 0xB78(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CalibrationResolutionY;                            // 0xB7C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             VerticalSplitScreenMinItemCardOffset;              // 0xB80(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             VerticalSplitScreenMaxItemCardOffset;              // 0xB88(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             QuadSplitScreenMinItemCardOffset;                  // 0xB90(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             QuadSplitScreenMaxItemCardOffset;                  // 0xB98(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DistanceScaleCurve;                                // 0xBA0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           OverworldDistanceScaleCurve;                       // 0xBA8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CachedItemPosition;                                // 0xBB0(0xC)(BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AFA[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             LocationScreenSpace;                               // 0xBC8(0x8)(BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            OriginalRootDisplayTransform;                      // 0xBD0(0x30)(BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeUntilOutro;                                    // 0xC04(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5AFC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxItemCard* GetDefaultObj();

	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnPawnChanged(class APawn* Pawn, class APawn* OldPawn);
	bool IsDisplayed();
	void ExtFinishedTransition();
	void ExtFinishedHide();
};

// 0x1F0 (0x800 - 0x610)
// Class OakGame.GFxItemCardAbbreviated
class UGFxItemCardAbbreviated : public UGbxGFxHUDWidget
{
public:
	struct FGFxItemCardAbbreviatedObject         ItemCardObject;                                    // 0x610(0x1D8)(Edit, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5B05[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeUntilOutro;                                    // 0x7EC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          TimerHandle;                                       // 0x7F0(0x8)(BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B07[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxItemCardAbbreviated* GetDefaultObj();

	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnPawnChanged(class APawn* Pawn, class APawn* OldPawn);
	void OnEndCompareToEquippedItem();
	void OnCompareToEquippedItem(class UOakInventoryBalanceStateComponent* HeldItem, class UOakInventoryBalanceStateComponent* OtherItem);
	bool IsDisplayed();
	void HideAfterDelay();
};

// 0x70 (0x1E0 - 0x170)
// Class OakGame.GFxItemCardMainStat
class UGFxItemCardMainStat : public UGbxGFxObject
{
public:
	uint8                                        Pad_5B08[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PreviousRarityFrame;                               // 0x1D0(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGFxItemCardMainStat* GetDefaultObj();

};

// 0x50 (0x1C0 - 0x170)
// Class OakGame.GFxItemCardArtifactLine
class UGFxItemCardArtifactLine : public UGbxGFxObject
{
public:
	uint8                                        Pad_5B0A[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxItemCardArtifactLine* GetDefaultObj();

};

// 0x70 (0x1E0 - 0x170)
// Class OakGame.GFxItemCardSkillEntry
class UGFxItemCardSkillEntry : public UGbxGFxObject
{
public:
	uint8                                        Pad_5B0C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         SkillIconContainer;                                // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         SkillIcon;                                         // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B0D[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconKeyframe;                                      // 0x1C0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B0E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxItemCardSkillEntry* GetDefaultObj();

};

// 0x18 (0x1B0 - 0x198)
// Class OakGame.GFxLoadedItemCardBase
class UGFxLoadedItemCardBase : public UGbxGFxMovieLoader
{
public:
	UDelegateProperty_                           OnItemCardReady;                                   // 0x198(0x10)(ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHasBeenLoaded;                                    // 0x1A8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B10[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxLoadedItemCardBase* GetDefaultObj();

};

// 0x1E0 (0x390 - 0x1B0)
// Class OakGame.GFxLoadedItemCardAbbreviated
class UGFxLoadedItemCardAbbreviated : public UGFxLoadedItemCardBase
{
public:
	struct FGFxItemCardAbbreviatedObject         ItemCardObject;                                    // 0x1B0(0x1D8)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B13[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxLoadedItemCardAbbreviated* GetDefaultObj();

	void OnItemCardLoadComplete(class UGbxGFxMovieLoader* MovieLoader);
};

// 0x540 (0x6F0 - 0x1B0)
// Class OakGame.GFxLoadedItemCard
class UGFxLoadedItemCard : public UGFxLoadedItemCardBase
{
public:
	struct FGFxItemCardObject                    ItemCardObject;                                    // 0x1B0(0x538)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B15[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxLoadedItemCard* GetDefaultObj();

	void OnItemCardLoadComplete(class UGbxGFxMovieLoader* MovieLoader);
};

// 0x548 (0xBB0 - 0x668)
// Class OakGame.GFxItemTradingMenu
class UGFxItemTradingMenu : public UGbxGFxMenu
{
public:
	struct FGFxInventoryMenuConfig               Config;                                            // 0x668(0x298)(Edit, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FOakInventoryMenuFilter>       CurrentFilters;                                    // 0x900(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class USwfMovie*                             ItemCardMovie;                                     // 0x910(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NumNonBackpackThumbnails;                          // 0x918(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B1F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakInventoryMenuTypePriorityInfo> ItemTypeSortPriorities;                            // 0x920(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FOakInventoryMenuItemGrouping> ItemGroupingsByType;                               // 0x930(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FOakInventoryMenuItemGrouping> ItemGroupingsByManufacturer;                       // 0x940(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FVector2D                             BackpackCellSizeTwoColumn;                         // 0x950(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             BackpackCellSpacingTwoColumn;                      // 0x958(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         CountdownOverlay;                                  // 0x960(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     CountdownCancelHint;                               // 0x968(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxLoadedItemCard*                    ItemCard;                                          // 0x970(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxItemTradingMenuOffer*              OfferingPanel;                                     // 0x978(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxItemTradingMenuOffer*              UnfocusedOfferingPanel;                            // 0x980(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxItemTradingMenuOffer*              ReceivingPanel;                                    // 0x988(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGFxBackpackWidget                    BackpackWidget;                                    // 0x990(0x198)(BlueprintReadOnly, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UGbxTextField*                         HeaderTextClip;                                    // 0xB28(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         FilterTextClip;                                    // 0xB30(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         SortTextClip;                                      // 0xB38(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     BackpackNextHintClip;                              // 0xB40(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     BackpackPrevHintClip;                              // 0xB48(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxCurrencyCounterClip*               HeldCashCounter;                                   // 0xB50(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5B21[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakInventoryMenuFilter               CurrentBackpackFilter;                             // 0xB60(0x20)(BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UGFxItemTradingBackpackItem*           CurrentlyPopulatingOfferSlot;                      // 0xB80(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5B22[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakThumbnailManager*                  IconManager;                                       // 0xB90(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5B23[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxItemTradingMenu* GetDefaultObj();

	void OnTradeButtonClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnThumbnailLoaded();
	void OnItemCardReady();
	void OnDuelButtonClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackGridItemSelected(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBackpackGridItemClicked(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, struct FGbxMenuInputEvent& InputInfo);
	void ExtOnCountdownFinished();
};

// 0x0 (0x700 - 0x700)
// Class OakGame.GFxItemTradingBackpackItem
class UGFxItemTradingBackpackItem : public UGFxInventoryItemWidget
{
public:

	static class UClass* StaticClass();
	static class UGFxItemTradingBackpackItem* GetDefaultObj();

};

// 0x50 (0x1C0 - 0x170)
// Class OakGame.GFxItemTradingMenuOffer
class UGFxItemTradingMenuOffer : public UGbxGFxObject
{
public:
	class UGFxItemTradingMenu*                   OwningMenu;                                        // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         GridItemsClip;                                     // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGFxItemTradingBackpackItem*>   ItemSlots;                                         // 0x180(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UGFxEditableCurrencyCounterClip*       OfferingPanelCurrencyWidget;                       // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxCurrencyCounterClip*               ReceivingPanelCurrencyWidget;                      // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxButton*                         TradeButton;                                       // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxButton*                         DuelButton;                                        // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B2A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxItemTradingMenuOffer* GetDefaultObj();

	void OnSlotUnfocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnSlotFocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnSlotClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
};

// 0x2A0 (0x2C8 - 0x28)
// Class OakGame.GFxLobbyWidgetText
class UGFxLobbyWidgetText : public UObject
{
public:
	class FText                                  FriendsOnlyText;                                   // 0x28(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  InviteOnlyText;                                    // 0x40(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  OpenToPublicText;                                  // 0x58(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  LANText;                                           // 0x70(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  OfflineText;                                       // 0x88(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  GroupModeText;                                     // 0xA0(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  ClassicModeText;                                   // 0xB8(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  SharedModeText;                                    // 0xD0(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  ClassicModeTooltipText;                            // 0xE8(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  SharedModeTooltipText;                             // 0x100(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  LootModeLockedText;                                // 0x118(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  FriendsOnlyTooltipText;                            // 0x130(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  InviteOnlyTooltipText;                             // 0x148(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  PublicTooltipText;                                 // 0x160(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  LANTooltipText;                                    // 0x178(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  OfflineTooltipText;                                // 0x190(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  OfflinePCTooltipText;                              // 0x1A8(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  LeaveGroupDialogTitleText;                         // 0x1C0(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  LeaveGroupDialogBodyText;                          // 0x1D8(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  LeaveGroupDialogAdditionalBodyText;                // 0x1F0(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  GoOnline;                                          // 0x208(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  ConnectToLan;                                      // 0x220(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  OfflineConnectionHeader;                           // 0x238(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  OfflineConnectionInformation;                      // 0x250(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  NotLanConnectionHeader;                            // 0x268(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  NotLanConnectionInformation;                       // 0x280(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  InGameConnectionHeader;                            // 0x298(0x18)(Transient, Config, NativeAccessSpecifierPublic)
	class FText                                  InGameConnectionInformation;                       // 0x2B0(0x18)(Transient, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGFxLobbyWidgetText* GetDefaultObj();

};

// 0x10 (0x620 - 0x610)
// Class OakGame.GFxManagedWidget
class UGFxManagedWidget : public UGbxGFxHUDWidget
{
public:
	uint8                                        Pad_5B2D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxManagedWidget* GetDefaultObj();

	void ExtShowAnimationFinished();
};

// 0x700 (0xD90 - 0x690)
// Class OakGame.GFxMapMenu
class UGFxMapMenu : public UGFxStatusMenuSubmenu
{
public:
	uint8                                        Pad_5B36[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EGFxMapMenuState, struct FGFxMapMenuStateInfo> StateInfoMap;                                      // 0x6D8(0x50)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EGFxMapMenuState                  InitialMenuState;                                  // 0x728(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B38[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UGalaxyData>            GalaxyDataRef;                                     // 0x730(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UZoneMapData>           SanctuaryLevelData;                                // 0x758(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPlanetData>            SanctuaryPlanetData;                               // 0x780(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UZoneMapPOITypeData>    FastTravelPOIType;                                 // 0x7A8(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Sanctuary3Name;                                    // 0x7D0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraMoveThreshold;                               // 0x7D8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FriendStatusUpdateRateSeconds;                     // 0x7DC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakUIChallengeDataProvider> ChallengeProviderClass;                            // 0x7E0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FChallengeFilterType>          AvailableGalaxyChallengeFilters;                   // 0x7E8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FChallengeFilterType>          AvailableZoneChallengeFilters;                     // 0x7F8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGFxMenuTutorialCollection            Tutorials;                                         // 0x808(0x20)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                  FirstTimeTutorial;                                 // 0x828(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FastTravelTutorial;                                // 0x830(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstTimeShowStage1Index;                          // 0x838(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstTimeShowStage2Index;                          // 0x83C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstTimeShowStage3Index;                          // 0x840(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstTimeShowStage4Index;                          // 0x844(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstTimeShowStage5Index;                          // 0x848(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstTimeFreeNavigationIndex;                      // 0x84C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FastTravelOrbitZoomIndex;                          // 0x850(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FastTravelChooseZoneInfoIndex;                     // 0x854(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FastTravelChooseZoneIndex;                         // 0x858(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FastTravelChooseLocationIndex;                     // 0x85C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FriendListSplitScreenScalePlayer0;                 // 0x860(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FriendListSplitScreenPositionPlayer0;              // 0x868(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FriendListSplitScreenScalePlayer1;                 // 0x870(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FriendListSplitScreenPositionPlayer1;              // 0x878(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             ContextMenuOffsetExpandingDown;                    // 0x884(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ContextMenuOffsetExpandingUp;                      // 0x88C(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ContextMenuScale;                                  // 0x894(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGFxMapMenu_Adjustment                ContextMenuAdjustmentHorizontalSplitScreen;        // 0x89C(0x10)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B3F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         MenuRoot;                                          // 0x8B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxMapMenuProgressPanel*              ProgressPanel;                                     // 0x8B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              NavBar;                                            // 0x8C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              FastTravelList;                                    // 0x8C8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B44[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  TravelListSelectionChangedDelegate;                // 0x8E0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              ChallengeList;                                     // 0x8F0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              FriendList;                                        // 0x8F8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentGalaxyChallengeFilterIndex;                 // 0x900(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentZoneChallengeFilterIndex;                   // 0x904(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ChallengeListWrapper;                              // 0x908(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     ChallengeFilterHint;                               // 0x910(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         IconContainer;                                     // 0x918(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxMapMenuCrosshair*                  CrosshairContainers[0x2];                          // 0x920(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxMapMenuCrosshair*                  CurrentCrosshair;                                  // 0x930(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxMouseCapturePanel*              MouseCapturePanel;                                 // 0x938(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxMapMenuZoomLevelInfo*              ZoomLevelInfo;                                     // 0x940(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxMapDetailsPanel*                   DetailsPanel;                                      // 0x948(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         HyperspaceHeader;                                  // 0x950(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         MapWarning;                                        // 0x958(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         MapError;                                          // 0x960(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         MapErrorText;                                      // 0x968(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxTutorialWidget*                    TutorialWidget;                                    // 0x970(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FZoneMapPOIEntry>              FastTravelStationListData;                         // 0x978(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UZoneMapData*>                  LevelListData;                                     // 0x988(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UPlanetData*>                   PlanetListData;                                    // 0x998(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UZoneMapData>           PlayerLevel;                                       // 0x9A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakUIChallengeDataProvider*           ChallengeProvider;                                 // 0x9B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, struct FZoneMapIconInfo> FriendIcons;                                       // 0x9B8(0x50)(BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B47[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakChallenge*                         ChallengeToFocusAfterLoad;                         // 0xA48(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FZoneMapIconInfo                      TargetIconInfo;                                    // 0xA50(0x290)(BlueprintReadOnly, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FZoneMapIconInfo>              MapIconInfos;                                      // 0xCE0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class AZoneMapDisplayActor>   FocusedPOIActor;                                   // 0xCF0(0x28)(BlueprintReadOnly, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B48[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPlanetData*                           PendingPOIPlanet;                                  // 0xD28(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B49[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMapMenu* GetDefaultObj();

	void OnTutorialComplete();
	void OnTutorialAdvanced();
	void OnPlanetSelected(class UGbxGFxListCell* ListItem);
	void OnPlanetClicked(class UGbxGFxListCell* ListItem, struct FGbxMenuInputEvent& InputInfo);
	void OnNavBarItemSelected(class UGbxGFxListCell* ListItem);
	void OnMinimapIconComponentEndTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMinimapIconComponentBeginTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMapIconUnhovered(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnMapIconClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnLevelSelected(class UGbxGFxListCell* ListItem);
	void OnLevelClicked(class UGbxGFxListCell* ListItem, struct FGbxMenuInputEvent& InputInfo);
	void OnFriendSelected(class UGbxGFxListCell* ListItem);
	void OnFriendClicked(class UGbxGFxListCell* ListItem, struct FGbxMenuInputEvent& InputInfo);
	void OnFastTravelStationSelectedExplicitly(class UGbxGFxListCell* ListItem);
	void OnFastTravelStationSelected(class UGbxGFxListCell* ListItem);
	void OnFastTravelStationClicked(class UGbxGFxListCell* ListItem, struct FGbxMenuInputEvent& InputInfo);
	void OnFastTravelAvailabilityChanged(bool bAvailable);
	void OnChallengeSelected(class UGbxGFxListCell* ListItem);
	void OnChallengeListItemUpdated(struct FOakUIChallengeListData& ListData);
	void OnChallengeClicked(class UGbxGFxListCell* ListItem, struct FGbxMenuInputEvent& InputInfo);
	void InitForHyperspaceMenu();
};

// 0x38 (0x340 - 0x308)
// Class OakGame.GFxMapMenuFastTravelCell
class UGFxMapMenuFastTravelCell : public UGbxGFxListCell
{
public:
	uint8                                        Pad_5B4D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         NewIndicator;                                      // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         CurrentLocation;                                   // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         FriendWidget;                                      // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FriendCount;                                       // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         MissionIndicator;                                  // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B4F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMapMenuFastTravelCell* GetDefaultObj();

};

// 0x68 (0x370 - 0x308)
// Class OakGame.GFxMapMenuFriendCell
class UGFxMapMenuFriendCell : public UGbxGFxListCell
{
public:
	uint8                                        Pad_5B51[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         FriendNameText;                                    // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FriendInfoText;                                    // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ItemIcon;                                          // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B52[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconPath;                                          // 0x338(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B54[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMapMenuFriendCell* GetDefaultObj();

};

// 0x8 (0x310 - 0x308)
// Class OakGame.GFxMapMenuNavItemCell
class UGFxMapMenuNavItemCell : public UGbxGFxListCell
{
public:
	uint8                                        Pad_5B56[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMapMenuNavItemCell* GetDefaultObj();

};

// 0x50 (0x1C0 - 0x170)
// Class OakGame.GFxMapMenuProgressPanel
class UGFxMapMenuProgressPanel : public UGbxGFxObject
{
public:
	class UGbxTextField*                         ProgressHeader;                                    // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ProgressPercentText;                               // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxGFxObject*>                 ProgressLines;                                     // 0x180(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B58[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          CachedProgressTextLines;                           // 0x198(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class FText>                          CachedProgressFractionLines;                       // 0x1A8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B59[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMapMenuProgressPanel* GetDefaultObj();

};

// 0x30 (0x1A0 - 0x170)
// Class OakGame.GFxMapMenuZoomLevelInfo
class UGFxMapMenuZoomLevelInfo : public UGbxGFxObject
{
public:
	class UGbxTextField*                         LocationNameLabel;                                 // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         LocationIcon;                                      // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         LocationParentNameLabel;                           // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         LocationParentIcon;                                // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         LayerIndicator;                                    // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B5F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMapMenuZoomLevelInfo* GetDefaultObj();

};

// 0x20 (0x190 - 0x170)
// Class OakGame.GFxMapMenuCrosshair
class UGFxMapMenuCrosshair : public UGbxGFxObject
{
public:
	class UGbxGFxProgressBar*                    ProgressFill;                                      // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B63[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMapMenuCrosshair* GetDefaultObj();

};

// 0x180 (0x2F0 - 0x170)
// Class OakGame.GFxMapDetailsPanel
class UGFxMapDetailsPanel : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         ContentPanel;                                      // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         LocationPreviewContainer;                          // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         HeaderField;                                       // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         SubHeaderField;                                    // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         DescriptionText;                                   // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         GeneralIcon;                                       // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         DLCChallengeIcon;                                  // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         BackgroundPanel;                                   // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         DetailsPanelHintWrapper;                           // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxHintWidget*                     PanelHint;                                         // 0x1B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         RewardsHeader;                                     // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxTextField*>                 RewardLines;                                       // 0x1C8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UGbxGFxObject*>                 RewardLineSymbols;                                 // 0x1D8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         RewardItemTypeContainer;                           // 0x1E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         RewardRarityContainer;                             // 0x1F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         RewardItemType;                                    // 0x1F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         RewardBackground;                                  // 0x200(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         MissionTypeIcon;                                   // 0x208(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxTextField*>                 ObjectiveLines;                                    // 0x210(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UGFxMapMenu*                           OwnerMapMenu;                                      // 0x220(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         MayhemModLines[0x5];                               // 0x228(0x28)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         MayhemCoreMods[0x6];                               // 0x250(0x30)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         MayhemLevel;                                       // 0x280(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUIStatData*>                   CollatedMayhemCoreUIStats;                         // 0x288(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class AOakPlayerController*                  OwnerPlayerController;                             // 0x298(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5B67[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxHintInfo                          CachedDetailsHintInfo;                             // 0x2A8(0x40)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5B68[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMapDetailsPanel* GetDefaultObj();

};

// 0x50 (0x660 - 0x610)
// Class OakGame.GFxMatchmakingHUDWidget
class UGFxMatchmakingHUDWidget : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxObject*                         MatchmakingWidgetObject;                           // 0x610(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         MatchMessageText;                                  // 0x618(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         MatchTypeIcon;                                     // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         MatchStatusIcon;                                   // 0x628(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MessageShowDuration;                               // 0x630(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5B6C[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMatchmakingHUDWidget* GetDefaultObj();

	void OnShrinkDelayExpired();
	void OnMatchmakingWidgetStateChanged();
	void OnInputDeviceChanged();
	void OnHideDelayExpired();
};

// 0x0 (0x100 - 0x100)
// Class OakGame.GFxMayhemMenuData
class UGFxMayhemMenuData : public UGFxStatusMenuSubmenuData
{
public:

	static class UClass* StaticClass();
	static class UGFxMayhemMenuData* GetDefaultObj();

};

// 0x18 (0x320 - 0x308)
// Class OakGame.GFxMayhemModifierListItem
class UGFxMayhemModifierListItem : public UGbxGFxListCell
{
public:
	class UGbxTextField*                         HeaderText;                                        // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         BodyText;                                          // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B71[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMayhemModifierListItem* GetDefaultObj();

};

// 0x180 (0x810 - 0x690)
// Class OakGame.GFxMayhemMenu
class UGFxMayhemMenu : public UGFxStatusMenuSubmenu
{
public:
	class UGbxTextField*                         InfoPanelHeader;                                   // 0x690(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         InfoPanelBody;                                     // 0x698(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         CurrentMayhemStatusText;                           // 0x6A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ApplyWarningText;                                  // 0x6A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         StatsPanelHeader;                                  // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         StatsPanelText1;                                   // 0x6B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         StatsPanelText2;                                   // 0x6C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         StatsPanelText3;                                   // 0x6C8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         StatsPanelBonusText1;                              // 0x6D0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         StatsPanelBonusText2;                              // 0x6D8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         StatsPanelBonusText3;                              // 0x6E0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ModifiersPanelHeader;                              // 0x6E8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              ModifiersList;                                     // 0x6F0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxListItemSpinner*                MayhemOptionStatusSpinner;                         // 0x6F8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxListItemNumber*                 MayhemOptionLevelSlider;                           // 0x700(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         MayhemOptionApplyButton;                           // 0x708(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B75[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGbxTextField*>                 StatsArray;                                        // 0x778(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UUIStatData*>                   CollatedMayhemCoreUIStats;                         // 0x788(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FMayhemModifierSet>            ModifierSets;                                      // 0x798(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class FText                                  MayhemDescriptionText;                             // 0x7A8(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  ApplyWarningLocText;                               // 0x7C0(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  ApplyConfirmationLocText;                          // 0x7D8(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  VehicleWarningLocText;                             // 0x7F0(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B77[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMayhemMenu* GetDefaultObj();

	void OnMayhemValueChanged();
	void OnMayhemOptionFocused();
	void OnMayhemExitDialogChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnMayhemApplyChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnMayhemApplyButtonClicked();
	void OnMayhemActivationChanged();
};

// 0x20 (0x630 - 0x610)
// Class OakGame.GFxMenuDamageWidget
class UGFxMenuDamageWidget : public UGbxGFxHUDWidget
{
public:
	uint8                                        Pad_5B78[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SplitScreenOffsetY;                                // 0x620(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B79[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMenuDamageWidget* GetDefaultObj();

};

// 0x50 (0x1C0 - 0x170)
// Class OakGame.GFxTutorialDialogWidget
class UGFxTutorialDialogWidget : public UGbxGFxObject
{
public:
	uint8                                        Pad_5B7A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxHintBarContainer*               HintBarContainerClip;                              // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxHintBar*                           HintBar;                                           // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAdvanceOnKeyPress;                                // 0x1B0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsFinalStageOfTutorial;                           // 0x1B1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowTutorialSkip;                                // 0x1B2(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B7B[0xD];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxTutorialDialogWidget* GetDefaultObj();

};

// 0xB0 (0x220 - 0x170)
// Class OakGame.GFxTutorialWidget
class UGFxTutorialWidget : public UGbxGFxObject
{
public:
	uint8                                        Pad_5B7D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxMenuTutorialSequence              TutorialSequence;                                  // 0x190(0x10)(Transient, NativeAccessSpecifierPrivate)
	int32                                        TutorialSequenceReadPosition;                      // 0x1A0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsTutorialActive;                                 // 0x1A4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAdvanceOnKeyPress;                                // 0x1A5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowTutorialSkip;                                // 0x1A6(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B7F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         InnerClip;                                         // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxTutorialDialogWidget*              LargeDialogWidget;                                 // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxTutorialDialogWidget*              MediumDialogWidget;                                // 0x1B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxTutorialDialogWidget*              SmallDialogWidget;                                 // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxTutorialDialogWidget*              CurrentDialogWidget;                               // 0x1C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGFxMenuTutorialTintClipData>  TintClips;                                         // 0x1D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class FName                                  CurrentlyPlayingTutorial;                          // 0x1E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  CachedHeaderText;                                  // 0x1E8(0x18)(Transient, NativeAccessSpecifierPrivate)
	class FText                                  CachedBodyText;                                    // 0x200(0x18)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B81[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxTutorialWidget* GetDefaultObj();

	void OnInputDeviceChanged(enum class EGbxMenuInputDevice NewInputDevice);
};

// 0x30 (0x5A0 - 0x570)
// Class OakGame.GFxMissionCompletedNotificationWidget
class UGFxMissionCompletedNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	uint8                                        Pad_5B82[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         MissionCompletedText;                              // 0x578(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         MissionCompletedTextShadow;                        // 0x580(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         MissionTitleText;                                  // 0x588(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5B83[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMissionCompletedNotificationWidget* GetDefaultObj();

};

// 0x1D8 (0x840 - 0x668)
// Class OakGame.GFxMissionDeliveryMenu
class UGFxMissionDeliveryMenu : public UGbxGFxMenu
{
public:
	uint8                                        Pad_5B89[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxButton*                         AcceptButton;                                      // 0x6A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         DeclineButton;                                     // 0x6A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         MissionDescriptionContainer;                       // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         MissionDescriptionText;                            // 0x6B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxSlider*                         MissionDescriptionScrollBar;                       // 0x6C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         MissionDescriptionGridArea;                        // 0x6C8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         MissionTitleText;                                  // 0x6D0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         MissionLevelText;                                  // 0x6D8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         MissionLocationText;                               // 0x6E0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         MultiMissionNavBar;                                // 0x6E8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     MultiMissionPreviousHint;                          // 0x6F0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         MultiMissionLeftArrow;                             // 0x6F8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     MultiMissionNextHint;                              // 0x700(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         MultiMissionRightArrow;                            // 0x708(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         MultiMissionMissionPipsWrapper;                    // 0x710(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxGFxButton*>                 MultiMissionMissionPips;                           // 0x718(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         DifficultyText;                                    // 0x728(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PlacardBG;                                         // 0x730(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PlacardTop;                                        // 0x738(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PlacardElementsBG;                                 // 0x740(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PlacardTopText;                                    // 0x748(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ModalDetails;                                      // 0x750(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FriendAmountText;                                  // 0x758(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FriendsOnMissionText;                              // 0x760(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         DescriptionCycleGlyph;                             // 0x768(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UPlayerBalanceStateComponent> PlayerBalanceState;                                // 0x770(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UMission>                  DisplayedMissionData;                              // 0x778(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                DisplayedMissionGiver;                             // 0x780(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EMissionDeliveryMenuDisplayState  CurrentDisplayState;                               // 0x788(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B8C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CachedMissionDescription;                          // 0x790(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	class FText                                  CachedMissionTitle;                                // 0x7A8(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	class FText                                  CachedMissionLocation;                             // 0x7C0(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	int32                                        CachedMissionLevel;                                // 0x7D8(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B8D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CachedMissionLevelText;                            // 0x7E0(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B8E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AMissionTracker*                       CurrentMissionTracker;                             // 0x810(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          TimerHandle_PopulateFriendNames;                   // 0x818(0x8)(BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	class FText                                  WaitingForNameString;                              // 0x820(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B8F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMissionDeliveryMenu* GetDefaultObj();

	void OnRejectMission(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnAcceptMission(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void MissionDeliveryEvent__DelegateSignature(bool bMissionAccepted, bool bEmergencyExit, int32 MissionIndex, class AActor* MissionGiver);
};

// 0x8 (0x310 - 0x308)
// Class OakGame.GFxMissionLogNavCell
class UGFxMissionLogNavCell : public UGbxGFxListCell
{
public:
	enum class EGFxMissionLogNavType             NavType;                                           // 0x308(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B91[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMissionLogNavCell* GetDefaultObj();

};

// 0x8 (0x310 - 0x308)
// Class OakGame.GFxMissionLogObjective
class UGFxMissionLogObjective : public UGbxGFxListCell
{
public:
	uint8                                        Pad_5B93[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMissionLogObjective* GetDefaultObj();

};

// 0x90 (0x200 - 0x170)
// Class OakGame.GFxMissionLogDescriptionBox
class UGFxMissionLogDescriptionBox : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         ActiveMissionIconClip;                             // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5B95[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         InfoPanelLabelClip;                                // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         InfoPanelSecondaryLabelClip;                       // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              ObjectiveList;                                     // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxSlider*                         DescriptionSlider;                                 // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     ReplayAudioHint;                                   // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         MissionTimerClip;                                  // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         DescriptionScrollingBoxClip;                       // 0x1B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxSlider*                         DescriptionScrollingBoxScrollbarClip;              // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         DescriptionScrollingBoxMaskClip;                   // 0x1C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AMissionTracker>        MissionTracker;                                    // 0x1D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UGFxMissionLogMenu>     OwnerMissionLog;                                   // 0x1D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsVisible;                                        // 0x1E0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5B96[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PromptClipReplay;                                  // 0x1E8(0x18)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGFxMissionLogDescriptionBox* GetDefaultObj();

};

// 0x2D0 (0x960 - 0x690)
// Class OakGame.GFxMissionLogMenu
class UGFxMissionLogMenu : public UGFxStatusMenuSubmenu
{
public:
	uint8                                        Pad_5BAB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseDebug;                                         // 0x698(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BAC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HeaderListItem;                                    // 0x6A0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ActiveMissionListItem;                             // 0x6B0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CompletedMissionListItem;                          // 0x6C0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                CurrentObjectiveHeaderColor;                       // 0x6D0(0x4)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                CurrentObjectiveEntryColor;                        // 0x6D4(0x4)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                OptionalObjectiveHeaderColor;                      // 0x6D8(0x4)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                OptionalObjectiveEntryColor;                       // 0x6DC(0x4)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LogListItemSpacing;                                // 0x6E0(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EchoDeviceScreen_MissionVOPlayed;                  // 0x6E8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EchoDeviceScreen_EchoLogPlayed;                    // 0x6F0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EchoNetSubmenuName;                                // 0x6F8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  EchoCategoryName;                                  // 0x708(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  MissionCategoryName;                               // 0x720(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  SocialWidgetViewRoster;                            // 0x738(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  EmptyLogString;                                    // 0x750(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  FilterString;                                      // 0x768(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGbxGFxMediaPlayerConfig              MediaPlayerConfig;                                 // 0x780(0x30)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<enum class EGFxMissionLogNavType, struct FMissionLogEchoDeviceSettings> EchoDeviceSettings;                                // 0x7B0(0x50)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BB0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  CachedPlayerController;                            // 0x808(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEchoLogWasPlaying;                                // 0x810(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BB2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         EmptyTextField;                                    // 0x818(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  FilterName;                                        // 0x820(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	class UGbxGFxMediaPlayer*                    MediaPlayer;                                       // 0x838(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ContentClip;                                       // 0x840(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              NavBarList;                                        // 0x848(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     NavBarHint;                                        // 0x850(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     NavBarHintPrev;                                    // 0x858(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     NavBarHintNext;                                    // 0x860(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FilterTextClip;                                    // 0x868(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     FilterHintClip;                                    // 0x870(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BB6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxEchologWidgetBase*                 AudioLogClip;                                      // 0x888(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         CategoryTextField;                                 // 0x890(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BB8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxMissionLogDescriptionBox*          MissionDescriptionBoxClip;                         // 0x8B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxMissionLogDescriptionBox*          LogDescriptionBoxClip;                             // 0x8B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              MissionListBox;                                    // 0x8C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGFxMissionLogMissionItem>     MissionBoxItems;                                   // 0x8C8(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BB9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxMenuData*                          PlayerDetailsMenuData;                             // 0x8E8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxMissionLogNavType             CurrentNav;                                        // 0x8F0(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxMissionLogFilterType          CurrentFilterType;                                 // 0x8F1(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BBA[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AMissionTracker>        MyMissionTracker;                                  // 0x908(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UOakPlayerMissionComponent> PlayerMissionComponent;                            // 0x910(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         SocialWidget;                                      // 0x918(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         SocialWidgetHeader;                                // 0x920(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     SocialWidgetHint;                                  // 0x928(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              SocialWidgetScrollingList;                         // 0x930(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BBC[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxMissionLogMenu* GetDefaultObj();

	void UpdatePauseHint(bool bShouldAddToHintBar);
	void ShowFriendsOnMissionDialog();
	void SetLookingAtMissionInfo(struct FGFxMissionLogMissionItem& MissionInfo);
	void OnNavCellSelectionChanged(class UGbxGFxListCell* NewSelectedItem);
	void OnMissionSelectionChanged(class UGbxGFxListCell* ListItem);
	void OnMissionListItemClicked(class UGbxGFxListCell* ListItem, struct FGbxMenuInputEvent& InputInfo);
	void OnFriendSelectedToJoin(class UGbxGFxDialogBox* SourceDialog, class FName ChoiceNameId, struct FGbxMenuInputEvent& InputInfo);
	void OnEchoStarted(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, const class FString& MoodKeyframe, const class FString& VoGMoodKey, enum class EVoiceOfGodSpeaker VoGSpeakerID, bool bIsNewEcho);
	void OnEchoFinished(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, bool bCompleted);
};

// 0x58 (0x360 - 0x308)
// Class OakGame.GFxMissionLogMenuItemCell
class UGFxMissionLogMenuItemCell : public UGbxGFxListCell
{
public:
	class UGbxTextField*                         MissionName;                                       // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BBE[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         FriendsOnMissionTextField;                         // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     HintClip;                                          // 0x348(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ActiveMissionIconClip;                             // 0x350(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ProgressTextClip;                                  // 0x358(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxMissionLogMenuItemCell* GetDefaultObj();

};

// 0x8 (0x310 - 0x308)
// Class OakGame.GFxSocialWidgetCell
class UGFxSocialWidgetCell : public UGbxGFxListCell
{
public:
	class UGbxTextField*                         TextClip;                                          // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxSocialWidgetCell* GetDefaultObj();

};

// 0x8 (0x310 - 0x308)
// Class OakGame.GFxMissionLogMenuDescriptionCell
class UGFxMissionLogMenuDescriptionCell : public UGbxGFxListCell
{
public:
	class UGbxTextField*                         DescriptionTextClip;                               // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxMissionLogMenuDescriptionCell* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class OakGame.GFxModalTutorialDataAsset
class UGFxModalTutorialDataAsset : public UGbxDataAsset
{
public:
	class FText                                  Header;                                            // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FString                                ImageFrameName;                                    // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockoutDelay;                                      // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpsellContent;                                    // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowEvenIfTutorialsAreDisabled;                   // 0x75(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BBF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             BackgroundTexture;                                 // 0x78(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGFxModalTutorialDataAsset* GetDefaultObj();

};

// 0xF8 (0x760 - 0x668)
// Class OakGame.GFxModalTutorial
class UGFxModalTutorial : public UGbxGFxMenu
{
public:
	class FText                                  WaitString;                                        // 0x668(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  ExitString;                                        // 0x680(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        TintScale;                                         // 0x698(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TintOffset;                                        // 0x69C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BC2[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxHintWidget*                     ExitHint;                                          // 0x720(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BC3[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowMenuAdvance;                                 // 0x734(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BC4[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ImageFrameName;                                    // 0x748(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BC5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxModalTutorial* GetDefaultObj();

	void OnNumPlayersChanged(int32 NewNumPlayers);
	void OnLockoutDelayComplete();
	void ExtOnIntroComplete();
};

// 0x1C0 (0x330 - 0x170)
// Class OakGame.GFxNameplate
class UGFxNameplate : public UGbxGFxObject
{
public:
	class FText                                  LevelPrefix;                                       // 0x170(0x18)(Edit, NativeAccessSpecifierPublic)
	enum class EEdgeFlashType                    BarsFlashType;                                     // 0x188(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BD7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         OverLevelIconPlacement;                            // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         OverLevelIcon;                                     // 0x198(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         NameTextContainer;                                 // 0x1A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         NameplateBarsContainer;                            // 0x1A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    BarPrimary;                                        // 0x1B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    BarSecondary;                                      // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    BarTertiary;                                       // 0x1C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         LevelText;                                         // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         CenteredNameText;                                  // 0x1D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         LeftNameText;                                      // 0x1D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNameplateBarData                     NameplateDataArray[0x3];                           // 0x1E0(0x78)(NoDestructor, NativeAccessSpecifierPublic)
	class UCurveFloat*                           RangeFadeCurve;                                    // 0x258(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeStartDistance;                                 // 0x260(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeEndDistance;                                   // 0x264(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BracketFadeCooldown;                               // 0x268(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BDC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class INameplateInfoProviderInterface> CurrentTarget;                                     // 0x270(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BDD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDamageComponent*                      CurrentTargetDamageComponent;                      // 0x290(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  EnemyName;                                         // 0x298(0x18)(NativeAccessSpecifierPublic)
	enum class ENameplateStyle                   NameplateStyle;                                    // 0x2B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETargetedNameplateType            DesiredTargetedNameplateType;                      // 0x2B1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETargetedNameplateState           TargetedNameplateState;                            // 0x2B2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BE0[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetTextMarkupString;                            // 0x2B8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ImmuneClipID;                                      // 0x2C8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ImmuneAnimation;                                   // 0x2D8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StopAnimationFrame;                                // 0x2E8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BE3[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxNameplate* GetDefaultObj();

	void OnTeamUpdated(class UTeamComponent* NewTeam, class UTeam* OldTeam);
	void OnPrimaryCharacterChanged(class AGbxCharacter* Character);
	void OnOwningPlayerLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnNameUpdated();
	void OnLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	TScriptInterface<class INameplateInfoProviderInterface> GetTargetInterface();
	void ForceUpdateFocusableBars();
	void ExtDeathAnimComplete();
	void AnimateBar(int32 Index, const class FString& AnimationToPlay);
};

// 0x50 (0x5C0 - 0x570)
// Class OakGame.GFxNewMissionNotificationWidget
class UGFxNewMissionNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	struct FVector2D                             HoldToTrackGlyphSizeOverride;                      // 0x570(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  HoldToTrackPromptText;                             // 0x578(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_5BE7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         MissionTitleText;                                  // 0x598(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         NewMissionText;                                    // 0x5A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     ContextSensitivePrompt;                            // 0x5A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         ContextSensitivePromptBackground;                  // 0x5B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5BEA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxNewMissionNotificationWidget* GetDefaultObj();

	void TrackNotificationTarget();
	void OnInputDeviceChanged();
};

// 0xE0 (0x6F0 - 0x610)
// Class OakGame.GFxNewUWidget
class UGFxNewUWidget : public UGbxGFxHUDWidget
{
public:
	class FString                                GFxKEY_TitleField;                                 // 0x610(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GFxKEY_DescriptionField;                           // 0x620(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GFxKEY_FeeField;                                   // 0x630(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  TitleText;                                         // 0x640(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  DescriptionText;                                   // 0x658(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  FeeText;                                           // 0x670(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FName                                  OnShowSoundEntryName;                              // 0x688(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  OnHideSoundEntryName;                              // 0x690(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeBeforeHide;                                    // 0x698(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5BF4[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxNewUWidget* GetDefaultObj();

	void OnOwnerResurrected(int32 CashLost);
};

// 0x1B0 (0x7C0 - 0x610)
// Class OakGame.GFxNotificationWidget
class UGFxNotificationWidget : public UGbxGFxHUDWidget
{
public:
	float                                        MaxWidgetDisplayTime;                              // 0x610(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C1E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGFxNotificationQueueListItem> QueduedNotifications;                              // 0x618(0x10)(BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C1F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxNotificationQueueListItem         ActiveNotification;                                // 0x630(0x50)(BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C21[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxNotificationQueueListItem         CurrentError;                                      // 0x688(0x50)(BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C22[0xE8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxNotificationWidget* GetDefaultObj();

	void OnWidgetHidden(class UGFxDisplayedNotificationWidget* Widget);
	void OnHUDErrorNotification(class FText& Reason);
	void OnGrenadeThrowFailed(enum class EGrenadeThrowFailureReason FailureReason);
	void DisplayNotificationWithId(class UHUDNotificationAsset* Asset, uint8 NotificationId, class FText& Message, int32 NotificationPriority, TSubclassOf<class UObject> TrackedNotificationTarget, bool bMakeActiveImmediately, bool bAbortIfNotImmediatelyActive);
	void DisplayNotification(class UHUDNotificationAsset* Asset, class FText& Message, int32 NotificationPriority, TSubclassOf<class UObject> TrackedNotificationTarget, bool bMakeActiveImmediately);
	void DisplayError(class FText& Message);
	void ClearNotifications();
};

// 0x0 (0x320 - 0x320)
// Class OakGame.GFxOakMenuScrollingList
class UGFxOakMenuScrollingList : public UGbxGFxGridScrollingList
{
public:

	static class UClass* StaticClass();
	static class UGFxOakMenuScrollingList* GetDefaultObj();

};

// 0x368 (0x978 - 0x610)
// Class OakGame.GFxRolloutMessage
class UGFxRolloutMessage : public UGbxGFxHUDWidget
{
public:
	uint8                                        Pad_5C2E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUIManagerMessage                     CachedMessage;                                     // 0x620(0x168)(BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5C2F[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxHintWidget*                     GlyphField;                                        // 0x840(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5C30[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnShowMessageComplete;                             // 0x850(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHideMessageComplete;                             // 0x860(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	float                                        MinimumDisplaySeconds;                             // 0x870(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C31[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InnerInstanceString;                               // 0x878(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventIconInstanceName;                             // 0x888(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TitleFieldInstanceName;                            // 0x898(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DescriptionFieldInstanceName;                      // 0x8A8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DescriptionWithGlyphFieldInstanceName;             // 0x8B8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GlyphFieldInstanceName;                            // 0x8C8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerNameFieldInstanceName;                       // 0x8D8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CommandFieldInstanceName;                          // 0x8E8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpinnerInstanceName;                               // 0x8F8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpinnerPulseInstanceName;                          // 0x908(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EOakMessageType, struct FOakLevelSyncMessageText> SocialEventTextMap;                                // 0x918(0x50)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bHUDWidget;                                        // 0x968(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C37[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxRolloutMessage* GetDefaultObj();

	void RolloutMessageDelegate__DelegateSignature(class UGFxRolloutMessage* Widget);
	void OnInputDeviceChanged();
	void ExtShowAnimationFinished();
};

// 0x98 (0xA10 - 0x978)
// Class OakGame.GFxOnlineMessageAnimationWidget
class UGFxOnlineMessageAnimationWidget : public UGFxRolloutMessage
{
public:
	class FString                                ProfileTextureName;                                // 0x978(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                SubtitleBackgroundSizeMapping;                     // 0x988(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        UserPicWidthPadding;                               // 0x998(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugForUserPic;                                   // 0x99C(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C3A[0x53];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InnerInstanceStringMenu;                           // 0x9F0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                InnerInstanceStringHud;                            // 0xA00(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGFxOnlineMessageAnimationWidget* GetDefaultObj();

};

// 0x0 (0x610 - 0x610)
// Class OakGame.GFxOutOfBoundsWarning
class UGFxOutOfBoundsWarning : public UGbxGFxHUDWidget
{
public:

	static class UClass* StaticClass();
	static class UGFxOutOfBoundsWarning* GetDefaultObj();

	void OnBoundaryWarningStateChanged(bool bWarningActive);
};

// 0x108 (0x350 - 0x248)
// Class OakGame.GFxOverheadNameplate
class UGFxOverheadNameplate : public UGFxInWorldIcon
{
public:
	class UGbxGFxObject*                         CenteredNameContainer;                             // 0x248(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         CenteredNameObject;                                // 0x250(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C40[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         StateContainer;                                    // 0x270(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         StateObject;                                       // 0x278(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C43[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         StateIndicator;                                    // 0x298(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         StateArrow;                                        // 0x2A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         StateArrowColors;                                  // 0x2A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         WaypointIcon;                                      // 0x2B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         OverheadArrow;                                     // 0x2B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    ReviveBar;                                         // 0x2C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    DyingBar;                                          // 0x2C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C44[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class INameplateInfoProviderInterface> CachedNameplateInfoProvider;                       // 0x2E0(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	enum class EOverheadNameplateHealthState     CachedOverheadNameplateHealthState;                // 0x2F0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EOverheadNameplateDisplayState    CachedOverheadNameplateDisplayState;               // 0x2F1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C46[0x5E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxOverheadNameplate* GetDefaultObj();

	void OnPlayerLocationChanged(const struct FVector& NewLocation);
};

// 0x40 (0x650 - 0x610)
// Class OakGame.GFxPassiveSkillWidget
class UGFxPassiveSkillWidget : public UGbxGFxHUDWidget
{
public:
	TArray<class UGFxPassiveSkillIcon*>          Icons;                                             // 0x610(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FGFxPassiveSkillWidgetSlotData> ActiveAbilityQueue;                                // 0x620(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C48[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     SlotPositions;                                     // 0x638(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UOakPlayerAbilityManagerComponent> AbilityManager;                                    // 0x648(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxPassiveSkillWidget* GetDefaultObj();

};

// 0x70 (0x1E0 - 0x170)
// Class OakGame.GFxPassiveSkillIcon
class UGFxPassiveSkillIcon : public UGbxGFxObject
{
public:
	uint8                                        Pad_5C4B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxProgressBar*                    CooldownProgressBar;                               // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C4D[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         TextureContainer;                                  // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UGbxGFxHUDWidget>       OwningWidget;                                      // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UTexture>               TextureRef;                                        // 0x1B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C4F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPassiveSkillIcon* GetDefaultObj();

};

// 0xC8 (0xF0 - 0x28)
// Class OakGame.GFxPCTextChatBuffer
class UGFxPCTextChatBuffer : public UObject
{
public:
	UMulticastDelegateProperty_                  OnTextLogChangedDelegate;                          // 0x28(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C51[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPCTextChatBuffer* GetDefaultObj();

};

// 0x68 (0x6D0 - 0x668)
// Class OakGame.GFxPCTextChatMenu
class UGFxPCTextChatMenu : public UGbxGFxMenu
{
public:
	int32                                        MaxLinesShown;                                     // 0x668(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScrollThumbTrackMinSize;                           // 0x66C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerNameColor;                                   // 0x670(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCloseInMenuChatWhenSubmitting;                    // 0x680(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C63[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         TextChatLogClip;                                   // 0x688(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxSlider*                         ScrollbarClip;                                     // 0x690(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         TextInputMCClip;                                   // 0x698(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxEditableTextField*              TextInputClip;                                     // 0x6A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PlaceholderTextMCClip;                             // 0x6A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         PlaceholderTextClip;                               // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         ButtonCloseClip;                                   // 0x6B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ScrollPosition;                                    // 0x6C0(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NumScrollEntries;                                  // 0x6C4(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNeedsToUpdateLogThisFrame;                        // 0x6C8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDefaultMessageShowing;                            // 0x6C9(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C66[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPCTextChatMenu* GetDefaultObj();

	void OnTextLogChanged(class UGFxPCTextChatBuffer* TextChatBuffer);
	void OnTextChanged(class UGbxGFxEditableTextField* EditableTextField, const class FString& Text);
	void OnSubmit(class UGbxGFxEditableTextField* EditableTextField, const class FString& Text);
	void OnScrollBarUpdated(float SliderPercent);
	void OnPrePushMenu();
	void OnCloseButtonClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
};

// 0x0 (0xC0 - 0xC0)
// Class OakGame.GFxPCTextChatMenuData
class UGFxPCTextChatMenuData : public UGbxGFxMenuData
{
public:

	static class UClass* StaticClass();
	static class UGFxPCTextChatMenuData* GetDefaultObj();

};

// 0x18 (0x680 - 0x668)
// Class OakGame.GFxPCTextChatMenuNotification
class UGFxPCTextChatMenuNotification : public UGbxGFxMenu
{
public:
	float                                        NotificationDuration;                              // 0x668(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C6F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxButton*                         ChatButtonClip;                                    // 0x670(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Duration;                                          // 0x678(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bChatMenuIsOpen;                                   // 0x67C(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C70[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPCTextChatMenuNotification* GetDefaultObj();

	void OnMenuStackEmptied();
	void OnChatButtonClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
};

// 0x60 (0x670 - 0x610)
// Class OakGame.GFxPCTextChatWidget
class UGFxPCTextChatWidget : public UGbxGFxHUDWidget
{
public:
	class FString                                PlayerNameColor;                                   // 0x610(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLinesShown;                                     // 0x620(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondsUntilHide;                                  // 0x624(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PromptGlyphHeight;                                 // 0x628(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C74[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FKey                                  KeyToShowForOpenTextChat;                          // 0x630(0x18)(BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C76[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTextChatEnabled;                                  // 0x649(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C77[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         TextChatFeedClip;                                  // 0x650(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         TextChatLogClip;                                   // 0x658(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          HideTimerHandle;                                   // 0x660(0x8)(BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bNeedsToUpdateLogThisFrame;                        // 0x668(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C78[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPCTextChatWidget* GetDefaultObj();

	void OnTextLogChanged(class UGFxPCTextChatBuffer* TextChatBuffer);
	void OnTextChatOptionChanged(bool bIsActive);
	void OnMenuActivated(class UObject* MenuObject);
};

// 0x50 (0x3B0 - 0x360)
// Class OakGame.GFxPhotoModeMenuSpinner
class UGFxPhotoModeMenuSpinner : public UGbxGFxListItemSpinner
{
public:
	uint8                                        Pad_5C7B[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPhotoModeMenuSpinner* GetDefaultObj();

};

// 0x50 (0x3F0 - 0x3A0)
// Class OakGame.GFxPhotoModeMenuSlider
class UGFxPhotoModeMenuSlider : public UGbxGFxListItemNumber
{
public:
	uint8                                        Pad_5C7D[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPhotoModeMenuSlider* GetDefaultObj();

};

// 0x118 (0x780 - 0x668)
// Class OakGame.GFxPhotoModeMenu
class UGFxPhotoModeMenu : public UGbxGFxMenu
{
public:
	uint8                                        Pad_5C82[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PhotoModeCloseMenuSound;                           // 0x670(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PhotoModeSwitchTabsSound;                          // 0x678(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PhotoModeToggleSound;                              // 0x680(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PhotoModeResetSettingSound;                        // 0x688(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PhotoModeTakePhotoSound;                           // 0x690(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PhotoModeSliderSound;                              // 0x698(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PhotoModeSpinnerSound;                             // 0x6A0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PhotoModeNavigateSound;                            // 0x6A8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APhotoModeController*                  CachedPhotoModeController;                         // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhotoModeGlobals*                     CachedPhotoModeGlobals;                            // 0x6B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCurrentTimeOfDayAsDefault;                     // 0x6C0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C84[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeOfDayWhenEnteringPhotoMode;                    // 0x6C4(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5C85[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxButton*                         CameraButton;                                      // 0x6D8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         DepthOfFieldButton;                                // 0x6E0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         ColorButton;                                       // 0x6E8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         SceneButton;                                       // 0x6F0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         FilterButton;                                      // 0x6F8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         FrameButton;                                       // 0x700(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxGFxButton*>                 buttons;                                           // 0x708(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         SelectedButton;                                    // 0x718(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     PhotoModePrevHint;                                 // 0x720(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     PhotoModeNextHint;                                 // 0x728(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPhotoModeMenuSpinner*              FilterSpinner;                                     // 0x730(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPhotoModeMenuSlider*               FilterIntensitySlider;                             // 0x738(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPhotoModeMenuSlider*               TimeOfDaySlider;                                   // 0x740(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPhotoModeMenuSpinner*              HidePlayerSpinner;                                 // 0x748(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPhotoModeMenuSpinner*              OverrideFocusSpinner;                              // 0x750(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPhotoModeMenuSlider*               FocusDistanceSlider;                               // 0x758(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPhotoModeMenuSlider*               FocusRegionSlider;                                 // 0x760(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPhotoModeMenuSlider*               FocusIntensitySlider;                              // 0x768(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              ItemList;                                          // 0x770(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5C88[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPhotoModeMenu* GetDefaultObj();

	void OnSpinnerItemChanged(class UGbxGFxListItemSpinner* Item);
	void OnSliderItemChanged(class UGbxGFxListItemNumber* Item);
	void OnOptionSetButtonClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
};

// 0x3C8 (0xA30 - 0x668)
// Class OakGame.GFxPlayerStorageMenu
class UGFxPlayerStorageMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	class FText                                  BackpackLabel;                                     // 0x668(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  BankLabel;                                         // 0x680(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          ItemInspectionMenuData;                            // 0x698(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuFilter>       SortFilters;                                       // 0x6A0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuFilter>       CurrentFilters;                                    // 0x6B0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuTypePriorityInfo> ItemTypeSortPriorities;                            // 0x6C0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USwfMovie*                             ItemCardMovie;                                     // 0x6D0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBackpackSize;                                   // 0x6D8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxBankSize;                                       // 0x6DC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackCellBounds;                                // 0x6E0(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CompareBackpackCellBounds;                         // 0x6E8(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackCellSpacing;                               // 0x6F0(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumBigBagCellsFullScreen;                          // 0x6F8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumBigBagCellsSplitScreen;                         // 0x6FC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumCompareBagCellsFullScreen;                      // 0x700(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumCompareBagCellsSplitScreen;                     // 0x704(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumBigBagColumns;                                  // 0x708(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDelayTimeToLoadThumbnails;                      // 0x70C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxPlayerStorageMenuState        MenuState;                                         // 0x710(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CAB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UOakInventoryListComponent> BankInventory;                                     // 0x714(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UOakInventoryListComponent> CharacterInventory;                                // 0x71C(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CAC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakThumbnailManager*                  IconManager;                                       // 0x728(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         StorageContainerClip;                              // 0x730(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         CompareContainerLeftClip;                          // 0x738(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         CompareContainerRightClip;                         // 0x740(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPlayerStorageListCapacityObject*   ListCapacityPanelClip;                             // 0x748(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPlayerStorageListCapacityObject*   ListCapacityPanelLeftClip;                         // 0x750(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPlayerStorageNavObject*            NavClip;                                           // 0x758(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPlayerStorageHeader*               StorageHeader;                                     // 0x760(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxLoadedItemCardBase*                ItemCard1Clip;                                     // 0x768(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxLoadedItemCardBase*                ItemCard2Clip;                                     // 0x770(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UGFxLoadedItemCardBase> BigBagItemCard;                                    // 0x778(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UGFxLoadedItemCardBase> CompareItemCards[0x2];                             // 0x780(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWaitingForUpdateFromServer;                       // 0x790(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRefreshBagsNextTick;                              // 0x791(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CAD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SortIndex;                                         // 0x794(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NumItemCardsLoading;                               // 0x798(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMenuHasStarted;                                   // 0x79C(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNeedsIconsRefreshed;                              // 0x79D(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CAE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 CompareSourceItem;                                 // 0x7A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxPlayerStorageMenuState        StateBeforeCompare;                                // 0x7A8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CAF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxPlayerStorageBag                  PagedBigBag;                                       // 0x7B0(0xD0)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	struct FGFxPlayerStorageBag                  PagedCompareBankBag;                               // 0x880(0xD0)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	struct FGFxPlayerStorageBag                  PagedCompareInventoryBag;                          // 0x950(0xD0)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CB0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPlayerStorageMenu* GetDefaultObj();

	void OnThumbnailLoaded();
	void OnItemCardReady();
	void OnInventoryCompareItemSelected(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnCompareInventoryBagScrollBarUpdated(float SliderPercentage);
	void OnCompareBankBagScrollBarUpdated(float SliderPercentage);
	void OnCharacterItemUpdated(struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnCharacterItemRemoved(struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnCharacterItemAdded(struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnBigBagScrollBarUpdated(float SliderPercentage);
	void OnBigBagItemSelected(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBigBagItemClicked(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, struct FGbxMenuInputEvent& InputInfo);
	void OnBankItemUpdated(struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnBankItemRemoved(struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnBankItemAdded(struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnBankCompareItemSelected(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void ExtOnCompareIntroComplete();
};

// 0x20 (0x190 - 0x170)
// Class OakGame.GFxPlayerStorageListCapacityObject
class UGFxPlayerStorageListCapacityObject : public UGbxGFxObject
{
public:
	class UGbxTextField*                         SecondListHeaderClip;                              // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ListCapacityLabelClip;                             // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ListTypeIconClip;                                  // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CB1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPlayerStorageListCapacityObject* GetDefaultObj();

};

// 0x30 (0x1A0 - 0x170)
// Class OakGame.GFxPlayerStorageNavObject
class UGFxPlayerStorageNavObject : public UGbxGFxObject
{
public:
	TWeakObjectPtr<class UGFxPlayerStorageMenu>  OwnerStorageMenu;                                  // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     PreviousButtonTextClip;                            // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     NextButtonTextClip;                                // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPlayerStorageNavButton*            BankButton;                                        // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxPlayerStorageNavButton*            InventoryButton;                                   // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         MenuLabelClip;                                     // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxPlayerStorageNavObject* GetDefaultObj();

};

// 0x18 (0x2E0 - 0x2C8)
// Class OakGame.GFxPlayerStorageNavButton
class UGFxPlayerStorageNavButton : public UGbxGFxButton
{
public:
	TWeakObjectPtr<class UGFxPlayerStorageMenu>  OwnerStorageMenu;                                  // 0x2C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         IconClip;                                          // 0x2D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EInventoryListType                NavToType;                                         // 0x2D8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CB7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPlayerStorageNavButton* GetDefaultObj();

	void OnNavButtonClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	class FString GetNavFrameState(class UGbxGFxButton* BUTTON, enum class EGbxFocusableWidgetState ButtonState);
};

// 0x30 (0x1A0 - 0x170)
// Class OakGame.GFxPlayerStorageHeader
class UGFxPlayerStorageHeader : public UGbxGFxObject
{
public:
	TWeakObjectPtr<class UGFxPlayerStorageMenu>  OwnerStorageMenu;                                  // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     SortHintClip;                                      // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ListHeaderLabelClip;                               // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FilterTextClip;                                    // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ListTypeIconClip;                                  // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5CB9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxPlayerStorageHeader* GetDefaultObj();

};

// 0x0 (0x700 - 0x700)
// Class OakGame.GFxPlayerStorageBackpackItem
class UGFxPlayerStorageBackpackItem : public UGFxInventoryItemWidget
{
public:

	static class UClass* StaticClass();
	static class UGFxPlayerStorageBackpackItem* GetDefaultObj();

};

// 0x40 (0x1B0 - 0x170)
// Class OakGame.GFxQuickChangeRespecTreeBranch
class UGFxQuickChangeRespecTreeBranch : public UGbxGFxObject
{
public:
	TArray<struct FQuickChangeRespecTreeBranchRow> Rows;                                              // 0x170(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_5CC1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         ProgressText;                                      // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxProgressBar*                    BackgroundFill;                                    // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityTreeBranchData*       CachedBranchData;                                  // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5CC4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxQuickChangeRespecTreeBranch* GetDefaultObj();

};

// 0x5E0 (0xC48 - 0x668)
// Class OakGame.GFxQuickChangeMenuBase
class UGFxQuickChangeMenuBase : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	uint8                                        Pad_5CD7[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         MainContent;                                       // 0x690(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         TopperText;                                        // 0x698(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         EmoteWheel;                                        // 0x6A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxGridScrollingList*              MenuList;                                          // 0x6A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxGridScrollingList*              SelectionList;                                     // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EBaseQuickChangeMenuState, struct FBaseQuickChangeMenuStateData> StateDataMap;                                      // 0x6B8(0x50)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UGbxCustomizationData*>         UnlockedCustomizationsDataArray;                   // 0x708(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UGbxCustomizationData*>         LockedCustomizationsDataArray;                     // 0x718(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5CDA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FColor>                        ColorizationDataArray;                             // 0x730(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FStandInUIController                  StandInController;                                 // 0x740(0x430)(Edit, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  ProjectionFXWidgetName;                            // 0xB70(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGFxBaseQuickChangeMenuItem*>   EmoteLoadoutButtons;                               // 0xB78(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UGbxGFxMouseCapturePanel*              MouseCapturePanel;                                 // 0xB88(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         EquippedEmoteLabel;                                // 0xB90(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakCustomizationData*                 EmoteToSlot;                                       // 0xB98(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         CounterWrapper;                                    // 0xBA0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         CounterText;                                       // 0xBA8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGbxGFxButtonType                 CustomizationButtonType;                           // 0xBB0(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5CDE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxRotationSpeed;                                  // 0xBB4(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseMaxRotationSpeed;                             // 0xBB8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSecondsToReachTargetSpeed;                      // 0xBBC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5CE0[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCustomizationData*                 PendingStandInCustomization;                       // 0xC40(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGFxQuickChangeMenuBase* GetDefaultObj();

	void OnSelectionListSelectionChanged(class UGbxGFxListCell* SelectedItem);
	void OnSelectionListItemClicked(class UGbxGFxListCell* ClickedItem, struct FGbxMenuInputEvent& InputInfo);
	void OnQuickChangeChoiceMade(enum class EBaseQuickChangeChoiceType ChoiceType);
	void OnMenuListItemClicked(class UGbxGFxListCell* ClickedItem, struct FGbxMenuInputEvent& InputInfo);
	void OnEmoteLoadoutButtonClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
};

// 0x58 (0xCA0 - 0xC48)
// Class OakGame.GFxQuickChangeMenu
class UGFxQuickChangeMenu : public UGFxQuickChangeMenuBase
{
public:
	float                                        RespecAnimTime;                                    // 0xC48(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D01[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         RenameSaveGameContainer;                           // 0xC50(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         RenameCharacterLabel;                              // 0xC58(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxEditableTextField*              RenameCharacterField;                              // 0xC60(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         RenamePetContainer;                                // 0xC68(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         RenamePetLabel;                                    // 0xC70(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxEditableTextField*              RenamePetField;                                    // 0xC78(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxColorPickerWidget*                 ColorPicker;                                       // 0xC80(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGFxQuickChangeRespecTreeBranch*> RespecTreeBranches;                                // 0xC88(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D04[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxQuickChangeMenu* GetDefaultObj();

	void OnSaveGameRenamed(class UGbxGFxEditableTextField* SaveGameField, const class FString& NewName);
	void OnSaveGameRenameAborted(class UGbxGFxEditableTextField* SaveGameField, const class FString& NewName);
	void OnRespecChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnPetRenamed(class UGbxGFxEditableTextField* SaveGameField, const class FString& NewName);
	void OnPetRenameAborted(class UGbxGFxEditableTextField* SaveGameField, const class FString& NewName);
	void OnMenuListItemSelectionChanged(class UGbxGFxListCell* SelectedItem);
	void OnEmoteLoadoutButtonFocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnColorSelected(const struct FColor& NewColor, bool bIsSplit, int32 Index, bool bIsDefault);
	void OnColorFocused(const struct FColor& NewColor, bool bIsSplit, int32 Index, bool bIsDefault);
};

// 0x68 (0x370 - 0x308)
// Class OakGame.GFxBaseQuickChangeMenuItem
class UGFxBaseQuickChangeMenuItem : public UGbxGFxListCell
{
public:
	class UGbxCustomizationData*                 AssociatedCustomizationData;                       // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ItemIcon;                                          // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         NewIcon;                                           // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ItemNameFieldHighlighted;                          // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ItemDescriptionField;                              // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ItemDescriptionFieldHighlighted;                   // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         EridiumCounter;                                    // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D0C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconPath;                                          // 0x350(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D0D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EBaseQuickChangeMenuState         MenuState;                                         // 0x368(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5D0E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxBaseQuickChangeMenuItem* GetDefaultObj();

};

// 0xA8 (0xCF0 - 0xC48)
// Class OakGame.GFxQuickChangeMenuStore
class UGFxQuickChangeMenuStore : public UGFxQuickChangeMenuBase
{
public:
	class UInventoryCategoryData*                EridiumResourceData;                               // 0xC48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxCustomizationData*>         DebugCustomizationsArray;                          // 0xC50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGbxCustomizationData*>         CrazyEarlCustomizationList;                        // 0xC60(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UGFxCurrencyCounterClip*               PlayerEridiumCounter;                              // 0xC70(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         InsufficientFundsTextClip;                         // 0xC78(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         InsufficientFundsTextShadowClip;                   // 0xC80(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         InsufficientFundsObj;                              // 0xC88(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxBaseQuickChangeMenuItem*           CachedClickedItem;                                 // 0xC90(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxCustomizationUnlockedWidget*       CustomizationUnlockedWidget;                       // 0xC98(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxSoldOutAnimationWidget*            SoldOutWidget;                                     // 0xCA0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerShopManagerComponent*           ShopMgr;                                           // 0xCA8(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryListComponent*               InventoryList;                                     // 0xCB0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter*                         CachedOakCharacter;                                // 0xCB8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D1D[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxQuickChangeMenuStore* GetDefaultObj();

	void OnInventoryQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void ExtPlayAnimationFinished();
};

// 0x40 (0x1B0 - 0x170)
// Class OakGame.GFxCustomizationUnlockedWidget
class UGFxCustomizationUnlockedWidget : public UGbxGFxObject
{
public:
	uint8                                        Pad_5D21[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxCustomizationUnlockedWidget* GetDefaultObj();

};

// 0x20 (0x190 - 0x170)
// Class OakGame.GFxSoldOutAnimationWidget
class UGFxSoldOutAnimationWidget : public UGbxGFxObject
{
public:
	uint8                                        Pad_5D2D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSoldOutAnimationWidget* GetDefaultObj();

};

// 0x18 (0x2E0 - 0x2C8)
// Class OakGame.GFxEmoteWheelButton
class UGFxEmoteWheelButton : public UGbxGFxButton
{
public:
	class FText                                  RolloverLabel;                                     // 0x2C8(0x18)(Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGFxEmoteWheelButton* GetDefaultObj();

};

// 0x98 (0x700 - 0x668)
// Class OakGame.GFxQuickMenu
class UGFxQuickMenu : public UGbxGFxMenu
{
public:
	class FString                                GFxKEY_ButtonPattern;                              // 0x668(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GFxNAME_RollOverLabel;                             // 0x678(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OutroTime;                                         // 0x688(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RadialTolerance;                                   // 0x68C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGFxEmoteWheelButton*>          WheelButtons;                                      // 0x690(0x10)(BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UGbxTextField*                         RolloverLabel;                                     // 0x6A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5D3C[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerState*                       CurrentTargetOtherPlayer;                          // 0x6D8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxEmoteWheelButton*                  CurrentFocusedButton;                              // 0x6E0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5D3E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxQuickMenu* GetDefaultObj();

	void WheelButtonUnfocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void WheelButtonPressed(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void WheelButtonFocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void ExtWheelDisplayed();
};

// 0x20 (0x630 - 0x610)
// Class OakGame.GFxRaidSpectatorWidget
class UGFxRaidSpectatorWidget : public UGbxGFxHUDWidget
{
public:
	class UGbxHintBar*                           HintBar;                                           // 0x610(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintBarContainer*               HintBarContainer;                                  // 0x618(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         TargetPlayerName;                                  // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D45[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxRaidSpectatorWidget* GetDefaultObj();

	void OnRaidSpectatorTargetChanged(class FText* NewSpectatorTargetName);
	void OnNumSpectatablePlayersChanged(int32 NewNumSpectatablePlayers);
	void OnInputDeviceChanged();
};

// 0x50 (0x660 - 0x610)
// Class OakGame.GFxReloadWidget
class UGFxReloadWidget : public UGbxGFxHUDWidget
{
public:
	class AWeapon*                               CachedWeapon;                                      // 0x610(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponCOVHeatComponent*               CachedCOVHeatComponent;                            // 0x618(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponAmmoComponent*                  CachedAmmoComponent;                               // 0x620(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponReloadComponent*                CachedReloadComponent;                             // 0x628(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ReloadIcon;                                        // 0x630(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         KeybindingText;                                    // 0x638(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ReloadTextWrapper;                                 // 0x640(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ReloadText;                                        // 0x648(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D5E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxReloadWidget* GetDefaultObj();

	void UpdateCachedAmmoCounts();
	void UpdateCachedAmmoComponent();
	void OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnUsabilityChanged(class UUsableComponent* NewUsableComponent, struct FUsabilityInfo& InUsabilityInfo);
	void OnReloadStarted(bool bAuto);
	void OnReloadEnded(bool bCompleted, bool bAmmoGiven);
	void OnLadderExit();
	void OnLadderEnter();
	void OnInputDeviceChanged();
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
};

// 0x78 (0x6E0 - 0x668)
// Class OakGame.GFxSafeAreaCalibrationMenu
class UGFxSafeAreaCalibrationMenu : public UGbxGFxMenu
{
public:
	class FText                                  SafeAreaTitle;                                     // 0x668(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  SafeAreaDescrption;                                // 0x680(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        SafeAreaStep;                                      // 0x698(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultSafeAreaPercent;                            // 0x69C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         TitleText;                                         // 0x6A0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         DescriptionText;                                   // 0x6A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         SafeAreaBox;                                       // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         Background;                                        // 0x6B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         HintBarWrapper;                                    // 0x6C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5D62[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSafeAreaCalibrationMenu* GetDefaultObj();

};

// 0x10 (0x180 - 0x170)
// Class OakGame.GFxTextFeedback
class UGFxTextFeedback : public UGbxGFxObject
{
public:
	class UGbxTextField*                         InnerText;                                         // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         InnerTextShadow;                                   // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxTextFeedback* GetDefaultObj();

};

// 0x78 (0x6E0 - 0x668)
// Class OakGame.GFxSDUVendorMenu
class UGFxSDUVendorMenu : public UGbxGFxMenu
{
public:
	class USwfMovie*                             ItemCardMovie;                                     // 0x668(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrencySpinnerOverrideHeight;                     // 0x670(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrencySpinnerSpinTime;                           // 0x674(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrencyWidgetPauseOnNewValueTime;                 // 0x678(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5D7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SDUUnlockedText;                                   // 0x680(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                  BuyItemSoundFX;                                    // 0x698(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WarningSoundFX;                                    // 0x6A0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxLoadedItemCard*                    LoadedItemCard;                                    // 0x6A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxSDUVendorMenuInfoContainer*        PlayerInfoContainerClip;                           // 0x6B0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASDUCase>               SDUCase;                                           // 0x6B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASDUCaseProxy>          SDUCaseProxy;                                      // 0x6C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxTextFeedback*                      PurchasedItemText;                                 // 0x6C8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxTextFeedback*                      WarningText;                                       // 0x6D0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMenuContentReady;                                 // 0x6D8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bGameDataReady;                                    // 0x6D9(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bItemCardReady;                                    // 0x6DA(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D7E[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSDUVendorMenu* GetDefaultObj();

	void OnSelectedSDUChanged(int32 CurrentSDULevel, class UOakSDUData* SDUData);
	void OnSDUPurchased(class UOakSDUData* OakSDUData, bool bIsSoldOut);
	void OnItemCardReady();
	void OnInsufficientFunds(class UOakSDUData* OakSDUData);
	void OnCurrencyQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
};

// 0x50 (0x1C0 - 0x170)
// Class OakGame.GFxSDUVendorMenuInfoContainer
class UGFxSDUVendorMenuInfoContainer : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         PlayerIconClip;                                    // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         UpgradeTextClip;                                   // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxCurrencyCounterClip*               CurrencyClip;                                      // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ContextualSelectClip;                              // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         OwnedTextClip;                                     // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         AmmoTextClip;                                      // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         OwnedAmountClip;                                   // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         TotalAmountClip;                                   // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakSDUData*                           LastViewedSDUData;                                 // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LastViewedSDULevel;                                // 0x1B8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LastOwnedCurrencyQuantity;                         // 0x1BC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxSDUVendorMenuInfoContainer* GetDefaultObj();

};

// 0x60 (0x1D0 - 0x170)
// Class OakGame.GFxSkillBar
class UGFxSkillBar : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         Wrapper;                                           // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxGFxProgressBar*>            SkillDurationBars;                                 // 0x178(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         ChargeIconWrapper;                                 // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxGFxObject*>                 ChargesRemainingIcons;                             // 0x190(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         SecondaryFill;                                     // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakActionAbility*                     CachedAbility;                                     // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5D8B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSkillBar* GetDefaultObj();

};

// 0x20 (0x630 - 0x610)
// Class OakGame.GFxSkillDurationBars
class UGFxSkillDurationBars : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxObject*                         SkillBarWrapper;                                   // 0x610(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxSkillBar*                          LeftSkillBar;                                      // 0x618(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxSkillBar*                          RightSkillBar;                                     // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5D95[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSkillDurationBars* GetDefaultObj();

	void OnActionSkillCoolingDown(class UOakActionAbility* InActionAbility);
	void OnActionAbilityAugmentChanged(TSubclassOf<class UOakActionAbility> ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void OnAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
};

// 0x1C8 (0x490 - 0x2C8)
// Class OakGame.GFxSkillScreenBranch
class UGFxSkillScreenBranch : public UGbxGFxButton
{
public:
	uint8                                        Pad_5DB4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         LayoutBranch;                                      // 0x2D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxSkillScreenRowList*                SkillRowList;                                      // 0x2E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityTree*                 PlayerAbilityTree;                                 // 0x2E8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityTreeBranchData*       BranchData;                                        // 0x2F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5DB5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxProgressBar*                    BackgroundFill;                                    // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxSkillScreenRow*                    PreviousRow;                                       // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5DB6[0x170];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSkillScreenBranch* GetDefaultObj();

	void OnTreeItemUnfocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnTreeItemPressed(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnTreeItemFocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnItemUsableStateChanged(class UGFxSkillScreenItem* UpdatedItem);
	void OnItemUnlockedAudioRequest();
	void OnItemSlotRequest(class UGFxSkillScreenItem* ItemToSlot, int32 SlotIndex);
	void OnItemIncreasedAudioRequest(int32 AudioIndex);
	void OnAbilityTierChanged(class UOakPlayerAbilityTreeTierData* TierData);
	void OnAbilityPointsChanged(int32 RemainingAbilityPoints);
};

// 0x308 (0x5D0 - 0x2C8)
// Class OakGame.GFxSkillScreenItem
class UGFxSkillScreenItem : public UGbxGFxButton
{
public:
	uint8                                        Pad_5DBE[0x190];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakPlayerAbilityTreeItemData*         ItemData;                                          // 0x458(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityTree*                 AbilityTree;                                       // 0x460(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxSkillScreenRowList*                OwnerRowList;                                      // 0x468(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5DBF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          CurrentTextColor;                                  // 0x478(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5DC0[0x148];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSkillScreenItem* GetDefaultObj();

	class FString GetButtonState(class UGbxGFxButton* BUTTON, enum class EGbxFocusableWidgetState State);
};

// 0x88 (0x390 - 0x308)
// Class OakGame.GFxSkillScreenLoadoutChoiceItem
class UGFxSkillScreenLoadoutChoiceItem : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                         IconGray;                                          // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         IconColored;                                       // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         IconSelected;                                      // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         BackgroundGray;                                    // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         BackgroundColored;                                 // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         BackgroundSelected;                                // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  ChoiceSelectionName;                               // 0x338(0x18)(Transient, NativeAccessSpecifierPrivate)
	class FText                                  ChoiceSelectedName;                                // 0x350(0x18)(Transient, NativeAccessSpecifierPrivate)
	class FText                                  ChoiceDescription;                                 // 0x368(0x18)(Transient, NativeAccessSpecifierPrivate)
	enum class EGFxSkillScreenLoadoutChoiceEquipState EquipState;                                        // 0x380(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5DC6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakPlayerAbilityTreeItemData*         ItemData;                                          // 0x388(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxSkillScreenLoadoutChoiceItem* GetDefaultObj();

	class FString GetButtonState(class UGbxGFxButton* BUTTON, enum class EGbxFocusableWidgetState State);
};

// 0x168 (0x430 - 0x2C8)
// Class OakGame.GFxSkillScreenLoadoutSlot
class UGFxSkillScreenLoadoutSlot : public UGbxGFxButton
{
public:
	uint8                                        Pad_5DCD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         LockedOverlay;                                     // 0x2D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ReceiveHighlight;                                  // 0x2E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         SlotIndicator;                                     // 0x2E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESkillScreenReceiveHighlightState ReceiveHighlightState;                             // 0x2F0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5DCF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakActionAbility*                     AssociatedActiveAbility;                           // 0x2F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5DD2[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxSkillScreenSkillInfo              EmptySlotInfo;                                     // 0x330(0xC8)(Transient, NativeAccessSpecifierPublic)
	class UGFxSkillScreenLoadoutSlot*            SwapSlot;                                          // 0x3F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxSkillScreenLoadoutSlot*            IronCubSwapSlot;                                   // 0x400(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakActionAbilityAugmentSlotData*      AugmentSlotData;                                   // 0x408(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAbilitySlotData*             AbilitySlotData;                                   // 0x410(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayerCharacterComponentSlotData*     CharacterAugmentSlotData;                          // 0x418(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5DD3[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSkillScreenLoadoutSlot* GetDefaultObj();

	void OnAssociatedResourcePoolUpdated(struct FGameResourcePoolReference* ResourcePool, float NewValue);
	void OnActionSkillCoolingDown(class UOakActionAbility* InActionAbility);
	void OnActionSkillActivated(class UOakActionAbility* InActionAbility);
};

// 0x0 (0x100 - 0x100)
// Class OakGame.GFxSkillScreenMenuData
class UGFxSkillScreenMenuData : public UGFxStatusMenuSubmenuData
{
public:

	static class UClass* StaticClass();
	static class UGFxSkillScreenMenuData* GetDefaultObj();

};

// 0x68 (0x370 - 0x308)
// Class OakGame.GFxSkillScreenRow
class UGFxSkillScreenRow : public UGbxGFxListCell
{
public:
	class UGFxSkillScreenItem*                   DisplayedSkillSlots[0x5];                          // 0x308(0x28)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityTreeTierData*         TierData;                                          // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5DD8[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSkillScreenRow* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class OakGame.GFxSkillScreenRowList
class UGFxSkillScreenRowList : public UGbxGFxGridScrollingListPaged
{
public:

	static class UClass* StaticClass();
	static class UGFxSkillScreenRowList* GetDefaultObj();

};

// 0x30 (0x1A0 - 0x170)
// Class OakGame.GFxSkillScreenDragObject
class UGFxSkillScreenDragObject : public UGbxGFxObject
{
public:
	uint8                                        Pad_5DDC[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         SkillIconArt;                                      // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5DDD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSkillScreenDragObject* GetDefaultObj();

};

// 0x860 (0xEF0 - 0x690)
// Class OakGame.GFxSkillScreenTree
class UGFxSkillScreenTree : public UGFxStatusMenuSubmenu
{
public:
	uint8                                        Pad_5E12[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGFxSkillScreenBranchContainer> SkillScreenTreeBranchContainers;                   // 0x6A8(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UOakPlayerAbilityTree*                 PlayerAbilityTree;                                 // 0x6B8(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGFxSkillScreenInfoCardContainer      InfoCard;                                          // 0x6C0(0x160)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGFxSkillScreenSkillInfo              ClassAbilityInfo;                                  // 0x820(0xC8)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FName                                  EchoDeviceScreen_Unlocked;                         // 0x8E8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TreeUnlockLevel;                                   // 0x8F0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E13[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AudioSkillPoints;                                  // 0x8F8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  AudioSkillMax;                                     // 0x908(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AudioNewRowUnlocked;                               // 0x910(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AudioSpinTree;                                     // 0x918(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AudioEquipSkill;                                   // 0x920(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AudioTreeUnlock;                                   // 0x928(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VOTreeUnlock;                                      // 0x930(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TreeUnlockDelayForVO;                              // 0x938(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E17[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AudioToggleView;                                   // 0x940(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AudioUnequipSkill;                                 // 0x948(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AudioErrorNotification;                            // 0x950(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AudioManageLoadout;                                // 0x958(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGFxMenuTutorialCollection            Tutorials;                                         // 0x960(0x20)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FName                                  PurchasePassiveTutorial;                           // 0x980(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WingtipTutorial;                                   // 0x988(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TreeUnlockFirstSpinIndex;                          // 0x990(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TreeUnlockSecondSpinIndex;                         // 0x994(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TreeUnlockSlotPrimaryIndex;                        // 0x998(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TreeUnlockSlotPetIndex;                            // 0x99C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TreeUnlockSlotSecondaryHardpointIndex;             // 0x9A0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PurchasePassiveSpendPointIndex;                    // 0x9A4(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CharacterSpecificFirstUnlockTutorial;              // 0x9A8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          IconBackgroundSelectedColor;                       // 0x9B0(0x10)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          IconBackgroundAvailableColor;                      // 0x9C0(0x10)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          IconBackgroundLockedColor;                         // 0x9D0(0x10)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         SkillTreeContainer;                                // 0x9E0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOakPlayerAbilityTreeBranchData*> CachedBranches;                                    // 0x9E8(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E1D[0x188];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxButton*                         LeftArrow;                                         // 0xB80(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     LeftArrowHint;                                     // 0xB88(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxButton*                         RightArrow;                                        // 0xB90(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxHintWidget*                     RightArrowHint;                                    // 0xB98(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxSkillScreenDragObject*             DragSkillItem;                                     // 0xBA0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxTutorialWidget*                    TutorialWidget;                                    // 0xBA8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USwfMovie*                             BranchSwfMovie;                                    // 0xBB0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E21[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxSkillScreenItem*                   CurrentlyFocusedSkillItem;                         // 0xBC0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E22[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxSkillScreenItem*                   CachedDragTarget;                                  // 0xBD0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxSkillScreenLoadoutSlot*            CurrentlyFocusedLoadoutSlot;                       // 0xBD8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBalanceStateComponent*                CharacterBalanceComponent;                         // 0xBE0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGFxSkillScreenState              ScreenState;                                       // 0xBE8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGFxSkillScreenState              TransitionScreenState;                             // 0xBE9(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E26[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakActionAbility*>             ActionAbilities;                                   // 0xBF0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UGFxSkillScreenLoadoutSlot*>    SlotsToAutoSlot;                                   // 0xC00(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UGFxSkillScreenLoadoutSlot*>    LoadoutSlots;                                      // 0xC10(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UGFxSkillScreenLoadoutSlot*>    ValidLoadoutSlotsForSelectedItem;                  // 0xC20(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UGFxSkillScreenLoadoutSlot*>    DragTargetSlots;                                   // 0xC30(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class FText                                  EmptySlotText;                                     // 0xC40(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  TreeUnlockedAbility;                               // 0xC58(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  TreeUnlockedText;                                  // 0xC70(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  ActionSkillName;                                   // 0xC88(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  ActionSkillDescription;                            // 0xCA0(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  ModPrimaryName;                                    // 0xCB8(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  ModPrimaryDescription;                             // 0xCD0(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  ModSecondaryName;                                  // 0xCE8(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  ModSecondaryDescription;                           // 0xD00(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  PassiveSlotName;                                   // 0xD18(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  EqippedName;                                       // 0xD30(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  UnlocksAtLevelText;                                // 0xD48(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  AbilityInUseString;                                // 0xD60(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  SlotMustBeFilledString;                            // 0xD78(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardEquippedString;                            // 0xD90(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardMustBeEquippedString;                      // 0xDA8(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardEquipAnItemString;                         // 0xDC0(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardDefaultSlottedItemString;                  // 0xDD8(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardRequiresParentSkillString;                 // 0xDF0(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardNotEnoughBranchPointsString;               // 0xE08(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardUnlockTreeString;                          // 0xE20(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardUnpurchasedPassiveString;                  // 0xE38(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardPurchasedPassiveString;                    // 0xE50(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardMaxedPassiveString;                        // 0xE68(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  InfoCardInsufficientPointsString;                  // 0xE80(0x18)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UGbxGFxDragDropManager*                DragDropManager;                                   // 0xE98(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E2C[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxSkillScreenTree* GetDefaultObj();

	void OnTutorialComplete();
	void OnTutorialAdvanced();
	void OnTreeItemPressed(class UGFxSkillScreenItem* PressedItem);
	void OnSpinButtonPressed(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnSlotButtonHovered(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnSlotButtonFocused(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnSlotButtonClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnItemUsableStateChanged(class UGFxSkillScreenItem* UpdatedItem);
	void OnItemUnlockedAudioRequest();
	void OnItemSlotRequest(class UGFxSkillScreenItem* ItemToSlot, int32 SlotIndex);
	void OnItemIncreasedAudioRequest(int32 AudioIndex);
	void OnInfoCardUnhovered(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnInfoCardHovered(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnFocusedTreeItemChanged(class UGFxSkillScreenItem* FocusedItem);
	void OnFocusedLoadoutItemChanged(class UGFxSkillScreenLoadoutSlot* FocusedItem);
	void OnCharacterAugmentChanged(class UPlayerCharacterComponentSlotData* SlotData);
	void OnBranchHovered(class UGbxGFxButton* HoverededButton, struct FGbxMenuInputEvent& InputInfo);
	void OnBranchClicked(class UGFxSkillScreenBranch* ClickedBranch);
	void OnAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnAbilityPointsChanged(int32 RemainingAbilityPoints);
	void OnAbilityItemChanged(class UOakPlayerAbilityTreeItemData* ItemData);
	void OnAbilityAugmentChanged(TSubclassOf<class UOakActionAbility> ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void ExtSpinRightTransition();
	void ExtSpinLeftTransition();
	void ExtOnTutorialSpinComplete();
	void ExtOnScreenUnlockAnimationComplete();
};

// 0x10 (0xF0 - 0xE0)
// Class OakGame.GFxStatusMenuData
class UGFxStatusMenuData : public UGbxGFxMenuSwitcherMenuData
{
public:
	class FName                                  FirstMenuToLookAt;                                 // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               FirstMenuSelectionObject;                          // 0xE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGFxStatusMenuData* GetDefaultObj();

};

// 0x488 (0xB10 - 0x688)
// Class OakGame.GFxStatusMenu
class UGFxStatusMenu : public UGbxGFxMenuSwitcher
{
public:
	TArray<struct FGFxStatusMenuSubmenuKeyMap>   SubmenuKeymapping;                                 // 0x688(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  StatusMenuInputAction;                             // 0x698(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStandInUIController                  StandInController;                                 // 0x6A0(0x430)(Edit, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  BackgroundParticleEffectWipeSound;                 // 0xAD0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackgroundParticleEffectCloseSound;                // 0xAD8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AOakGameState>          OakGameState;                                      // 0xAE0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxStatusMenuNavBar*                  StatusMenuNavBar;                                  // 0xAE8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AZoneMapViewer*                        ZoneMapViewer;                                     // 0xAF0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBackgroundParticleStateOn;                        // 0xAF8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5E3C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGFxStatusMenuNavBarInfo>      NavBarInfos;                                       // 0xB00(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxStatusMenu* GetDefaultObj();

	void OnPlayTransitionAnimation(enum class EGFxStatusMenuTransitionReason Reason);
	void OnPlayerWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnNumPlayersChanged(int32 NewNumPlayers);
};

// 0x60 (0x1D0 - 0x170)
// Class OakGame.GFxStatusMenuNavBar
class UGFxStatusMenuNavBar : public UGbxGFxObject
{
public:
	class UGbxGFxGridScrollingList*              NavListClip;                                       // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxHintWidget*                     PrevButtonHintClip;                                // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxHintWidget*                     NextButtonHintClip;                                // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5E42[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxStatusMenuSubmenu*                 OwnerSubmenu;                                      // 0x1C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5E43[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxStatusMenuNavBar* GetDefaultObj();

	void OnNavCellClicked(class UGbxGFxListCell* ClickedItem, struct FGbxMenuInputEvent& InputInfo);
};

// 0x28 (0x330 - 0x308)
// Class OakGame.GFxStatusMenuNavBarButton
class UGFxStatusMenuNavBarButton : public UGbxGFxListCell
{
public:
	struct FGFxStatusMenuNavBarInfo              ButtonInfo;                                        // 0x308(0x18)(NativeAccessSpecifierPublic)
	uint8                                        Pad_5E45[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxStatusMenuNavBarButton* GetDefaultObj();

};

// 0x90 (0x6A0 - 0x610)
// Class OakGame.GFxSubtitlesWidget
class UGFxSubtitlesWidget : public UGbxGFxHUDWidget
{
public:
	float                                        ClosedCaptionLifetime;                             // 0x610(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTextScalingForLargestBackground;                // 0x614(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                SubtitleBackgroundSizeMapping;                     // 0x618(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGbxTextField*                         SubtitleField;                                     // 0x628(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         SubtitleBackground;                                // 0x630(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESubtitleLayoutType               CurrentSubtitleLayoutType;                         // 0x638(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E4C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         ClosedCaptioningContainer;                         // 0x640(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FClosedCaptionEntry>           ClosedCaptioningLines;                             // 0x648(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FSubtitleLine>                 SubtitleLines;                                     // 0x658(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E4D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        CurrentSubtitleID;                                 // 0x670(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bStopAfterCurrentSubtitle;                         // 0x678(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSubtitleChangePending;                            // 0x679(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E4F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SubtitleLifetime;                                  // 0x67C(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E50[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CachedSubtitle;                                    // 0x688(0x18)(BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxSubtitlesWidget* GetDefaultObj();

};

// 0x20 (0x630 - 0x610)
// Class OakGame.GFxTargetedNameplate
class UGFxTargetedNameplate : public UGbxGFxHUDWidget
{
public:
	class UGFxNameplate*                         Nameplate;                                         // 0x610(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           RangeFadeCurve;                                    // 0x618(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeStartDistance;                                 // 0x620(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeEndDistance;                                   // 0x624(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LingerDuration;                                    // 0x628(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E54[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxTargetedNameplate* GetDefaultObj();

};

// 0x50 (0x660 - 0x610)
// Class OakGame.GFxTutorialMessageWidget
class UGFxTutorialMessageWidget : public UGbxGFxHUDWidget
{
public:
	uint8                                        Pad_5E58[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         TutorialWidgetContainer;                           // 0x620(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         HeaderText;                                        // 0x628(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         BodyText;                                          // 0x630(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTutorialMessageDataAsset*>     TutorialMessageQueue;                              // 0x638(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UTutorialMessageDataAsset*             CurrentTutorialMessage;                            // 0x648(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E59[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTutorialMessageDataAsset*             TestMessage;                                       // 0x658(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGFxTutorialMessageWidget* GetDefaultObj();

	void OnInputDeviceChanged();
	void ExtOnRolloutComplete();
};

// 0x30 (0x1A0 - 0x170)
// Class OakGame.GFxUISpinnerWidget
class UGFxUISpinnerWidget : public UGbxGFxObject
{
public:
	uint8                                        Pad_5E5C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        TargetValue;                                       // 0x180(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E5E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         AnimationWrapper;                                  // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        TotalDigitsDisplayed;                              // 0x190(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5E60[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxUISpinnerWidget* GetDefaultObj();

};

// 0x60 (0x1D0 - 0x170)
// Class OakGame.GFxVaultHunterProfileCard
class UGFxVaultHunterProfileCard : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         PictureClip;                                       // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         PlayerNameClip;                                    // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardPlayerStatusWidget* PlayerStatusClip;                                  // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardSkillsWidget* SkillClip;                                         // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardInventoryWidget* InventoryClip;                                     // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardStatsWidget* StatsClip;                                         // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         MissionNameTextClip;                               // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxVaultHunterProfileCardMode    CardMode;                                          // 0x1A8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxVaultHunterProfileCardView    CurrentView;                                       // 0x1A9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E66[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AOakPlayerController>   SelfOakPC;                                         // 0x1AC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsOff;                                            // 0x1B4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E67[0x1B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCard* GetDefaultObj();

};

// 0x8 (0x310 - 0x308)
// Class OakGame.GFxVaultHunterProfileCardChangeStatusCell
class UGFxVaultHunterProfileCardChangeStatusCell : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                         IconClip;                                          // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCardChangeStatusCell* GetDefaultObj();

};

// 0x10 (0x330 - 0x320)
// Class OakGame.GFxVaultHunterProfileCardChangeStatusList
class UGFxVaultHunterProfileCardChangeStatusList : public UGbxGFxGridScrollingList
{
public:
	TWeakObjectPtr<class UGbxGFxObject>          WrapperClip;                                       // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5E6C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCardChangeStatusList* GetDefaultObj();

};

// 0x50 (0x1C0 - 0x170)
// Class OakGame.GFxVaultHunterProfileCardPlayerStatusWidget
class UGFxVaultHunterProfileCardPlayerStatusWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         StatusWrapperClip;                                 // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         LookingForHelpTextClip;                            // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         StatusTextClip;                                    // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         StatusIconClip;                                    // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ChangeStatusWrapperClip;                           // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardChangeStatusList* ChangeHunterStatusClip;                            // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     ToggleHelpHintClip;                                // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxHintWidget*                     UpdateStatusHintClip;                              // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCurrentLookingForHelp;                            // 0x1B0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCurrentHasStatus;                                 // 0x1B1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E75[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UGFxVaultHunterProfileCard> OwningProfileCard;                                 // 0x1B4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E76[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCardPlayerStatusWidget* GetDefaultObj();

	void OnActivityCellClicked(class UGbxGFxListCell* ClickedItem, struct FGbxMenuInputEvent& InputInfo);
};

// 0x70 (0x1E0 - 0x170)
// Class OakGame.GFxVaultHunterProfileCardSkillsWidget
class UGFxVaultHunterProfileCardSkillsWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         ClassIconClip;                                     // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    GreenProgressBarClip;                              // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         GreenProgressBarIconClip;                          // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         GreenPercentLabelClip;                             // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    BlueProgressBarClip;                               // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         BlueProgressBarIconClip;                           // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         BluePercentLabelClip;                              // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    RedProgressBarClip;                                // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         RedProgressBarIconClip;                            // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         RedPercentLabelClip;                               // 0x1B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    PurpleProgressBarClip;                             // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         PurpleProgressBarIconClip;                         // 0x1C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         PurplePercentLabelClip;                            // 0x1D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E7C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCardSkillsWidget* GetDefaultObj();

};

// 0x20 (0x190 - 0x170)
// Class OakGame.GFxVaultHunterProfileCardInventoryItemWidget
class UGFxVaultHunterProfileCardInventoryItemWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         RarityClip;                                        // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         WeaponTypeClip;                                    // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         IconGearClip;                                      // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E7F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCardInventoryItemWidget* GetDefaultObj();

};

// 0x40 (0x1B0 - 0x170)
// Class OakGame.GFxVaultHunterProfileCardInventoryWidget
class UGFxVaultHunterProfileCardInventoryWidget : public UGbxGFxObject
{
public:
	class UGFxVaultHunterProfileCardInventoryItemWidget* WeaponClips[0x4];                                  // 0x170(0x20)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardInventoryItemWidget* GrenadeClip;                                       // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardInventoryItemWidget* ShieldClip;                                        // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardInventoryItemWidget* ClassModClip;                                      // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxVaultHunterProfileCardInventoryItemWidget* RelicClip;                                         // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCardInventoryWidget* GetDefaultObj();

};

// 0x18 (0x330 - 0x318)
// Class OakGame.GFxVaultHunterProfileCardStatItemWidget
class UGFxVaultHunterProfileCardStatItemWidget : public UGbxGFxProgressBar
{
public:
	class UGbxTextField*                         ListTextClip;                                      // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         PercentageTextClip;                                // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5E89[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCardStatItemWidget* GetDefaultObj();

};

// 0x40 (0x1B0 - 0x170)
// Class OakGame.GFxVaultHunterProfileCardStatsWidget
class UGFxVaultHunterProfileCardStatsWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                         StatBarContainerClip;                              // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxSlider*                         StatBarsScrollerClip;                              // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         StatBarsGridAreaClip;                              // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGFxVaultHunterProfileCardStatItemWidget*> StatClips;                                         // 0x188(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         TimePlayedTextClip;                                // 0x198(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             StatBarsInitialPosition;                           // 0x1A0(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StatBarWindowHeight;                               // 0x1A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StatBarContentHeight;                              // 0x1AC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGFxVaultHunterProfileCardStatsWidget* GetDefaultObj();

	void OnStatBarScrollerUpdated(float SliderPercent);
};

// 0x70 (0x770 - 0x700)
// Class OakGame.GFxVendingMachineBackpackItemWidget
class UGFxVendingMachineBackpackItemWidget : public UGFxInventoryItemWidget
{
public:
	uint8                                        Pad_5E92[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVendingMachineBackpackItemWidget* GetDefaultObj();

};

// 0xA38 (0x10A0 - 0x668)
// Class OakGame.GFxVendingMachineMenu
class UGFxVendingMachineMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	struct FGFxBackpackWidgetConfig              BackpackWidgetConfig;                              // 0x668(0x118)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        BackpackVisibleCells;                              // 0x780(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackCellSize;                                  // 0x784(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackCellSpacing;                               // 0x78C(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ItemCardOffset;                                    // 0x794(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackpackItemCardOffset;                            // 0x79C(0x8)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5E9F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BuyCameraState;                                    // 0x7A8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SellCameraState;                                   // 0x7B0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompareFromMachineCameraState;                     // 0x7B8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompareFromInventoryCameraState;                   // 0x7C0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BuyEchoOrientation;                                // 0x7C8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SellEchoOrientation;                               // 0x7D0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompareFromMachineEchoOrientation;                 // 0x7D8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CompareFromInventoryEchoOrientation;               // 0x7E0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DefaultProjectionFXWidgetName;                     // 0x7E8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemCardScale;                                     // 0x7F0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemCardCurrencyWidgetTime;                        // 0x7F4(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemCardScaleSplitScreen;                          // 0x7F8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EA1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGFxItemCard>              ItemCardClass;                                     // 0x800(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USwfMovie*                             ItemCardSwf;                                       // 0x808(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          ItemInspectionMenuData;                            // 0x810(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x818(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EA3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakThumbnailManager*                  IconManager;                                       // 0x820(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxBillboardComponent*                GFxItemInfoDisplayComponent;                       // 0x828(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadiusDebug;                                       // 0x830(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EA5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 ShouldUseVec;                                      // 0x838(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       ShelfScorecardOffsets;                             // 0x848(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AmountToModify;                                    // 0x858(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVendingTabOrder                      NavigationTabOrder;                                // 0x860(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FGFxCurrencyCounterCategoryData> CounterCategories;                                 // 0x878(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  AddedToInventorySoundFX;                           // 0x888(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RemovedFromInventorySoundFX;                       // 0x890(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WarningSoundFX;                                    // 0x898(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OpenBackpackFX;                                    // 0x8A0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BuyItemSoundFX;                                    // 0x8A8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SellItemSoundFX;                                   // 0x8B0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HealthFilledFX;                                    // 0x8B8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AmmoFilledFX;                                      // 0x8C0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IODDisplayedFX;                                    // 0x8C8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SoldAllJunkFX;                                     // 0x8D0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVendingIDToSocketNameMap>     IdToSockets;                                       // 0x8D8(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EA8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVendingObjectToSocketLocationMap> ObjectToSocketLocations;                           // 0x8F0(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        CurrentSocketMap;                                  // 0x900(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrencyWidgetSpinnerHeightOverride;               // 0x904(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrencyWidgetCostSpinTime;                        // 0x908(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrencyWidgetPauseOnNewValueTime;                 // 0x90C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxThumbnails;                                     // 0x910(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EA9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UGbxAmmoTypeData>       GrenadeAmmoType;                                   // 0x918(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameResourceData>      GrenadePool;                                       // 0x940(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGameResourceData>> AmmoTypesToTrack;                                  // 0x968(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EAA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bQueueRefreshThumbnails;                           // 0x988(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBackpackHidden;                                   // 0x989(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EAB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInventoryListEntryHandle>     CurrentInventory;                                  // 0x990(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        CurrentInventoryMaxSize;                           // 0x9A0(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNeedsBackpackUpdateOnTick;                        // 0x9A4(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSetIndexToZeroForBackpackRefresh;                 // 0x9A5(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EAC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EGFxVendingMachineMenuBackpackState CurrentBackpackState;                              // 0x9A8(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UInventoryCategoryData> CurrentPlayerWidgetCategory;                       // 0x9AC(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EAD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  CachedPlayerController;                            // 0x9B8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter*                         CachedOakCharacter;                                // 0x9C0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryListComponent*               InventoryList;                                     // 0x9C8(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UGbxGFxObject*, struct FVector>   ObjectToSocketLocationMap;                         // 0x9D0(0x50)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UGFxBillboardComponent*>        SavedBillboards;                                   // 0xA20(0x10)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGFxVendingMenuConfig                 Config;                                            // 0xA30(0x70)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class UGFxLoadedItemCardBase*                BackpackItemCardLoader;                            // 0xAA0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxLoadedItemCardBase*                VendingItemCardLoader;                             // 0xAA8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AActor>                 CachedCompareInventoryActor;                       // 0xAB0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UGFxVendingMachineBackpackItemWidget> CachedComparedBackpackItem;                        // 0xAB8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxGFxButton*>                 NavButtons;                                        // 0xAC0(0x10)(BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EAE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentFilterIndex;                                // 0xAD4(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakInventoryMenuFilter>       CurrentFilters;                                    // 0xAD8(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EB0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BackpackDoubleClickTimeLimit;                      // 0xAF0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentNavIndex;                                   // 0xAF4(0x4)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWantUpdateEverythingOnNextBagUpdate;              // 0xAF8(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EB2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AVendingMachineProxy*                  CachedVendingMachineProxy;                         // 0xB00(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AVendingMachine*                       CachedVendingMachine;                              // 0xB08(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerShopManagerComponent*           PlayerShopManager;                                 // 0xB10(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryShopComponent*               CurrentShopComponent;                              // 0xB18(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         VendingMachineFocusWidget;                         // 0xB20(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGFxVendingMachineDisplayMode     CurrentDisplayMode;                                // 0xB28(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EB5[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         NavBarContainerClip;                               // 0xB60(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         NavBuyButton;                                      // 0xB68(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         NavBuyBackButton;                                  // 0xB70(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxButton*                         NavSellButton;                                     // 0xB78(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxItemCard*                          InspectionItemCard;                                // 0xB80(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGFxBackpackWidget                    backpack;                                          // 0xB88(0x198)(BlueprintReadOnly, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         BackpackContainer;                                 // 0xD20(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         MarcusTipContainer;                                // 0xD28(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EB7[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         ItemOfTheDayClip;                                  // 0xD78(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EB8[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxVendingMachinePlayerWidget*        VendingPlayerWidget;                               // 0xDA8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EB9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         BackpackOuterContainerClip;                        // 0xDC0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxDelayTimeToLoadThumbnails;                      // 0xDC8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EBA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                VendingPlayerWidgetString;                         // 0xDD0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MarcusHeadClipString;                              // 0xDE0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MarcusTooltipContainerString;                      // 0xDF0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ItemOfTheDayShelfString;                           // 0xE00(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                VendingMachineListBoxID;                           // 0xE10(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                BuyStateNavID;                                     // 0xE20(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                BuyBackStateNavID;                                 // 0xE30(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                SellStateNavID;                                    // 0xE40(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                StateTextID;                                       // 0xE50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                IodTimerTextID;                                    // 0xE60(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ItemOfTheDayTextID;                                // 0xE70(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                NavMenuID;                                         // 0xE80(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                NavBuyButtonID;                                    // 0xE90(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                NavBuyBackButtonID;                                // 0xEA0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                NavSellButtonID;                                   // 0xEB0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                NavMenuLeftGlyphID;                                // 0xEC0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                NavMenuRightGlyphID;                               // 0xED0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MarcusHeadSlotBaseID;                              // 0xEE0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                BackpackSortID;                                    // 0xEF0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                BackpackHeaderID;                                  // 0xF00(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                BackpackID;                                        // 0xF10(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PreviousButtonTextClipID;                          // 0xF20(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                NextButtonTextClipID;                              // 0xF30(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MarcusTipContainerID;                              // 0xF40(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                SmallPlayerHeadID;                                 // 0xF50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                VendingItemClass;                                  // 0xF60(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  LimitedTimeString;                                 // 0xF70(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  ItemOfTheDayString;                                // 0xF88(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  CantSellFavoriteText;                              // 0xFA0(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  CantSellItemGenericText;                           // 0xFB8(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  CloseString;                                       // 0xFD0(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  BackString;                                        // 0xFE8(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  CompareString;                                     // 0x1000(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  BuyString;                                         // 0x1018(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  BuyBackString;                                     // 0x1030(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  SellString;                                        // 0x1048(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  SellJunkString;                                    // 0x1060(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  InspectString;                                     // 0x1078(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EBC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVendingMachineMenu* GetDefaultObj();

	void OnVendingSelectionChanged();
	void OnVendingMachineScroll(enum class EVendingMachineScrollDirection ScrollDirection);
	void OnVendingMachineDirty();
	void OnVendingMachineBoughtItem(enum class EVendingMachineBuyType BuyType, class AActor* InventoryActor);
	void OnVendingItemClicked(class UGbxGFxButton* BUTTON, struct FGbxMenuInputEvent& InputInfo);
	void OnThumbnailLoaded();
	void OnRigthItemCardReady();
	void OnNavMenuItemClicked(class UGbxGFxButton* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnLeftItemCardReady();
	void OnInventoryQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void OnInventoryItemUpdated(struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryItemUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnInventoryItemRemoved(struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryItemEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnInventoryItemAdded(struct FInventoryListEntryHandle& ItemHandle);
	void OnBackpackGridItemSelected(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBackpackGridItemClicked(struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, struct FGbxMenuInputEvent& InputInfo);
	void OnAmmoMinMaxValueUpdate(struct FGameResourcePoolReference* ResourcePoolReference, float MinValue, float MaxValue);
	void OnAmmoCurrentValueUpdate(struct FGameResourcePoolReference* ResourcePoolReference, float CurrentValue);
};

// 0x320 (0x490 - 0x170)
// Class OakGame.GFxVendingMachinePlayerWidget
class UGFxVendingMachinePlayerWidget : public UGbxGFxObject
{
public:
	class FText                                  PurchasedText;                                     // 0x170(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  SoldText;                                          // 0x188(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  HealthFullText;                                    // 0x1A0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AmmoFullText;                                      // 0x1B8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  BagFullText;                                       // 0x1D0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  InsufficientFundsText;                             // 0x1E8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         VendingPlayerWidgetTopClip;                        // 0x200(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EBF[0x1D0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         VendingPlayerWidgetClip;                           // 0x3D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EC1[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxProgressBar*                    VendingShieldClip;                                 // 0x430(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    VendingHealthClip;                                 // 0x438(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EC2[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxCurrencyCounterClip*               CurrencyWidgetClip;                                // 0x480(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EC3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVendingMachinePlayerWidget* GetDefaultObj();

};

// 0x10 (0xD0 - 0xC0)
// Class OakGame.GFxVendingMachineMenuData
class UGFxVendingMachineMenuData : public UOakGFxMenuData
{
public:
	TArray<struct FGFxVendingMachineMenuFilter>  Filters;                                           // 0xC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGFxVendingMachineMenuData* GetDefaultObj();

};

// 0xA80 (0x1090 - 0x610)
// Class OakGame.GFxVendingMachinePrompt
class UGFxVendingMachinePrompt : public UGbxGFxHUDWidget
{
public:
	struct FOakThumbnailManagerRenderProperties  RenderPropertiesForGunThumbnail;                   // 0x610(0x690)(Edit, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVendingMachineSocketLocationAndOffset SocketLocationAndOffset;                           // 0xCA0(0x28)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class AOakPlayerController*                  CachedOakPlayerController;                         // 0xCC8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             CachedScreenSocketLocation;                        // 0xCD0(0x8)(BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EC7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CachedOriginalTransform;                           // 0xCE0(0x30)(BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class AActor*                                FeaturedItemActor;                                 // 0xD10(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakThumbnailManager*                  IconManager;                                       // 0xD18(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter*                         VendingMachineMenuCharacter;                       // 0xD20(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerShopManagerComponent*           PlayerShopManager;                                 // 0xD28(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryShopComponent*               CurrentShopComponent;                              // 0xD30(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EC8[0x150];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VisibilityDistance;                                // 0xE88(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5ECA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DistanceScaleCurve;                                // 0xE90(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  FlavorTextString;                                  // 0xE98(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  ItemOfTheDayTextString;                            // 0xEB0(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FName                                  SocketName;                                        // 0xEC8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                RarityContentID;                                   // 0xED0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                TimerTextID;                                       // 0xEE0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                IODTextID;                                         // 0xEF0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ItemScoreID;                                       // 0xF00(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ManufacturerContentID;                             // 0xF10(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                RarityTextID;                                      // 0xF20(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                RaysID;                                            // 0xF30(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                FlavorTextID;                                      // 0xF40(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ElementalIconID;                                   // 0xF50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                WeaponIconID;                                      // 0xF60(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                WeaponIconShadowID;                                // 0xF70(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                HeadTypeID;                                        // 0xF80(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ManufacturerIconID;                                // 0xF90(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ManufactrerRarityClipID;                           // 0xFA0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ExtRenderClipID;                                   // 0xFB0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ExtShadowRenderClipID;                             // 0xFC0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ViewportBaseScaleFactor;                           // 0xFD0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5ECB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SoldOutText;                                       // 0xFD8(0x18)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ItemOfTheDayClip;                                  // 0xFF0(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         HeadType;                                          // 0xFF8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ElementalIcon;                                     // 0x1000(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         RarityContent;                                     // 0x1008(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         RarityTextClip;                                    // 0x1010(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         Rays;                                              // 0x1018(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         WeaponIcon;                                        // 0x1020(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         TimerText;                                         // 0x1028(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         IODText;                                           // 0x1030(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ItemScore;                                         // 0x1038(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ManufacturerContent;                               // 0x1040(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ManufacturerIcon;                                  // 0x1048(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         RarityText;                                        // 0x1050(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         FlavorText;                                        // 0x1058(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         WeaponIconShadow;                                  // 0x1060(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ManufacturerRarityClip;                            // 0x1068(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ExtRenderClip;                                     // 0x1070(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxObject*                         ExtShadowRenderClip;                               // 0x1078(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         SoldOutTextClip;                                   // 0x1080(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5ECE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxVendingMachinePrompt* GetDefaultObj();

	void UpdateWidgetLocation(const struct FVector& DistVector);
	struct FVector UpdateDistanceToVendingMachine();
	void RefreshIcon();
	void OnThumbnailLoaded();
	void OnLookedAwayFromByPlayer(class UUsableComponent* NewUsableComponent);
	void OnLookedAtByPlayer(class UUsableComponent* NewUsableComponent);
	void InitSocketLocation(class AVendingMachine* VendingMachine);
	void BuildVendingMachinePrompt(class AVendingMachine* VendingMachine);
};

// 0x488 (0x4B8 - 0x30)
// Class OakGame.GlobalHeroPointsData
class UGlobalHeroPointsData : public UGbxDataAsset
{
public:
	struct FHeroPointDetails                     Strength;                                          // 0x30(0xB8)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHeroPointDetails                     Dexterity;                                         // 0xE8(0xB8)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHeroPointDetails                     Intelligence;                                      // 0x1A0(0xB8)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHeroPointDetails                     Wisdom;                                            // 0x258(0xB8)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHeroPointDetails                     Constitution;                                      // 0x310(0xB8)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHeroPointDetails                     Luck;                                              // 0x3C8(0xB8)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          AllocationLimit;                                   // 0x480(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGlobalHeroPointsData* GetDefaultObj();

};

// 0x1A0 (0xAF0 - 0x950)
// Class OakGame.OakCharacterAnimInstance
class UOakCharacterAnimInstance : public UGbxCharacterAnimInstance
{
public:
	uint8                                        Pad_5ED5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsMantling;                                        // 0x958(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSprinting;                                       // 0x959(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanUseWeaponWhileSprinting;                       // 0x95A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSliding;                                         // 0x95B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUsingLadder;                                     // 0x95C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLadderSliding;                                   // 0x95D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPerformingUpdwardLadderJump;                     // 0x95E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5ED7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsUsingWeapon;                                     // 0x960(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReloading;                                       // 0x961(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsZoomed;                                          // 0x962(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5ED8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ZoomDuration;                                      // 0x964(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldLowerWeapon;                                // 0x968(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableIdleToSprintTransition;                    // 0x969(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5ED9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HandToWeaponAlpha;                                 // 0x96C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EDA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECoverUserState                   DesiredCoverState;                                 // 0x971(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EDB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCoverStyleData*                       CoverStyle;                                        // 0x978(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCoverViewData*                        CoverView;                                         // 0x980(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInCover;                                         // 0x988(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WantsToLeaveCover;                                 // 0x989(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCoverFlanked;                                    // 0x98A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInCoverFireIdle;                                 // 0x98B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInCoverFireIdleAndWantsToLeaveCover;             // 0x98C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EDC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClothWeightFromCurve;                              // 0x990(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FacialAnimWeight;                                  // 0x994(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FacialTeethOffset;                                 // 0x998(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanUpdateClothBlendWeight;                        // 0x9A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EDD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsInClassSelection;                               // 0x9A6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWearingBigHat;                                  // 0x9A7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AnimStyle;                                         // 0x9A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EDE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakVehicle*                           CurrentVehicle;                                    // 0x9B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATurretSeatPawn*                       CurrentTurret;                                     // 0x9B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVehicleSeatComponent*                 VehicleSeatComponent;                              // 0x9C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVehicleHoverComponent*                VehicleHoverComponent;                             // 0x9C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5EDF[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         InVehicle;                                         // 0xA00(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EE0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisableAlphaInVehicle;                             // 0xA04(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InMannedTurret;                                    // 0xA08(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSeatedTurret;                                    // 0xA09(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InRollerCoaster;                                   // 0xA0A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EE1[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  VehicleArchetype;                                  // 0xA10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeatIndex;                                         // 0xA18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleThrottleInput;                              // 0xA1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpeed;                                      // 0xA20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSteerAngle;                                 // 0xA24(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSteerAngleExplicitTime;                     // 0xA28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         VehicleIsInReverse;                                // 0xA2C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsVehicleFlipped;                                 // 0xA2D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EE2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleAcceleration;                               // 0xA30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleTurningDelta;                               // 0xA34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleDampedAccelInterpSpeed;                     // 0xA38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSmoothedZVelocity;                          // 0xA3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSlotAlpha;                                  // 0xA40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontBackWorldAdditive;                            // 0xA44(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftRightWorldAdditive;                            // 0xA48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverAdditiveForwardAccelerationTreshold;         // 0xA4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverAdditiveForwardInterpSpeed;                  // 0xA50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverAdditiveLateralAccelerationTreshold;         // 0xA54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverAdditiveLateralInterpSpeed;                  // 0xA58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverAdditiveUpwardAccelerationTreshold;          // 0xA5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DriverAdditiveUpwardInterpSpeed;                   // 0xA60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleArchetype                 VehicleArchetypeEnum;                              // 0xA64(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EE3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NegativeSpeedToPlayTurnWheelBackward;              // 0xA68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EE4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  VehicleSlotName;                                   // 0xA70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimNameTurnWheel;                                 // 0xA78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimSetNameTurnWheel;                              // 0xA80(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimNameTurnWheelInReverse;                        // 0xA88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimSetNameTurnWheelInReverse;                     // 0xA90(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimNameTurretIdle;                                // 0xA98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimSetNameTurretIdle;                             // 0xAA0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimNameAdditiveFlinchFront;                       // 0xAA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimNameAdditiveFlinchBack;                        // 0xAB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimNameAdditiveFlinchLeft;                        // 0xAB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AnimNameAdditiveFlinchRight;                       // 0xAC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     AdditiveFlinchPlaying;                             // 0xAC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForwardDynamicsAlpha;                              // 0xAD4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWheeledCharacter;                                 // 0xAD8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EEB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TireRadius;                                        // 0xADC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              TireRotation;                                      // 0xAE0(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bForceEnableHandIK;                                // 0xAEC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EEC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakCharacterAnimInstance* GetDefaultObj();

	void VehicleHitReaction(const struct FVector2D& ImpactTrehsold, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void SetHasWeaponPoses(bool bHasLeft, bool bHasRight);
	void OnWeaponModeChanged_Native();
	void OnWeaponModeChanged();
	void OnWeaponChanged_Native(class AWeapon* NewWeapon, class AWeapon* PrevWeapon);
	void OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* PrevWeapon);
	void OnVehicleComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnExitVehicleStarted_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnExitVehicleFinished_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnExitTurretStarted_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnExitTurretFinished_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnEnterVehicleStarted_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnEnterTurretStarted_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnChangeVehicleSeat_Native(class UPawnAttachSlotComponent* FromSeat, class UPawnAttachSlotComponent* ToSeat);
	void OnAnimStyleChanged();
};

// 0x10 (0xB00 - 0xAF0)
// Class OakGame.GoliathAnimInstance
class UGoliathAnimInstance : public UOakCharacterAnimInstance
{
public:
	bool                                         bIsEnraged;                                        // 0xAF0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5EEE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LookAtNodeAlpha;                                   // 0xAF4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5EEF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGoliathAnimInstance* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class OakGame.GoreAoEDamageData
class UGoreAoEDamageData : public UGbxDataAsset
{
public:
	uint32                                       MaxBones;                                          // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Chance;                                            // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CumulativeChanceModifier;                          // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EF4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           RadiusChanceCurve;                                 // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDamageFilter*                         DamageFilter;                                      // 0x48(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGoreAoEDamageData* GetDefaultObj();

};

// 0x110 (0x140 - 0x30)
// Class OakGame.GoreDamageData
class UGoreDamageData : public UGbxDataAsset
{
public:
	class FName                                  RootDamageBone;                                    // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeChildBones;                                // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggerOnlyOnDeath;                               // 0x39(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggeredByAoEDamage;                             // 0x3A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideTriggerThreshold;                         // 0x3B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerThreshold;                                  // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGoreRegionType                   GoreRegionType;                                    // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverwriteStumpInstancedMaterialParameters;        // 0x41(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverwriteLimbInstancedMaterialParameters;         // 0x42(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritStumpMaterialParameters;                   // 0x43(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMaterialParameterCopyMethod      InheritStumpMaterialParametersMethod;              // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritLimbMaterialParameters;                    // 0x45(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMaterialParameterCopyMethod      InheritLimbMaterialParametersMethod;               // 0x46(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideSourceMaterialIndex;                      // 0x47(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SourceMaterialIndex;                               // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EF6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StumpSocket;                                       // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StumpBoneScale;                                    // 0x58(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StumpDecalSize;                                    // 0x64(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStumpReceivesDecals;                              // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EF7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LimbSocket;                                        // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGoreSizeSelectionData>        GoreSizeData;                                      // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UHitReactionTag*                       DeathHitReactionOverride;                          // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                   StumpMeshes;                                       // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               StumpParticles;                                    // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceConstant*>     StumpDecals;                                       // 0xB8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StumpSound;                                        // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             StumpMaterialOverride;                             // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    LimbActorClass;                                    // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                       LimbMeshes;                                        // 0xE0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               LimbParticles;                                     // 0xF0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             LimbMaterialOverride;                              // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FForceSelection                       LimbForce;                                         // 0x108(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bScaleLimbToStump;                                 // 0x128(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EF8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LimbScale;                                         // 0x12C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbMassScale;                                     // 0x130(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableDialog;                                    // 0x134(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EFA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDialogEvent*                          GoreDialogEvent;                                   // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGoreDamageData* GetDefaultObj();

	void GenerateGore(class AActor* Actor, struct FGoreSelectionResults* Results, class FName StumpSocketOverride, class FName LimbSocketOverride);
};

// 0xB8 (0x748 - 0x690)
// Class OakGame.OakProjectile
class AOakProjectile : public AProjectile
{
public:
	uint8                                        Pad_5EFD[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreCollisionWithInstigatorAndChildrens;        // 0x6A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGrenade;                                        // 0x6A9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuppressSpawnModifierEffect;                      // 0x6AA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5EFF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCauseDamageStatusEffectOverrides     StatusEffectOverrides;                             // 0x6AC(0x1C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UBalanceStateComponent*                BalanceComponent;                                  // 0x6C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EOakElementalStackBucketType      ElementalEffectBucketType;                         // 0x6D0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F00[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRegisterAsTargetable;                             // 0x6E1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDisplayNameplate;                           // 0x6E2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F01[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDamageComponent*                      DamageComponent;                                   // 0x6E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTargetableComponent*                  TargetableComponent;                               // 0x6F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F02[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SporeBallLastLocation;                             // 0x6FC(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSpawnableSpellBasicData              SpellData;                                         // 0x708(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakProjectile* GetDefaultObj();

	void SetIsGrenade(bool bNewIsGrenade);
	void OnSkagProjectileStop(struct FHitResult& Hit);
	void OnLivingBladeOwnerDestroyed();
	class UBalanceStateComponent* GetBalanceComponent();
};

// 0x260 (0x9A8 - 0x748)
// Class OakGame.Grenade
class AGrenade : public AOakProjectile
{
public:
	uint8                                        Pad_5F16[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGrenadeMod*                           GrenadeMod;                                        // 0x750(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter*                         OwningCharacter;                                   // 0x758(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                      SphereCollision;                                   // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                GrenadeMesh;                                       // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           ChildMesh;                                         // 0x770(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGrenadeProjectileMovementComponent*   GrenadeMovementComponent;                          // 0x778(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGrenadeHomingComponent*               GrenadeHomingComponent;                            // 0x780(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDrunkenRandomMovementComponent*       RandomMovementComponent;                           // 0x788(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDrunkenWaveMovementComponent*         WaveMovementComponent;                             // 0x790(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  AudioComponent;                                    // 0x798(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F17[0xD];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasImpacted;                                      // 0x7AD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F18[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GrenadeImpactFuseTime;                             // 0x7B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTriggerFuseOnImpact;                              // 0x7B4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F19[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              FuseWarningComponent;                              // 0x7C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCauseDamageOnExplode;                             // 0x7C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDestroyOnExplode;                                 // 0x7C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F1A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UParticleSystemComponent*>      AttachedParticles;                                 // 0x7D0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              AttachedTrail;                                     // 0x7E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGrenadeAttachedTrail>         AttachedTrailStack;                                // 0x7E8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	float                                        InitialVelocityZOffset;                            // 0x7F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GrenadeDamage;                                     // 0x7FC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GrenadeExplosionRadius;                            // 0x800(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GrenadeExplosionForce;                             // 0x804(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGrenadeChildGenerationData           ChildGenerationData;                               // 0x808(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bStopRotatingWhenNotMoving;                        // 0x830(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseDefaultMesh;                                   // 0x831(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F1B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGrenadeBehavior_Delivery*             DeliveryMethod;                                    // 0x838(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPayloadInstanceData                  DeliveryInstanceData;                              // 0x840(0x30)(BlueprintVisible, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	TMap<class UGrenadeBehavior_Payload*, struct FPayloadInstanceData> PayloadMethods;                                    // 0x870(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	float                                        GrenadeMeshCollisionOffset;                        // 0x8C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F1C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UElementalEffectCollectionData> BasicTrailData;                                    // 0x8C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           FuseTriggeredAudioEvent;                           // 0x8D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F1D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEnvQueryParams                       BouncyAimAssistQuery;                              // 0x8E0(0xB8)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        MaxAssistAngle;                                    // 0x998(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AssistAngleDot;                                    // 0x99C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F1E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGrenade* GetDefaultObj();

	void UnstickGrenade(class AActor* DamageReceiver, class AActor* DamageCauser);
	void TurnAttachedTrailOn(bool bRestartTrail);
	void StopAudioEventFromBehavior(TSubclassOf<class UGrenadeBehavior> BehaviorClass);
	void StopAudioEvent(class UWwiseEvent* AudioEvent);
	void SetLongbowTarget(struct FVector& InLocation);
	void SetLingering(bool bIsLingering);
	void SetFuseTriggeredAudioEvent(class UWwiseEvent* NewFuseTriggerEvent);
	void SetAttachedTrail(class UParticleSystem* NewTrail, class FName TrailName);
	void ResetFuse();
	void RemoveAttachedTrail(bool bDestroyTrail, bool bAttachingNewTrail, class FName TrailName);
	void OnStuckGrenadeActorDestroyed(class AActor* Actor);
	void OnGrenadeStop(struct FHitResult& ImpactResult);
	void OnGrenadeLastBounce(struct FHitResult& ImpactResult);
	void OnGrenadeBounce(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity);
	void MultiplyRadiusBy(float RadiusScalar);
	void MultiplyDamageBy(float DamageScalar);
	bool IsLingering();
	void IncrementChildOffset(class AGrenade* ParentGrenade, class UGrenadeBehavior_Payload* Payload);
	void IgnorePayloadMethod(TSubclassOf<class UGrenadeBehavior_Payload> PayloadToIgnore);
	bool GrenadeUsesPayload(TSubclassOf<class UGrenadeBehavior_Payload> Payload);
	int32 GetPayloadChildValue(enum class EChildPayloadType PayloadType);
	struct FVector GetLongbowTarget();
	struct FPayloadInstanceData GetInstanceDataFromPayload(class UGrenadeBehavior_Payload* Payload);
	class UGrenadeHomingComponent* GetHomingComponent();
	float GetGrenadeRadius();
	float GetGrenadeDamage();
	class UDrunkenWaveMovementComponent* GetDrunkenWaveComponent();
	class UDrunkenRandomMovementComponent* GetDrunkenRandomComponent();
	struct FGrenadeChildGenerationData GetChildOffset();
	class UParticleSystemComponent* GetAttachedTrail(class FName TrailName);
	void FuseTriggered();
	void DisableBasicTrail();
	void ClearDeliveryMethod();
	void AIProjectile_Disarm();
	void AIProjectile_Detonate();
	bool AIProjectile_CanBeStolen();
	void AIProjectile_Arm();
};

// 0x0 (0x28 - 0x28)
// Class OakGame.GrenadeBehavior
class UGrenadeBehavior : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGrenadeBehavior* GetDefaultObj();

};

// 0x288 (0x2B0 - 0x28)
// Class OakGame.GrenadeBehavior_Delivery
class UGrenadeBehavior_Delivery : public UGrenadeBehavior
{
public:
	class UWwiseEvent*                           GrenadeThrownEvent;                                // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDamageData>               DamageData;                                        // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PlayerSocketSource;                                // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction>                SpellStartAction;                                  // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction>                SpellStopAction;                                   // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction>                SpellFailedAction;                                 // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SecondarySocketSource;                             // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction>                SecondaryStartAction;                              // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction>                SecondaryStopAction;                               // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction>                SecondaryFailedAction;                             // 0x70(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          BaseCooldown;                                      // 0x78(0x38)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UDamageSource>             DamageSourceOverride;                              // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SpellCastingTemplate;                              // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CastingTemplateScale;                              // 0xC0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F1F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFeedbackData*                         SpellWarmupFeedback;                               // 0xC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           SpellWarmupAudioEvent;                             // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFeedbackData*                         SpellOverchannelFeedback;                          // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           SpellOverchannelAudioEvent;                        // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SpellFireTemplate;                                 // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireTemplateScale;                                 // 0xF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F21[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFeedbackData*                         SpellFireFeedback;                                 // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           SpellFireAudioEvent;                               // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ChargePercentParamName;                            // 0x108(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESpellType                        SpellType;                                         // 0x110(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F22[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AOakProjectile>            GrenadeClass;                                      // 0x118(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULightProjectileData>      LightProjectileData;                               // 0x120(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULightBeamData>            LightBeamData;                                     // 0x128(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFireThroughoutChannel;                            // 0x130(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F23[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockOnContactTime;                                 // 0x134(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LockOnBreakRadius;                                 // 0x138(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LockOnBreakAngle;                                  // 0x13C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEnvQueryParams                       TargetSearchQuery;                                 // 0x140(0xB8)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseSimpleDamageOnly;                              // 0x1F8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F24[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    SpawningSpellActor;                                // 0x200(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    SpawningSpellActor_Multi;                          // 0x208(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpellActorZeroPitch;                              // 0x210(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpellActorZeroRoll;                               // 0x211(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAttachToTarget;                                   // 0x212(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F25[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TargetSocket;                                      // 0x218(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakAimAssistParameters*               AimAssistSnapParams;                               // 0x220(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistSnapTime;                                 // 0x228(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseSimpleCast;                                    // 0x22C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F26[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpellWarmupTime;                                   // 0x230(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpellWarmupCancelPercent;                          // 0x234(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpellWarmupFirePercent;                            // 0x238(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bChannelInStages;                                  // 0x23C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F27[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FChannelStage>                 SpellChannelingStages;                             // 0x240(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        OverchannelTime;                                   // 0x250(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F28[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                SpellOverchannelAction;                            // 0x258(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction>                SecondaryOverchannelAction;                        // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCastRepeatedly;                                   // 0x268(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F29[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RepeatedTime;                                      // 0x26C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseSingleCharge;                                  // 0x270(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F2A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpellTriggerData>             Retriggers;                                        // 0x278(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             IconTexture;                                       // 0x288(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGrenadeBehavior_Delivery* GetDefaultObj();

	void SpellStopped(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void SpellStarted(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void SpellActorSpawned(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer, class AActor* SpawnedActor);
};

// 0x0 (0x2B0 - 0x2B0)
// Class OakGame.GrenadeBehavior_DeliveryBlueprint
class UGrenadeBehavior_DeliveryBlueprint : public UGrenadeBehavior_Delivery
{
public:

	static class UClass* StaticClass();
	static class UGrenadeBehavior_DeliveryBlueprint* GetDefaultObj();

};

// 0x0 (0x2B0 - 0x2B0)
// Class OakGame.SpellBehavior_DeliveryBlueprint
class USpellBehavior_DeliveryBlueprint : public UGrenadeBehavior_Delivery
{
public:

	static class UClass* StaticClass();
	static class USpellBehavior_DeliveryBlueprint* GetDefaultObj();

	void SetDelay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, float Delay, class FName DelayName);
	void K2_StopBehaviorAudio(class AGrenade* Grenade);
	void K2_OnSpellStop(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void K2_OnSpellStart(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void K2_OnSpellActorSpawned(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer, class AActor* SpawnedActor);
	void K2_NativeDelayCallback(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, class FName DelayName);
	void K2_GrenadeLastBounce(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeInitialized(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeImpact(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FHitResult& HitResult);
	void K2_GrenadeExplode(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeEndPlay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeBounce(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeBeginPlay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_AttachedToGrenadeMod(class AGrenadeMod* GrenadeMod);
};

// 0x20 (0x48 - 0x28)
// Class OakGame.GrenadeBehavior_Payload
class UGrenadeBehavior_Payload : public UGrenadeBehavior
{
public:
	TArray<struct FAttributeInitializationData>  StackValues;                                       // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F51[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGrenadeBehavior_Payload* GetDefaultObj();

	void SpellStop(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void SpellStart(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void SpellFired(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void SpellDamageDealt(class AOakCharacter* DamagedCharacter, struct FDamageDataEventDetails& DamageEvent);
	void SpellActorSpawned(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer, class AActor* SpawnedActor);
	float GetValueFromInstanceData(struct FPayloadInstanceData& InstanceData);
};

// 0x0 (0x48 - 0x48)
// Class OakGame.SpellBehavior_Payload
class USpellBehavior_Payload : public UGrenadeBehavior_Payload
{
public:

	static class UClass* StaticClass();
	static class USpellBehavior_Payload* GetDefaultObj();

	void K2_OnSpellStop(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void K2_OnSpellStart(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void K2_OnSpellFired(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer);
	void K2_OnSpellDamageDealt(class AOakCharacter* DamagedCharacter, struct FDamageDataEventDetails& DamageEvent);
	void K2_OnSpellActorSpawned(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer, class AActor* SpawnedActor);
};

// 0x0 (0x48 - 0x48)
// Class OakGame.GrenadeBehavior_PayloadBlueprint
class UGrenadeBehavior_PayloadBlueprint : public USpellBehavior_Payload
{
public:

	static class UClass* StaticClass();
	static class UGrenadeBehavior_PayloadBlueprint* GetDefaultObj();

	class AGrenade* SpawnChildGrenade(class AGrenade* ParentGrenade, const struct FTransform& SpawnTransform);
	void SetDelay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData, float Delay, class FName DelayName);
	void K2_UpdateChildGeneration(struct FGrenadeChildGenerationData& InGenerationData, struct FGrenadeChildGenerationData* GenerationData);
	void K2_StopBehaviorAudio(class AGrenade* Grenade);
	void K2_NativeDelayCallback(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData, class FName DelayName);
	void K2_GrenadeLastBounce(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData);
	void K2_GrenadeInitialized(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData);
	void K2_GrenadeImpact(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FHitResult& HitResult, struct FPayloadInstanceData& InstanceData);
	void K2_GrenadeExplode(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData);
	void K2_GrenadeEndPlay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData);
	void K2_GrenadeDamageDealt(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData, class AOakCharacter* Character, struct FDamageDataEventDetails& DamageEvent);
	void K2_GrenadeBounce(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData);
	void K2_GrenadeBeginPlay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData);
	void K2_AttachedToGrenadeMod(class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData& InstanceData);
};

// 0x118 (0x350 - 0x238)
// Class OakGame.OakDamageData
class UOakDamageData : public UDamageData
{
public:
	struct FAttributeInitializationData          BaseStatusEffectChance;                            // 0x238(0x38)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          BaseStatusEffectDamage;                            // 0x270(0x38)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          BaseStatusEffectDuration;                          // 0x2A8(0x38)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FDamageDataCustomStatusEffectApplicationSpec CustomStatusEffect;                                // 0x2E0(0x50)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bPenetrates;                                       // 0x330(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F56[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ULightBeamData>            LightBeamData;                                     // 0x338(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BeamTargetSocket;                                  // 0x340(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyDrawParticleIfShieldsAreDepleted;             // 0x348(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRootCharacter;                                    // 0x349(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDamagePresentationModifier       PresentationModifier;                              // 0x34A(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F57[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDamageData* GetDefaultObj();

};

// 0x0 (0x350 - 0x350)
// Class OakGame.SpellDamageData
class USpellDamageData : public UOakDamageData
{
public:

	static class UClass* StaticClass();
	static class USpellDamageData* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.GrenadeDamageTypeAspectData
class UGrenadeDamageTypeAspectData : public UInventoryAspectData
{
public:
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGrenadeDamageTypeAspectData* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.GrenadeDeliveryMethodAspectData
class UGrenadeDeliveryMethodAspectData : public UInventoryAspectData
{
public:
	class UGrenadeBehavior_Delivery*             DeliveryBehavior;                                  // 0x38(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGrenadeDeliveryMethodAspectData* GetDefaultObj();

};

// 0x58 (0x7A0 - 0x748)
// Class OakGame.GrenadeHealingProjectile
class AGrenadeHealingProjectile : public AOakProjectile
{
public:
	uint8                                        Pad_5F5B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UProjectileHomingComponent*            HomingComponent;                                   // 0x750(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                      SphereComponent;                                   // 0x758(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDamageData>               HealingDamageData;                                 // 0x760(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxDamageType>            HealingDamageType;                                 // 0x768(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DamagePercent;                                     // 0x770(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHealthTypeData*                       TriggeringHealthType;                              // 0x778(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       HealingParticles;                                  // 0x780(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  AudioComponent;                                    // 0x788(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           PersistantAudioEvent;                              // 0x790(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           HealingAudioEvent;                                 // 0x798(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGrenadeHealingProjectile* GetDefaultObj();

	void OnOverlapActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void HealHomingTarget();
};

// 0x78 (0x2A0 - 0x228)
// Class OakGame.GrenadeHomingComponent
class UGrenadeHomingComponent : public UProjectileHomingComponent
{
public:
	class AGrenade*                              OwnerGrenade;                                      // 0x228(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATedioreProjectile*                    OwnerTedioreProjectile;                            // 0x230(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          HomingResetTimerHandle;                            // 0x238(0x8)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       HomingTrailTemplate;                               // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UEffectCollectionData>     HomingTrailCollection;                             // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TrailRelativeScale;                                // 0x250(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               HomingTrailOffset;                                 // 0x254(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TargetLockedParameterName;                         // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetLockedOffValue;                              // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetLockedOnValue;                               // 0x26C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           SearchingForTargetEvent;                           // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           TargetFoundEvent;                                  // 0x278(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              HomingTrail;                                       // 0x280(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F63[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastEQSTime;                                       // 0x290(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F64[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          EQSRetriggerHandle;                                // 0x298(0x8)(NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGrenadeHomingComponent* GetDefaultObj();

	void ResetHoming();
	void OnHomingTargetDestroyed(class AActor* Actor);
};

// 0x48 (0x760 - 0x718)
// Class OakGame.GrenadeLingeringBeamTriggerComponent
class UGrenadeLingeringBeamTriggerComponent : public USphereComponent
{
public:
	TArray<class AActor*>                        OverlappedActors;                                  // 0x718(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class ULightBeamData>            BeamData;                                          // 0x728(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F6B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x740(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDamageSource>             DamageSource;                                      // 0x748(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        RemovedOverlappedActors;                           // 0x750(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGrenadeLingeringBeamTriggerComponent* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x28 (0x50 - 0x28)
// Class OakGame.GrenadeBehaviorStackValueResolver
class UGrenadeBehaviorStackValueResolver : public UAttributeValueResolver
{
public:
	TSoftClassPtr<class UGrenadeBehavior_Payload> behavior;                                          // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGrenadeBehaviorStackValueResolver* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class OakGame.GrenadeBehaviorValueResolver
class UGrenadeBehaviorValueResolver : public UAttributeValueResolver
{
public:
	TSoftClassPtr<class UGrenadeBehavior_Payload> behavior;                                          // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInstanceDataOperator             Operator;                                          // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F6F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          ValueB;                                            // 0x58(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGrenadeBehaviorValueResolver* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class OakGame.GrenadeBehaviorTableResolver
class UGrenadeBehaviorTableResolver : public UAttributeValueResolver
{
public:
	struct FDataTableRowHandle                   TableGrenadeBehavior;                              // 0x28(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     AttributeBehaviorTier;                             // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     AttributeBehaviorPowerScalar;                      // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckPrimary;                                     // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F70[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGrenadeBehaviorTableResolver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.EnvQueryContext_SpellTarget
class UEnvQueryContext_SpellTarget : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UEnvQueryContext_SpellTarget* GetDefaultObj();

};

// 0x368 (0x830 - 0x4C8)
// Class OakGame.GrenadeMod
class AGrenadeMod : public AOakInventoryEquippableItem
{
public:
	class AOakCharacter_Player*                  EquippedPlayer;                                    // 0x4C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter*                         EquippedCharacter;                                 // 0x4D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpellModBalanceStateComponent*        BalanceStateComponent;                             // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                Mesh3P;                                            // 0x4E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ThirdPersonAttachmentSlotName;                     // 0x4E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameResourcePoolManagerComponent*     ResourceComponent;                                 // 0x4F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MeshOverride;                                      // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCauseDamageStatusEffectOverrides     StatusEffectOverrides;                             // 0x500(0x1C)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GrenadeMod_StatusEffectDamage;                     // 0x51C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GrenadeMod_StatusEffectChance;                     // 0x528(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F80[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGrenadeBehavior_Delivery*             GrenadeDelivery;                                   // 0x538(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UGrenadeBehavior_Payload*, struct FPayloadInstanceData> PayloadBehaviorStacks;                             // 0x540(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UExplosionData*                        ExplosionDataOverride;                             // 0x590(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GrenadeMod_Damage;                                 // 0x598(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GrenadeMod_ExplosionRadius;                        // 0x5A4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GrenadeMod_ImpactFuseTime;                         // 0x5B0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultGrenadeForce;                               // 0x5BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GrenadeMod_Force;                                  // 0x5C0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GrenadeMod_SpellMaxRange;                          // 0x5CC(0xC)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    SpellMod_Duration;                                 // 0x5D8(0xC)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F81[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        HomingTargets;                                     // 0x5E8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        GrenadeThrowAnimationOverride;                     // 0x5F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F83[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FChannelStage>                 SpellChannelStages;                                // 0x618(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F84[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpellTriggerInfo>             RetriggerInfo;                                     // 0x640(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F85[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    BaseCooldown;                                      // 0x654(0xC)(Net, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F86[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxAttributeModifierHandle>   ActiveStageModifierHandles;                        // 0x670(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F87[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpellSpawnInfo>               MultiOverrideSpawnInfo;                            // 0x688(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F88[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnCounter;                                      // 0x6D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConditionalDamageCriticalModifier*    CritModifier;                                      // 0x6D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDamageModifierComponent*              DamageModifierComponent;                           // 0x6E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    SpellMod_CritChance;                               // 0x6E8(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    SpellMod_CritDamage;                               // 0x6F4(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    SpellMod_SpeedScale;                               // 0x700(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    SpellMod_MaxSpeedScale;                            // 0x70C(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    SpellMod_CastSpeed;                                // 0x718(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F8A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageSource>             BaseSpellDamageSource;                             // 0x728(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeInteger                  AdditionalSpellProjectiles;                        // 0x730(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F8B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              ActiveParticleSystem;                              // 0x740(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWwisePlaybackInstance                WarmupPlaybackInstance;                            // 0x748(0x18)(Protected, NativeAccessSpecifierProtected)
	struct FWwisePlaybackInstance                OverchannelPlaybackInstance;                       // 0x760(0x18)(Protected, NativeAccessSpecifierProtected)
	enum class ESpellSlot                        CurrentSpellSlot;                                  // 0x778(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F8C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageData>               DamageDataOverride;                                // 0x780(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F8D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESpellType                        SpellTypeOverride;                                 // 0x789(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F8E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AOakProjectile>            ProjectileOverride;                                // 0x790(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULightProjectileData>      LightProjectileOverride;                           // 0x798(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULightBeamData>            BeamOverride;                                      // 0x7A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    SpellActorOverride;                                // 0x7A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnSpellStartDelegate;                              // 0x7B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellStopDelegate;                               // 0x7C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellStartFireDelegate;                          // 0x7D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellFiredDelegate;                              // 0x7E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellStopFiredDelegate;                          // 0x7F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellActorSpawned;                               // 0x800(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellDamageDealtDelegate;                        // 0x810(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageType>               OverrideDamageType;                                // 0x820(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F8F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGrenadeMod* GetDefaultObj();

	void RefillSpellCooldown(class AOakCharacter_Player* Player, float Percent, bool bAffectsPrimarySpell, bool bAffectsSecondarySpell);
	void OnUnequippedBy(class AOakCharacter* Equipper);
	void OnEquipperArmorChanged(class ABodyArmor* NewArmor);
	void OnEquippedBy(class AOakCharacter* Equipper);
	bool IsSimpleSpell();
	bool IsCastingSpell();
	float GetSpellStatusEffectDamage();
	float GetSpellStatusEffectChance();
	float GetSpellSpeedScale();
	float GetSpellModRadius();
	float GetSpellModDamage();
	float GetSpellMaxSpeedScale();
	float GetSpellMaxRange();
	float GetSpellForce();
	float GetSpellDuration();
	TSubclassOf<class UDamageType> GetSpellDamageType();
	float GetSpellCastSpeed();
	int32 GetCurrentChargeStep();
	bool DoesSpellHavePartSoft(TSoftObjectPtr<class UInventoryPartData> Part);
	bool DoesSpellHavePart(class UInventoryPartData* Part);
};

// 0x8 (0x90 - 0x88)
// Class OakGame.OakCondition_HasGrenadeThrowAnimationOverride
class UOakCondition_HasGrenadeThrowAnimationOverride : public UGbxCondition
{
public:
	int32                                        GrenadeThrowAnimationOverride;                     // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F90[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakCondition_HasGrenadeThrowAnimationOverride* GetDefaultObj();

};

// 0x40 (0x430 - 0x3F0)
// Class OakGame.SpellModBalanceStateComponent
class USpellModBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	class UGrenadeDamageTypeAspectData*          DamageTypeAspect;                                  // 0x3F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGrenadeDeliveryMethodAspectData*      DeliveryAspect;                                    // 0x3F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGrenadeBehavior_Payload*>      PayloadAspects;                                    // 0x400(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UGrenadePayloadMethodAspectData*       MultiPayload;                                      // 0x410(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGrenadeOverrideMeshAspectData*        OverrideMesh;                                      // 0x418(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F91[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpellModBalanceStateComponent* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.GrenadeOverrideMeshAspectData
class UGrenadeOverrideMeshAspectData : public UInventoryAspectData
{
public:
	class UStaticMesh*                           OverrideMesh;                                      // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGrenadeOverrideMeshAspectData* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class OakGame.GrenadePayloadMethodAspectData
class UGrenadePayloadMethodAspectData : public UInventoryAspectData
{
public:
	class UGrenadeBehavior_Payload*              PayloadBehavior;                                   // 0x38(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSpellTypeOverrideInfo                OverrideInfo;                                      // 0x40(0x30)(Edit, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGrenadePayloadMethodAspectData* GetDefaultObj();

};

// 0x10 (0x2D8 - 0x2C8)
// Class OakGame.GrenadeProjectileMovementComponent
class UGrenadeProjectileMovementComponent : public UGbxProjectileMovementComponent
{
public:
	bool                                         bRotate;                                           // 0x2C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5F93[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              RotationRate;                                      // 0x2CC(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGrenadeProjectileMovementComponent* GetDefaultObj();

};

// 0xC8 (0x7E0 - 0x718)
// Class OakGame.SingularityComponent
class USingularityComponent : public USphereComponent
{
public:
	TArray<struct FSingularityTargetInfo>        OverlappedTargets;                                 // 0x718(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        PendingRemoveTargets;                              // 0x728(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        IgnoreActors;                                      // 0x738(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AProjectile*                           OwningProjectile;                                  // 0x748(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTeamComponent*                        OwnerTeam;                                         // 0x750(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              SingularityParticles;                              // 0x758(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitReactionTag*                       PullTag;                                           // 0x760(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5F9A[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USingularityComponent* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void CreateSingularityBurst(class AActor* Instigator, struct FSingularityBurstInfo& SingularityInfo);
	class USingularityComponent* CreateSingularity(class AActor* Owner, float Radius, struct FSingularityInitializationInfo& SingularityInfo);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.HealthBarInfoProviderInterface
class IHealthBarInfoProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHealthBarInfoProviderInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.HealthDamagePassthroughInterface
class IHealthDamagePassthroughInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHealthDamagePassthroughInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.HeroPointAttributeValueResolver
class UHeroPointAttributeValueResolver : public UAttributeValueResolver
{
public:
	enum class EPlayerHeroPoint                  HeroPointType;                                     // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5F9C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeroPointAttributeValueResolver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.HeroPointTestGradeValueResolver
class UHeroPointTestGradeValueResolver : public UAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class UHeroPointTestGradeValueResolver* GetDefaultObj();

};

// 0x38 (0x2C0 - 0x288)
// Class OakGame.UIStatData_HeroPointAttributeInitializer
class UUIStatData_HeroPointAttributeInitializer : public UUIStatData_Numeric
{
public:
	struct FAttributeInitializationData          Initializer;                                       // 0x288(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UUIStatData_HeroPointAttributeInitializer* GetDefaultObj();

};

// 0x130 (0x850 - 0x720)
// Class OakGame.HeroStatueComponent
class UHeroStatueComponent : public UCapsuleComponent
{
public:
	enum class EHeroStatueUsage                  UsagePerPlayerCount[0x4];                          // 0x720(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5FA1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AHeroStatuePedestal*                   OwnerPedestal;                                     // 0x728(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter_Player*                  PlayerCharacter;                                   // 0x730(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5FA2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter_StandIn*                 StandIn;                                           // 0x748(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UInventorySlotData*, struct FHeroStatueGearInstance> StandInGear;                                       // 0x750(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5FA3[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeroStatueComponent* GetDefaultObj();

	void OnShowEffectCompleted(enum class EGbxActionEndState EndState);
	void OnPlayerInventoryUnequipped(class AActor* UnequippedActor, class UInventorySlotData* SlotData);
	void OnPlayerInventoryEquipped(class AActor* EquippedActor, class UInventorySlotData* SlotData);
	void OnHideEffectCompleted(enum class EGbxActionEndState EndState);
};

// 0x110 (0x568 - 0x458)
// Class OakGame.HeroStatuePedestal
class AHeroStatuePedestal : public AActor
{
public:
	uint8                                        Pad_5FA5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMissionEnableCondition*               EnableCondition;                                   // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UPlayerClassIdentifier*, TSoftClassPtr<class AOakCharacter_StandIn>> StandInMap;                                        // 0x468(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UGbxCustomizationTypeData*>     CustomizationTypesToIgnore;                        // 0x4B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UInventorySlotData*>            InventorySlotsToDisplay;                           // 0x4C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction_CoordinatedEffect> ShowEffect;                                        // 0x4D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction_CoordinatedEffect> HideEffect;                                        // 0x4E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_5FA7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHeroStatueComponentList              StatuesPerPlayerCount[0x4];                        // 0x4F0(0x40)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5FA8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakCharacter_Player*>          Players;                                           // 0x538(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class UHeroStatueComponent*>          Statues;                                           // 0x548(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5FA9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHeroStatuePedestal* GetDefaultObj();

	void OnRep_Players();
	void OnNumPlayersChanged(int32 NumPlayers);
};

// 0x10 (0x188 - 0x178)
// Class OakGame.HighlightComponent
class UHighlightComponent : public UActorComponent
{
public:
	uint8                                        Pad_5FAB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHighlightComponent* GetDefaultObj();

	void Enable();
	void Disable();
	void CreateDecalStaticMeshesComponent(class UMaterialInstanceDynamic* MaterialInstanceDynamic);
};

// 0x30 (0x60 - 0x30)
// Class OakGame.HitReactionLayer_OakBase
class UHitReactionLayer_OakBase : public UHitReactionLayer
{
public:
	float                                        LaunchChanceScale;                                 // 0x30(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StaggerChanceScale;                                // 0x34(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOakDamageSource>          ForceOnlyDamageSource;                             // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            MassTable;                                         // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitReactionTag*                       FlinchTag;                                         // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitReactionTag*                       StaggerTag;                                        // 0x50(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitReactionTag*                       LaunchTag;                                         // 0x58(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHitReactionLayer_OakBase* GetDefaultObj();

};

// 0x60 (0x4B8 - 0x458)
// Class OakGame.HolsteredGearSlot
class AHolsteredGearSlot : public AActor
{
public:
	struct FHolsteredGearSlotOptions             Options;                                           // 0x458(0x10)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FHolsteredGearAttachmentSlot          AttachmentSlot1P;                                  // 0x468(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FHolsteredGearAttachmentSlot          AttachmentSlot3P;                                  // 0x480(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AActor*                                PendingLikenessActor;                              // 0x498(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                CurrentLikenessActor;                              // 0x4A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxActionComponent*                   ActionComponent;                                   // 0x4A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHolsteredGearState               CurrentState;                                      // 0x4B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5FAC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHolsteredGearSlot* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class OakGame.HomingEffectCollectionData
class UHomingEffectCollectionData : public UEffectCollectionData
{
public:
	uint8                                        bHasEffect : 1;                                    // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasAudio : 1;                                     // Mask: 0x2, PropSize: 0x10x28(0x1)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_17B : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_5FAD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       DefaultEffect;                                     // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       HomingEffect;                                      // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           DefaultAudio;                                      // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           HomingAudio;                                       // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHomingEffectCollectionData* GetDefaultObj();

};

// 0x10 (0x2F0 - 0x2E0)
// Class OakGame.HUDContainer
class UHUDContainer : public UGbxHUDContainer
{
public:
	class AOakPlayerController*                  OakPCOwner;                                        // 0x2E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakHUD*                               OakHUD;                                            // 0x2E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHUDContainer* GetDefaultObj();

};

// 0x68 (0x378 - 0x310)
// Class OakGame.HUDInWorldIcon
class UHUDInWorldIcon : public UGbxHUDWidget
{
public:
	uint8                                        Pad_5FC1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Stacks;                                            // 0x320(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FC3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInWorldIconData*                      IconData;                                          // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TargetSocketName;                                  // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5FC4[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUDInWorldIcon* GetDefaultObj();

	void SetTargetRadius(float InRadius);
	void SetTargetLocationOffset(const struct FVector& InLocationOffset);
	void SetTargetLocationComponent(class USceneComponent* InTargetLocationComponent);
	void SetTargetActor(class AActor* InTarget);
	void SetLifeTimer(float LifeTime);
	void SetIconData(class UInWorldIconData* InIconData);
	void OnVisibilityChanged(bool bVisible);
	void OnTargetOffscreenChanged(bool bOffscreen);
	void OnTargetLocationOffsetChanged(const struct FVector& NewLocationOffset);
	void OnTargetInRangeChanged(bool bTargetInRange);
	void OnTargetChanged(class AActor* NewTarget);
	void OnTargetAngleChanged(float AngleDegrees);
	void OnNumberOfStacksChanged(int32 NewStacksNumber);
	void OnLocationComponentChanged(class USceneComponent* NewLocationComponent);
	void OnIconDataChanged(class UInWorldIconData* NewIconData);
	bool IsForTarget(struct FHUDInWorldIconTargetInfo& Target);
	bool HasValidTarget();
	bool HasLifeTimeExpired();
	float GetTargetRadius();
	struct FVector GetTargetLocationOffset();
	class USceneComponent* GetTargetLocationComponent();
	struct FVector GetTargetLocation();
	class AActor* GetTargetActor();
	class UInWorldIconData* GetIconData();
};

// 0x58 (0x88 - 0x30)
// Class OakGame.InWorldIconData
class UInWorldIconData : public UGbxDataAsset
{
public:
	class FString                                IconFrameName;                                     // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             IconSize;                                          // 0x40(0x8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAreaWaypoint;                                   // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSpecialMinimapVersion;                         // 0x49(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampRadarEdge;                                   // 0x4A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FC6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxClampDistance;                                  // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInWorldIconClassType             InWorldIconType;                                   // 0x50(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInWorldIconEdgeBehavior          EdgeBehavior;                                      // 0x51(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseVisibilityRange;                               // 0x52(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInWorldIconFadeType              FadeType;                                          // 0x53(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HiddenDistance;                                    // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisibleDistance;                                   // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakMinimapElement>        MinimapIcon;                                       // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakMinimapElement>        MinimapAreaIcon;                                   // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetSize;                                        // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WidgetAlignment;                                   // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStackable;                                        // 0x80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FC8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IconOffsetValue;                                   // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInWorldIconData* GetDefaultObj();

};

// 0x78 (0xA8 - 0x30)
// Class OakGame.HUDNotificationAsset
class UHUDNotificationAsset : public UGbxDataAsset
{
public:
	TSubclassOf<class UGFxDisplayedNotificationWidget> GFxWidgetToDisplay;                                // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakUINotificationTypes           NotificationType;                                  // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FCA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NotificationTypeTitle;                             // 0x40(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NotificationTypeBodyFormat;                        // 0x58(0x18)(Edit, NativeAccessSpecifierPublic)
	class FString                                IconFrame;                                         // 0x70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultPriority;                                   // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldInterrupt;                                  // 0x84(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptible;                                    // 0x85(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FCB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinimumDisplayTime;                                // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DesiredDisplayTime;                                // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeoutTime;                                       // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStackable;                                        // 0x94(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FCC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpawnAudioOverride;                                // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DespawnAudioOverride;                              // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHUDNotificationAsset* GetDefaultObj();

};

// 0x40 (0x498 - 0x458)
// Class OakGame.HyperHoopVehicle
class AHyperHoopVehicle : public AActor
{
public:
	UMulticastDelegateProperty_                  OnStateChanged;                                    // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EHyperHoopState                   State;                                             // 0x468(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceFromEndDecelerate;                         // 0x46C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayBeforeMove;                                   // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayBeforeExitAnim;                               // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineFollowerComponent*              SplineFollowerComponent;                           // 0x478(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPawnAttachSlotComponent*           PawnAttachSlotComponent;                           // 0x480(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FD6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHyperHoopVehicle* GetDefaultObj();

	void StartMovement();
	void StartDetatch();
	void SetupAndStart_Rep(class APawn* Pawn, class AActor* SplineCompToFollow, class FName SplineComponentName, bool bIsReverse);
	void SetupAndStart(class AController* Cont, class AActor* SplineActorToAttachTo, class FName SplineComponentName, bool bIsReverse);
	void OnReachedEndOfSpline(class USplineFollowerComponent* SplineFollowerComponent, class AActor* SplineFollowerOwner);
	void OnReachedCallbackDistance(class USplineFollowerComponent* SplineFollowerComponent, class AActor* SplineFollowerOwner, const class FString& CheckpointName);
	void OnDetachFinished(class APawn* Pawn, class AController* Controller);
	void OnAttachFinished(class APawn* Pawn, class AController* Controller);
};

// 0x0 (0x588 - 0x588)
// Class OakGame.HyperionProjectedShield
class AHyperionProjectedShield : public AInteractiveObject
{
public:

	static class UClass* StaticClass();
	static class AHyperionProjectedShield* GetDefaultObj();

};

// 0x10 (0x598 - 0x588)
// Class OakGame.IndigoAccessActor
class AIndigoAccessActor : public AInteractiveObject
{
public:
	bool                                         HasSeenTutorialModal;                              // 0x588(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FD9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  IndigoAccessModalName;                             // 0x590(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AIndigoAccessActor* GetDefaultObj();

	bool CheckAccessModalDisplayed(class AOakPlayerController* PlayerController);
	void AccessModalDisplayed(class AOakPlayerController* PlayerController);
};

// 0x0 (0x280 - 0x280)
// Class OakGame.IndigoCombatEncounter
class UIndigoCombatEncounter : public UCombatEncounter
{
public:

	static class UClass* StaticClass();
	static class UIndigoCombatEncounter* GetDefaultObj();

};

// 0x378 (0x7D0 - 0x458)
// Class OakGame.IndigoDungeon
class AIndigoDungeon : public AActor
{
public:
	class UEncounterEnvironment_Endless*         EncounterEnvironment;                              // 0x458(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UIndigoEncounterRunner*                Runner;                                            // 0x460(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCombatEncounter*                      CurrentEncounter;                                  // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDownloadableContentData*              CurrentDLCPackageData;                             // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldSpectateOnDeath;                            // 0x478(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FE2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDungeonRunInfo                       CurrentRunInfo;                                    // 0x480(0x1C8)(Edit, EditConst, NativeAccessSpecifierPublic)
	bool                                         bIsNestedDungeon;                                  // 0x648(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FE4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryCategoryData*                SoulsCategoryData;                                 // 0x650(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class AOakPlayerController*, struct FIndigoRunDebugStats> RUNSTATS;                                          // 0x658(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AIO_Indigo_BonusChallenge> CurrentChallengeClass;                             // 0x6A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AIO_Indigo_BonusChallenge*             CurrentChallenge;                                  // 0x6B0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelRequirement;                                  // 0x6B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FE5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UIndigoUIGlobals*                      IndigoUIGlobals;                                   // 0x6C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FE6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDungeonRunChosen;                                // 0x6E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDungeonRunDeclined;                              // 0x6F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCinematicEnded;                                  // 0x700(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeforeHubLevelShown;                             // 0x710(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHubLevelShown;                                   // 0x720(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FDungeonRunDef>                DungeonRunDefList;                                 // 0x730(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          HubLevelsToHide;                                   // 0x740(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHubVisibilityChanged;                            // 0x750(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bHubVisible;                                       // 0x760(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FE7[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnRoomBeginPlayEvent;                              // 0x770(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncountersFinished;                              // 0x780(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FE8[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AIndigoDungeon* GetDefaultObj();

	void StartRun(class AOakCinematicBrain* CineBrain, class UOakCinematicTag* CinematicTag, class UOakCinematicBrainData* OverrideData);
	void StartPlaylist(class UEncounterPlaylist* Playlist);
	class AIO_Indigo_BonusChallenge* StartBonusChallenge(const TArray<class AActor*>& FoundTargets);
	void ShowRunPlacard(const TArray<struct FDungeonRunDef>& DungeonRunDef, class AOakPlayerController* PlayerController, TSubclassOf<class AIO_Indigo_BonusChallenge> BonusChallengeClass, class UDownloadableContentData* RequiredDLCPackageData);
	void SetHubVisibility(bool bVisibility);
	void SetHubLevelsToHide(const TArray<class FName>& LevelsToHide);
	void SetEncounterBaseActors(const TArray<class ADynamicRoomBase*>& Bases);
	void SetChosenRunId(const struct FGuid& ID, class AOakPlayerController* PlayerController);
	void RespawnAllPlayers(bool bForceRespawn);
	void PlayIntroCinematic(class AOakCinematicBrain* CineBrain, class UOakCinematicTag* CinematicTag, class UOakCinematicBrainData* OverrideData);
	void OnRoomEndPlay(class UCombatEncounter* InEncounter);
	void OnRoomBeginPlay(class UCombatEncounter* InEncounter);
	void OnRep_CurrentChallenge();
	void OnPlayerRespawn(class AController* RespawnedController);
	void OnPlayerKilledHostile(class AActor* Player, class AActor* DeadActor);
	void OnPlayerGetNewPawn(class AOakPlayerController* OakPC, class AOakCharacter* OakCharacter);
	void OnPlayerAliveUpdated(int32 NbPlayerAlive);
	void OnLoadingScreenHidden();
	void OnEncounterHelperFinished__DelegateSignature(bool bCancelled, bool bWon);
	void NewPlayerXPAdded(class UPlayerBalanceStateComponent* BalanceComp);
	void NetClearEncounters();
	void MulticastShowRunPlacard(TArray<struct FDungeonRunDef>& DungeonRunDef, class AOakPlayerController* PlayerController, TSubclassOf<class AIO_Indigo_BonusChallenge> ChallengeClass);
	void MulticastSetChosenRunId(const struct FGuid& ID, class AOakPlayerController* PlayerController);
	void Multicast_OnRoomBeginPlay();
	void MakeRenderStatDirty_Multicast();
	void LevelShown();
	void IntroCinematicEnded(class UOakCinematicTag* CineTag);
	void HubVisibilityChanged();
	void HubLevelShown__DelegateSignature();
	class UDaffodilEncounter* GetPendingEncounter();
	class AIndigoDungeon* GetIndigoDungeonWithTag(class UObject* WorldContextObject, class FName Tag);
	class AIndigoDungeon* GetIndigoDungeon(class UObject* WorldContextObject, bool bCreateIfNotFound);
	class UCombatEncounter* GetCurrentEncounter();
	class AIO_Indigo_BonusChallenge* GetCurrentChallenge();
	void DungeonRunDeclined__DelegateSignature();
	void DungeonRunChosen__DelegateSignature(const struct FDungeonRunDef& RunDef);
	void DisplayNewGearNotification(class AOakPlayerController* PlayerController, class FText Message);
	void DeclineRun(class AOakPlayerController* PlayerController);
	void CinematicEnded__DelegateSignature();
	void BonusChallengeUpdated();
	void BonusChallengeStartListening(class AIO_Indigo_BonusChallenge* CC);
	void BonusChallengeCompleted();
	void BeforeHubLevelShown__DelegateSignature();
};

// 0x68 (0x4C0 - 0x458)
// Class OakGame.IndigoEncounterEventSender
class AIndigoEncounterEventSender : public AActor
{
public:
	enum class EEncounterWinType                 WinType;                                           // 0x458(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayTime;                                         // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakTriggerVolume*                     TriggerVolume;                                     // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                UsableActor;                                       // 0x468(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideVolume;                                   // 0x470(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FEE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReference            MissionObjective;                                  // 0x478(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  DefaultDungeonTag;                                 // 0x4A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FEF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AIndigoEncounterEventSender* GetDefaultObj();

	void OnWin(class FName DungeonTag);
	void OnUsed(struct FUseEvent& UseEvent);
	void OnBeginOverlap(class AActor* OtherActor, bool bIsPlayer, class UActorComponent* OtherComponent);
};

// 0x10 (0x88 - 0x78)
// Class OakGame.IndigoEncounterRunner
class UIndigoEncounterRunner : public UDaffodilEncounterRunner
{
public:
	class UEncounterPlaylist*                    Playlist;                                          // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistCursorIndex;                               // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FF0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UIndigoEncounterRunner* GetDefaultObj();

	void ForgetInitialEncounterButKeepCurrentDLCPackageData();
};

// 0x8 (0x38 - 0x30)
// Class OakGame.IndigoGameplayGlobals
class UIndigoGameplayGlobals : public UGbxDataAsset
{
public:
	bool                                         bIgnoreTimeUnlock;                                 // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreTimeUnlockPLC2;                             // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreTimeUnlockPLC3;                             // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreTimeUnlockPLC4;                             // 0x33(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FF2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UIndigoGameplayGlobals* GetDefaultObj();

};

// 0x28 (0x480 - 0x458)
// Class OakGame.IndigoHubPlayerStart
class AIndigoHubPlayerStart : public AActor
{
public:
	class USceneComponent*                       Root;                                              // 0x458(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationSpawnPointComponent*     Player1Start;                                      // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationSpawnPointComponent*     Player2Start;                                      // 0x468(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationSpawnPointComponent*     Player3Start;                                      // 0x470(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationSpawnPointComponent*     Player4Start;                                      // 0x478(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AIndigoHubPlayerStart* GetDefaultObj();

	struct FTransform GetSpawnTransform(int32 PlayerId);
};

// 0x20 (0x5A8 - 0x588)
// Class OakGame.IndigoMirror
class AIndigoMirror : public AInteractiveObject
{
public:
	class UDownloadableContentData*              DLCPackageData;                                    // 0x588(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FIndigoRunDef>                 AvailableIndigoRuns;                               // 0x590(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UIndigoGameplayGlobals*                IndigoGameplayGlobals;                             // 0x5A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AIndigoMirror* GetDefaultObj();

	void TryToUsePortal(class AController* InstigatorController, class UTravelStationData* TravelStationData);
	void OpenDisplayPrompt();
	void OnUsePortalResult(bool bSuccess);
	bool IsTimeLocked(const struct FDateTime& UnlockDate);
	bool IsContentUnlocked(TArray<class APlayerController*>* UnowningPlayers, TArray<class APlayerController*>* OwningPlayers);
};

// 0x0 (0x458 - 0x458)
// Class OakGame.IndigoRoomChestManager
class AIndigoRoomChestManager : public AActor
{
public:

	static class UClass* StaticClass();
	static class AIndigoRoomChestManager* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class OakGame.IndigoUIGlobals
class UIndigoUIGlobals : public UGbxDataAsset
{
public:
	struct FIndigoMessage                        InsufficientLevelKickMessage;                      // 0x30(0x38)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UIndigoUIGlobals* GetDefaultObj();

};

// 0x20 (0x710 - 0x6F0)
// Class OakGame.TrapTriggerRenderingComponent
class UTrapTriggerRenderingComponent : public UPrimitiveComponent
{
public:
	TArray<class AInteractiveObject*>            TrapLinks;                                         // 0x6F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_5FF7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTrapTriggerRenderingComponent* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.InventoryAbilityAspectData
class UInventoryAbilityAspectData : public UInventoryAspectData
{
public:
	TArray<struct FInventoryAspectAbilityInfo>   Abilities;                                         // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInventoryAbilityAspectData* GetDefaultObj();

};

// 0x0 (0x3F0 - 0x3F0)
// Class OakGame.InventoryCustomizationBalanceStateComponent
class UInventoryCustomizationBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:

	static class UClass* StaticClass();
	static class UInventoryCustomizationBalanceStateComponent* GetDefaultObj();

};

// 0x308 (0x338 - 0x30)
// Class OakGame.InventoryGlobals
class UInventoryGlobals : public UGbxDataAsset
{
public:
	TSubclassOf<class UGbxDamageType>            DefaultDamageType;                                 // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDamageData>               GrenadeDamageData;                                 // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    GrenadeModSlot;                                    // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    SecondSpellModSlot;                                // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameResourceData*                     SpellAmmoResource;                                 // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExplosionData*                        DefaultGrenadeExplosionData;                       // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECollisionChannel                 GrenadeCollisionChannel;                           // 0x60(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5FF8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AOakProjectile>            ThrownGrenadeClass;                                // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       GrenadeFuseWarningEmitter;                         // 0x70(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          DefaultDamage;                                     // 0x78(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FForceSelection                       DefaultForce;                                      // 0xB0(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDamageSource>             SpellDamageSource;                                 // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    WeaponSlot1;                                       // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    WeaponSlot2;                                       // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    WeaponSlot3;                                       // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    WeaponSlot4;                                       // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    ShieldSlot;                                        // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    BodyArmorSlot;                                     // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    ClassItemSlot;                                     // 0x108(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    ArtifactSlot;                                      // 0x110(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotData*                    MeleeWeaponSlot;                                   // 0x118(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDamageSource>             MeleeWeaponDamageSource;                           // 0x120(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMeleeBaseSpeedSource>         MeleeBaseSpeedSources;                             // 0x128(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FManufacturerWeaponSightData>  ManufacturerWeaponSightData;                       // 0x138(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UDataTable*                            CustomWeaponSightTable;                            // 0x148(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          SightTargetCrosshairColors[0x7];                   // 0x150(0x70)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakWeaponNamedNamingAttribute> WeaponNamingAttributes;                            // 0x1C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FOakWeaponNamedNamingAttribute> MeleeWeaponNamingAttributes;                       // 0x1D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          EridiumCostFormula;                                // 0x1E0(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	class USkeletalMesh*                         ShieldSkeletalMesh;                                // 0x218(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameResourceData*                     ShieldResource;                                    // 0x220(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxAttributeData*                     ShieldDamageAttribute;                             // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFeedbackData*                         ShieldBreakFeedback;                               // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGestaltData*                          PlayerGestalt;                                     // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGestaltData*                          FirstPersonArmorGestalt;                           // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGestaltData*                          BodyArmorGestalt;                                  // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          LegArmorVisibleParts;                              // 0x250(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVendingMachineRefillAmmoData> VendingMachineRefillAmmoData;                      // 0x260(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     VendingMachineMarkupAttribute;                     // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          OwnedCustomizationMonetaryValue;                   // 0x278(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          UnownedCustomizationMonetaryValue;                 // 0x2B0(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UGbxInventoryCategoryData*             EnchantmentReRollCurrency;                         // 0x2E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          EnchantmentReRollCostFormula;                      // 0x2F0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FAttributeEffectData>          EnchantmentReRollAttributeEffects;                 // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInventoryGlobals* GetDefaultObj();

	void EnumerateGestaltMeshPartNames(TArray<class FName>* OutPartNameList);
};

// 0x30 (0x68 - 0x38)
// Class OakGame.InventoryMeshAttachmentAspectData
class UInventoryMeshAttachmentAspectData : public UInventoryAspectData
{
public:
	class UGestaltData*                          GestaltData;                                       // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideRoot;                                         // 0x40(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FF9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ComponentName;                                     // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          GestaltMeshPartNames;                              // 0x50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  AttachSocket;                                      // 0x60(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInventoryMeshAttachmentAspectData* GetDefaultObj();

	void EnumerateGestaltMeshPartNames(TArray<class FName>* OutPartNameList);
};

// 0x58 (0x3D8 - 0x380)
// Class OakGame.InventoryShopComponent
class UInventoryShopComponent : public UInventoryListComponent
{
public:
	class UInventoryShopData*                    Data;                                              // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FItemPoolCollection                   RandomlySelectedItemPools;                         // 0x388(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        FeaturedInventoryList;                             // 0x3A8(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class AOakPlayerController*>          InstancedForPlayers;                               // 0x3B8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint32                                       LastResetCounter;                                  // 0x3C8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                       MayhemLevel;                                       // 0x3CC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_5FFA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryShopComponent* GetDefaultObj();

	void OnRep_FeaturedInventory();
	void HandleOwnerExperienceLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void HandleActorDestroyed(class AActor* Actor);
};

// 0x190 (0x1C0 - 0x30)
// Class OakGame.InventoryShopData
class UInventoryShopData : public UGbxDataAsset
{
public:
	struct FItemPoolCollection                   StandardItemPools;                                 // 0x30(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FConditionalItemPools>         ConditionalItemPools;                              // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UItemPoolData*                         FeaturedItemPool;                                  // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FConditionalFeaturedItemPools> ConditionalFeaturedItemPools;                      // 0x68(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          FeaturedItemGameStage;                             // 0x78(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UAttributeInitializer>     GameStageVarianceFormula;                          // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGuaranteeEndGamePartForLoot;                      // 0xB8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMarkupFormulaContextIsPlayer;                     // 0xB9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FFB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          StandardItemMarkup;                                // 0xC0(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          FeaturedItemMarkup;                                // 0xF8(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          GearSoldByFriendsMarkup;                           // 0x130(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          ItemContextMarkup;                                 // 0x168(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                OverridePrimaryCurrency;                           // 0x1A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InventoryRelevancyDistance;                        // 0x1A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FItemPoolCollection>           RandomDateBasedItemPools;                          // 0x1B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInventoryShopData* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class OakGame.InventorySlotAttributeContextResolver
class UInventorySlotAttributeContextResolver : public UAttributeContextResolver
{
public:
	class UInventorySlotData*                    InventorySlot;                                     // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInventorySlotAttributeContextResolver* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class OakGame.InventorySlotData
class UInventorySlotData : public UGbxDataAsset
{
public:
	class FName                                  SocketName;                                        // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowHolsteredOnBody;                              // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InitiallyEnabled;                                  // 0x39(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FFE[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x40(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  DisplayDescription;                                // 0x58(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                InventoryCategory;                                 // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInventorySlotData* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class OakGame.InventoryStaticMeshAttachmentAspectData
class UInventoryStaticMeshAttachmentAspectData : public UInventoryAspectData
{
public:
	class UStaticMesh*                           StaticMesh;                                        // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideRoot;                                         // 0x40(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_5FFF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachSocket;                                      // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInventoryStaticMeshAttachmentAspectData* GetDefaultObj();

};

// 0x18 (0x5A0 - 0x588)
// Class OakGame.IO_BO_SwitchManager
class AIO_BO_SwitchManager : public AInteractiveObject
{
public:
	enum class EPuzzleState                      CurrentPuzzleState;                                // 0x588(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6001[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSwitchStateChanged;                              // 0x590(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AIO_BO_SwitchManager* GetDefaultObj();

	void SwitchStateChanged();
	void OnInitializeBonusObjective();
};

// 0x10 (0x598 - 0x588)
// Class OakGame.IO_CollectMasterOrb
class AIO_CollectMasterOrb : public AInteractiveObject
{
public:
	uint8                                        Pad_6003[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AIO_CollectMasterOrb* GetDefaultObj();

	void OrbDepleted();
};

// 0x0 (0x588 - 0x588)
// Class OakGame.IO_ExitPortal
class AIO_ExitPortal : public AInteractiveObject
{
public:

	static class UClass* StaticClass();
	static class AIO_ExitPortal* GetDefaultObj();

	void TryToUsePortal(class AController* InstigatorController);
	void OnUsePortalResult(bool bSuccess);
};

// 0x98 (0x620 - 0x588)
// Class OakGame.IO_Indigo_BonusChallenge
class AIO_Indigo_BonusChallenge : public AInteractiveObject
{
public:
	class FText                                  Title;                                             // 0x588(0x18)(Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x5A0(0x18)(Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic)
	int32                                        Start;                                             // 0x5B8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Goal;                                              // 0x5BC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentProgress;                                   // 0x5C0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableChallenge;                                 // 0x5C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowChallengePopupOnStart;                        // 0x5C5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6007[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        FoundTargets;                                      // 0x5C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    TargetClass;                                       // 0x5D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnIndigoChallengeStarted;                          // 0x5E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnIndigoChallengeUpdated;                          // 0x5F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnIndigoChallengeCompleted;                        // 0x600(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnIndigoChallengeGoalChanged;                      // 0x610(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AIO_Indigo_BonusChallenge* GetDefaultObj();

	void UpdateChallenge();
	void CompleteChallenge();
	void ChallengeStarted();
	void ChallengeGoalsChanged();
	void ChallengeCompleted();
};

// 0x8 (0x590 - 0x588)
// Class OakGame.IO_SacredGround
class AIO_SacredGround : public AInteractiveObject
{
public:
	class USphereComponent*                      SphereTrigger;                                     // 0x588(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AIO_SacredGround* GetDefaultObj();

};

// 0x0 (0x588 - 0x588)
// Class OakGame.IO_WheelOfFate
class AIO_WheelOfFate : public AInteractiveObject
{
public:

	static class UClass* StaticClass();
	static class AIO_WheelOfFate* GetDefaultObj();

	void OnWheelOfFateUsed(class AOakPlayerController* OakPC, class UOakUsableComponent* OakUsableComponent, const class FString& LootableSpawned);
};

// 0x48 (0x5D0 - 0x588)
// Class OakGame.JumpPad
class AJumpPad : public AInteractiveObject
{
public:
	class UPrimitiveComponent*                   LaunchTouchComponent;                              // 0x588(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LaunchTouchComponentName;                          // 0x590(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOakControlledMove>        ControlledMoveClass;                               // 0x598(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxCondition*                         LaunchCondition;                                   // 0x5A0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bLockInstanceLaunchSpeed;                          // 0x5A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_600C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LaunchSpeed;                                       // 0x5AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LaunchAngle;                                       // 0x5B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bLinkDestination;                                  // 0x5B4(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_600D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Destination;                                       // 0x5B8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSpawnUserEdge;                                    // 0x5C4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_600E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AHavokUserEdgeActor*                   LinkedUserEdge;                                    // 0x5C8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AJumpPad* GetDefaultObj();

	void SetJumpPadEnabled(bool bEnabled);
	void OnLaunched(class AOakCharacter* Character);
	void OnCharacterTouch(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void Launch(class AOakCharacter* Character);
	void GetValidAssociatedComponentNames(TArray<class FName>* Array);
};

// 0x0 (0x6F0 - 0x6F0)
// Class OakGame.JumpPadRenderingComponent
class UJumpPadRenderingComponent : public UPrimitiveComponent
{
public:

	static class UClass* StaticClass();
	static class UJumpPadRenderingComponent* GetDefaultObj();

};

// 0xC8 (0x558 - 0x490)
// Class OakGame.LargeLiquidBody
class ALargeLiquidBody : public AVolume
{
public:
	uint8                                        Pad_6012[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULargeLiquidBodyConfigurationData*     LargeLiquidBodyConfiguration;                      // 0x498(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPlayDefaultPuddleAudio : 1;                       // Mask: 0x1, PropSize: 0x10x4A0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        UseFloorMesh : 1;                                  // Mask: 0x2, PropSize: 0x10x4A0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsSeaLevelActor : 1;                               // Mask: 0x4, PropSize: 0x10x4A0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideColor : 1;                                // Mask: 0x8, PropSize: 0x10x4A0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideOpacity : 1;                              // Mask: 0x10, PropSize: 0x10x4A0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideNormalStrength : 1;                       // Mask: 0x20, PropSize: 0x10x4A0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideMovementSpeed : 1;                        // Mask: 0x40, PropSize: 0x10x4A0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideDepthFade : 1;                            // Mask: 0x80, PropSize: 0x10x4A0(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6013[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    FloorMesh_Material;                                // 0x4A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FloorMesh_Offset;                                  // 0x4B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6014[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialParameterCollection*          SeaLevelMaterialParameterCollection;               // 0x4B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SeaLevelValue;                                     // 0x4C0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          Color;                                             // 0x4C4(0x10)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorHighlights;                                   // 0x4D4(0x10)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Opacity;                                           // 0x4E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NormalStrength;                                    // 0x4E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementSpeed;                                     // 0x4EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DepthFade;                                         // 0x4F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6015[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseAudioComponent*                  LiquidAudioComponent;                              // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProceduralMeshComponent*              LiquidSurfaceMesh;                                 // 0x500(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URegionBalanceStateComponent*          BalanceState;                                      // 0x508(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalInteractionComponent*        ElementalInteraction;                              // 0x510(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxNavMeshPainterComponent*           PainterComponent;                                  // 0x518(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLargeLiquidBodySurfaceSection> SurfaceSections;                                   // 0x520(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6016[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALargeLiquidBody* GetDefaultObj();

	void OnEndOverlapSurfaceMesh(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnElementalReactionDestroyed(class AActor* ElementalReaction);
	void OnBeginOverlapSurfaceMesh(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x30 (0x60 - 0x30)
// Class OakGame.LargeLiquidBodyConfigurationData
class ULargeLiquidBodyConfigurationData : public UGbxDataAsset
{
public:
	class UParticleSystem*                       SurfaceParticle;                                   // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExplosionData*                        NearbyExplosionData;                               // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalInteractionConfigurationData* ElementalInteractionConfiguration;                 // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalPuddleConfigurationData*     ElementalReactionConfiguration;                    // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bElementalReactionNegatesDamage;                   // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6017[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AElementalPuddle_LargeLiquidBody> LocalReactionPuddleClass;                          // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULargeLiquidBodyConfigurationData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.LevelActorPersistenceInterface
class ILevelActorPersistenceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ILevelActorPersistenceInterface* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class OakGame.LevelActorPersistenceManager
class ULevelActorPersistenceManager : public UObject
{
public:
	uint8                                        Pad_6018[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TScriptInterface<class ILevelActorPersistenceInterface>> AllCurrentMapActors;                               // 0x80(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULevelActorPersistenceManager* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class OakGame.LevelAssetListData
class ULevelAssetListData : public UPrimaryAssetLabel
{
public:
	TArray<struct FLevelAssetList>               LevelData;                                         // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULevelAssetListData* GetDefaultObj();

};

// 0xB0 (0xD8 - 0x28)
// Class OakGame.LevelMultiplierAttributeValueResolver
class ULevelMultiplierAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FLevelMultiplierDefinedValueRow       Value;                                             // 0x28(0xB0)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULevelMultiplierAttributeValueResolver* GetDefaultObj();

};

// 0x0 (0x148 - 0x148)
// Class OakGame.LevelStreamingOverworld
class ULevelStreamingOverworld : public UGbxLevelStreamingBase
{
public:

	static class UClass* StaticClass();
	static class ULevelStreamingOverworld* GetDefaultObj();

};

// 0x8 (0x150 - 0x148)
// Class OakGame.LevelStreamingOverworldAlwaysLoaded
class ULevelStreamingOverworldAlwaysLoaded : public ULevelStreamingOverworld
{
public:
	uint8                                        Pad_601A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULevelStreamingOverworldAlwaysLoaded* GetDefaultObj();

};

// 0x8 (0x150 - 0x148)
// Class OakGame.LevelStreamingOverworldEditorSplit
class ULevelStreamingOverworldEditorSplit : public ULevelStreamingOverworld
{
public:
	uint8                                        Pad_601B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULevelStreamingOverworldEditorSplit* GetDefaultObj();

};

// 0x38 (0x180 - 0x148)
// Class OakGame.LevelStreamingOverworldPage
class ULevelStreamingOverworldPage : public ULevelStreamingOverworld
{
public:
	float                                        PageSize;                                          // 0x148(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PageEffectsZ;                                      // 0x14C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                             PageCoordinate;                                    // 0x150(0x8)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox2D                                LoadRange;                                         // 0x158(0x14)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAlwaysLoadPage;                                   // 0x16C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_601C[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULevelStreamingOverworldPage* GetDefaultObj();

	void OnVisible();
	void OnLoaded();
	void OnHidden();
	void DebugDrawLocation();
};

// 0x2A8 (0x830 - 0x588)
// Class OakGame.LootableObject
class ALootableObject : public AInteractiveObject
{
public:
	uint8                                        Pad_601D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULootableBalanceData*                  LootDefinition;                                    // 0x590(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELootSpawnTiming                  SpawnLootTiming;                                   // 0x598(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShouldAttachLoot;                                  // 0x599(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMaintainStateAcrossMapLoads;                      // 0x59A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_601E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLootablePersistenceData              PersistenceData;                                   // 0x59C(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bOptOutOfLevelPersistence : 1;                     // Mask: 0x1, PropSize: 0x10x5A4(0x1)(Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOpenInResponseToDamage : 1;                       // Mask: 0x2, PropSize: 0x10x5A4(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOnlyOpenOnPositiveDamage : 1;                     // Mask: 0x4, PropSize: 0x10x5A4(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseOverlapEventsIfDamageable : 1;                 // Mask: 0x8, PropSize: 0x10x5A4(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_17C : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_601F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UDamageSource>>     ValidOpeningDamageSources;                         // 0x5A8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        bSimulatePhysicsAfterOpening : 1;                  // Mask: 0x1, PropSize: 0x10x5B8(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_17D : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6020[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayBeforeSimulatePhysics;                        // 0x5BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLootableDirectionalResponse>  DamagedOpeningInteractions;                        // 0x5C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLootableInteractionResponse>  OpeningInteractions;                               // 0x5D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FConditionalLootableInteractionResponse> ConditionalOpeningInteractions;                    // 0x5E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLootableInteractionResponse>  ClosingInteractions;                               // 0x5F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsBonePile;                                       // 0x600(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6021[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          Bones;                                             // 0x608(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FLootablePileInteractionResponse      DefaultBonePileResponse;                           // 0x618(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLootablePileDamageInteraction> BonePileDamageResponses;                           // 0x628(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseMeshSwap;                                      // 0x638(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6022[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLootableMeshSwapData                 MeshSwapData;                                      // 0x640(0x20)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          PhysicsBodiesToDisablePawnCollisionWithAfterOpening; // 0x660(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bSearchableByEQS;                                  // 0x670(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bControlledByMissionPickupObjective;               // 0x671(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMissionDrivenLootableType        MissionDrivenType;                                 // 0x672(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6023[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReferenceWeak        SelfMissionObjective;                              // 0x678(0x50)(Edit, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	struct FMissionObjectiveReferenceWeak        PickupMissionObjective;                            // 0x6C8(0x50)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FMissionEventReference                MissionEventToSendOnOpening;                       // 0x718(0x10)(Edit, DisableEditOnTemplate, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UGbxCondition*                         OpenedCondition;                                   // 0x728(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxCondition*                         ClosedCondition;                                   // 0x730(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUsableComponent*                      UsableComponent;                                   // 0x738(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                     PlayerThatOpenedMe;                                // 0x740(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELootableOpenReason               OpenReason;                                        // 0x748(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6024[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageSource>             OpeningDamageSource;                               // 0x750(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OpeningDamageHitForce;                             // 0x758(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OpeningDamageHitLocation;                          // 0x764(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLootableAnimState                    AnimState;                                         // 0x770(0x10)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MeshComponent;                                     // 0x780(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakLootableComponent*                 LootableComponent;                                 // 0x788(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakMissionIconComponent*              MissionIconComponent;                              // 0x790(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionObserverComponent*             MissionObserverComponent;                          // 0x798(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLootableInteractionResponse          CurrentResponse;                                   // 0x7A0(0x10)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int8                                         CustomResponseIdx;                                 // 0x7B0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6025[0x57];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOpened;                                          // 0x808(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnOpening;                                         // 0x818(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6026[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALootableObject* GetDefaultObj();

	void OnUsedBy(struct FUseEvent& UseEvent);
	void OnRep_AnimState();
	void OnLootableTakeDamage(struct FLootableObjectDamageEventDetails& Details);
	void DoLootSpawning();
	void DisassociateSpawnedLootFromThis();
	void ClearCurrentInteractionResponse();
};

// 0x10 (0x108 - 0xF8)
// Class OakGame.LootSpawnPatternData
class ULootSpawnPatternData : public UPhysicsSpawnPatternData
{
public:
	uint8                                        bEnableRadius : 1;                                 // Mask: 0x1, PropSize: 0x10xF8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableRadiusRange : 1;                            // Mask: 0x2, PropSize: 0x10xF8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_17E : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6027[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Radius;                                            // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRadius;                                         // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6028[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULootSpawnPatternData* GetDefaultObj();

};

// 0x8 (0x590 - 0x588)
// Class OakGame.LostLootMachine
class ALostLootMachine : public AInteractiveObject
{
public:
	int32                                        CurrentLostLootCount;                              // 0x588(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLostLootSize;                                   // 0x58C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ALostLootMachine* GetDefaultObj();

	void OnSetScreenState(float UsagePercentage);
	void OnLostLootChanged();
};

// 0x30 (0x1A8 - 0x178)
// Class OakGame.LowGravHoveringComponent
class ULowGravHoveringComponent : public UActorComponent
{
public:
	float                                        TotalHoveringTime;                                 // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisplacementHeightOnHit;                           // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalOscillation;                                  // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_602C[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULowGravHoveringComponent* GetDefaultObj();

	void OnHit(class AActor* OwnerActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x10 (0x40 - 0x30)
// Class OakGame.LuckCategoryData
class ULuckCategoryData : public UGbxDataAsset
{
public:
	enum class EGbxAttributeModifierType         CategoryModifier;                                  // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_602D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUIStatData*                           Category_UIStat;                                   // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULuckCategoryData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.LuckBlueprintLibrary
class ULuckBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class ULuckBlueprintLibrary* GetDefaultObj();

	int32 GetLuckValue(class UObject* Context);
	int32 GetLootRarityFormulaLuckValue();
};

// 0x8 (0x30 - 0x28)
// Class OakGame.LuckCategoryValueResolver
class ULuckCategoryValueResolver : public UAttributeValueResolver
{
public:
	class ULuckCategoryData*                     Category;                                          // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULuckCategoryValueResolver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.LuckValueResolver
class ULuckValueResolver : public UAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class ULuckValueResolver* GetDefaultObj();

};

// 0x88 (0x4E0 - 0x458)
// Class OakGame.MainMenuCameraController
class AMainMenuCameraController : public AActor
{
public:
	float                                        MinZoomDistance;                                   // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxZoomDistance;                                   // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ZoomSpeed;                                         // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinOffsetDistance;                                 // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxOffsetDistance;                                 // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinFocusDistance;                                  // 0x46C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxFocusDistance;                                  // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinFocalDistance;                                  // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxFocalDistance;                                  // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxPitchAngle;                                     // 0x47C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinPitchAngle;                                     // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RotationSpeed;                                     // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                LookAtActor;                                       // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                SubjectActor;                                      // 0x490(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraActor*                          CameraActor;                                       // 0x498(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6030[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMainMenuCameraController* GetDefaultObj();

	void Setup(class AActor* InLookAtActor, class AActor* InSubjectActor, class ACameraActor* InCameraActor);
};

// 0x18 (0x2CD0 - 0x2CB8)
// Class OakGame.MainMenuCameraManager
class AMainMenuCameraManager : public APlayerCameraModesManager
{
public:
	class UCameraModeSetData*                    DefaultCameraModeSet;                              // 0x2CB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DefaultCameraMode;                                 // 0x2CC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6032[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMainMenuCameraManager* GetDefaultObj();

};

// 0x30 (0x340 - 0x310)
// Class OakGame.ManagedWidget
class UManagedWidget : public UGbxHUDWidget
{
public:
	UMulticastDelegateProperty_                  OnCompleteAnimation;                               // 0x310(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      IntroAnimation;                                    // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      IdleAnimation;                                     // 0x328(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      ExitAnimation;                                     // 0x330(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EManagedWidgetType                WidgetType;                                        // 0x338(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6034[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UManagedWidget* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class OakGame.MatchmakerSettings
class UMatchmakerSettings : public UObject
{
public:
	float                                        RetryDelaySeconds;                                 // 0x28(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RetryJitterSeconds;                                // 0x2C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchThresholdSeconds;                            // 0x30(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatchmakingRoundDuration;                          // 0x34(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackfillMatchmakingRoundDuration;                  // 0x38(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostTravelDelaySeconds;                            // 0x3C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialAdvertiseChance;                            // 0x40(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConfirmPlayersCountdownSeconds;                    // 0x44(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConfirmPlayersQuickStartCountdownSeconds;          // 0x48(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6035[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMatchmakerSettings* GetDefaultObj();

};

// 0xD0 (0xF8 - 0x28)
// Class OakGame.MatchmakingSearchDefinitions
class UMatchmakingSearchDefinitions : public UObject
{
public:
	struct FMatchmakingSearchDefinition          CampaignSearchDefinition;                          // 0x28(0xB8)(Config, GlobalConfig, NativeAccessSpecifierPrivate)
	TArray<struct FMatchmakingSearchDefinition>  SearchDefinitions;                                 // 0xE0(0x10)(ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate)
	int32                                        DefaultMaxSearchResults;                           // 0xF0(0x4)(ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6036[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMatchmakingSearchDefinitions* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.MatchmakingTest
class UMatchmakingTest : public UObject
{
public:
	uint8                                        Pad_6038[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMatchmakingTest* GetDefaultObj();

	void StartMatchmaking();
	void OnMatchmakingUpdated(int32 NumPlayers);
	void OnMatchmakingStarted();
	void OnMatchmakingError(const class FString& Error);
	void OnMatchmakingCompleted(bool bSuccess);
	void CancelMatchmaking();
};

// 0x10 (0x98 - 0x88)
// Class OakGame.MayhemModeAbilityStatusEffect
class UMayhemModeAbilityStatusEffect : public UStatusEffectData
{
public:
	TSubclassOf<class UGbxAbility>               AbilityClass;                                      // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowedToRunOnVehicles;                           // 0x90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6039[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMayhemModeAbilityStatusEffect* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.MayhemModeFunctionLibrary
class UMayhemModeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UMayhemModeFunctionLibrary* GetDefaultObj();

	enum class EPOIActivationResult TryMapReloadForMayhemActivityOrLevelChange(class UObject* WorldContextObject, class AOakPlayerController* OptionalInstigator, int32 MayhemLevel, int32 RandomSeed);
	void SetIsLocked(class UObject* WorldContextObject, bool bLocked);
	void RerollNonCurrent(class UObject* WorldContextObject);
	void MutateRandomSeed(class UObject* WorldContextObject);
	bool IsMayhemModeAvailable(class UObject* WorldContextObject);
	bool IsMayhemModeActive(class UObject* WorldContextObject);
	int32 GetRandomSeed(class UObject* WorldContextObject);
	int32 GetMayhemTier(class UObject* WorldContextObject);
	int32 GetMayhemLevel(class UObject* WorldContextObject);
	int32 GetMaxMayhemLevel(class UObject* WorldContextObject);
	bool GetIsLocked(class UObject* WorldContextObject);
	int32 GetHighestHostUnlockedMayhemLevel(class UObject* WorldContextObject);
	int32 GetConditionallyOverriddenMayhemLevel(class UObject* WorldContextObject);
	void DeactivateMayhemMode(class UObject* WorldContextObject);
	void AssignOptionalOverrides(class UObject* WorldContextObject, struct FMayhemDebugOverrides& OptionalOverrides);
	void ActivateMayhemMode(class UObject* WorldContextObject, int32 MayhemLevel, int32 RandomSeed);
};

// 0x70 (0xA0 - 0x30)
// Class OakGame.MayhemModeTwoDataAsset
class UMayhemModeTwoDataAsset : public UGbxDataAsset
{
public:
	int32                                        MaxMayhemLevel;                                    // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_604F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMayhemModeTierData>           Tiers;                                             // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMayhemCoreModifierSet                CoreModifierSet;                                   // 0x48(0x30)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMayhemModifierSlotInterface*>  RandomModifierSlots;                               // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMayhemOverrideDataAsset*              OverrideData;                                      // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MapsToExclude;                                     // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMayhemModeTwoDataAsset* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.MayhemModifierSlotInterface
class UMayhemModifierSlotInterface : public UGbxDataAsset
{
public:

	static class UClass* StaticClass();
	static class UMayhemModifierSlotInterface* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.MayhemModifierSlotDataAsset
class UMayhemModifierSlotDataAsset : public UMayhemModifierSlotInterface
{
public:
	TArray<struct FMayhemModifierSet>            ModifierSets;                                      // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMayhemModifierSlotDataAsset* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.MayhemModifierSlotCollectionDataAsset
class UMayhemModifierSlotCollectionDataAsset : public UMayhemModifierSlotInterface
{
public:
	TArray<class UMayhemModifierSlotDataAsset*>  Collection;                                        // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMayhemModifierSlotCollectionDataAsset* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.MayhemOverrideDataAsset
class UMayhemOverrideDataAsset : public UGbxDataAsset
{
public:
	int32                                        MaxMayhemLevelOverride;                            // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6050[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMayhemModeTwoLevelOverride>   PerLevelOverrides;                                 // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMayhemOverrideDataAsset* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.MayhemPowerLevelWeightAttributeValueResolver
class UMayhemPowerLevelWeightAttributeValueResolver : public UAttributeValueResolver
{
public:
	int32                                        LookUpOverpowerLevel;                              // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6051[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMayhemPowerLevelWeightAttributeValueResolver* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.MeleeBaseAttackSpeedAspectData
class UMeleeBaseAttackSpeedAspectData : public UInventoryAspectData
{
public:
	enum class EMeleeWeaponAttackSpeedCategory   BaseAttackSpeedCategory;                           // 0x38(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6052[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMeleeBaseAttackSpeedAspectData* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class OakGame.MeleeChainAspectData
class UMeleeChainAspectData : public UInventoryAspectData
{
public:
	class UPlayerMeleeChainData*                 AspectMeleeChain;                                  // 0x38(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPlayerMeleeChainData*>         AspectMeleeChains;                                 // 0x40(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bBreakChainOnMiss;                                 // 0x50(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6053[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageData>               SimulatedMeleeDamageData;                          // 0x58(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMeleeChainAspectData* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.MeleeDamageTypeAspectData
class UMeleeDamageTypeAspectData : public UInventoryAspectData
{
public:
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMeleeDamageTypeAspectData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.MeleeOnHitEffectAspectData
class UMeleeOnHitEffectAspectData : public UInventoryAspectData
{
public:
	class UStatusEffectData*                     OnHitStatusEffect;                                 // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StatusEffectDuration;                              // 0x40(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAppliesOnTarget;                                  // 0x44(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6054[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMeleeOnHitEffectAspectData* GetDefaultObj();

};

// 0x110 (0x5D8 - 0x4C8)
// Class OakGame.MeleeWeapon
class AMeleeWeapon : public AOakInventoryEquippableItem
{
public:
	struct FGbxAttributeFloat                    MeleeWeapon_Damage;                                // 0x4C8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_AttackSpeed;                           // 0x4D4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_CloseInMaxDistance;                    // 0x4E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_OpenerCloseInMaxDistance;              // 0x4EC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_DamageRadius;                          // 0x4F8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_CritChance;                            // 0x504(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_CritDamage;                            // 0x510(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_StatusEffectChance;                    // 0x51C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_StatusEffectDamage;                    // 0x528(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MeleeWeapon_BaseAttackSpeed;                       // 0x534(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ThirdPersonHoldingSocketName;                      // 0x540(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ThirdPersonIdleSocketName;                         // 0x548(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FirstPersonHoldingSocketName;                      // 0x550(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       ThirdPersonHoldingAttachBase;                      // 0x558(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       ThirdPersonIdleAttachBase;                         // 0x560(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMeshComponent*                        MeleeWeaponMesh3P;                                 // 0x568(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMeshComponent*                        MeleeWeaponMesh1P;                                 // 0x570(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakMeleeAudioProviderComponent*       AudioProvider;                                     // 0x578(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter*                         EquippedCharacter;                                 // 0x580(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMeleeWeaponIsHeld;                                // 0x588(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6055[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UConditionalDamageCriticalModifier*    CritModifier;                                      // 0x598(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMeshComponent*>                ThirdPersonAttachments;                            // 0x5A0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UMeshComponent*>                FirstPersonAttachments;                            // 0x5B0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6057[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMeshComponent*>                HiddenShadowComponents;                            // 0x5C8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AMeleeWeapon* GetDefaultObj();

	void OnUnequippedBy(class AOakCharacter* Equipper);
	void OnRep_MeleeWeaponIsHeld();
	void OnEquippedBy(class AOakCharacter* Equipper);
};

// 0x0 (0x50 - 0x50)
// Class OakGame.MeleeWeaponAttributeContextResolver
class UMeleeWeaponAttributeContextResolver : public UAttributeContextResolver
{
public:

	static class UClass* StaticClass();
	static class UMeleeWeaponAttributeContextResolver* GetDefaultObj();

};

// 0x30 (0x420 - 0x3F0)
// Class OakGame.MeleeWeaponInventoryBalanceStateComponent
class UMeleeWeaponInventoryBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	uint8                                        Pad_6059[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMeleeWeaponInventoryBalanceStateComponent* GetDefaultObj();

};

// 0xD60 (0xD90 - 0x30)
// Class OakGame.MenuMapCameraData
class UMenuMapCameraData : public UGbxDataAsset
{
public:
	struct FMainMenuCameraBlendParamsSet         DefaultBlendParams[0x6];                           // 0x30(0x138)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMainMenuCameraViewpointBlendPair> BlendOverrides;                                    // 0x168(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        CameraOffsetInterpSpeed;                           // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InspectCameraTransitionDuration;                   // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                  DefaultPostProcessSettings;                        // 0x180(0x600)(Edit, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                  NewsMenuPostProcessSettings;                       // 0x780(0x600)(Edit, NativeAccessSpecifierPublic)
	float                                        NewsMenuPostProcessBlendInTime;                    // 0xD80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NewsMenuPostProcessBlendOutTime;                   // 0xD84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_605A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMenuMapCameraData* GetDefaultObj();

};

// 0x18 (0x470 - 0x458)
// Class OakGame.MenuMapClaptrapSkitControl
class AMenuMapClaptrapSkitControl : public AActor
{
public:
	UMulticastDelegateProperty_                  OnPlaySkit;                                        // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_605B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMenuMapClaptrapSkitControl* GetDefaultObj();

	void OnSkitComplete();
	void OnAllSkitsComplete();
};

// 0x190 (0x5E8 - 0x458)
// Class OakGame.MenuMapMenuFlow
class AMenuMapMenuFlow : public AActor
{
public:
	UMulticastDelegateProperty_                  OnViewpointChanged;                                // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  LegalScreenCompleted;                              // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_605D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SecondsBetweenClaptrapSkits;                       // 0x490(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_605E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMenuMapCameraData*                    CameraData;                                        // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMainMenuCameraViewpointGroup         CameraViewpoints[0x6];                             // 0x4A0(0x90)(Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PlayThroughChanged;                                // 0x530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  UIGroupModeChanged;                                // 0x540(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  DifficultyChanged;                                 // 0x550(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_605F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  OakPlayerController;                               // 0x580(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxMenuData*                          NextMenuData;                                      // 0x588(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6060[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMainMenuViewpointType            CurrentViewpointType;                              // 0x5BC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6061[0x2B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMenuMapMenuFlow* GetDefaultObj();

	void Start(enum class EInitialPlayerStatus* OutInitialPlayerStatus);
	void ShowLegalScreen();
	void OnWorldTransitionCompleted();
	void OnPlayerControllerLogIn(class AOakPlayerController* InOakPlayerController);
	void OnMenuTransitionOutCompleted(enum class EMenuTransition InMenuTransition, class UGbxMenuData* InNextMenuData);
	void OnMenuStackPush(class UObject* InMenuPushed);
};

// 0x38 (0x490 - 0x458)
// Class OakGame.MenuMapScene
class AMenuMapScene : public AActor
{
public:
	TArray<struct FClaptrapSkitSublevel>         ClaptrapSkitSublevels;                             // 0x458(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6063[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMenuMapScene* GetDefaultObj();

	void OnClaptrapSkitSublevelUnloaded();
	void OnClaptrapSkitSublevelLoaded();
};

// 0x18 (0x48 - 0x30)
// Class OakGame.MicropatchGlobals
class UMicropatchGlobals : public UGbxDataAsset
{
public:
	struct FDateTime                             LatestCurrentTime;                                 // 0x30(0x8)(Edit, DisableEditOnInstance, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTimedMicropatchList>          TimedMicropatchSchedule;                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMicropatchGlobals* GetDefaultObj();

	void UpdateLatestCurrentTime();
};

// 0x10 (0x330 - 0x320)
// Class OakGame.MimicSpawnerComponentBase
class UMimicSpawnerComponentBase : public UGbxChildActorComponent
{
public:
	uint8                                        Pad_6064[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMimicSpawnerComponentBase* GetDefaultObj();

	void StartAsyncLoadingMimicSpawnOption(class USpawnOptionData* Option);
};

// 0x20 (0x478 - 0x458)
// Class OakGame.MineCart
class AMineCart : public AActor
{
public:
	class USplineMovementComponentDoubleLinked*  SplineMovementComponent;                           // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHavokNavObstacleComponent*            HavokNavObstacleComponent;                         // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   PrimitiveComponent;                                // 0x468(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterImpulse;                                  // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBePushedByPlayer;                              // 0x474(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldCheckCollision;                             // 0x475(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6066[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMineCart* GetDefaultObj();

	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x0 (0x478 - 0x478)
// Class OakGame.MineCart_Skeletal
class AMineCart_Skeletal : public AMineCart
{
public:

	static class UClass* StaticClass();
	static class AMineCart_Skeletal* GetDefaultObj();

};

// 0x0 (0x478 - 0x478)
// Class OakGame.MineCart_Static
class AMineCart_Static : public AMineCart
{
public:

	static class UClass* StaticClass();
	static class AMineCart_Static* GetDefaultObj();

};

// 0x0 (0x458 - 0x458)
// Class OakGame.MinimapWorldAnchor
class AMinimapWorldAnchor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AMinimapWorldAnchor* GetDefaultObj();

};

// 0xB8 (0x640 - 0x588)
// Class OakGame.Mission_InteractiveObject
class AMission_InteractiveObject : public AInteractiveObject
{
public:
	bool                                         bAutomaticallyControlWaypoint;                     // 0x588(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseComplexConditions;                             // 0x589(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6067[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReference            ObjectiveToCareAbout;                              // 0x590(0x30)(Edit, NativeAccessSpecifierPrivate)
	struct FUserStateEnumValue                   ConditionActiveState;                              // 0x5C0(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FUserStateEnumValue                   ConditionCompleteState;                            // 0x5F8(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	class UMissionObserverComponent*             ObserverComponent;                                 // 0x630(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMissionIconComponent*                 IconComponent;                                     // 0x638(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AMission_InteractiveObject* GetDefaultObj();

};

// 0x10 (0x388 - 0x378)
// Class OakGame.MissionPathSubpointWidget
class UMissionPathSubpointWidget : public UHUDInWorldIcon
{
public:
	class UWidgetAnimation*                      PathActiveAnimation;                               // 0x378(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      PathSpawnAnimation;                                // 0x380(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMissionPathSubpointWidget* GetDefaultObj();

};

// 0x30 (0x2E8 - 0x2B8)
// Class OakGame.MissionTrackerSlotController
class UMissionTrackerSlotController : public UGbxUserWidget
{
public:
	UMulticastDelegateProperty_                  OnCompleteAnimation;                               // 0x2B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      CompleteAnimation;                                 // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      CheckedAnimation;                                  // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      AddAnimation;                                      // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      BaseAnimation;                                     // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMissionTrackerSlotController* GetDefaultObj();

	void SetObjectiveDescription(class FText& ObjectiveText);
	void ResetAnimations();
	void MissionTrackerAnimationEvent__DelegateSignature(class UUserWidget* Widget, class UWidgetAnimation* WidgetAnimation);
	class FText GetObjectiveDescription();
};

// 0x0 (0x2B8 - 0x2B8)
// Class OakGame.MissionTrackerTitle
class UMissionTrackerTitle : public UGbxUserWidget
{
public:

	static class UClass* StaticClass();
	static class UMissionTrackerTitle* GetDefaultObj();

	void SetMultipleMissionIconVisibility(bool bIsVisible);
	void SetMissionName(class FText& MissionText);
};

// 0x40 (0x618 - 0x5D8)
// Class OakGame.MovableDamageableHISM
class AMovableDamageableHISM : public ADamageableHISM
{
public:
	struct FVector                               StartLocation;                                     // 0x5D8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EndLocation;                                       // 0x5E4(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x5F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumberbOfSM;                                       // 0x5F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent* MyHISM;                                            // 0x5F8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6069[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMovableDamageableHISM* GetDefaultObj();

	void StopMovable();
	void StartMovable();
};

// 0x20 (0x50 - 0x30)
// Class OakGame.MultiClassNamingDataAsset
class UMultiClassNamingDataAsset : public UGbxDataAsset
{
public:
	TArray<struct FOakMultiClassNamingAttributePair> MultiClassNamingArray;                             // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FOakMultiClassNamingAttributePair> RuntimeReplacementMultiClassNamingArray;           // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMultiClassNamingDataAsset* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.NameplateInfoProviderInterface
class INameplateInfoProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INameplateInfoProviderInterface* GetDefaultObj();

};

// 0x10 (0xB00 - 0xAF0)
// Class OakGame.NekrobugAnimInstance
class UNekrobugAnimInstance : public UOakCharacterAnimInstance
{
public:
	bool                                         bIsGround;                                         // 0xAF0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_606A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GroundLookAtNodeAlpha;                             // 0xAF4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsFlyer;                                          // 0xAF8(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_606B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlyerLookAtNodeAlpha;                              // 0xAFC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UNekrobugAnimInstance* GetDefaultObj();

};

// 0x100 (0x558 - 0x458)
// Class OakGame.NewGameFlow
class ANewGameFlow : public AActor
{
public:
	uint8                                        Pad_606D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AGbxLevelSequenceActor> RockNRollSequence;                                 // 0x470(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCinematicModeData>  RockNRollCinematicMode;                            // 0x498(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCinematicModeData>  CharacterSelectCinematicMode;                      // 0x4C0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 CharacterSelectCamera;                             // 0x4E8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UMission>                  InitialMission;                                    // 0x510(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Timeofday;                                         // 0x518(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPostCharacterSelectScreenFade;                    // 0x51C(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_606E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FColor                                PostCharacterSelectScreenFadeColor;                // 0x520(0x4)(Edit, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseNewMenu;                                       // 0x524(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_606F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RnRInitialSceneViewLocation;                       // 0x528(0xC)(Edit, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6070[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInterface*>            RnRInitialSceneMaterials;                          // 0x538(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                        Pad_6071[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ANewGameFlow* GetDefaultObj();

	void PushCharacterSelectMenu();
	void OnRockNRollStarted();
	void OnRockNRollFinished();
};

// 0x28 (0x50 - 0x28)
// Class OakGame.NewGameSettings
class UNewGameSettings : public UObject
{
public:
	int32                                        CharacterSelectTimeInSeconds;                      // 0x28(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterSelectQuickStartTimeInSeconds;            // 0x2C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NewGameMap;                                        // 0x30(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CharacterSelectCompletionEvent;                    // 0x38(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        IntroMovies;                                       // 0x40(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UNewGameSettings* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class OakGame.NexusAssetStore_AmmoTypeData
class UNexusAssetStore_AmmoTypeData : public UNexusAssetStore
{
public:

	static class UClass* StaticClass();
	static class UNexusAssetStore_AmmoTypeData* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class OakGame.NexusAssetStore_EquippedInventorySlot
class UNexusAssetStore_EquippedInventorySlot : public UNexusAssetStore
{
public:

	static class UClass* StaticClass();
	static class UNexusAssetStore_EquippedInventorySlot* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.NPCInteractionBlueprintLibrary
class UNPCInteractionBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UNPCInteractionBlueprintLibrary* GetDefaultObj();

	void TakeObjectFromPlayerThenGiveBack(class AActor* TheNPC, bool bUseAlternateStance, const struct FMissionEventReference& MissionEvent, const struct FLatentActionInfo& LatentInfo);
	void TakeObjectFromPlayer(class AActor* TheNPC, bool bUseAlternateStance, const struct FMissionEventReference& MissionEvent, const struct FLatentActionInfo& LatentInfo);
	void SetObjectToHold(class AActor* TheNPC, class UStaticMesh* TheStaticMeshToHold, struct FItemPoolInfo& ThePickupToHold, const struct FVector& LocationOffset, const struct FRotator& RotationOffset, float ScaleOffset, class FName HandSocketName, float PutAwayTimeOffset, float TakeOutTimeOffset);
	bool NotifyNPCUsedByPlayer(class AActor* TheNPC);
	void GiveObjectToPlayer(class AActor* TheNPC, bool bUseAlternateStance, const struct FMissionEventReference& MissionEvent, const struct FLatentActionInfo& LatentInfo);
};

// 0x108 (0x280 - 0x178)
// Class OakGame.NPCInteractionComponent
class UNPCInteractionComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnInteractionLootSpawned;                          // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UStanceDataProvider*                   StanceGiveToPlayer;                                // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   StanceGiveToPlayerAlt;                             // 0x190(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   StanceTakeFromPlayer;                              // 0x198(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   StanceTakeFromPlayerAlt;                           // 0x1A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ExamineItemActionKey;                              // 0x1A8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       AttractParticleSystem;                             // 0x1B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                    GhostMaterialForHeldObjects;                       // 0x1B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           AudioEventWhenItemChangesHands;                    // 0x1C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TagForHeldObjectStaticMeshComponent;               // 0x1C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  DefaultHandSocketName;                             // 0x1D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FReplicatedInteractionInfo            ReplicatedState;                                   // 0x1D8(0x20)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_607E[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              AttractParticleComp;                               // 0x260(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                               CallbackTarget;                                    // 0x268(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_607F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNPCInteractionComponent* GetDefaultObj();

	void TakeObjectFromPlayerThenGiveBack(bool bUseAlternateStance, const struct FMissionEventReference& InMissionEvent, const struct FLatentActionInfo& LatentInfo);
	void TakeObjectFromPlayer(bool bUseAlternateStance, const struct FMissionEventReference& InMissionEvent, const struct FLatentActionInfo& LatentInfo);
	void SpawnedLootCallback(class ADroppedInventoryItemPickup* Pickup);
	void SetObjectToHold(class UStaticMesh* TheStaticMeshToHold, struct FItemPoolInfo& ThePickupToHold, const struct FTransform& InOffsetTransform, class FName InHandSocketName, float InPutAwayTimeOffset, float InTakeOutTimeOffset);
	void OnRep_ReplicatedState(const struct FReplicatedInteractionInfo& OldReplicatedState);
	void NPCInteractionLootEvent__DelegateSignature(class ADroppedInventoryItemPickup* Pickup);
	void LootDestroyedCallback(class AActor* DestroyedActor);
	void GiveObjectToPlayer(bool bUseAlternateStance, const struct FMissionEventReference& InMissionEvent, const struct FLatentActionInfo& LatentInfo);
	void ExamineActionFinishedCallback(enum class EGbxActionEndState EndState);
};

// 0x0 (0x50 - 0x50)
// Class OakGame.OakAbilityContextResolver_PetOwner
class UOakAbilityContextResolver_PetOwner : public UCharacterAttributeContextResolver
{
public:

	static class UClass* StaticClass();
	static class UOakAbilityContextResolver_PetOwner* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class OakGame.OakAbilityContextResolver_ActionAbility
class UOakAbilityContextResolver_ActionAbility : public UAttributeContextResolver
{
public:
	TSubclassOf<class UOakActionAbility>         ActionAbilityClass;                                // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAbilityContextResolver_ActionAbility* GetDefaultObj();

};

// 0x18 (0x300 - 0x2E8)
// Class OakGame.GbxListItemText_CharacterDebugMenu
class UGbxListItemText_CharacterDebugMenu : public UGbxListItemText
{
public:
	uint8                                        Pad_6080[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxListItemText_CharacterDebugMenu* GetDefaultObj();

};

// 0x70 (0x328 - 0x2B8)
// Class OakGame.OakAbilityDebugMenuCascadingList
class UOakAbilityDebugMenuCascadingList : public UGbxUserWidget
{
public:
	TSubclassOf<class UGbxListItemText_CharacterDebugMenu> DefaultListItemClass;                              // 0x2B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxGridListWidget*>            ListViews;                                         // 0x2C0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6081[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGridListWidget*                    ActiveList;                                        // 0x310(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6082[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAbilityDebugMenuCascadingList* GetDefaultObj();

	void SetActiveList(class UGbxGridListWidget* List);
	void OnItemSelected_Internal(class UGbxListItem* Item);
	void OnItemClicked_Internal(class UGbxListItem* Item);
};

// 0x10 (0x110 - 0x100)
// Class OakGame.OakAbility
class UOakAbility : public UGbxAbility
{
public:
	TArray<struct FOakAbilityTimer>              AbilityTimers;                                     // 0x100(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAbility* GetDefaultObj();

	void StopTimer(class UOakAbilityTimerData* Timer);
	void StopAbilityTimer(class UOakAbilityTimerData* Timer);
	void StartTimer(struct FOakAbilityTimerSpec& InSpec);
	void StartAbilityTimer(struct FOakAbilityTimerSpec& InSpec);
	void ResetTimer(class UOakAbilityTimerData* Timer);
	void ResetAbilityTimer(class UOakAbilityTimerData* Timer);
	void OnTimerStopped(struct FOakAbilityTimerSpec& Spec);
	void OnTimerStarted(struct FOakAbilityTimerSpec& Spec);
	void OnTimerFinished(struct FOakAbilityTimerSpec& Spec);
	void OnAbilityTimerStarted(struct FOakAbilityTimerSpec& Spec);
	void OnAbilityTimerEnded(struct FOakAbilityTimerSpec& Spec, struct FOakAbilityTimerResult& Result);
	bool IsTimerActive(class UOakAbilityTimerData* TimerData);
	bool IsAbilityTimerActive(class UOakAbilityTimerData* TimerData);
	float GetAbilityTimerValue(class UOakAbilityTimerData* Timer);
};

// 0x0 (0x88 - 0x88)
// Class OakGame.OakAbilityCondition_OakAnimActionAbilityActionSucceeded
class UOakAbilityCondition_OakAnimActionAbilityActionSucceeded : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UOakAbilityCondition_OakAnimActionAbilityActionSucceeded* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_Allies
class UOakAbilityEffectTargetResolutionData_Allies : public UGbxAbilityEffectTargetResolutionData
{
public:

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_Allies* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_Custom
class UOakAbilityEffectTargetResolutionData_Custom : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<class UPlanetData*>                   Planets;                                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTeam*>                         Teams;                                             // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  GameplayTags;                                      // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_Custom* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_Enemies
class UOakAbilityEffectTargetResolutionData_Enemies : public UGbxAbilityEffectTargetResolutionData
{
public:
	class UTeam*                                 PlayersTeam;                                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_Enemies* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_HasTag
class UOakAbilityEffectTargetResolutionData_HasTag : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<struct FGameplayTag>                  GameplayTags;                                      // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_HasTag* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_OnPlanet
class UOakAbilityEffectTargetResolutionData_OnPlanet : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<TSoftObjectPtr<class UPlanetData>>    Planets;                                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_OnPlanet* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_OnTeam
class UOakAbilityEffectTargetResolutionData_OnTeam : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<class UTeam*>                         Teams;                                             // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_OnTeam* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_Pet
class UOakAbilityEffectTargetResolutionData_Pet : public UGbxAbilityEffectTargetResolutionData
{
public:
	bool                                         bIsClassModResolver;                               // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResolveToDemiLichPet;                             // 0x31(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResolveToDragonPet;                               // 0x32(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResolveToMushroomPet;                             // 0x33(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResolveToNonPetCompanions;                        // 0x34(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_608D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_Pet* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_PetOfOneOnTeam
class UOakAbilityEffectTargetResolutionData_PetOfOneOnTeam : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<class UTeam*>                         Teams;                                             // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_PetOfOneOnTeam* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.OakAbilityEffectTargetResolutionData_Vehicles
class UOakAbilityEffectTargetResolutionData_Vehicles : public UGbxAbilityEffectTargetResolutionData
{
public:

	static class UClass* StaticClass();
	static class UOakAbilityEffectTargetResolutionData_Vehicles* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakAbilityResourceControllerBlueprintFunctionLibrary
class UOakAbilityResourceControllerBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakAbilityResourceControllerBlueprintFunctionLibrary* GetDefaultObj();

	void UnregisterWeaponShotModifier(struct FOakAbilityResourceController_WeaponShotModifier& Controller, struct FOakAbilityResourceSpec_WeaponShotModifier& Spec);
	void RegisterWeaponShotModifier(struct FOakAbilityResourceController_WeaponShotModifier& Controller, struct FOakAbilityResourceSpec_WeaponShotModifier& Spec);
};

// 0x50 (0x100 - 0xB0)
// Class OakGame.OakAbilityTimerAttributePropertyValueResolver
class UOakAbilityTimerAttributePropertyValueResolver : public UAttributePropertyValueResolver
{
public:
	TSoftClassPtr<class UOakAbility>             AbilityClass;                                      // 0xB0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakAbilityTimerData>   Timer;                                             // 0xD8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAbilityTimerAttributePropertyValueResolver* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.OakAbilityTimerData
class UOakAbilityTimerData : public UGbxDataAsset
{
public:
	class FName                                  TimerName;                                         // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAbilityTimerData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakPassiveAbilityTestGradeValueResolver
class UOakPassiveAbilityTestGradeValueResolver : public UAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class UOakPassiveAbilityTestGradeValueResolver* GetDefaultObj();

};

// 0x10 (0x298 - 0x288)
// Class OakGame.UIStatData_OakPassiveAbilityAttribute
class UUIStatData_OakPassiveAbilityAttribute : public UUIStatData_Numeric
{
public:
	class UStatusEffectData*                     StatusEffectData;                                  // 0x288(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxAttributeData*                     Attribute;                                         // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UUIStatData_OakPassiveAbilityAttribute* GetDefaultObj();

};

// 0x38 (0x2C0 - 0x288)
// Class OakGame.UIStatData_OakPassiveAbilityAttributeInitializer
class UUIStatData_OakPassiveAbilityAttributeInitializer : public UUIStatData_Numeric
{
public:
	struct FAttributeInitializationData          Initializer;                                       // 0x288(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UUIStatData_OakPassiveAbilityAttributeInitializer* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakAchievementUtility
class UOakAchievementUtility : public UAchievementUtility
{
public:

	static class UClass* StaticClass();
	static class UOakAchievementUtility* GetDefaultObj();

	void UpdateAchievementForPlayer(class AGbxPlayerController* Pc, enum class EOakAchievements AchievementId, int32 ProgressValue);
	void UnlockAchievementForPlayer(class AGbxPlayerController* Pc, enum class EOakAchievements AchievementId);
};

// 0x78 (0x220 - 0x1A8)
// Class OakGame.OakAction_Anim
class UOakAction_Anim : public UGbxAction_Anim
{
public:
	bool                                         bBlockWeaponActions;                               // 0x1A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptWeaponActions;                           // 0x1A9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60A3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WeaponActions;                                     // 0x1AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideWeapons;                                      // 0x1B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideWeaponSlot;                                   // 0x1B1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockSpells;                                      // 0x1B2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60A4[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AnimSlotWeap;                                      // 0x1B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasAnimSlotWeapValue;                             // 0x1C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60A5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlendInWeap;                                       // 0x1C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBlendInWeapValue;                              // 0x1C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60A6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultBlendOutWeap;                               // 0x1CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBlendOutWeapValue;                             // 0x1D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockSprinting;                                   // 0x1D1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPauseSprinting;                                   // 0x1D2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockJumping;                                     // 0x1D3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockECHOMenu;                                    // 0x1D4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockInput;                                        // 0x1D5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockUsingObjects;                                 // 0x1D6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseActionSkillCrosshair;                          // 0x1D7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlayerMeleeWeapon;                            // 0x1D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptWhenZoomed;                              // 0x1D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideBlendOutWhenInterrupted;                  // 0x1DA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideFirstPersonLegs;                              // 0x1DB(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBringUpWeaponAtEnd;                               // 0x1DC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BringUpWeaponBlendInTime;                          // 0x1E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptBringUpWeaponWhenZoomed;                 // 0x1E4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayBringUpWeaponOnSameSlot;                      // 0x1E5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockEquipAnimation;                              // 0x1E6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckFootDownWhenFreezing;                        // 0x1E7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraMode;                                        // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraModeBlendInTimeOverride;                     // 0x1F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraModeBlendOutTimeOverride;                    // 0x1F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRightHandSpellAction;                             // 0x1F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnimActionDef                        AnimDefWeap;                                       // 0x200(0x18)(Deprecated, NoDestructor, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                       AnimationWeap;                                     // 0x218(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAction_Anim* GetDefaultObj();

	void OnBeginBringUpWeapon(class AActor* Actor);
	void K2_SetWeaponSlotHidden(bool bHidden);
	void K2_SetWeaponsHidden(bool bHidden);
	void K2_SetUseActionSkillCrosshair(bool bNewUseActionSkillCrosshair);
	void K2_SetSpellsBlocked(bool bBlocked);
	void K2_SetPlayerMeleeWeaponVisible(bool bVisible);
	void K2_SetPauseSprinting(bool bPaused);
	void K2_SetLockObjectUse(bool bLocked);
	void K2_SetLockInput(bool bLocked);
	void K2_SetFirstPersonLegsHidden(bool bHidden);
	void K2_SetCameraMode(class FName NewCameraMode, float BlendTimeOverride);
	void K2_SetBlockSprinting(bool bBlocked);
	void K2_SetBlockJumping(bool bBlocked);
	void K2_SetBlockEquipAnimation(bool bBlocked);
	void K2_SetBlockedWeaponActions(bool bBlocked, int32 WeaponActionsMask);
	void K2_SetBlockEchoMenu(bool bBlocked);
	void K2_RestoreCameraMode(float BlendTimeOverride);
	class AWeapon* K2_GetWeapon();
};

// 0x60 (0x280 - 0x220)
// Class OakGame.OakAction_Anim_ActionAbility
class UOakAction_Anim_ActionAbility : public UOakAction_Anim
{
public:
	uint8                                        Pad_60AC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakAnimActionAbilityEndAction> ConditionalEndActions;                             // 0x230(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	enum class EOakAnimActionAbilityEndAction    UnconditionalEndAction;                            // 0x240(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60AD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter_Player*                  OwnerPlayer;                                       // 0x248(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakPlayerController*                  OwnerPlayerController;                             // 0x250(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakActionAbility*                     OwnerActionAbility;                                // 0x258(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShuttingDown;                                   // 0x260(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlocksActionAbilityShutdown;                      // 0x261(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bLockMantling;                                     // 0x262(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlockPlayerLandingNotification;                   // 0x263(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HardwareLightingStateName;                         // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HardwareLightingBeginEventName;                    // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bActionSucceeded;                                  // 0x278(0x1)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60AF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAction_Anim_ActionAbility* GetDefaultObj();

	bool StartedOwnedControlledMove(TSubclassOf<class UOakControlledMove_ActionAbility> ControlledMoveClass, float SpeedOverride, float DurationOverride, float LaunchAngleOverride, class AActor* TargetActor, const struct FVector& TargetLocation);
	void SetActionSucceeded(bool bSucceeded);
	void RepJumpToMontageSection(class FName SectionName);
	void ReleaseActionLock();
	void OnOwnedControlledMoveEnded(class UOakControlledMove_ActionAbility* ControlledMove);
	void JumpToMontageSection(class FName SectionName);
	bool IsLocallyControlled();
	void DisableHardwareLightingState();
};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakActionAbility_AnimNotifyState
class UOakActionAbility_AnimNotifyState : public UAnimNotifyState
{
public:
	class FName                                  StartedEventName;                                  // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  EndedEventName;                                    // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakActionAbility_AnimNotifyState* GetDefaultObj();

};

// 0x0 (0x220 - 0x220)
// Class OakGame.OakAction_Anim_PlayerMelee
class UOakAction_Anim_PlayerMelee : public UOakAction_Anim
{
public:

	static class UClass* StaticClass();
	static class UOakAction_Anim_PlayerMelee* GetDefaultObj();

};

// 0x10 (0x230 - 0x220)
// Class OakGame.OakAction_Anim_TedioreReload
class UOakAction_Anim_TedioreReload : public UOakAction_Anim
{
public:
	TSubclassOf<class UGbxAction>                ActionClassToStopOnEndIfNotSuccessful;             // 0x220(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  UnhideWeaponReason;                                // 0x228(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakAction_Anim_TedioreReload* GetDefaultObj();

};

// 0x8 (0x228 - 0x220)
// Class OakGame.OakAction_Anim_WeaponReload
class UOakAction_Anim_WeaponReload : public UOakAction_Anim
{
public:
	class FName                                  MagBoneName;                                       // 0x220(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakAction_Anim_WeaponReload* GetDefaultObj();

};

// 0x8 (0x228 - 0x220)
// Class OakGame.OakAction_AttachedAnim
class UOakAction_AttachedAnim : public UOakAction_Anim
{
public:
	struct FPawnInterpolationInfo                InterpolationInfo;                                 // 0x220(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakAction_AttachedAnim* GetDefaultObj();

};

// 0x18 (0x148 - 0x130)
// Class OakGame.OakAction_CoordinatedEffect
class UOakAction_CoordinatedEffect : public UGbxAction_CoordinatedEffect
{
public:
	bool                                         bHideWeaponParticles;                              // 0x130(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyToWeapons;                                   // 0x131(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyToAttachedCharacters;                        // 0x132(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnlyApplyToEquippedWeapons;                       // 0x133(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyToLimbGore;                                  // 0x134(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyToAttachedPlayerBanners;                     // 0x135(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_60B3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        OnlyApplyToComponentByName;                        // 0x138(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakAction_CoordinatedEffect* GetDefaultObj();

};

// 0x30 (0x178 - 0x148)
// Class OakGame.OakAction_CoordinatedEffect_ActionAbility
class UOakAction_CoordinatedEffect_ActionAbility : public UOakAction_CoordinatedEffect
{
public:
	uint8                                        Pad_60B4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter_Player*                  OwnerPlayer;                                       // 0x158(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakPlayerController*                  OwnerPlayerController;                             // 0x160(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakActionAbility*                     OwnerActionAbility;                                // 0x168(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlocksActionAbilityShutdown;                      // 0x170(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShuttingDown;                                   // 0x171(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60B5[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAction_CoordinatedEffect_ActionAbility* GetDefaultObj();

};

// 0x0 (0x60 - 0x60)
// Class OakGame.OakAction_DetachFromSeat
class UOakAction_DetachFromSeat : public UGbxAction
{
public:

	static class UClass* StaticClass();
	static class UOakAction_DetachFromSeat* GetDefaultObj();

};

// 0x0 (0x220 - 0x220)
// Class OakGame.OakAction_Emote
class UOakAction_Emote : public UOakAction_Anim
{
public:

	static class UClass* StaticClass();
	static class UOakAction_Emote* GetDefaultObj();

};

// 0x18 (0x78 - 0x60)
// Class OakGame.OakAction_FrozenDeath
class UOakAction_FrozenDeath : public UGbxAction
{
public:
	bool                                         bShatter;                                          // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60B7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       Particle;                                          // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           Sound;                                             // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAction_FrozenDeath* GetDefaultObj();

};

// 0x6F8 (0x8F0 - 0x1F8)
// Class OakGame.OakAction_Gib
class UOakAction_Gib : public UGbxAction_Gib
{
public:
	bool                                         bUseGoreRegionLimbs;                               // 0x1F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_60B8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakElementalGibData                  Cryo;                                              // 0x200(0x160)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FOakElementalGibData                  DarkMagic;                                         // 0x360(0x160)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FOakElementalGibData                  Fire;                                              // 0x4C0(0x160)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FOakElementalGibData                  Poison;                                            // 0x620(0x160)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FOakElementalGibData                  Shock;                                             // 0x780(0x160)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        ImpulseModifier;                                   // 0x8E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_60BA[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAction_Gib* GetDefaultObj();

};

// 0x558 (0x610 - 0xB8)
// Class OakGame.OakAction_HostileAttach
class UOakAction_HostileAttach : public UGbxAction_SimpleAnim
{
public:
	struct FAnimActionDef                        LoopAnim;                                          // 0xB8(0x18)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAnimActionDef                        AttackAnim;                                        // 0xD0(0x18)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAnimActionDef                        GripFeedbackAnim;                                  // 0xE8(0x18)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxAction>                EjectedAction;                                     // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BlendInTime;                                       // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BlendOutTime;                                      // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxParam                             AttackWarmupDelay;                                 // 0x110(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             AttackDelay;                                       // 0x190(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             VelocityDifferenceWeight;                          // 0x210(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             RecoveryRate;                                      // 0x290(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             ThrowFactor;                                       // 0x310(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             EjectForce;                                        // 0x390(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             NoHostileDetachDelay;                              // 0x410(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             GripFeedbackValue;                                 // 0x490(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             GripFeedbackDelay;                                 // 0x510(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGbxParam                             CanStopFeedBackCooldown;                           // 0x590(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAction_HostileAttach* GetDefaultObj();

};

// 0x20 (0x310 - 0x2F0)
// Class OakGame.OakAction_LeapOnVehicle
class UOakAction_LeapOnVehicle : public UGbxAction_NavHomingJump
{
public:
	TSubclassOf<class UGbxAction>                FailedAction;                                      // 0x2F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToAttach;                                  // 0x2F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZOffset;                                           // 0x2FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NavigationToleranceRadius;                         // 0x300(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxLeapDistance;                                   // 0x304(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDoNavigationTest;                                 // 0x308(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELeapOnVehicle_SeatType           SeatType;                                          // 0x309(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSearchNearestSeat;                                // 0x30A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_60BF[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAction_LeapOnVehicle* GetDefaultObj();

	TArray<struct FGbxActionRegister> MakeActionLeapOnVehicleRegisters(class AOakVehicle* OakVehicle, int32 SeatIndex);
};

// 0x10 (0x3C8 - 0x3B8)
// Class OakGame.OakAction_PhaseMove
class UOakAction_PhaseMove : public UGbxAction_Loop
{
public:
	float                                        HoverAltitude;                                     // 0x3B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HoverRadius;                                       // 0x3BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HoverAccelerationTime;                             // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HoverSpeed;                                        // 0x3C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAction_PhaseMove* GetDefaultObj();

	void PlayPhaseMove(TSubclassOf<class UOakAction_PhaseMove> MoveAction, class ACharacter* Character, class AActor* MoveTarget, const struct FTransform& TargetEndTransform, float Duration, class AActor* HoverTarget);
	class AActor* K2_GetMoveTarget();
	class AActor* K2_GetHoverTarget();
	class ACharacter* K2_GetCharacter();
};

// 0x10 (0x210 - 0x200)
// Class OakGame.OakAction_PhysicalDeath
class UOakAction_PhysicalDeath : public UGbxAction_PhysicalDeath
{
public:
	enum class EOakElementalDeathEffects         ElementalDeathEffects;                             // 0x200(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RagdollWhenGoredRegions;                           // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipForcedDeathPhysicsCheck;                      // 0x208(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAttemptPinDeath;                                  // 0x209(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60C8[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAction_PhysicalDeath* GetDefaultObj();

	void K2_SetRagdollWhenGoredRegions(int32 NewRagdollWhenGoredRegions);
};

// 0x20 (0x240 - 0x220)
// Class OakGame.OakAction_RandomAnim
class UOakAction_RandomAnim : public UOakAction_Anim
{
public:
	TArray<struct FWeightedAnim>                 RandomAnims;                                       // 0x220(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRandomAnimDef>                RandomAnimDefs;                                    // 0x230(0x10)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAction_RandomAnim* GetDefaultObj();

};

// 0x8 (0x228 - 0x220)
// Class OakGame.OakAction_VehicleInteractionAnim
class UOakAction_VehicleInteractionAnim : public UOakAction_Anim
{
public:
	bool                                         bDetachPawnOnBringUpWeapon;                        // 0x220(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetCameraModeOnStart;                           // 0x221(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterpolateRotationToZero;                        // 0x222(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60CB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InterpolateRotationToZeroDuration;                 // 0x224(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAction_VehicleInteractionAnim* GetDefaultObj();

};

// 0x18 (0x78 - 0x60)
// Class OakGame.OakAction_VehicleMoveTo
class UOakAction_VehicleMoveTo : public UGbxAction
{
public:
	float                                        ReachRadius;                                       // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WantedSpeed;                                       // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMaxSpeed;                                         // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseBoost;                                         // 0x69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60CC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DotDestination;                                    // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_60CD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAction_VehicleMoveTo* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class OakGame.AnimNotify_InterpolateVehicleToGround
class UAnimNotify_InterpolateVehicleToGround : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_InterpolateVehicleToGround* GetDefaultObj();

};

// 0x0 (0x1C0 - 0x1C0)
// Class OakGame.OakAction_VehicleSpawnAnim
class UOakAction_VehicleSpawnAnim : public UGbxAction_SpawnAnim
{
public:

	static class UClass* StaticClass();
	static class UOakAction_VehicleSpawnAnim* GetDefaultObj();

};

// 0x28 (0x138 - 0x110)
// Class OakGame.OakPlayerAbility
class UOakPlayerAbility : public UOakAbility
{
public:
	bool                                         bMustBeSlotted;                                    // 0x110(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPauseInOverworld;                                 // 0x111(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsClassFeature;                                   // 0x112(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EOakPlayerClass                   RequiredPlayerClass;                               // 0x113(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_60CF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUIStatData*>                   StatDataItems;                                     // 0x118(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  OakCharacterPlayer;                                // 0x128(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityManagerComponent*     OakManager;                                        // 0x130(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbility* GetDefaultObj();

	bool IsSlotted();
	class UOakPlayerAbilitySlotData* GetCurrentSlot();
};

// 0x198 (0x2D0 - 0x138)
// Class OakGame.OakActionAbility
class UOakActionAbility : public UOakPlayerAbility
{
public:
	uint8                                        Pad_60E7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bActiveRetrigger;                                  // 0x139(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_60E8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActiveRetriggerCount;                              // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_60E9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActionSkillFailureCodeDescription> FailureCodeDescriptions;                           // 0x148(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         bShouldDisplayDurationBar;                         // 0x158(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60EB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakActionAbilityAugmentSlotData*> SupportedAugmentSlots;                             // 0x160(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UGameResourcePoolData*                 CooldownPoolData;                                  // 0x170(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameResourcePoolData*                 DurationPoolData;                                  // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                DefaultHUDIconFrameName;                           // 0x180(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             HUDSkillIcon;                                      // 0x190(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             HUDSkillDurationIcon;                              // 0x1B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUsesCharges;                                      // 0x1E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          ChargeInitializationData;                          // 0x1E8(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EOakActionAbilitySecondaryUseActionType SecondaryUseActionType;                            // 0x220(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEndOnDownstate;                                   // 0x221(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanBeActivatedWhileAttached;                      // 0x222(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60EE[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameResourcePoolReference            CooldownPoolRef;                                   // 0x228(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGameResourcePoolReference            DurationPoolRef;                                   // 0x240(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FOakActionAbilityActiveState          ActiveState;                                       // 0x258(0x2)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60EF[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  OakPlayerController;                               // 0x260(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Charges;                                           // 0x268(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeInteger                  MaxCharges;                                        // 0x26C(0xC)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class IOakActionAbilityOwnedResourceInterface>> OwnedResources;                                    // 0x278(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60F0[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HardwareLightingStateName;                         // 0x2C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HardwareLightingBeginEventName;                    // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakActionAbility* GetDefaultObj();

	void StopActionAbility();
	void StartActionAbility();
	bool ShouldStopAbilityOnPawnSlotComponentAttach();
	bool ShouldDisplayDurationBar();
	bool ShouldAbortActivation(uint8* OutAbortCode);
	void SetChargesAvailable(int32 NewCharges);
	void ServerStopActionAbility(enum class EOakActionAbilityStopAction StopAction);
	void ServerStartActionAbility();
	void ServerResetActionAbilityCooldown();
	void ResetDurationTimer();
	void ResetActionAbilityCooldown();
	void RemoveScriptingLock(class FName& Reason);
	void OnStopActionAbility();
	void OnStartActionAbility();
	void OnRep_MaxCharges();
	void OnRep_Charges();
	void OnRep_ActiveState(struct FOakActionAbilityActiveState& PrevState);
	void OnReady();
	void OnPlayerDeadOrDying();
	void OnOwnerCinematicModeChanged(bool bInCinematicMode);
	void OnInputHoldTapped();
	void OnInputHoldReleased();
	void OnInputHoldPressed();
	void OnInputHoldHeld();
	void OnDurationResourceDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnCoolingDown();
	void OnCooldownResourceFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnChargeCountChanged(int32 OldCharge);
	void OnActionAbilityRetrigger();
	void OnAbilitySlotted();
	bool K2_CanRetrigger();
	bool IsReady();
	bool IsPendingStop();
	bool IsDurationTimerRunning();
	bool IsCoolingDown();
	bool IsAugmentSlotted(class UOakActionAbilityAugmentData* Augment);
	bool IsAugmentInSlot(class UOakActionAbilityAugmentData* Augment, class UOakActionAbilityAugmentSlotData* AugmentSlot);
	bool IsAnyAugmentInSlot(class UOakActionAbilityAugmentSlotData* AugmentSlot);
	bool IsActive();
	bool HasChargesAvailable();
	void HandleInputHoldActivationEnd();
	void HandleInputHoldActivationBegin();
	void HandleInputActivationRelease();
	void HandleInputActivationEnd();
	void HandleInputActivationBegin();
	void HandleInputActivationAttempt();
	class UOakActionAbilityAugmentData* GetSlotAugment(class UOakActionAbilityAugmentSlotData* AugmentSlot);
	class AOakPlayerController* GetOakPlayerController();
	bool GetMaxDurationModifier(enum class EGbxAttributeModifierType* ModifierType, float* Value);
	bool GetMaxCooldownModifier(enum class EGbxAttributeModifierType* ModifierType, float* Value);
	float GetDurationPercent();
	uint8 GetDefaultActivationErrorCode();
	float GetCooldownRestartPercent();
	float GetCooldownPercent();
	class FString GetActionSkillWidgetKeyframe();
	void ClientNotifyActionSkillActivationFailed(uint8 FailureCode);
	void CleanupOnActionSkillDeactivation();
	void AddScriptingLock(class FName& Reason);
};

// 0x28 (0xD8 - 0xB0)
// Class OakGame.OakActionAbilityAttributePropertyValueResolver
class UOakActionAbilityAttributePropertyValueResolver : public UAttributePropertyValueResolver
{
public:
	TSoftClassPtr<class UOakActionAbility>       ActionAbilityClass;                                // 0xB0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakActionAbilityAttributePropertyValueResolver* GetDefaultObj();

};

// 0x88 (0xB8 - 0x30)
// Class OakGame.OakActionAbilityAugmentData
class UOakActionAbilityAugmentData : public UGbxDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  ShortDescription;                                  // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FLinearColor                          BarColor;                                          // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUIStatData*>                   StatDataItems;                                     // 0x88(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bIsMutuallyExclusive;                              // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60F2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakActionAbilityAugmentData*>  SupportedMods;                                     // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         bIsAlwaysAvailable;                                // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60F3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakActionAbilityAugmentData* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class OakGame.PlayerCharacterComponentAugmentData
class UPlayerCharacterComponentAugmentData : public UGbxDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  ShortDescription;                                  // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class UUIStatData*>                   StatDataItems;                                     // 0x78(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPlayerCharacterComponentAugmentData* GetDefaultObj();

};

// 0x18 (0xA0 - 0x88)
// Class OakGame.OakPlayerCharacterAugmentData_Pet
class UOakPlayerCharacterAugmentData_Pet : public UPlayerCharacterComponentAugmentData
{
public:
	enum class EOakActionAbilityPetType          PetType;                                           // 0x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EOakActionAbilityPetEvolutionType EvolutionType;                                     // 0x89(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60F4[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HUDIconFrameName;                                  // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerCharacterAugmentData_Pet* GetDefaultObj();

};

// 0x8 (0xC0 - 0xB8)
// Class OakGame.OakActionAbilityAugmentData_Pet_Mod
class UOakActionAbilityAugmentData_Pet_Mod : public UOakActionAbilityAugmentData
{
public:
	enum class EOakActionAbilityPetType          ModPetType;                                        // 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EOakActionAbilityPetModType       ModType;                                           // 0xB9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60F5[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakActionAbilityAugmentData_Pet_Mod* GetDefaultObj();

};

// 0x0 (0xB8 - 0xB8)
// Class OakGame.OakActionAbilityAugmentData_Pet_Ability
class UOakActionAbilityAugmentData_Pet_Ability : public UOakActionAbilityAugmentData
{
public:

	static class UClass* StaticClass();
	static class UOakActionAbilityAugmentData_Pet_Ability* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class OakGame.OakActionAbilityAugmentSlotData
class UOakActionAbilityAugmentSlotData : public UGbxDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  ShortDescription;                                  // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         bUnlockedByPlayerLevel;                            // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60F6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LevelUnlock;                                       // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOakActionAbilityAugmentData*>  SupportedAugments;                                 // 0x80(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UOakActionAbilityAugmentSlotData*      ParentSlotData;                                    // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakActionAbilityAugmentSlotData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakActionAbilityBlueprintFunctionLibrary
class UOakActionAbilityBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakActionAbilityBlueprintFunctionLibrary* GetDefaultObj();

	TArray<struct FGbxActionRegister> GetOwnedGbxActionRegisters(class UOakActionAbility* Context);
	TArray<struct FGbxActionRegister> GetObjectOwnerActionRegisters(class UObject* Context);
};

// 0x0 (0xB0 - 0xB0)
// Class OakGame.OakActionAbilityCooldownPoolValueResolver
class UOakActionAbilityCooldownPoolValueResolver : public UAttributePropertyValueResolver
{
public:

	static class UClass* StaticClass();
	static class UOakActionAbilityCooldownPoolValueResolver* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class OakGame.OakActionAbilityMultiContextResolver
class UOakActionAbilityMultiContextResolver : public UAttributeContextResolver
{
public:

	static class UClass* StaticClass();
	static class UOakActionAbilityMultiContextResolver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakActionAbilityOwnedResourceInterface
class IOakActionAbilityOwnedResourceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IOakActionAbilityOwnedResourceInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakActionBlueprintLibrary
class UOakActionBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakActionBlueprintLibrary* GetDefaultObj();

	class UGbxAction* K2Play(TSubclassOf<class UGbxAction> ActionClass, TArray<struct FGbxActionRegister>& GbxActionRegisters, enum class EGbxActionNetMode NetMode, class AActor* Target, class UWeaponSlotData* WeaponSlot, float Duration, float PlayRate, const struct FVector& Direction, int32 MontageLoopCount);
};

// 0x28 (0x538 - 0x510)
// Class OakGame.OakAIActionComponent
class UOakAIActionComponent : public UAIActionComponent
{
public:
	TSubclassOf<class UAIAction>                 VehicleDriverAction;                               // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAIAction>                 VehicleTurretAction;                               // 0x518(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAIAction>                 VehiclePassengerAction;                            // 0x520(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAIAction>                 VehicleScriptedLeadAction;                         // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAIAction>                 TurretAction;                                      // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAIActionComponent* GetDefaultObj();

};

// 0x0 (0x748 - 0x748)
// Class OakGame.OakAIBalancedProjectile
class AOakAIBalancedProjectile : public AOakProjectile
{
public:

	static class UClass* StaticClass();
	static class AOakAIBalancedProjectile* GetDefaultObj();

};

// 0xA0 (0x760 - 0x6C0)
// Class OakGame.OakAIController
class AOakAIController : public AGbxAIController
{
public:
	uint8                                        Pad_6103[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter*                         OakCharacter;                                      // 0x6C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIWeaponUserComponent*                AIWeaponUserComp;                                  // 0x6D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  EnterVehicleEvent;                                 // 0x6D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ExitVehicleEvent;                                  // 0x6E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  EnterTurretEvent;                                  // 0x6F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ExitTurretEvent;                                   // 0x708(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AOakVehicle*                           MyVehicle;                                         // 0x718(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AVehicleSeatPawn*                      MyVehicleSeatPawn;                                 // 0x720(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVehicleSeatComponent*                 MyVehicleSeatComponent;                            // 0x728(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATurretSeatPawn*                       TurretSeatPawn;                                    // 0x730(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTurretMovementComponent*              TurretMovementComponent;                           // 0x738(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakAIActionComponent*                 OakAIActionComponent;                              // 0x740(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakNavComponent*                      OakNavComponent;                                   // 0x748(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakNpcGreetingComponent*              OakNpcGreetingComponent;                           // 0x750(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6105[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakAIController* GetDefaultObj();

	void OnSeatDetachFinished(class APawn* DetachedPawn, class AController* DetachedController);
	class UOakNavComponent* GetOakNavComponent();
	class UOakAIActionComponent* GetOakAIActionComponent();
	class AOakVehicle* GetMyVehicle();
	class ATurretSeatPawn* GetMyTurret();
	void ExitVehicleEvent__DelegateSignature();
	void ExitTurretEvent__DelegateSignature();
	void EnterVehicleEvent__DelegateSignature(class AOakVehicle* OakVehicle, int32 SlotIdx);
	void EnterVehicle(class AOakVehicle* OakVehicle, int32 SlotIdx, bool bInstant, bool bSkipAITreeSetup);
	void EnterTurretEvent__DelegateSignature(class ASeatPawn* TurretPawn);
	void EnterTurret(class ATurretSeatPawn* TurrentPawn, bool bInstant, bool bSkipAITreeSetup);
};

// 0xD0 (0x100 - 0x30)
// Class OakGame.OakAimAssistParameters
class UOakAimAssistParameters : public UAimAssistParameters
{
public:
	float                                        Stickiness;                                        // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomStickiness;                                    // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReduceInput;                                       // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadiusScaleDistance;                               // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRadiusScale;                                    // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRadiusScale;                                    // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FullStrengthRatio;                                 // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarPlaneMinCap;                                    // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarPlaneMinDistance;                               // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarPlaneMaxDistance;                               // 0x54(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearPlaneMaxDistance;                              // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearPlaneMinDistance;                              // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearPlaneMaxScaling;                               // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleAimAssistSmoothingDuration;                    // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoTargetAimAssistSmoothingDuration;                // 0x68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBulletMagnetismAlwaysOn;                          // 0x6C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6108[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BulletMagnetismOuterAngle;                         // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletMagnetismInnerAngle;                         // 0x74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBulletMagnetismZoomScale;                         // 0x78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6109[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BulletMagnetismZoomScale;                          // 0x7C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BulletMagnetismCorrectionRate;                     // 0x80(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBulletMagnetismDeflection;                      // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSnapToTargetPitch;                              // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSnapToTargetYaw;                                // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_610A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialStickiness;                                 // 0x98(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialZoomStickiness;                             // 0x9C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialReduceInput;                                // 0xA0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialRadiusScaleDistance;                        // 0xA4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialMinRadiusScale;                             // 0xA8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialMaxRadiusScale;                             // 0xAC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialFullStrengthRatio;                          // 0xB0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialFarPlaneMinCap;                             // 0xB4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialFarPlaneMinDistance;                        // 0xB8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialFarPlaneMaxDistance;                        // 0xBC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialNearPlaneMaxDistance;                       // 0xC0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialNearPlaneMinDistance;                       // 0xC4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialNearPlaneMaxScaling;                        // 0xC8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialIdleAimAssistSmoothingDuration;             // 0xCC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialNoTargetAimAssistSmoothingDuration;         // 0xD0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         InitialbBulletMagnetismAlwaysOn;                   // 0xD4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_610B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialBulletMagnetismOuterAngle;                  // 0xD8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialBulletMagnetismInnerAngle;                  // 0xDC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         InitialbBulletMagnetismZoomScale;                  // 0xE0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_610C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialBulletMagnetismZoomScale;                   // 0xE4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             InitialBulletMagnetismCorrectionRate;              // 0xE8(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialMaxBulletMagnetismDeflection;               // 0xF0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialMaxSnapToTargetPitch;                       // 0xF4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialMaxSnapToTargetYaw;                         // 0xF8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_610D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAimAssistParameters* GetDefaultObj();

};

// 0x1A0 (0x1C8 - 0x28)
// Class OakGame.OakAimAssistStrategy
class UOakAimAssistStrategy : public UAimAssistStrategy
{
public:
	class AOakPlayerController*                  OakPlayerController;                               // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTargetingComponent*                   TargetingComponent;                                // 0x30(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakGameInstance*                      OakGameInstance;                                   // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                AimAssistActor;                                    // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAimAssistSmoothingProperties         AimAssistSmoothingProperties;                      // 0x48(0x20)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_610F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentBestTarget;                                 // 0x80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6110[0x140];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAimAssistStrategy* GetDefaultObj();

};

// 0x1C0 (0x8E0 - 0x720)
// Class OakGame.OakAISwarmComponent
class UOakAISwarmComponent : public UBoxComponent
{
public:
	UMulticastDelegateProperty_                  OnReachedDestination;                              // 0x720(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDestroyed;                                       // 0x730(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FOakAISwarmMovement                   DefaultMovement;                                   // 0x740(0x188)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bLimitToBounds;                                    // 0x8C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6111[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReachedDistance;                                   // 0x8CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakAISwarmActor>              SwarmActors;                                       // 0x8D0(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAISwarmComponent* GetDefaultObj();

	void SetSwarmMovement(const struct FOakAISwarmMovement& Movement);
	void SetSwarmDestination(class USceneComponent* Destination);
	void SetSwarmActorMovement(class AActor* Actor, const struct FOakAISwarmMovement& Movement);
	void SetSwarmActorDestination(class AActor* Actor, class USceneComponent* Destination);
	void RemoveSwarmActor(class AActor* Actor);
	void AddSwarmActor(class AActor* Actor);
	void ActorDestroyed(class AActor* Actor);
};

// 0x30 (0x8E0 - 0x8B0)
// Class OakGame.OakAIWeaponUserComponent
class UOakAIWeaponUserComponent : public UAIWeaponUserComponent
{
public:
	class AOakAIController*                      OakAIController;                                   // 0x8B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponSlotData*                       WeaponSlot;                                        // 0x8B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6112[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeInteger                  AIBurstCount;                                      // 0x8C8(0xC)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                    AIBurstDelay;                                      // 0x8D4(0xC)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakAIWeaponUserComponent* GetDefaultObj();

};

// 0xB0 (0x5A0 - 0x4F0)
// Class OakGame.OakAssetManager
class UOakAssetManager : public UGbxGameAssetManager
{
public:
	TArray<class UObject*>                       CrossLevelAssets;                                  // 0x4F0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class ULevelAssetListData*                   LevelAssetListData;                                // 0x500(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6114[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class FString>                   LocVOChunkIds;                                     // 0x530(0x50)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6115[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakAssetManager* GetDefaultObj();

};

// 0x2D0 (0x530 - 0x260)
// Class OakGame.OakAssetMappingData
class UOakAssetMappingData : public UAssetMappingData
{
public:
	TMap<uint32, class FString>                  AbilityTreeItemsMap;                               // 0x260(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<uint32, class FString>                  PlayerAbilitiesMap;                                // 0x2B0(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<uint32, class FString>                  PlayerAbilitiesSlotMap;                            // 0x300(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<uint32, class FString>                  AugmentSlotMap;                                    // 0x350(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<uint32, class FString>                  AugmentsMap;                                       // 0x3A0(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<uint32, class FString>                  PlayerAbilityBranchMap;                            // 0x3F0(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<uint32, class FString>                  InventorySlotMap;                                  // 0x440(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<uint32, class FString>                  PlayerClassesMap;                                  // 0x490(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<uint32, class FString>                  PlayerAspectDataMap;                               // 0x4E0(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAssetMappingData* GetDefaultObj();

};

// 0x308 (0x760 - 0x458)
// Class OakGame.OakAttachedDrone
class AOakAttachedDrone : public AActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  Socket;                                            // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  Slot;                                              // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       ExitVehicleBoneAnim;                               // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       EnterVehicleBoneAnim;                              // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           IdleFloatCurve;                                    // 0x480(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FloatCycleTime;                                    // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FloatHeightDelta;                                  // 0x48C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxParam                             IdleMovementTime;                                  // 0x490(0x80)(Edit, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                           MovementCurve;                                     // 0x510(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementTime;                                      // 0x518(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinMovementDistance;                               // 0x51C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxMovementDistance;                               // 0x520(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationSpeed;                                     // 0x524(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           OwnerAccelerationEffect;                           // 0x528(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeathTime;                                         // 0x530(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExitBlendTime;                                     // 0x534(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnterBlendTime;                                    // 0x538(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExplodeOnContact;                                 // 0x53C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6117[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               EllipseOffset;                                     // 0x540(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               EllipseScale;                                      // 0x54C(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActiveWhenVehicleHasDriver;                       // 0x558(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActiveWhenVehicleHasOccupant;                     // 0x559(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActiveWhenVehicleIsDamaged;                       // 0x55A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActiveWhenOwnerThreatened;                        // 0x55B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAlwaysActive;                                     // 0x55C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugDrawEllipse;                                 // 0x55D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6118[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      SphereComponent;                                   // 0x560(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseAudioComponent*                  WwiseAudioComponent;                               // 0x568(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDamageComponent*                   DamageComponent;                                   // 0x570(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTeamComponent*                        TeamComponent;                                     // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6119[0xD8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalOffset;                                       // 0x658(0xC)(Net, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_611A[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               WantedLocation;                                    // 0x690(0xC)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInCombat;                                       // 0x69C(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_611B[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsAtIdleLocation;                                 // 0x6B8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_611C[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentTargetActor;                                // 0x6F0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakVehicle*                           MyVehicle;                                         // 0x6F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MyVehicleMesh;                                     // 0x700(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimInstance*                         MyVehicleAnimInstance;                             // 0x708(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_611D[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakAttachedDrone* GetDefaultObj();

	void SphereComponent_OnOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnStopMoving(class AOakVehicle* Vehicle);
	void OnStartMoving(class AOakVehicle* Vehicle);
	void OnRep_WantedLocation();
	void OnExiting(class AOakVehicle* Vehicle);
	void OnEntering(class AOakVehicle* Vehicle);
	void OnDestroyed(class AOakVehicle* Vehicle);
	class UWwiseAudioComponent* GetWwiseAudioComponent();
};

// 0x100 (0x860 - 0x760)
// Class OakGame.OakAttachedDroneAttacker
class AOakAttachedDroneAttacker : public AOakAttachedDrone
{
public:
	TSubclassOf<class ULightProjectileData>      LightProjectileData;                               // 0x760(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AttackDelay;                                       // 0x768(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BurstCount;                                        // 0x76C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProjectileSpeed;                                   // 0x770(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPrediction;                                     // 0x774(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x778(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_611E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEnvQueryParams                       QueryParams;                                       // 0x788(0xB8)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_611F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakAttachedDroneAttacker* GetDefaultObj();

	void OnFire(class AOakVehicle* Vehicle, class AActor* FiringAtTarget);
};

// 0x30 (0x790 - 0x760)
// Class OakGame.OakAttachedDroneHealer
class AOakAttachedDroneHealer : public AOakAttachedDrone
{
public:
	TSubclassOf<class ULightBeamData>            LightBeamData;                                     // 0x760(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealDelay;                                         // 0x768(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealDuration;                                      // 0x76C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x770(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAttributeInitializer>     HealingValueInitializer;                           // 0x778(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealingValueFactor;                                // 0x780(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6120[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakAttachedDroneHealer* GetDefaultObj();

	void OnStopHeal(class AOakVehicle* Vehicle);
	void OnStartHeal(class AOakVehicle* Vehicle);
};

// 0x240 (0x428 - 0x1E8)
// Class OakGame.OakAudioGlobalsData
class UOakAudioGlobalsData : public UGbxAudioGlobalsData
{
public:
	class UWwiseEvent*                           FakePauseGameAudioEvent;                           // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopAllOnQuitEvent;                                // 0x1F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         TiredCondition;                                    // 0x1F8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakStatusEffectPresentationData*      CryoPresentation;                                  // 0x200(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakElementalEffectData*               DarkMagicElementalEffect;                          // 0x208(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakElementalEffectData*               FireElementalEffect;                               // 0x210(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakElementalEffectData*               PoisonElementalEffect;                             // 0x218(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakElementalEffectData*               ShockElementalEffect;                              // 0x220(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseSwitch*                          IncendiarySwitch;                                  // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseSwitch*                          CorrosiveSwitch;                                   // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseSwitch*                          ShockSwitch;                                       // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseSwitch*                          RadiationSwitch;                                   // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseSwitch*                          CryoSwitch;                                        // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            PlayerLocationWindRTPC;                            // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            FireRateInSeconds;                                 // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            FireRateRatio;                                     // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponChargeRatio;                                 // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponHeatRatio;                                   // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponJankinessRatio;                              // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponIsFiring;                                    // 0x280(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponAmmoCount;                                   // 0x288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponAccuracySpreadInDegrees;                     // 0x290(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponZoom;                                        // 0x298(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponRandomVariation;                             // 0x2A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponTargetLocked;                                // 0x2A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponConditionRatio;                              // 0x2B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WeaponItemScore;                                   // 0x2B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            MeleeWeaponSpeed;                                  // 0x2C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighResolutionFireRate;                            // 0x2C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6123[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWwiseSwitch*>                  SwitchesToAlwaysPrepare;                           // 0x2D0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            GoreAudioScaleRTPC;                                // 0x2E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            PuddleTransitionRTPC;                              // 0x2E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            PuddleScaleRTPC;                                   // 0x2F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            PuddleOpacityRTPC;                                 // 0x2F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VehicleEngineAudioComponentTag;                    // 0x300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDelayBetweenJumpAudioEvents;                    // 0x308(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineAttenuationScalingMinValue;                  // 0x30C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineAttenuationScalingRefRPMRatio;               // 0x310(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6124[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseRtpc*                            VehicleHealthRtpc;                                 // 0x318(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            VehicleIsLocallyControlledRtpc;                    // 0x320(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            EngineRpmRtpc;                                     // 0x328(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            ThrottleRtpc;                                      // 0x330(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            MovementDirectionRtpc;                             // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            HandbrakeRTPC;                                     // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            CameraRotationRTPC;                                // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            VehicleApproachSpeedRtpc;                          // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            TimeSpentInAirRTPC;                                // 0x358(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            ForwardSpeedRtpc;                                  // 0x360(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            HoveringInputRtpc;                                 // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            SuspensionCompressionRtpc;                         // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WheelSuspensionCompressionSpeedRtpc;               // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            EngineGearRtpc;                                    // 0x380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            EngineGearIsShifingUpRtpc;                         // 0x388(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WheelIsAirborneRtpc;                               // 0x390(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WheelSkidAmountRtpc;                               // 0x398(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            BoostPoolRTPC;                                     // 0x3A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            OverspinRTPC;                                      // 0x3A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            WheelSpinRtpc;                                     // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           VehicleAirborneStartEvent;                         // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           VehicleAirborneStopEvent;                          // 0x3C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           VehicleHoverStartEvent;                            // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           VehicleHoverStopEvent;                             // 0x3D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                MusicDebuggerPrimaryTextColor;                     // 0x3D8(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                MusicDebuggerErrorTextColor;                       // 0x3DC(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                MusicDebuggerInfoTextColor;                        // 0x3E0(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                MusicDebuggerActiveThreatTextColor;                // 0x3E4(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                MusicDebuggerStaleThreatTextColor;                 // 0x3E8(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                MusicDebuggerInterestModifierTextColor;            // 0x3EC(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumLootBeamSoundInterval;                      // 0x3F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6125[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseRtpc*                            PlayerVoicePitchRtpc;                              // 0x3F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWwiseMediaAudioSinkProvider> FullScreenMovieAudioSinkProvider;                  // 0x400(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAudioGlobalsData* GetDefaultObj();

};

// 0x0 (0x458 - 0x458)
// Class OakGame.OakAutomationActor
class AOakAutomationActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AOakAutomationActor* GetDefaultObj();

};

// 0x0 (0x178 - 0x178)
// Class OakGame.OakAutomationActorComponent
class UOakAutomationActorComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UOakAutomationActorComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakAutomationHelper
class UOakAutomationHelper : public UObject
{
public:

	static class UClass* StaticClass();
	static class UOakAutomationHelper* GetDefaultObj();

	class FString SpawnSerialNumberFromPool(class UItemPoolListInterface* Pool, int32 GameStage, class AActor* Context);
	class AActor* SpawnInventoryFromSerialNumber(const class FString& SerialNumber, class UObject* Context);
	class FString GetPickupSerialNumber(class AOakInventoryItemPickup* Pickup);
	TArray<class UClass*> GetClassListFromGameConfig(const class FString& Section, const class FString& Key);
	bool DecodeSerialNumber(const class FString& SerialNumber, class UManufacturerData** Manufacturer, class UInventoryBalanceData** BalanceData, class UInventoryData** InvData, int32* GameStage, TArray<class UInventoryPartData*>* Parts, TArray<class UInventoryGenericPartData*>* GenericParts, TArray<class UInventoryCustomizationPartData*>* CustomParts);
};

// 0xD8 (0x108 - 0x30)
// Class OakGame.OakBaseMissionRewardData
class UOakBaseMissionRewardData : public UMissionRewardData
{
public:
	TSoftObjectPtr<class UInventoryCategoryData> CurrencyType;                                      // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          CurrencyReward;                                    // 0x58(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FAdditionalCurrencyRewardInfo> AdditionalCurrencyRewards;                         // 0x90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCreditsRewardFormula;                       // 0xA0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_612A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          ExperienceReward;                                  // 0xA8(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UItemPoolData>          ItemPoolReward;                                    // 0xE0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakBaseMissionRewardData* GetDefaultObj();

};

// 0x8 (0x550 - 0x548)
// Class OakGame.OakBenchmarkGameMode
class AOakBenchmarkGameMode : public AGameMode
{
public:
	uint8                                        Pad_612B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakBenchmarkGameMode* GetDefaultObj();

};

// 0x8 (0x530 - 0x528)
// Class OakGame.OakBenchmarkPlayerState
class AOakBenchmarkPlayerState : public APlayerState
{
public:
	uint8                                        Pad_612C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakBenchmarkPlayerState* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakBlueprintLibrary
class UOakBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakBlueprintLibrary* GetDefaultObj();

	void UnregisterModifier(class UObject* WorldContextObject, const class FString& ModifierName);
	void UnregisterAllModifiers(class UObject* WorldContextObject);
	void UnlockPhotoMode(class AActor* Actor, class FName Reason);
	void UnlockEchoLogForAllPlayers(class UObject* WorldContextObject, class UEchoLogData* EchoLog);
	void StartCameraFadeAuthoritative(class APlayerController* PlayerController, float FromAlpha, float ToAlpha, float Duration, const struct FLinearColor& Color, bool bShouldFadeAudio, bool bHoldWhenFinished);
	class ADroppedInventoryItemPickup* SpawnPickupFromClass(class AActor* ContextActor, TSubclassOf<class ADroppedInventoryItemPickup> PickupClass, class FName SocketName, class ULootSpawnPatternData* SpawnPattern, bool bAttachPickup);
	int32 SpawnLootAsync(class AActor* ContextActor, const struct FSpawnDroppedPickupLootRequest& Request);
	void SpawnLoot(class AActor* ContextActor, class UItemPoolListInterface* ItemPools, class FName SocketName, class ULootSpawnPatternData* SpawnPattern, TArray<class ADroppedInventoryItemPickup*>* AllDroppedPickups, float TimeToSpawnLootOver, bool AttachLoot);
	void SpawnCustomizationPickup(class AActor* ContextActor, class UGbxCustomizationData* Customization, class ULootSpawnPatternData* SpawnPattern, class FName SocketName);
	void SetupActorOutline(class AActor* Actor, const struct FLinearColor& OutlineColor, int32 OutlineThickness, const struct FLinearColor& OwnerOutlineColor);
	void SetTickableWhenPausedOnHierarchy(class AActor* RootActor, bool bTickWhenPaused);
	void SetTerritory(class AActor* AIActor, class AActor* TerritoryActor);
	void SetHandIkToSocket(class AActor* Actor, bool bLeftHandWorld, bool bRightHandWorld, class FName LeftHandSocket, class FName RightHandSocket);
	void SetCoordinatedEffectSwitchState(class AActor* Actor, uint8 State);
	void SetCoordinatedEffectSwitch(class AActor* Actor, class FName State);
	void SetAnimationStyle(class AActor* Actor, uint8 NewStyle);
	void ResourceUnlockWeaponsRestricted(class AActor* Actor, class FName Reason);
	void ResourceUnlockSprinting(class AActor* Actor, class FName Reason);
	void ResourceUnlockPlayerInfiniteAmmo(class AActor* Actor, class FName Reason);
	void ResourceUnlockPlayerGrenadeThrow(class AActor* Actor, class FName Reason);
	void ResourceUnlockMelee(class AActor* Actor, class FName Reason);
	void ResourceUnlockForcedSlide(class AActor* Actor, class FName Reason);
	void ResourceUnlockAllPlayersWeaponsRestricted(class UObject* WorldContextObject, class FName Reason);
	void ResourceUnlockAllPlayersInfiniteAmmo(class UObject* WorldContextObject, class FName Reason);
	void ResourceLockWeaponsRestricted(class AActor* Actor, class FName Reason);
	void ResourceLockSprinting(class AActor* Actor, class FName Reason);
	void ResourceLockPlayerInfiniteAmmo(class AActor* Actor, class FName Reason);
	void ResourceLockPlayerGrenadeThrow(class AActor* Actor, class FName Reason);
	void ResourceLockMelee(class AActor* Actor, class FName Reason);
	void ResourceLockForcedSlide(class AActor* Actor, class FName Reason);
	void ResourceLockAllPlayersWeaponsRestricted(class UObject* WorldContextObject, class FName Reason);
	void ResourceLockAllPlayersInfiniteAmmo(class UObject* WorldContextObject, class FName Reason);
	class UObject* ResolveObjectFromPathString(const class FString& ObjectPathString);
	void ResetTerritory(class AActor* AIActor);
	class AActor* ReRollInventoryGenericParts(class UInventoryBalanceStateComponent* InventoryBalanceState, TArray<class UInventoryGenericPartData*>& PreferredGenericParts);
	void ReplaceDefaultAITree(class AActor* Target, TSubclassOf<class UAIAction> AIAction);
	void RemoveGlobalPlayerDemiGodLock(class UObject* WorldContextObject, class FName Reason);
	void RemoveGlobalInputLock(class UObject* WorldContextObject, enum class EPlayerInputLockType InputLockType, class FName Reason);
	void RegisterModifier(class UObject* WorldContextObject, const class FString& ModifierName, struct FOakModifierData& ModifierData);
	void RegisterCustomModifier(class UObject* WorldContextObject, const class FString& ModifierName, const class FString& TargetResolverName, const class FString& StatusEffectName, float Value);
	TSubclassOf<class UGbxAction> PLC_FindPresentationActionForActionSkill(TSubclassOf<class UOakActionAbility> ActionSkill);
	void PlayEchoDialogForAllPlayers(class UObject* WorldContextObject, class UEchoLogData* EchoLog, class UGbxDialogComponent* PlayOnSpeaker);
	class USkeletalMesh* MergeSkeletalMeshes(class USkeleton* Skeleton, const TArray<class USkeletalMesh*>& SkeletalMeshes, TMap<class FName, float>& MorphTargets);
	void LockPhotoMode(class AActor* Actor, class FName Reason);
	bool IsSpawner(class AActor* Spawner);
	bool IsPointInPlayerViewFrustum(class APlayerController* PlayerController, const struct FVector& Point);
	bool IsHealthy(class AActor* Actor);
	bool IsGameUsingInstancedLoot(class UObject* WorldContextObject);
	bool IsChallengeComplete(class UObject* Target, TSubclassOf<class UChallenge> Challenge);
	bool IsAlive(class AActor* Actor);
	void InstaKillAllPlayerCharacters(class UObject* WorldContextObject, const struct FVector& SourceLocation, float Range);
	void InitializeNonAugmentBoosterPickup(class ADroppedInventoryItemPickup* Pickup, float ShieldChargeModifierValue, class AActor* ManagedActorOwner);
	void GiveRewardItem(class AOakCharacter_Player* OakPlayer, class AActor* ContextActor, class UItemPoolData* ItemPool, TSubclassOf<class UAttributeInitializer> LootGameStageVarianceFormula);
	class UZoneMapData* GetZoneMapForLevel(const class FString& LevelName, class UObject* WorldContextObject);
	class AOakTravelStationTracker* GetTravelStationTracker(class UObject* WorldContextObject);
	int32 GetRegionGameStageOffset(class UObject* WorldContextObject, class URegionData* REGION);
	class AOakCharacter_Player* GetRandomPlayerCharacter(class UObject* WorldContextObject);
	bool GetPlayerShieldInfo(class APlayerController* Controller, struct FHealthType* OutHealthType);
	void GetKnownZoneMapDisplayList(TArray<struct FZoneMapDisplayInfo>* DisplayList, class UObject* WorldContextObject);
	bool GetEffectiveLevelDifference(class AActor* ActorA, class AActor* ActorB, bool bIncludeLevelSync, int32* OutLevelDifference);
	class UOakDialogBlackboard* GetDialogBlackboard(class UObject* WorldContextObject);
	uint8 GetCoordinatedEffectSwitchState(class AActor* Actor);
	class UOakChallenge* GetChallengeDefaultObject(TSubclassOf<class UOakChallenge> Challenge);
	enum class ETeamAttitude GetAttitudeTowardPlayer(class AActor* SourceActor);
	enum class ETeamAttitude GetAttitudeTowardActor(class AActor* SourceActor, class AActor* TargetActor);
	class ASpawner* GetAssociatedSpawner(class AActor* Target);
	uint8 GetAnimationStyle(class AActor* Actor);
	void GetAllPlayerPawns(class UObject* WorldContextObject, TArray<class APawn*>* Pawns);
	void GetAllPlayerCharacters(class UObject* WorldContextObject, bool bLocalOnly, TArray<class AOakCharacter_Player*>* Characters);
	void GetAllAttachedActors(class AActor* RootActor, TArray<class AActor*>* Children);
	struct FProjectedMeshResults GenerateProjectedMesh(class AActor* Actor, const struct FTransform& ProjectionTransform, const struct FTransform& ComponentTransform, struct FProjectedMeshOptions& Options);
	class UOakNavComponent* FindOakNavComponent(class AActor* Actor);
	class AOakCharacter_Player* FindNearestPlayerCharacters(class UObject* WorldContextObject, struct FVector& Location);
	class AActor* FindNearestActorSpawnedBy(struct FVector& SourceLocation, class AActor* Spawner);
	class UObject* FindLevelInterface(class UObject* WorldContextObject, TSubclassOf<class IInterface> Interface);
	class AOakCharacter_Player* FindFarthestPlayerCharacters(class UObject* WorldContextObject, struct FVector& Location);
	class UOakPlayerAbilityTreeBranchData* FindAbilityTreeBranchForPlayerClass(enum class EOakPlayerClass Class);
	void EnterVehicle(class AActor* Actor, class AActor* Vehicle, int32 SeatIndex, bool bInstant);
	void DetachProjectedShield(class USceneComponent* Component);
	void DestroyProjectedShield(class USceneComponent* Component);
	void DeactivateAllModifiers(class UObject* WorldContextObject);
	class UViewAttachmentComponent* CreateViewAttachmentComponent(class AActor* Owner, bool bUpdateLocation, bool bUpdateRotation, float PitchScale);
	struct FOakProjectedShield CreateProjectedShield(class AActor* Owner, class USceneComponent* OwnerComponent, class UStaticMesh* Mesh, class FName CollisionProfile, const struct FTransform& MeshRelativeTransform, const struct FTransform& ParticleSystemTransform);
	void CancelCameraFadeAuthoritative(class APlayerController* PlayerController);
	void CancelAsyncLootSpawnRequest(class UObject* WorldContextObject, int32 RequestID);
	bool BuildPathTo(TArray<struct FVector>* OutPoints, class AActor* Actor, struct FVector& Destination, float SearchRadius, float AgentRadiusOverride);
	bool BuildPath(TArray<struct FVector>* OutPoints, class AActor* Actor, struct FVector& Start, struct FVector& Destination, float SearchRadius, float AgentRadiusOverride);
	void BroadcastKilledEnemyFriendEvent(class AActor* KilledActor, enum class EKilledEnemyFriendEventType KilledEnemyFriendEventType, class UGameStatData* KillStat, int32 KillCount);
	void AwardKillExperienceToParty(class AActor* ContextActor, class AOakPlayerController* OptionalKiller);
	void AttachProjectedShield(class USceneComponent* Component, class AActor* Owner, class FName AttachSocket);
	bool AreAllPlayerInRangeLookingAtActor(class AActor* LookAtTarget, float MaxRange, float ConeAngle);
	void AddGlobalPlayerDemiGodLock(class UObject* WorldContextObject, class FName Reason);
	void AddGlobalInputLock(class UObject* WorldContextObject, enum class EPlayerInputLockType InputLockType, class FName Reason);
	void ActivateAllModifiers(class UObject* WorldContextObject);
};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakBodyMeshLinkedParameterData
class UOakBodyMeshLinkedParameterData : public UGbxDataAsset
{
public:
	TArray<struct FBodyMeshLinkedParameters>     OwnerClassesToParameters;                          // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakBodyMeshLinkedParameterData* GetDefaultObj();

};

// 0x618 (0x6D0 - 0xB8)
// Class OakGame.OakCameraInputs
class UOakCameraInputs : public UCameraInputs
{
public:
	class AWeapon*                               Weapon;                                            // 0xB8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetAutoLook;                                    // 0xC0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetAutoLookWaitTimer;                           // 0xC1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6173[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  FocusOverridePPSettings;                           // 0xD0(0x600)(Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCameraInputs* GetDefaultObj();

};

// 0x0 (0x720 - 0x720)
// Class OakGame.OakCapsuleComponent
class UOakCapsuleComponent : public UCapsuleComponent
{
public:

	static class UClass* StaticClass();
	static class UOakCapsuleComponent* GetDefaultObj();

};

// 0x120 (0x238 - 0x118)
// Class OakGame.OakChallenge
class UOakChallenge : public UChallenge
{
public:
	TSoftObjectPtr<class URegionData>            REGION;                                            // 0x118(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          ExperienceReward;                                  // 0x140(0x38)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          CashReward;                                        // 0x178(0x38)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          EridiumReward;                                     // 0x1B0(0x38)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UItemPoolData*                         RewardItemPool;                                    // 0x1E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOakCustomizationData*>         RewardCustomizations;                              // 0x1F0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FOakChallengeTierRewards>      TierRewards;                                       // 0x200(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UActivityFeedReward*                   ActivityFeedReward;                                // 0x210(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrewChallenge;                                  // 0x218(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bManuallyGiveTierRewards;                          // 0x219(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6174[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakCustomizationData*                 CustomizationToEnsureOnLoad;                       // 0x220(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerClassIdentifier*                AssociatedCharacterClass;                          // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsGoldenDiceChallenge;                            // 0x230(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6176[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakChallenge* GetDefaultObj();

	int32 GetChallengeLevel();
};

// 0x48 (0x98 - 0x50)
// Class OakGame.OakChallengeCategoryData
class UOakChallengeCategoryData : public UChallengeCategoryData
{
public:
	class UInWorldIconData*                      LevelActorIcon;                                    // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      CompleteLevelActorIcon;                            // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            LevelActorMapIconActive;                           // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            LevelActorMapIconComplete;                         // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDontUseScaleformIcon;                             // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_617A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ScaleformMapIconActive;                            // 0x78(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ScaleformMapIconComplete;                          // 0x88(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakChallengeCategoryData* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class OakGame.OakChallengeList
class UOakChallengeList : public UChallengeList
{
public:

	static class UClass* StaticClass();
	static class UOakChallengeList* GetDefaultObj();

};

// 0x68 (0x668 - 0x600)
// Class OakGame.OakChallengeManager
class AOakChallengeManager : public AChallengeManager
{
public:
	TArray<class UGFxInWorldIconContainer*>      IconContainers;                                    // 0x600(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FChallengeInWorldIcon>         ChallengeInWorldIcons;                             // 0x610(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FChallengeMinimapIcon>         ChallengeMinimapIcons;                             // 0x620(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FChallengeInWorldIconQueueEntry> QueuedInWorldIcons;                                // 0x630(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FDaffodilChallengeBonusCompletionData> ChallengeBonusCompletionList;                      // 0x640(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_617B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakChallengeManager* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.OakCustomChallengePersistentState
class UOakCustomChallengePersistentState : public UCustomChallengePersistentState
{
public:
	TArray<bool>                                 RewardTiersClaimed;                                // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCustomChallengePersistentState* GetDefaultObj();

};

// 0xE0 (0x2E8 - 0x208)
// Class OakGame.OakChallengesComponent
class UOakChallengesComponent : public UChallengesComponent
{
public:
	TArray<class UClass*>                        RegisteredDamageChallengeClasses;                  // 0x208(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDamageChallengeData>          QueuedDamageChallengeData;                         // 0x218(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                        RegisteredKillChallengeClasses;                    // 0x228(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6181[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UChallengeCategoryData*, int32>   ChallengeCompletionDuringCurrentLevel;             // 0x298(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakChallengesComponent* GetDefaultObj();

	void ServerRequestManualClaimRewards(class UOakChallenge* Challenge, int32 RequestedTier);
	void OnChallengeUpdatedInternal(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass, int32 NewValue, bool bDisplayNotification, bool bCompleted);
	void OnChallengeCompletedInternal(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void DoAsyncWorkComputingCompletionPercentages(bool bForceToFinishNow);
	void ClientNotifyManualClaimRewardsComplete(class UOakChallenge* Challenge, int32 ClaimedTier);
};

// 0x88 (0x24E0 - 0x2458)
// Class OakGame.OakCharacter_CameraMan
class AOakCharacter_CameraMan : public AOakCharacter
{
public:
	float                                        BaseTurnRateMultiplier;                            // 0x2458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseLookUpRateMultiplier;                          // 0x245C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseRollRateMultiplier;                            // 0x2460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveRateMultiplier;                                // 0x2464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetachedMoveRateMultiplier;                        // 0x2468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CraneRateMultiplier;                               // 0x246C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DegreesToMoveMultiplier;                           // 0x2470(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddDefaultMovementBindings;                       // 0x2474(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6182[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPawnMovementComponent*                MovementComponent;                                 // 0x2478(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachedRadius;                                    // 0x2480(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6184[0x5C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakCharacter_CameraMan* GetDefaultObj();

};

// 0x98 (0x24F0 - 0x2458)
// Class OakGame.OakCharacter_Overworld
class AOakCharacter_Overworld : public AOakCharacter
{
public:
	class UOakCustomizationComponent*            CustomizationComponent;                            // 0x2458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxSkeletalMeshComponent*             HeadMesh;                                          // 0x2460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  OwningPlayer;                                      // 0x2468(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6189[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsVisible;                                        // 0x2471(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_618A[0x26];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        TouchingNeutralAreas;                              // 0x2498(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        TouchingSafeAreas;                                 // 0x24A8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class ABodyArmor*                            EquippedArmorTemplate;                             // 0x24B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABodyArmor*                            EquippedArmorInstance;                             // 0x24C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AShield*                               EquippedShieldTemplate;                            // 0x24C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AShield*                               EquippedShieldInstance;                            // 0x24D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CustomStencilValue;                                // 0x24D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          HighlightColor;                                    // 0x24DC(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_618B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakCharacter_Overworld* GetDefaultObj();

	void PlayEquippedEmote(uint32 Slot);
	void OnRespawned(const struct FVector& DeathLocation, const struct FVector& RespawnLocation);
	void OnRep_OwningPlayer();
	void OnRep_IsVisible();
	void OnEquippedShieldChanged();
	void OnEquippedArmorChanged(class ABodyArmor* NewBodyArmor);
	void OnEnterRoad(bool bEnterRoad);
	void OnEnterNeutralArea(bool bEnterRoad);
	void MulticastEnterRoad(bool bEnterRoad);
	void MulticastEnterNeutralArea(bool bEnterRoad);
};

// 0x1198 (0x3670 - 0x24D8)
// Class OakGame.OakCharacter_Player
class AOakCharacter_Player : public AOakCharacter_Default
{
public:
	class UParticleSystem*                       ConnectEffectTemplate;                             // 0x24D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ConnectEffectBoneName;                             // 0x24E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DisconnectEffectTemplate;                          // 0x24E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisconnectEffectBoneName;                          // 0x24F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_61C0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  DuelInitatedEvent;                                 // 0x2500(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  DuelTimedOutEvent;                                 // 0x2510(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  DuelMeleeInstigatedEvent;                          // 0x2520(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  AcceptedCompetitorDuelEvent;                       // 0x2530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  UnacceptedCompetitorDuelEvent;                     // 0x2540(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CompetitorAcceptedDuelEvent;                       // 0x2550(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CompetitorUnacceptedDuelEvent;                     // 0x2560(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  StartedDuelSetupEvent;                             // 0x2570(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  StartedDuelEvent;                                  // 0x2580(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  LostDuelEvent;                                     // 0x2590(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  WonDuelEvent;                                      // 0x25A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TimeElapsedDuelEvent;                              // 0x25B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  DuelCanceledEvent;                                 // 0x25C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellCastDelegate;                               // 0x25D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellStartFireDelegate;                          // 0x25E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellStartFailedDelegate;                        // 0x25F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class APhotoModeController*                  PhotoModeController;                               // 0x2600(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxPhotoModeMenu*                     PhotoModeView;                                     // 0x2608(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_61C1[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AdditionalInput;                                   // 0x26A8(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdditionalRoll;                                    // 0x26B4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_61C2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsRaidSpectating;                                 // 0x26D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bHasMenuOpen_Replicated : 1;                       // Mask: 0x1, PropSize: 0x10x26D1(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_17F : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_61C3[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnVaultRewardReceived;                             // 0x26F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_61C4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  PlayerCrouchStart;                                 // 0x2708(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  PlayerCrouchEnd;                                   // 0x2718(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  GrenadeTossed;                                     // 0x2728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAlliedPlayerTookDamage;                          // 0x2738(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FResourceLock                         SpellsLock_Replicated;                             // 0x2748(0x98)(Net, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61C5[0x130];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  GrenadeThrowFailed;                                // 0x2910(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bInterruptFriendlyTargeting;                       // 0x2920(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsWeaponLowered;                                  // 0x2921(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_61C6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FriendlyTargetRange;                               // 0x2924(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WeaponLowerDelay;                                  // 0x2928(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WeaponRaiseDelay;                                  // 0x292C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                FriendlyTarget;                                    // 0x2930(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_61C8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LadderCameraMode;                                  // 0x2940(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LadderCameraBlendOutTime;                          // 0x2948(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_61C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFeedbackData*                         LadderSlidingFeedback;                             // 0x2950(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFeedbackData*                         LadderSlideLandingFeedback;                        // 0x2958(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           LadderSlideAudioLoop;                              // 0x2960(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GrenadeThrowCooldown;                              // 0x2968(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_61CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                DefaultSpellAction;                                // 0x2970(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BasicSpellCooldown;                                // 0x2978(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ComplexSpellCooldown;                              // 0x297C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastSpellCastTime;                                 // 0x2980(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastSecondarySpellCastTime;                        // 0x2984(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameResourceData*                     GrenadeResource;                                   // 0x2988(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    Att_Player_CastSpeed;                              // 0x2990(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MissingHealthDamageMultiplier;                     // 0x299C(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    PerCryoMissingPercentDamageMultiplier;             // 0x29A8(0xC)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_61CC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakCustomizationData*>         EquippedEmotes;                                    // 0x29B8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UUIStatData*                           PlayerStat_1_UIStat;                               // 0x29C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUIStatData*>                   PlayerStat_1_PopoutUIStats;                        // 0x29D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UUIStatData*                           PlayerStat_2_UIStat;                               // 0x29E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUIStatData*>                   PlayerStat_2_PopoutUIStats;                        // 0x29E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UOakCustomizationData>> DefaultEmotes;                                     // 0x29F8(0x10)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FOakSDUContainer                      PlayerSDUs;                                        // 0x2A08(0xF8)(Net, Transient, NativeAccessSpecifierPublic)
	class UGbxCustomizationTypeData*             HeadCustomizationType;                             // 0x2B00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCustomizationTypeData*             BodyCustomizationType;                             // 0x2B08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCustomizationTypeData*             SkinCustomizationType;                             // 0x2B10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakCustomizationComponent*            CustomizationComponent;                            // 0x2B18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CharacterIconFrameName;                            // 0x2B20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_61CD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UGFxSkillScreenTree>     SkillTreeSubMenuClass;                             // 0x2B40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlayerHeroPointsData                 HeroPoints;                                        // 0x2B68(0x80)(Edit, Net, EditConst, RepNotify, NativeAccessSpecifierPublic)
	TArray<struct FHeroPointsScheduleEntry>      ExtraHeroPointsSchedule;                           // 0x2BE8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTownHubTravelInfo                    PreTravelInfo;                                     // 0x2BF8(0x48)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UPlayerBalanceStateComponent*          PlayerBalanceComponent;                            // 0x2C40(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHavokNavObstacleComponent*            HavokNavObstacleComponent;                         // 0x2C48(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityManagerComponent*     PlayerAbilityManagerComponent;                     // 0x2C50(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCapsuleComponent*                     FFYLCapsuleComponent;                              // 0x2C58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                    AmmoRegenRate;                                     // 0x2C60(0xC)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FResourceLock                         GrenadeFFYLRestrictionLock;                        // 0x2C70(0x98)(Net, Transient, NativeAccessSpecifierPrivate)
	uint8                                        ClientWeaponsRestrictedRestoreSlots;               // 0x2D08(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlayerPainSoundData>          PlayerPainSounds;                                  // 0x2D10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        SprintExhaustionStartThreshold;                    // 0x2D20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SprintExhaustionStopThreshold;                     // 0x2D24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOakHUDSkillIconWidget>    HUDSkillIconWidgetClass;                           // 0x2D28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTired;                                            // 0x2D30(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61D0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UOakCustomizationData>  DefaultHeadCustomization;                          // 0x2D38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakCustomizationData>  DefaultBodyCustomization;                          // 0x2D60(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakCustomizationData>  DefaultSkinCustomization;                          // 0x2D88(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61D1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPetOwnerComponent*                    PetOwnerComponent;                                 // 0x2DC0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAspectData*                  PlayerAspectData;                                  // 0x2DC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61D2[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUsesSecondarySpellMod;                            // 0x2DF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUsesSecondaryActionSkill;                         // 0x2DF9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUsesActionSkillHoldOverrideAction;                // 0x2DFA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61D3[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  OakPlayerController;                               // 0x2E00(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakHUDSkillIconWidget*                HUDSkillIconWidget;                                // 0x2E08(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61D4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSpellFiredDelegate;                              // 0x2E18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpellStopFiredDelegate;                          // 0x2E28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     GrenadeAmmoAttribute;                              // 0x2E38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61D5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpellCastSocketName;                               // 0x2E58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanWeaponZoomWhileInjured;                        // 0x2E60(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_61D6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                TeleportAction;                                    // 0x2E68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_61D7[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInventorySlotContainer               EquippedInventoryForSaveGame;                      // 0x2EA8(0xE8)(Net, Transient, NativeAccessSpecifierPublic)
	struct FWeaponSlotContainer                  ActiveWeaponsForSaveGame;                          // 0x2F90(0x650)(Net, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLuckChanged;                                     // 0x35E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FLuckAssociation>              Luck;                                              // 0x35F0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61D8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UUIStatData*                           Luck_UIStat;                                       // 0x3618(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        VoicePitch;                                        // 0x3620(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LaunchDiminishMultiplier;                          // 0x3624(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LaunchDiminishClearTime;                           // 0x3628(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LaunchDiminishAmount;                              // 0x362C(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61D9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastKillTime;                                      // 0x3638(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MultikillStreakCount;                              // 0x363C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillStreakScore;                                   // 0x3640(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    Att_KnightOfTheClaw_DragonRoar;                    // 0x3644(0xC)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            SlamDamageType;                                    // 0x3650(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTexture*>                      ForcedMipLevelTextures;                            // 0x3658(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61DA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakCharacter_Player* GetDefaultObj();

	void WonDuelDelegate__DelegateSignature(enum class EDuelClassification Classification);
	void UpdateHealthHardwareLightingState();
	void UpdateFriendStatusSystemOfInventoryChange(class AActor* InInventory, class UInventorySlotData* SlotData);
	void UnlockPlayerFFYLGrenadeRestriction(class FName Reason);
	void TryStopSpellFromAnim();
	bool TryStopSpell();
	void TryStopSecondarySpellFromAnim();
	bool TryStopSecondarySpell();
	bool TryStartSpell();
	bool TryStartSecondarySpell();
	void TriggerSecondWindHardwareLightingEvent();
	void TickFriendlyTarget(float DeltaSeconds);
	void StopCastingSpell();
	void StopCastingSecondarySpell();
	bool StartSpellAnimation(TSubclassOf<class UGbxAction> GrenadeThrowAction, class AGrenadeMod* SpellMod);
	void StartCastingSpell();
	void StartCastingSecondarySpell();
	class AOakProjectile* SpawnAndThrowGrenade();
	class AOakProjectile* SpawnAmmoOptionalGrenadeFromSource(class AActor* SourceActor, int32 UseAmmo, class FName ThrowSocketName, TSubclassOf<class AOakProjectile> GrenadeOverride, class AGrenadeMod* GrenadeMod);
	class AOakProjectile* SpawnAmmoOptionalGrenade(int32 UseAmmo);
	void SimpleDuelDelegate__DelegateSignature();
	void ShowDisconnectEffect();
	void ShowConnectEffect();
	void SetPlayerAspectData(class UOakPlayerAspectData* NewAspectData);
	void SetFriendlyTarget(class AActor* NewFriendly);
	void ServerTryInitiateDuel();
	void ServerTryExitPhotoMode();
	void ServerTryEnterPhotoMode();
	void ServerSetHasMenuOpen(bool bNewValue);
	void ServerSetEquippedEmote(uint32 Slot, class UOakCustomizationData* EmoteData);
	void ServerPlayTeleportEffectsOnly();
	void ServerNotifyPhotoModeFailed();
	void ServerAddHeroPoints(enum class EPlayerHeroPoint HeroPointType, int32 AddAmount);
	void Server_TryStopSpellFromAnim();
	void Server_TryStopSpell();
	void Server_TryStopSecondarySpellFromAnim();
	void Server_TryStopSecondarySpell();
	void Server_TryStartSpell();
	void Server_TryStartSecondarySpell();
	void ResumeFriendlyTargeting();
	void ResetHeroPoints();
	void PurchaseRespec(bool bAbilities, bool bHeroPoints, class UGbxInventoryCategoryData* Currency, int32 Cost);
	void PurchaseHeroPointRespec();
	void PrintHeroPointInfo();
	void PlayEquippedEmote(uint32 Slot);
	void OnTakeShieldDamage(int32 Index, struct FHealthType& HealthType, float Damage, struct FSecondaryHealthDamageEventDetails& Details);
	void OnStartDead();
	void OnSpellStopFired(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellStartFire(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellFired(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellCastStart(class AGrenadeMod* SpellMod);
	void OnSDUListUpdated(class UOakSDUData* InSDUData, int32 InSDULevel);
	void OnRep_HeroPoints();
	void OnMaxHealthChanged(float OldValue, float NewValue);
	void OnLuckCategoryValueChanged(float OldValue, float NewValue);
	void OnLevelUp(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnKilledHostile();
	void OnInventoryItemQuantityUpdated(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void OnCinematicStopped_RetryTeleportEffects();
	void NotifyPickedUpEchoDeviceLog(class AActor* EchoActor);
	void NotifyHitFriendly(struct FHitFriendlyEventDetails& Details);
	void Multicast_StopCastingSpell();
	void Multicast_StopCastingSecondarySpell();
	void Multicast_StartCastingSpell();
	void Multicast_StartCastingSecondarySpell();
	void LostDuelDelegate__DelegateSignature(enum class EDuelLoseReason LoseReason, enum class EDuelClassification Classification);
	void LockPlayerFFYLGrenadeRestriction(class FName Reason);
	bool IsPlayingSpellAction(TSubclassOf<class UGbxAction> GrenadeThrowAction);
	bool IsCastingSpell(bool bCheckPrimary, bool bCheckSecondary);
	void InterruptFriendlyTargeting();
	void InterruptAndPlayNewEmote(class UOakCustomizationData* EmoteData);
	bool HasProjectedShield();
	bool HasEnoughAmmoToThrowGrenade(int32 AmmoToConsume, enum class ESpellSlot CheckSpell);
	int32 GetTotalHeroPointAllocationAmount();
	float GetSpellCastSpeed();
	class UOakActionAbility* GetSecondaryActionAbility();
	int32 GetSDULevel(class UOakSDUData* InSDUData);
	int32 GetRemainingAllocatableHeroPoints();
	class UOakActionAbility* GetPrimaryActionAbility();
	class UOakPlayerAspectData* GetPlayerAspectData();
	void GetPets(TArray<class AActor*>* OutPets);
	class UPetOwnerComponent* GetPetOwnerComponent();
	int32 GetNumHeroPointsAllocated();
	bool GetNextSDULevelInfo(class UOakSDUData* InSDUData, int32* NextSDULevel, int32* OutSDUPrice, class UInventoryCategoryData** OutPriceCurrenty, float* ModifyAmount);
	int32 GetHeroPointAllocationLimit();
	void ExecuteTeleport();
	void DuelInstigatorDelegate__DelegateSignature(class AOakCharacter_Player* Other);
	void ClientNotifyVaultRewardGiven(enum class EVaultRewardType VaultRewardType);
	void ClientExitPhotoMode();
	void ClientEnterPhotoMode();
	bool CanStartThrowingGrenade();
	bool CanCurrentlyThrowGrenades();
	void AnimNotify_SpawnGrenade();
	void AddSDU(class UOakSDUData* InSDUData);
	class UOakHUDSkillIconWidget* AddHUDSkillIconWidget();
	void AddHeroPoints(enum class EPlayerHeroPoint HeroPointType, int32 AddAmount);
};

// 0x1B8 (0x2610 - 0x2458)
// Class OakGame.OakCharacter_StandIn
class AOakCharacter_StandIn : public AOakCharacter
{
public:
	class UOakCustomizationComponent*            CustomizationComponent;                            // 0x2458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxSkeletalMeshComponent*             HeadMesh;                                          // 0x2460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStandInCharacterComponent*            CharacterComponent;                                // 0x2468(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBodyWeaponHoldManagerComponent*       WeaponHoldComponent;                               // 0x2470(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakCustomizationData>  DefaultHeadCustomization;                          // 0x2478(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakCustomizationData>  DefaultBodyCustomization;                          // 0x24A0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryBalanceData*                 StandInWeaponBalanceData;                          // 0x24C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  OverrideWeaponSocketName;                          // 0x24D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakCustomizationData*                 EquippedEmote;                                     // 0x24D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_180 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsHeroStatue : 1;                                 // Mask: 0x2, PropSize: 0x10x24E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_181 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_61E0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerStandInInitData                InitData;                                          // 0x24E8(0x30)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class AWeapon*                               EquippedWeaponTemplate;                            // 0x2518(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61E2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AWeapon*                               Current_EquippedWeaponInstance;                    // 0x2530(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AWeapon*                               Pending_PutDownWeaponInstance;                     // 0x2538(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AWeapon*                               Pending_EquipWeaponInstance;                       // 0x2540(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABodyArmor*                            EquippedArmorInstance;                             // 0x2548(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FInventoryBalanceStateInitializationData EquippedArmorTemplate;                             // 0x2550(0x68)(Transient, NativeAccessSpecifierPrivate)
	class AMeleeWeapon*                          EquippedMeleeWeaponInstance;                       // 0x25B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMeleeWeapon*                          EquippedMeleeWeaponTemplate;                       // 0x25C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AShield*                               EquippedShieldInstance;                            // 0x25C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AShield*                               EquippedShieldTemplate;                            // 0x25D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerBanner*                         PlayerBanner;                                      // 0x25D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  OwningPlayer;                                      // 0x25E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FStandInAuxiliaryState_Character> AuxiliaryActors;                                   // 0x25E8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FStandInAuxiliaryState_Character> CustomAuxiliaryActors;                             // 0x25F8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                         bShouldSpawnFlagOnEmote;                           // 0x2608(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInClassSelection;                               // 0x2609(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsWearingBigHat;                                  // 0x260A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_61E7[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakCharacter_StandIn* GetDefaultObj();

	void OnStandInConfigurationChanged(class FName NewConfig);
	void OnPlayerCharacterWeaponChanged(class AWeapon* NewWeapon, class AWeapon* PrevWeapon);
	void OnPlayerCharacterUnequippedItem(class AActor* InEquippedInventory, class UInventorySlotData* SlotData);
	void OnPlayerCharacterSlotAbilityChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnPlayerCharacterEquippedItem(class AActor* InEquippedInventory, class UInventorySlotData* SlotData);
	void OnPlayerCharacterAbilityBranchChanged();
	void OnCustomizationApplied(class UGbxCustomizationData* Customization);
};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakCharacterAbilityListData
class UOakCharacterAbilityListData : public UGbxDataAsset
{
public:
	TArray<TSubclassOf<class UOakAbility>>       Abilities;                                         // 0x30(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakCharacterAbilityListData* GetDefaultObj();

};

// 0x20 (0x268 - 0x248)
// Class OakGame.OakCharacterAbilityManagerComponent
class UOakCharacterAbilityManagerComponent : public UGbxAbilityManagerComponent
{
public:
	class UOakCharacterAbilityListData*          DefaultAbilities;                                  // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakInputAbilityListData*              OakInputAbilities;                                 // 0x250(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UOakAbility>>       AdditionalDefaultAbilities;                        // 0x258(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakCharacterAbilityManagerComponent* GetDefaultObj();

};

// 0x60 (0x170 - 0x110)
// Class OakGame.OakInputAbility
class UOakInputAbility : public UOakAbility
{
public:
	uint8                                        Pad_61E8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAvailableOnLadders;                               // 0x118(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAvailableWhileMantling;                           // 0x119(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAvailableWhenReviving;                            // 0x11A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPauseWhenInputLocked;                             // 0x11B(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlayerInputLockType              RespectGlobalLockType;                             // 0x11C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_61E9[0x53];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakInputAbility* GetDefaultObj();

};

// 0x18 (0x188 - 0x170)
// Class OakGame.OakCharacterInputAbility
class UOakCharacterInputAbility : public UOakInputAbility
{
public:
	class AOakCharacter*                         OakCharacter;                                      // 0x170(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakProfile*                           OakProfile;                                        // 0x178(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakPlayerController*                  OakPlayerController;                               // 0x180(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakCharacterInputAbility* GetDefaultObj();

	void CancelCrouchToggle();
};

// 0x718 (0x3050 - 0x2938)
// Class OakGame.OakCharacterMovementComponent
class UOakCharacterMovementComponent : public UGbxNavCharacterMovementComponent
{
public:
	float                                        PushAwayFromPlayersMaxAccelBoost;                  // 0x2938(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushAwayFromPlayersRadiusThreshold;                // 0x293C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInheritedSpeedFromSimulatingPhysicsMovementBase; // 0x2940(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseJumpGoals;                                     // 0x2944(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_61FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SprintingJumpMaxSpeedPct;                          // 0x2948(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintingJumpHorizontalSpeedScale;                 // 0x294C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterJumpGoalSetting             JumpGoal_Default;                                  // 0x2950(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterJumpGoalSetting             JumpGoal_Sprinting;                                // 0x295C(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        JumpHorizontalSpeedScaleWhenNoAcceleration;        // 0x2968(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallDelayTime;                                     // 0x296C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallDelayGravityScale;                             // 0x2970(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpQueueTime;                                     // 0x2974(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_61FE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    MaxSprintSpeed;                                    // 0x297C(0xC)(Edit, BlueprintVisible, Net, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    MaxInjuredSprintSpeed;                             // 0x2988(0xC)(Edit, BlueprintVisible, Net, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    MaxWalkSpeedInjured;                               // 0x2994(0xC)(Edit, BlueprintVisible, Net, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    MaxWalkSpeedInjuredBeingRevived;                   // 0x29A0(0xC)(Edit, BlueprintVisible, Net, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSprintAngle;                                    // 0x29AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintAnalogInputThreshold;                        // 0x29B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreAnalogInputWhenSprinting : 1;               // Mask: 0x1, PropSize: 0x10x29B4(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMantlingCancelsSprint : 1;                        // Mask: 0x2, PropSize: 0x10x29B4(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_182 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6201[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxLadderSlideDownSpeed;                           // 0x29B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LadderSlideAcceleration;                           // 0x29BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LadderSlideBrakingDeceleration;                    // 0x29C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6202[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                LadderSlideLandingAnimation;                       // 0x29C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           CryoPenaltyCurve;                                  // 0x29D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    CryoPenaltyResistance;                             // 0x29D8(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6203[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterSlidingData*                 SlidingData;                                       // 0x29E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingImpactTraceDelay;                           // 0x29F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SlidingSlopeAdaptation;                            // 0x29F4(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImpactData*                           WheelRollingImpactData;                            // 0x2A00(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           WheelRollingAudioStart;                            // 0x2A08(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           WheelRollingAudioStop;                             // 0x2A10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StartedRollingSound;                               // 0x2A18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StoppedRollingSound;                               // 0x2A20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WheelBone;                                         // 0x2A28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RollingSpeedParticleParameterName;                 // 0x2A30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterGroundSlamData*              GroundSlamData;                                    // 0x2A38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    GroundSlamHeightScalar;                            // 0x2A40(0xC)(Net, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6204[0x134];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bWantsToSprint : 1;                                // Mask: 0x1, PropSize: 0x10x2B80(0x1)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bWantsToStartSprinting : 1;                        // Mask: 0x2, PropSize: 0x10x2B80(0x1)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSprinting : 1;                                  // Mask: 0x4, PropSize: 0x10x2B80(0x1)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bWantsToSlide : 1;                                 // Mask: 0x8, PropSize: 0x10x2B80(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bWantsToLadderSlide : 1;                           // Mask: 0x10, PropSize: 0x10x2B80(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSlidingDownLadder : 1;                          // Mask: 0x20, PropSize: 0x10x2B80(0x1)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_183 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6205[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GroundSlamGradeIndex;                              // 0x2B84(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6206[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxSpeedScaleToUseBrakingBoost;                    // 0x2B90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingFrictionBoostWhenExceedingMaxSpeed;         // 0x2B94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingDecelerationWalkingBoostWhenExceedingMaxSpeed; // 0x2B98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingDecelerationFallingBoostWhenExceedingMaxSpeed; // 0x2B9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnStartSprinting;                                  // 0x2BA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndSprinting;                                    // 0x2BB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartSliding;                                    // 0x2BC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStopSliding;                                     // 0x2BD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartGroundSlam;                                 // 0x2BE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStopGroundSlam;                                  // 0x2BF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6208[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakLadderInteractData*                OakLadderInteractData;                             // 0x2C30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter*                         OakCharacterOwner;                                 // 0x2C38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoverUserComponent*                   CoverUserComponent;                                // 0x2C40(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakStatusEffectManagerComponent*      StatusEffectComponent;                             // 0x2C48(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFightForYourLifeComponent*            FFYLComponent;                                     // 0x2C50(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakCharacterAnimInstance*             OakAnimInstance;                                   // 0x2C58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDeceleratingAfterLadderSlide;                     // 0x2C60(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6209[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpGoalGravityScale;                              // 0x2C64(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EJumpType                         CurrentJumpType;                                   // 0x2C68(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_620A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPendingSlideJump;                                 // 0x2C6A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_620B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakCharacter*>                 ActorsToPushAwayFrom;                              // 0x2C70(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_620C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRepInDelayedFall;                                 // 0x2C88(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_620D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlidingImpactState                   SlidingFootImpactState;                            // 0x2C90(0xE8)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FSlidingImpactState                   SlidingBaseImpactState;                            // 0x2D78(0xE8)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FSlidingImpactState                   RollingImpactState;                                // 0x2E60(0xE8)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_620E[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ACharacterForcedSlidingVolume*> OverlappingSlidingVolumes;                         // 0x2F90(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class ACharacterForcedSlidingVolume*         CurrentSlidingVolume;                              // 0x2FA0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_620F[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   OldMovementBase;                                   // 0x3040(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6210[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakCharacterMovementComponent* GetDefaultObj();

	bool TeleportPlayer(struct FVector& TargetLocation, class UOakPlayerTeleportData* TeleportData);
	void SetWantsToLadderSlide(bool bNewWantsToLadderSlide);
	void ServerTeleportPlayer(const struct FVector& TeleportLocation, float ClientTimeStamp, uint32 PlayerTeleportID, class UOakPlayerTeleportData* PlayerTeleportData);
	void ServerStopSliding();
	void ServerStartSliding();
	void ServerAttemptGroundSlam(int32 Grade);
	void OnSlidingImpactParticleSystemFinished(class UParticleSystemComponent* PSC);
	void OnRep_CurrentJumpType();
	void OnRep_bRepInDelayedFall();
	void OnRep_bIsSprinting();
	void OakCharacterMovementEvent__DelegateSignature();
	void NotifyMantleStarted();
	void NotifyMantleFinished();
	bool IsSlidingDownLadder();
	bool IsPerformingUpwardLadderJump();
	void ClientAckPlayerTeleport(float ClientTimeStamp, uint32 PlayerTeleportID);
	void CharacterSlideEndedEvent__DelegateSignature(struct FSlideEndedDetails& Details);
	void CharacterGroundSlamEndedEvent__DelegateSignature(struct FGroundSlamEndedDetails& Details);
};

// 0x0 (0x50 - 0x50)
// Class OakGame.OakCharacterPlayerAttributeContextResolver
class UOakCharacterPlayerAttributeContextResolver : public UAttributeContextResolver
{
public:

	static class UClass* StaticClass();
	static class UOakCharacterPlayerAttributeContextResolver* GetDefaultObj();

};

// 0xF8 (0x198 - 0xA0)
// Class OakGame.OakCharacterSoundData
class UOakCharacterSoundData : public UCharacterSoundData
{
public:
	struct FInheritableSoundMap                  TiredSoundOverrides;                               // 0xA0(0x50)(Edit, NativeAccessSpecifierPublic)
	bool                                         bOverrideCorrosivePainLoop;                        // 0xF0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6212[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           CorrosivePainLoop;                                 // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           CorrosivePainLoopStop;                             // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideCryoPainLoop;                             // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6213[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           CryoPainLoop;                                      // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           CryoPainLoopStop;                                  // 0x118(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideDarkMagicPainLoop;                        // 0x120(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6214[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           DarkMagicPainLoop;                                 // 0x128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DarkMagicPainLoopStop;                             // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideFirePainLoop;                             // 0x138(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6215[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           FirePainLoop;                                      // 0x140(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           FirePainLoopStop;                                  // 0x148(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverridePoisonPainLoop;                           // 0x150(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6216[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           PoisonPainLoop;                                    // 0x158(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PoisonPainLoopStop;                                // 0x160(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideRadiationPainLoop;                        // 0x168(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6217[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           RadiationPainLoop;                                 // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           RadiationPainLoopStop;                             // 0x178(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideShockPainLoop;                            // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6218[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           ShockPainLoop;                                     // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ShockPainLoopStop;                                 // 0x190(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCharacterSoundData* GetDefaultObj();

};

// 0x60 (0x398 - 0x338)
// Class OakGame.OakCharacterSoundLogicComponent
class UOakCharacterSoundLogicComponent : public UCharacterSoundLogicComponent
{
public:
	TMap<class UDialogNameTag*, class UCharacterSoundData*> CharacterSoundData;                                // 0x338(0x50)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UGbxDialogComponent*>           CachedDialogComponents;                            // 0x388(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakCharacterSoundLogicComponent* GetDefaultObj();

};

// 0x1E70 (0x2850 - 0x9E0)
// Class OakGame.OakPlayerController
class AOakPlayerController : public AGbxPlayerController
{
public:
	uint8                                        Pad_62BD[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter*                         OakCharacter;                                      // 0x9F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakFirstPersonComponent*              OakFirstPersonComponent;                           // 0xA00(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakSaveGame*                          CurrentSavegame;                                   // 0xA08(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakSaveGameChannel*                   SaveGameChannel;                                   // 0xA10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientWaitingForFullSaveGameInitialization;       // 0xA18(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62BE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FClientExpectedSaveGameValues         ExpectedSaveGameValues;                            // 0xA20(0xE0)(Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        ExperiencePointsLoadedFromSaveGame;                // 0xB00(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       TimePlayedSecondsLoadedFromSaveGame;               // 0xB04(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       TimePlayedSeconds;                                 // 0xB08(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62BF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWriteSaveGameRequest;                             // 0xB14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsLoadingSaveGame;                                // 0xB15(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsApplyingSaveGame;                               // 0xB16(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSaveGameAppliedToCharacter;                       // 0xB17(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLoadedExistingSavegame;                           // 0xB18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWasIdle;                                          // 0xB19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWriteProfileRequest;                              // 0xB1A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPendingApplySaveGameToCharacter;                  // 0xB1B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62C0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPlayerClassIdentifier*                CurrentPlayerClass;                                // 0xB20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62C1[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxSkillScreenTree*                   SkillTreeSubMenuClassPtr;                          // 0xB58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PreferredCharacterName;                            // 0xB60(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerPronounData*                    PlayerPronounSelection;                            // 0xB70(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakHUD*                               OakHUD;                                            // 0xB78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxMenuStack*                         MenuStack;                                         // 0xB80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62C2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakUICharacterCustomizationManager*   CharacterCustomizationManager;                     // 0xBA0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakUIChallengeDataProvider*           ChallengeProvider;                                 // 0xBA8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakUIPlayerStandIn*                   PlayerStandIn;                                     // 0xBB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakUIBigMapManager*                   BigMapManager;                                     // 0xBB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62C3[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPlayerDifficultySetting          DifficultySetting;                                 // 0xBC9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlayerDifficultySetting          PendingDifficultySetting;                          // 0xBCA(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62C4[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDifficultyChanged;                               // 0xBD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         bHasActivityFeedRequestInFlight;                   // 0xBE0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62C5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NextAllowedActivityFeedPostTime;                   // 0xBE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FOutstandingActivityFeedData>  OutstandingActivityFeedQueue;                      // 0xBE8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_62C6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ANewGameFlow*                          NewGameFlow;                                       // 0xC00(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxItemTradingMenu*                   TradingMenu;                                       // 0xC08(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62C7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerState*                       CurrentRaidSpectatorTarget;                        // 0xC20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62C8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  CurrentUsableChanged;                              // 0xC30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CurrentUsabilityChanged;                           // 0xC40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLookedAt;                                        // 0xC50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLookedAwayFrom;                                  // 0xC60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPawnChanged;                                     // 0xC70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSaveGameStarted;                                 // 0xC80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSaveGameComplete;                                // 0xC90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_62CC[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerStateAdded;                                // 0xCC0(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerStateRemoved;                              // 0xCD0(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_62CE[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCinematicModeChanged;                            // 0xD10(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLagStatusChanged;                                // 0xD20(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFirstNearbyGrenadeAdded;                         // 0xD30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLastNearbyGrenadeRemoved;                        // 0xD40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_62CF[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnQuickChangeMenuClosedDelegate;                   // 0xDD0(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_62D0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UEchoLogData*                          CachedEchoLogData;                                 // 0xDF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62D1[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakUseComponent*                      UseComponent;                                      // 0xE38(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameStatsComponent*                   GameStatsComponent;                                // 0xE40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakPlayerMissionComponent*            PlayerMissionComponent;                            // 0xE48(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDiscoveryComponent*                   DiscoveryComponent;                                // 0xE50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleSpawnerComponent*              VehicleSpawnerComponent;                           // 0xE58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerPrestigeComponent*              PlayerPrestigeComponent;                           // 0xE60(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFogOfDiscoveryComponent*              FoDComponent;                                      // 0xE68(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URecoilControlComponent*               RecoilControlComponent;                            // 0xE70(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerShopManagerComponent*           ShopManagerComponent;                              // 0xE78(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakChallengesComponent*               ChallengesComponent;                               // 0xE80(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62D2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseListenerEffectComponent*         WwiseListenerEffectComponent;                      // 0xE90(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UGbxMenuInput>          MenuInput;                                         // 0xE98(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBoundaryWarningActive;                            // 0xEA0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BoundaryWarningCount;                              // 0xEA4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUsableComponent*                      CachedUsableTarget;                                // 0xEA8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUsabilityInfo                        CachedUsabilityInfo;                               // 0xEB0(0x40)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FVector                               CachedUsableImpactPoint;                           // 0xEF0(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CachedUsableDistanceAway;                          // 0xEFC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CachedPlayerAlertLocation;                         // 0xF00(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAddDefaultBindings : 1;                           // Mask: 0x1, PropSize: 0x10xF0C(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bJumpingUncrouchesThenJumps : 1;                   // Mask: 0x2, PropSize: 0x10xF0C(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_184 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_62D4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MantleAnalogInputThreshold;                        // 0xF10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPassiveMantleButtonHoldDuration;                // 0xF14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoRespawnDelay;                                  // 0xF18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62D5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RaidSpectatorCameraMode;                           // 0xF20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AOakPlayerController>   RaidSpectatorTarget;                               // 0xF28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputComponent*                       RaidSpectatorInputComponent;                       // 0xF30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AZoneMapViewer*                        SpawnedZoneMap;                                    // 0xF38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62D6[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextureRenderTarget2D*                CurrentLevelFogOfDiscovery;                        // 0xFD8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62D7[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakProjectile*>                NearbyGrenades;                                    // 0x1010(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_62D8[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                GearSoldByFriendActor;                             // 0x1060(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62D9[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        GearSoldByMe;                                      // 0x10D8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62DA[0x210];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakUIActorContainer*                  ItemInspectionContainer;                           // 0x12F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            BaseTransform;                                     // 0x1300(0x30)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 ItemInspectionActor;                               // 0x1330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 ItemToInspect;                                     // 0x1338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UInventoryData>         ItemToInspectInventoryData;                        // 0x1340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UInventoryBalanceStateComponent> InspectionSourceBalanceComponent;                  // 0x1348(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UInventoryPartData>     SelectedPart;                                      // 0x1350(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentFOV;                                        // 0x1358(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62DF[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOrphanedUIStandIn>            OrphanedStandIns;                                  // 0x1380(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> LateJoinStandIn_DigistructEffect;                  // 0x1390(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> LateJoinStandIn_DigistructOutEffect;               // 0x1398(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> LateJoinStandIn_HoloEffect;                        // 0x13A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerStandIn*                        LateJoinStandIn;                                   // 0x13A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62E0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTriggerFeedbackState>         TriggerFeedbackStates;                             // 0x13B8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_62E1[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAimControlParameters                 AimControlParameters;                              // 0x13E8(0x78)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UOakAimAssistStrategy*                 OakAimAssistStrategy;                              // 0x1460(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakAimAssistParameters*               AimAssistParameters;                               // 0x1468(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakAimAssistParameters*               DefaultAimAssistParameters;                        // 0x1470(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakAimAssistParameters*               SpellAimAssistParameters;                          // 0x1478(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAxialDeadZoneBegin;                            // 0x1480(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAxialDeadZoneRatio;                            // 0x1484(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNetConnectionCleanup;                            // 0x1488(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FVector2D                             SafeFrameScalingMinMax;                            // 0x1498(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             HDRBrightnessMinMax;                               // 0x14A0(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HDRMenuBrightnessMinMaxTick;                       // 0x14A8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BrightnessMinMax;                                  // 0x14B4(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BlackLevelMinMax;                                  // 0x14BC(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62E2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakProfile*                           CurrentOakProfile;                                 // 0x14C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62E3[0x118];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakAimAssistParameters*>       WeaponSlotOverrideAimAssistParameters;             // 0x15E8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bFullyAimingAtTarget;                              // 0x15F8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62E4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAimingAtShootableObject;                          // 0x1600(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62E5[0xE7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnReticleFeedback;                                 // 0x16E8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_62E6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 PreviouslyPossessedPawn;                           // 0x1710(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIManager*                            UIManager;                                         // 0x1718(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakPlayerCameraManager*               OakPlayerCameraManager;                            // 0x1720(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62E7[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             CrosshairScreenPosition;                           // 0x1748(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                        MenusToPreserveInDownState;                        // 0x1750(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bAllowForegroundFocusEffect;                       // 0x1760(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62E9[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  ForcedPostProcessSettings;                         // 0x1770(0x600)(Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_62EA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerTradeManager*                   TradeManager;                                      // 0x1D80(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62EB[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedCameraModeState            ReplicatedCameraModeState;                         // 0x1DA8(0x10)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_62ED[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFocusableComponent*                   CurrentFocusObject;                                // 0x1DE8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamepadViewScale;                                  // 0x1DF4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadZoomScale;                                  // 0x1DF8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseViewScale;                                    // 0x1DFC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseZoomScale;                                    // 0x1E00(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_62EF[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakPlayerPath                        PlayerPath;                                        // 0x1E28(0x18)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_62F0[0x210];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInfiniteAmmo;                                     // 0x2050(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62F1[0x9F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CombatEncounterEndedDelay;                         // 0x20F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62F2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGbxCharacter*                         CachedPrimaryCharacter;                            // 0x20F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62F3[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bBeingTargeted;                                    // 0x2124(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerCombatEncounterData            ActiveCombatEncounterData;                         // 0x2128(0x14)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bOverrideCrosshairScreenPosition;                  // 0x213C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62F5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             OverrideCrosshairScreenPosition;                   // 0x2140(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxDialogBox*                      LoadingCharacterDialog;                            // 0x2148(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCombatEncounterEnded;                            // 0x2158(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	float                                        TimeSinceLastMovement;                             // 0x2168(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62F7[0x84];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              EchoNetParticleBackdrop;                           // 0x21F0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62F8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AAdvancedInteractiveObject*            CurrentAIO;                                        // 0x2210(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAdvancedInteractiveObject*            PendingFinalizeAIO;                                // 0x2218(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakCustomizationInfo>         UnlockedCustomizationData;                         // 0x2220(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryCustomizationPartInfo> UnlockedInventoryCustomizationParts;               // 0x2230(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_62F9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class FString>             NicknameMappings;                                  // 0x2248(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              WorldSpaceWeatherEffect;                           // 0x2298(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FUnlockedPlayerEchoLogData>    UnlockedEchoLogs;                                  // 0x22A0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_62FA[0x88];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMessageHandle                        PendingSwapSeat;                                   // 0x2338(0x8)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_62FB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CustomReplicatedActor;                             // 0x2348(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoxxisEventTier;                                   // 0x2350(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62FD[0x8C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UEndlessEndStats*                      EndlessDungeonEndStats;                            // 0x23E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_62FE[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameStatChannel*                      GameStatChannel;                                   // 0x2490(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ScreenLiquidParticleTemplate;                      // 0x2498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScreenLiquidOpacityBlendInTime;                    // 0x24A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScreenLiquidOpacityBlendOutTime;                   // 0x24A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScreenLiquidColorTransitionTime;                   // 0x24A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6300[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputComponent*                       PausedStateInputComponent;                         // 0x24E8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LateJoinFadeDuration;                              // 0x24F0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6301[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPremiumCurrencyManager               PremiumCurrencyManager;                            // 0x2530(0x30)(Transient, NativeAccessSpecifierPublic)
	class UGbxZoneMapFODSaveGameData*            ZoneMapFODSavedData;                               // 0x2560(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       ScreenFadeInParticleTemplate;                      // 0x2568(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActiveFastTravelData>         PlayerDiscoveredFastTravel;                        // 0x2570(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6302[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoCenteringAngle;                                // 0x2584(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoCenteringDelay;                                // 0x2588(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoCenteringInterpolationSpeed;                   // 0x258C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoCenteringMinMovementSpeed;                     // 0x2590(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoCenteringCurrentDuration;                      // 0x2594(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoCenteringEaseInDuration;                       // 0x2598(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoCenteringEaseOutDuration;                      // 0x259C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextureRenderTarget2D*                MinimapRenderTarget;                               // 0x25A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6304[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCinematicModeUpdated;                            // 0x25D0(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	class AOakCharacter_Overworld*               OverworldCharacter;                                // 0x25E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDaffodilEncounter*                    PlayingEncounter;                                  // 0x25E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverworldInteractionDistance;                      // 0x25F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverworldInteractionLeaveDistance;                 // 0x25F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIViewHandle                      UIViewHandle;                                      // 0x25F8(0x10)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxUIViewHandle                      UIMonoHandle;                                      // 0x2608(0x10)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FOakUIStatusMenuManager               UIStatusMenuManager;                               // 0x2618(0x48)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6305[0x138];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTrackedInteractionSaveData>   TrackedInteractions;                               // 0x2798(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGbxAttributeModifierHandle>   TrackedInteractionsAttributeModifierHandles;       // 0x27A8(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6306[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ReRolledInventoryActorSource;                      // 0x27C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                ReRolledInventoryActor;                            // 0x27D0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnReRolledInventoryActorReady;                     // 0x27D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6307[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnMayhemLevelUnlocked;                             // 0x2800(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FOakUIDialogBoxInfo>           DialogBoxInstances;                                // 0x2810(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6308[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldHideMapMenu;                                // 0x2830(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6309[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakPlayerController* GetDefaultObj();

	void WriteProfile();
	void UpdateHardwareLightingState();
	void UnregisterSavegameDelegates();
	void UnlockEchoLog(class UEchoLogData* EchoLog);
	void UnlockAllVehiclesAndParts();
	void TryTradeWithRadialMenuTarget();
	void TryInitiateDuel();
	void TriggerOnMissionsOfferedDelegate(const struct FMissionDeliveryData& NewDeliveryData, class AMissionTracker* NewMissionTracker);
	void TriggerDisplayMissionRewardsDelegate(TSubclassOf<class UMission> Mission, const struct FGFxMissionTrackerRewardDisplayData& Reward, const struct FGFxMissionTrackerRewardDisplayData& OptionalReward);
	void ToggleLookingForHelp();
	void TextChat(const class FString& Msg);
	void TempGrantActivityFeedChallengeReward(class UActivityFeedReward* Reward, int32 ChallengeLevelTargetValue, int32 ChallengeLevelCompleted);
	class AZoneMapViewer* SpawnZoneMap();
	void SpawnVehicleFromConfig(int32 GameStage, const struct FOakCARMenuVehicleConfig& VehicleConfig, class ACatchARide* CARConsole);
	void SpawnVehicle(int32 GameStage, class UOakCARVehicleData* Vehicle, TArray<class UOakCARVehiclePartData*>& Parts, class UObject* CarMenuInterface, const struct FColor& Color1, const struct FColor& Color2, const struct FColor& Color3);
	void SpawnMissionVehicle(class ACatchARide* Console);
	void SpawnCustomReplicatedActor(class AOakPlayerController* PlayerOwner, class UClass* ClassToSpawn, struct FTransform& ActorTransform);
	void ShowDungeonWidget(bool bShow);
	void ShowDungeonStatusNotification(enum class ETelemetryDungeonStatus DungeonStatus);
	bool ShouldSpectateOnDeath(bool bIsFirstPossession);
	void SetupCameraForRaidSpectator();
	void SetPushToTalkState(bool bPushing);
	void SetNonMovementInputLocked(bool bLocked, class FName Reason);
	void SetMoxxiEventTier(int32 Tier);
	void SetLockedCanUseObjects(bool bLocked, class FName Reason);
	void SetInputLocked(bool bLocked, class FName Reason);
	void SetHasPlayedSpecialEchoLogInsertAnimationAlready(bool bNewValue);
	void SetFocusObject(class AActor* FocusActor);
	void SetFastTravelLocks(bool bLocked);
	void SetEchoMenuLocked(bool bLocked, class FName Reason);
	void SetCustomViewportViewFlags(int32 ViewFlags, bool bEnabled);
	void ServerUpdatePremiumCurrency(class UGbxInventoryCategoryData* Category, int32 Quantity);
	void ServerSwitchPlayerClass(class UPlayerClassIdentifier* NewPlayerClass);
	void ServerSpawnLostLoot(const class FString& GearSerialNumber, const struct FSpawnPatternResult& SpawnResult);
	void ServerSetWaitingForSaveGameInitialization(bool bWaiting);
	void ServerSetTradeRequestReceptionType(enum class ETradeRequestReceptionType NewTradeRequestReceptionType);
	void ServerSetRemoteViewportInfo(int32 ViewportWidth, int32 ViewportHeight);
	void ServerSetRemoteDefaultFOV(float DefaultFOV);
	void ServerSetRemoteCrosshairPosition(const struct FVector2D& ClientCrosshairPosition);
	void ServerSetRemoteCameraInfo(bool bIsFirstPerson);
	void ServerSetReadyForSaveGameChannel();
	void ServerSetReadyForGameStatChannel();
	void ServerSetMaxSpawnCost(int32 InMaxSpawnCost);
	void ServerSetLateJoinState(enum class ELateJoinState InLateJoinState);
	void ServerSetIndigoRunId(const struct FGuid& ID);
	void ServerSetFullyAimingAtTarget(bool bInClientFullyAimingAtTarget);
	void ServerSetEndlessRunId(const struct FGuid& ID);
	void ServerSetDuelingEnabled(bool bNewDuelingEnabled);
	void ServerSetDifficultySetting(enum class EPlayerDifficultySetting NewDifficulty);
	void ServerSetBulletMagnetismSettings(bool bDoBulletMagnetism);
	void ServerSendTradeOfferToPlayer(class AOakPlayerState* PlayerReceivingTradeOffer);
	void ServerSendAlreadyUnlockedCustomizations(TArray<int32>& CustomizationIDs);
	void ServerRotateRaidSpectatorTarget(bool bNextTarget);
	void ServerRequestTravelToTownHub(bool bImmediate);
	void ServerRequestTravelToOverworld();
	void ServerRequestSwitchSeats(class APawn* Occupant);
	void ServerRequestMayhemWithoutReload(int32 NewMayhemLevel, int32 NewRandomSeed);
	void ServerRequestMayhemReload(int32 NewMayhemLevel, int32 NewRandomSeed);
	void ServerRequestActivateCustomPOI(class UObject* CustomPOIData);
	void ServerQuitEndlessRun();
	void ServerPlayItemCallout(class AOakInventoryItemPickup* Pickup);
	void ServerPlayIdleDialogInMenu(class UGbxMenuData* MenuData);
	void ServerPlayIdleDialog();
	void ServerPlayerSelectedCharacter(struct FUniqueNetIdRepl& TargetPlayerId);
	void ServerPlayerOpenedCharacterSelect();
	void ServerOnUIMenuActivated();
	void ServerOnPlanetSelected(class AGalaxyMapStation* GalaxyMapStation, class UPlanetData* PlanetData);
	void ServerNotifyTrackedEchoLogPlaybackState(class UEchoLogData* SetPlayingTrackedEchoLog, bool bPlaying);
	void ServerNotifyLoadingMoviesShown_ForSonyRTMP();
	void ServerNotifyLoadingMoviesHidden_ForSonyRTMP();
	void ServerLostLootChanged();
	void ServerJoinedPresenceSession(const class FString& SessionId);
	void ServerInterruptTravelToStation(enum class ETravelStatus CancelStatus);
	void ServerInitializeLostLootMachine(class AActor* Actor, int32 Current, int32 Max);
	void ServerIndigoRunFinished();
	void ServerIndigoDecline();
	void ServerIncrementSendMailStat(class UGameStatData* Stat);
	void ServerIncrementPhotoModeStylizeStat(class UGameStatData* Stat);
	void ServerIncrementGameStat(class UGameStatData* Stat, int32 Amount);
	void ServerHintPlayerForNextDialog();
	void ServerGearSoldByFriendDataSelected(const struct FGearSoldByFriendData& SeletedData);
	void ServerDumpPlayerDebugInfo();
	void ServerCreatePlayerAlert(struct FUniqueNetIdRepl& InInstigator, class AActor* InTargetedActor, const struct FVector& InAlertLocation);
	void ServerCreatedPresenceSession(const class FString& SessionId);
	void ServerClearCurrentAIO(bool bImmediate);
	void ServerAddGearToInventoryFromSelectedInfo(const struct FSelectedInventoryInfo& SelectedInventoryInfo);
	void ServerAddGearToInventory(const class FString& GearSerialNumber, enum class EInventoryListType InventoryListType, uint8 UIDataFlags);
	void ServerAddCurrency(int32 Amount, class UGbxInventoryCategoryData* CurrencyType);
	void ServerAcceptVehicleSeatSwapRequest(class AOakVehicle* VehicleFrom, int32 FromSeat, int32 ToSeat);
	void ServerAcceptPendingTradeOffer(class AOakPlayerState* PlayerOfferingTradeState);
	void Server_UpdateMayhemStat(int32 MayhemLevel);
	void RotateRaidSpectatorTarget(bool bNextTarget);
	void ResurrectedDuringCombat(bool bStarted);
	void RestoreCameraModeFocus(float BlendOutTime);
	void ResourceLockHideFirstPerson(bool bHide, class FName Reason);
	void ReRollInventoryForNewEnchantment(class AActor* InventoryActor, struct FGameplayTagContainer& DesiredEnchantmentTags, bool bMustHaveAllTags);
	void RequestTravelToTownHub(bool bForceCloseMenus);
	void RegisterSavegameDelegates();
	void ReceiveMissionRewards(TSubclassOf<class UMission> MissionClass, struct FProcessedReward& Reward, struct FProcessedReward& OptionalReward);
	void ReadProfile();
	void RaidSpectatorProcessMouseYawInput(float Val);
	void RaidSpectatorProcessMouseScrollInput(float Val);
	void RaidSpectatorProcessMousePitchInput(float Val);
	void RaidSpectatorProcessGamepadYawInput(float Val);
	void RaidSpectatorProcessGamepadRightTrigger(float Val);
	void RaidSpectatorProcessGamepadPitchInput(float Val);
	void RaidSpectatorProcessGamepadLeftTrigger(float Val);
	void QuickSave();
	void QuickLoad();
	void QuickChangeMenuClosed__DelegateSignature();
	void PlaySwappedSeatDialog();
	void PlayerStateRemovedEvent__DelegateSignature();
	void PlayerStateAddedEvent__DelegateSignature(class AOakPlayerState* EventPlayerState);
	void PlayEquippedEmote(int32 EmoteIndex);
	void PauseGame();
	void OverrideCameraModeFocus(float BlendInTime, const struct FPostProcessSettings& PPSettings);
	void OpenStatusMenu(class FName SubMenuId, class UObject* SelectionObject);
	void OpenShiftFirstBoot();
	void OpenQuickMenu();
	void OpenPCTextChatMenuInput();
	void OpenPCTextChatMenu();
	void OpenMissionLogMenu();
	void OpenMapMenu();
	void OpenInventoryMenu();
	void OpenGuardianRankMenu();
	void OpenEchoNetMenu(class FName SubmenuName);
	void OpenContentMarketplace();
	void OnUIMenuActivated(class UObject* MenuObject);
	void OnUIHintBarVisibilityUpdated__DelegateSignature(class FName* TargetHintBarType);
	void OnUIHintBarUpdated__DelegateSignature(class FName* TargetHintBarType);
	void OnUIHintBarHelperVisibilityUpdated__DelegateSignature(class FName* TargetHintBarType);
	void OnTravelCountdownUpdate__DelegateSignature(class UTravelStationData* DestinationTravelStation, int32 RemainingTime, enum class ETravelStatus CurrentStatus);
	void OnTextChatLogChanged(class UGFxPCTextChatBuffer* TextChatBuffer);
	void OnSaveProfileEvent__DelegateSignature(bool bSuccess);
	void OnSaveGameEvent__DelegateSignature(const class FString& SlotName, bool bSuccess);
	void OnRep_TradeManager();
	void OnRep_ReRolledInventoryActor();
	void OnRep_ReplicatedCameraModeState();
	void OnRep_GearSoldByFriendActor();
	void OnRep_CustomReplicatedActor();
	void OnPawnChanged__DelegateSignature(class APawn* NewPawn, class APawn* OldPawn);
	void OnNumPlayersChanged(int32 NumOfPlayers);
	void OnNotifyTravel__DelegateSignature();
	void OnMissionRewardsDisplayOff();
	void OnMissionDataChanged();
	void OnMessageHideCallback(struct FMessageHandle& MessageID);
	void OnMayhemLevelUnlocked__DelegateSignature(int32 MaxUnlockedLevel);
	void OnLevelChanged(int32 OldLevel, int32 NewLevel);
	void OnInventoryItemRemoved(struct FInventoryListEntryHandle& RemovedItemHandle);
	void OnExperienceAdded(int32 ExperienceAdded);
	void OnDirectionalSignpostUsed(float DisplayTime, class FText LeftNamedDirection, class FText RightNamedDirection);
	void OnCurrentUsableUsabilityChanged__DelegateSignature(class UUsableComponent* CurrentUsable, struct FUsabilityInfo& InUsabilityInfo);
	void OnCurrentUsableUsabilityChanged(class UUsableComponent* NewUseComponent, struct FUsabilityInfo& InUsabilityInfo);
	void OnCurrentUsableImpactDataChanged(class UUsableComponent* NewUsableComponent, const struct FVector& NewUsableImpactPoint, float NewUsableDistanceAway);
	void OnCurrentUsableChanged__DelegateSignature(class UUsableComponent* CurrentUsable, struct FUsabilityInfo& InUsabilityInfo, const struct FVector& UsableComponentImpactPoint, float UsableComponentDistanceAway);
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
	void OnConfirmSeatSwap();
	void OnCinematicStopped_RetryFadeIn();
	void OnCharacterSpawnedInLevel(class UTravelStationComponentBase* SpawnedAtStation);
	void OnCharacterDied();
	void OnChallengeCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnCameraStyleChanged(class FName NewCameraStyle);
	void OakTextChatOptionChangedDelegate__DelegateSignature(bool bIsActive);
	void OakPCUsableLookedAwayFromSignature__DelegateSignature(class UUsableComponent* NewUsable);
	void OakPCUsableLookedAtSignature__DelegateSignature(class UUsableComponent* NewUsable);
	void NotifyUncappedExperienceAdded(int32 ExperienceAdded, enum class EPlayerExperienceSource Source, enum class EPlayerExperienceType Type);
	void NotifyPrimaryCharacterChanged(class AGbxCharacter* NewPrimaryCharacter);
	void NotifyNotIdle();
	void NotifyLevelUp(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void NotifyExperienceAdded(int32 ExperienceAdded, enum class EPlayerExperienceSource Source, enum class EPlayerExperienceType Type);
	void MarkInventoryCustomizationPartAsViewed(class UOakInventoryCustomizationPartData* CustomizationToTest);
	void MarkCustomizationAsViewed(class UOakCustomizationData* CustomizationToTest);
	void MantleReleased();
	void MantlePressed();
	void LastNearbyGrenadeRemoved__DelegateSignature();
	void LagStatusChanged__DelegateSignature(bool bIsLagging);
	void JumpReleased();
	void JumpPressed();
	bool IsStreamerBuffActive();
	bool IsInventoryCustomizationPartUnlocked(class UOakInventoryCustomizationPartData* CustomizationToTest);
	bool IsInventoryCustomizationPartNew(class UOakInventoryCustomizationPartData* CustomizationToTest);
	bool IsInteractingWithAIO();
	bool IsInNewGameFlow();
	bool IsInMenu();
	bool IsIdle();
	bool IsCustomizationUnlocked(class UOakCustomizationData* CustomizationToTest);
	bool IsCustomizationNew(class UOakCustomizationData* CustomizationToTest);
	bool IsCrosshairOffCenter();
	void InventoryCustomizationUnlockedDelegate__DelegateSignature(class UOakInventoryCustomizationPartData* CustomizationPart);
	void IndigoChallengeBeginListening(class AActor* CurrentChallenge);
	bool HasPlayedSpecialEchoLogInsertAnimationAlready();
	bool HasAnySDUs();
	class AZoneMapViewer* GetZoneMapViewer();
	class UVehicleSpawnerComponent* GetVehicleSpawnerComponent();
	class AOakHUD* GetOakHUD();
	class UGbxMenuStack* GetMenuStack();
	int32 GetMaxLostLootSize();
	int32 GetHighestUnlockedMayhemLevel();
	class UFogOfDiscoveryComponent* GetFogOfDiscoveryComponent();
	class UDiscoveryComponent* GetDiscoveryComponent();
	class UPlayerClassIdentifier* GetCurrentPlayerClass();
	int32 GetCurrentLostLootCount();
	class AAdvancedInteractiveObject* GetCurrentAIO();
	int32 GetCostToReRollInventoryForNewEnchantment(class AActor* InventoryActor);
	void ForceOverworldGrassToUpdate();
	void FirstNearbyGrenadeAdded__DelegateSignature();
	void EnterPhotoMode();
	void EnsureValidSpectatorTarget();
	void DisplayRolloutNotification(class FText& Title, class FText& Message, float Duration);
	void DisplayHUDErrorNotification(class FText Message);
	void DisplayDLCPromptMessage(class UDownloadableContentData* ContentData);
	void DisplayCustomHUDNotification(class UHUDNotificationAsset* Asset, class FText MessageText, int32 NotificationPriority, TSubclassOf<class UObject> TrackedNotificationTarget, bool bMakeActiveImmediately);
	bool DebugLoadGame(const class FString& SlotName);
	void CreatePlayerAlert();
	void CombatEncounterEndedDelegate__DelegateSignature(struct FPlayerCombatEncounterData& CombatEncounterData);
	void ClosePCTextChatMenu();
	void CloseMissionAcceptMenu();
	void ClientVehicleUnlock(const struct FSoftObjectPath& Vehicle);
	void ClientVehicleSpawned(class UObject* CarMenuInterface, class ACatchARidePlatform* Platform, class AOakVehicle* Vehicle);
	void ClientVehiclePartUnlock(const struct FSoftObjectPath& Part);
	void ClientUseClientSideCameraUpdates(bool bEnabled);
	void ClientUpdateUIState(TArray<class FName>& StatesToAdd, TArray<class FName>& StatesToRemove);
	void ClientUnlockInventoryCustomizationPart(class UOakInventoryCustomizationPartData* CustomizationToUnlock);
	void ClientUnlockEchoLog(class UEchoLogData* EchoLog);
	void ClientUnlockCustomization(class UOakCustomizationData* CustomizationToUnlock);
	void ClientUnlockAllVehiclesAndParts();
	void ClientTriggerHardwareLightingEvent(class FName& HardwareLightingEvent);
	void ClientStopWeatherEffects();
	void ClientStartWeatherEffects(class UWeatherTemplate* Template);
	void ClientStartOnlineSessionInProgress();
	void ClientStartCameraFadeAuthoritative(float FromAlpha, float ToAlpha, float Duration, const struct FColor& Color, bool bShouldFadeAudio, bool bHoldWhenFinished);
	void ClientShowMayhemMenu();
	void ClientShowLoadScreenForStreaming(const class FString& MapName);
	void ClientShowGamerCardUI(class APlayerState* RequesteePS);
	void ClientShowFastTravelMenu();
	void ClientShowAllPlayersRequiredMessage(bool bIsAlreadyPresentInArea);
	void ClientSetSessionInviteFlags(bool bAllowInvites, bool bAllowJoinViaPresence, bool bAllowJoinViaPresenceFriendsOnly);
	void ClientSetPlayingEncounter(class UDaffodilEncounter* Encounter);
	void ClientSetMenuStackHidden(bool bInStackHidden);
	void ClientSetHasSeenFastTravelPrompt(bool HasSeen);
	void ClientSetCustomViewportViewFlags(int32 ViewFlags, bool bEnabled);
	void ClientSetCurrentAIO(class AAdvancedInteractiveObject* NewAIO, bool bInstant);
	void ClientSetBoundaryWarningState(bool bWarningActive);
	void ClientSelectGearSoldByFriendData();
	void ClientResetRegionStage(class URegionData* REGION);
	void ClientRequestVehicleSeatSwap(class AOakVehicle* VehicleFrom, int32 FromSeat, int32 ToSeat);
	void ClientRemoveTutorialMessage(class UTutorialMessageDataAsset* MessageData);
	void ClientPushHUDState(class UCinematicModeData* InCinematicMode);
	void ClientProcessLostLoot(class UOakLostLootComponent* LostLootComponent);
	void ClientPostChallengeUnlockActivityFeed(class UActivityFeedReward* FeedData, int32 ChallengeLevelTargetValue, int32 ChallengeLevelCompleted);
	void ClientPlayLocalCallout(class UDialogEvent* CalloutEvent);
	void ClientPlayerSelectedCharacter(struct FUniqueNetIdRepl& TargetPlayerId);
	void ClientPlayerJoinedPresenceSession(struct FUniqueNetIdRepl& JoinedPlayerId, const class FString& SessionId);
	void ClientPlayerDisplayDataChanged(class AOakPlayerState* InPlayerState);
	void ClientPlayAndTrackEchoLog(class UEchoLogData* EchoLog, class UGbxDialogComponent* PlayOnSpeaker);
	void ClientPartyKick(enum class EKickReason Reason);
	void ClientOpenMenu(class UGbxMenuData* MenuData);
	void ClientOpenItemInspect(class AOakInventoryItemPickup* Item, class UInventoryData* InventoryData);
	void ClientOnRandomEncounter();
	void ClientOnHandleNewPlayer();
	void ClientNotifyNewGameStarted();
	void ClientNotifyLoadPlayerClass(class UPlayerClassIdentifier* NewPlayerClass);
	void ClientNotifyKilledActor();
	void ClientNotifyClassSwitch(class UPlayerClassIdentifier* NewPlayerClass);
	void ClientMissionVehicleSpawned(class ACatchARidePlatform* Platform, class AOakVehicle* Vehicle);
	void ClientLostLootSpawned(const class FString& GearSerialNumber);
	void ClientJoinPresenceSession(const class FString& SessionId);
	void ClientInitializeLostLootMachine(class AActor* Actor);
	void ClientGotoPreviousState();
	void ClientGoToHUDState(class UGbxHUDStateData* State);
	void ClientDoLateJoinFadeIn();
	void ClientDisplayTravelFailureMessage(enum class EPOIActivationResult& TravelFailureMessage, class AOakPlayerState* BlockerPlayerState);
	void ClientDisplaySentTradeOffer(bool Success, class AOakPlayerState* PlayerReceivingTradeOffer);
	void ClientDisplayPendingTradeOffer(class AOakPlayerState* PlayerOfferingTradeState);
	void ClientDisplayHUDErrorNotification(class FText& Message);
	void ClientCreatePresenceSession(const class FString& SparkFriendPasscode);
	void ClientCreatePlayerAlert(struct FUniqueNetIdRepl& InInstigator, class AActor* InTargetedActor, const struct FVector& InAlertLocation, class AOakPlayerController* AlertInstigator);
	void ClientCompleteTrackedInteractionInstance(class UTrackedInteractionData* TrackedInteractionData, struct FGuid& TrackedInteractionGuid, bool bIgnoreRewards);
	void ClientCloseMenu(class UGbxMenuData* MenuData);
	void ClientCloseAllMenus();
	void ClientClearToDefaultHUDState();
	void ClientClearMenus();
	void ClientCleanCinematicState(class UCinematicModeData* InCinematicMode);
	void ClientCancelCameraFadeAuthoritative();
	void ClientBroadcastSlotMachineJackpotFriendEvent();
	void ClientBroadcastOpenedGoldenChestFriendEvent();
	void ClientBroadcastFriendGearPurchasedFriendEvent();
	void ClientApplyCachedSaveGame(float OptionalFadeOutDuration);
	void ClientAddTutorialMessage(class UTutorialMessageDataAsset* MessageData);
	void ClientAddSpecialMessage(class USpecialMessageDataAsset* MessageData);
	void ClientAddPremiumCurrency(int32 Amount, class UGbxInventoryCategoryData* CurrencyType);
	void ClientAddModalTutorialMessage(class UGFxModalTutorialDataAsset* MessageData);
	void ClientAcceptOrSendTradeOffer(class AOakPlayerState* OtherPlayerState);
	void Client_NotifyCombatEncounterEnded(struct FPlayerCombatEncounterData& CombatEncounterData);
	void ClearSavegame();
	void CinematicModeUpdated__DelegateSignature(class UCinematicModeData* InCinematicMode);
	void CinematicModeChanged__DelegateSignature(bool bInCinematicMode);
	void CheckDebugMenuIsOpen(bool bIsBeingDestroyed);
	void ChallengesRegistered();
	enum class ECanReRollInventoryResult CanReRollInventoryForNewEnchantment(class AActor* InventoryActor);
	bool CanOpenStatusMenu(class FText* Reason);
	void CancelReRolledInventory();
	void BroadcastGearSoldByMe(bool bOverrideDelay);
	void AttemptSpottedEnemyCalloutForTargetPerceptionChange(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void AddUnlockedInventoryCustomizationPart(class UOakInventoryCustomizationPartData* CustomizationToAdd);
	void AddUnlockedCustomization(class UOakCustomizationData* CustomizationToAdd);
	void AddNPCMailItemFromTableRowHandle(struct FDataTableRowHandle& RowHandle);
	void AddNPCMailItemFromTableRow(struct FOakNPCMailDataEntry& NPCMailData);
	void AcceptReRolledInventory();
};

// 0x210 (0x298 - 0x88)
// Class OakGame.OakCheatManager
class UOakCheatManager : public UGbxCheatManager
{
public:
	struct FSoftObjectPath                       BalanceMeItemPoolList;                             // 0x88(0x18)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeam*                                 PlayerOpposingTeam;                                // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeam*                                 PlayerTeam;                                        // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class AVehicle>>        DefaultVehicleClass;                               // 0xB0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       VehicleSpawnPoolList;                              // 0xC0(0x18)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USwfMovie*                             SimplifiedChineseFontSWF;                          // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6390[0x1B0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UPIEBenchmarkManager*                  PIEBenchmarkManager;                               // 0x290(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCheatManager* GetDefaultObj();

	void WipeRecentlyMetPlayers();
	void ValidateChallenges();
	void UpdateStatValue(const class FString& StatName, int32 StatValue);
	void UpdateAchievement(int32 AchievementId, int32 NewValue);
	void UnregisterModifier(class FName& ModifierName);
	void UnregisterAllModifiers();
	void UnlockTVHM();
	void UnlockAllCustomizations();
	void UnlockAchievement(int32 AchievementId);
	void TriggerMissionFastForward();
	void TravelToTownHub();
	void TravelToOverworld();
	void TrackPreviousMission();
	void TrackNextMission();
	void ToggleWeapon();
	void ToggleRenderingScaleform();
	void ToggleOutOfBounds(bool IsOutOfBounds);
	void ToggleOnlineActivityFeedsTest();
	void ToggleDualWieldInputSwap();
	void TestZeppelinQos();
	void TestXboxStringFilter(int32 UserNum, class FString* NameToTest);
	void TestWriteKraken();
	void TestTutorialWidgetRemove();
	void TestTutorialWidget();
	void TestTribe();
	void TestTravelNotificationMessage(const class FString& TitleString, const class FString& PlayerNameString, const class FString& DescriptionString);
	void TestSubtitle(const class FString& Text, float Duration);
	void TestSetDifficultySetting(enum class EPlayerDifficultySetting NewDifficultySetting);
	void TestSession(const class FString& SessionTemplateName);
	void TestSaveGameInterface();
	void TestRolloutMessage(const class FString& Title, const class FString& Body);
	void TestReadOdyssey();
	void TestReadKraken();
	void TestRaidNotification(class FString* TestAssetPath, uint8 RaidNotificationId, int32 Priority);
	void TestPresence(const class FString& PresenceKey);
	void TestPlayThrough(int32 PlayThroughOverride);
	void TestPlayerCount(int32 PlayerCountOverride);
	void TestParty();
	void TestOnlineTimedMessage(const class FString& TitleString, const class FString& PlayerNameString, const class FString& DescriptionString, float Duration);
	void TestOnlinePendingTradeMessage(const class FString& TitleString, const class FString& DescriptionString, int32 PlayerIndex);
	void TestOnlineBlockingMessage(const class FString& TitleString, const class FString& PlayerNameString, const class FString& DescriptionString);
	void TestOnlineAsyncMessage(const class FString& TitleString, const class FString& PlayerNameString, const class FString& DescriptionString);
	void TestNotification(class FString* TestAssetPath, class FString* MessageText, int32 Priority);
	void TestNetworkTransition(enum class ENetworkType NetworkType, enum class EInviteType InviteType, bool bPrompt);
	void TestMatchmakingWidget();
	void TestMatchmaking(const class FString& HopperName, bool bBackfill);
	void TestLootMode(enum class EMultiplayerLootMode NewLootMode);
	void TestLoginUI();
	void TestLevelSyncMessage(const class FString& TitleString, const class FString& DescriptionString, float Duration, int32 Repeat);
	void TestLevelSyncBroadcast(int32 MessageTypeToTest);
	void TestLevelSync(int32 NewPlayerLevel);
	void TestLeaderboards();
	void TestInitiateDuel();
	void TestGbxRapidjson();
	void TestGameClip(bool bEnabled);
	void TestFriendStatus(const class FString& Command);
	void TestFriendsCache(uint32 PlayerIndex);
	void TestFriends();
	void TestFriendEventMessage(const class FString& PlayerDisplayName, int32 Level, const class FString& ClassDisplayName, const class FString& DescriptionString, const class FString& ActionString);
	void TestFriendEvent(int32 Level);
	void TestFileCache();
	void TestFeed();
	void TestExternalUI(const class FString& ExternalUIName);
	void TestExpSyncLevel(int32 ExpSyncLevelOverride);
	void TestExpPointsForLevel(int32 StartingLevel, int32 EndingLevel);
	void TestErrorMessage(class FText Message);
	void TestDLCPromptMessage(const class FString& TitleString, const class FString& DescriptionString, int32 PlayerIndex);
	void TestDialog();
	void TestDestroySessionQueue();
	void TestDeleteAllSaveGames();
	void TestDamageLevelSync(bool bShouldSyncDamage);
	void TestCredits();
	void TestContentInterface();
	void TestClearPresence();
	void TestChallengeProgress(bool bUseRealChallenge, int32 TargetValue, int32 MaxValue, bool bShowAsPercent);
	void TestAttachWeaponToLootable(class FName SocketName, enum class EPickupLootAttachmentMode AttachMode);
	void TestApplyFloatCustomization(int32 FloatIndex, float FloatValue);
	void TestAchievements();
	void StopMatchmaking();
	void StopActiveActionSkills();
	void StartOnlineActivity(const class FString& ActivityId);
	void StartMatchmaking();
	void StartDandelion();
	void SpawnWeaponsForCurrentLootRules(int32 NumWeapons);
	void SpawnVehicle(const class FString& VehicleClassName, float SpawnOffset);
	void SpawnActorDescription(const class FString& Description);
	void SpamTextChat(int32 NumMessages, const class FString& BaseMessage);
	void SkipDialog(float Radius);
	void SignUpGearboxAccount(const class FString& Email, const class FString& Password, const class FString& PasswordConfirm);
	void SignInGearboxAccountD(const class FString& Email, const class FString& Password, const class FString& DisplayName);
	void SignInGearboxAccount(const class FString& Email, const class FString& Password);
	void ShowNATHelp();
	void ShowGetText();
	void ShowCharacterAccuracyPattern(bool bEnabled, float PatternSizeOverride);
	void SetVaultHunterStatus(int32 Val);
	void SetUIState(const class FString& StateName, bool bAdd);
	void SetSaveGamePlaythroughIndex(int32 PlayThroughIndex);
	void SetPlayerCustomColor(int32 ColorIndex, float ColorR, float ColorG, float ColorB, bool bUseDefault);
	void SetOnlineActivityPriority(const class FString& ActivityId, int32 Priority);
	void SetOnlineActivityAvailability(const class FString& ActivityId, bool bAvailable);
	void SetMinimapPrototypePitch(float NewPitch);
	void SetMenuTutorialsEnabled(bool bEnabled, bool bEnabledInNonGameModes);
	void SetLaggingMessageVisible(bool bVisible);
	void SetHudScaleMultiplier(float AHudScaleMultiplier);
	void SetHasNewMail(bool bHasNewMail);
	void SetFriendsMeshEnabled(bool bEnabled);
	void SetChallengesInRoomCompleted();
	void ServerCheatSwitchPlayerClass(class UPlayerClassIdentifier* NewPlayerClass);
	void SendTwitchMetadataTestMessage(const class FString& TestMessage);
	void SendMail(const class FString& PlayerName, const class FString& GeraSerialNumber);
	void ResetUnlockedCustomizations();
	void ResetUITrackingInfo();
	void ResetStatValue(const class FString& InStatName);
	void ResetMissionProgress();
	void ResetMenuTutorials();
	void ResetMatchmaking();
	void ResetLuckOverrideCategory(class FName LuckCategoryName);
	void ResetLuckOverrideAll();
	void ResetLuckOverride();
	void ResetChallengeProgressByName(const class FString& PartialChallengeNameMatch);
	void ResetAllStatValues();
	void ResetActionSkillCooldowns();
	void RenameShiftUser(const class FString& DisplayName);
	void RemoveAllPlayerAlerts();
	void RegisterModifierSet(class FName& ModifierSetName);
	void RegisterModifier(class FName& ModifierName, class FName& TargetResolverName, class FName& StatusEffectName, float Value);
	void ReadProfileImage();
	void ReadPermissions();
	void ReadDisplayData();
	void ProcessMail(const class FString& MailGuid, bool bAccept);
	void ProcessLostLoot();
	void PrintStatValue(const class FString& StatName);
	void PrintNPCMail();
	void PrintMicropatchSwitches();
	void PrintMail();
	void PrintLostLoot();
	void PrintGearSoldByMe();
	void PrintGearSoldByFriends();
	void PrintFriendStatusesJson();
	void PrintFriendStatusesInProfile();
	void PrintFriendStatuses();
	void PrintFriendEventsInProfile();
	void PrintFriendEvents();
	void PrintFriendChallengeInfo();
	void PrintAllStatValues();
	void PrintAllInProgressChallengeValues();
	void PrintAllIncompletedChallengeValues();
	void PrintAllInactiveChallengeValues();
	void PrintAllCompletedChallengeValues();
	void PrintAllChallengeValues();
	void PrintAllActiveChallengeValues();
	void PlayerDiscoveryUnlock();
	void PerformWorldReset();
	void OpenNewCharacterScreen(int32 Type, bool bConfirmCreation);
	void OpenMenu_DevUI();
	void OpenEndlessDungeonVictory();
	void OpenCrossplayFirstBootScreen(int32 UserIndex);
	void OnDialogClicked(class FName ChoiceNameId, int32 ControllerId);
	void OnBalanceMe(class AOakCharacter* Character);
	void NoMaxInventory(bool bEnable);
	void MarkAllCustomizationsAsNew();
	void LuckOverrideCategory(class FName LuckCategoryName, float NewLuck);
	void LuckOverride(int32 NewLuck);
	void LogMemSorted(bool bFullLog);
	void LogDetailedMemForObject(const class FString& ObjectName);
	void LoadChineseFont();
	void LoadAllMissions();
	void LikeFriendEvent(const class FString& PlayerName, const class FString& EventGuidStr);
	void LevelRequirementDebug();
	void LeaveSession(const class FString& SessionName);
	void KillVehicles();
	void JoinSessionByName(const class FString& PlayerId, const class FString& InFriendName);
	void JoinLanGame();
	void JoinFriendByName(const class FString& InFriendName);
	void InfiniteFFYL();
	void IncrementStatValue(const class FString& InStatName, int32 Amount);
	void IncrementRandomStats();
	void IncrementChallengesByName(const class FString& PartialChallengeNameMatch, int32 Amount);
	void IgnorePlayer(const class FString& PlayerName, bool bIgnorePlayer);
	void HideAllOnlineMessages();
	void GiveForCategory(int32 Amount, const class FString& Args);
	void GetWorstOffenderComponentClass(int32 NbToPrint);
	void GetWorstOffenderActors(int32 NbToPrint, bool bFullLog);
	void GetWorstOffenderActorClass(int32 NbToPrint);
	void GetTickInformationForClass(const class FString& ClassName, bool bCheckHeritance, bool bPartialName, bool bFullLog);
	void GetIgnoredPlayers();
	void GetFarTickingActors(float DistanceToCheck);
	void GetEffectivePlayerCount();
	void GenerateNewGuid();
	void FriendStatusDebug(int32 NumDebugFriends, bool bRandomize);
	void ForceTimeoutAllGameClients();
	void ForceCreateLocalPlayer();
	void FetchMail();
	void FastTravelUnlock(bool bBypassDependencies);
	void FastTravelLock();
	void FastTravelBypassDependencies(bool bBypassDependencies);
	void FakeStreamingEventPoolResult(const class FString& EventName, int32 ActionID, int32 ActionValue);
	void FakeStreamingEvent(const class FString& EventName);
	void FakeLateJoin();
	void ExportMatchmakingModifierData();
	void EnterPhotoMode();
	void EnterMfaCode(const class FString& Str);
	void EndOnlineActivity(const class FString& ActivityId, enum class EOnlineActivityOutcome Outcome);
	void EnableWatermarkForStreaming();
	void EnableVoice(bool bEnabled);
	void EnableCameraMan();
	void DumpTravelStations();
	void DumpSaveToJson();
	void DumpPlayerMissionProgress(const class FString& MissionName);
	void DumpPlayerDebugInfo();
	void DumpMissionProgress(const class FString& MissionName);
	void DumpAvailableCustomizations();
	void DumpAnimMemoryInfo(const class FString& OutputPath);
	void DiscoverEverything(bool bBypassDependencies);
	void DiscoverAllLocalLocations();
	void DisableEquipSlotsForWeapons(bool bEnable);
	void DeleteAllSaves();
	void DebugVoiceTestStop();
	void DebugVoiceTestStart(float OnOffTime, int32 InFakeLoadingScreenPartySize);
	void DebugTriggerFastTravelTutorial();
	void DebugStartStreamingInteraction();
	void DebugPlayerStandIn(int32 PlayerStandInActorIndex, const class FString& CharacterClass);
	void DebugOpenPlayerStorage();
	void DebugOpenNewCharacter();
	void DebugOpenModalTutorial(const class FString& AssetPath, bool bAllPlayers);
	void DebugMatchmaking(enum class EDebugMatchmakingFailure Failure, bool bEnabled);
	void DebugInitStreamingServiceWithClientID(const class FString& DebugExtensionClientID);
	void DebugInitStreamingService();
	void DebugFriends();
	void DebugFakeIsLiveStreaming(bool bFakeIsLiveStreaming);
	void DebugCloseMenus();
	void DebugClearStreamerBoosters();
	void DeactivateAllModifiers();
	void CrosshairOffset(float NewValue);
	void CreateDebugSession(const class FString& SessionTemplateName);
	void CompleteTrackedMission(bool bCompleteRequiredMissions);
	void CompleteRequiredMissions();
	void CompleteChallengesByName(const class FString& PartialChallengeNameMatch);
	void CompleteChallengesByCategoryName(const class FString& PartialChallengeCategoryNameMatch);
	void ClearTextChatBuffer();
	void ClearSeenNewsItems();
	void ClearLostLoot();
	void ClearGearSoldByMe();
	void ClearGearSoldByFriends();
	void ClearFriendStatuses();
	void ClearFriendEvents();
	void ClearCameraFade();
	void CheatIncreaseToMaxInventory();
	void ChangeOnlineActivityLocation(const class FString& LocationName);
	void CancelMatchmaking();
	void BuildPlayerPath();
	void BroadcastGearSoldByMe();
	void BeaconDumpDebugInfo();
	void AutomaticStartPlotMission();
	void AskForHelp(bool bAskForHelp);
	void AnimGameplayDebugger_WatchBPVar(const class FString& Arguments);
	void AnimGameplayDebugger_ClearBPVar();
	void AllInvTypes();
	void AllInvPartTypes();
	void AdvanceTrackedMission();
	void AddWeaponsToLostLootList(int32 NumWeapons);
	void AddNPCMail();
	void AddHeldWeaponToLostLootList();
	void AddHeldWeaponToGearSoldByFriendsList();
	void ActivateTickOptimizations(bool bActivate);
	void ActivateRandomFastTravel(float DelayTime);
	void ActivateMission(const class FString& MissionName, bool bCompleteRequiredMissions);
	void ActivateLotsOfMissions(int32 Count);
	void ActivateAutoTravelThrough(float DelayTime);
	void ActivateAllModifiers();
	void ActivateAllChallenges();
	void AbortActiveActionSkills();
};

// 0x60 (0x4B8 - 0x458)
// Class OakGame.OakCinematicActor
class AOakCinematicActor : public AActor
{
public:
	bool                                         bTeleportPhysic;                                   // 0x458(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetPhysic;                                      // 0x459(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6395[0x5E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakCinematicActor* GetDefaultObj();

	void RemoveSlaveViewLocation(class FName Name);
	void AddSlaveViewLocation(class FName Name, const struct FVector& SlaveViewLocation);
};

// 0xA0 (0x4F8 - 0x458)
// Class OakGame.OakCinematicBrain
class AOakCinematicBrain : public AInfo
{
public:
	uint8                                        Pad_6398[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCinematicPlay;                                   // 0x460(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCinematicStop;                                   // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UOakCinematicBrainData*                CinematicData;                                     // 0x480(0x8)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6399[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelSequencePlayer*                  SequencePlayer;                                    // 0x490(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakUIDataCreditsScreenData*           CreditsScreenData;                                 // 0x498(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCinematicState                       CinematicState;                                    // 0x4A0(0x10)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_639A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMediaTexture*                         MovieTexture;                                      // 0x4D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseMediaAudioSinkProvider*          MovieAudioSinkProvider;                            // 0x4E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMediaPlayer*                          MoviePlayer;                                       // 0x4E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_639C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakCinematicBrain* GetDefaultObj();

	void PlayCinematic(class UOakCinematicTag* CinematicTag);
	void OnSequenceStop();
	void OnRep_CinematicState();
	void OnMovieMediaOpenFailed(const class FString& DeviceUrl);
	void OnMovieMediaOpened(const class FString& DeviceUrl);
	void OnMovieMediaClosed();
	void OnMovieEndReached();
	void OnMovieEndDelayed();
	void OnMediaAssetLoaded(class UMediaSource* MovieSource);
	void OnIntroComplete();
};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakCinematicBrainData
class UOakCinematicBrainData : public UGbxDataAsset
{
public:
	TArray<struct FCinematicData>                Cinematics;                                        // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCinematicBrainData* GetDefaultObj();

};

// 0x30 (0x70 - 0x40)
// Class OakGame.OakCinematicModeData
class UOakCinematicModeData : public UCinematicModeData
{
public:
	bool                                         bAffectsInputAbilities;                            // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectsStatusMenu;                                // 0x41(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectsQuickMenu;                                 // 0x42(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClearMenus;                                       // 0x43(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRestrictWeapons;                                  // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReapCorpses;                                      // 0x45(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideDroppedPickups;                               // 0x46(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectsWeaponActions;                             // 0x47(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AffectsWeaponActions;                              // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_639F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CameraMode;                                        // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxHUDStateData*                      OverrideHUDState;                                  // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OverrideHUDStateName;                              // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableVOIPIcons;                                  // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectsPlayerMovement;                            // 0x69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectsPlayerGravity;                             // 0x6A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63A1[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakCinematicModeData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.OakCinematicTag
class UOakCinematicTag : public UGbxDataAsset
{
public:

	static class UClass* StaticClass();
	static class UOakCinematicTag* GetDefaultObj();

};

// 0x0 (0x3F0 - 0x3F0)
// Class OakGame.OakClassModInventoryBalanceStateComponent
class UOakClassModInventoryBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:

	static class UClass* StaticClass();
	static class UOakClassModInventoryBalanceStateComponent* GetDefaultObj();

};

// 0x0 (0x198 - 0x198)
// Class OakGame.OakClientFriendBeacon
class UOakClientFriendBeacon : public UOnlineBeaconClient
{
public:

	static class UClass* StaticClass();
	static class UOakClientFriendBeacon* GetDefaultObj();

};

// 0x48 (0x1E0 - 0x198)
// Class OakGame.OakClientLobbyBeacon
class UOakClientLobbyBeacon : public UOnlineBeaconClient
{
public:
	uint8                                        Pad_63A2[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakClientLobbyBeacon* GetDefaultObj();

};

// 0x30 (0x1C8 - 0x198)
// Class OakGame.OakClientMatchmakingBeacon
class UOakClientMatchmakingBeacon : public UOnlineBeaconClient
{
public:
	uint8                                        Pad_63A3[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakClientMatchmakingBeacon* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.OakCondition_Grenade_Element
class UOakCondition_Grenade_Element : public UGbxCondition
{
public:
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x88(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCondition_Grenade_Element* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.OakCondition_IsCharacterFrozen
class UOakCondition_IsCharacterFrozen : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UOakCondition_IsCharacterFrozen* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.OakCondition_IsInHostileVehicle
class UOakCondition_IsInHostileVehicle : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UOakCondition_IsInHostileVehicle* GetDefaultObj();

};

// 0x40 (0xC8 - 0x88)
// Class OakGame.OakCondition_MayhemMode
class UOakCondition_MayhemMode : public UGbxCondition
{
public:
	enum class EOakMayhemModeConditionType       Type;                                              // 0x88(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EConditionComparisonOperatorType  Operator;                                          // 0x89(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_63A6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          OtherOperand;                                      // 0x90(0x38)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakCondition_MayhemMode* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.OakCondition_VehicleIsDrivenByAI
class UOakCondition_VehicleIsDrivenByAI : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UOakCondition_VehicleIsDrivenByAI* GetDefaultObj();

};

// 0x8 (0x8A8 - 0x8A0)
// Class OakGame.OakControlledMove
class UOakControlledMove : public UControlledMove
{
public:
	uint8                                        bSpeedAffectedByCryo : 1;                          // Mask: 0x1, PropSize: 0x10x8A0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTriggerOakTriggersAlongTeleport : 1;              // Mask: 0x2, PropSize: 0x10x8A0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlockECHOMenu : 1;                                // Mask: 0x4, PropSize: 0x10x8A0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlockGroundSlam : 1;                              // Mask: 0x8, PropSize: 0x10x8A0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlockActionAbility : 1;                           // Mask: 0x10, PropSize: 0x10x8A0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63A8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakControlledMove* GetDefaultObj();

};

// 0x8 (0x8B0 - 0x8A8)
// Class OakGame.OakControlledMove_ActionAbility
class UOakControlledMove_ActionAbility : public UOakControlledMove
{
public:
	class UOakAction_Anim_ActionAbility*         ActionOwner;                                       // 0x8A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakControlledMove_ActionAbility* GetDefaultObj();

	void OnReceivedActionOwner();
};

// 0x1C0 (0xA68 - 0x8A8)
// Class OakGame.OakControlledMove_PhaseLock
class UOakControlledMove_PhaseLock : public UOakControlledMove
{
public:
	uint8                                        Pad_63A9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          HeightFromGround;                                  // 0x8B0(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                    LiftLocationCurve;                                 // 0x8E8(0x78)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                    PhaseLockTargetBoundsToParticleScaleCurve;         // 0x960(0x78)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          PhaseLockLiftImmunityTag;                          // 0x9D8(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BobStartDelay;                                     // 0x9E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LiftBobFrequency;                                  // 0x9E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LiftBobAmplitude;                                  // 0x9E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LiftLocationCollisionEnableTolerance;              // 0x9EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  FXSocketName;                                      // 0x9F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRegisterWithActionAbility;                        // 0x9F8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_63AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UOakActionAbility>         OwnerActionAbilityClass;                           // 0xA00(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlocksActionAbilityShutdown;                      // 0xA08(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_63AB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakActionAbility*                     OwnerActionAbility;                                // 0xA10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetParticleScale;                               // 0xA18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LiftStartLocation;                                 // 0xA1C(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LiftEndLocation;                                   // 0xA28(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LiftEndFXSocketLocation;                           // 0xA34(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBoxSphereBounds                      TargetFXBounds;                                    // 0xA40(0x1C)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_63AC[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakControlledMove_PhaseLock* GetDefaultObj();

	struct FVector GetSuperSkunkworksReplicationData();
};

// 0x0 (0x8A8 - 0x8A8)
// Class OakGame.OakControlledMove_Player
class UOakControlledMove_Player : public UOakControlledMove
{
public:

	static class UClass* StaticClass();
	static class UOakControlledMove_Player* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class OakGame.OakCustomizationComponent
class UOakCustomizationComponent : public UGbxCustomizationComponent
{
public:

	static class UClass* StaticClass();
	static class UOakCustomizationComponent* GetDefaultObj();

	void GetAvailableCustomizationData(TArray<class UOakCustomizationData*>* UnlockedCustomizations, TArray<class UOakCustomizationData*>* LockedCustomizations);
};

// 0x78 (0x220 - 0x1A8)
// Class OakGame.OakCustomizationData
class UOakCustomizationData : public UGbxCustomizationData
{
public:
	uint8                                        Pad_63AE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakCustomizationData*>         AdditionalCustomizationsToUnlock;                  // 0x1B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UPlayerClassIdentifier*                PlayerClass;                                       // 0x1C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomizationInventoryAssetSetup*     InventorySetup;                                    // 0x1C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInventoryAspectData*>          InventoryAspectList;                               // 0x1D0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FText                                  InventorySetupNameOverride;                        // 0x1E0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  RarityData;                                        // 0x1F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomizationInventoryBalanceData*    BalanceData;                                       // 0x200(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomizationInventoryData*           InventoryData;                                     // 0x208(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 AssetGuid;                                         // 0x210(0x10)(DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakCustomizationData* GetDefaultObj();

};

// 0x50 (0x270 - 0x220)
// Class OakGame.ECHOThemeCustomizationData
class UECHOThemeCustomizationData : public UOakCustomizationData
{
public:
	class FText                                  InitializationText;                                // 0x220(0x18)(Edit, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           EquipSound;                                        // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           UnequipSound;                                      // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DPadPressSound;                                    // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DPadReleaseSound;                                  // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DPadSynthSound;                                    // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ConfirmSound;                                      // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ErrorSound;                                        // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UECHOThemeCustomizationData* GetDefaultObj();

};

// 0x0 (0x470 - 0x470)
// Class OakGame.OakCustomizationManager
class AOakCustomizationManager : public AGbxCustomizationManager
{
public:

	static class UClass* StaticClass();
	static class AOakCustomizationManager* GetDefaultObj();

};

// 0x6E0 (0x780 - 0xA0)
// Class OakGame.OakCustomizationTypeData
class UOakCustomizationTypeData : public UGbxCustomizationTypeData
{
public:
	struct FOakCustomizationThumbnailData        ThumbnailData;                                     // 0xA0(0x6E0)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakCustomizationTypeData* GetDefaultObj();

};

// 0x28 (0x260 - 0x238)
// Class OakGame.OakDamageBasedChallenge
class UOakDamageBasedChallenge : public UOakChallenge
{
public:
	class UWeaponTypeData*                       RequiredWeaponType;                                // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManufacturerData*                     RequiredManufacturer;                              // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGbxDamageType>>    RequiredDamageTypes;                               // 0x248(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bRequireCrit;                                      // 0x258(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireHostile;                                   // 0x259(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncrementBasedOnDamageDealt;                      // 0x25A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTreatMultipleHitsAsSingleHit;                     // 0x25B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63B0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDamageBasedChallenge* GetDefaultObj();

};

// 0xF8 (0x460 - 0x368)
// Class OakGame.OakDamageCauserComponent
class UOakDamageCauserComponent : public UDamageCauserComponent
{
public:
	uint8                                        Pad_63B3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnModifiedWeaponShot;                              // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    FirstShotInClipDamageMultiplier;                   // 0x390(0xC)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    LastShotInClipDamageMultiplier;                    // 0x39C(0xC)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePlayerAsBalanceSourceForLevelSync;             // 0x3A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxPassOverkillDamageToNextShotMultiplier;         // 0x3AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRegisteredWeaponShotModifier> WeaponShotModifiers;                               // 0x3B0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_63B5[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDamageCauserComponent* GetDefaultObj();

	void UnregisterWeaponShotModifier(class UWeaponShotModifier* Modifier, class UObject* ModifierOwner);
	void SetShouldPassOverkillDamageToNextShot(bool bNewValue, class FName Reason);
	void RegisterWeaponShotModifier(class UWeaponShotModifier* Modifier, class UObject* ContextOverride, class UObject* ModifierOwner);
	void ModifiedWeaponShotEvent__DelegateSignature(class AWeapon* Weapon, struct FWeaponShotModifierData& Data);
};

// 0x170 (0x9E8 - 0x878)
// Class OakGame.OakDamageComponent
class UOakDamageComponent : public UDamageComponent
{
public:
	uint8                                        Pad_63C2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnTakeSecondaryHealthDamage;                       // 0x888(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthUpdated;                                   // 0x898(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthTypeNormal;                                // 0x8A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthTypeLow;                                   // 0x8B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthTypeVeryLow;                               // 0x8C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthTypeAdded;                                 // 0x8D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthTypeDepleted;                              // 0x8E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    ShieldAbsorptionChance;                            // 0x8F8(0xC)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnShieldAbsorbedDamage;                            // 0x908(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTakeAnyHealthDamage;                             // 0x918(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDamageBlockEnabled;                               // 0x928(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63C5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDamageBlockData*                      DamageBlockData;                                   // 0x930(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDamageBlock;                                     // 0x938(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDefaultElementalDeath;                           // 0x948(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UHitReactionTag*                       RagdollDeathTag;                                   // 0x958(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63C6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    EvadeChance;                                       // 0x978(0xC)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    IncomingHealingScale;                              // 0x984(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReplenishOnWorldReset;                            // 0x990(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_63C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UWeaponShieldComponent> WeaponShield;                                      // 0x994(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EOakElementalType                 ElementalDeathType;                                // 0x99C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisableElementalDeaths;                           // 0x99D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_63C8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GoreRegionTriggerThreshold;                        // 0x9A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoreRegionLimbScale;                               // 0x9A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GoreSourceMaterialIndex;                           // 0x9A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_63C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGoreAoEDamageData*                    AoEGoreData;                                       // 0x9B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGoreRegionState>              GoreRegions;                                       // 0x9B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UHitReactionTag*                       GoreDeathOverride;                                 // 0x9C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_63CA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDamageComponent* GetDefaultObj();

	void TriggerGoreRegions(class UGoreAoEDamageData* GoreData, const struct FVector& Origin, float Radius);
	void TriggerGoreRegion(class FName BoneName, const struct FVector& HitDirection, bool bIgnoreRestrictions);
	void TriggerDefaultElementalDeath();
	void TriggerClientGoreRegion(struct FGoreRegionEventSummary& EventSummary);
	void SetIgnoreShield(bool IgnoreShield);
	void SetDamageBlockEnabled(bool bNewDamageBlockEnabled);
	bool IsElementalDeath();
	bool HasGoredRegionType(enum class EGoreRegionType REGION);
	bool HasGoredAnyRegionType(int32 RegionTypes);
	void GetValidGoreRegionEventFunctionNames(TArray<class FName>* Array);
	void AddSectionPercentagesAtIndex(int32 Index, const TArray<float>& SectionPercentages);
};

// 0x8 (0xA0 - 0x98)
// Class OakGame.OakDamageFilter
class UOakDamageFilter : public UDamageFilter
{
public:
	bool                                         bFilterElementalType;                              // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EOakElementalType                 ElementalTypeFilter;                               // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_63CB[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDamageFilter* GetDefaultObj();

};

// 0x698 (0x8E8 - 0x250)
// Class OakGame.OakDamageGlobalsData
class UOakDamageGlobalsData : public UDamageGlobalsData
{
public:
	TSubclassOf<class UDamageSource>             CrushDamageSource;                                 // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxAttributeData*                     SkillDamageSourceInstigatorMultiplier;             // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          LevelSyncPlayerReceivedDamageCalc;                 // 0x260(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          LevelSyncPlayerInstigatedDamageCalc;               // 0x298(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          LevelSyncPlayerVersusPlayerDamageCalc;             // 0x2D0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerDifficultyBalanceInfo          DifficultyBalanceInfos[0x3];                       // 0x308(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FStatusEffectApplicationDamageDefaultSettings> StatusEffectApplicationDefaults;                   // 0x320(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakDamageType>            ImpactElementalDamageTypes[0x6];                   // 0x330(0x30)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DamageReceivedSound;                               // 0x360(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DamageReceivedShieldSound;                         // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DamageReceivedCriticalSound;                       // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DamageDealtSound;                                  // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DamageDealtCriticalSound;                          // 0x380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DamageDealtImmuneSound;                            // 0x388(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DamageDealtShieldSound;                            // 0x390(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           HeartbeatWwiseEvent;                               // 0x398(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            HeartbeatIntervalInSecondsRtpc;                    // 0x3A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            HeartbeatDelayInSecondsRtpc;                       // 0x3A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            HeartbeatVolumeRtpc;                               // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowHealthHeartBPM;                                 // 0x3B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VeryLowHealthBPM;                                  // 0x3BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VeryLowHealthTransitionValue;                      // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63CC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseRtpc*                            HealthPercentRtpc;                                 // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealthPercentRtpcTransitionDuration;               // 0x3D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63CD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDamageDisplayInfo                    DamageDisplayInfo;                                 // 0x3D8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FIncomingDamageDisplayInfo            IncomingDamageDisplayInfo;                         // 0x410(0x270)(Edit, NativeAccessSpecifierPublic)
	float                                        ResistDamageReductionFeedbackThreshold;            // 0x680(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeBetweenResistFeedbacks;                     // 0x684(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageDealtFlashDuration;                          // 0x688(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DamageDealtHealthFlash;                            // 0x68C(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DamageDealtCriticalFlash;                          // 0x69C(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DamageDealtShieldFlash;                            // 0x6AC(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DamageDealtFlashParamName;                         // 0x6C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageDealtFlashColorParamName;                    // 0x6C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowHealthEffectBlendSpeed;                         // 0x6D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           LowHealthEffectCurve;                              // 0x6D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LowHealthParticle;                                 // 0x6E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           RevivePercentToLowHealthEffectCurve;               // 0x6E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           RevivePercentToCreepingDeathEffectCurve;           // 0x6F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreepingDeathSecondWindBlendSpeed;                 // 0x6F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           CreepingDeathSecondWindBlendCurve;                 // 0x700(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreepingDeathRevivingBlendSpeed;                   // 0x708(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           CreepingDeathRevivingBlendCurve;                   // 0x710(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       CreepingDeathParticle;                             // 0x718(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldHitDuration;                                 // 0x720(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeBetweenShieldHits;                          // 0x724(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ShieldHitCurve;                                    // 0x728(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldBreakDuration;                               // 0x730(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           ShieldBreakAmountCurve;                            // 0x738(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ShieldBreakIntensityCurve;                         // 0x740(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             ElementalInteractionDamageSource;                  // 0x748(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          SplatDamage;                                       // 0x750(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RecentGoreDamageTime;                              // 0x788(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncomingDamagePresentationQueueDuration;           // 0x78C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FIncomingDamagePresentationSource> IncomingDamagePresentations;                       // 0x790(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FIncomingDamagePresentationGlobalInfo IncomingPresentationGlobalInfo;                    // 0x7A0(0x80)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint32                                       NumProjectilesForQuickPop;                         // 0x820(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63D5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UHealthTypeData>        ArmorHealthType;                                   // 0x828(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UHealthTypeData>        ShieldHealthType;                                  // 0x850(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UHealthTypeData>        FleshHealthType;                                   // 0x878(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UHealthTypeData>        BoneHealthType;                                    // 0x8A0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDeathPinTime;                                   // 0x8C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDeathPinDistance;                               // 0x8CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETraceTypeQuery                   DeathPinTraceChannel;                              // 0x8D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63D6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DeathPinDisableSiblingCollisionDepth;              // 0x8D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DeathPinImpactEffect;                              // 0x8D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             MeleeDamageSource;                                 // 0x8E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakDamageGlobalsData* GetDefaultObj();

};

// 0x40 (0x1F8 - 0x1B8)
// Class OakGame.OakDamageModifierComponent
class UOakDamageModifierComponent : public UDamageModifierComponent
{
public:
	struct FGbxAttributeFloat                    BaseStatusEffectChanceOverride;                    // 0x1B8(0xC)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                    BaseStatusEffectDamageOverride;                    // 0x1C4(0xC)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bStatusEffectDamageIsPercent;                      // 0x1D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_63D7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    BaseStatusEffectDurationOverride;                  // 0x1D4(0xC)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                    GoreModifier;                                      // 0x1E0(0xC)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                    GibModifier;                                       // 0x1EC(0xC)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakDamageModifierComponent* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class OakGame.OakDamageOverTimeManager
class UOakDamageOverTimeManager : public UDamageOverTimeManager
{
public:
	uint8                                        Pad_63D8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDamageOverTimeManager* GetDefaultObj();

};

// 0x18 (0xA0 - 0x88)
// Class OakGame.OakDamageSource
class UOakDamageSource : public UDamageSource
{
public:
	uint8                                        bEligibleForShieldAbsorption : 1;                  // Mask: 0x1, PropSize: 0x10x88(0x1)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayHitNotifySounds : 1;                          // Mask: 0x2, PropSize: 0x10x88(0x1)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTriggersDeathVO : 1;                              // Mask: 0x4, PropSize: 0x10x88(0x1)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseEnvironmentalLevelSync : 1;                    // Mask: 0x8, PropSize: 0x10x88(0x1)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanCauseLargeLiquidBodyExplosionSplash : 1;       // Mask: 0x10, PropSize: 0x10x88(0x1)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanPinOnDeath : 1;                                // Mask: 0x20, PropSize: 0x10x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_192 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_63D9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameStatData*                         KillStat;                                          // 0x90(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  KillEventDamageCategoryName;                       // 0x98(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakDamageSource* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakDamageStatics
class UOakDamageStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakDamageStatics* GetDefaultObj();

	class AWeapon* ResolveDamagingWeapon(class AActor* DamageCauser);
	struct FOakPipelineDamageInput MakeOakPipelineDamageInput(class AActor* DamageCauser, class AActor* DamageReceiver, TSubclassOf<class UGbxDamageType> DamageType, TSubclassOf<class UDamageSource> DamageSource, struct FHitResult& HitInfo, const struct FVector& HitLocation, const struct FVector& HitDirection, const struct FVector& HitForceDirection, const struct FForceSelection& HitForceMagnitude, float BaseStatusEffectChance, float BaseStatusEffectDamage, float BaseStatusEffectDuration, float GoreModifier, float GibModifier);
	bool IsElementalType(class UDamageType* DamageType, enum class EOakElementalType ElementalType);
	bool IsClassElementalType(TSubclassOf<class UDamageType> DamageTypeClass, enum class EOakElementalType ElementalType);
	bool IsAffectedByElementalType(class AActor* Actor, enum class EOakElementalType Type, float Threshold);
	enum class EOakElementalType GetElementalType(class UDamageType* DamageType);
	enum class EOakElementalType GetClassElementalType(TSubclassOf<class UDamageType> DamageTypeClass);
	void CauseDamage(class AActor* DamageCauser, TSubclassOf<class UDamageData> DamageData, class AActor* DamageTarget, float DamageOverride, struct FHitResult& TargetedHitInfo, const struct FVector& TargetedHitDirection, TSubclassOf<class UGbxDamageType> DamageTypeOverride, TSubclassOf<class UDamageSource> DamageSourceOverride, class APawn* AdditionalEventListener, class AActor* SourceActorOverride, class FName SourceSocketOverride, const struct FVector& SourceLocationOverride, const struct FRotator& SourceRotationOverride, const struct FVector& HitLocationOverride, const struct FRotator& HitStartRotationOffsetOverride, const struct FRotator& HitRotationOffsetOverride, float DamageAreaRadiusOverride, const struct FVector& DamageAreaBoxExtentOverride, const struct FForceSelection& ImpactForceOverride, class UExplosionData* ExplosionDataOverride, class UImpactData* ImpactDataOverride, const struct FCauseDamageStatusEffectOverrides& StatusEffectOverrides, const struct FCriticalHitDamageOverrides& CriticalHitOverrides, const struct FDamageGoreModifiers& GoreModifiers, class UParticleSystem* ScreenParticleOverride, bool bRunRadiusDamageOnClient);
	void ApplyDamageInRadius(class UObject* WorldContextObject, float BaseDamage, struct FVector& Origin, float Radius, TSubclassOf<class UGbxDamageType> DamageType, TSubclassOf<class UDamageSource> DamageSource, TArray<class AActor*>& IgnoreActors, class AActor* DamageCauser, class AController* EventInstigator, const struct FForceSelection& BaseImpactForce, enum class ECollisionChannel DamagePreventionChannel, float BaseStatusEffectChance, float BaseStatusEffectDamage, float BaseStatusEffectDuration, bool bDamageFalloff, class UDamageModifierComponent* DamageModifierComponent, class UFeedbackData* InstigatorFeedback, bool bUseInstigatorRadiusScale, float GoreModifier, float GibModifier, class UGameStatData* KillStat);
	void ApplyDamageEx(const struct FOakPipelineDamageInput& PipelineInput, float BaseDamage);
	class AActor* AmputateLimb(class AActor* Actor, struct FAmputateLimbData& Data, const struct FVector& HitDirection, float HitForce);
};

// 0x28 (0x150 - 0x128)
// Class OakGame.OakDamageType
class UOakDamageType : public UGbxDamageType
{
public:
	uint8                                        Pad_63F4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EOakElementalType                 ElementalType;                                     // 0x130(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63F5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDialogEnumValue*                      DialogSystemEnumValue;                             // 0x138(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameStatData*                         KillStat;                                          // 0x140(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDamageToHealthType;                          // 0x148(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63F6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDamageType* GetDefaultObj();

};

// 0x30 (0x1A8 - 0x178)
// Class OakGame.DayNightCycleComponent
class UDayNightCycleComponent : public UActorComponent
{
public:
	float                                        DayBeginTime;                                      // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DayEndTime;                                        // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  NotifyDayBegin;                                    // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  NotifyDayEnd;                                      // 0x190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_63F7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDayNightCycleComponent* GetDefaultObj();

	float GetTimeOfDay();
};

// 0x18 (0x300 - 0x2E8)
// Class OakGame.OakDebugWeaponBuilderButton
class UOakDebugWeaponBuilderButton : public UGbxListItem
{
public:
	class UCheckBox*                             CheckBoxButton;                                    // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            DescriptionText;                                   // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uborder*                               HighlightBackground;                               // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakDebugWeaponBuilderButton* GetDefaultObj();

};

// 0xC0 (0x3B8 - 0x2F8)
// Class OakGame.OakDebugWeaponBuilderMenu
class UOakDebugWeaponBuilderMenu : public UGbxDebugMenuSubmenu
{
public:
	class UBUTTON*                               BuildButton;                                       // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpinBox*                              PlayerLevelGradeSpinner;                           // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            ErrorText;                                         // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxScrollBoxList*                     ManufacturerList;                                  // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxScrollBoxList*                     AmmoTypesList;                                     // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxScrollBoxList*                     InventoryBalancesList;                             // 0x320(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxScrollBoxList*                     PartPickerListLeft;                                // 0x328(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxScrollBoxList*                     PartPickerListRight;                               // 0x330(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakDebugWeaponBuilderButton> OptionButtonClass;                                 // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAvailableManufacturer>        AvailableManufacturers;                            // 0x340(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAvailableAmmoType>            AvailableAmmoTypes;                                // 0x350(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAvailableInventoryBalanceData> AvailableInventoryBalances;                        // 0x360(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAvailablePartData>            AvailableParts;                                    // 0x370(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint64                                       PreviouslySeletedManufacturerIndexes;              // 0x380(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint64                                       PreviouslySeletedAmmoTypes;                        // 0x388(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint64                                       PreviouslySeletedBalanceDefinitions;               // 0x390(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint64                                       PreviouslySeletedPartListLeft;                     // 0x398(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint64                                       PreviouslySeletedPartListRight;                    // 0x3A0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDebugWeaponBuilderButton*          CurrentFocusedOptionButton;                        // 0x3A8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_63F9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDebugWeaponBuilderMenu* GetDefaultObj();

	void OnPlayerLevelChange(float InValue, enum class ETextCommit CommitMethod);
	void OnPartSelectedChanged(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnOptionListItemFocused(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnManufacturerSelectedChanged(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnBuildButtonClicked();
	void OnBalanceDefSelectedChanged(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnAmmoTypeSelectedChanged(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
};

// 0x28 (0x1A0 - 0x178)
// Class OakGame.OakDeveloperPerks
class UOakDeveloperPerks : public UActorComponent
{
public:
	TArray<struct FDeveloperPerk>                Perks;                                             // 0x178(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UEnum*                                 PerkTypeEnum;                                      // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_63FF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDeveloperPerks* GetDefaultObj();

	void UnlockVehicleParts();
	void UnlockCustomizations();
	void SpawnItems(TArray<class UItemPoolData*>& ItemPools, int32 NumItems);
	void ServerUnlockVehicleParts();
	void ServerSpawnItems(TArray<class UItemPoolData*>& ItemPools, int32 NumItems);
	void ServerLoaded();
	void ServerKillAllEnemies();
	void ServerGrantLevels(uint8 NumLevels);
	void ServerGiveCurrency(class UGbxInventoryCategoryData* CurrencyType, int32 Amount);
	class UEnum* PerkTypeEnumFunc();
	void OnDeveloperPerkActivated(uint8 Perk);
	void Loaded();
	void KillAllEnemies();
	void GrantLevels(uint8 NumLevels);
	void GiveCurrency(class UGbxInventoryCategoryData* CurrencyType, int32 Amount);
	class AOakPlayerController* GetOwnerOakPlayerController();
};

// 0x70 (0x2A68 - 0x29F8)
// Class OakGame.OakDialogBlackboard
class UOakDialogBlackboard : public UDialogBlackboard
{
public:
	TArray<class UEchoLogData*>                  TrackingEchoLogs;                                  // 0x29F8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TMap<class UEchoLogData*, struct FEchoLogTrackingInfo> OnTrackedEchoLogFinishedEvents;                    // 0x2A08(0x50)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FDialogScriptPinnedRef>        PinnedScripts;                                     // 0x2A58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakDialogBlackboard* GetDefaultObj();

	void BindEchoLogInitialPlayFinished(class UEchoLogData* EchoLogData, UDelegateProperty_ Event);
};

// 0x68 (0x340 - 0x2D8)
// Class OakGame.OakDialogComponent
class UOakDialogComponent : public UGbxDialogComponent
{
public:
	uint8                                        Pad_6401[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReference            AutoActivateOnMissionObjective;                    // 0x2E0(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            AutoDeactivateOnMissionObjective;                  // 0x310(0x30)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakDialogComponent* GetDefaultObj();

	void SetActiveMissionObjectiveRange(const struct FMissionObjectiveReference& ActivateAt, const struct FMissionObjectiveReference& DeactivateAt);
};

// 0x200 (0x300 - 0x100)
// Class OakGame.OakDialogSettings
class UOakDialogSettings : public UGbxDialogSettings
{
public:
	class UDialogParameter*                      TargetParam;                                       // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      InstigatorParam;                                   // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxItemCalloutDistance;                            // 0x110(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6403[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UDialogScriptData*>             AlwaysActiveDialogScripts;                         // 0x118(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDialogStyle*                          EchoLogStyle;                                      // 0x128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          DryFireCalloutEvent;                               // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerIdleTime;                                    // 0x138(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6404[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDialogEvent*                          PlayerIdleCallout;                                 // 0x140(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                         SpotEnemyDistanceRange;                            // 0x148(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpottedEnemyGameplayTag;                           // 0x150(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          SpottedEnemyCallout;                               // 0x158(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          PlayerAlertEvent;                                  // 0x160(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      PlayerAlertType;                                   // 0x168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          VehicleSpawnedEvent;                               // 0x170(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          VehicleSwappedSeatEvent;                           // 0x178(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDialogScriptToLoadEntry>      DialogScriptsToLoadWithLevel;                      // 0x180(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<enum class EUIDialogCallout, class UDialogEvent*> UICallouts;                                        // 0x190(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDialogEvent*                          MultikillEvent;                                    // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MultikillRequiredKills;                            // 0x1E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MultikillMaxInterval;                              // 0x1EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogEvent*                          KillStreakEvent;                                   // 0x1F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillStreakRequiredScore;                           // 0x1F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillStreakMinWaitBetweenScores;                    // 0x1FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillStreakTimePenaltyPerSecond;                    // 0x200(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6406[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UDialogEnumValue*, struct FGameplayTag> GameplayTagMappings;                               // 0x208(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class UWeaponTypeData*, class UDialogEnumValue*> WeaponTypeEnumValues;                              // 0x258(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class UDialogNameTag*, TSoftObjectPtr<class UDialogScriptData>> PlayerDialogNameScripts;                           // 0x2A8(0x50)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        DeferredSubtitleMaxDelay;                          // 0x2F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6407[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDialogSettings* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.OakDialogSystemCustomization
class UOakDialogSystemCustomization : public UObject
{
public:
	uint8                                        Pad_6408[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDialogSystemCustomization* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class OakGame.OakDiscordManager
class UOakDiscordManager : public UObject
{
public:
	uint8                                        Pad_6409[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDiscordManager* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class OakGame.OakDownloadableContentGlobalsData
class UOakDownloadableContentGlobalsData : public UDataAsset
{
public:
	TArray<struct FOakDownloadableEntitlementCurrencyType> Currencies;                                        // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UDownloadableEntitlementSourceData*    SparkEntitlementSourceData;                        // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDownloadableEntitlementSourceData*    DLCEntitlementSourceData;                          // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDownloadableEntitlementSourceData*    DebugEntitlementSourceData;                        // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakDownloadableContentGlobalsData* GetDefaultObj();

};

// 0x18 (0x78 - 0x60)
// Class OakGame.OakDownloadableContentLicenseData
class UOakDownloadableContentLicenseData : public UDownloadableContentLicenseData
{
public:
	uint8                                        Pad_640B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 AssetGuid;                                         // 0x68(0x10)(Edit, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakDownloadableContentLicenseData* GetDefaultObj();

};

// 0x18 (0xA0 - 0x88)
// Class OakGame.OakDownloadableEntitlementSetData
class UOakDownloadableEntitlementSetData : public UDownloadableContentData
{
public:
	class UDownloadableEntitlementSourceData*    EntitlementSourceData;                             // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FDownloadableEntitlementSetItem> Entitlements;                                      // 0x90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakDownloadableEntitlementSetData* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.OakDownloadableInventorySetData
class UOakDownloadableInventorySetData : public UDownloadableInventorySetData
{
public:

	static class UClass* StaticClass();
	static class UOakDownloadableInventorySetData* GetDefaultObj();

};

// 0x78 (0x7C0 - 0x748)
// Class OakGame.OakDroneProjectile
class AOakDroneProjectile : public AOakAIBalancedProjectile
{
public:
	uint8                                        Pad_640F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      Sphere;                                            // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakDroneProjectileMovementComponent*  DroneMovement;                                     // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakDamageComponent*                   OakDamage;                                         // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetableComponent*                  Targetable;                                        // 0x778(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetingComponent*                   Targeting;                                         // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIPerceptionStimuliSourceComponent*   AIPerceptionStimuliSource;                         // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerGivenNicknameKey;                            // 0x790(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseTargetOfMovementTarget;                        // 0x798(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6410[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnCostSelection                   SpawnCostSelection;                                // 0x7A0(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class EPlayerAlertType                  PlayerAlertType;                                   // 0x7B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6412[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakDroneProjectile* GetDefaultObj();

	void SetMovementTarget(class AActor* MovementTarget);
	class AActor* GetMovementTarget();
};

// 0x48 (0x580 - 0x538)
// Class OakGame.OakDroneProjectileAnimInstance
class UOakDroneProjectileAnimInstance : public UGbxAnimInstance
{
public:
	class AOakDroneProjectile*                   OakDroneProjectileOwner;                           // 0x538(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Speed2DRaw;                                        // 0x540(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Speed2D;                                           // 0x544(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VelocityZ;                                         // 0x548(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Direction;                                         // 0x54C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardDirection;                                  // 0x550(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightDirection;                                    // 0x554(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpDirection;                                       // 0x558(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RotationalVelocity;                                // 0x55C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6413[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDroneProjectileAnimInstance* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class OakGame.EnvQueryContext_Drone_MovementTarget
class UEnvQueryContext_Drone_MovementTarget : public UEnvQueryContext_EnvQueryParam
{
public:

	static class UClass* StaticClass();
	static class UEnvQueryContext_Drone_MovementTarget* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class OakGame.EnvQueryContext_Drone_HoverTargetPos
class UEnvQueryContext_Drone_HoverTargetPos : public UEnvQueryContext_EnvQueryParam
{
public:

	static class UClass* StaticClass();
	static class UEnvQueryContext_Drone_HoverTargetPos* GetDefaultObj();

};

// 0x158 (0x420 - 0x2C8)
// Class OakGame.OakDroneProjectileMovementComponent
class UOakDroneProjectileMovementComponent : public UGbxProjectileMovementComponent
{
public:
	class AOakDroneProjectile*                   Drone;                                             // 0x2C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStrictMovement;                                   // 0x2D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakDroneMovementMode             MovementMode;                                      // 0x2D1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakDroneFacingMode               FacingMode;                                        // 0x2D2(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_641B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationInterpSpeed;                               // 0x2D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeactiveWhenMovementTargetDies;                   // 0x2D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeactivateWhenInstigatorDies;                     // 0x2D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_641C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                MovementTarget;                                    // 0x2E0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MovementTargetLocation;                            // 0x2E8(0xC)(BlueprintVisible, BlueprintReadOnly, Net, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceUseTargetLocation;                           // 0x2F4(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFaceMovementDirectionWhenNoTarget;                // 0x2F5(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_641E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                FacingTarget;                                      // 0x2F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ForcedFacingTarget;                                // 0x300(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FacingTargetChanged;                               // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        DroneSpeed;                                        // 0x318(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSpeed;                                        // 0x31C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DroneAccelerationTime;                             // 0x320(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverAltitude;                                     // 0x324(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverAltitudeThreshold;                            // 0x328(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverRadius;                                       // 0x32C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverRadiusMin;                                    // 0x330(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6420[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HoverTargetSocket;                                 // 0x338(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                         HoverAngle;                                        // 0x340(0x8)(Edit, BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bUseHoverAngle;                                    // 0x348(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6421[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StopHomingDistance;                                // 0x34C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEnvQueryParams                       HoverQuery;                                        // 0x350(0xB8)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6422[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseHoverQuery;                                    // 0x40C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6423[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HoverQueryLocation;                                // 0x410(0xC)(Net, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6424[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakDroneProjectileMovementComponent* GetDefaultObj();

	void SetMovementTargetLocation(const struct FVector& NewMovementTargetLocation);
	void SetMovementTarget(class AActor* NewMovementTarget);
	void SetMovementMode(enum class EOakDroneMovementMode NewMovementMode, class AActor* NewMovementTarget);
	void SetForceFacingTarget(class AActor* NewFacingTarget);
	void OnRep_MovementMode();
};

// 0x18 (0xA0 - 0x88)
// Class OakGame.OakPresentableStatusEffectData
class UOakPresentableStatusEffectData : public UStatusEffectData
{
public:
	class UOakStatusEffectPresentationData*      FXData;                                            // 0x88(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakStatusEffectPresentationData*      PresentationData;                                  // 0x90(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPresentableStatusEffectValueStrategy ValueStrategy;                                     // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6427[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakPresentableStatusEffectData* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class OakGame.OakElementalEffectData
class UOakElementalEffectData : public UOakPresentableStatusEffectData
{
public:

	static class UClass* StaticClass();
	static class UOakElementalEffectData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakElementalEffectBucketProviderInterface
class IOakElementalEffectBucketProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IOakElementalEffectBucketProviderInterface* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakEULAData
class UOakEULAData : public UGbxDataAsset
{
public:
	TArray<struct FOakEULAData_EULA>             EULAs;                                             // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakEULAData* GetDefaultObj();

};

// 0x54 (0x5B0 - 0x55C)
// Class OakGame.OakFirstPersonComponent
class UOakFirstPersonComponent : public UFirstPersonComponent
{
public:
	float                                        CenterCrosshairAdjustedZ;                          // 0x55C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6428[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakFirstPersonComponent* GetDefaultObj();

};

// 0x110 (0x140 - 0x30)
// Class OakGame.OakFreezeData
class UOakFreezeData : public UGbxDataAsset
{
public:
	TSubclassOf<class UDestructibleComponent>    DestructibleComponent;                             // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> FreezeCE;                                          // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction_CoordinatedEffect> ThawCE;                                            // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FreezeTime;                                        // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThawTime;                                          // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThawScaleDelay;                                    // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_642A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicalMaterial*                     ImpactPhysicalMaterial;                            // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDestructibleMesh*                     DestructibleSupportMesh;                           // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StaticSupportMesh;                                 // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            SupportMeshTransform;                              // 0x70(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        GroundSupportMaxOffset;                            // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_642C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    GroundDecalMaterial;                               // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GroundDecalSize;                                   // 0xB0(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundDecalDuration;                               // 0xBC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundDecalFadeDuration;                           // 0xC0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_642D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxDamageType>            FreezeFallingDamageType;                           // 0xC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             FreezeFallingDamageSource;                         // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          FreezeFallingDamageScale;                          // 0xD8(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FForceSelection                       FreezeFallingForce;                                // 0x110(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UImpactData*                           FreezeFallingImpactData;                           // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockVehicle;                                     // 0x138(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_642E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakFreezeData* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class OakGame.OakGameActivityAdapter
class UOakGameActivityAdapter : public UObject
{
public:
	uint8                                        Pad_6430[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakGameActivityAdapter* GetDefaultObj();

};

// 0x410 (0x1650 - 0x1240)
// Class OakGame.OakGameEngine
class UOakGameEngine : public UGameEngine
{
public:
	uint8                                        Pad_6431[0x410];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakGameEngine* GetDefaultObj();

};

// 0x1298 (0x14B0 - 0x218)
// Class OakGame.OakGameInstance
class UOakGameInstance : public UGbxGameInstance
{
public:
	uint8                                        Pad_6456[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakSingletons*                        OakSingletons;                                     // 0x220(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6457[0x3C0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxMenuInput*                         GbxMenuInput;                                      // 0x5E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxPCTextChatBuffer*                  PCTextChatBuffer;                                  // 0x5F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGbxGFxMenu*>                   AlwaysLoadedMenuInstances;                         // 0x5F8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDevMapToMapId>                DevMapToMapIds;                                    // 0x608(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPlayerClassToClassId>         PlayerClassToClassIds;                             // 0x618(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6458[0x370];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIViewHandle>              PendingUILoads;                                    // 0x998(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6459[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LoadingScreenFadeTime;                             // 0x9BC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_645A[0x140];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlayerClassIdentifier*>        AllPlayerClasses;                                  // 0xB00(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FConditionalSavegameExpression> DefaultSaveGameEvaluator;                          // 0xB10(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_645C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LobbyBeaconTemplateName;                           // 0xB38(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MatchmakingBeaconTemplateName;                     // 0xB48(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  FallbackLaunchSaveGameMapName;                     // 0xB58(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHideShiftUsersWhenCrossplayIsToggledOff;          // 0xB60(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRestrictShiftSessionInvitesWhenCrossplayIsToggledOff; // 0xB61(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRestrictCrossPlatformJoinsWhenCrossplayIsToggledOff; // 0xB62(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_645D[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakManagedActorManager*               ManagedActorManager;                               // 0xB68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_645E[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TScriptInterface<class INameplateInfoProviderInterface>> PlayerTargetables;                                 // 0xBD0(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                         bIsPlayerVersusPlayerCollisionEnabled;             // 0xBE0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_645F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakDialogSystemCustomization*         OakDialogSystemCustomization;                      // 0xBE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSelectedInitialPlayer;                         // 0xBF0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6460[0xFF];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMatchmakingTest*                      MatchmakingTest;                                   // 0xCF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6461[0x3D8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UOakOnlineStatsHelper>     OnlineStatsHelper;                                 // 0x10D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakOnlineStatsHelper*                 StatsHelperInst;                                   // 0x10D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOakModifierManager*>           ModifierManagers;                                  // 0x10E0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UOakDiscordManager*                    DiscordManager;                                    // 0x10F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6462[0xD0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PresenceUpdateTimerSeconds;                        // 0x11C8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRefreshPresenceOnSessionUpdates;                  // 0x11CC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6464[0x1AB];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLootAudioStinger>             LootAudioStingers;                                 // 0x1378(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        CooldownBeforeNextLootAudioStinger;                // 0x1388(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6465[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGbxMenuData*>                  TempMenuDataReferences;                            // 0x1390(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6466[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakGameInstance* GetDefaultObj();

	void UpdateMainMenuPlayerStandIns();
	void StopMatchmakingTest();
	void StartMatchmakingTest(TSubclassOf<class UMatchmakingTest> InMatchmakingTest);
	bool ShouldStartNewGameFlow(class UObject* WorldContextObject);
	void SetSplitscreenViewportEnabled(bool bEnabled);
	void ServerPartyListenToECHOData(class UEchoLogData* EchoLogData, class UGbxDialogComponent* PlayOnSpeaker);
	void SendPlayerAreaObjectStartedEvent(class UObject* WorldContextObject);
	void ResetRegionStage(class URegionData* REGION);
	void RemovePlayerAlert(class AActor* TargetedActor);
	void RemoveManagedActor(class AActor* TheActor, bool bDestroyActor);
	void OnTrialErrorMessageClicked(class FName ChoiceNameId, int32 ControllerId);
	void OnSplitscreenDialogDismissed(class FName ChoiceNameId, int32 ControllerId);
	void OnRemoveShiftFriendConfirmed(class FName ChoiceNameId, int32 ControllerId);
	void OnRemoveFriendConfirmed(class FName ChoiceNameId, int32 ControllerId);
	void OnProfileErrorMessageClicked(class FName ChoiceNameId, int32 ControllerId);
	void OnNATHelpChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnModalDialogChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnControllerDisconnectClicked(class FName ChoiceNameId, int32 ControllerId);
	void OnConfirmSplitscreenLeave(class FName ChoiceNameId, int32 ControllerId);
	void OnConfirmMatchClicked(class UGbxGFxDialogBox* SourceDialog, class FName ChoiceNameId, struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmKickPlayer(class FName ChoiceNameId, int32 ControllerId);
	void OnConfirmKickNetworkedPlayersForJoin(class FName ChoiceNameId, int32 ControllerId);
	void OnConfirmDisconnect(class FName ChoiceNameId, int32 ControllerId);
	void OnConfirmApplyMicropatches(class FName ChoiceNameId, int32 ControllerId);
	void OnBlockUserConfirmed(class FName ChoiceNameId, int32 ControllerId);
	bool IsMenuLevel();
	bool IsLoadingScreenStillVisible(class UWorld* World);
	int32 GetManagedActorCount(class UOakManagedActorDefinition* Type, class AActor* TheOwner);
	void DebugSplitscreenLeave(uint32 ControllerId);
	void DebugSplitscreenJoin(uint32 ControllerId);
	void AddPickupAudioStinger(class AOakInventoryItemPickup* Pickup, class UWwiseEvent* Sound);
	void AddPickupAudioCue(class AActor* SoundActor, class UWwiseEvent* Sound);
	void AddManagedActor(class AActor* TheActor, class UOakManagedActorDefinition* Type, class AActor* TheOwner);
};

// 0x130 (0x678 - 0x548)
// Class OakGame.OakGameMode
class AOakGameMode : public AGbxGameMode
{
public:
	uint8                                        Pad_6476[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UItemPoolData*                         DefaultPlayerWeapon;                               // 0x5F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventFightForYourLifeInRespawnRestrictedVolumes; // 0x600(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6477[0x77];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakGameMode* GetDefaultObj();

	void UpdateNumPlayersAlive(int32 NewNumTotalPlayers);
	void TravelToStationInterrupted(class UTravelStationData* TravelStation);
	bool RespawnPlayer(class AOakPlayerController* OakPlayerController, bool bQuickRes);
	void PrepareToTravelToStation(class UTravelStationData* TravelStation, class APawn* ActivatingPawn);
	class ATravelStationTracker* GetTravelStationTracker();
	class AActor* FindPlayerStation(class AController* Player, const class FString& IncomingName);
	bool CanTravelToStation(class UTravelStationData* TravelStation, class AController* OptionalInstigator);
	bool CanTravelThroughStations(class AController* OptionalInstigator);
};

// 0x0 (0x470 - 0x470)
// Class OakGame.OakGameSession
class AOakGameSession : public AGameSession
{
public:

	static class UClass* StaticClass();
	static class AOakGameSession* GetDefaultObj();

};

// 0x4D0 (0xA68 - 0x598)
// Class OakGame.OakGameState
class AOakGameState : public AGbxGameState
{
public:
	class AMissionTrackerBase*                   MissionTracker;                                    // 0x598(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATravelStationTracker*                 TravelStationTracker;                              // 0x5A0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADuelManager*                          DuelManager;                                       // 0x5A8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakModifierManagerActor*              ModifierManager;                                   // 0x5B0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  BossBarEventDelegate;                              // 0x5B8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6489[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBossbarEventData                     BossBarData;                                       // 0x5F8(0x10)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class AOakMusicProvider*>             MusicProviders;                                    // 0x608(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class AElementalInteractionManager*          ElementalInteractionManager;                       // 0x618(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerBannerManager*                  PlayerBannerManager;                               // 0x620(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENewGameState                     StartGameState;                                    // 0x628(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartGameNumPlayersChosen;                         // 0x62C(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartGameTimer;                                    // 0x630(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_648A[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bServerMapLoadComplete;                            // 0x650(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bServerLoadingScreenHidden;                        // 0x651(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_648B[0x36];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMayhemModeState                      MayhemModeState;                                   // 0x688(0x40)(Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_648C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnMayhemModeUpdatedForBlueprint;                   // 0x6E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_648D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bForceDisableLevelSync;                            // 0x6F1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSyncDamageToExpSyncLevel;                         // 0x6F2(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMultiplayerLootMode              MultiplayerLootMode;                               // 0x6F3(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPreventDestroyedItemsToLostLoot;                  // 0x6F4(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EOakGameStateUIGroupMode          CurrentGroupMode;                                  // 0x6F5(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6490[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InventoryShopResetPeriod;                          // 0x6F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEffectivePlayerCountData             EffectivePlayerCountData;                          // 0x6FC(0x8)(Net, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6491[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EffectiveExpSyncLevel;                             // 0x708(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedSecondsBeforeShopsReset;                 // 0x70C(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocalSecondsBeforeShopsReset;                      // 0x710(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6492[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxHUDStateData*                      CurrentHUDState;                                   // 0x728(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bServerSkippedIntroMovie;                          // 0x730(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bServerFinishedRockNRollIntro;                     // 0x731(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6493[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentPlayThrough;                                // 0x738(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6494[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        PlayerTargetingActors;                             // 0x748(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                         bInfiniteAmmo;                                     // 0x758(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6495[0x9F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayerWeaponsRestricted;                          // 0x7F8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6496[0x9F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerGlobalInputLocks;                            // 0x898(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6497[0xEC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CleanupPickupTriggerCount;                         // 0x988(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CleanupPickupRemainderCount;                       // 0x98C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AOakInventoryItemPickup*>       PickupList;                                        // 0x990(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AOakInventoryItemPickup*>       PickupCleanupList;                                 // 0x9A0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AOakProjectile*>                GrenadeList;                                       // 0x9B0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        CachedNumProjectilesForQuickPop;                   // 0x9C0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6498[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakCharacter*>                 NameTaggedCharacters;                              // 0x9C8(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UTutorialMessageDataAsset*>     CurrentTutorialMessages;                           // 0x9D8(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	struct FMapIDData                            LastTraveledMapID;                                 // 0x9E8(0x2)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6499[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGlobalScreenParticleData>     GlobalScreenParticles;                             // 0x9F0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                         bClientJoining;                                    // 0xA00(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_649A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLuckAssociation>              GlobalLuck;                                        // 0xA08(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnNameTaggedCharactersChanged;                     // 0xA18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLastTravelIDsChanged;                            // 0xA28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGbxAttributeInteger                  SpawnOptionLevel;                                  // 0xA38(0xC)(BlueprintVisible, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       MicropatchSwitches;                                // 0xA44(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWaitingForEncounterVisibility;                    // 0xA48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHostWaitingForEncounterLoad;                      // 0xA49(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_649C[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakGameState* GetDefaultObj();

	void StaticUnregisterGlobalScreenParticle(class UObject* WorldContextObject, class FName Tag);
	void StaticRegisterGlobalScreenParticle(class UObject* WorldContextObject, const struct FGlobalScreenParticleData& ScreenParticle);
	void SetMapTravelIDs(class UObject* WorldContextObject, uint8 ZoneNameID, uint8 MapNameID, float MinWaitTime, const struct FLatentActionInfo& LatentInfo);
	void RemoveNameTaggedCharacter(class AOakCharacter* CharacterToRemove);
	void PlayEventOnBossBar(class AOakCharacter* BossBarCharacter, enum class EBossbarEventType BossBarEvent);
	void OnRep_StartGameTimer();
	void OnRep_ServerSkippedIntroMovie();
	void OnRep_ServerMapLoadComplete();
	void OnRep_ServerLoadingScreenHidden();
	void OnRep_SecondsBeforeShopsReset();
	void OnRep_MicropatchSwitches(uint32 OldMicropatchSwitches);
	void OnRep_MayhemModeState();
	void OnRep_LastTraveledMapID();
	void OnRep_EffectiveExpSyncLevel();
	void OnRep_CurrentTutorialMessages();
	void OnRep_CurrentHUDState();
	void OnRep_BossBarData();
	void OnNameTaggedCharactersChanged__DelegateSignature();
	void OnLastTravelIDsChanged__DelegateSignature();
	void OnBossDestroyed(class AActor* DestroyedActor);
	void OnBossBarEvent__DelegateSignature(struct FBossbarEventData& EventData);
	TArray<class AOakCharacter*> GetNameTaggedCharacters();
	bool GetCurrentTravelIDs(class UObject* WorldContextObject, struct FMapIDData* OutTravelIDs);
	void ClientMatchmakingStateChanged(enum class EMatchmakingState MatchmakingState);
	void ClientMatchmakingBackup();
	void ClientBroadcastKilledEnemyFriendEvent(enum class EKilledEnemyFriendEventType KilledEnemyFriendEventType, uint32 EnemyUINameHash);
	void ClientBroadcastFriendEvent_PropagateRareSpawnMission(class UObject* WorldContextObject, TSubclassOf<class UMission> MissionClass, class UGameStatData* StatData);
	void ClearNameTaggedCharacters();
	void BreakMapIDData(const struct FMapIDData& InMapIDData, uint8* ZoneNameID, uint8* MapNameID);
	void AddNameTaggedCharacter(class AOakCharacter* CharacterToAdd);
};

// 0xB0 (0x228 - 0x178)
// Class OakGame.OakGameUserSettings
class UOakGameUserSettings : public UGameUserSettings
{
public:
	enum class EResolutionScale                  ResolutionScale;                                   // 0x178(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFrameRateLimit                   FrameRateLimitMode;                                // 0x179(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_64F3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CustomFrameRateLimit;                              // 0x17C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEnableCameraMotionBlur;                           // 0x180(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEnablePerObjectMotionBlur;                        // 0x181(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEnableCAS;                                        // 0x182(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGraphicsQuality                  GraphicsQualityMode;                               // 0x183(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGraphicsQuality                  RecommendedGraphicsQualityMode;                    // 0x184(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETextureStreamingQuality          TextureStreamingQuality;                           // 0x185(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EMaterialQuality                  MaterialQuality;                                   // 0x186(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_64F5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AntiAliasingModeIndex;                             // 0x188(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAnisotropicFilteringType         AnisotropicFilteringMode;                          // 0x18C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EShadowQuality                    ShadowQualityMode;                                 // 0x18D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_64F6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PerformanceStatsLevel;                             // 0x190(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EEnvironmentTextureDetail         EnvironmentTextureDetailMode;                      // 0x194(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EDrawDistance                     DrawDistanceMode;                                  // 0x195(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EEnvironmentDetail                EnvironmentDetailMode;                             // 0x196(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETerrainType                      TerrainMode;                                       // 0x197(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFoliageDensity                   FoliageMode;                                       // 0x198(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EVolumetricFogType                VolumetricFogType;                                 // 0x199(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EScreenSpaceReflections           ScreenSpaceReflectionsMode;                        // 0x19A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECharacterTextureDetail           CharacterTextureDetailMode;                        // 0x19B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECharacterDetail                  CharacterDetailMode;                               // 0x19C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAmbientOcclusionQuality          AmbientOcclusionQualityMode;                       // 0x19D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EAMD_FSR2_Preset                  AMD_FSR2_Preset;                                   // 0x19E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_64F8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AMD_FSR2_Sharpness_Preset;                         // 0x1A0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EdgeDetectionTexelOffset;                          // 0x1A4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EBenchmarkDataOutputMode          BenchmarkDataOutputMode;                           // 0x1A8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_64F9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UISafeFrameScaling;                                // 0x1AC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HDRBrightness;                                     // 0x1B0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Brightness;                                        // 0x1B4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BlackLevel;                                        // 0x1B8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HdrUIBrightness;                                   // 0x1BC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LastBenchmarkDateTime;                             // 0x1C0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LastBenchmarkDataOutputPath;                       // 0x1D0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBenchmarkAvgFPS;                               // 0x1E0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBenchmarkAvgFrameTime;                         // 0x1E4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBenchmarkAvgCPU;                               // 0x1E8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBenchmarkAvgGPU;                               // 0x1EC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBenchmarkLoadTimeSeconds;                      // 0x1F0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_64FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AnalyticsTag;                                      // 0x1F8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGraphicsQuality                  OverrideGraphicsQualityMode;                       // 0x208(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_64FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TextureStreamingViewBoostScale;                    // 0x20C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TextureStreamingViewBoostScaleOverride;            // 0x210(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TextureStreamingAdaptiveBoostScale;                // 0x214(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TextureStreamingAdaptiveBoostScaleOverride;        // 0x218(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TextureStreamingPoolSizeMB;                        // 0x21C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TextureStreamingPoolSizeMBOverride;                // 0x220(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPerformedDirectXBetaUpgrade;                   // 0x224(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_64FC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakGameUserSettings* GetDefaultObj();

	void SetVolumetricFogMode(enum class EVolumetricFogType NewMode);
	void SetTextureStreamingQuality(enum class ETextureStreamingQuality NewMode);
	void SetTerrainDetailMode(enum class ETerrainType NewMode);
	void SetShadowQualityMode(enum class EShadowQuality NewMode);
	void SetScreenSpaceReflectionsMode(enum class EScreenSpaceReflections NewMode);
	void SetResolutionScalePercentage(enum class EResolutionScale NewMode);
	void SetMaterialQuality(enum class EMaterialQuality NewMode);
	void SetGraphicsQualityMode(enum class EGraphicsQuality NewMode, bool bForce);
	void SetFrameRateLimitMode(enum class EFrameRateLimit NewMode);
	void SetFoliageMode(enum class EFoliageDensity NewMode);
	void SetEnvironmentDetailMode(enum class EEnvironmentDetail NewMode);
	void SetEnablePerObjectMotionBlur(bool NewMode);
	void SetEnableCAS(bool bNewValue);
	void SetEnableCameraMotionBlur(bool bNewValue);
	void SetEdgeDetectionTexelOffset(float NewOffset);
	void SetDrawDistanceMode(enum class EDrawDistance NewMode);
	void SetDisplayPerformanceStatsMode(int32 NewMode);
	void SetCustomFrameRateLimit(int32 NewLimit);
	void SetCharacterDetailMode(enum class ECharacterDetail NewMode);
	void SetBenchmarkDataOutputMode(enum class EBenchmarkDataOutputMode NewMode);
	void SetAntiAliasingMode(int32 bNewValue);
	void SetAnisotropicFilteringMode(enum class EAnisotropicFilteringType NewMode);
	void SetAMD_FSR2_Sharpness_Preset(float NewPreset);
	void SetAMD_FSR2_Preset(enum class EAMD_FSR2_Preset NewPreset);
	void SetAmbientOcclusionQualityMode(enum class EAmbientOcclusionQuality NewMode);
	enum class EVolumetricFogType GetVolumetricFogMode();
	enum class ETextureStreamingQuality GetTextureStreamingQuality();
	enum class ETerrainType GetTerrainDetailMode();
	enum class EShadowQuality GetShadowQualityMode();
	enum class EScreenSpaceReflections GetScreenSpaceReflectionsMode();
	enum class EResolutionScale GetResolutionScalePercentage();
	enum class EGraphicsQuality GetRecommendedGraphicsQualityMode();
	enum class EGraphicsQuality GetOverrideGraphicsQualityMode();
	int32 GetNumAntiAliasingModes();
	enum class EMaterialQuality GetMaterialQuality();
	enum class EGraphicsQuality GetGraphicsQualityMode();
	enum class EFrameRateLimit GetFrameRateLimitMode();
	enum class EFoliageDensity GetFoliageMode();
	enum class EEnvironmentDetail GetEnvironmentDetailMode();
	bool GetEnablePerObjectMotionBlur();
	bool GetEnableCAS();
	bool GetEnableCameraMotionBlur();
	float GetEdgeDetectionTexelOffset();
	enum class EDrawDistance GetDrawDistanceMode();
	int32 GetDisplayPerformanceStatsMode();
	enum class EVolumetricFogType GetDefaultVolumetricFogMode();
	enum class ETextureStreamingQuality GetDefaultTextureStreamingQuality();
	enum class ETerrainType GetDefaultTerrainDetailLevel();
	enum class EShadowQuality GetDefaultShadowQualityMode();
	enum class EScreenSpaceReflections GetDefaultScreenSpaceReflectionsMode();
	enum class EResolutionScale GetDefaultResolutionScalePercentage();
	bool GetDefaultPerObjectMotionBlurEnabled();
	enum class EMaterialQuality GetDefaultMaterialQuality();
	enum class EGraphicsQuality GetDefaultGraphicsQualityMode();
	enum class EFrameRateLimit GetDefaultFrameRateLimitMode();
	enum class EFoliageDensity GetDefaultFoliageMode();
	enum class EEnvironmentDetail GetDefaultEnvironmentDetailMode();
	float GetDefaultEdgeDetectionTexelOffset();
	enum class EDrawDistance GetDefaultDrawDistanceMode();
	int32 GetDefaultDisplayPerformanceStatsMode();
	int32 GetDefaultCustomFrameRateLimit();
	enum class ECharacterDetail GetDefaultCharacterDetailMode();
	bool GetDefaultCAS();
	bool GetDefaultCameraMotionBlurEnabled();
	enum class EBenchmarkDataOutputMode GetDefaultBenchmarkDataOutputMode();
	int32 GetDefaultAntiAliasingMode();
	enum class EAnisotropicFilteringType GetDefaultAnisotropicFilteringMode();
	float GetDefaultAMD_FSR2_Sharpness_Preset();
	enum class EAMD_FSR2_Preset GetDefaultAMD_FSR2_Preset();
	enum class EAmbientOcclusionQuality GetDefaultAmbientOcclusionQualityMode();
	int32 GetCustomFrameRateLimit();
	enum class ECharacterDetail GetCharacterDetailMode();
	enum class EBenchmarkDataOutputMode GetBenchmarkDataOutputMode();
	class FText GetAntiAliasingModeName(int32 Mode);
	int32 GetAntiAliasingMode();
	enum class EAnisotropicFilteringType GetAnisotropicFilteringMode();
	float GetAMD_FSR2_Sharpness_Preset();
	enum class EAMD_FSR2_Preset GetAMD_FSR2_Preset();
	enum class EAmbientOcclusionQuality GetAmbientOcclusionQualityMode();
};

// 0x28 (0x350 - 0x328)
// Class OakGame.OakGameViewportClient
class UOakGameViewportClient : public UGbxGameViewportClient
{
public:
	uint8                                        Pad_6500[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakGameViewportClient* GetDefaultObj();

	void SetTwoPlayerSplitScreenType(const class FString& SplitScreenType);
};

// 0x0 (0x5A0 - 0x5A0)
// Class OakGame.OakGFxHUDContainer
class UOakGFxHUDContainer : public UGbxGFxHUDContainer
{
public:

	static class UClass* StaticClass();
	static class UOakGFxHUDContainer* GetDefaultObj();

};

// 0xF0 (0x210 - 0x120)
// Class OakGame.OakGlobalAIData
class UOakGlobalAIData : public UGlobalAIData
{
public:
	float                                        DownerDistance;                                    // 0x120(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6502[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          DownerDisabledTag;                                 // 0x128(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          AIAccuracyMaxScalePT1;                             // 0x130(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          AIAccuracyMinScalePT1;                             // 0x168(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          AIAccuracyMinScalePT2;                             // 0x1A0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          AIAccuracyMaxScalePT2;                             // 0x1D8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakGlobalAIData* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.OakGlobalInputManager
class UOakGlobalInputManager : public UGbxGlobalInputManager
{
public:
	uint8                                        Pad_6506[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakGlobalInputManager* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class OakGame.OakGlobalMissionGraph
class UOakGlobalMissionGraph : public UGlobalMissionGraph
{
public:

	static class UClass* StaticClass();
	static class UOakGlobalMissionGraph* GetDefaultObj();

};

// 0x100 (0x190 - 0x90)
// Class OakGame.OakGlobalsData
class UOakGlobalsData : public UGbxGlobalsData
{
public:
	class UGbxUIGlobals*                         UIGlobals;                                         // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendGlobals*                        FriendGlobals;                                     // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UInventoryGlobals>      InventoryGlobals;                                  // 0xA0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExperienceGlobals*                    ExperienceGlobals;                                 // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStandInGlobals*                       StandInGlobals;                                    // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDialogSettings*                    DialogSettings;                                    // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakStreamingInteractionGlobals*       StreamingInteractionGlobals;                       // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakLoadingScreenGlobals*              LoadingScreenGlobals;                              // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPlayerClassIdentifier*>        AllPlayerClasses;                                  // 0xF0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            MicroPatchSwitchesTable;                           // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDownloadableContentGlobalsData*    DLCGlobalsData;                                    // 0x108(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGlobalSpawnDLCData*                   GlobalSpawnDLCData;                                // 0x110(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOakDeveloperPerks>        DeveloperPerks;                                    // 0x118(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOakCustomizationData*>         DeveloperSkins;                                    // 0x120(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UOakWeaponGlobalsData*                 WeaponsGlobals;                                    // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UOverworldGlobalsData>  OverworldGlobals;                                  // 0x138(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UEndlessDungeonGlobalsData> EndlessDungeonGlobals;                             // 0x160(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMicropatchGlobals*                    MicropatchGlobals;                                 // 0x188(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakGlobalsData* GetDefaultObj();

};

// 0x0 (0xF8 - 0xF8)
// Class OakGame.OakGlobalTravelGraph
class UOakGlobalTravelGraph : public UGlobalTravelGraph
{
public:

	static class UClass* StaticClass();
	static class UOakGlobalTravelGraph* GetDefaultObj();

};

// 0x0 (0x1B0 - 0x1B0)
// Class OakGame.OakHitRegionComponent
class UOakHitRegionComponent : public UHitRegionComponent
{
public:

	static class UClass* StaticClass();
	static class UOakHitRegionComponent* GetDefaultObj();

	void TriggerAoEGore(class UGoreAoEDamageData* GoreData, const struct FVector& Origin, float Radius);
};

// 0x50 (0x2B0 - 0x260)
// Class OakGame.OakHitRegionData
class UOakHitRegionData : public UHitRegionData
{
public:
	bool                                         bUseStatusEffectChanceScale;                       // 0x260(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6510[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          StatusEffectChanceScale;                           // 0x268(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FOakHitRegionModifierData>     DamageModifiers;                                   // 0x2A0(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakHitRegionData* GetDefaultObj();

};

// 0x0 (0x170 - 0x170)
// Class OakGame.OakHostFriendBeacon
class UOakHostFriendBeacon : public UOnlineBeaconHost
{
public:

	static class UClass* StaticClass();
	static class UOakHostFriendBeacon* GetDefaultObj();

};

// 0x38 (0x1A8 - 0x170)
// Class OakGame.OakHostLobbyBeacon
class UOakHostLobbyBeacon : public UOnlineBeaconHost
{
public:
	uint8                                        Pad_6511[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakHostLobbyBeacon* GetDefaultObj();

};

// 0x20 (0x190 - 0x170)
// Class OakGame.OakHostMatchmakingBeacon
class UOakHostMatchmakingBeacon : public UOnlineBeaconHost
{
public:
	uint8                                        Pad_6512[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakHostMatchmakingBeacon* GetDefaultObj();

};

// 0x230 (0x858 - 0x628)
// Class OakGame.OakHUD
class AOakHUD : public AGbxHUD
{
public:
	uint8                                        Pad_652C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  OakPlayerOwner;                                    // 0x630(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGFxActionSkillWidget*>         AvailableActionSkillWidgets;                       // 0x638(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UGFxChallengeProgressWidget*           ChallengeProgressWidget;                           // 0x648(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGFxTutorialMessageWidget*             TutorialMessageWidget;                             // 0x650(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGuid, enum class ETrackedIconOwner> TrackedIconAndOwningWidgetMapping;                 // 0x658(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGbxGFxHUDWidget>>  ContextSensitivePromptOrder;                       // 0x6A8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UGbxGFxHUDWidget*>              AvailableContextSensitivePromptWidgets;            // 0x6B8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UFont*                                 CutsceneSkipFont;                                  // 0x6C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_652E[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UGFxInWorldIconContainer> CachedInWorldIconWidget;                           // 0x6DC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_652F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHUDNotification;                                 // 0x6E8(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHUDNotificationWithId;                           // 0x6F8(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHUDErrorNotification;                            // 0x708(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6530[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnActivateCheckpoint;                              // 0x728(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6532[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSuppressAllNotifications;                         // 0x750(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6533[0x3F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bListenForDisplayedNotificationMenu;               // 0x790(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6534[0xC7];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakHUD* GetDefaultObj();

	void SetHUDVisible(class AOakPlayerController* OakPlayerController, bool bVisible);
	void OnVaultRewardReceived(enum class EVaultRewardType VaultRewardType);
	void OnRandomEncounter();
	void OnPlayerAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnFFYLStopped();
	void OnAreaEntered(class FText DisplayText, class UWwiseEvent* DiscoverySound);
	void OnAreaDiscovered(class FText DisplayText, class UWwiseEvent* DiscoverySound);
	void OnAbilityRemoved(class UGbxAbility* Ability);
	void OnAbilityAdded(class UGbxAbility* Ability);
	void LoadDisplayedNotificationMenu();
	bool IsContextSensitivePromptActive();
	void DisplayRolloutNotification(class FText& Title, class FText& Message, float Duration);
	void DisplayNotificationWithId(class UHUDNotificationAsset* Asset, uint8 RaidNotificationId, class FText MessageText, int32 NotificationPriority, TSubclassOf<class UObject> TrackedNotificationTarget, bool bMakeActiveImmediately, bool bAbortIfNotImmediatelyActive);
	void DisplayNotification(class UHUDNotificationAsset* Asset, class FText MessageText, int32 NotificationPriority, TSubclassOf<class UObject> TracketNotificationTarget, bool bMakeActiveImmediately);
	void DisplayErrorNotification(class FText MessageText);
	void DisplayCurrencyWidget(class UGbxInventoryCategoryData* CurrencyType);
	void DebugShowNotification(const class FString& NotificationType, const class FString& Text);
	void ClearNotifications();
	void BeginContextSensitivePromptHeld();
	void ActivateCheckpoint();
};

// 0x0 (0x208 - 0x208)
// Class OakGame.OakHUDSkillIconWidget
class UOakHUDSkillIconWidget : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UOakHUDSkillIconWidget* GetDefaultObj();

	void StartTriggeredAbilityTimer(class UOakPlayerAbilitySlotData* InSlotData, float Duration);
};

// 0x20 (0x1A8 - 0x188)
// Class OakGame.OakInputAbility_Player_Common
class UOakInputAbility_Player_Common : public UOakCharacterInputAbility
{
public:
	class FName                                  LookActionName;                                    // 0x188(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6541[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MoveActionName;                                    // 0x198(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6542[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakInputAbility_Player_Common* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakInputAbilityListData
class UOakInputAbilityListData : public UGbxDataAsset
{
public:
	TArray<TSubclassOf<class UOakInputAbility>>  InputAbilityClasses;                               // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakInputAbilityListData* GetDefaultObj();

};

// 0x8 (0x4A8 - 0x4A0)
// Class OakGame.OakInventoryConsumableItem
class AOakInventoryConsumableItem : public AOakInventoryItem
{
public:
	class UStaticMeshComponent*                  ItemMeshComponent;                                 // 0x4A0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakInventoryConsumableItem* GetDefaultObj();

};

// 0x0 (0x4A8 - 0x4A8)
// Class OakGame.OakInventoryAmmoItem
class AOakInventoryAmmoItem : public AOakInventoryConsumableItem
{
public:

	static class UClass* StaticClass();
	static class AOakInventoryAmmoItem* GetDefaultObj();

};

// 0x0 (0x168 - 0x168)
// Class OakGame.OakInventoryBalanceData
class UOakInventoryBalanceData : public UInventoryBalanceData
{
public:

	static class UClass* StaticClass();
	static class UOakInventoryBalanceData* GetDefaultObj();

};

// 0x48 (0x4F0 - 0x4A8)
// Class OakGame.OakInventoryCurrencyItem
class AOakInventoryCurrencyItem : public AOakInventoryConsumableItem
{
public:
	class UInventoryCategoryData*                CurrencyCategory;                                  // 0x4A8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          CurrencyValueScale;                                // 0x4B0(0x38)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UGameStatData*                         CurrencyStat;                                      // 0x4E8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakInventoryCurrencyItem* GetDefaultObj();

};

// 0x48 (0x210 - 0x1C8)
// Class OakGame.OakInventoryCustomizationPartData
class UOakInventoryCustomizationPartData : public UInventoryCustomizationPartData
{
public:
	class UManufacturerData*                     ManufacturerData;                                  // 0x1C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                InventoryCategory;                                 // 0x1D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    InventoryActorClass;                               // 0x1D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnforceRarityRestriction;                         // 0x1E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6549[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UInventoryAspectData*>          InventoryAspectList;                               // 0x1E8(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  RarityData;                                        // 0x1F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomizationInventoryBalanceData*    BalanceData;                                       // 0x200(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomizationInventoryData*           InventoryData;                                     // 0x208(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakInventoryCustomizationPartData* GetDefaultObj();

};

// 0x8 (0x4A8 - 0x4A0)
// Class OakGame.OakInventoryCustomizationPartItem
class AOakInventoryCustomizationPartItem : public AOakInventoryItem
{
public:
	class UStaticMeshComponent*                  ItemMeshComponent;                                 // 0x4A0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakInventoryCustomizationPartItem* GetDefaultObj();

};

// 0x10 (0x320 - 0x310)
// Class OakGame.OakInventoryData
class UOakInventoryData : public UInventoryData
{
public:
	class UPlayerClassIdentifier*                RequiredPlayerClass;                               // 0x310(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_654A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakInventoryData* GetDefaultObj();

};

// 0xC8 (0x738 - 0x670)
// Class OakGame.OakInventoryItemPickup
class AOakInventoryItemPickup : public ADroppedInventoryItemPickup
{
public:
	uint8                                        Pad_654D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ItemCardDelay;                                     // 0x688(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFlyToOnPickup;                                    // 0x68C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_654E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPickupFlyToAlignmentType         FlyToAlignment;                                    // 0x690(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FlyToAlignmentOffset;                              // 0x694(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UPickupFlyToData*                      DroppedPickupFlyToSettings;                        // 0x6A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPickupFlyToData*                      ContainerPickupFlyToSettings;                      // 0x6A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPickupFlyToData*                      AutoLootContainerPickupFlyToSettings;              // 0x6B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemPoolData*                         DefaultPickupItemPool;                             // 0x6B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemCardSocketName;                                // 0x6C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVaultRewardType                  VaultRewardType;                                   // 0x6C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTouchPickupOnFoot : 1;                            // Mask: 0x1, PropSize: 0x10x6C9(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTouchPickupInVehicle : 1;                         // Mask: 0x2, PropSize: 0x10x6C9(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1D8 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6550[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUsableComponent*                      CachedUsableComponent;                             // 0x6D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              LootBeamComponent;                                 // 0x6D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoPickupDelay;                                   // 0x6E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMassPickupable;                                   // 0x6E4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCauseMassPickupOnHoldUse;                         // 0x6E5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPickupFlyToSettingsType          DesiredFlyToType;                                  // 0x6E6(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6551[0x35];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsInstanced : 1;                                  // Mask: 0x1, PropSize: 0x10x71C(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bPlayedCallout : 1;                                // Mask: 0x2, PropSize: 0x10x71C(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bPickupEquipped : 1;                               // Mask: 0x4, PropSize: 0x10x71C(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bNoLootBeam : 1;                                   // Mask: 0x8, PropSize: 0x10x71C(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_1D9 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6552[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryRarityData*                  AssociatedInventoryRarityData;                     // 0x720(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMissionIconComponent*                 MissionIconComponent;                              // 0x728(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPlayerAlertType                  PlayerAlertType;                                   // 0x730(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6553[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakInventoryItemPickup* GetDefaultObj();

	void TryMassPickupBy(class AActor* GiveToActor);
	void SetupZoneMapIcon();
	void SetNoLootBeam(bool bNoBeam);
	void OnRep_NoLootBeam();
	void OnRep_bIsInstanced();
	void HandleActorDestroyed(class AActor* Actor);
};

// 0x8 (0x740 - 0x738)
// Class OakGame.OakInventoryDisplayItem
class AOakInventoryDisplayItem : public AOakInventoryItemPickup
{
public:
	float                                        ItemCardDisplayLifetime;                           // 0x738(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6556[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakInventoryDisplayItem* GetDefaultObj();

};

// 0x0 (0x2A8 - 0x2A8)
// Class OakGame.OakInventoryGenericPartData
class UOakInventoryGenericPartData : public UInventoryGenericPartData
{
public:

	static class UClass* StaticClass();
	static class UOakInventoryGenericPartData* GetDefaultObj();

};

// 0x8 (0x4B0 - 0x4A8)
// Class OakGame.OakInventoryHealthItem
class AOakInventoryHealthItem : public AOakInventoryConsumableItem
{
public:
	class UGameStatData*                         HealthStat;                                        // 0x4A8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakInventoryHealthItem* GetDefaultObj();

};

// 0x8 (0x388 - 0x380)
// Class OakGame.OakInventoryListComponent
class UOakInventoryListComponent : public UInventoryListComponent
{
public:
	enum class EInventoryListType                InventoryListType;                                 // 0x380(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6565[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakInventoryListComponent* GetDefaultObj();

	void ServerUseItemInInventory(struct FInventoryListEntryHandle& InventoryItemHandle);
	void ServerTransferItemToList(struct FInventoryListEntryHandle& InventoryItemHandle, class AActor* DestinationActor, enum class EInventoryListType DestinationListType, int32 Quantity);
	bool CanUseItemInInventory(struct FInventoryListEntryHandle& InventoryItemHandle);
};

// 0x70 (0xA8 - 0x38)
// Class OakGame.OakInventoryNamingStrategyData
class UOakInventoryNamingStrategyData : public UInventoryNamingStrategyData
{
public:
	class UOakInventoryNamingStrategyData*       NamingStrategyToExpand;                            // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxContributingParts;                              // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxNames;                                          // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakInventoryNameData>         TripleNames;                                       // 0x48(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FExtractedOakInventoryCombinationNameData> ExtractedCombinationNames;                         // 0x58(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FOakInventoryNameData>         SingleNames;                                       // 0x68(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<uint8>                                RelevantPartTypes;                                 // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6568[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakInventoryNamingStrategyData* GetDefaultObj();

	void ForceExtractCombinationNamingData();
	void EnumerateInventoryParts(TArray<class UInventoryPartData*>* OutInventoryParts);
};

// 0x20 (0x190 - 0x170)
// Class OakGame.OakInventoryRarityData
class UOakInventoryRarityData : public UInventoryRarityData
{
public:
	struct FDataTableRowHandle                   WeaponDataTableRow;                                // 0x170(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   ZoneMapPOIType;                                    // 0x180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HardwareLightingEvent;                             // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakInventoryRarityData* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class OakGame.OakInventoryRarityDataTableAttributeValueResolver
class UOakInventoryRarityDataTableAttributeValueResolver : public UDataTableFunctionAttributeValueResolver
{
public:
	enum class EOakInventoryRarityBalanceTableType DataTableFromRarity;                               // 0xD8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_656C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakInventoryRarityDataTableAttributeValueResolver* GetDefaultObj();

};

// 0x20 (0x4A0 - 0x480)
// Class OakGame.OakLightProjectile
class UOakLightProjectile : public ULightProjectile
{
public:
	float                                        BaseStatusEffectChance;                            // 0x480(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseStatusEffectDamage;                            // 0x484(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseStatusEffectDuration;                          // 0x488(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusEffectChanceScalar;                          // 0x48C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusEffectDamageScalar;                          // 0x490(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusEffectDurationScalar;                        // 0x494(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakLightProjectileData*               OakData;                                           // 0x498(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakLightProjectile* GetDefaultObj();

	void InitOakChildData(struct FOakLightProjectileInitializationData* InitData);
};

// 0x8 (0x4A8 - 0x4A0)
// Class OakGame.OakJAKLightProjectile
class UOakJAKLightProjectile : public UOakLightProjectile
{
public:
	class UOakJAKLightProjectileData*            JAKData;                                           // 0x4A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakJAKLightProjectile* GetDefaultObj();

	void PlayFeedback(struct FOakJAKFeedbackData& FeedbackData, struct FVector& EffectLocation);
};

// 0x10 (0x378 - 0x368)
// Class OakGame.OakLightProjectileData
class UOakLightProjectileData : public ULightProjectileData
{
public:
	uint8                                        bSuppressAmpedTracerFX : 1;                        // Mask: 0x1, PropSize: 0x10x368(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDamageElementalInteractionsOnBounce : 1;          // Mask: 0x2, PropSize: 0x10x368(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1E2 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_657A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameStatData*                         KillStat;                                          // 0x370(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakLightProjectileData* GetDefaultObj();

};

// 0x158 (0x4D0 - 0x378)
// Class OakGame.OakJAKLightProjectileData
class UOakJAKLightProjectileData : public UOakLightProjectileData
{
public:
	float                                        ModCooldownTime;                                   // 0x378(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_657C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakJAKFeedbackData>           StackLevelFeedback;                                // 0x380(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOakJAKFeedbackData                   RefundAmmoFeedback;                                // 0x390(0x10)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FEnvQueryParams                       RicochetQueryParams;                               // 0x3A0(0xB8)(Edit, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bRandomizeRicochetQueryResults;                    // 0x458(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_657D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRelativeDirectionData                NoTargetRicochetDirection;                         // 0x460(0x50)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FOakJAKFeedbackData                   RicochetFeedback;                                  // 0x4B0(0x10)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ULightProjectileData>      RicochetProjectileData;                            // 0x4C0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_657E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakJAKLightProjectileData* GetDefaultObj();

};

// 0x38 (0x270 - 0x238)
// Class OakGame.OakKillBasedChallenge
class UOakKillBasedChallenge : public UOakChallenge
{
public:
	class UWeaponTypeData*                       RequiredWeaponType;                                // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManufacturerData*                     RequiredManufacturer;                              // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireHostile;                                   // 0x248(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireCrit;                                      // 0x249(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireZoom;                                      // 0x24A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireNoZoom;                                    // 0x24B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireCloseRange;                                // 0x24C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6581[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CloseRangeMaxDistance;                             // 0x250(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireLongRange;                                 // 0x254(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6582[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LongRangeMinDistance;                              // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireCrouch;                                    // 0x25C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireUnaware;                                   // 0x25D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireMovingFullSpeed;                           // 0x25E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireSliding;                                   // 0x25F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireDirectHit;                                 // 0x260(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireIndirectHit;                               // 0x261(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireOneShotHealth;                             // 0x262(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireOneShotShield;                             // 0x263(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireWeaponKill;                                // 0x264(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireGrenadeKill;                               // 0x265(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireSpellKill;                                 // 0x266(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireMeleeKill;                                 // 0x267(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGrenadeBehavior_Payload>  RequiredGrenadePayloadType;                        // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakKillBasedChallenge* GetDefaultObj();

};

// 0x18 (0x258 - 0x240)
// Class OakGame.OakLadderInteractData
class UOakLadderInteractData : public ULadderInteractData
{
public:
	struct FCharacterJumpGoalSetting             UpwardJumpGoal;                                    // 0x240(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        UpwardJumpFinishVelocityThreshold;                 // 0x24C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputDirectionalVerticalityThreshold;              // 0x250(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6589[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakLadderInteractData* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakLevelMinimapDataAsset
class UOakLevelMinimapDataAsset : public UDataAsset
{
public:
	class UTexture2D*                            MinimapImage;                                      // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AppearanceScale;                                   // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_658C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakLevelMinimapDataAsset* GetDefaultObj();

};

// 0x28 (0x488 - 0x460)
// Class OakGame.OakLevelScriptActor
class AOakLevelScriptActor : public ALevelScriptActor
{
public:
	class UMissionObserverComponent*             LevelMissionObserver;                              // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerDied;                                      // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorTookDamage;                                 // 0x478(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakLevelScriptActor* GetDefaultObj();

};

// 0x18 (0x160 - 0x148)
// Class OakGame.OakLevelStreaming
class UOakLevelStreaming : public UGbxLevelStreamingBase
{
public:
	uint8                                        MapNameEnumIdx;                                    // 0x148(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ZoneNameEnumIdx;                                   // 0x149(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6590[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                MapIndexesForCurrentZone;                          // 0x150(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakLevelStreaming* GetDefaultObj();

	void OnLevelLoadedChanged();
};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakMessage
class UOakMessage : public ULocalMessage
{
public:

	static class UClass* StaticClass();
	static class UOakMessage* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakLevelSyncMessage
class UOakLevelSyncMessage : public UOakMessage
{
public:

	static class UClass* StaticClass();
	static class UOakLevelSyncMessage* GetDefaultObj();

};

// 0x58 (0x678 - 0x620)
// Class OakGame.OakLightBeam
class UOakLightBeam : public ULightBeam
{
public:
	float                                        BaseStatusEffectChance;                            // 0x620(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseStatusEffectDamage;                            // 0x624(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseStatusEffectDuration;                          // 0x628(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6593[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              ModifierComponent;                                 // 0x630(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6594[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakLightBeam* GetDefaultObj();

	void OnModifierParticleSystemFinished(class UParticleSystemComponent* PSC);
	void InitOakChildData(struct FOakLightBeamInitializationData* InitData);
};

// 0x0 (0x1C8 - 0x1C8)
// Class OakGame.OakLightBeamData
class UOakLightBeamData : public ULightBeamData
{
public:

	static class UClass* StaticClass();
	static class UOakLightBeamData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakLightBeamStatics
class UOakLightBeamStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakLightBeamStatics* GetDefaultObj();

	void CreateOakLightBeamFromData(struct FOakLightBeamInitializationData& InitData, bool bAsync, float ForceSpawnTimer);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakLightProjectileStatics
class UOakLightProjectileStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakLightProjectileStatics* GetDefaultObj();

	void ThrowLightProjectileFromData(class AActor* Thrower, struct FOakLightProjectileInitializationData& Data, class FName SourceSocket, float MaxPredication, float Speed, float AnglePercent, const struct FRotator& DirectionOffset, class AActor* TargetOverride, const struct FVector& LocalTargetOffset, class FName TargetSocket, bool bSpawnAsync);
	void ThrowLightProjectile(class AActor* Thrower, TSubclassOf<class ULightProjectileData> Data, int32 Flags, class FName SourceSocket, float MaxPredication, float Speed, float AnglePercent, const struct FRotator& DirectionOffset, class AActor* TargetOverride, const struct FVector& LocalTargetOffset, class FName TargetSocket, bool bSpawnAsync);
	void CreateSpellLightProjectileFromDataAsync(struct FSpellLightProjectileInitializationData& InitData, float ForceSpawnTimer);
	void CreateOakLightProjectileFromDataAsync(struct FOakLightProjectileInitializationData& InitData, float ForceSpawnTimer);
	void CreateOakLightProjectileFromData(struct FOakLightProjectileInitializationData& InitData);
};

// 0x8 (0x460 - 0x458)
// Class OakGame.OakLoadingSceneCaptureActor
class AOakLoadingSceneCaptureActor : public AActor
{
public:
	class USceneCaptureComponent2D*              CaptureComponent;                                  // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakLoadingSceneCaptureActor* GetDefaultObj();

};

// 0x8 (0x460 - 0x458)
// Class OakGame.OakLoadingSceneMeshActor
class AOakLoadingSceneMeshActor : public AActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakLoadingSceneMeshActor* GetDefaultObj();

};

// 0xB0 (0xE0 - 0x30)
// Class OakGame.OakLoadingScreenExpansionData
class UOakLoadingScreenExpansionData : public UGbxDataAsset
{
public:
	TMap<class FName, TSoftObjectPtr<class UMaterialInterface>> PerMapBackgrounds;                                 // 0x30(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FName, TSoftObjectPtr<class UMaterialInterface>> PerMapBackgrounds_4K;                              // 0x80(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FWeightedLoadingTooltip>       LoadingTooltips;                                   // 0xD0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakLoadingScreenExpansionData* GetDefaultObj();

};

// 0x378 (0x3A8 - 0x30)
// Class OakGame.OakLoadingScreenGlobals
class UOakLoadingScreenGlobals : public UGbxDataAsset
{
public:
	TSoftObjectPtr<class UStaticMesh>            VaultLogoMesh;                                     // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MeshOffset;                                        // 0x58(0x8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MeshScale;                                         // 0x60(0x8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              MeshRotation;                                      // 0x68(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              MeshRotationRate;                                  // 0x74(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        CameraDistance;                                    // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FOVAngle;                                          // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            BackgroundMesh;                                    // 0x88(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, TSoftObjectPtr<class UMaterialInterface>> PerMapBackgrounds;                                 // 0xB0(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FName, TSoftObjectPtr<class UMaterialInterface>> PerMapBackgrounds_4K;                              // 0x100(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FName, struct FLoadingScreenPerMapOptions> PerMapOptions;                                     // 0x150(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     FallbackBackground;                                // 0x1A0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     FallbackBackground_4K;                             // 0x1C8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackgroundDistance;                                // 0x1F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFont>                  LoadingScreenFont;                                 // 0x1F8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65BF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, TSoftObjectPtr<class UFont>> LocaleToLoadingScreenFont;                         // 0x228(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        TooltipSize;                                       // 0x278(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TooltipDistanceFromEdge;                           // 0x27C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TooltipDuration;                                   // 0x280(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65C0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LoadingText;                                       // 0x288(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<class FText>                          LoadingTooltips;                                   // 0x2A0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             VoiceIcon;                                         // 0x2B0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, TSoftObjectPtr<class UTexture2D>> VoicePlatformIcons;                                // 0x2D8(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FLinearColor                          VoiceTextColor;                                    // 0x328(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VoiceTextSize;                                     // 0x338(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VoiceWidthMarginPercentage;                        // 0x33C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VoiceHeightPositionPercentage;                     // 0x340(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65C2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, TSoftObjectPtr<class ULocalizedOverlays>> MovieSubtitlesMap;                                 // 0x348(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        SubtitlesSize;                                     // 0x398(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SubtitlesDistanceFromEdge;                         // 0x39C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HideLoadingScreenDelay;                            // 0x3A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65C3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakLoadingScreenGlobals* GetDefaultObj();

};

// 0x10 (0x1D8 - 0x1C8)
// Class OakGame.OakLocalPlayer
class UOakLocalPlayer : public ULocalPlayer
{
public:
	uint8                                        Pad_65C4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakLocalPlayer* GetDefaultObj();

};

// 0x58 (0x270 - 0x218)
// Class OakGame.OakLootableComponent
class UOakLootableComponent : public ULootableComponent
{
public:
	bool                                         bForceNoInstancedLoot;                             // 0x218(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoLootBeam;                                       // 0x219(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65C7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeEffectData>          SpawnLootAttributeEffects;                         // 0x220(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class AOakPlayerController*                  ForcedInstancedOwner;                              // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DropLootSocketName;                                // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULootSpawnPatternData*                 DropLootPattern;                                   // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToSpawnLootOver;                               // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnAttachedLootHidden;                          // 0x24C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LootEnabledDelay;                                  // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LootAutoPickupPlayerTriggerRadius;                 // 0x254(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideAutoLootDelay;                            // 0x258(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65CA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoLootDelayOverride;                             // 0x25C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDeferredSpawnDelay;                             // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65CB[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakLootableComponent* GetDefaultObj();

	void HandlePickupSpawned(class ADroppedInventoryItemPickup* Pickup);
	void DetachAttachedLoot(class ADroppedInventoryItemPickup* Pickup, class ULootSpawnPatternData* DropPattern);
	void DetachAllAttachedLoot(class ULootSpawnPatternData* DropPattern);
};

// 0x50 (0x1C8 - 0x178)
// Class OakGame.OakLostLootComponent
class UOakLostLootComponent : public UActorComponent
{
public:
	uint8                                        Pad_65CC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   SpawnDirectionComponent;                           // 0x190(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialDropLootMassScale;                          // 0x198(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65CD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGbxAction>>        LootSpawnActions;                                  // 0x1A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class ULootSpawnPatternData*                 DropLootPattern;                                   // 0x1B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpawnDirectionComponentName;                       // 0x1B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayBetweenSpawningItem;                          // 0x1C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65CE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakLostLootComponent* GetDefaultObj();

	void SpawnAndDropLoot(class AOakPlayerController* OwnerController);
};

// 0x98 (0xC0 - 0x28)
// Class OakGame.OakMapData
class UOakMapData : public UMapData
{
public:
	float                                        NorthDegreeOffset;                                 // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceNormalDifficultySetting;                     // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MapNameEnumIdx;                                    // 0x2D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ZoneNameEnumIdx;                                   // 0x2E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65CF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnum*                                 MapNameEnum;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnum*                                 ZoneNameEnum;                                      // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMapCharacterPhysicsSettings          CharacterPhysicsSettings;                          // 0x40(0x4)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bDisableCombatExperienceGains;                     // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UZoneMapMeshData*                      LocalZoneMapMeshData;                              // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UImpactExpansionData*>          ImpactExpansions;                                  // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<class UPhysicalMaterial*, class UParticleSystem*> PlayerWakeParticleSystemExpansions;                // 0x60(0x50)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  HardwareLightingState;                             // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEndlessDungeonGlobalsData*            EndlessDungeonGlobals;                             // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakMapData* GetDefaultObj();

	class UEnum* ZoneNameEnumFunc();
	class UEnum* MapNameEnumFunc();
};

// 0x20 (0xE0 - 0xC0)
// Class OakGame.OakMainMenuMapData
class UOakMainMenuMapData : public UOakMapData
{
public:
	uint8                                        Pad_65D2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerStandIn*                        CharacterSelectStandIn;                            // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APostProcessVolume*                    PostProcessVolume;                                 // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMainMenuMapData* GetDefaultObj();

};

// 0x78 (0xA8 - 0x30)
// Class OakGame.OakManagedActorDefinition
class UOakManagedActorDefinition : public UGbxDataAsset
{
public:
	struct FAttributeInitializationData          MaxCount;                                          // 0x30(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnOwnerDath;                               // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayInUI;                                      // 0x69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EReapOrder                        DeathReapOrder;                                    // 0x6A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65D4[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          DeathReapPercent;                                  // 0x70(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakManagedActorDefinition* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.OakManagedActorManager
class UOakManagedActorManager : public UObject
{
public:
	uint8                                        Pad_65D5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakManagedActorManager* GetDefaultObj();

	void NotifyActorDestroyed(class AActor* TheActor);
};

// 0x28 (0x138 - 0x110)
// Class OakGame.OakManufacturerData
class UOakManufacturerData : public UManufacturerData
{
public:
	struct FDataTableRowHandle                   WeaponDataTableRow;                                // 0x110(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UChallenge>>      AssociatedChallenges;                              // 0x120(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UGameStatData*                         KillStat;                                          // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakManufacturerData* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class OakGame.OakManufacturerDataTableAttributeValueResolver
class UOakManufacturerDataTableAttributeValueResolver : public UDataTableFunctionAttributeValueResolver
{
public:
	enum class EOakManufacturerBalanceTableType  DataTableFromManufactuer;                          // 0xD8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_65D6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakManufacturerDataTableAttributeValueResolver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.MapDataFunctionLibrary
class UMapDataFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UMapDataFunctionLibrary* GetDefaultObj();

	uint8 GetZoneNameEnumValue(class UObject* WorldContextObject);
	class FName GetZoneName(class UObject* WorldContextObject);
	uint8 GetMapNameEnumValue(class UObject* WorldContextObject);
	class FName GetMapName(class UObject* WorldContextObject);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakMapPatchScript
class UOakMapPatchScript : public UObject
{
public:

	static class UClass* StaticClass();
	static class UOakMapPatchScript* GetDefaultObj();

	void OnPatchActorGroup(TArray<class AActor*>& Actors);
	void OnPatchActor(class AActor* Actor);
	void OnBegin(class UWorld* World);
	void OnAllActorsSpawned(class UWorld* World);
	void OnAllActorsPatched(class UWorld* World);
	void OnAllActorsDeleted(class UWorld* World);
};

// 0x98 (0xC0 - 0x28)
// Class OakGame.OakMapPatchProcessor
class UOakMapPatchProcessor : public UObject
{
public:
	uint8                                        Pad_65DF[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       LoadedAssets;                                      // 0x90(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_65E0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SpawnedActors;                                     // 0xA8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_65E1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakMapPatchProcessor* GetDefaultObj();

};

// 0x40 (0x78 - 0x38)
// Class OakGame.OakMeleeAudioAspect
class UOakMeleeAudioAspect : public UInventoryAspectData
{
public:
	class UWwiseEvent*                           SwingEvent;                                        // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           FinisherSwingEvent;                                // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           LocalPlayerHitNotifyEvent;                         // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlaybackSocket;                                    // 0x50(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AdditionalOffset;                                  // 0x58(0xC)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWwiseEvent*>                   ConfigurationEvents;                               // 0x68(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMeleeAudioAspect* GetDefaultObj();

};

// 0x78 (0x1F0 - 0x178)
// Class OakGame.OakMeleeAudioProviderComponent
class UOakMeleeAudioProviderComponent : public UActorComponent
{
public:
	uint8                                        Pad_65E5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           SwingEvent;                                        // 0x180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           FinisherSwingEvent;                                // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PlaybackSocket;                                    // 0x190(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               AdditionalOffset;                                  // 0x198(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_65E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWwiseEvent*>                   ConfigurationEvents;                               // 0x1A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UWwiseRtpc*                            CachedMeleeSpeedRtpc;                              // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           HitNotifyEvent;                                    // 0x1C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_65E8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWwiseEvent*>                   PreparedEvents;                                    // 0x1D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UWwiseSwitch*>                  PreparedSwitches;                                  // 0x1E0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakMeleeAudioProviderComponent* GetDefaultObj();

	void NotifyHidden(bool bIsHidden);
};

// 0x18 (0x560 - 0x548)
// Class OakGame.OakMenuGameMode
class AOakMenuGameMode : public AGameMode
{
public:
	uint8                                        Pad_65E9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakMenuGameMode* GetDefaultObj();

};

// 0x190 (0x6B8 - 0x528)
// Class OakGame.OakPlayerState
class AOakPlayerState : public APlayerState
{
public:
	uint8                                        Pad_65F3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      ShiftUniqueId;                                     // 0x530(0x28)(Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHealthType>                   HealthInformation;                                 // 0x558(0x10)(Net, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x568(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPlayerClassIdentifier*                PlayerClass;                                       // 0x570(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65F5[0x21];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsRaidSpectating;                                 // 0x599(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHealthState                      HealthState;                                       // 0x59A(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasShieldEquipped;                                // 0x59B(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65F6[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MusicThreatLevel;                                  // 0x5D0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDuelingEnabled;                                   // 0x5D4(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETradeRequestReceptionType        TradeRequestReceptionType;                         // 0x5D5(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPossessionOfPawn;                              // 0x5D6(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasFullControlOfPawn_ForSonyRTMP;                 // 0x5D7(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULocalMessage>             LevelSyncMessageClass;                             // 0x5D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPhotoModeActive;                                  // 0x5E0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65F7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 PlayerCharacterGuid;                               // 0x5E4(0x10)(Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHeadsetPresent;                                 // 0x5F4(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65F8[0x57];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PlayerLocation;                                    // 0x64C(0xC)(Net, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              PlayerRotation;                                    // 0x658(0xC)(Net, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_65F9[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter*                         PrimaryCharacter;                                  // 0x678(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter*                         ControlledCharacter;                               // 0x680(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_65FA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPrimaryCharacterChanged;                         // 0x690(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_65FB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakPlayerState* GetDefaultObj();

	void SetPrimaryCharacter(class AOakCharacter* NewCharacter);
	void SetControlledCharacter(class AOakCharacter* NewCharacter);
	void ServerSetShiftUniqueId(struct FUniqueNetIdRepl& InShiftUniqueId);
	void ServerSetPlayerClass(class UPlayerClassIdentifier* InPlayerClass);
	void ServerSetIsHeadsetPresent(bool InHeadsetPresent);
	void ServerReportClientMatchmakingError(enum class EMatchmakingError Error);
	void ServerPlayerDisplayDataChanged();
	void OnRep_ShiftUniqueId();
	void OnRep_PlayerLocation();
	void OnRep_PlayerLevel();
	void OnRep_PlayerHeadsetPresent();
	void OnRep_PlayerDownStateExitReason();
	void OnRep_PlayerClass();
	void OnRep_IsRaidSpectating();
	void OnPrimaryCharacterChanged__DelegateSignature(class AOakCharacter* NewCharacter, class AOakCharacter* OldCharacter);
	struct FRotator GetTargetActorRotation();
	struct FVector GetTargetActorLocation();
	class AOakCharacter* GetPrimaryCharacter();
	class AOakCharacter* GetControlledCharacter();
	void ClientMatchmakingConfirmPendingReservation(class FName NewBeaconName, const class FString& NewBeaconURL, const class FString& ActivityGuid, bool bBackfillOnly);
};

// 0x0 (0x6B8 - 0x6B8)
// Class OakGame.OakMenuPlayerState
class AOakMenuPlayerState : public AOakPlayerState
{
public:

	static class UClass* StaticClass();
	static class AOakMenuPlayerState* GetDefaultObj();

};

// 0x30 (0x2E8 - 0x2B8)
// Class OakGame.OakMinimapElement
class UOakMinimapElement : public UGbxUserWidget
{
public:
	float                                        InRangeAlpha;                                      // 0x2B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutOfRangeAlpha;                                   // 0x2BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampRadarEdge;                                   // 0x2C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxClampDistance;                                  // 0x2C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDisplay;                                    // 0x2C8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_65FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       WaypointRadius;                                    // 0x2CC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0x2D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                ElementImage;                                      // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                             ElementScale;                                      // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakMinimapElement* GetDefaultObj();

};

// 0x138 (0x2B0 - 0x178)
// Class OakGame.OakMinimapIconComponent
class UOakMinimapIconComponent : public UActorComponent
{
public:
	enum class EOakMinimapIconComponentType      MinimapComponentType;                              // 0x178(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_660B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxMinimapWidgetIcon                 MinimapIconProperties;                             // 0x180(0xE0)(Edit, NativeAccessSpecifierPublic)
	bool                                         bBeginTrackinOnPlay;                               // 0x260(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_660D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInstancedPlayerOwnerInfo             InstancedPlayerOwnerInfo;                          // 0x268(0x18)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsTracking;                                       // 0x280(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsTrackingInternal;                               // 0x281(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInControl;                                      // 0x282(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_660E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AOakCharacter>          OakCharacterOwner;                                 // 0x284(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_660F[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakMinimapIconComponent* GetDefaultObj();

	void UpdateTracking();
	void SetupTargetting();
	void SetTracking(bool bInTracking);
	void SetPOIType(class UZoneMapPOITypeData* PointOfInterestType);
	void OnRep_IsTracking();
	void OnRep_InstancedPlayerOwnerInfo();
	void OnCharacterDied();
	class UZoneMapPOITypeData* GetPOIType();
	void DelayedUpdateIsTracking();
};

// 0x40 (0x68 - 0x28)
// Class OakGame.OakMinimapIconTracker
class UOakMinimapIconTracker : public UObject
{
public:
	UMulticastDelegateProperty_                  BeginTrackingDelegate;                             // 0x28(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  UpdateTrackingDelegate;                            // 0x38(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  EndTrackingDelgate;                                // 0x48(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class UOakMinimapIconComponent>> TrackedComponents;                                 // 0x58(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakMinimapIconTracker* GetDefaultObj();

};

// 0x100 (0x540 - 0x440)
// Class OakGame.OakMission
class UOakMission : public UMission
{
public:
	TSoftClassPtr<class AOakVehicle>             VehicleClass;                                      // 0x440(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UVehiclePartData>       VehiclePart;                                       // 0x468(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class AOakSpawner>            VehicleSpawner;                                    // 0x490(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UInventoryBalanceData>  MissionWeaponBalanceData;                          // 0x4B8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6612[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        MapTravelID;                                       // 0x4F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6613[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMissionStarterGear>           StarterGear;                                       // 0x4F8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EOakMissionType                   MissionType;                                       // 0x508(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6614[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMissionObjective*                     GiveWeaponObjective;                               // 0x510(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMissionObjective*>             MissionWeaponObjectives;                           // 0x518(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRequireMissionSpawnerActor;                       // 0x528(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBroadcastMissionCompletionFriendEvent;            // 0x529(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6615[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDialogEnumValue*                      MissionDialogEnumValue;                            // 0x530(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuppressDiscoveryAfterFailure;                    // 0x538(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6616[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakMission* GetDefaultObj();

	int32 GetNumberOfCompletedMissionChallenges();
	class AOakGameMode* GetCurrentGameMode();
};

// 0x18 (0x190 - 0x178)
// Class OakGame.OakMissionActorComponent
class UOakMissionActorComponent : public UActorComponent
{
public:
	uint8                                        Pad_6617[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakMissionActorComponent* GetDefaultObj();

};

// 0xA0 (0x370 - 0x2D0)
// Class OakGame.OakAutoplayComponent
class UOakAutoplayComponent : public USceneComponent
{
public:
	uint8                                        Pad_6618[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxNavPathingData                    PathingData;                                       // 0x2D8(0x10)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6619[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAutoplayMissionState                 MissionState;                                      // 0x310(0x30)(NativeAccessSpecifierPublic)
	struct FAutoplayCombatState                  CombatState;                                       // 0x340(0x30)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakAutoplayComponent* GetDefaultObj();

};

// 0x18 (0x558 - 0x540)
// Class OakGame.OakMissionCircleOfSlaughter
class UOakMissionCircleOfSlaughter : public UOakMission
{
public:
	class FText                                  ActivityDisplayName;                               // 0x540(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMissionCircleOfSlaughter* GetDefaultObj();

};

// 0x18 (0x3D0 - 0x3B8)
// Class OakGame.OakMissionDirectorComponent
class UOakMissionDirectorComponent : public UMissionDirectorComponent
{
public:
	class UInWorldIconData*                      IconData;                                          // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MajorMissionIconData;                              // 0x3C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_661D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakMissionDirectorComponent* GetDefaultObj();

	void TriggerMissionDeliveryPlacard(class AOakPlayerController* InitiatingPlayer, bool* bMissionAvailable);
};

// 0x18 (0x7C0 - 0x7A8)
// Class OakGame.OakMissionIconComponent
class UOakMissionIconComponent : public UMissionIconComponent
{
public:
	class UInWorldIconData*                      IconData;                                          // 0x7A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisibleDistanceOverride;                           // 0x7B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HiddenDistanceOverride;                            // 0x7B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawIconVisibilityDistance;                       // 0x7B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoNotOverrideCondition;                           // 0x7B9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_661E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakMissionIconComponent* GetDefaultObj();

};

// 0x0 (0x3F0 - 0x3F0)
// Class OakGame.OakMissionInventoryBalanceStateComponent
class UOakMissionInventoryBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:

	static class UClass* StaticClass();
	static class UOakMissionInventoryBalanceStateComponent* GetDefaultObj();

};

// 0x158 (0x5B0 - 0x458)
// Class OakGame.OakMissionItem
class AOakMissionItem : public AActor
{
public:
	uint8                                        Pad_6622[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReferenceWeak        ObjectiveRef;                                      // 0x460(0x50)(Edit, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x4B0(0x18)(Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FUIStatPriorityData>           UIStats;                                           // 0x4C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UUIStatData*                           MissionNameUIStatData;                             // 0x4D8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIFormattedText                   FormattedDisplayName;                              // 0x4E0(0x68)(Edit, NativeAccessSpecifierPublic)
	bool                                         bHideUntilActivated;                               // 0x548(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUniquePickup;                                     // 0x549(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateWaypoint;                                   // 0x54A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableFailsafeTimer;                             // 0x54B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6626[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryBalanceData*                 LikenessInventoryBalanceData;                      // 0x550(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LikenessInventoryGameStage;                        // 0x558(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6627[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UEchoLogData*>                  EchoLogData;                                       // 0x560(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FRotator                              RotationInContainer;                               // 0x570(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6629[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakMissionInventoryBalanceStateComponent* BalanceStateComponent;                             // 0x580(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryBalanceData*                 InventoryBalanceData;                              // 0x588(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryData*                        InventoryData;                                     // 0x590(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakInventoryItemPickup*               Pickup;                                            // 0x598(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, TextExportTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_662B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakMissionItem* GetDefaultObj();

	void OnRep_BalanceStateComponent();
};

// 0x0 (0x5B0 - 0x5B0)
// Class OakGame.OakMissionItem_Vehicle
class AOakMissionItem_Vehicle : public AOakMissionItem
{
public:

	static class UClass* StaticClass();
	static class AOakMissionItem_Vehicle* GetDefaultObj();

};

// 0x8 (0xD0 - 0xC8)
// Class OakGame.OakMissionItemPoolData
class UOakMissionItemPoolData : public UItemPoolData
{
public:
	TSubclassOf<class AOakInventoryItemPickup>   PickupClass;                                       // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMissionItemPoolData* GetDefaultObj();

};

// 0x0 (0x738 - 0x738)
// Class OakGame.OakMissionPickup
class AOakMissionPickup : public AOakInventoryItemPickup
{
public:

	static class UClass* StaticClass();
	static class AOakMissionPickup* GetDefaultObj();

};

// 0x18 (0x558 - 0x540)
// Class OakGame.OakMissionProvingGrounds
class UOakMissionProvingGrounds : public UOakMission
{
public:
	class FText                                  ActivityDisplayName;                               // 0x540(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMissionProvingGrounds* GetDefaultObj();

};

// 0x18 (0x558 - 0x540)
// Class OakGame.OakMissionRaid
class UOakMissionRaid : public UOakMission
{
public:
	class FText                                  ActivityDisplayName;                               // 0x540(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMissionRaid* GetDefaultObj();

};

// 0x20 (0x560 - 0x540)
// Class OakGame.OakMissionRareSpawn
class UOakMissionRareSpawn : public UOakMission
{
public:
	class UGameStatData*                         StatData;                                          // 0x540(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  EnemyDisplayName;                                  // 0x548(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMissionRareSpawn* GetDefaultObj();

};

// 0x28 (0x658 - 0x630)
// Class OakGame.OakSpawner
class AOakSpawner : public AGbxSpawner
{
public:
	uint8                                        Pad_6631[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URegionBalanceStateComponent*          RegionComponent;                                   // 0x638(0x8)(ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                TerritoryOverrideActor;                            // 0x640(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTerritoryComponent*                   TerritoryComponent;                                // 0x648(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTerritoryComponent*                   CurrentTerritory;                                  // 0x650(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AOakSpawner* GetDefaultObj();

	void SetTerritoryActor(class AActor* TerritoryActor);
	void SetTerritory(class UTerritoryComponent* Territory);
	void ResetTerritoryToDefault();
	class UTerritoryComponent* GetTerritory();
};

// 0x1A8 (0x800 - 0x658)
// Class OakGame.OakMissionSpawner
class AOakMissionSpawner : public AOakSpawner
{
public:
	uint8                                        Pad_6635[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         EnabledCondition;                                  // 0x660(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            ObjectiveActiveEnabledCondition;                   // 0x668(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            ObjectiveToUpdateOnDeath;                          // 0x698(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            ResetObjective;                                    // 0x6C8(0x30)(NativeAccessSpecifierPublic)
	bool                                         bTriggerDeathWhenRemovedFromSpawnSystem;           // 0x6F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6636[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReference            DefendMissionObjective;                            // 0x700(0x30)(Edit, NativeAccessSpecifierPublic)
	bool                                         bOnlyAssignObjectiveBitForSelf;                    // 0x730(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6637[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionEventReference                MissionCustomEvent;                                // 0x738(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                               MissionEventOptionalContext;                       // 0x748(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakSpawnerIconComponent*              SpawnerIconComponent;                              // 0x750(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnerFailsafe;                                  // 0x758(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPickupFailsafe;                                   // 0x759(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFailsafeRequiresCompletedObjectives;              // 0x75A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6638[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReference            NoLongerCriticalCondition;                         // 0x760(0x30)(Edit, NativeAccessSpecifierPublic)
	bool                                         bPickupFailsafeChecked;                            // 0x790(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6639[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMissionSpawnerFailsafeData>   SpawnerFailsafeData;                               // 0x798(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UOakSpawnPointComponent*               TheOneEnabledSpawnPoint;                           // 0x7A8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_663A[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakMissionSpawner* GetDefaultObj();

	void SendOnAllDiedMissionEvent(class ASpawner* Spawner);
	void OnMissionFailsafeActorDeath(class ASpawner* Spawner, class AActor* Actor);
	void OnMissionActorSuspendData(class ASpawner* Spawner, struct FSpawnerActorData& ActorData);
	void OnMissionActorSpawnedOrUnsuspend(class ASpawner* Spawner, class AActor* Actor);
	void OnMissionActorFakeDeath(class ASpawner* Spawner, class AActor* Actor);
};

// 0x58 (0x858 - 0x800)
// Class OakGame.OakMissionRareSpawner
class AOakMissionRareSpawner : public AOakMissionSpawner
{
public:
	class UGameStatData*                         StatData;                                          // 0x800(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          PercentChanceToSpawn;                              // 0x808(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnabled;                                         // 0x840(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_663B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakMissionRareSpawner* GetDefaultObj();

	void DoRareSpawnSocialLogic(class ASpawner* Spawner);
};

// 0x20 (0x820 - 0x800)
// Class OakGame.OakMissionRareSpawner_WantedPoster
class AOakMissionRareSpawner_WantedPoster : public AOakMissionSpawner
{
public:
	TSubclassOf<class UMission>                  MissionClass;                                      // 0x800(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameStatData*                         StatData;                                          // 0x808(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UMission>>          PrerequisiteMissions;                              // 0x810(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakMissionRareSpawner_WantedPoster* GetDefaultObj();

	void OnStatChanged(class AActor* StatContext, class UGameStatData* InStatData, int32 Amount);
};

// 0x58 (0x160 - 0x108)
// Class OakGame.OakMissionRewardData
class UOakMissionRewardData : public UOakBaseMissionRewardData
{
public:
	TSoftObjectPtr<class URegionData>            REGION;                                            // 0x108(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInventorySlotData>     EquipSlotToUnlock;                                 // 0x130(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AssociatedCompletionAchievementId;                 // 0x158(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_663F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakMissionRewardData* GetDefaultObj();

};

// 0x10 (0x2E0 - 0x2D0)
// Class OakGame.OakMissionSpawnerFailsafeComponent
class UOakMissionSpawnerFailsafeComponent : public USceneComponent
{
public:
	class UArrowComponent*                       ArrowComponent;                                    // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBillboardComponent*                   SpriteComponent;                                   // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakMissionSpawnerFailsafeComponent* GetDefaultObj();

};

// 0x78 (0x758 - 0x6E0)
// Class OakGame.OakMissionTracker
class AOakMissionTracker : public AMissionTracker
{
public:
	uint8                                        Pad_6642[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLevelSyncCompletedMission>    CompletedMissionLevelSyncs;                        // 0x6F8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6644[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          MissionNPCTag;                                     // 0x718(0x8)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOutOfMapWaypointComponent*>    CurrentOutOfMapWaypoints;                          // 0x720(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6645[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakMissionTracker* GetDefaultObj();

	void OnTravelIDsChanged();
	class AOakCharacter* GetMissionCharacterSoft(class UObject* WorldContextObject, const struct FSoftClassPath& CharacterClass);
	class AOakCharacter* GetMissionCharacter(class UObject* WorldContextObject, TSubclassOf<class AOakCharacter> CharacterClass);
	void EnumerateNPCCharactersSoft(TArray<struct FSoftClassPath>* CharacterClasses);
	void EnumerateNPCCharacters(TArray<TSubclassOf<class AOakCharacter>>* CharacterClasses);
	void BroadcastFriendEventForCompletion(TSubclassOf<class UMission> MissionClass);
};

// 0x20 (0x820 - 0x800)
// Class OakGame.OakMissionVehicleSpawner
class AOakMissionVehicleSpawner : public AOakMissionSpawner
{
public:
	TArray<TSoftObjectPtr<class ACatchARide>>    ConsoleAllowToRespawn;                             // 0x800(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionVehicleSpawned;                           // 0x810(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakMissionVehicleSpawner* GetDefaultObj();

	void OnActorDiedEvent(class ASpawner* Spawner, struct FSpawnerActorData& ActorData);
};

// 0x28 (0x488 - 0x460)
// Class OakGame.OakTriggerSphere
class AOakTriggerSphere : public ATriggerSphere
{
public:
	class UOakTriggerComponent*                  TriggerComponent;                                  // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TouchedTrigger;                                    // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  UnTouchedTrigger;                                  // 0x478(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakTriggerSphere* GetDefaultObj();

	void NotifyTriggerUntouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
};

// 0x38 (0x4C0 - 0x488)
// Class OakGame.OakMissionWaypoint
class AOakMissionWaypoint : public AOakTriggerSphere
{
public:
	class UOakMissionIconComponent*              MissionIconComponent;                              // 0x488(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionEventReference                MissionEventReference;                             // 0x490(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionEventReference>        MissionEventReferences;                            // 0x4A0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bUsePlayerAsContext;                               // 0x4B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_664C[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakMissionWaypoint* GetDefaultObj();

	void WaypointTriggerTouched(class AActor* OtherActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
};

// 0x40 (0x4A0 - 0x460)
// Class OakGame.OakTriggerBox
class AOakTriggerBox : public ATriggerBox
{
public:
	class UOakTriggerComponent*                  TriggerComponent;                                  // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TouchedTrigger;                                    // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  UnTouchedTrigger;                                  // 0x478(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_664F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakTriggerBox* GetDefaultObj();

	void NotifyTriggerUntouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
};

// 0x38 (0x4D8 - 0x4A0)
// Class OakGame.OakMissionWaypointBox
class AOakMissionWaypointBox : public AOakTriggerBox
{
public:
	class UOakMissionIconComponent*              MissionIconComponent;                              // 0x4A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionEventReference                MissionEventReference;                             // 0x4A8(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionEventReference>        MissionEventReferences;                            // 0x4B8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bUsePlayerAsContext;                               // 0x4C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6652[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakMissionWaypointBox* GetDefaultObj();

	void WaypointTriggerTouched(class AActor* OtherActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
};

// 0x18 (0x190 - 0x178)
// Class OakGame.OakMissionWeaponComponent
class UOakMissionWeaponComponent : public UActorComponent
{
public:
	TSubclassOf<class UMission>                  MissionClass;                                      // 0x178(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMissionObjective*>             Objectives;                                        // 0x180(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMissionWeaponComponent* GetDefaultObj();

};

// 0x8 (0x118 - 0x110)
// Class OakGame.OakModifierAbility
class UOakModifierAbility : public UOakAbility
{
public:
	bool                                         bPauseModifiers;                                   // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6653[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakModifierAbility* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class OakGame.OakModifierAbility_Matchmaking
class UOakModifierAbility_Matchmaking : public UOakModifierAbility
{
public:

	static class UClass* StaticClass();
	static class UOakModifierAbility_Matchmaking* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class OakGame.OakModifierAbility_Mayhem
class UOakModifierAbility_Mayhem : public UOakModifierAbility
{
public:

	static class UClass* StaticClass();
	static class UOakModifierAbility_Mayhem* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.OakModifierLists
class UOakModifierLists : public UObject
{
public:
	TArray<struct FSoftObjectPath>               MayhemModeDataPaths;                               // 0x28(0x10)(Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakModifierLists* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class OakGame.OakModifierManager
class UOakModifierManager : public UObject
{
public:
	uint8                                        Pad_6655[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakModifierManager* GetDefaultObj();

};

// 0x8 (0x88 - 0x80)
// Class OakGame.OakModifierManager_Matchmaking
class UOakModifierManager_Matchmaking : public UOakModifierManager
{
public:
	uint8                                        Pad_6656[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakModifierManager_Matchmaking* GetDefaultObj();

};

// 0x10 (0x90 - 0x80)
// Class OakGame.OakModifierManager_Mayhem
class UOakModifierManager_Mayhem : public UOakModifierManager
{
public:
	TArray<struct FMayhemModifierSet>            ActiveModifierSets;                                // 0x80(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakModifierManager_Mayhem* GetDefaultObj();

};

// 0xB8 (0x510 - 0x458)
// Class OakGame.OakModifierManagerActor
class AOakModifierManagerActor : public AActor
{
public:
	uint8                                        Pad_6657[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    EnemyHealthScalar;                                 // 0x468(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    EnemyShieldScalar;                                 // 0x474(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    EnemyArmorScalar;                                  // 0x480(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    EnemyBoneScalar;                                   // 0x48C(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MayhemLootMultiplier;                              // 0x498(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MayhemEridiumMultiplier;                           // 0x4A4(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MayhemSkillScalar;                                 // 0x4B0(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MayhemEnvironmentScalar;                           // 0x4BC(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GlobalRarityWeightLevelBias;                       // 0x4C8(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GlobalCommonRarityWeightModifier;                  // 0x4D4(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GlobalUncommonRarityWeightModifier;                // 0x4E0(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GlobalRareRarityWeightModifier;                    // 0x4EC(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GlobalVeryRareRarityWeightModifier;                // 0x4F8(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    GlobalLegendaryRarityWeightModifier;               // 0x504(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakModifierManagerActor* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class OakGame.OakModifierManagerAttributeContextResolver
class UOakModifierManagerAttributeContextResolver : public UAttributeContextResolver
{
public:

	static class UClass* StaticClass();
	static class UOakModifierManagerAttributeContextResolver* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakModifierSetListDataAsset
class UOakModifierSetListDataAsset : public UGbxDataAsset
{
public:
	TArray<struct FOakModifierSet>               ModifierSets;                                      // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakModifierSetListDataAsset* GetDefaultObj();

};

// 0x208 (0x238 - 0x30)
// Class OakGame.OakMusicSystemConfiguration
class UOakMusicSystemConfiguration : public UGbxDataAsset
{
public:
	TMap<enum class EOakMusicSection, class UWwiseState*> MusicSectionWwiseStates;                           // 0x30(0x50)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<enum class EOakMusicPart, class UWwiseState*> MusicPartWwiseStates;                              // 0x80(0x50)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            ThreatLevelRtpc;                                   // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            InterestLevelRtpc;                                 // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EOakMusicLayer, struct FMusicLayerInfo> MusicLayerInfo;                                    // 0xE0(0x50)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ParamSmoothingAttackCoeff;                         // 0x130(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParamSmoothingDecayCoeff;                          // 0x134(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThreatSummingDistance;                             // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6658[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    ThreatScaleByLevelDifference;                      // 0x140(0x78)(Edit, NativeAccessSpecifierPublic)
	float                                        StaleThreatDuration;                               // 0x1B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInactiveDuration;                               // 0x1BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterestLevelLFODurationInSeconds;                 // 0x1C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterestLevelLFOAmplitude;                         // 0x1C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UInventoryRarityData*, struct FMusicInterestASR> LootInterestModifierByRarity;                      // 0x1C8(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMusicInterestASR                     InterestBumpOnCombatIntensify;                     // 0x218(0x10)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMusicInterestASR                     InterestBumpOnNewMapArea;                          // 0x228(0x10)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMusicSystemConfiguration* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.OakMusicAmbientPerformer
class UOakMusicAmbientPerformer : public UObject
{
public:
	float                                        ThreatLevel;                                       // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterestLevel;                                     // 0x2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMusicAmbientPerformer* GetDefaultObj();

	void Tick(float AudioTimeSeconds);
	void StopAmbientMusic();
	void BeginAmbientMusic(class AOakMusicProvider* MusicProvider, float AudioTimeSeconds);
};

// 0x78 (0xA8 - 0x30)
// Class OakGame.OakMusicData
class UOakMusicData : public UGbxDataAsset
{
public:
	class UOakMusicSystemConfiguration*          SystemConfiguration;                               // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StartMusicEvent;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopMusicEvent;                                    // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LayerUpdateFrequencyInBars;                        // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPickupBeats;                                    // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EOakMusicSection, struct FMusicSection> AssociatedMusicSections;                           // 0x50(0x50)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakMusicAmbientPerformer> AmbientMusicPerformerClass;                        // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakMusicData* GetDefaultObj();

};

// 0xA8 (0x500 - 0x458)
// Class OakGame.OakMusicProvider
class AOakMusicProvider : public AActor
{
public:
	class UWwiseAudioComponent*                  MusicAudioComponent;                               // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentThreatLevel;                                // 0x460(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentInterestLevel;                              // 0x464(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakMusicData*                         AssociatedMusicData;                               // 0x468(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakMusicAmbientPerformer*             AmbientMusicPerformer;                             // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bManualMode;                                       // 0x478(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceLegacyCompatibility;                         // 0x479(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_666B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ArtificialMinimumThreat;                           // 0x47C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_666C[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakMusicProvider* GetDefaultObj();

	void StopMusic();
	void SetInterestLevel(float NewInterestLevel);
	void SetCombatLevel(float NewCombatLevel);
	void PlayMusic(class UOakMusicData* MusicData);
	void OnMusicBeat(struct FWwiseMusicTiming* MusicTiming);
	void OnEndEncounter();
	void OnEncounterVictory();
	void OnBeginEncounter(class UWwiseState* WwiseState);
	void NotifyMapAreaDiscovered();
	void NotifyItemSpotted(class AOakInventoryItemPickup* InventoryItemPickup);
	void NotifyCombatIntensifies();
	class FString GetSectionName();
	class FString GetPartName();
	class AOakMusicProvider* GetOakMusicProvider(class UObject* WorldContextObject);
	class FString GetLayerList();
	float GetInterestLevel();
	float GetCurrentBeatDurationInSeconds();
	float GetCombatLevel();
	float GetAudioTimeOfNextBeat();
	float GetAudioTimeOfNextBar();
	void EndEncounter();
	void EncounterVictory();
	void BeginEncounter(class UWwiseState* WwiseState);
	void ApplyInterestModifier(float ModifierAmount, float ModifierDuration);
};

// 0x1C0 (0xCB0 - 0xAF0)
// Class OakGame.OakNavComponent
class UOakNavComponent : public UGbxNavComponent
{
public:
	class UVehicleDrivingDataAsset*              DrivingData;                                       // 0xAF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_667D[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakVehicle*                           MyVehicle;                                         // 0xB30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAIVehicleFlightComponent*             MyVehicleFlight;                                   // 0xB38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASeatPawn*                             MyTurret;                                          // 0xB40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakAIController*                      MyOakAIController;                                 // 0xB48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOakNavReverseState                   ReverseState;                                      // 0xB50(0x18)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FOakVehicleNavCorrecter               OakVehicleNavCorrecter;                            // 0xB68(0xB8)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_667F[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakNavComponent* GetDefaultObj();

	bool TeleportVehicleToGoal();
	void ShowDebugVehicleNav(bool bEnable);
	void SetStuckTeleport(class AActor* Actor, const struct FStuckTeleport& StuckTeleport);
	void SetScriptedMoveTo(struct FVector& Location, struct FVector& EntryLocation, float ReachRadius, float WantedSpeed, bool bMaxSpeed, bool bUseBoost, float Duration, float DotDestination, bool bGoBackward);
	float GetDesiredSpeed();
	void ClearSpeedOverride(enum class ESpeedModifierOverridePriority Priority);
	void ClearScriptedMoveTo();
	void ClearDrivingOverride(enum class EDrivingOverridePriority Priority);
	void AddSpeedRubberbandOverride(const struct FRubberbandSpeedData& InRubberbandSpeedData, enum class ESpeedModifierOverridePriority Priority, float WantedSpeed, bool bUseBoost, bool bForceReverse, bool bForceHandbrake, float SteeringValue, float Duration, float SpeedHack, bool bGoBackward);
	void AddSpeedOverride(enum class ESpeedModifierOverridePriority Priority, float WantedSpeed, bool bMaxSpeed, bool bUseBoost, bool bForceReverse, bool bForceHandbrake, float SteeringValue, float Duration, float SpeedHack, bool bGoBackward);
	void AddDrivingOverride(enum class EDrivingOverridePriority Priority, bool bDisableTurnHandBrake);
};

// 0x0 (0xB80 - 0xB80)
// Class OakGame.OakNavWorld
class AOakNavWorld : public AGbxNavWorld
{
public:

	static class UClass* StaticClass();
	static class AOakNavWorld* GetDefaultObj();

};

// 0x5F0 (0x1A30 - 0x1440)
// Class OakGame.OakNogDroneContainerComponent
class UOakNogDroneContainerComponent : public UGbxSkeletalMeshComponent
{
public:
	float                                        DroneDigistructTime;                               // 0x1440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DroneHealthPercentOfNog;                           // 0x1444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDronesDieOnHealthDepleted;                        // 0x1448(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6695[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DroneReplenishThreshold;                           // 0x144C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DroneReplenishMin;                                 // 0x1450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6696[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxBlackboardKeySelector             ShouldReplenishDronesKey;                          // 0x1458(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxBlackboardKeySelector             DroneShieldEnabledKey;                             // 0x1468(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DroneDeathFX;                                      // 0x1478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DroneScatterCount;                                 // 0x1480(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6697[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AOakDroneProjectile>       ScatterDroneClass;                                 // 0x1488(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakDroneProjectile>       HealDroneClass;                                    // 0x1490(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakDroneProjectile>       DefendDroneClass;                                  // 0x1498(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakDroneProjectile>       AttackDroneClass;                                  // 0x14A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6699[0x56C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DroneAliveCount;                                   // 0x1A14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGbxCharacter*                         Nog;                                               // 0x1A18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_669A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakNogDroneContainerComponent* GetDefaultObj();

	void ToggleDroneBone(int32 DroneIndex, bool bToggleOn, bool bInstant);
	void ToggleDrone(int32 DroneIndex, bool bToggleOn, bool bInstant);
	void ToggleAllDrones(bool bToggleOn, bool bInstant);
	void StopReplenishingDrones();
	void ReplenishDrones(int32 TotalNeeded, float DelayBetweenSpawn, bool bInstant, const class FString& DroneListOverrideCSV);
	void KillDrone(int32 DroneIndex);
	void KillAllDrones(bool bScatterDrones);
	bool IsDroneEnabled(int32 DroneIndex);
	struct FTransform GetDroneTransform(int32 DroneIndex);
	class FName GetDroneName(int32 DroneIndex);
	int32 FindDroneIndexByBoneName(class FName BoneName);
	void DroneInitialization();
	void DeployRandomDrones(int32 DroneCount, TSubclassOf<class AOakDroneProjectile> DroneClass, class AActor* Target);
	void DeployRandomDrone(TSubclassOf<class AOakDroneProjectile> DroneClass, class AActor* Target);
	void DeployDrone(int32 DroneIndex, TSubclassOf<class AOakDroneProjectile> DroneClass, class AActor* Target);
	void ApplyDamageToDrones(float Damage, const struct FVector& HitLocation);
	void ApplyDamageToDrone(int32 DroneIndex, float Damage);
};

// 0x8 (0xAF8 - 0xAF0)
// Class OakGame.TrooperAnimInstance
class UTrooperAnimInstance : public UOakCharacterAnimInstance
{
public:
	float                                        LeftHandWeaponIKOffsetLocationX;                   // 0xAF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_669C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTrooperAnimInstance* GetDefaultObj();

};

// 0x38 (0xB30 - 0xAF8)
// Class OakGame.OakNPCAnimInstance
class UOakNPCAnimInstance : public UTrooperAnimInstance
{
public:
	float                                        NPCEmoteWeightModifier;                            // 0xAF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AddPoseSlotWeight;                                 // 0xAFC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullEmoteWeight;                                   // 0xB00(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullEmoteWeightWithSlot;                           // 0xB04(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullBodySlotWeight;                                // 0xB08(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LocomotionWalkToRunTransitionIndex;                // 0xB0C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocomotionWalkToRunSpeedThreshold;                 // 0xB10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LocomotionRunToWalkTransitionIndex;                // 0xB14(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocomotionRunToWalkSpeedThreshold;                 // 0xB18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LocomotionRunToSprintTransitionIndex;              // 0xB1C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocomotionRunToSprintSpeedThreshold;               // 0xB20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LocomotionSprintToRunTransitionIndex;              // 0xB24(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocomotionSprintToRunSpeedThreshold;               // 0xB28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_669E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakNPCAnimInstance* GetDefaultObj();

};

// 0x4D8 (0x650 - 0x178)
// Class OakGame.OakNpcGreetingComponent
class UOakNpcGreetingComponent : public UActorComponent
{
public:
	struct FGbxParam                             GreetingDistance;                                  // 0x178(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             HelloCooldown;                                     // 0x1F8(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_66A1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxParam                             GoodbyeCooldown;                                   // 0x280(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_66A2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxParam                             IdleCooldown;                                      // 0x308(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_66A3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxParam                             InUseCooldown;                                     // 0x390(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_66A4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxParam                             ForgetActorTime;                                   // 0x418(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_66A5[0x190];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UAIPerceptionComponent*                PerceptionComponent;                               // 0x628(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxDialogComponent*                   DialogComponent;                                   // 0x630(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMissionObserverComponent*             MissionObserverComponent;                          // 0x638(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakMissionDirectorComponent*          MissionDirectorComponent;                          // 0x640(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66A7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakNpcGreetingComponent* GetDefaultObj();

	void OnPerceptionUpdated(TArray<class AActor*>& UpdatedActors);
	void OnDialogStarted();
};

// 0x50 (0x80 - 0x30)
// Class OakGame.OakNPCMailData
class UOakNPCMailData : public UGbxDataAsset
{
public:
	class FText                                  SenderDisplayName;                                 // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Subject;                                           // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	class UItemPoolData*                         ItemPoolReward;                                    // 0x78(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakNPCMailData* GetDefaultObj();

};

// 0x18 (0x308 - 0x2F0)
// Class OakGame.OakOnlineNetworkOptionsMenu
class UOakOnlineNetworkOptionsMenu : public UGbxUmgMenu
{
public:
	class UGbxGridListWidget*                    NetworkOptionList;                                 // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOnlineNetworkOptionData>      OptionItemData;                                    // 0x2F8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakOnlineNetworkOptionsMenu* GetDefaultObj();

	void OnOptionSelected(class UGbxListItem* SelectedItem);
	void OnOptionClicked(class UGbxListItem* ClickedItem);
	void HandleOptionSelected(class UGbxListItem* SelectedItem, struct FOnlineNetworkOptionData& Data);
};

// 0x0 (0x2E8 - 0x2E8)
// Class OakGame.OakOnlineNetworkOptionsItemWidget
class UOakOnlineNetworkOptionsItemWidget : public UGbxListItem
{
public:

	static class UClass* StaticClass();
	static class UOakOnlineNetworkOptionsItemWidget* GetDefaultObj();

	void HandleDataChanged(struct FOnlineNetworkOptionData& Data);
};

// 0x90 (0x380 - 0x2F0)
// Class OakGame.OakOnlinePlayerDetailsMenu
class UOakOnlinePlayerDetailsMenu : public UGbxUmgMenu
{
public:
	class UGbxScrollBoxList*                     ChoiceList;                                        // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            HintText;                                          // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ChoiceIds;                                         // 0x300(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_66AF[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakOnlinePlayerDetailsMenu* GetDefaultObj();

	void SetupDetailsWidget(struct FOakOnlineLobbyPlayerInfo& PlayerInfo);
	void OnChoiceClicked(class UGbxListItem* ListItem);
};

// 0x40 (0x1D8 - 0x198)
// Class OakGame.OakOnlineSessionClient
class UOakOnlineSessionClient : public UOnlineSessionClient
{
public:
	uint8                                        Pad_66B1[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakOnlineSessionClient* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class OakGame.OakOnlineStatsHelper
class UOakOnlineStatsHelper : public UObject
{
public:
	TArray<class UGameStatData*>                 ManufacturerStats;                                 // 0x28(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UGameStatData*>                 GunTypeStats;                                      // 0x38(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UGameStatData*                         PlaytimeStat;                                      // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameStatData*                         SlotMachineWinsStat;                               // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameStatData*                         BadassesKilledStat;                                // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66B3[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakOnlineStatsHelper* GetDefaultObj();

	void OnStatIncrement(class AActor* StatContext, class UGameStatData* StatId, int32 Amount);
};

// 0x0 (0x108 - 0x108)
// Class OakGame.OakOptionalObjectiveRewardData
class UOakOptionalObjectiveRewardData : public UOakBaseMissionRewardData
{
public:

	static class UClass* StaticClass();
	static class UOakOptionalObjectiveRewardData* GetDefaultObj();

};

// 0xC8 (0x200 - 0x138)
// Class OakGame.OakPassiveAbility
class UOakPassiveAbility : public UOakPlayerAbility
{
public:
	uint8                                        Pad_66B7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWithinTimeEventActive;                            // 0x140(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66B8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Grade;                                             // 0x144(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTriggeredPassiveAbilityEffect        TriggeredEffect;                                   // 0x148(0x48)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bRegisterAsHUDPassiveAbility;                      // 0x190(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_66B9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture*                              Icon;                                              // 0x198(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOakPassiveAbilityHUDIconData         HUDIconData;                                       // 0x1A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UUIStatData*                           PowerUIStat;                                       // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUIStatData*>                   PowerPopoutUIStats;                                // 0x1C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_66BA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WithinTimeEventCount;                              // 0x1E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WithinTimeEventTimeLimit;                          // 0x1E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_66BB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakPassiveAbility* GetDefaultObj();

	void TriggerWithinTimeEvent();
	void TriggerPassiveAbilityEffect();
	void ResetWithinTimeEventTracker();
	void OnWithinTimeEventComplete();
	void OnTriggeredEffectEnded();
	void OnGradeChanged();
	bool IsTriggeredEffectActive();
	void GetManualHUDIconValues(int32* OutStackCount, float* OutDuration, float* OutTimeRemaining);
};

// 0x50 (0x80 - 0x30)
// Class OakGame.OakPassiveAbilityAttributeEffectMutatorData
class UOakPassiveAbilityAttributeEffectMutatorData : public UAttributeEffectMutatorData
{
public:
	int32                                        GradeToStartApplyingEffect;                        // 0x30(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PerGradeUpgradeInterval;                           // 0x34(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          PerGradeUpgrade;                                   // 0x38(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FBonusAttributeModifierUpgrade> BonusUpgrades;                                     // 0x70(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPassiveAbilityAttributeEffectMutatorData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.OakPassiveAbilityBuffAspectData
class UOakPassiveAbilityBuffAspectData : public UInventoryAspectData
{
public:
	TArray<struct FPassiveAbilityBuffData>       Buffs;                                             // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPassiveAbilityBuffAspectData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakPassiveAbilityBuffProviderInterface
class IOakPassiveAbilityBuffProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IOakPassiveAbilityBuffProviderInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.MicropatchBlueprintLibrary
class UMicropatchBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UMicropatchBlueprintLibrary* GetDefaultObj();

	void ProcessTrackedMicropatchList(const TArray<struct FMicropatchTracker>& MicropatchTrackers, bool bUndo);
	bool ProcessTrackedMicropatch(const struct FMicropatchTracker& MicropatchTracker, bool bUndo);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakPatchHelperBlueprintFunctionLibrary
class UOakPatchHelperBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakPatchHelperBlueprintFunctionLibrary* GetDefaultObj();

	void BlueprintFix_OAKLIVE_4119(class UObject* WorldContextObject, const class FString& ToLayer, float TransitionDuration);
	void BlueprintFix_OAKLIVE_1578(class AActor* Target, class AActor* LookAtActor, bool bAimAtActor, bool bFireWeaponAtActor, class UStanceDataProvider* OptionalStance);
	void BlueprintFix_OAK_216536_OnScriptedMoveComplete2();
	void BlueprintFix_OAK_216536_OnScriptedMoveComplete1();
	void BlueprintFix_OAK_216536_MRE_MoxxiTokenDone();
	void BlueprintFix_OAK_216536_MRE_GivePiecesComplete();
	void BlueprintFix_OAK_210096_TriggerUntouched(class AActor* LeavingActor, bool bIsPlayer);
	void BlueprintFix_OAK_210096_TriggerTouched(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void BlueprintFix_OAK_210015();
	void BlueprintFix_DAF_75073_OnScriptedMoveDone();
	void BlueprintFix_DAF_75073_MRE_CuratorToFireCrystal_2();
	void BlueprintFix_DAF_63800_TutoForce();
	void BlueprintFix_DAF_62776_OnThirdCatapultDeathSequenceStarted();
	void BlueprintFix_DAF_62776_OnFirstCatapultDeathSequenceStarted();
};

// 0xA8 (0x6F0 - 0x648)
// Class OakGame.OakPawnAttachSlotComponent
class UOakPawnAttachSlotComponent : public UPawnAttachSlotComponent
{
public:
	uint8                                        bLockInputDuringAttach : 1;                        // Mask: 0x1, PropSize: 0x10x648(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLockInputDuringDetach : 1;                        // Mask: 0x2, PropSize: 0x10x648(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransferInventory : 1;                            // Mask: 0x4, PropSize: 0x10x648(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanUseWhileNotPossessingPrimaryCharacter : 1;     // Mask: 0x8, PropSize: 0x10x648(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bModifyHUD : 1;                                    // Mask: 0x10, PropSize: 0x10x648(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHideHUDWhileAttaching : 1;                        // Mask: 0x20, PropSize: 0x10x648(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHideHUDWhileDetaching : 1;                        // Mask: 0x40, PropSize: 0x10x648(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClearSelfElementalEffectsOnAttach : 1;            // Mask: 0x80, PropSize: 0x10x648(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClearPawnElementalEffectsOnAttach : 1;            // Mask: 0x1, PropSize: 0x10x649(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlockPawnElementalEffectsWhileAttached : 1;       // Mask: 0x2, PropSize: 0x10x649(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowPetsWhileAttached : 1;                       // Mask: 0x4, PropSize: 0x10x649(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowEchoDeviceEquipping : 1;                     // Mask: 0x8, PropSize: 0x10x649(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHidePrimaryWeaponWhileAttached : 1;               // Mask: 0x10, PropSize: 0x10x649(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHideHolsteredWeaponWhileAttached : 1;             // Mask: 0x20, PropSize: 0x10x649(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMustMatchDuelTeamOfInstigator : 1;                // Mask: 0x40, PropSize: 0x10x649(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseStatusMenuCameraMode : 1;                      // Mask: 0x80, PropSize: 0x10x649(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66E2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPawnAttachCameraModeOptions          CameraModeOptions;                                 // 0x650(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UCameraModeSetData*                    CameraModesSet;                                    // 0x678(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideCrosshairScreenPosition;                  // 0x680(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             CrosshairScreenPosition;                           // 0x684(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayOccupiedIdleAudioOnLocalPlayerOnly;           // 0x68C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66E6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           OccupiedIdleAudioEvent;                            // 0x690(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           OccupiedIdleStopAudioEvent;                        // 0x698(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66E7[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTransitionIsHijacked;                             // 0x6D0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66E8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           HijackerController;                                // 0x6D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAllowedToDetachWhenHiJack;                      // 0x6E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLeapOnTarget;                                   // 0x6E1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSeatSwap;                                       // 0x6E2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_66E9[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakPawnAttachSlotComponent*           HijackAttachSlot;                                  // 0x6E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakPawnAttachSlotComponent* GetDefaultObj();

	struct FRotator GetWeaponRotation(bool bWorldSpace);
	class APawn* GetHijackedOccupant();
};

// 0x18 (0x48 - 0x30)
// Class OakGame.OakPlayerAbilityData
class UOakPlayerAbilityData : public UGbxDataAsset
{
public:
	class UOakPlayerAbilityTreeData*             AbilityTreeData;                                   // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOakPlayerAbilitySlotData*>     PlayerAbilitySlots;                                // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityData* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.OakPlayerAbilityEventHub
class UOakPlayerAbilityEventHub : public UObject
{
public:
	UMulticastDelegateProperty_                  OnWeaponEquipped;                                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityEventHub* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class OakGame.OakPlayerAbilityEventHub_Beastmaster
class UOakPlayerAbilityEventHub_Beastmaster : public UOakPlayerAbilityEventHub
{
public:
	UMulticastDelegateProperty_                  OnBeastmasterPetSpawned;                           // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeastmasterPetReleased;                          // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_66EA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakPlayerAbilityEventHub_Beastmaster* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakPlayerAbilityEventHubStatics
class UOakPlayerAbilityEventHubStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakPlayerAbilityEventHubStatics* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakPlayerAbilityEventHubStatics_Beastmaster
class UOakPlayerAbilityEventHubStatics_Beastmaster : public UOakPlayerAbilityEventHubStatics
{
public:

	static class UClass* StaticClass();
	static class UOakPlayerAbilityEventHubStatics_Beastmaster* GetDefaultObj();

	void FireBeastmasterPetSummonStarted(class AOakCharacter_Player* Player);
	void FireBeastmasterPetSpawned(class AOakCharacter_Player* Player, class AOakCharacter* NewPet);
	void FireBeastmasterPetReleased(class AOakCharacter_Player* Player, class AOakCharacter* NewPet);
};

// 0x20 (0x50 - 0x30)
// Class OakGame.OakPlayerAbilityHUDItemData
class UOakPlayerAbilityHUDItemData : public UDataAsset
{
public:
	class UTexture*                              Icon;                                              // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Priority;                                          // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_66F3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           StartAudioEvent;                                   // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           StopAudioEvent;                                    // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityHUDItemData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakPlayerAbilityHUDItemValueProviderInterface
class IOakPlayerAbilityHUDItemValueProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IOakPlayerAbilityHUDItemValueProviderInterface* GetDefaultObj();

};

// 0x560 (0x7C8 - 0x268)
// Class OakGame.OakPlayerAbilityManagerComponent
class UOakPlayerAbilityManagerComponent : public UOakCharacterAbilityManagerComponent
{
public:
	UMulticastDelegateProperty_                  OnActionSkillReady;                                // 0x268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActionSkillCoolingDown;                          // 0x278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActionSkillActivated;                            // 0x288(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActionSkillActivating;                           // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActionSkillEnded;                                // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActionAbilityAugmentChanged;                     // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerAbilitySlotChanged;                        // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActionSkillChargeCountChanged;                   // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActionSkillActivationFailed;                     // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6715[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakPlayerAbilityTreeBranchData*> PlayerAbilityBranches;                             // 0x400(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class UOakPlayerAbilitySlotData*>     PlayerAbilitySlots;                                // 0x410(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOakPlayerAbilityEventHub> PlayerAbilityEventHubClass;                        // 0x420(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        FirstAbilityPointLevel;                            // 0x428(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6716[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FExtraAbilityPointsScheduleEntry> ExtraAbilityPointsSchedule;                        // 0x430(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<enum class EPlayerAbilityFeature, int32> ExtraFeatureUnlockAbilityPoints;                   // 0x440(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<enum class EPlayerAbilityFeature, int32> ExtraFeatureUnlockHeroPoints;                      // 0x490(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityTree*                 PlayerAbilityTree;                                 // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityEventHub*             PlayerAbilityEventHub;                             // 0x4E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GradePointsToUnlockFirstTier;                      // 0x4F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUsesTreeActionAbility;                            // 0x4F4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6717[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UOakActionAbility>         TreeActionAbilityClass;                            // 0x4F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOakPlayerAbilitySlotList             AbilitySlotList;                                   // 0x500(0xC8)(Net, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FOakActionAbilityAugmentSlotList      AugmentSlotList;                                   // 0x5C8(0xC8)(Net, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UOakActionAbility*>             ActionAbilities;                                   // 0x690(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FOakPlayerAbilityHUDItemList          PlayerAbilityHUDItemList;                          // 0x6A0(0xC8)(Net, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FOakActionAbilityAugmentSlotConfigurationList SlotConfigurationList;                             // 0x768(0x18)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UOakPlayerAbilityTreeBranchData*> LockedSkillBranches;                               // 0x780(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                         bUnlockedInitialSecondaryClass;                    // 0x790(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUnlockedSecondaryClassSwapping;                   // 0x791(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUnlockedClassFeatures;                            // 0x792(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6719[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakPlayerAbilityTreeBranchData*       PrimaryClassBranch;                                // 0x798(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityTreeBranchData*       SlottedSecondaryBranch;                            // 0x7A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<int32>                                SecondryActionAbilityUnlockSchedule;               // 0x7A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	enum class EOakPlayerClass                   CachedPrimaryClass;                                // 0x7B8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EOakPlayerClass                   CachedSecondaryClass;                              // 0x7B9(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_671B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       RespecCount;                                       // 0x7BC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsFirstTimeSlottingAnyActionAbility;              // 0x7C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_671C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakPlayerAbilityManagerComponent* GetDefaultObj();

	void UnlockAbilityBranch(class UOakPlayerAbilityTreeBranchData* BranchToUnlock);
	void SlotSecondaryAbilityBranch(class UOakPlayerAbilityTreeBranchData* InSecondaryBranch);
	void SetSlotAugment(TSubclassOf<class UOakActionAbility> AbilityClass, class UOakActionAbilityAugmentSlotData* AugmentSlot, class UOakActionAbilityAugmentData* Augment);
	void SetSlotAbilityClass(class UOakPlayerAbilitySlotData* AbilitySlot, TSubclassOf<class UOakPlayerAbility> AbilityClass);
	void SetPrimaryAbilityBranch(class UOakPlayerAbilityTreeBranchData* InPrimaryBranch);
	void ResetAbilityTreeAndSecondarySlot();
	void PurchaseAbilityRespec();
	void OnSlottedAbilityBranchChanged();
	void OnPlayerLevelUp(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnPlayerAbilityTreeReset();
	void OnPlayerAbilityTreePointsChanged(int32 NewPoints);
	void OnPlayerAbilityTreeGradeChanged(int32 NewGrade);
	bool IsBranchPrimaryOrSlottedForClass(enum class EOakPlayerClass PlayerClass);
	bool IsBranchPrimaryOrSlotted(class UOakPlayerAbilityTreeBranchData* Branch);
	bool IsAbilitySlotted(TSubclassOf<class UOakPlayerAbility> AbilityClass);
	bool IsAbilityAugmentSlotted(TSubclassOf<class UOakActionAbility> AbilityClass, class UOakActionAbilityAugmentData* Augment);
	bool IsAbilityAugmentInSlot(TSubclassOf<class UOakActionAbility> AbilityClass, class UOakActionAbilityAugmentData* Augment, class UOakActionAbilityAugmentSlotData* AugmentSlot);
	bool HasPurchasedPlayerAbility(TSubclassOf<class UOakPlayerAbility> AbilityClass);
	TArray<class UOakPlayerAbilityTreeBranchData*> GetUnlockedAbiliyBranches();
	int32 GetTotalBranchUnlockPoints();
	class UOakPlayerAbilityTreeBranchData* GetSlottedSecondaryAbilityBranch();
	TSubclassOf<class UOakPlayerAbility> GetSlotAbilityClass(class UOakPlayerAbilitySlotData* AbilitySlot);
	class UOakPlayerAbility* GetSlotAbility(class UOakPlayerAbilitySlotData* AbilitySlot);
	enum class EOakPlayerClass GetSecondaryPlayerClass();
	int32 GetRemainingUnlocks();
	enum class EOakPlayerClass GetPrimaryPlayerClass();
	class UOakPlayerAbilityTreeBranchData* GetPrimaryAbilityBranch();
	enum class EAbilityBranchStatus GetBranchStatus(class UOakPlayerAbilityTreeBranchData* BranchToCheck);
	class UOakPlayerAbilitySlotData* GetAbilitySlot(TSubclassOf<class UOakPlayerAbility> AbilityClass);
	class UOakActionAbilityAugmentData* GetAbilityAugmentInSlot(TSubclassOf<class UOakActionAbility> AbilityClass, class UOakActionAbilityAugmentSlotData* AugmentSlot);
	class UOakActionAbility* FindActionAbility(TSubclassOf<class UOakActionAbility> ActionAbilityClass);
	void ClientUpgradeAbilityTreeItem(class UOakPlayerAbilityTreeItemData* ItemData);
	void ClientResetAbilities();
	void ClientRecordModSlotChange(TSubclassOf<class UOakActionAbility> AbilityClass, class UOakActionAbilityAugmentSlotData* ModSlotData, class UOakActionAbilityAugmentData* ModAugmentData, class UOakActionAbilityAugmentData* AugmentData);
	void Client_OnSetSecondaryAbilityBranch(class UOakPlayerAbilityTreeBranchData* InSecondaryBranch);
	void Client_OnSetPrimaryAbilityBranch(class UOakPlayerAbilityTreeBranchData* InPrimaryBranch);
	void Client_OnPlayerAbilityFeatureUnlockChanged(enum class EPlayerAbilityFeature Feature, bool bNewValue);
	void ClearSecondaryAbilityBranch();
	void ClearPrimaryAbilityBranch();
	bool CanAugmentBeUsed(class UOakActionAbilityAugmentData* InAugmentData);
};

// 0x50 (0x80 - 0x30)
// Class OakGame.OakPlayerAbilitySlotData
class UOakPlayerAbilitySlotData : public UGbxDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        LevelUnlock;                                       // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_671F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UOakPlayerAbility>> SupportedAbilityClasses;                           // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	int32                                        UISlotNumber;                                      // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESkillWidgetSlot                  UISlot;                                            // 0x7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6720[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakPlayerAbilitySlotData* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class OakGame.OakPlayerAbilitySlotsData
class UOakPlayerAbilitySlotsData : public UGbxDataAsset
{
public:
	TArray<struct FOakActionAbilitySlot>         ActionAbilitySlots;                                // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FOakAbilitySlot>               PassiveAbilitySlots;                               // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilitySlotsData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakPlayerAbilityStatics
class UOakPlayerAbilityStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakPlayerAbilityStatics* GetDefaultObj();

	struct FOakPlayerAbilityAllyQueryResult QueryAllies(class AOakCharacter_Player* SourcePlayer, struct FOakPlayerAbilityAllyQuerySpec& Spec);
};

// 0x158 (0x180 - 0x28)
// Class OakGame.OakPlayerAbilityTree
class UOakPlayerAbilityTree : public UObject
{
public:
	UMulticastDelegateProperty_                  OnPlayerAbilityTreeTierChanged;                    // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerAbilityTreeItemChanged;                    // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerAbilityPointsChanged;                      // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTreeGradePointsChanged;                          // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerAbilityTreeReset;                          // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityManagerComponent*     Owner;                                             // 0x78(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOakActionAbility>         TreeActionAbilityClass;                            // 0x80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAbilityTreeBranch>            Branches;                                          // 0x88(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FAbilityTreeTier>              Tiers;                                             // 0x98(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FAbilityTreeItem>              Items;                                             // 0xA8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<TSubclassOf<class UOakPlayerAbility>, class UOakPlayerAbilityTreeItemData_Ability*> AbilityClassToTreeItemData;                        // 0xB8(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<class UGbxDataAsset*, class UOakPlayerAbilityTreeItemData_GbxDataAsset*> DataAssetToTreeItemData;                           // 0x108(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        AbilityPoints;                                     // 0x158(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6727[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TScriptInterface<class IOakPassiveAbilityBuffProviderInterface>> BuffProviders;                                     // 0x160(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6728[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTree* GetDefaultObj();

	void OnRep_AbilityPoints();
	void GiveAbilityPoints(int32 Points);
	void DEBUG_AddPointToAbilityTreeItem(class UOakPlayerAbilityTreeItemData* ItemData);
	void ClientSetTreeGrade(int32 NewTreeGrade);
	void ClientAddItemPoint(class UOakPlayerAbilityTreeItemData* ItemData);
	void AddPointToAbilityTreeItem(class UOakPlayerAbilityTreeItemData* ItemData);
};

// 0x138 (0x168 - 0x30)
// Class OakGame.OakPlayerAbilityTreeBranchData
class UOakPlayerAbilityTreeBranchData : public UGbxDataAsset
{
public:
	class FName                                  BranchTag;                                         // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  BranchName;                                        // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  BranchTagline;                                     // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  BranchDesc;                                        // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FBranchColorInfo                      BranchColorInfo;                                   // 0x80(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class UOakPlayerAbilityTreeTierData*> Tiers;                                             // 0x118(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	enum class EOakPlayerClass                   ClassFeatEnum;                                     // 0x128(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_672A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UOakAbility>               ClassFeat;                                         // 0x130(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             ClassFeatImage;                                    // 0x138(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDownloadableContentData*              DLCExpansionData;                                  // 0x160(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeBranchData* GetDefaultObj();

	TArray<TSubclassOf<class UOakActionAbility>> GetActionAbilities();
};

// 0x28 (0x58 - 0x30)
// Class OakGame.OakPlayerAbilityTreeData
class UOakPlayerAbilityTreeData : public UGbxDataAsset
{
public:
	int32                                        GradePointsToUnlockFirstTier;                      // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_672B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakPlayerAbilityTreeBranchData*> Branches;                                          // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         bUsesTreeActionAbility;                            // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_672C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UOakActionAbility>         TreeActionAbilityClass;                            // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeData* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class OakGame.OakPlayerAbilityTreeTierData
class UOakPlayerAbilityTreeTierData : public UGbxDataAsset
{
public:
	int32                                        BranchPointsToUnlock;                              // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_672D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakPlayerAbilityTreeItemData*> Items;                                             // 0x38(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UOakPlayerAbilityTreeItemData*> WingItems;                                         // 0x48(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeTierData* GetDefaultObj();

};

// 0xA8 (0xD8 - 0x30)
// Class OakGame.OakPlayerAbilityTreeItemData
class UOakPlayerAbilityTreeItemData : public UGbxDataAsset
{
public:
	int32                                        MaxPoints;                                         // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESkillItemLayoutInfo              LayoutInfo;                                        // 0x34(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_672F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ItemFrameName;                                     // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESkillItemDisplayType             ItemDisplayType;                                   // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6730[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ParentSkillName;                                   // 0x50(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  FlavorText;                                        // 0x68(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FName                                  EquipVO;                                           // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             IconTexture;                                       // 0x88(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             IconTextureSelected;                               // 0xB0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeItemData* GetDefaultObj();

};

// 0x10 (0xE8 - 0xD8)
// Class OakGame.OakPlayerAbilityTreeItemData_Ability
class UOakPlayerAbilityTreeItemData_Ability : public UOakPlayerAbilityTreeItemData
{
public:
	TSubclassOf<class UOakPlayerAbility>         AbilityClass;                                      // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsSecondaryActionAbility;                         // 0xE0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6732[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeItemData_Ability* GetDefaultObj();

};

// 0x0 (0xD8 - 0xD8)
// Class OakGame.OakPlayerAbilityTreeItemData_GbxDataAsset
class UOakPlayerAbilityTreeItemData_GbxDataAsset : public UOakPlayerAbilityTreeItemData
{
public:

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeItemData_GbxDataAsset* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class OakGame.OakPlayerAbilityTreeItemData_ActionAbilityAugment
class UOakPlayerAbilityTreeItemData_ActionAbilityAugment : public UOakPlayerAbilityTreeItemData_GbxDataAsset
{
public:
	class UOakActionAbilityAugmentData*          AugmentData;                                       // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeItemData_ActionAbilityAugment* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class OakGame.OakPlayerAbilityTreeItemData_ActionAbilityAugmentSlot
class UOakPlayerAbilityTreeItemData_ActionAbilityAugmentSlot : public UOakPlayerAbilityTreeItemData_GbxDataAsset
{
public:
	class UOakActionAbilityAugmentSlotData*      AugmentSlotData;                                   // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeItemData_ActionAbilityAugmentSlot* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class OakGame.OakPlayerAbilityTreeItemData_PlayerCharacterAugment
class UOakPlayerAbilityTreeItemData_PlayerCharacterAugment : public UOakPlayerAbilityTreeItemData_GbxDataAsset
{
public:
	class UPlayerCharacterComponentAugmentData*  AugmentData;                                       // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAbilityTreeItemData_PlayerCharacterAugment* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class OakGame.OakFirstPersonData
class UOakFirstPersonData : public UObject
{
public:
	TArray<struct FViewLeadingInfo>              LeadingInfo;                                       // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MinSpeed2DWhenTryingToMove;                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponAngleAlphaExp;                               // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RAddAlphaInterpSpeed;                              // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PistolStockAddAlphaInterpSpeed;                    // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MantleReachInterpInSpeed;                          // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MantleReachInterpOutSpeed;                         // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MantleReachOutMaximumUpwardVelocity;               // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MantleReachOutMinimumHeightOffGround;              // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ReloadVariationTranslationMin;                     // 0x58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ReloadVariationTranslationMax;                     // 0x64(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ReloadVariationRotationMin;                        // 0x70(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              ReloadVariationRotationMax;                        // 0x7C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        BringHandsDownReturnRate;                          // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BringHandsDownLocationOffset;                      // 0x8C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BringHandsDownRotationOffset;                      // 0x98(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        BringHandsDownCurveExponent;                       // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakFirstPersonData* GetDefaultObj();

};

// 0x200 (0xCF0 - 0xAF0)
// Class OakGame.OakPlayerAnimInstance
class UOakPlayerAnimInstance : public UOakCharacterAnimInstance
{
public:
	class AOakCharacter_Player*                  PlayerOwner;                                       // 0xAF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPistol;                                         // 0xAF8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_673E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakFirstPersonData*                   FirstPersonData;                                   // 0xB00(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInputTransforms                      FirstPersonViewModelOffsets;                       // 0xB08(0x10)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FVector                               FirstPersonWeaponOffsetLocation;                   // 0xB18(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              FirstPersonWeaponOffsetRotation;                   // 0xB24(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               FirstPersonOffsetLocation;                         // 0xB30(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonSpeed2D;                                // 0xB3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonZoomEffect;                             // 0xB40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonZoomStartPosition;                      // 0xB44(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonTiltWeight;                             // 0xB48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonMuteADSWeight;                          // 0xB4C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonMantleReachWeight;                      // 0xB50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonWeaponAngleAlpha;                       // 0xB54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6740[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstPersonRAddAlpha;                              // 0xB70(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonPistolStockAddAlpha;                    // 0xB74(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeadBobMultiplier;                                 // 0xB78(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FirstPersonFallNoise;                              // 0xB7C(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonFingerOverrideWeight;                   // 0xB88(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6742[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstPersonLadderIdleAdditiveAlpha;                // 0xB94(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFirstPersonUseAimOffset : 1;                      // Mask: 0x1, PropSize: 0x10xB98(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFirstPersonBranchLeftArm : 1;                     // Mask: 0x2, PropSize: 0x10xB98(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFirstPersonBlendMantle : 1;                       // Mask: 0x4, PropSize: 0x10xB98(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFirstPersonWeaponIsLowered : 1;                   // Mask: 0x8, PropSize: 0x10xB98(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFirstPersonBlendLowerWeapon : 1;                  // Mask: 0x10, PropSize: 0x10xB98(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_219 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6744[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpStartVelocityZ;                                // 0xB9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartFallingVelocityZ;                             // 0xBA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JumpStartFromFallMaximumVelocityZ;                 // 0xBA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallingAnimVelocityZ;                              // 0xBA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CrouchMaxVelocityZ;                                // 0xBAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonSprintJumpStartVelocityZ;               // 0xBB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonCrouchMaxVelocityZ;                     // 0xBB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JumpEndMinSpeed2D;                                 // 0xBB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprintMinSpeed2D;                                  // 0xBBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IdleMaxSpeed2D;                                    // 0xBC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CrouchEndMaxSpeed2D;                               // 0xBC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InjuredSpeedDivider;                               // 0xBC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InjuredPlayRate;                                   // 0xBCC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonSprintJumpExitMaxSpeed;                 // 0xBD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonJumpExitMinSpeed;                       // 0xBD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonSprintMinSpeed2D;                       // 0xBD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonBunnyHopTiming;                         // 0xBDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FirstPersonBunnyHopTiming_Sprint;                  // 0xBE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseFrontDirectionMinThreshold;                    // 0xBE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseFrontDirectionMaxThreshold;                    // 0xBE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FrontToBackTransitionFrontDirectionMinThreshold;   // 0xBEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FrontToBackTransitionFrontDirectionMaxThreshold;   // 0xBF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InjuredFrontDirectionMinThreshold;                 // 0xBF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InjuredFrontDirectionMaxThreshold;                 // 0xBF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InjuredFrontToBackTransitionFrontDirectionMinThreshold; // 0xBFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InjuredFrontToBackTransitionFrontDirectionMaxThreshold; // 0xC00(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InjuredBackToFrontTransitionFrontDirectionMinThreshold; // 0xC04(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InjuredBackToFrontTransitionFrontDirectionMaxThreshold; // 0xC08(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprintFrontDirectionMinThreshold;                  // 0xC0C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprintFrontDirectionMaxThreshold;                  // 0xC10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsIdling;                                         // 0xC14(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrouchIdling;                                   // 0xC15(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWasSprinting;                                     // 0xC16(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanFallJump;                                      // 0xC17(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallingSpeedAlpha;                                 // 0xC18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StateChangeBlendTime;                              // 0xC1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsJumpEnded;                                      // 0xC20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrouchMoveEnded;                                // 0xC21(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrouchMoveNeedEnding;                           // 0xC22(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrouchEndDone;                                  // 0xC23(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrouchNeedStarting;                             // 0xC24(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrouchNeedMoving;                               // 0xC25(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCrouchInVehicle;                                // 0xC26(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsExitingLadderInAir;                             // 0xC27(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsExitingLadderNotInAir;                          // 0xC28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsClimbingLadder;                                 // 0xC29(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsJumpStart;                                      // 0xC2A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSprintJumpStart;                                // 0xC2B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsJumpLoop;                                       // 0xC2C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSprintJumpLoop;                                 // 0xC2D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsJumpEndedBySpeed;                               // 0xC2E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBaseLocoGoingForward;                           // 0xC2F(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBaseLocoGoingBackward;                          // 0xC30(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBaseLocoGoingFrontToBack;                       // 0xC31(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSprintLocoExitForward;                          // 0xC32(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSprintLocoExitBackward;                         // 0xC33(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSprintLocoExitForwardNoBlend;                   // 0xC34(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSprintLocoExitBackwardNoBlend;                  // 0xC35(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInjuredLocoGoingForward;                        // 0xC36(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInjuredLocoGoingBackward;                       // 0xC37(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInjuredLocoGoingFrontToBack;                    // 0xC38(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInjuredLocoGoingBackToFront;                    // 0xC39(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanStartSprinting;                                // 0xC3A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6748[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LeftHandIKWhileAimOffset;                          // 0xC3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6749[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxBoneSet*                           AimOffsetDefaultBoneSet;                           // 0xC48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxBoneSet*                           AimOffsetCurrentBoneSet;                           // 0xC50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIsJumpLoop;                            // 0xC58(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIsSprintJumpStart;                     // 0xC59(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIsCrouchNeedMoving;                    // 0xC5A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIsCrouchNeedStarting;                  // 0xC5B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIsCrouchExit;                          // 0xC5C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonCanUseCrouchTransition;                // 0xC5D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_674A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GunnerBockJockBlitzPassiveSkillModifierAlpha;      // 0xC60(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIsJumpIdle;                            // 0xC64(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIsSlidingToLocomotion;                 // 0xC65(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIsIdling;                              // 0xC66(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonToIdleToSprintTransitionState;         // 0xC67(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonIdleToSprint;                          // 0xC68(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonSprintToIdle;                          // 0xC69(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonSprintToSprintTransition;              // 0xC6A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonADSJumpEnter;                          // 0xC6B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonADSCrouchStart;                        // 0xC6C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonADSCrouchMove;                         // 0xC6D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonADSJumpLoop;                           // 0xC6E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonADSToHipFire;                          // 0xC6F(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonExitLowerWeapon;                       // 0xC70(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonUnarmedIsJumpStarted;                  // 0xC71(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonUnarmedIsSprintJumpStart;              // 0xC72(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFirstPersonHardLanded;                            // 0xC73(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RightHandInteractionBottomPressAssetPlayerIndex;   // 0xC74(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RightHandInteractionBottomPressToHoldTransitionIndex; // 0xC78(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RightHandInteractionMiddlePressAssetPlayerIndex;   // 0xC7C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RightHandInteractionMiddleToNeutralTransitionIndex; // 0xC80(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RightHandInteractionTopPressAssetPlayerIndex;      // 0xC84(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RightHandInteractionTopPressToHoldTransitionIndex; // 0xC88(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ADSSetStateMachineIndex;                           // 0xC8C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ADSSetJumpExitStateIndex;                          // 0xC90(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ADSSetJumpExitToJumpEnterTransitionIndex;          // 0xC94(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetStateMachineIndex;                       // 0xC98(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetJumpExitStateIndex;                      // 0xC9C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetJumpExitToJumpEnterTransitionIndex;      // 0xCA0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetJumpExitToUprightIdleAndMovementTransitionIndex1; // 0xCA4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetSprintExitAssetPlayerIndex;              // 0xCA8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetSprintExitToUprightIdleAndMovementTransitionIndex1; // 0xCAC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetSprintJumpExitStateIndex;                // 0xCB0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetSprintJumpExitToSprintJumpEnterTransitionIndex; // 0xCB4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetSprintJumpExitToSprintExitTransitionIndex; // 0xCB8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HipfireSetSprintJumpExitToUprightIdleAndMovementTransitionIndex2; // 0xCBC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesStateMachineIndex;          // 0xCC0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesIdleToSprintAssetPlayerIndex; // 0xCC4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesIdleToSprintToIdleTransitionIndex2; // 0xCC8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesIdleToSprintStateIndex;     // 0xCCC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesIdleToSprintToSprintTransitionTransitionIndex; // 0xCD0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesSprintTransitionStateIndex; // 0xCD4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesSprintTransitionToLocomotionTransitionIndex1; // 0xCD8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesSprintExitAssetPlayerIndex; // 0xCDC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UprightLocomotionStatesSprintTransitionToLocomotionTransitionIndex2; // 0xCE0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UnarmedSetStateMachineIndex;                       // 0xCE4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UnarmedSetJumpExitStateIndex;                      // 0xCE8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UnarmedSetJumpExitToJumpEnterTransitionIndex;      // 0xCEC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerAnimInstance* GetDefaultObj();

	void OnWeaponReloadStarted(class AWeapon* Weapon, bool bAuto);
	void OnWeaponReloadEnded(class AWeapon* Weapon, bool bCompleted, bool bAmmoGiven);
	void AnimNotify_Raised();
	void AnimNotify_IsLowered();
};

// 0xB8 (0xE8 - 0x30)
// Class OakGame.OakPlayerAspectData
class UOakPlayerAspectData : public UGbxDataAsset
{
public:
	int32                                        StrengthModifier;                                  // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DexterityModifier;                                 // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IntelligenceModifier;                              // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WisdomModifier;                                    // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConstitutionModifier;                              // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LuckModifier;                                      // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayLabel;                                      // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TaglineDescription;                                // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LongDescription;                                   // 0x78(0x18)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x90(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             SplashImage;                                       // 0xB8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDownloadableContentData*              DLCExpansionData;                                  // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakPlayerAspectData* GetDefaultObj();

};

// 0x38 (0x2CF0 - 0x2CB8)
// Class OakGame.OakPlayerCameraManager
class AOakPlayerCameraManager : public APlayerCameraModesManager
{
public:
	TArray<struct FPostProcessSettings>          CustomLightingSettings;                            // 0x2CB8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_674E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakUIActorContainer*>          CustomActorContainerStack;                         // 0x2CE0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakPlayerCameraManager* GetDefaultObj();

};

// 0x0 (0x478 - 0x478)
// Class OakGame.OakPlayerInput
class UOakPlayerInput : public UGbxPlayerInput
{
public:

	static class UClass* StaticClass();
	static class UOakPlayerInput* GetDefaultObj();

};

// 0x98 (0x238 - 0x1A0)
// Class OakGame.OakPlayerMissionComponent
class UOakPlayerMissionComponent : public UPlayerMissionComponent
{
public:
	uint8                                        Pad_675B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnApplyMissionRewards;                             // 0x1A8(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAllPlotMissionsCompleted;                        // 0x1B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_675C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionDeliveryData                  CurrentMissionDelivery;                            // 0x1D8(0x18)(Transient, NativeAccessSpecifierPrivate)
	int32                                        CachedPlaythroughIndex;                            // 0x1F0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PlaythroughsCompleted;                             // 0x1F4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShowNewPlaythroughNotification;                   // 0x1F8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_675D[0x3F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakPlayerMissionComponent* GetDefaultObj();

	void WaitingForRequestedMissionData();
	void ServerRequestMissionData();
	void ServerNotifyMissionDeliveryChoice(bool bMissionAccepted, TSubclassOf<class UMission> Mission, class AActor* MissionGiver);
	void ServerGrantStarterGear(class UMissionObjective* MissionObjective, TSubclassOf<class UMission> MissionClass);
	void ServerGrantMissionWeapon(TSubclassOf<class UMission> MissionClass);
	void ServerApplyMissionRewards(TSubclassOf<class UMission> MissionClass);
	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnPawnChanged(class APawn* Pawn, class APawn* OldPawn);
	void OnMissionFastForwardPossible();
	void OnMissionDeliveryChoice(bool bMissionAccepted, bool bEmergencyExit, int32 MissionIndex, class AActor* MissionGiver);
	void OnFastForwardDialogClicked(class FName ChoiceNameId, int32 ControllerId);
	void ClientUnlockAssociatedAchievement(class AOakPlayerController* OakPC, int32 AchievementId);
	void ClientReceiveMissionData(struct FReplicatedMissionData& MissionData);
	void ClientMissionKickoffPlayed(TSubclassOf<class UMission> MissionClass);
	void ClientInitiateMissionDelivery(struct FMissionDeliveryData& DeliveryData);
};

// 0x138 (0x168 - 0x30)
// Class OakGame.OakPlayerTeleportData
class UOakPlayerTeleportData : public UDataAsset
{
public:
	struct FAttributeInitializationData          TransitionDurationData;                            // 0x30(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bTriggerOakTriggersAlongTeleport;                  // 0x68(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_675E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    HorizontalCurve;                                   // 0x70(0x78)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                    VerticalCurve;                                     // 0xE8(0x78)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxAction>                AnimationClass;                                    // 0x160(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakPlayerTeleportData* GetDefaultObj();

};

// 0x3F8 (0x4C0 - 0xC8)
// Class OakGame.OakProfile
class UOakProfile : public UGbxProfile
{
public:
	int32                                        GamepadHipSensitivityLevel;                        // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GamepadZoomedSensitivityLevel;                     // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GamepadVehicleSensitivityLevel;                    // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadMovementDeadZoneX;                          // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadMovementDeadZoneY;                          // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookDeadZoneInnerX;                         // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookDeadZoneOuterX;                         // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookDeadZoneInnerY;                         // 0xE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookDeadZoneOuterY;                         // 0xE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleMovementDeadZoneX;                   // 0xEC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleMovementDeadZoneY;                   // 0xF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleLookDeadZoneInnerX;                  // 0xF4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleLookDeadZoneOuterX;                  // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleLookDeadZoneInnerY;                  // 0xFC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleLookDeadZoneOuterY;                  // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLeftDeadZoneInner;                          // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLeftDeadZoneOuter;                          // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadRightDeadZoneInner;                         // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadRightDeadZoneOuter;                         // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDefaultDeadZoneInnerUpdated;                      // 0x114(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6760[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamepadLookAxialDeadZoneScale;                     // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadMoveAxialDeadZoneScale;                     // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGamepadUseAdvancedHipAimSettings;                 // 0x120(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGamepadUseAdvancedZoomedAimSettings;              // 0x121(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGamepadUseAdvancedVehicleAimSettings;             // 0x122(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6761[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamepadHipYawRate;                                 // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadHipPitchRate;                               // 0x128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadHipExtraYaw;                                // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadHipExtraPitch;                              // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadHipRampUpTime;                              // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadHipRampUpDelay;                             // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadZoomedYawRate;                              // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadZoomedPitchRate;                            // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadZoomedExtraYaw;                             // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadZoomedExtraPitch;                           // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadZoomedRampUpTime;                           // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadZoomedRampUpDelay;                          // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleYawRate;                             // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehiclePitchRate;                           // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleExtraYaw;                            // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleExtraPitch;                          // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleRampUpTime;                          // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadVehicleRampUpDelay;                         // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIronsightAimAssist;                               // 0x16C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6763[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EWalkingButtonScheme              WalkingButtonScheme;                               // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EJoystickScheme                   WalkingJoystickScheme;                             // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDrivingButtonScheme              DrivingButtonScheme;                               // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EJoystickScheme                   DrivingJoystickScheme;                             // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseADSScale;                                     // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseVehicleScale;                                 // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMouseIronsightAimAssist;                          // 0x188(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6764[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EVehicleInputMode                 VehicleInputMode;                                  // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeaponAimToggle;                                  // 0x190(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMantleRequiresButton;                             // 0x191(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFixedMinimapRotation;                             // 0x192(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFixedInitialZoneMapRotation;                      // 0x193(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCombatNumberLongFormat;                           // 0x194(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowMinimapLegendaries;                           // 0x195(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMapInvertPitch;                                   // 0x196(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMapInvertYaw;                                     // 0x197(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlayerDifficultySetting          Difficulty;                                        // 0x198(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSwapDualWieldControls;                            // 0x199(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsePlayerCallouts;                                // 0x19A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6766[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LastStatusMenuPage;                                // 0x1A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FOakProfileLastInventoryFilterInfo> InventoryScreenLastFilter;                         // 0x1A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FOakProfileMenuTutorialInfo           TutorialInfo;                                      // 0x1B8(0x18)(Protected, NativeAccessSpecifierProtected)
	bool                                         bHasSeenFirstBoot;                                 // 0x1D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6767[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SubsAndCCSize;                                     // 0x1D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CCAndSubsBackgroundOpacity;                        // 0x1D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6768[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        SeenNewsItems;                                     // 0x1E0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class ENetworkType                      DefaultNetworkType;                                // 0x1F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EInviteType                       DefaultInviteType;                                 // 0x1F1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECrossplayState                   DesiredCrossplayState;                             // 0x1F2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFriendSyncState                  DesiredFriendSyncState;                            // 0x1F3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_676A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MatchmakingRegion;                                 // 0x1F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EStreamingService                 StreamingService;                                  // 0x208(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShiftFirstBoot;                                   // 0x209(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShiftFirstBootPrimary;                            // 0x20A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIncreasedChanceForSubscribers;                    // 0x20B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRareChestEventEnabled;                            // 0x20C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBadassEventEnabled;                               // 0x20D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_676B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinTimeBetweenBadassEvents;                        // 0x210(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPinataEventEnabled;                               // 0x214(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExtractionEventEnabled;                           // 0x215(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFriendEventNotificationLifetime  FriendEventNotificationLifetime;                   // 0x216(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFriendEventNotificationFrequency FriendEventNotificationFrequency;                  // 0x217(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETradeRequestReceptionType        TradeRequestReceptionType;                         // 0x218(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_676D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxCachedFriendEvents;                             // 0x21C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxCachedFriendStatuses;                           // 0x220(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_676E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        FriendEvents;                                      // 0x228(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                        FriendStatuses;                                    // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_676F[0x51];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasSeenNonStadiaControllerDisclaimer;             // 0x299(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableSubtitles;                                  // 0x29A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableClosedCaptions;                             // 0x29B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableAutoCentering;                              // 0x29C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECrosshairColorsEnum              CrosshairNeutralColorFrame;                        // 0x29D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECrosshairColorsEnum              CrosshairEnemyColorFrame;                          // 0x29E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECrosshairColorsEnum              CrosshairAllyColorFrame;                           // 0x29F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeadBobScale;                                      // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraShakeScale;                                  // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6770[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRecentlyMetPlayer>            RecentlyMetPlayers;                                // 0x2B0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FUniqueNetIdRepl, struct FOakFriendEncounterData> FriendEncounters;                                  // 0x2C0(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxFriendEncounterSize;                            // 0x310(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6772[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameStatSaveGameData>         ProfileStatsData;                                  // 0x318(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FInventoryCategorySaveData>    BankInventoryCategoryList;                         // 0x328(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryItemSaveGameData> BankInventoryList;                                 // 0x338(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FInventorySaveGameData>        LostLootInventoryList;                             // 0x348(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakMailItem>                  NPCMailItems;                                      // 0x358(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        MailGuids;                                         // 0x368(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        UnreadMailGuids;                                   // 0x378(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakAcceptedOfflineEULA>       AcceptedOfflineEULAs;                              // 0x388(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGearSoldByFriendData>         GearSoldByFriends;                                 // 0x398(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakSDUSaveGameData>           ProfileSDUList;                                    // 0x3A8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakCustomizationSaveGameData> UnlockedCustomizations;                            // 0x3B8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryCustomizationPartInfo> UnlockedInventoryCustomizationParts;               // 0x3C8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6773[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalPlaytimeSeconds;                              // 0x448(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6774[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakChallengeSaveGameData>     OakProfileChallengeData;                           // 0x450(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FPlayerPrestigeProfileData            PlayerPrestige;                                    // 0x460(0x28)(NativeAccessSpecifierPublic)
	enum class ETwoPlayerSplitScreenType         TwoPlayerSplitscreenLayout;                        // 0x488(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6776[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameStat>                     ProfileStats;                                      // 0x4B0(0x10)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakProfile* GetDefaultObj();

};

// 0x28 (0x770 - 0x748)
// Class OakGame.OakProjectile_ActionAbility
class AOakProjectile_ActionAbility : public AOakProjectile
{
public:
	uint8                                        Pad_6778[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakActionAbility*                     OwnerActionAbility;                                // 0x750(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  OwnerPlayer;                                       // 0x758(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxCustomizationComponent*            CustomizationComponent;                            // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlocksActionAbilityShutdown;                      // 0x768(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWasShutDownGracefully;                            // 0x769(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6779[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakProjectile_ActionAbility* GetDefaultObj();

	void ReleaseFromActionAbility();
	void OnShutdownGracefully();
	void OnReceivedOwnerPlayer();
};

// 0x0 (0x1D8 - 0x1D8)
// Class OakGame.OakProjectileBalanceStateComponent
class UOakProjectileBalanceStateComponent : public UBalanceStateComponent
{
public:

	static class UClass* StaticClass();
	static class UOakProjectileBalanceStateComponent* GetDefaultObj();

};

// 0x8 (0x670 - 0x668)
// Class OakGame.OakQuickChangeMenuLauncher
class UOakQuickChangeMenuLauncher : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	uint8                                        Pad_677A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakQuickChangeMenuLauncher* GetDefaultObj();

};

// 0x368 (0x7C0 - 0x458)
// Class OakGame.OakRadiateDamageActor
class AOakRadiateDamageActor : public AActor
{
public:
	struct FEnvQueryParams                       QueryParams;                                       // 0x458(0xB8)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UOakDamageData>            DamageData;                                        // 0x510(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxDamageType>            DamageTypeOverride;                                // 0x518(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          Duration;                                          // 0x520(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          Rate;                                              // 0x558(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          InitialDelay;                                      // 0x590(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ERadiateMethod                    RadiateMethod;                                     // 0x5C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6781[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          Velocity;                                          // 0x5D0(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          MinDistance;                                       // 0x608(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          MaxDistance;                                       // 0x640(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class ERadiateMovementType              RadiateMovementType;                               // 0x678(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6782[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          MaxStepUpHeight;                                   // 0x680(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          MaxStepDownHeight;                                 // 0x6B8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          InitialStepDownHeight;                             // 0x6F0(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        TraceZOffset;                                      // 0x728(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x72C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnlyTraceStaticMobility;                          // 0x72D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6784[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ECollisionChannel>         ExtraIgnoreTraceChannels;                          // 0x730(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseContextRotation;                               // 0x740(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6785[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               EffectTraceExtent;                                 // 0x744(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EffectZOffset;                                     // 0x750(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6786[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UElementalPuddleSimpleSpawnData*       ElementalPuddleSpawnData;                          // 0x758(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplatData*                            SplatData;                                         // 0x760(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SplatScaleGrowthRate;                              // 0x768(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6787[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SplatOwnerOverride;                                // 0x770(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                SplatInstigatorOverride;                           // 0x778(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6788[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakRadiateDamageActor* GetDefaultObj();

	void OverrideInitialDelay(float NewDelay);
	void OnSnapToGroundFailed(bool bIsInitialStepDown);
	void OnPerformRadiateDamageTasks(const struct FVector& EffectLocation, const struct FVector& ImpactNormal, bool bValidImpact);
	bool InitialSnapToGroundWouldFail(class UObject* ContextObj, TSubclassOf<class AOakRadiateDamageActor> Template, class AActor* TransformActor, enum class ECollisionChannel TraceChannel);
};

// 0x40 (0x800 - 0x7C0)
// Class OakGame.OakRadiateDamageActor_ActionAbility
class AOakRadiateDamageActor_ActionAbility : public AOakRadiateDamageActor
{
public:
	uint8                                        Pad_678C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   CollisionPrimitive;                                // 0x7D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlocksActionAbilityShutdown;                      // 0x7D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShuttingDown;                                   // 0x7D9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_678D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeam*                                 OwnerTeam;                                         // 0x7E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_678E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakRadiateDamageActor_ActionAbility* GetDefaultObj();

	void OnHitEnemy(class AActor* EnemyActor);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	class UOakActionAbility* K2_GetOwnedActionAbility();
};

// 0x10 (0x1D0 - 0x1C0)
// Class OakGame.OakRadiateDamageMovementComponent
class UOakRadiateDamageMovementComponent : public UMovementComponent
{
public:
	uint8                                        Pad_6790[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakRadiateDamageMovementComponent* GetDefaultObj();

};

// 0x0 (0x470 - 0x470)
// Class OakGame.OakRadiusDamageReplicationManager
class AOakRadiusDamageReplicationManager : public ARadiusDamageReplicationManager
{
public:

	static class UClass* StaticClass();
	static class AOakRadiusDamageReplicationManager* GetDefaultObj();

};

// 0x200 (0x558 - 0x358)
// Class OakGame.OakRecentDamageTrackingComponent
class UOakRecentDamageTrackingComponent : public URecentDamageTrackingComponent
{
public:
	uint8                                        Pad_6793[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakDamageGlobalsData*                 Globals;                                           // 0x370(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              DamageNumberParticleComponent;                     // 0x378(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScreenParticleManagerComponent*       ScreenParticleManagerComponent;                    // 0x380(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              IncomingDamageParticleComponent_Health;            // 0x388(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              IncomingDamageParticleComponent_Shield;            // 0x390(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              IncomingDamageParticleComponent_Armor;             // 0x398(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6795[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRecentlyResistedAttackData           RecentlyResistedAttacks[0x10];                     // 0x3B0(0x100)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6796[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRecentIncomingDamageData>     ServerRecentIncomingDamageData;                    // 0x4B8(0x10)(Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FRecentIncomingDamageData>     ClientRecentIncomingDamageData;                    // 0x4C8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          RecentIncomingHealthDamageComponents;              // 0x4D8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          RecentIncomingShieldDamageComponents;              // 0x4E8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          RecentIncomingArmorDamageComponents;               // 0x4F8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6797[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakRecentDamageTrackingComponent* GetDefaultObj();

	void OnRep_RecentIncomingDamageData();
	void OnKillEventDamageTrackingActorDestroyed(class AActor* DestroyedActor);
	void ClientPlayDamagePresentation(struct FTriggeredDamagePresentation& Presentation);
};

// 0xC8 (0x2D0 - 0x208)
// Class OakGame.OakReplicationGraph
class UOakReplicationGraph : public UReplicationGraph
{
public:
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x208(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakReplicationGraphNode_AlwaysRelevant* AlwaysRelevantNode;                                // 0x210(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ActorsPendingAddToGraph;                           // 0x218(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class AOakGameState*                         GameState;                                         // 0x228(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6799[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakReplicationGraph* GetDefaultObj();

};

// 0x38 (0x180 - 0x148)
// Class OakGame.OakReplicationGraphNode_AlwaysRelevant_ForConnection
class UOakReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode_ActorList
{
public:
	uint8                                        Pad_679B[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakReplicationGraphNode_AlwaysRelevant_ForConnection* GetDefaultObj();

};

// 0x8 (0x150 - 0x148)
// Class OakGame.OakReplicationGraphNode_AlwaysRelevant
class UOakReplicationGraphNode_AlwaysRelevant : public UReplicationGraphNode_ActorList
{
public:
	class UReplicationGraphNode_DormancyNode*    DormancyNode;                                      // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakReplicationGraphNode_AlwaysRelevant* GetDefaultObj();

};

// 0x30 (0xD0 - 0xA0)
// Class OakGame.OakReplicationGraphNode_ReplicateImmediately_ForConnection
class UOakReplicationGraphNode_ReplicateImmediately_ForConnection : public UReplicationGraphNode
{
public:
	TArray<struct FOakForceReplicateActorInfo>   PendingActors;                                     // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_679D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakReplicationGraphNode_ReplicateImmediately_ForConnection* GetDefaultObj();

};

// 0x28 (0x1E0 - 0x1B8)
// Class OakGame.OakNetReplicationGraphConnection
class UOakNetReplicationGraphConnection : public UNetReplicationGraphConnection
{
public:
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakReplicationGraphNode_AlwaysRelevant_ForConnection* AlwaysRelevantNode;                                // 0x1C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakReplicationGraphNode_ReplicateImmediately_ForConnection* ReplicateImmediatelyNode;                          // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        OnlyRelevantToConnectionActors;                    // 0x1D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakNetReplicationGraphConnection* GetDefaultObj();

};

// 0x50 (0x1C0 - 0x170)
// Class OakGame.OakReticleFeedbackWidget
class UOakReticleFeedbackWidget : public UGbxGFxObject
{
public:
	float                                        MaxDamageCausedDuration;                           // 0x170(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDeathCausedDuration;                            // 0x174(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67A0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EOakReticleFeedbackGameEvent      CurrentGameEvent;                                  // 0x180(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentGameEventDuration;                          // 0x184(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67A2[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  OakPCOwner;                                        // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_67A3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakReticleFeedbackWidget* GetDefaultObj();

	void OnGameEventComplete(enum class EOakReticleFeedbackGameEvent GameEvent);
	void OnGameEventCallback(enum class EOakReticleFeedbackGameEvent GameEvent);
	void OnGameEvent(enum class EOakReticleFeedbackGameEvent GameEvent);
};

// 0x4E8 (0x510 - 0x28)
// Class OakGame.OakSaveGame
class UOakSaveGame : public UGbxSaveGame
{
public:
	uint32                                       SaveGameId;                                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLevelledSaveNeedsFixup;                           // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67A4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        LastSaveTimestamp;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       TimePlayedSeconds;                                 // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       AccumulatedLevelPersistenceResetTimerSeconds;      // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLevelPersistence_Level_SaveGameData> LevelPersistenceData;                              // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPlayerClassSaveGameData              PlayerClassData;                                   // 0x50(0x30)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FResourcePoolSavegameData>     ResourcePools;                                     // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRegionSaveGameData>           SavedRegions;                                      // 0x90(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                        ExperiencePoints;                                  // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameStatSaveGameData>         GameStatsData;                                     // 0xA8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FInventoryCategorySaveData>    InventoryCategoryList;                             // 0xB8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryItemSaveGameData> InventoryItems;                                    // 0xC8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FEquippedInventorySaveGameData> EquippedInventoryList;                             // 0xD8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                ActiveWeaponList;                                  // 0xE8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FOakPlayerAbilitySaveGameData         AbilityData;                                       // 0xF8(0xA8)(Edit, EditConst, NativeAccessSpecifierPublic)
	int32                                        LastPlayThroughIndex;                              // 0x1A0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaythroughsCompleted;                             // 0x1A4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowNewPlaythroughNotification;                   // 0x1A8(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67A7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMissionPlaythroughSaveGameData> MissionPlaythroughsData;                           // 0x1B0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FPlaythroughActiveFastTravelSaveData> ActiveTravelStationsForPlaythrough;                // 0x1C0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FDiscoverySaveData                    DiscoveryData;                                     // 0x1D0(0x10)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                        LastActiveTravelStationForPlaythrough;             // 0x1E0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                        LastOverworldTravelStationForPlaythrough;          // 0x1F0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FVehicleUnlockedSaveGameData>  VehiclesUnlockedData;                              // 0x200(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                        VehiclePartsUnlocked;                              // 0x210(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FOakCARMenuVehicleConfigSaveData> VehicleLoadouts;                                   // 0x220(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                        VehicleLastLoadoutIndex;                           // 0x230(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67A9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakChallengeSaveGameData>     OakChallengeData;                                  // 0x238(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FOakSDUSaveGameData>           SDUList;                                           // 0x248(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGbxCustomizationData>> SelectedCustomizations;                            // 0x258(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<int32>                                EquippedEmoteCustomizations;                       // 0x268(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCustomPlayerColorSaveGameData> SelectedColorCustomizations;                       // 0x278(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCustomFloatCustomizationSaveGameData> CustomFloatCustomizations;                         // 0x288(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FEchoLogSaveGameData>          UnlockedEchoLogs;                                  // 0x298(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<class FName, class FString>             NicknameMappings;                                  // 0x2A8(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FGameStateSaveData>            GameStateSaveDataForPlaythrough;                   // 0x2F8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FChallengeCategoryProgressSaveData    ChallengeCategoryCompletionPcts;                   // 0x308(0x10)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FOakPlayerCharacterSlotSaveGameData   CharacterSlotSaveGameData;                         // 0x318(0x10)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FUITrackingSaveGameData               UITrackingSaveGameData;                            // 0x328(0x20)(Edit, EditConst, NativeAccessSpecifierPublic)
	enum class EOakGameStateUIGroupMode          PreferredGroupMode;                                // 0x348(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimeOfDaySaveGameData                TimeOfDayData;                                     // 0x350(0x18)(Edit, EditConst, NativeAccessSpecifierPublic)
	class UGbxZoneMapFODSaveGameData*            ZoneMapFODSavedData;                               // 0x368(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsNetReplicating;                                 // 0x370(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67AB[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakChallengeSaveGameData>     ProfileChallengeDataForSerialization;              // 0x388(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         bLevelledSaveVehiclePartRewardsFixupApplied;       // 0x398(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67AC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHeroPointsSaveData                   HeroPointSaveData;                                 // 0x3A0(0x48)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FTrackedInteractionSaveData>   TrackedInteractions;                               // 0x3E8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class UPlayerPronounData*                    PlayerPronounSelection;                            // 0x3F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogNameTag*                        PlayerVoiceSelection;                              // 0x400(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerVoicePitch;                                  // 0x408(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentVaultCardDaySeed;                           // 0x40C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentVaultCardWeekSeed;                          // 0x410(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighestUnlockedMayhemLevel;                        // 0x414(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableCustomizationSuppression;                  // 0x418(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67AE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakProfileCustomizationLinkData> CustomizationLinkData;                             // 0x420(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDafTownHubTravelData                 TownHubTravelInfo;                                 // 0x430(0x68)(NativeAccessSpecifierPublic)
	enum class EPlayerDifficultySetting          Difficulty;                                        // 0x498(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67AF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PreferredCharacterName;                            // 0x4A0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NameCharacterLimit;                                // 0x4B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_67B0[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastActiveTravelStation;                           // 0x4D8(0x10)(ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameStateSaveData                    GameStateSaveData;                                 // 0x4E8(0xC)(Deprecated, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_67B1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActiveFastTravelSaveData>     ActiveTravelStations;                              // 0x4F8(0x10)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)
	uint8                                        Pad_67B2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakSaveGame* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class OakGame.OakSaveGameChannel
class UOakSaveGameChannel : public USaveGameChannel
{
public:

	static class UClass* StaticClass();
	static class UOakSaveGameChannel* GetDefaultObj();

};

// 0x10 (0x468 - 0x458)
// Class OakGame.OakScreenLiquidArea
class AOakScreenLiquidArea : public AActor
{
public:
	struct FLinearColor                          LiquidColorAndIntensity;                           // 0x458(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakScreenLiquidArea* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class OakGame.OakSDUData
class UOakSDUData : public UGbxDataAsset
{
public:
	class UDataTable*                            SDUBonusTable;                                     // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SDUDisplayName;                                    // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bProfileSDU;                                       // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientSDU;                                        // 0x51(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGrenadeSDU;                                       // 0x52(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67B6[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UOakChallenge>             AllPurchasedChallenge;                             // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataAsset*                            UIVendorContextData;                               // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManufacturerData*                     ManufacturerData;                                  // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakSDUData* GetDefaultObj();

	bool GetSDULevelInfo(int32 SDULevel, int32* OutSDUPrice, class UInventoryCategoryData** OutPriceCurrenty, struct FAttributeEffectData* OutAttributeModifyInfo, struct FAttributeInitializationData* OutSDUPriceModifier);
};

// 0x0 (0x220 - 0x220)
// Class OakGame.OakSignificanceManager
class UOakSignificanceManager : public UGbxSignificanceManager
{
public:

	static class UClass* StaticClass();
	static class UOakSignificanceManager* GetDefaultObj();

};

// 0xA0 (0xD8 - 0x38)
// Class OakGame.OakSingletons
class UOakSingletons : public UGbxSingletons
{
public:
	class UEchoManager*                          EchoManager;                                       // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakVehicleManager*                    OakVehicleManager;                                 // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCorpseManager*                        CorpseManager;                                     // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URegionManager*                        RegionManager;                                     // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakMinimapIconTracker*                MinimapIconTracker;                                // 0x58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakSubtitleManager*                   SubtitleManager;                                   // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ARadiusDamageReplicationManager*       RadiusDamageReplicationManager;                    // 0x68(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpawnLootManager*                     SpawnLootManager;                                  // 0x70(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AClothManager*                         ClothManager;                                      // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDamageAsyncManager*                   DamageAsyncManager;                                // 0x80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDamageOverTimeManager*                DamageOverTimeManager;                             // 0x88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPerPlayerActorCullingManager*         ActorCullingManager;                               // 0x90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelActorPersistenceManager*         LevelActorPersistenceManager;                      // 0x98(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_67B9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakGameActivityAdapter*               ActivityAdapter;                                   // 0xB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOverworld*                            OverworldManager;                                  // 0xB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStreamingEncounterCoordinator*        StreamingEncounterCoordinator;                     // 0xC0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxUISystem*                          UISystem;                                          // 0xC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_67BB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakSingletons* GetDefaultObj();

};

// 0x18 (0x9F0 - 0x9D8)
// Class OakGame.OakSpawnerComponent
class UOakSpawnerComponent : public UGbxSpawnerComponent
{
public:
	bool                                         RandomItemDropped;                                 // 0x9D8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayableAreaAssist;                               // 0x9D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67C0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CorpseRemovalOverrideTime;                         // 0x9DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakAction_CoordinatedEffect> CorpseRemovalOverrideAction;                       // 0x9E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActorsAlwaysSignificant;                          // 0x9E8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67C1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakSpawnerComponent* GetDefaultObj();

	void OnWaveWarmupCallback(class USpawnerComponent* SpawnerComponent, int32 WaveIndex);
	void OnWaveStartCallback(class USpawnerComponent* SpawnerComponent, int32 WaveIndex);
};

// 0x40 (0x70 - 0x30)
// Class OakGame.OakSpawnerDefinition
class UOakSpawnerDefinition : public UGbxDataAsset
{
public:
	class USpawnerStyle*                         SpawnerStyle;                                      // 0x30(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpawnDetails                         SpawnDetails;                                      // 0x38(0x7)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_67CA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnLimitData>               Limits;                                            // 0x40(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpawnActionTag;                                    // 0x50(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakAction_CoordinatedEffect> SpecialEffect;                                     // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpawnPointEffect>             ConditionalSpecialEffects;                         // 0x60(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakSpawnerDefinition* GetDefaultObj();

	class AOakSpawner* SpawnOakSpawnerFromDefinitionUsingTransforms(class UObject* WorldContextObject, class AActor* Owner, class USpawnerComponent* SourceSpawnerComponent, class UOakSpawnerDefinition* Definition, class USpawnOptionData* SpawnOption, struct FTransform& Transform, TArray<struct FTransform>& SpawnTransforms);
	class AOakSpawner* SpawnOakSpawnerFromDefinition(class UObject* WorldContextObject, class AActor* Owner, class USpawnerComponent* SourceSpawnerComponent, class UOakSpawnerDefinition* Definition, class USpawnOptionData* SpawnOption, struct FTransform& Transform, TArray<struct FVector>& SpawnPoints);
};

// 0x10 (0x7D0 - 0x7C0)
// Class OakGame.OakSpawnerIconComponent
class UOakSpawnerIconComponent : public UOakMissionIconComponent
{
public:
	bool                                         bAddMissionIconToSpawnedActors;                    // 0x7C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayIconWhenActorsSuspended;                   // 0x7C1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysDisplayIcon;                                // 0x7C2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67CD[0xD];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakSpawnerIconComponent* GetDefaultObj();

	void OnVehicleActorSpawnedEvent(class ASpawner* Spawner, struct FSpawnerActorData& ActorData);
	void OnSpawnedActorDiedOrSuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnActorSpawnedOrUnsuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	class USpawnerComponent* GetMySpawnerComponent();
	void AddMissionIconComponentToActor(class AActor* Actor);
};

// 0x10 (0x3E0 - 0x3D0)
// Class OakGame.OakSpawnerMissionDirectorComponent
class UOakSpawnerMissionDirectorComponent : public UOakMissionDirectorComponent
{
public:
	uint8                                        Pad_67D0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakSpawnerMissionDirectorComponent* GetDefaultObj();

	void OnSpawnerEnabled();
	void OnSpawnerDisabled();
	void OnSpawnedActorDiedOrSuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnActorSpawnedOrUnsuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
};

// 0x8 (0x38 - 0x30)
// Class OakGame.OakSpawnerStyle_PlayerInstanced
class UOakSpawnerStyle_PlayerInstanced : public USpawnerStyle
{
public:
	class USpawnerStyle*                         SpawnerStyle;                                      // 0x30(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakSpawnerStyle_PlayerInstanced* GetDefaultObj();

};

// 0x0 (0x4E0 - 0x4E0)
// Class OakGame.OakSpawnPoint
class AOakSpawnPoint : public AGbxSpawnPoint
{
public:

	static class UClass* StaticClass();
	static class AOakSpawnPoint* GetDefaultObj();

};

// 0x70 (0x9F0 - 0x980)
// Class OakGame.OakSpawnPointComponent
class UOakSpawnPointComponent : public USpawnPointComponent
{
public:
	class UGbxCondition*                         OnMissionLoadedEnabledCondition;                   // 0x980(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class USpawnerComponent*, class UTerritoryComponent*> SpawnPointGroupTerritoryMap;                       // 0x988(0x50)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOakAction_CoordinatedEffect> SpecialEffect;                                     // 0x9D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSpawnPointEffect>             ConditionalSpecialEffects;                         // 0x9E0(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakSpawnPointComponent* GetDefaultObj();

	class UClass* GetRequiredInterface();
};

// 0x0 (0xB8 - 0xB8)
// Class OakGame.OakStanceData
class UOakStanceData : public UAIStanceData
{
public:

	static class UClass* StaticClass();
	static class UOakStanceData* GetDefaultObj();

};

// 0xF8 (0x140 - 0x48)
// Class OakGame.OakStanceSelector
class UOakStanceSelector : public UStanceDataSelector
{
public:
	class UStanceDataProvider*                   AICombatStanceProvider;                            // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxBlackboardKeySelector             AICombatStanceKey;                                 // 0x50(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   AIAlertStanceProvider;                             // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxParam                             UseAIAlertStance;                                  // 0x68(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   AIFriendlyTargetStanceProvider;                    // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxBlackboardKeySelector             AIFriendlyTargetStanceKey;                         // 0xF0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   AIFlyingStanceProvider;                            // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxBlackboardKeySelector             AIFlyingStanceKey;                                 // 0x108(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   CrouchingStanceProvider;                           // 0x118(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   SprintingStanceProvider;                           // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   InjuredStanceProvider;                             // 0x128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   InjuredSprintStanceProvider;                       // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStanceDataProvider*                   AIAngryPatrolStanceProvider;                       // 0x138(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakStanceSelector* GetDefaultObj();

};

// 0x110 (0x140 - 0x30)
// Class OakGame.OakStatusEffectGlobalsData
class UOakStatusEffectGlobalsData : public UStatusEffectGlobalsData
{
public:
	TArray<struct FOakResourceEffectData>        OakResourceEffects;                                // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ElementalFXMaxHealthScalar;                        // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakElementalEffectData*               CryoElementalEffectData;                           // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakElementalEffectData*               DarkMagicElementalEffectData;                      // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakElementalEffectData*               FireElementalEffectData;                           // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakElementalEffectData*               PoisonElementalEffectData;                         // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakElementalEffectData*               ShockElementalEffectData;                          // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElementalDeathSelectionThreshold;                  // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakElementalAuraEffectData>   ElementalAuraEffects;                              // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UOakFreezeData*                        FreezeTypes[0x2];                                  // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          LeechValue;                                        // 0x98(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ULightProjectileData>      LeechProjectileData;                               // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRelativeDirectionData                LeechProjectileSpawnDirection;                     // 0xD8(0x50)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               LeechExplosionDamageData;                          // 0x128(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          NonTransientStatusEffectTag;                       // 0x130(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StatusEffectParticleSystem;                        // 0x138(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakStatusEffectGlobalsData* GetDefaultObj();

};

// 0x5E8 (0x818 - 0x230)
// Class OakGame.OakStatusEffectManagerComponent
class UOakStatusEffectManagerComponent : public UStatusEffectManagerComponent
{
public:
	bool                                         bResistCryoFreeze;                                 // 0x230(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_67F7[0x9F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCryoFreezing;                                    // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCryoFrozen;                                      // 0x2E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCryoThawing;                                     // 0x2F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCryoThawed;                                      // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_67F8[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCryoFreezeAssetData>          CryoFreezeAssets;                                  // 0x340(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          FreezeFallingDamageScale;                          // 0x350(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        FreezeNoDamageImpactThreshold;                     // 0x388(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FreezeFootDownThreshold;                           // 0x38C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FreezeSupportMeshScale;                            // 0x390(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_67FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          FreezeSupportBones;                                // 0x398(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint32                                       DestructibleSyncID;                                // 0x3A8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        RepFreezeData;                                     // 0x3AC(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSupportCryoFreezeAssets : 1;                      // Mask: 0x1, PropSize: 0x10x3AD(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanBuildFreezeSupportMesh : 1;                    // Mask: 0x2, PropSize: 0x10x3AD(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanCreateFreezeGroundEffect : 1;                  // Mask: 0x4, PropSize: 0x10x3AD(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFallOnFrozenDeath : 1;                            // Mask: 0x8, PropSize: 0x10x3AD(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFreezePauseAnims : 1;                             // Mask: 0x10, PropSize: 0x10x3AD(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21C : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class EFreezeState                      FreezeState;                                       // 0x3AE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFreezeType                       FreezeType;                                        // 0x3AF(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 FreezeInstigator;                                  // 0x3B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_67FB[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSupportShieldStatusEffects;                       // 0x450(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_67FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FShieldEffectStateData                ShieldEffectState;                                 // 0x458(0x20)(Net, Transient, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FCSBoosterStatus                      CSBoosterStatusState;                              // 0x478(0x18)(Net, Transient, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FStreamerBoosterStatus                StreamerBoosterStatusState;                        // 0x490(0x18)(Net, Transient, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bShouldShowThirdPersonEffects;                     // 0x4A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClearAllStatusEffectsOnOwnerDeath;                // 0x4A9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_67FD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakPresentableStatusEffectData*> UpdatedEffects;                                    // 0x4B0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FActiveOakResourceEffect>      ActiveResourceEffects;                             // 0x4C0(0x10)(Net, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FOakElementalAuraEffectInstance> ElementalAuraEffects;                              // 0x4D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FOakEffectPresentationManager         PresentationManager;                               // 0x4E0(0x278)(Net, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6800[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakStatusEffectManagerComponent* GetDefaultObj();

	void UnlockFreezePauseState(class FName Reason);
	void UnlockElementalEffects(class FName Reason);
	void UnlockElementalEffectByType(enum class EOakStatusEffectResourceEffectType Type, class FName Reason);
	void UnlockElementalEffectByDamageType(TSubclassOf<class UGbxDamageType> DamageTypeClass, class FName Reason);
	void UnlockCryoFreezePauseState(class FName Reason);
	void TryToFreezeOnActionEnd(enum class EGbxActionEndState EndState);
	void Thawed();
	void Thaw();
	void Shatter(const struct FVector& Origin, float Force, bool bReplicate);
	void SetPrimaryFreezeMesh(class UDestructibleMesh* Mesh);
	void SetPrimaryCryoFreezeMesh(class UDestructibleMesh* Mesh);
	void OnShieldNowNotFull(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNowNotDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNowFull(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNowDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnResourceNowNotFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnResourceNowNotDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnResourceNowFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnResourceNowDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnRep_ShieldEffectState(struct FShieldEffectStateData& OldState);
	void OnRep_FreezeData();
	void OnOwnerInjured();
	void OnOwnerHealthy();
	void OnOwnerDied();
	void LockFreezePauseState(class FName Reason);
	void LockElementalEffects(class FName Reason);
	void LockElementalEffectByType(enum class EOakStatusEffectResourceEffectType Type, class FName Reason);
	void LockElementalEffectByDamageType(TSubclassOf<class UGbxDamageType> DamageTypeClass, class FName Reason);
	void LockCryoFreezePauseState(class FName Reason);
	bool IsFrozen(bool bIncludeTransition);
	bool IsCryoFrozen();
	bool IsAffectedByElementalType(enum class EOakElementalType Type, float Threshold);
	void GetValidFreezePrimitiveComponentNames(TArray<class FName>* Array);
	float GetThawPercent();
	float GetFreezePercent();
	float GetCryoThawPercent();
	float GetCryoFreezePercent();
	void FrozenDeath(const struct FVector& Momentum, const struct FVector& HitLocation, const struct FVector& HitDirection, float Force, float Radius, int32 BoneIndex);
	void Frozen();
	void Freeze(bool bInstant, enum class EFreezeType Type);
	void CryoThaw();
	void CryoShatter(const struct FVector& Origin, float Force, bool bReplicate);
	void CryoFrozenDeath(const struct FVector& Momentum, const struct FVector& HitLocation, const struct FVector& HitDirection, float Force, float Radius, int32 BoneIndex);
	void CryoFreezeEvent__DelegateSignature();
	void CryoFreeze(bool bInstant);
	void ClientUpdateFreezePauseState();
	void ClearAllTransientEffects();
	void ClearAllElementalEffects();
	void BroadcastShatter(const struct FVector& Origin, float Force);
	void ApplyResourceEffectValue(class AController* Instigator, enum class EOakStatusEffectResourceEffectType Type, float InValue);
	void ApplyFreezeFallDamage(struct FHitResult& Hit);
};

// 0xB0 (0xE0 - 0x30)
// Class OakGame.OakStatusEffectPresentationData
class UOakStatusEffectPresentationData : public UGbxDataAsset
{
public:
	bool                                         bUsesThirdPersonParticles;                         // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6801[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakStatusEffectPresentation_Particle ParticlePresentation;                              // 0x38(0x30)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         bUsesScreenParticle;                               // 0x68(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6802[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakStatusEffectPresentation_ScreenParticle ScreenParticlePresentation;                        // 0x70(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bUsesMaterialParameter;                            // 0x90(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6804[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakStatusEffectPresentation_Material MaterialPresentation;                              // 0x98(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         bUsesAudioEvents;                                  // 0xC0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6805[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakStatusEffectPresentation_Audio    AudioPresentation;                                 // 0xC8(0x18)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakStatusEffectPresentationData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakStatusEffectsStatics
class UOakStatusEffectsStatics : public UStatusEffectsStatics
{
public:

	static class UClass* StaticClass();
	static class UOakStatusEffectsStatics* GetDefaultObj();

	struct FStatusEffectInstanceReference TriggerElementalEffect(class AActor* Target, TSubclassOf<class UOakDamageType> DamageType, class AActor* DamageCauser, class AController* InstigatorController, float DamagePerSecond, float ResourceEffectValue, bool bInfiniteDuration, bool bForceStatusEffectWithoutDamage);
	int32 GetStatusEffectInstancesByGameplayTag(class AActor* Target, struct FGameplayTag& Tag);
	void ClearAllTransientStatusEffects(class AActor* Target);
	void ClearAllElementalEffects(class AActor* Target);
};

// 0x50 (0x788 - 0x738)
// Class OakGame.OakStreamerItemPickup
class AOakStreamerItemPickup : public AOakInventoryItemPickup
{
public:
	class FString                                FirstDonor;                                        // 0x738(0x10)(Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDonorInfo                            LargestDonor;                                      // 0x748(0x18)(Net, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6814[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUIStatData*                           FirstDonorStatData;                                // 0x768(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIStatData*                           LargestDonorStatData;                              // 0x770(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DonorTextHTMLColor;                                // 0x778(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakStreamerItemPickup* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class OakGame.OakStreamingInteractionDirector
class UOakStreamingInteractionDirector : public UObject
{
public:
	uint8                                        Pad_6815[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakStreamingInteractionManager*       StreamingManager;                                  // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOakStreamingInteractionEvent*> EventsPool;                                        // 0x38(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UOakStreamingInteractionEvent*> EventsQueue;                                       // 0x48(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UOakStreamingInteractionEvent*> EventsHistory;                                     // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UOakStreamingInteractionEvent*> DirectorTriggeredEventsPool;                       // 0x68(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UOakStreamingInteractionEvent*> CurrentEvents;                                     // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6816[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakStreamingInteractionDirector* GetDefaultObj();

	void RegisterStreamingEvent(class UOakStreamingInteractionEvent* EventToRegister);
};

// 0x160 (0x190 - 0x30)
// Class OakGame.OakStreamingInteractionEvent
class UOakStreamingInteractionEvent : public UGbxDataAsset
{
public:
	uint8                                        Pad_6817[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EVENTTYPE;                                         // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEventTriggerType                 EventTriggerType;                                  // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6818[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EventCooldownTime;                                 // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  EventTitle;                                        // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  EventDescription;                                  // 0x68(0x18)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDialogScriptData>      EventScript;                                       // 0x80(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  BeginEventMessage;                                 // 0xA8(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FDialogTimeSlotReference              BeginEventDialog;                                  // 0xC0(0x40)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EndEventMessage;                                   // 0x100(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FDialogTimeSlotReference              EndEventDialog;                                    // 0x118(0x40)(Edit, NativeAccessSpecifierPublic)
	float                                        FallbackTimerDuration;                             // 0x158(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallbackTimer;                                     // 0x15C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        InitializeTimestamp;                               // 0x160(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        LastActivationTimestamp;                           // 0x168(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        EventStartedTimestampEBS;                          // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBackendAcknowledged;                              // 0x178(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6819[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       EventID;                                           // 0x17C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEndEventReasons                  EndEventReason;                                    // 0x180(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_681A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakStreamingInteractionManager*       StreamingMgr;                                      // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakStreamingInteractionEvent* GetDefaultObj();

	void EndEventFallback();
};

// 0x330 (0x4C0 - 0x190)
// Class OakGame.OakStreamingInteractionEvent_EnemySpawn
class UOakStreamingInteractionEvent_EnemySpawn : public UOakStreamingInteractionEvent
{
public:
	struct FGameplayTagContainer                 AllowedTags;                                       // 0x190(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DisallowedTags;                                    // 0x1B0(0x20)(Edit, NativeAccessSpecifierPublic)
	int32                                        NbOfKillsBeforeActivation;                         // 0x1D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxEventDuration;                                  // 0x1D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinTimerDuration;                                 // 0x1D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnemyInfoUpdateTimer;                              // 0x1DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      EnemyWorldIconData;                                // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class AOakCharacter>>   BlacklistedEnemyClasses;                           // 0x1E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGbxUIName>>     BlacklistedUINames;                                // 0x1F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FPollActionInfo                       SpawnAction;                                       // 0x208(0x60)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlayerWonEndEvent;                                 // 0x268(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FDialogTimeSlotReference              PlayerWonEndEventDialog;                           // 0x280(0x40)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NeutralEndEvent;                                   // 0x2C0(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FDialogTimeSlotReference              NeutralEndEventDialog;                             // 0x2D8(0x40)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlayerLostEndEvent;                                // 0x318(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FDialogTimeSlotReference              PlayerLostEventDialog;                             // 0x330(0x40)(Edit, NativeAccessSpecifierPublic)
	float                                        PollTimerDuration;                                 // 0x370(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenPollsTimerDuration;                     // 0x374(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxItemInPoll;                                     // 0x378(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6820[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPollActionInfo>               PollAvailableActions;                              // 0x380(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  SpawnWait;                                         // 0x390(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PollStarted;                                       // 0x3A8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PollSelected;                                      // 0x3C0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PollEnded;                                         // 0x3D8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EventWin;                                          // 0x3F0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EventLose;                                         // 0x408(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EventDraw;                                         // 0x420(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EventMapExited;                                    // 0x438(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EventTimeout;                                      // 0x450(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        NbSpawner;                                         // 0x468(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LastActivationKillCount;                           // 0x46C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGbxCharacter*                         EventEnemy;                                        // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                EnemyViewerName;                                   // 0x478(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        SpawnerRefArray;                                   // 0x488(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UOakMissionIconComponent*>      DebugSpawnerWaypoints;                             // 0x498(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        PollID;                                            // 0x4A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6821[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakStreamingInteractionEvent_EnemySpawn* GetDefaultObj();

	void SetEnemy(class AGbxCharacter* Enemy);
	void OnPlayerDead();
	void OnEnemySuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnEnemySpawned(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnEnemyDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
};

// 0x108 (0x298 - 0x190)
// Class OakGame.OakStreamingInteractionEvent_Lootable
class UOakStreamingInteractionEvent_Lootable : public UOakStreamingInteractionEvent
{
public:
	TArray<TSoftObjectPtr<class ULootableBalanceData>> LootableFilterBalanceData;                         // 0x190(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UInventoryCategoryData>> AcceptedItemCategories;                            // 0x1A0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        SweepstakesDuration;                               // 0x1B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrizeSelectionDuration;                            // 0x1B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallbackTimerAdditionalTime;                       // 0x1B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6824[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PrizeSelectionWin;                                 // 0x1C0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PrizeSelectionLose;                                // 0x1D8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PrizeSelectionTimeout;                             // 0x1F0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PrizeSelectionSent;                                // 0x208(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PrizeSelectionEnd;                                 // 0x220(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bEnabledInGearUpGameMode;                          // 0x238(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6826[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakThumbnailManagerConfig            ThumbnailMgrConfig;                                // 0x240(0x18)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FLootableEventResultItem>      LootItems;                                         // 0x258(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UUIGlobals*                            UIGlobals;                                         // 0x268(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakThumbnailManager*                  ThumbnailMgr;                                      // 0x270(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMinimalInventoryInfo>         ThumbnailInfo;                                     // 0x278(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        ThumbnailGenerationIdx;                            // 0x288(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6827[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakStreamingInteractionEvent_Lootable* GetDefaultObj();

	void OnThumbnailLoaded();
	void OnLootableSpawned(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnLootableObjectEventOpened(class ALootableObject* LootableObject);
	void OnLootableDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
};

// 0x1C8 (0x358 - 0x190)
// Class OakGame.OakStreamingInteractionEvent_Pinata
class UOakStreamingInteractionEvent_Pinata : public UOakStreamingInteractionEvent
{
public:
	TSoftClassPtr<class AActor>                  PinataClass;                                       // 0x190(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEnvQueryParams                       PinataSpawnLocationParams;                         // 0x1B8(0xB8)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnAttempt;                                   // 0x270(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxEventDuration;                                  // 0x274(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PollTimerDuration;                                 // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxItemInPoll;                                     // 0x27C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPollActionInfo>               PollAvailableActions;                              // 0x280(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPollActionInfo                       NoViewersAction;                                   // 0x290(0x60)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PollStarted;                                       // 0x2F0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PollSelected;                                      // 0x308(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PollEnded;                                         // 0x320(0x18)(Edit, NativeAccessSpecifierPublic)
	class UClass*                                PinataClassRef;                                    // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                PinataActor;                                       // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6828[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakStreamingInteractionEvent_Pinata* GetDefaultObj();

	void SetPinata(class AActor* NewPinataActor);
	void HandleLevelChanged(int32 OldLevel, int32 NewLevel);
};

// 0xF0 (0x120 - 0x30)
// Class OakGame.OakStreamingInteractionGlobals
class UOakStreamingInteractionGlobals : public UGbxDataAsset
{
public:
	TArray<class UOakStreamingInteractionEvent*> GeneralEvents;                                     // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        TimeBetweenCharacterProfileUpdateSteps;            // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddedTimeForUpdateStepsDuringEvents;               // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxInventoryItemsPerUpdate;                        // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6829[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UDialogScriptData>      GeneralStreamingInteractionScript;                 // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogTimeSlotReference              InteractionStartDialog;                            // 0x78(0x40)(Edit, NativeAccessSpecifierPublic)
	class FText                                  StartInteractionTitle;                             // 0xB8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  StartInteractionDesc;                              // 0xD0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PoolResultFormat;                                  // 0xE8(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FOakThumbnailManagerConfig            ThumbnailMgrConfig;                                // 0x100(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        DirectorTriggeredEventsCheckTimer;                 // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_682A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakStreamingInteractionGlobals* GetDefaultObj();

};

// 0x2D0 (0x2F8 - 0x28)
// Class OakGame.OakStreamingInteractionManager
class UOakStreamingInteractionManager : public UObject
{
public:
	uint8                                        Pad_682C[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakGameInstance*                      GameInstance;                                      // 0xE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakStreamingInteractionDirector*      StreamingInteractionDirector;                      // 0xF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AStreamingEventDispatcher*             StreamingEventDispatcher;                          // 0xF8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakThumbnailManager*                  ThumbnailMgr;                                      // 0x100(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<int32>                                ThumbnailNeededArray;                              // 0x108(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        ThumbnailGenerationIdx;                            // 0x118(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_682D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class FString>           ThumbnailsToSend;                                  // 0x120(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UUIGlobals*                            UIGlobals;                                         // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakStreamingInteractionGlobals*       StreamingGlobals;                                  // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeBetweenCharacterProfileUpdateSteps;            // 0x180(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AddedTimeForUpdateStepsDuringEvents;               // 0x184(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxInventoryItemsPerUpdate;                        // 0x188(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CharacterProfileUpdateTimer;                       // 0x18C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMinimalCharacterInfo                 SharedCharacterInfo;                               // 0x190(0x158)(Transient, NativeAccessSpecifierPrivate)
	bool                                         bIncreasedChanceForSubscribers;                    // 0x2E8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_682E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UpdateID;                                          // 0x2EC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        InventoryUpdateID;                                 // 0x2F0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SkillTreeUpdateID;                                 // 0x2F4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakStreamingInteractionManager* GetDefaultObj();

	void OnThumbnailLoaded();
	void OnStreamingSessionStatsUpdated(struct FOakInteractiveSessionStats& UpdatedSessionStats);
	class UOakStreamingInteractionManager* GetStreamingInteractionManager();
	void DisplayTimedMessageBPCall(class FText& Title, class FText& Description, float Duration, class AOakPlayerController* OwnerPC);
	void DebugStartStreamingInteraction();
	void DebugInitStreamingService(const class FString& DebugExtensionClientID);
	void DebugFakeStreamingEventPoolResult(const class FString& EventName, int32 ActionID, int32 ActionValue);
	void DebugFakeStreamingEvent(const class FString& EventName);
	void DebugFakeIsStreaming(bool bFakeIsStreaming);
};

// 0x60 (0x88 - 0x28)
// Class OakGame.OakSubtitleManager
class UOakSubtitleManager : public UObject
{
public:
	uint8                                        Pad_682F[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakSubtitleManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakThroughCollisionHandlerInterface
class IOakThroughCollisionHandlerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IOakThroughCollisionHandlerInterface* GetDefaultObj();

};

// 0xD8 (0x100 - 0x28)
// Class OakGame.OakThumbnailManager
class UOakThumbnailManager : public UObject
{
public:
	TArray<class UTextureRenderTarget2D*>        ReusableRenderTargets;                             // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FOakThumbnailManagerConfig            Config;                                            // 0x38(0x18)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6832[0x88];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnThumbnailLoaded;                                 // 0xD8(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6833[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakThumbnailManager* GetDefaultObj();

	void OnStreamedTextureLoaded();
};

// 0x40 (0x5B0 - 0x570)
// Class OakGame.OakTravelStationTracker
class AOakTravelStationTracker : public ATravelStationTracker
{
public:
	uint8                                        Pad_683D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlanetData*>                   HostDiscoveredPlanets;                             // 0x590(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	bool                                         bFastTravelAvailable;                              // 0x5A0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_683E[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakTravelStationTracker* GetDefaultObj();

	void UnlockFastTravelStation(class UObject* WorldContextObject, class AOakPlayerController* UnlockPlayer, class UFastTravelStationData* TravelStation, bool bBypassDependencies);
	void SetFastTravelAvailable(bool bAvailable);
	void OnRep_HostDiscoveredPlanets();
	void OnRep_FastTravelAvailable();
	void OnFastTravelLockoutTimer();
	void LockOutFastTravelAvailable(class UObject* WorldContextObject, float LockOutTime);
};

// 0x28 (0x488 - 0x460)
// Class OakGame.OakTriggerCapsule
class AOakTriggerCapsule : public ATriggerCapsule
{
public:
	class UOakTriggerComponent*                  TriggerComponent;                                  // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TouchedTrigger;                                    // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  UnTouchedTrigger;                                  // 0x478(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakTriggerCapsule* GetDefaultObj();

	void NotifyTriggerUntouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
};

// 0x90 (0x208 - 0x178)
// Class OakGame.OakTriggerComponent
class UOakTriggerComponent : public UActorComponent
{
public:
	uint8                                        Pad_6847[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  TouchedTrigger;                                    // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  UnTouchedTrigger;                                  // 0x190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  AllPlayersTouchingTrigger;                         // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        MaxTriggerEvents;                                  // 0x1B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6848[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TriggerDelay;                                      // 0x1B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6849[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         EnabledCondition;                                  // 0x1C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerInstigatedEventsOnly;                       // 0x1C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSelfAsSecondContext;                           // 0x1C9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSendUntouchEvenIfDisabled;                        // 0x1CA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_684A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         ActorCanTriggerCondition;                          // 0x1D0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x1D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_684B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ValidComponentNames;                               // 0x1E0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_684C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPrimitiveComponent*>           TrackedTouchPrimitives;                            // 0x1F8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakTriggerComponent* GetDefaultObj();

	void ResetTrigger();
	void NotifyActorComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void NotifyActorComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void HandleTriggerEvents(class AActor* OtherActor, enum class EOakTriggerComponentEventType EVENTTYPE, class UPrimitiveComponent* OptionalTouchedComponent);
	void GetValidComponentNames(TArray<class FName>* ComponentNames);
	void EnableTrigger(bool bEnableTrigger);
};

// 0x20 (0x340 - 0x320)
// Class OakGame.OakTurretMovementComponent
class UOakTurretMovementComponent : public UTurretMovementComponent
{
public:
	uint8                                        Pad_684D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakTurretMovementComponent* GetDefaultObj();

};

// 0x80 (0x4D8 - 0x458)
// Class OakGame.OakUIActorContainer
class AOakUIActorContainer : public AActor
{
public:
	class USceneComponent*                       SceneComponent;                                    // 0x458(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USocketComponent*                      PreviewActorSocket;                                // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureCube*                          PreviewCubeMap;                                    // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultAmbientCubeMapIntensity;                    // 0x470(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideFirstPersonMesh;                              // 0x474(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawPreviewInForeground;                          // 0x475(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawForOwnerOnly;                                 // 0x476(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTickWhilePaused;                                  // 0x477(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceLOD0;                                        // 0x478(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDisableURO;                                  // 0x479(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideWhenMenuStackHidden;                          // 0x47A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_684F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SelfBoundsScale;                                   // 0x47C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 PreviewActor;                                      // 0x480(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  PreviewLoadClass;                                  // 0x488(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6850[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakUIActorContainer* GetDefaultObj();

	void PreviewActorSpawnedDelegate__DelegateSignature(class AActor* PreviewActor);
	class UActorComponent* GetSpecialComponent1();
};

// 0xA88 (0xAB0 - 0x28)
// Class OakGame.OakUIBigMapManager
class UOakUIBigMapManager : public UObject
{
public:
	uint8                                        Pad_6851[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UZoneMapPOITypeData>    FastTravelPOIType;                                 // 0x30(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FOakUIBigMapSpecialTravelInfo> OverworldTravelInfo;                               // 0x58(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FOakUIBigMapSpecialTravelInfo         HubtownTravelInfo;                                 // 0x68(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FOakUIBigMapSpecialTravelInfo> AdditionalGlobalTravelDestinations;                // 0xB8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FChallengeFilterType>          AvailableGalaxyChallengeFilters;                   // 0xC8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FChallengeFilterType>          AvailableWorldChallengeFilters;                    // 0xD8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FChallengeFilterType>          AvailableZoneChallengeFilters;                     // 0xE8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FOakUIBigMapManagerText               UiText;                                            // 0xF8(0x198)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bShowDebugPOIs;                                    // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6852[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MouseWheelZoomMultiplier;                          // 0x294(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6853[0x4A8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakUIBigMapPOIListInfo               POIList;                                           // 0x740(0x2B0)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FZoneMapPOIEntry>              FastTravelStations;                                // 0x9F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6854[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIBigMapManager* GetDefaultObj();

	void OnMinimapIconComponentEndTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMinimapIconComponentBeginTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnFastTravelAvailabilityChanged(bool bAvailable);
	void OnChallengeListItemUpdated(struct FOakUIChallengeListData& ListData);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakUIBlueprintHelperLibrary
class UOakUIBlueprintHelperLibrary : public UGbxUIBlueprintHelperLibrary
{
public:

	static class UClass* StaticClass();
	static class UOakUIBlueprintHelperLibrary* GetDefaultObj();

	void UpdateUIStatesForAllPlayers(class UGameInstance* GameInstance, const TArray<class FName>& StatesToAdd, const TArray<class FName>& StatesToRemove);
	void PlayScreenParticleForAllPlayers(class UGameInstance* GameInstance, class UParticleSystem* Template, bool bHideWhenFinished, const struct FVector2D& ContentDims, float ParticleDepth, enum class EScreenParticleScalingMode ScalingMode, bool bOnlyOwnerSee, bool bAlwaysVisible, class FName Tag, bool bAllowMultipleInstances, bool bServerAuthority, bool bTickEvenWhenPaused, bool bHideDuringInGameMenu);
};

// 0x150 (0x178 - 0x28)
// Class OakGame.OakUIChallengeDataProvider
class UOakUIChallengeDataProvider : public UObject
{
public:
	class FString                                CompletedChallengeColor;                           // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChallengeCategoryData*                FallbackDisplaySortCategory;                       // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChallengeCategoryData*                GalacticChallengesCategory;                        // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UZoneMapData>>   OverworldZoneDatas;                                // 0x48(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPlanetData>            WorldPlanetData;                                   // 0x58(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGalaxyData>            WorldGalaxyData;                                   // 0x80(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6862[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AOakPlayerController>   OakPCOwner;                                        // 0xD8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AChallengeManager>      ChallengeManager;                                  // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UChallengesComponent>   ChallengesComponent;                               // 0xE8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPlanetData>            CurrentPlanetData;                                 // 0xF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UZoneMapData>           CurrentZoneData;                                   // 0xF8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDiscoveredLocationsOnly;                      // 0x100(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6863[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UZoneMapData*>                  CachedOverworldZones;                              // 0x108(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FOakUIChallengeDataListInfo           CurrentListInfo;                                   // 0x118(0x60)(Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakUIChallengeDataProvider* GetDefaultObj();

	void OnChallengeUpdated(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass, int32 NewValue, bool bDisplayNotification, bool bCompleted);
	void OnChallengeCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnChallengeChildCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnChallengeActivated(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
};

// 0xF8 (0x400 - 0x308)
// Class OakGame.GFxChallengeMenuCell
class UGFxChallengeMenuCell : public UGbxGFxListCell
{
public:
	struct FOakUIChallengeListData               ChallengeListData;                                 // 0x308(0xD0)(Transient, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         CompletedCheck;                                    // 0x3D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxGFxProgressBar*                    ProgressBar;                                       // 0x3E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         ProgressText;                                      // 0x3E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxTextField*                         RankText;                                          // 0x3F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6865[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGFxChallengeMenuCell* GetDefaultObj();

};

// 0xE38 (0xE60 - 0x28)
// Class OakGame.OakUICharacterCustomizationManager
class UOakUICharacterCustomizationManager : public UObject
{
public:
	uint8                                        Pad_6870[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterCreationData                CustomizationData;                                 // 0x30(0x530)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FStandInUIController                  StandInController;                                 // 0x560(0x430)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6871[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ECharacterCreationUIDisplayCategory, enum class EOakUICharacterCustomizationStandInType> StandInTypeMap;                                    // 0x998(0x50)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  NewCharacterStateId;                               // 0x9E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CharacterRootCategory;                             // 0x9F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EmotesRootCategory;                                // 0x9F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BannerRootCategory;                                // 0xA00(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StatueRootCategory;                                // 0xA08(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOakUICcManagerText                   Texts;                                             // 0xA10(0x240)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6872[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AOakPlayerController>   PlayerOwner;                                       // 0xC74(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6873[0x6C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakThumbnailManagerConfig            ThumbnailConfig;                                   // 0xCE8(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UOakThumbnailManager*                  ThumbnailManager;                                  // 0xD00(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FOakUICCThumbnailData>         ActiveThumbnails;                                  // 0xD08(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6874[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ACharacterCreationSheet> CharacterCreationSheetClass;                       // 0xE20(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACharacterCreationSheet*               CharacterCreationSheet;                            // 0xE48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6875[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUICharacterCustomizationManager* GetDefaultObj();

	void OnToggleCustomization(class FName ValueID, class UDialogNameTag* DialogTag);
	void OnSelectedClassChanged();
	void OnEnteringConfirmView();
	void OnEnteringClassSelectionView();
	void OnEnteringCharacterEditView();
	void MakeAuxiliaryActorForActionSkill(TSubclassOf<class UOakActionAbility> ActionSkill);
	void MakeAuxiliaryActorForAbilityBranch(class UOakPlayerAbilityTreeBranchData* PrimaryAbilityBranch, class UOakPlayerAbilityTreeBranchData* SecondaryAbilityBranch);
	void IntChangedDelegate__DelegateSignature(int32 NewValue);
	class AOakCharacter_StandIn* GetStandInCharacter();
	class UOakPlayerAbilityTreeBranchData* GetSelectedClass();
	class AOakPlayerController* GetPlayerOwner();
	void ClearAuxiliaryActors();
	void CharacterCreatedDelegate__DelegateSignature();
};

// 0x0 (0x458 - 0x458)
// Class OakGame.CharacterCreationSheet
class ACharacterCreationSheet : public AActor
{
public:

	static class UClass* StaticClass();
	static class ACharacterCreationSheet* GetDefaultObj();

	void OnSpawned(class AOakPlayerController* PlayerOwner);
	void OnCloseNewCharacterScreen();
};

// 0x48 (0x78 - 0x30)
// Class OakGame.CreditsDataAsset
class UCreditsDataAsset : public UGbxDataAsset
{
public:
	class FText                                  HeaderText;                                        // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FName                                  HeaderTextStyle;                                   // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CreditsDataTable;                                  // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOrganizationInfo>             OrganizationInfos;                                 // 0x58(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  TitleTextStyle;                                    // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PeopleTextStyle;                                   // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCreditsDataAsset* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class OakGame.TimedWwiseEvent
class UTimedWwiseEvent : public UObject
{
public:
	class UWorld*                                RefWorld;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                 OwningPawn;                                        // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          TimerHandle;                                       // 0x38(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           WwiseEvent;                                        // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTimedWwiseEvent* GetDefaultObj();

	void CallWwiseEvent();
};

// 0x10 (0x40 - 0x30)
// Class OakGame.OakUIDataCreditsData
class UOakUIDataCreditsData : public UGbxDataAsset
{
public:
	TArray<class UCreditsDataAsset*>             CreditsDataList;                                   // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakUIDataCreditsData* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class OakGame.OakUIDataCreditsScreenData
class UOakUIDataCreditsScreenData : public UGbxDataAsset
{
public:
	class FName                                  CreditsMenuName;                                   // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDaffodilCreditsSlideshowManager> CreditsSlideshowManagerClass;                      // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakUIDataCreditsData>  CreditsData;                                       // 0x40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakUIDataCreditsScreenData* GetDefaultObj();

};

// 0x408 (0x478 - 0x70)
// Class OakGame.OakUIDataCollector_ActionSkill
class UOakUIDataCollector_ActionSkill : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6882[0x3C8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakActionAbility*                     TrackedActionAbility;                              // 0x438(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6883[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ActionSkill* GetDefaultObj();

	void UntrackActionAbility(class UOakActionAbility* ActionAbility);
	void TrackActionAbility(class UOakActionAbility* ActionAbility);
	void OnPlayerAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnManagerWorldTravel();
	void OnActionSkillReady(class UOakActionAbility* ActionAbility);
	void OnActionSkillFailedActivation(class UOakActionAbility* ActionAbility, uint8 ErrorCode);
	void OnActionSkillEnded(class UOakActionAbility* ActionAbility);
	void OnActionSkillCoolingDown(class UOakActionAbility* ActionAbility);
	void OnActionSkillChargeCountChanged(class UOakActionAbility* ActionAbility);
	void OnActionSkillActivated(class UOakActionAbility* ActionAbility);
	void OnActionAbilityAugmentChanged(TSubclassOf<class UOakActionAbility> ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void OnAbilityAdded(class UOakActionAbility* ActionAbility);
	int32 GetPoolTimeRemainingSeconds(struct FGameResourcePoolReference* PoolRef);
};

// 0x118 (0x188 - 0x70)
// Class OakGame.OakUIDataCollector_Ammo
class UOakUIDataCollector_Ammo : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6888[0xD8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAmmoTypeData*                      AmmoType;                                          // 0x148(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6889[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Ammo* GetDefaultObj();

	void OnResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue);
	void OnResourcePoolMinMaxChanged(struct FGameResourcePoolReference* ResourcePoolRef, float MinValue, float MaxValue);
};

// 0x410 (0x480 - 0x70)
// Class OakGame.OakUIDataCollector_AmmoBar
class UOakUIDataCollector_AmmoBar : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_688E[0x3C8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAmmoTypeData*                      AmmoType;                                          // 0x438(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AWeapon*                               CachedWeapon;                                      // 0x440(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponCOVHeatComponent*               CachedCOVHeatComponent;                            // 0x448(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponAmmoComponent*                  CachedAmmoComponent;                               // 0x450(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponAmmoComponent*                  CachedWeaponSecondaryModeAmmoComponent;            // 0x458(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_688F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_AmmoBar* GetDefaultObj();

	void WeaponSecondaryModeAmmoChanged();
	void UpdateModeSwitchData();
	void UpdateData();
	void UpdateDamageTypeData();
	void OnWeaponUsed(uint8 InputChannel);
	void OnWeaponSwitchedMode();
	void OnWeaponEquipped();
	void OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnUpdatePreToggleWeaponMode(bool bPreToggleWeaponModeStarted);
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
};

// 0x68 (0xD8 - 0x70)
// Class OakGame.OakUIDataCollector_AURAMenuNavBar
class UOakUIDataCollector_AURAMenuNavBar : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6890[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_AURAMenuNavBar* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class OakGame.OakUIDataCollector_AURANetworkBase
class UOakUIDataCollector_AURANetworkBase : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6893[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_AURANetworkBase* GetDefaultObj();

};

// 0x180 (0x1F0 - 0x70)
// Class OakGame.OakUIDataCollector_Backpack
class UOakUIDataCollector_Backpack : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_689F[0x180];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Backpack* GetDefaultObj();

	void OnItemUpdated(struct FInventoryListEntryHandle& ItemHandle);
	void OnItemUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnItemRemoved(struct FInventoryListEntryHandle& ItemHandle);
	void OnItemEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnItemAdded(struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryListChanged();
};

// 0x260 (0x2D0 - 0x70)
// Class OakGame.OakUIDataCollector_BossBar
class UOakUIDataCollector_BossBar : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_68A5[0x260];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_BossBar* GetDefaultObj();

	void OnPlayerLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void HandleEventOnBossBar(struct FBossbarEventData& EventData);
};

// 0x230 (0x2A0 - 0x70)
// Class OakGame.OakUIDataCollector_TargetedNameplate
class UOakUIDataCollector_TargetedNameplate : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_68B0[0x210];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class INameplateInfoProviderInterface> CachedNIP;                                         // 0x280(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_68B1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_TargetedNameplate* GetDefaultObj();

	void OnLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnHealthUpdated();
	void OnHealthTypeDepletedEvent(struct FHealthTypeDepletedDetails& Details);
	void OnHealthTypeAdded(struct FHealthType& HealthType, int32 Index);
	void OnHealthInfoChanged();
	void OnDeath(class AActor* DamageReceiver, class AActor* DamageCauser);
};

// 0x8 (0x2A8 - 0x2A0)
// Class OakGame.OakUIDataCollector_BossNameplate
class UOakUIDataCollector_BossNameplate : public UOakUIDataCollector_TargetedNameplate
{
public:
	uint8                                        Pad_68B6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_BossNameplate* GetDefaultObj();

	void OnHealthUpdatedBoss();
	void OnHealthTypeDepleted(struct FHealthTypeDepletedDetails& Details);
};

// 0x1F0 (0x260 - 0x70)
// Class OakGame.OakUIDataCollector_CalibrateSafeArea
class UOakUIDataCollector_CalibrateSafeArea : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_68B9[0x1F0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_CalibrateSafeArea* GetDefaultObj();

};

// 0x1998 (0x1A08 - 0x70)
// Class OakGame.OakUIDataCollector_Cc
class UOakUIDataCollector_Cc : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_68BB[0x1998];                                  // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Cc* GetDefaultObj();

	void OnPetSpawned(class AActor* NewPet, struct FPetInfo& PetData);
	void OnPetDespawned(struct FPetInfo& PetData);
	void OnHeroPointsAvailableChanged(int32 NewValue);
};

// 0x3F0 (0x460 - 0x70)
// Class OakGame.OakUIDataCollector_ChallengeProgress
class UOakUIDataCollector_ChallengeProgress : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_68C2[0x3F0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ChallengeProgress* GetDefaultObj();

	void OnChallengeUpdated(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass, int32 NewValue, bool bDisplayNotification, bool bCompleted);
	void OnChallengeCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnChallengeChildCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnChallengeActivated(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void ClearData();
};

// 0xD0 (0x140 - 0x70)
// Class OakGame.OakUIDataCollector_Challenges
class UOakUIDataCollector_Challenges : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_68C6[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Challenges* GetDefaultObj();

};

// 0x2B0 (0x320 - 0x70)
// Class OakGame.OakUIDataCollector_CharacterInfo
class UOakUIDataCollector_CharacterInfo : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_68CB[0x2B0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_CharacterInfo* GetDefaultObj();

	void UpdateCharacterClassData();
};

// 0x5B8 (0x628 - 0x70)
// Class OakGame.OakUIDataCollector_CommonMenu
class UOakUIDataCollector_CommonMenu : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_68DD[0x518];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AMenuMapMenuFlow*                      CachedMenuMapMenuFlow;                             // 0x588(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_68DE[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_CommonMenu* GetDefaultObj();

	void OnQuitToDesktopSaveComplete(const class FString& SlotName, bool bSuccess);
	void OnQuitChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnLeaveGameChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnConfirmCharacterClicked(class FName ChoiceNameId, int32 ControllerId);
	void OnBackOutToTitleChoiceMade(class FName ChoiceNameId, int32 ControllerId);
};

// 0x130 (0x1A0 - 0x70)
// Class OakGame.OakUIDataCollector_CreditsMenu
class UOakUIDataCollector_CreditsMenu : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6905[0x130];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_CreditsMenu* GetDefaultObj();

};

// 0xC0 (0xF0 - 0x30)
// Class OakGame.OakUICrossplayFirstBootData
class UOakUICrossplayFirstBootData : public UGbxDataAsset
{
public:
	struct FOakUICrossplayFirstBootDataStruct    CrossplayFirstBootData;                            // 0x30(0xC0)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakUICrossplayFirstBootData* GetDefaultObj();

};

// 0x3C8 (0x438 - 0x70)
// Class OakGame.OakUIDataCollector_CrossplayFirstBoot
class UOakUIDataCollector_CrossplayFirstBoot : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6907[0x3C8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_CrossplayFirstBoot* GetDefaultObj();

};

// 0x388 (0x3F8 - 0x70)
// Class OakGame.OakUIDataCollector_Currency
class UOakUIDataCollector_Currency : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_690E[0x388];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Currency* GetDefaultObj();

	void OnQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void OnPremiumCurrencyManagerProfileRestored();
	void OnItemAdded(struct FInventoryListEntryHandle& UpdatedItemHandle);
};

// 0x198 (0x208 - 0x70)
// Class OakGame.OakUIDataCollector_Echo
class UOakUIDataCollector_Echo : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6916[0x190];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEchoIsPlaying;                                    // 0x200(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6918[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Echo* GetDefaultObj();

	void OnEchoStarted(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, const class FString& MoodKeyframe, const class FString& VoGMoodKey, enum class EVoiceOfGodSpeaker VoGSpeakerID, bool bIsNewEcho);
	void OnEchoFinished(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, bool bCompleted);
};

// 0xC58 (0xCC8 - 0x70)
// Class OakGame.OakUIDataCollector_EDVictory
class UOakUIDataCollector_EDVictory : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_691A[0xC58];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_EDVictory* GetDefaultObj();

	void OnCaliberResultsReceived(int32 TimePercentile, int32 CrystalPercentile);
};

// 0x1C0 (0x230 - 0x70)
// Class OakGame.OakUIDataCollector_EnchantmentReRoller
class UOakUIDataCollector_EnchantmentReRoller : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6920[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInventoryListEntry                   InventoryListEntry;                                // 0x180(0x78)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6921[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_EnchantmentReRoller* GetDefaultObj();

	void OnReRolledInventoryActorReady(class AActor* ReRolledInventoryActor);
	void OnCurrencyQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
};

// 0x260 (0x2D0 - 0x70)
// Class OakGame.OakUIDataCollector_EndlessAccept
class UOakUIDataCollector_EndlessAccept : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6922[0x260];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_EndlessAccept* GetDefaultObj();

};

// 0x98 (0x108 - 0x70)
// Class OakGame.OakUIDataCollector_EndlessDungeonIcons
class UOakUIDataCollector_EndlessDungeonIcons : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6923[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FEndlessDungeonIconInfo>       LiveIcons;                                         // 0xE8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6924[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_EndlessDungeonIcons* GetDefaultObj();

	void OnEndlessDungeonIconChanged(TArray<struct FEndlessDungeonWaypoint>& EDWaypoints);
	void OnDungeonShow(bool bShow);
};

// 0x448 (0x4B8 - 0x70)
// Class OakGame.OakUIDataCollector_EndlessDungeonTracker
class UOakUIDataCollector_EndlessDungeonTracker : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6926[0x438];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryCategoryData*                CachedCrystalInventoryType;                        // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          TimerHandle;                                       // 0x4B0(0x8)(NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_EndlessDungeonTracker* GetDefaultObj();

	void OnUIUpdateNeeded();
	void OnInventoryQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void OnEndlessDungeonBeginPlay();
};

// 0x2F8 (0x368 - 0x70)
// Class OakGame.OakUIDataCollector_EndlessStatus
class UOakUIDataCollector_EndlessStatus : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6927[0x2F8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_EndlessStatus* GetDefaultObj();

};

// 0x230 (0x2A0 - 0x70)
// Class OakGame.OakUIDataCollector_EntityInfo
class UOakUIDataCollector_EntityInfo : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6928[0x210];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class INameplateInfoProviderInterface> CachedNIP;                                         // 0x280(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_6929[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_EntityInfo* GetDefaultObj();

	void OnNameChanged();
	void OnLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnDeath(class AActor* DamageReceiver, class AActor* DamageCauser);
};

// 0x130 (0x1A0 - 0x70)
// Class OakGame.OakUIDataCollector_EquippedItem
class UOakUIDataCollector_EquippedItem : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_692B[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventorySlotData*                    InventorySlotData;                                 // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_692C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_EquippedItem* GetDefaultObj();

	void OnSlotEnabled(class UInventorySlotData* SlotData, bool Enabled);
	void OnItemUpdated(struct FInventoryListEntryHandle& ItemHandle);
	void OnItemUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnItemRemoved(struct FInventoryListEntryHandle& ItemHandle);
	void OnItemEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnItemAdded(struct FInventoryListEntryHandle& ItemHandle);
};

// 0x200 (0x270 - 0x70)
// Class OakGame.OakUIDataCollector_FFYL
class UOakUIDataCollector_FFYL : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_692D[0x200];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_FFYL* GetDefaultObj();

	void OnRevivingStop(bool IsHealed);
	void OnRevivingStart();
	void OnRevivingNonLocalStop(class UFightForYourLifeComponent* OtherFFYL);
	void OnGiveUpStop();
	void OnDownStop();
	void OnDownStart();
	void OnDownFinish();
	void OnCharacterChanged(class AOakCharacter* NewCharacter, class AOakCharacter* OldCharacter);
	void OnBeingRevivedStop();
	void OnBeingRevivedStart();
};

// 0xE0 (0x150 - 0x70)
// Class OakGame.OakUIDataCollector_GameNews
class UOakUIDataCollector_GameNews : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_692E[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_GameNews* GetDefaultObj();

};

// 0x648 (0x6B8 - 0x70)
// Class OakGame.OakUIDataCollector_GenericPopup
class UOakUIDataCollector_GenericPopup : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_692F[0x608];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDialogInfoInstance>           DialogBoxInstances;                                // 0x678(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6930[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_GenericPopup* GetDefaultObj();

	void OnRecieveUpdateDialogMessageTextCallback(const class FString& DialogIndexIdent, class FText MessageText);
	void OnRecieveRefresh();
	void OnRecieveHideDialog(const class FString& DialogIndexIdent);
};

// 0x200 (0x230 - 0x30)
// Class OakGame.OakUIGraphicsCalibrationDataAsset
class UOakUIGraphicsCalibrationDataAsset : public UGbxDataAsset
{
public:
	struct FOakUIGraphicsCalibrationData         Data;                                              // 0x30(0x200)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakUIGraphicsCalibrationDataAsset* GetDefaultObj();

};

// 0x408 (0x478 - 0x70)
// Class OakGame.OakUIDataCollector_GraphicsCalibration
class UOakUIDataCollector_GraphicsCalibration : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6931[0x408];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_GraphicsCalibration* GetDefaultObj();

};

// 0x1B0 (0x220 - 0x70)
// Class OakGame.OakUIDataCollector_HintBar
class UOakUIDataCollector_HintBar : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6932[0x1B0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_HintBar* GetDefaultObj();

	void OnPrimaryInputDeviceChanged();
	void OnHintBarVisibilityUpdated(class FName* TargetHintBarType);
	void OnHintBarUpdated(class FName* TargetHintBarType);
	void OnHintBarHelperVisibilityUpdated(class FName* TargetHintBarType);
};

// 0x268 (0x2D8 - 0x70)
// Class OakGame.OakUIDataCollector_HUDIndicator
class UOakUIDataCollector_HUDIndicator : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6935[0x268];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_HUDIndicator* GetDefaultObj();

	void ShowError(class FText& Message);
	void SaveProfileStart(bool bSuccess);
	void SaveGameStart(const class FString& SlotName, bool bSuccess);
	void SaveGameComplete(const class FString& SlotName, bool bSuccess);
	void NewMail(bool bMailStatus);
	void ConnectionLost(bool bIsLagging);
	void Checkpoint();
	void BoundryStateChange(bool bWarningActive);
};

// 0x3E0 (0x450 - 0x70)
// Class OakGame.OakUIDataCollector_IndigoChallengeProgress
class UOakUIDataCollector_IndigoChallengeProgress : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6936[0x3E0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_IndigoChallengeProgress* GetDefaultObj();

	void OnIndigoChallengeUpdated();
	void OnIndigoChallengeGoalsChanged();
	void OnIndigoChallengeCompleted();
	void OnIndigoChallengeBeginListening(class AActor* CurrentChallenge);
	void ClearData();
};

// 0x340 (0x3B0 - 0x70)
// Class OakGame.OakUIDataCollector_InteractPrompt
class UOakUIDataCollector_InteractPrompt : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6953[0x2A0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUsabilityInfo                        CachedUsabilityInfo;                               // 0x310(0x40)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6955[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UUseComponent*                         LocalUseComponent;                                 // 0x380(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUsableComponent*                      CachedUsableComponent;                             // 0x388(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AWeapon*                               CachedWeapon;                                      // 0x390(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponCOVHeatComponent*               CachedCOVHeatComponent;                            // 0x398(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponAmmoComponent*                  CachedAmmoComponent;                               // 0x3A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponReloadComponent*                CachedReloadComponent;                             // 0x3A8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_InteractPrompt* GetDefaultObj();

	void UpdateCachedAmmoCounts();
	void UpdateCachedAmmoComponent();
	void OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnUsedLockedObject();
	void OnUsabilityChanged(class UUsableComponent* NewUsableComponent, struct FUsabilityInfo& InUsabilityInfo);
	void OnReloadStarted(bool bAuto);
	void OnReloadEnded(bool bCompleted, bool bAmmoGiven);
	void OnExitTurret(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnEnterTurret(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
	void OnCurrencyQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
};

// 0xE10 (0xE80 - 0x70)
// Class OakGame.OakUIDataCollector_InventoryItem
class UOakUIDataCollector_InventoryItem : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6973[0x6A0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                InventoryItem;                                     // 0x710(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInventoryListEntry                   InventoryInfo;                                     // 0x718(0x78)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6974[0x6F0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_InventoryItem* GetDefaultObj();

	void OnThumbnailManagerSweep();
	void OnThumbnailLoaded();
	void OnSlotEnabled(class UInventorySlotData* SlotData, bool bSlotEnabled);
	void OnQuantityChanged(struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int32 Quantity, int32 MaxQuantity);
	void OnItemUpdated(struct FInventoryListEntryHandle& ItemHandle);
	void OnItemUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnItemRemoved(struct FInventoryListEntryHandle& ItemHandle);
	void OnItemEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnItemAdded(struct FInventoryListEntryHandle& ItemHandle);
	void LevelUp(int32 OldExperienceLevel, int32 NewExperienceLevel);
};

// 0xC0 (0x130 - 0x70)
// Class OakGame.OakUIDataCollector_Invites
class UOakUIDataCollector_Invites : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6978[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AOakPlayerController>   PCOwner;                                           // 0xE8(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6979[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Invites* GetDefaultObj();

};

// 0xC78 (0xCE8 - 0x70)
// Class OakGame.OakUIDataCollector_ItemCard
class UOakUIDataCollector_ItemCard : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_697B[0xBE0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInventoryListEntry                   InventoryListEntry;                                // 0xC50(0x78)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_697C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ItemCard* GetDefaultObj();

	void OnPrimaryCharacterChanged(class AGbxCharacter* NewCharacter);
	void LevelUp(int32 OldExperienceLevel, int32 NewExperienceLevel);
};

// 0x10 (0xCF8 - 0xCE8)
// Class OakGame.OakUIDataCollector_ItemCard_HUD
class UOakUIDataCollector_ItemCard_HUD : public UOakUIDataCollector_ItemCard
{
public:
	uint8                                        Pad_6983[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ItemCard_HUD* GetDefaultObj();

	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnItemUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnItemEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
};

// 0x8 (0xD00 - 0xCF8)
// Class OakGame.OakUIDataCollector_ItemCard_Abbreviated
class UOakUIDataCollector_ItemCard_Abbreviated : public UOakUIDataCollector_ItemCard_HUD
{
public:
	uint8                                        Pad_6985[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ItemCard_Abbreviated* GetDefaultObj();

};

// 0x430 (0x4A0 - 0x70)
// Class OakGame.OakUIDataCollector_ItemInspect
class UOakUIDataCollector_ItemInspect : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6986[0x240];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakItemInspectionMeshData            ItemInspectionMeshData;                            // 0x2B0(0xF0)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6987[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ItemInspect* GetDefaultObj();

};

// 0x9E0 (0xA50 - 0x70)
// Class OakGame.OakUIDataCollector_ItemOfTheDay
class UOakUIDataCollector_ItemOfTheDay : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_698F[0x9E0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ItemOfTheDay* GetDefaultObj();

	void OnThumbnailLoaded();
	void OnPlayerLookedAway(class UUsableComponent* NewUsableComponent);
	void OnPlayerLookedAt(class UUsableComponent* NewUsableComponent);
};

// 0x270 (0x2E0 - 0x70)
// Class OakGame.OakUIDataCollector_ItemTrading
class UOakUIDataCollector_ItemTrading : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6993[0x270];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ItemTrading* GetDefaultObj();

	void OnThumbnailLoaded();
};

// 0x238 (0x2B8 - 0x80)
// Class OakGame.OakUIDataCollector_LAN
class UOakUIDataCollector_LAN : public UOakUIDataCollector_AURANetworkBase
{
public:
	uint8                                        Pad_6995[0x1E8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsLanBrowser;                                     // 0x268(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6996[0x4F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_LAN* GetDefaultObj();

	void ViewProfile();
};

// 0x88 (0xB8 - 0x30)
// Class OakGame.OakLegalScreenData
class UOakLegalScreenData : public UGbxDataAsset
{
public:
	class FText                                  LegalText;                                         // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LegalTextPC;                                       // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ThirdPartyLegalText;                               // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ThirdPartyLegalTextPC;                             // 0x78(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>     Images;                                            // 0x90(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>     PCImages;                                          // 0xA0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        DelayBeforeInputSkipScreen;                        // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayBeforeAutoSkipScreen;                         // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakLegalScreenData* GetDefaultObj();

};

// 0xD0 (0x140 - 0x70)
// Class OakGame.OakUIDataCollector_LegalScreen
class UOakUIDataCollector_LegalScreen : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6998[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_LegalScreen* GetDefaultObj();

};

// 0x508 (0x578 - 0x70)
// Class OakGame.OakUIDataCollector_LoadCharacter
class UOakUIDataCollector_LoadCharacter : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69A3[0x3F0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AOakPlayerController>   PCOwner;                                           // 0x460(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakGameInstance*                      GameInstance;                                      // 0x488(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_69A6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerStandIn*                        PlayerStandIn;                                     // 0x498(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_69A7[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UDialogScriptData>      DialogScript;                                      // 0x550(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_LoadCharacter* GetDefaultObj();

	void OnPromptNoSaveGame(class FName ChoiceNameId, int32 ControllerId);
	void OnPromptDeleteCorruptSavegame(class FName ChoiceNameId, int32 ControllerId);
	void OnDeleteCharacterChoiceMade(class FName ChoiceNameId, int32 ControllerId);
};

// 0x450 (0x4C0 - 0x70)
// Class OakGame.OakUIDataCollector_LobbyMenu
class UOakUIDataCollector_LobbyMenu : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69AE[0x328];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeRequiredToReinvite;                            // 0x398(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_69AF[0xBC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakRecommendedFriendInviteStatus> CurrentFriendInvites;                              // 0x458(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_69B0[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_LobbyMenu* GetDefaultObj();

	void UpdateMatchmakingWidgetData();
	void OnConfirmChangeNetworkMode(class FName ChoiceNameId, int32 ControllerId);
};

// 0x3E0 (0x460 - 0x80)
// Class OakGame.OakUIDataCollector_Mail
class UOakUIDataCollector_Mail : public UOakUIDataCollector_AURANetworkBase
{
public:
	uint8                                        Pad_69B5[0x228];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  OakPCOwner;                                        // 0x2A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakThumbnailManager*                  IconManager;                                       // 0x2B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UOakInventoryListComponent> PlayerInventory;                                   // 0x2B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, class AActor*>           SpawnedInventoryItems;                             // 0x2C0(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AActor*                                ReceivedMailGearItem;                              // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryCategoryData*                ReceivedMailItemCategory;                          // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_69B7[0x140];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Mail* GetDefaultObj();

	void OnThumbnailLoaded();
	void OnInventoryListChanged();
	struct FOakThumbnailManagerIcon GetItemRenderBitmapData(class AActor* ItemActor, class UInventoryCategoryData* ItemCategory);
};

// 0xA40 (0xAB0 - 0x70)
// Class OakGame.OakUIDataCollector_MapView
class UOakUIDataCollector_MapView : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69BA[0xA40];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_MapView* GetDefaultObj();

};

// 0x230 (0x2A0 - 0x70)
// Class OakGame.OakUIDataCollector_MatchmakeHUD
class UOakUIDataCollector_MatchmakeHUD : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69BB[0x230];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_MatchmakeHUD* GetDefaultObj();

};

// 0x368 (0x3E8 - 0x80)
// Class OakGame.OakUIDataCollector_Matchmaking
class UOakUIDataCollector_Matchmaking : public UOakUIDataCollector_AURANetworkBase
{
public:
	uint8                                        Pad_69BC[0x2B0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakEchoNetMatchmakingActivityData> ActivityListData;                                  // 0x330(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class FString                                CurrentMatchmakingActivityGuid;                    // 0x340(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueuedMatchmakingActivityGuid;                     // 0x350(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_69BD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentSelectedActivityIdx;                        // 0x364(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        MatchmakingRegions;                                // 0x368(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_69BE[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Matchmaking* GetDefaultObj();

};

// 0x1F0 (0x260 - 0x70)
// Class OakGame.OakUIDataCollector_Mayhem
class UOakUIDataCollector_Mayhem : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69C3[0x1C0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUIStatData*>                   CollatedMayhemGameModifierUIStats;                 // 0x230(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UUIStatData*>                   CollatedMayhemTierDropRateUIStats;                 // 0x240(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_69C4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Mayhem* GetDefaultObj();

	void OnMayhemModeUpdated(bool Active, int32 Level);
	void OnMayhemLevelUnlocked(int32 MaxLevel);
};

// 0xA0 (0x110 - 0x70)
// Class OakGame.OakUIDataCollector_MenuDamage
class UOakUIDataCollector_MenuDamage : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69C6[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_MenuDamage* GetDefaultObj();

};

// 0x2E0 (0x350 - 0x70)
// Class OakGame.OakUIDataCollector_MiniMap
class UOakUIDataCollector_MiniMap : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69CE[0x2E0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_MiniMap* GetDefaultObj();

	void OnEndlessDungeonIconChanged(TArray<struct FEndlessDungeonWaypoint>& EDWaypoints);
	void OnDungeonShow(bool bShow);
	void OnCustomWaypointChanged(bool bDisplay, struct FVector& WorldLocation);
};

// 0x260 (0x2D0 - 0x70)
// Class OakGame.OakUIDataCollector_Mission
class UOakUIDataCollector_Mission : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69DD[0x1E8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AOakMissionTracker>     OakMissionTracker;                                 // 0x258(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UOakPlayerMissionComponent> MissionComponent;                                  // 0x260(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UOakGameInstance>       GameInstance;                                      // 0x268(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_69DE[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Mission* GetDefaultObj();

	void OnChallengeUpdated(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass, int32 NewValue, bool bDisplayNotification, bool bCompleted);
	void OnChallengeCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnChallengeChildCompleted(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
	void OnChallengeActivated(class UChallengesComponent* Component, TSubclassOf<class UChallenge> ChallengeClass);
};

// 0x2E0 (0x350 - 0x70)
// Class OakGame.OakUIDataCollector_MissionAccept
class UOakUIDataCollector_MissionAccept : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69E3[0x2B8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AMissionTracker*                       MissionTracker;                                    // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMissionDeliveryData                  DeliveryData;                                      // 0x330(0x18)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_69E4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_MissionAccept* GetDefaultObj();

};

// 0x218 (0x288 - 0x70)
// Class OakGame.OakUIDataCollector_MissionReward
class UOakUIDataCollector_MissionReward : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69E9[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxNormalRewardsDisplayTime;                       // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxBonusRewardsDisplayTime;                        // 0x184(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_69EA[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_MissionReward* GetDefaultObj();

	void CreateSlot(TSubclassOf<class UMission> MissionClass, struct FGFxMissionTrackerRewardDisplayData& Reward, bool bOptionalReward);
	void AddRewardsToDisplayQueue(TSubclassOf<class UMission> MissionClass, const struct FGFxMissionTrackerRewardDisplayData& RewardData, const struct FGFxMissionTrackerRewardDisplayData& OptionalRewardData);
};

// 0xA0 (0x110 - 0x70)
// Class OakGame.OakUIDataCollector_MissionTracker
class UOakUIDataCollector_MissionTracker : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69EB[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxTimeTillReturnToTrackedMission;                 // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_69EC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UMission>                  TempTrackedMission;                                // 0xF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AOakMissionTracker>     MissionTracker;                                    // 0xF8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_69ED[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          TimerHandle;                                       // 0x108(0x8)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_MissionTracker* GetDefaultObj();

	void OnInputDeviceChanged();
};

// 0xD0 (0x140 - 0x70)
// Class OakGame.OakUIDataCollector_NewGame
class UOakUIDataCollector_NewGame : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69EE[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_NewGame* GetDefaultObj();

};

// 0x388 (0x3F8 - 0x70)
// Class OakGame.OakUIDataCollector_NewUNote
class UOakUIDataCollector_NewUNote : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69F0[0x388];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_NewUNote* GetDefaultObj();

};

// 0x80 (0xF0 - 0x70)
// Class OakGame.OakUIDataCollector_Notifications
class UOakUIDataCollector_Notifications : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_69FB[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Notifications* GetDefaultObj();

	void OnRoomCompletedEndlessDungeon();
	void OnRoomBeginPlayEndlessDungeonEvent();
	void OnMayhemLevelUnlocked(int32 MaxLevel);
	void OnFirstRoomBeginPlayEndlessDungeonEvent();
	void OnEndlessDungeonBeginPlay();
	void OnCurrentBonusObjectiveSuccess();
	void OnCurrentBonusObjectiveFailed();
	void OnAfterBeginPlayEndlessDungeonEvent();
	void AddNotificationItemToQueue(class UHUDNotificationAsset* Asset, class FText& Message, int32 NotificationPriority, TSubclassOf<class UObject> TrackedNotificationTarget, bool bMakeActiveImmediately);
};

// 0x338 (0x3A8 - 0x70)
// Class OakGame.OakUIDataCollector_OnlineRollout
class UOakUIDataCollector_OnlineRollout : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A00[0x338];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_OnlineRollout* GetDefaultObj();

	void OnMessageShow(struct FUIManagerMessage& Message);
	void OnMessageHide(struct FMessageHandle& MessageID);
};

// 0xCF8 (0xD68 - 0x70)
// Class OakGame.OakUIDataCollector_OptionsMenu
class UOakUIDataCollector_OptionsMenu : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A14[0x580];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UOptionDescriptionData*                OptionsDescriptionData;                            // 0x5F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DefaultFirstScreenToLookAt;                        // 0x5F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A15[0x768];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_OptionsMenu* GetDefaultObj();

	void OnResetTutorialsChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnEnableGamepadInputChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnConfirmNewSettings(class FName ChoiceNameId, int32 ControllerId);
};

// 0x50 (0x78 - 0x28)
// Class OakGame.NameplateInfo
class UNameplateInfo : public UObject
{
public:
	int64                                        UniqueId;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakPlayerState*                       PlayerState;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakCharacter*                         Character;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxSkeletalMeshComponent*             Component;                                         // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Name;                                              // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlatformIdent;                                     // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NameplateState;                                    // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDead;                                             // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6A24[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNameplateInfo* GetDefaultObj();

	bool ShouldHide();
	void SetNameplateDelegates();
	void SetDownState(enum class EDownState NewDownState);
	void OnHealthStateChanged(enum class EHealthState HealthState);
	void OnDownStop();
	void OnDownStart();
	void OnDownFinish();
	void OnBeingRevivedStop();
	void OnBeingRevivedStart();
	struct FVector GetPosition();
	void FindPlatformIdent();
	void FindName();
	void FindCharacter();
	void ClearNameplateDelegates();
};

// 0xA8 (0x118 - 0x70)
// Class OakGame.OakUIDataCollector_OverheadNameplate
class UOakUIDataCollector_OverheadNameplate : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A2C[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UNameplateInfo*>                FollowedPlayers;                                   // 0xE8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A2E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_OverheadNameplate* GetDefaultObj();

	void RefreshPlayerList();
	void RealignData();
	void OnPlayerRemoved();
	void OnPlayerAdded(class AOakPlayerState* NewPlayer);
	void OnPawnChanged(class AOakCharacter* NewPawn, class AOakCharacter* OldPawn);
};

// 0x78 (0xE8 - 0x70)
// Class OakGame.OakUIDataCollector_OverworldData
class UOakUIDataCollector_OverworldData : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A32[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_OverworldData* GetDefaultObj();

};

// 0x88 (0xF8 - 0x70)
// Class OakGame.OakUIDataCollector_PassiveBuff
class UOakUIDataCollector_PassiveBuff : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A34[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActiveAbilityQueueData>       ActiveAbilityQueue;                                // 0xE0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UOakPlayerAbilityManagerComponent> AbilityManager;                                    // 0xF0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PassiveBuff* GetDefaultObj();

	void OnPassiveHUDIconDeactivated(struct FOakPlayerAbilityHUDItemList& ItemList, struct FOakPlayerAbilityHUDItem& Item);
	void OnPassiveHUDIconChanged(struct FOakPlayerAbilityHUDItemList& ItemList, struct FOakPlayerAbilityHUDItem& Item);
	void OnPassiveHUDIconActivated(struct FOakPlayerAbilityHUDItemList& ItemList, struct FOakPlayerAbilityHUDItem& Item);
};

// 0x80 (0xA8 - 0x28)
// Class OakGame.PetHealthInfo
class UPetHealthInfo : public UObject
{
public:
	class AActor*                                FollowedPet;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    PetClass;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakDamageComponent*                   CachedDamageComponent;                             // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFightForYourLifeComponent*            CachedFFYLComponent;                               // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6A46[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameResourcePoolReference            HealthPool;                                        // 0x50(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameResourcePoolReference            RespawnPool;                                       // 0x68(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6A48[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPetHealthInfo* GetDefaultObj();

	void UpdateBarPercentage();
	void SetPetDelegates(class UPetOwnerComponent* CachedPetComponent);
	void SetDownState(uint8 NewDownState);
	void OnRespawnResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue);
	void OnHealthResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue);
	void OnHealthResourcePoolMinMaxChanged(struct FGameResourcePoolReference* ResourcePoolRef, float MinValue, float MaxValue);
	void OnDownStop();
	void OnDownStart();
	void OnDownFinish();
	void OnBeingRevivedStop();
	void OnBeingRevivedStart();
	void EvaluatePetName(class AOakPlayerController* InOakPC);
	void ClearPetDelegates();
};

// 0x98 (0x108 - 0x70)
// Class OakGame.OakUIDataCollector_PetHealth
class UOakUIDataCollector_PetHealth : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A4C[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPetOwnerComponent*                    CachedPetComponent;                                // 0xE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPetHealthInfo*>                PetList;                                           // 0xF0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bListChanged;                                      // 0x100(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A4D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PetHealth* GetDefaultObj();

	void OnPetReleased(struct FPetInfo& PetData);
	void OnPetAssigned(class AActor* NewPet, struct FPetInfo& PetData);
};

// 0x88 (0xF8 - 0x70)
// Class OakGame.OakUIDataCollector_Pets
class UOakUIDataCollector_Pets : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A54[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFollowedPet>                  FollowedPets;                                      // 0xE8(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Pets* GetDefaultObj();

	void OnPetReleased(class AActor* Pet, enum class EPetReleaseReason Reason);
	void OnPetDestroyed(class AActor* Pet);
	void OnPetAssigned(class AActor* NewPet, struct FPetInfo& PetData);
};

// 0x1A8 (0x218 - 0x70)
// Class OakGame.OakUIDataCollector_PhotoMode
class UOakUIDataCollector_PhotoMode : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A56[0x170];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerController*                     OwnerController;                                   // 0x1E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APhotoModeController*                  CachedPhotoModeController;                         // 0x1E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhotoModeGlobals*                     CachedPhotoModeGlobals;                            // 0x1F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCurrentTimeOfDayAsDefault;                     // 0x1F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6A58[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeOfDayWhenEnteringPhotoMode;                    // 0x1FC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6A59[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PhotoMode* GetDefaultObj();

};

// 0x98 (0x108 - 0x70)
// Class OakGame.OakUIDataCollector_PlayerAlerts
class UOakUIDataCollector_PlayerAlerts : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A62[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlayerAlertInfo>              LiveAlerts;                                        // 0xE8(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A63[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PlayerAlerts* GetDefaultObj();

	void RemovePlayerAlert(struct FUniqueNetIdRepl& Instigator);
	void ClearAlerts();
	void AddPlayerAlert(class AActor* TargetedActor, struct FUniqueNetIdRepl& Instigator, const struct FVector& AlertLocation, class UPlayerAlertData* InAlertData);
};

// 0xB8 (0x128 - 0x70)
// Class OakGame.OakUIDataCollector_PlayerClass
class UOakUIDataCollector_PlayerClass : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A66[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter*                         CachedCharacter;                                   // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PlayerClass* GetDefaultObj();

	void OnSlottedAbilityBranchChanged();
	void OnPawnChanged(class AOakCharacter* NewPawn, class AOakCharacter* OldPawn);
};

// 0x1C8 (0x238 - 0x70)
// Class OakGame.OakUIDataCollector_PlayerControllerInfo
class UOakUIDataCollector_PlayerControllerInfo : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A6A[0x168];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentTarget;                                     // 0x1D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A6B[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PlayerControllerInfo* GetDefaultObj();

	void OnGameEventCallback(enum class EOakReticleFeedbackGameEvent GameEvent);
};

// 0xD70 (0xDE0 - 0x70)
// Class OakGame.OakUIDataCollector_PlayerId
class UOakUIDataCollector_PlayerId : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A6C[0xD70];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PlayerId* GetDefaultObj();

};

// 0xA0 (0x110 - 0x70)
// Class OakGame.OakUIDataCollector_PlayerParty
class UOakUIDataCollector_PlayerParty : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A70[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakGameInstance*                      CachedGameInstance;                                // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakPlayerController*                  CachedPlayerController;                            // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A71[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PlayerParty* GetDefaultObj();

	void PlayerRemoved();
	void PlayerChanged();
	void PlayerAdded(class AOakPlayerState* NewPlayer);
	void ClearData();
};

// 0x1F0 (0x260 - 0x70)
// Class OakGame.OakUIDataCollector_PlayerPrestige
class UOakUIDataCollector_PlayerPrestige : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A79[0x1D0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          TimerHandle;                                       // 0x240(0x8)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A7A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PlayerPrestige* GetDefaultObj();

	void OnPrestigePointsChanged();
	void OnPrestigeExpChanged();
	void OnPlayerLevelUp(int32 OldExperienceLevel, int32 NewExperienceLevel);
};

// 0xB0 (0x120 - 0x70)
// Class OakGame.OakUIDataCollector_PlotMission
class UOakUIDataCollector_PlotMission : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A7D[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakGameInstance*                      CachedGameInstance;                                // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_PlotMission* GetDefaultObj();

	void UpdatePlotMissionName();
};

// 0x90 (0x100 - 0x70)
// Class OakGame.OakUIDataCollector_RadialWheel
class UOakUIDataCollector_RadialWheel : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A83[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_RadialWheel* GetDefaultObj();

	void OnQuickChangeMenuClosed();
	void OnPrimaryCharacterChanged(class AGbxCharacter* InChar);
};

// 0x688 (0x708 - 0x80)
// Class OakGame.OakUIDataCollector_Roster
class UOakUIDataCollector_Roster : public UOakUIDataCollector_AURANetworkBase
{
public:
	uint8                                        Pad_6A85[0x688];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Roster* GetDefaultObj();

};

// 0x420 (0x490 - 0x70)
// Class OakGame.OakUIDataCollector_SDUVendor
class UOakUIDataCollector_SDUVendor : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A8E[0x420];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_SDUVendor* GetDefaultObj();

	void OnSelectedSDUChanged(int32 CurrentSDULevel, class UOakSDUData* SDUData);
	void OnSDUPurchased(class UOakSDUData* OakSDUData, bool bIsSoldOut);
	void OnInsufficientFunds(class UOakSDUData* OakSDUData);
};

// 0x3F8 (0x478 - 0x80)
// Class OakGame.OakUIDataCollector_ShiftMenu
class UOakUIDataCollector_ShiftMenu : public UOakUIDataCollector_AURANetworkBase
{
public:
	uint8                                        Pad_6A90[0x3F8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_ShiftMenu* GetDefaultObj();

};

// 0x3C0 (0x430 - 0x70)
// Class OakGame.OakUIDataCollector_SignpostMsg
class UOakUIDataCollector_SignpostMsg : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6A9B[0x3C0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_SignpostMsg* GetDefaultObj();

	void OnSignpostUsed(float DisplayTime, class FText LeftNameDirection, class FText RightNamedDirection);
};

// 0x6E8 (0x758 - 0x70)
// Class OakGame.OakUIDataCollector_SkillScreen
class UOakUIDataCollector_SkillScreen : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6AB0[0x6E8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_SkillScreen* GetDefaultObj();

	void OnUnlockedSecondaryBranchChanged();
	void OnSlottedAbilityBranchChanged();
	void OnPlayerSaveGameHasLoaded();
	void OnLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnHeroPointsNotConfirmedChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnExperienceAdded(int32 ExperienceAdded, enum class EPlayerExperienceSource Source, enum class EPlayerExperienceType Type);
	void OnActionSkillEnded(class UOakActionAbility* InActionAbility);
	void OnActionSkillActivated(class UOakActionAbility* InActionAbility);
	void OnAbilityTierChanged(class UOakPlayerAbilityTreeTierData* TierData);
	void OnAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnAbilityPointsChanged(int32 RemainingAbilityPoints);
	void OnAbilityItemChanged(class UOakPlayerAbilityTreeItemData* ItemData);
};

// 0x78 (0xE8 - 0x70)
// Class OakGame.OakUIDataCollector_SpecialMsg
class UOakUIDataCollector_SpecialMsg : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6AB7[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_SpecialMsg* GetDefaultObj();

	void OnAddSpecialMsg(class USpecialMessageDataAsset* MessageData);
};

// 0x120 (0x190 - 0x70)
// Class OakGame.OakUIDataCollector_Spells
class UOakUIDataCollector_Spells : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6AC7[0xE8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGrenadeMod*>                   Spells;                                            // 0x158(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  OakCharacter_Player;                               // 0x168(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakPlayerController*                  OakPlayerController;                               // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6ACA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Spells* GetDefaultObj();

	void OnSpellUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnSpellStop(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellStart(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellFired(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnSpellCastFailed(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnNotifyTravel();
	void ClearSpellAtIndex(int32 Index);
};

// 0x150 (0x1C0 - 0x70)
// Class OakGame.OakUIDataCollector_StatusMenuNavBar
class UOakUIDataCollector_StatusMenuNavBar : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6ADA[0x150];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_StatusMenuNavBar* GetDefaultObj();

	void OnMayhemModeUpdated(bool Active, int32 Level);
	void OnMayhemLevelUnlocked(int32 MaxLevel);
	void OnIndigoRunStarted(const struct FGuid& ID, class AOakPlayerController* PlayerController);
	void OnIndigoRunFinished();
	void OnEndlessDungeonStatusChanged(enum class ETelemetryDungeonStatus DungeonStatus);
	void OnEndlessDungeonShown(bool IsShown);
};

// 0x218 (0x288 - 0x70)
// Class OakGame.OakUIDataCollector_SubtitleData
class UOakUIDataCollector_SubtitleData : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6ADC[0x218];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_SubtitleData* GetDefaultObj();

};

// 0x108 (0x178 - 0x70)
// Class OakGame.OakUIDataCollector_TextChat
class UOakUIDataCollector_TextChat : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6ADF[0x108];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_TextChat* GetDefaultObj();

	void OnTextLogChanged(class UGFxPCTextChatBuffer* TextChatBuffer);
	void OnTextChatOptionChanged(bool bIsActive);
};

// 0x160 (0x190 - 0x30)
// Class OakGame.OakTitleScreenData
class UOakTitleScreenData : public UGbxDataAsset
{
public:
	struct FOakTitleScreenDataStruct             TitleScreenData;                                   // 0x30(0x160)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakTitleScreenData* GetDefaultObj();

};

// 0x2E0 (0x350 - 0x70)
// Class OakGame.OakUIDataCollector_TitleScreen
class UOakUIDataCollector_TitleScreen : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6AE6[0x148];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakTitleScreenDataStruct             ScreenData;                                        // 0x1B8(0x160)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6AE7[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_TitleScreen* GetDefaultObj();

	void OnQuitChoiceMade(class FName ChoiceNameId, int32 ControllerId);
	void OnExternalUIChoiceMade(class FName ChoiceNameId, int32 ControllerId);
};

// 0x148 (0x1B8 - 0x70)
// Class OakGame.OakUIDataCollector_Tutorial_Full
class UOakUIDataCollector_Tutorial_Full : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6AEA[0x148];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Tutorial_Full* GetDefaultObj();

	void OnRecieveTutorialMessage(class UGFxModalTutorialDataAsset* MessageData);
};

// 0x410 (0x480 - 0x70)
// Class OakGame.OakUIDataCollector_TutorialMsg
class UOakUIDataCollector_TutorialMsg : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6AEE[0x410];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_TutorialMsg* GetDefaultObj();

	void OnRemoveTutorialMsg(class UTutorialMessageDataAsset* MessageData);
	void OnAddTutorialMsg(class UTutorialMessageDataAsset* MessageData);
};

// 0xC0 (0x130 - 0x70)
// Class OakGame.OakUIDataCollector_TutorialSeq
class UOakUIDataCollector_TutorialSeq : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6AF0[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_TutorialSeq* GetDefaultObj();

};

// 0x10 (0x140 - 0x130)
// Class OakGame.OakUIDataCollector_TutorialSeqBigMap
class UOakUIDataCollector_TutorialSeqBigMap : public UOakUIDataCollector_TutorialSeq
{
public:
	uint8                                        Pad_6AF1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_TutorialSeqBigMap* GetDefaultObj();

};

// 0x3B8 (0x428 - 0x70)
// Class OakGame.OakUIDataCollector_VendingMachine
class UOakUIDataCollector_VendingMachine : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6AF9[0x3B8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_VendingMachine* GetDefaultObj();

	void OnVendingMachineScroll(enum class EVendingMachineScrollDirection ScrollDirection);
	void OnVendingMachineDirty();
	void OnBoughtItemFromVendingMachine(enum class EVendingMachineBuyType BuyType, class AActor* InventoryActor);
	bool CanInteractWithVendingMachine();
};

// 0x3A8 (0x418 - 0x70)
// Class OakGame.OakUIDataCollector_Vitals
class UOakUIDataCollector_Vitals : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6B08[0x3A8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Vitals* GetDefaultObj();

	void OnShieldUnequipped();
	void OnShieldEquipped();
	void OnResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue);
	void OnResourcePoolMinMaxChanged(struct FGameResourcePoolReference* ResourcePoolRef, float MinValue, float MaxValue);
	void OnPawnChanged(class AOakCharacter* NewPawn, class AOakCharacter* OldPawn);
	void OnNewResourcePoolAdded(const struct FGameResourcePoolReference& ResourcePoolRef);
	void OnHealthStateChanged(enum class EHealthState HealthState);
};

// 0x80 (0xF0 - 0x70)
// Class OakGame.OakUIDataCollector_VOIP
class UOakUIDataCollector_VOIP : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6B0C[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakGameInstance*                      CachedGameInstance;                                // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6B0D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_VOIP* GetDefaultObj();

};

// 0x160 (0x1D0 - 0x70)
// Class OakGame.OakUIDataCollector_Waypoints
class UOakUIDataCollector_Waypoints : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6B13[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFollowedWaypoint>             FollowedWaypoints;                                 // 0xF0(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FFollowedWaypoint                     CustomWaypoint;                                    // 0x100(0xA0)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AOakPlayerController>   PlayerController;                                  // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AOakMissionTracker>     MissionTracker;                                    // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AZoneMapViewer>         ZoneMapViewer;                                     // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6B15[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          InitTimerHandle;                                   // 0x1C0(0x8)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6B16[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Waypoints* GetDefaultObj();

	void RefreshCachedData();
	void OnCustomWaypointChanged(bool bDisplay, struct FVector& WorldLocation);
};

// 0x248 (0x2B8 - 0x70)
// Class OakGame.OakUIDataCollector_Weapon
class UOakUIDataCollector_Weapon : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6B1A[0x240];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CrosshairActor;                                    // 0x2B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUIDataCollector_Weapon* GetDefaultObj();

	void OnZoomedOut();
	void OnZoomedIn(uint8 InLevel);
	void OnWeaponPutDown(class AWeapon* EventWeapon);
	void OnWeaponEquipped(class AWeapon* EventWeapon);
	void OnModeSwitched();
};

// 0x2E0 (0x350 - 0x70)
// Class OakGame.OakUIDataCollector_XP
class UOakUIDataCollector_XP : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6B21[0x2B8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter_Player*                  PlayerCharacter;                                   // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PrevLevelUpLevel;                                  // 0x330(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6B22[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        PrevXPAmt;                                         // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int64                                        PrevGuardianXPAmt;                                 // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PrevLevelUpLevelGuardian;                          // 0x348(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6B23[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIDataCollector_XP* GetDefaultObj();

	void UpdateStandardXPData();
	void UpdatePrestigeXPData();
	void UpdateData();
	void OnPrestigePointsChanged();
	void OnHeroPointsChanged();
	void OnAbilityPointsChanged(int32 RemainingSkillPoints);
	void LevelUp(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void ExperienceAdded(int32 ExperienceAdded, enum class EPlayerExperienceSource Source, enum class EPlayerExperienceType Type);
};

// 0xB0 (0x478 - 0x3C8)
// Class OakGame.OakUIInputComponent
class UOakUIInputComponent : public UGbxUIInputComponent
{
public:
	uint8                                        Pad_6B25[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIInputComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OakUILibrary
class UOakUILibrary : public UGbxUILibrary
{
public:

	static class UClass* StaticClass();
	static class UOakUILibrary* GetDefaultObj();

	void TriggerFastTravelTutorial(class UGameInstance* GameInstance);
	bool SetGamePaused(class UObject* ContextObject, bool bPause);
	void RemoveTutorialMessageForPlayer(class UGameInstance* GameInstance, class AOakPlayerController* TargetPlayer, class UTutorialMessageDataAsset* MessageData);
	void RemoveTutorialMessageForAllPlayers(class UGameInstance* GameInstance, class UTutorialMessageDataAsset* MessageData);
	void PushMenuForAllPlayers(class UGameInstance* GameInstance, class UGbxMenuData* MenuData);
	TScriptInterface<class IGbxMenu> PushMenu(class AOakPlayerController* PlayerController, class UGbxMenuData* MenuData);
	void PopulateInventoryListFromInventoryList(TArray<struct FOakUIInventoryItemDisplayInfo>* ListToPopulate, class UInventoryListComponent* InventoryList, class UInventoryCategoryData* InventoryFilter);
	void PopulateInventoryListFromCharacter(TArray<struct FOakUIInventoryItemDisplayInfo>* ListToPopulate, class AOakCharacter* OakCharacter, class UInventoryCategoryData* InventoryFilter);
	bool IsGamePaused(class UObject* ContextObject);
	struct FOakUIInventoryItemDisplayInfo GetInventoryDisplayInfoForActor(class AActor* InActor, class UInventoryListComponent* INVENTORY);
	void CloseMenuForAllPlayers(class UGameInstance* GameInstance, class UGbxMenuData* MenuData);
	void CloseAllMenusForAllPlayers(class UGameInstance* GameInstance);
	void AddTutorialMessageForPlayer(class UGameInstance* GameInstance, class AOakPlayerController* TargetPlayer, class UTutorialMessageDataAsset* MessageData);
	void AddTutorialMessageForAllPlayers(class UGameInstance* GameInstance, class UTutorialMessageDataAsset* MessageData);
	void AddSpecialMessageForPlayer(class UGameInstance* GameInstance, class AOakPlayerController* TargetPlayer, class USpecialMessageDataAsset* MessageData);
	void AddModalTutorialMessageForPlayer(class UGameInstance* GameInstance, class AOakPlayerController* TargetPlayer, class UGFxModalTutorialDataAsset* MessageData);
	void AddModalTutorialMessageForAllPlayers(class UGameInstance* GameInstance, class UGFxModalTutorialDataAsset* MessageData);
};

// 0x458 (0x480 - 0x28)
// Class OakGame.OakUIPlayerStandIn
class UOakUIPlayerStandIn : public UObject
{
public:
	uint8                                        Pad_6B50[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStandInUIController                  StandInController;                                 // 0x30(0x430)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AOakPlayerController>   PlayerOwner;                                       // 0x460(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StandInConfiguration;                              // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6B51[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIPlayerStandIn* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.OakUISDUVendorInventoryType
class UOakUISDUVendorInventoryType : public UGbxDataAsset
{
public:
	enum class EInventoryListType                InventoryType;                                     // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6B52[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ItemCardIconFrameName;                             // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakUISDUVendorInventoryType* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class OakGame.SpecialMessageDataAsset
class USpecialMessageDataAsset : public UGbxDataAsset
{
public:
	class FText                                  Header;                                            // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6B56[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpecialMessageDataAsset* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class OakGame.OakUISplitScreenManager
class UOakUISplitScreenManager : public UObject
{
public:
	TArray<struct FGbxUIViewHandle>              CurrentViewHandles;                                // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6B57[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUISplitScreenManager* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class OakGame.OakUISystem
class UOakUISystem : public UGbxUISystem
{
public:
	class UOakThumbnailManager*                  ThumbnailManager;                                  // 0xB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakUISplitScreenManager*              SplitScreenMgr;                                    // 0xB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakUISystem* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class OakGame.TutorialMessageDataAsset
class UTutorialMessageDataAsset : public UGbxDataAsset
{
public:
	class FText                                  Header;                                            // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6B58[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTutorialMessageDataAsset* GetDefaultObj();

};

// 0xB0 (0xD8 - 0x28)
// Class OakGame.OakUIVirtualBackpack
class UOakUIVirtualBackpack : public UObject
{
public:
	uint8                                        Pad_6B5A[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIVirtualBackpack* GetDefaultObj();

	void OnListScrollBarUpdated(float SliderPercentage);
};

// 0x10 (0x710 - 0x700)
// Class OakGame.OakUIVirtualBackpackCell
class UOakUIVirtualBackpackCell : public UGFxInventoryItemWidget
{
public:
	uint8                                        Pad_6B5B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUIVirtualBackpackCell* GetDefaultObj();

};

// 0x8 (0x3E0 - 0x3D8)
// Class OakGame.OakUsableComponent
class UOakUsableComponent : public UUsableComponent
{
public:
	bool                                         bForDisplayOnly;                                   // 0x3D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6B5C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUsableComponent* GetDefaultObj();

};

// 0x50 (0x620 - 0x5D0)
// Class OakGame.OakUseComponent
class UOakUseComponent : public UUseComponent
{
public:
	float                                        PickupInteractionDistance;                         // 0x5D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchPickupInteractDistance;                       // 0x5D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleTouchPickupInteractDistance;                // 0x5D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OvrworldPickupInteractDistance;                    // 0x5DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakInventoryItemPickup*               CurrentlySelectedPickup;                           // 0x5E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPickupEvaluationResult               LastPickupResult;                                  // 0x5E8(0x10)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTouchPickupEvaluationResult          LastTouchPickupResult;                             // 0x5F8(0x10)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6B5F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakUseComponent* GetDefaultObj();

	bool CanRouteInputToCurrentUsable(enum class EUsabilityType Type);
};

// 0x18 (0x478 - 0x460)
// Class OakGame.OakUseTrigger
class AOakUseTrigger : public ATriggerSphere
{
public:
	class UUsableComponent*                      UsableComponent;                                   // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUsedTrigger;                                     // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakUseTrigger* GetDefaultObj();

	void NotifyTriggerUsed(class AController* UsingActor);
};

// 0xE20 (0x1398 - 0x578)
// Class OakGame.OakVehicle
class AOakVehicle : public AVehicle
{
public:
	uint8                                        Pad_6C05[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTargetableComponent*                  TargetableComponent;                               // 0x638(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDamageComponent*                   DamageComponent;                                   // 0x640(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDamageCauserComponent*             DamageCauserComponent;                             // 0x648(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakStatusEffectManagerComponent*      StatusEffectManagerComponent;                      // 0x650(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakMinimapIconComponent*              MinimapIconComponent;                              // 0x658(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameResourcePoolManagerComponent*     ResourcePoolComponent;                             // 0x660(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleSeatComponent*                 PrimarySeatComponent;                              // 0x668(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputComponent>           InputComponentClass;                               // 0x670(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInputComponent>           ClassicModeInputComponentClass;                    // 0x678(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVehicleInputParams>           VehicleInputModes;                                 // 0x680(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UVehicleEffectsComponent*              VehicleEffectsComponent;                           // 0x690(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWheeledVehicleMovementComponent*      WheeledMovementComponent;                          // 0x698(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWheeledVehicleMovementComponentNW*    WheeledMovementComponentNW;                        // 0x6A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleAirControlComponent*           VehicleAirControlComponent;                        // 0x6A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleHoverComponent*                VehicleHoverComponent;                             // 0x6B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleBoostComponent*                BoostComponent;                                    // 0x6B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleDigiThrustComponent*           DigiThrustComponent;                               // 0x6C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehiclePowerSlideComponent*           PowerSlideComponent;                               // 0x6C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActiveWeaponsComponent*               WeaponsComponent;                                  // 0x6D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyWeaponHoldManagerComponent*       BodyWeaponHoldManager;                             // 0x6D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UVehicleSeatComponent*>         SeatComponents;                                    // 0x6E0(0x10)(ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleOccupantLoopingFeedback> LoopingFeedback;                                   // 0x6F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        SpeedometerMaxSpeedToDisplayMPH;                   // 0x700(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkelAndPSCompOptimDistance;                        // 0x704(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableAIUseSlot;                                 // 0x708(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugDrift;                                       // 0x709(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C06[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DriftSocketName;                                   // 0x710(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedToDrift;                                   // 0x718(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftDriftMinAngle;                                 // 0x71C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightDriftMinAngle;                                // 0x720(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C07[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameStatData*                         KillStat;                                          // 0x728(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           RPMCurve;                                          // 0x730(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x738(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RPMCutoffIncreasePerSec;                           // 0x73C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeDriftingToActivateRPMCutoff;                   // 0x740(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBypassAirborneBlendedRPM;                         // 0x744(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C08[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RPMInAirBlendTime;                                 // 0x748(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RPMBlendTime;                                      // 0x74C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RPMTresholdStartBlend;                             // 0x750(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OnBoostEndRPMDecreasePercent;                      // 0x754(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeDrifting;                                      // 0x758(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RPMCutoffAddedValue;                               // 0x75C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                GearShiftingRPMThreshold;                          // 0x760(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnGearShift;                                       // 0x770(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsInReverse;                                      // 0x780(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUpsideDown;                                     // 0x781(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C09[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Speed;                                             // 0x784(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LateralSpeed;                                      // 0x788(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanarSpeed;                                       // 0x78C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AngularVelocityRad;                                // 0x790(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RPM;                                               // 0x79C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendedRPM;                                        // 0x7A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentGear;                                       // 0x7A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Accel;                                             // 0x7A8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDriftingLeft;                                   // 0x7AC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDriftingRight;                                  // 0x7AD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C0A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastFrameSpeed;                                    // 0x7B0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C0B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  VehicleArchetype;                                  // 0x7B8(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVehicleClassIdentifier*               VehicleClassID;                                    // 0x7C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       VehicleWheelInvData;                               // 0x7C8(0x18)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOakVehicleAdditiveData               BaseAdditiveSettings;                              // 0x7E0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SteeringAngleInterpSpeed;                          // 0x808(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SeatMeshOffset;                                    // 0x80C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllow360Shooting;                                 // 0x810(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C0C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  ShieldEquipped;                                    // 0x818(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ShieldUnequipped;                                  // 0x828(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C0D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameResourcePoolReference            Health;                                            // 0x858(0x18)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class EVehicleHealthState               HealthState;                                       // 0x870(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleDeathType                 DeathType;                                         // 0x871(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C0E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LowHealthPercent;                                  // 0x874(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VeryLowHealthPercent;                              // 0x878(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C0F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHealthy;                                         // 0x880(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthLow;                                       // 0x890(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHealthVeryLow;                                   // 0x8A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDead;                                            // 0x8B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bResetCameraAutoLook;                              // 0x8C0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C10[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSpawnByCatchARideChanged;                        // 0x8C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                VehicleSpawnByCatchARideOwner;                     // 0x8D8(0x8)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACatchARidePlatform*                   CatchARidePlatform;                                // 0x8E0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               CatchARideInterface;                               // 0x8E8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C11[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxHUDData*                           HUDInfo;                                           // 0x8F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCausedElementalEffect;                           // 0x900(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ReceivedElementalEffect;                           // 0x910(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  EndedElementalEffect;                              // 0x920(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCausedMaxResourceEffect;                         // 0x930(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ReceivedResourceEffect;                            // 0x940(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               DamageToApplyWhenVehicleIsDead;                    // 0x950(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDigistructOnSpawn;                                // 0x958(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C12[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsVehicleScannable;                               // 0x95A(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMissionVehicle;                                 // 0x95B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C13[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                DigistructInActionClass;                           // 0x960(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                DigistructInCatchARideActionClass;                 // 0x968(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C14[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxUIName*                            UINameOverride;                                    // 0x978(0x8)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction>                DigistructOutActionClass;                          // 0x980(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DigistructTime;                                    // 0x988(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C15[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPrimaryOccupantEnter;                            // 0x9A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPrimaryOccupantExit;                             // 0x9B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ETeamCollisionChannel             VehicleTeamCollisionChannel;                       // 0x9C8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldClearInput;                                 // 0x9C9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C16[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastThrottleInput;                                 // 0x9CC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastLookInputTime;                                 // 0x9D0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWeaponAimAdjustmentAngle;                       // 0x9D4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEBrakePressed;                                   // 0x9D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEBrakeReleased;                                  // 0x9E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFeedbackData*                         EBrakeFeedback;                                    // 0x9F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    EBrakeFeedbackScaleCurve;                          // 0xA00(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        EBrakeFeedbackUpdateFrequency;                     // 0xA78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlippedThreshold;                                  // 0xA7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanBeFlippedOver : 1;                             // Mask: 0x1, PropSize: 0x10xA80(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanEnterWhenFlipped : 1;                          // Mask: 0x2, PropSize: 0x10xA80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEjectOccupantsWhenFlipped : 1;                    // Mask: 0x4, PropSize: 0x10xA80(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_265 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6C17[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlippedEjectionTime;                               // 0xA84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlipOverLiftStrength;                              // 0xA88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlipOverTorqueStrength;                            // 0xA8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlipOverAttemptFrequency;                          // 0xA90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C18[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFlipped;                                         // 0xA98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFlippedTimerExpired;                             // 0xAA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUprighted;                                       // 0xAB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEnterVehicle;                                    // 0xAC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitVehicle;                                     // 0xAD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitVehicleStarted;                              // 0xAE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerEntersVehicle;                             // 0xAF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerHijacksVehicle;                            // 0xB08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerExitsVehicle;                              // 0xB18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnVehicleDestroyWithPlayerIn;                      // 0xB28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  BeforeVehicleDestroyed;                            // 0xB38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C19[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHornStarted;                                     // 0xB58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHornStopped;                                     // 0xB68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UVehicleDrivingDataAsset*              DrivingData;                                       // 0xB78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABoundaryTurret*>               OverlappedBoundaryTurrets;                         // 0xB80(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C1A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWeaponSlotData*>               AdditionalSecondaryWeapons;                        // 0xBB8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UWeaponSlotData*>               AdditionalPrimaryWeapons;                          // 0xBC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C1B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsEBraking;                                       // 0xBD9(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsFlipped;                                        // 0xBDA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C1C[0xF5];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    ShockStunCooldownDuration;                         // 0xCD0(0xC)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C1D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakVehicleBalanceStateComponent*      BalanceStateComponent;                             // 0xCE0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C1E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryNamePartData*                DefaultUIName;                                     // 0xCF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C1F[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAISenseConfig_Sight*                  SightSenseConfig;                                  // 0xD70(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnerComponent*                     SpawnerComponent;                                  // 0xD78(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpawnPointComponent*                  SpawnPointComponent;                               // 0xD80(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AIPathRadius;                                      // 0xD88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AIPathHeight;                                      // 0xD8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AISearchHeight;                                    // 0xD90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AIMaxSpeed;                                        // 0xD94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AIMaxTurnAngle;                                    // 0xD98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C20[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHavokPathFindingData*                 AIPathFindingData;                                 // 0xDA8(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHavokPathFindingData*                 PermissiveAIPathFindingData;                       // 0xDB0(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxNavPathingData                    AIPathingData;                                     // 0xDB8(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxNavPathingData                    PermissiveAIPathingData;                           // 0xDC8(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxNavPathingData                    OverrideAIPathingData;                             // 0xDD8(0x10)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAvoidanceProperties               AvoidanceProperties;                               // 0xDE8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C21[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ENavCorrectionSetting             NavCorrectionSetting;                              // 0xE22(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C22[0x25];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxNavMeshPainterComponent*           NavMeshPainterComponent;                           // 0xE48(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C23[0x11];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanSiege;                                         // 0xE61(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C24[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEnterSiegeMode;                                  // 0xE68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitSiegeMode;                                   // 0xE78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAlwaysHover;                                      // 0xE88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C25[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanDisableDrivingInput;                           // 0xE8A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C26[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEnterDisableDrivingInput;                        // 0xE90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExitDisabledMode;                                // 0xEA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        RevolverWheelRadius;                               // 0xEB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RevolverChassisWidthOffset;                        // 0xEB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RevolverRaycastGroundOffset;                       // 0xEB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDrivingInputDisabled;                           // 0xEBC(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDespawnWhenNoOccupant;                            // 0xEBD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKeepAssociatedToSpawner;                          // 0xEBE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C27[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        VehicleOwners;                                     // 0xEC0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C28[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAIAction>                 DefaultVehicleDriverAction;                        // 0xEE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAIAction>                 DefaultVehicleTurretAction;                        // 0xEF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAIAction>                 DefaultVehiclePassengerAction;                     // 0xEF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C29[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnCostSelection                   SpawnCostSelection;                                // 0xF18(0x18)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bCollisionPreventsActorsFromSpawning;              // 0xF30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C2A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AdditionalGroundOffset;                            // 0xF34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        OwnedChildActors;                                  // 0xF38(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C2B[0x150];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FColor>                        CustomColor;                                       // 0x1098(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C2C[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDroneDoorClosing;                                // 0x1140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDroneDoorOpen;                                   // 0x1150(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C2D[0x130];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHijackProtectionTriggered;                       // 0x1290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               HijackProtectionDamageToApply;                     // 0x12A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C2E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVehicleAudioProviderComponent*        VehicleAudioProvider;                              // 0x12B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C2F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ALargeLiquidBody*>              OverlappingLLBs;                                   // 0x12D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           ZoneMapPOIMesh;                                    // 0x12E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C30[0xA2];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         DigistructingIn;                                   // 0x138A(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C31[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAbilityManagerComponent*           AbilityManagerComponent;                           // 0x1390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakVehicle* GetDefaultObj();

	void VehicleCharacterEvent__DelegateSignature(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void UnlockWorldTravel(class FName Reason);
	void TestTeleportFailSafeLocation();
	void TeleportVehicle(const struct FVector& Location, const struct FRotator& Rotation);
	void StopZooming(bool bForcedStop);
	void StopUsingWeapon(class UWeaponSlotData* Slot, uint8 InputChannel);
	void StopUsingSecondaryWeapons();
	void StopUsingSecondarySeatWeapon();
	void StopUsingPrimaryWeapons(uint8 InputChannel);
	void StopReload(class UWeaponSlotData* Slot);
	void StopHover();
	void StopHornSequence();
	void StopHorn();
	void StopFeedbackOnOccupants(class UFeedbackData* FeedbackData, bool bOnlyLocalPlayers);
	void StopEffects(enum class EVehicleEffectEvent EffectType);
	void StopEBrakeFeedback();
	void StopEBrake(bool bTriggerPowerSlide);
	void StopBoost(bool bForce);
	void StartZooming();
	void StartUsingWeapon(class UWeaponSlotData* Slot, uint8 InputChannel);
	void StartUsingSecondaryWeapons();
	bool StartUsingSecondarySeatWeapon();
	void StartUsingPrimaryWeapons(uint8 InputChannel);
	void StartHover();
	void StartHornSequence(const TArray<struct FHornSequenceEntry>& HornSequenceIn);
	void StartHorn();
	void StartEBrake(bool bTriggerPowerSlide);
	void StartBoost();
	class AOakVehicle* SpawnVehicleFromItemPool(class UObject* WorldContextObject, class UItemPoolData* ItemPoolData, struct FVector& Position, struct FRotator& Rotation);
	void SetVehicleSpawnByCatchARideOwner(class AActor* NewCAROwner);
	void SetVehicleDisable(bool bDisable, bool bEvictOccupant);
	void SetThrottleInput(float Throttle);
	void SetSteeringInput(float Steering);
	void SetNavPainterLayerEnabled(enum class ENavPainterLayer Layer, bool bEnable);
	void SetLockSeatForPlayers(bool bIsSeatLock);
	void SetInSiegeMode(bool bWantedInSiegeMode);
	void SetHoverInput(const struct FVector& WantedInput);
	void SetHijackProtectionEnabled(bool bEnable);
	void SetHandbrake(bool bHandBrake);
	void SetDrivingInputDisabled(bool bDrivingInputDisabled);
	void SetDead(enum class EVehicleDeathType InDeathType);
	void SetBoost(bool bBoosting);
	void SetAirControlInput(float PitchInput, float RollInput);
	void SetAIPathFindingData(class UHavokPathFindingData* PathFindingData);
	void ServerStopEBrake(bool bTriggerPowerSlide);
	void ServerStartEBrake(bool bTriggerPowerSlide);
	void ResetAIPathFindingData();
	void Reload(class UWeaponSlotData* Slot);
	void RegisterSeatComponent(class UVehicleSeatComponent* SeatComponent);
	void ReceiveOnVehicleDestroyWithPlayerIn(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnPlayerHijacksVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnPlayerExitsVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnPlayerEntersVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnExitVehicleStarted(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnExitVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnEnterVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void PlayEffects(enum class EVehicleEffectEvent EffectType);
	void PerformFeedbackOnOccupants(class UFeedbackData* FeedbackData, float Scale, bool bLoop, bool bOnlyLocalPlayers);
	void OnScanningSuccess();
	void OnScanningStarted();
	void OnScanningCancelled();
	void OnRep_VehicleTeamCollisionChannel();
	void OnRep_SpawnByCatchARide();
	void OnRep_Seats();
	void OnRep_IsEBraking();
	void OnRep_HealthState();
	void OnRep_DrivingInputDisabled();
	void OnRep_Color();
	void OnReceivedElementalEffect(class AActor* Receiver, struct FStatusEffectSpec& Spec, enum class EOakElementalType ElementalType);
	void OnPrimaryOccupantLevelChange(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnLanded(float TimeSpentInAir, float LandAngle, int32 NumWheelsOnGround, bool bAllWheelsLanded);
	void OnHijackProtectionTriggeredSignature__DelegateSignature(class AController* Hijacker, class UVehicleSeatComponent* HijackedSeat);
	void OnHealthResourceDepleted(class UDamageComponent* DamageReceiver, class UDamageCauserComponent* DamageCauser);
	void OnGearShifted(int32 Gear, bool bIsUpShifting);
	void OnDriverAttachStateChanged();
	void OnBoostEnd();
	void OnBecameAirborn();
	void OakVehicleHornEvent__DelegateSignature();
	void OakVehicleGearShiftEvent__DelegateSignature(int32 Gear, bool bIsShiftingUp);
	void OakVehicleEvent__DelegateSignature();
	void OakVehicleBoostComponentChangedEvent__DelegateSignature(class UOakVehicleBoostComponent* Current, class UOakVehicleBoostComponent* Previous);
	void LockWorldTravel(class FName Reason);
	void LockAllSeat(bool bLock);
	void K2_OnEBrakeReleased();
	void K2_OnEBrakePressed();
	void K2_InitializeSeats();
	bool IsWorldTravelLocked();
	bool IsVehicleScannable();
	bool IsVehicleOwnedSolelyBy(class AActor* Actor);
	bool IsVehicleOwnedByPlayer();
	bool IsVehicleOwnedBy(class AActor* Actor);
	bool IsVehicleOwned();
	bool IsVehicleOccupant(class APawn* Occupant, bool bIncludeDetaching);
	bool IsPrimarySeatOccupied(bool bIncludeDetaching);
	bool IsPreviewModel();
	bool IsPhysicsDisabled();
	bool IsPartEquipped(TSoftObjectPtr<class UVehiclePartData> PartData);
	bool IsInSiegeMode();
	bool IsInPowerSlideBoost();
	bool IsHovering();
	bool IsEBraking();
	bool IsDrivingInputDisabled();
	bool IsDrifting();
	bool IsDigiThrusting();
	bool IsControllerInVehicle(class AController* ControllerToCheck);
	bool IsBraking();
	bool IsBoosting();
	void InterpolateToGround(float InterpolationSpeed);
	void IgnoreVehicleCollision(class AActor* TargetToIgnore, bool AllChilds);
	bool HasShieldEquipped();
	bool HasPlayerOccupants();
	bool HasOccupants(bool bIncludeDetaching);
	bool HasHealthOfType(class UHealthTypeData* HealthTypeToFind);
	bool HasFriendySeatReserved();
	bool HasAnyDuelingOccupants();
	class AWeapon* GetVehicleWeapon(class UWeaponSlotData* WantedSlot);
	float GetThrottleInput();
	enum class ETeamAttitude GetTeamAttitudeTowardsActor(class AActor* Actor);
	struct FVector GetTargetActorLocation();
	float GetSteeringInput();
	float GetSpeedInMPH();
	float GetSpeedInKPH();
	class AVehicleSeatPawn* GetSecondaryWeaponSeatPawn(bool bMustBeUnoccupied);
	struct FRotator GetSeatWeaponRotation(int32 Slot, bool bWorldSpace);
	class APawn* GetSeatOccupant(int32 SeatSlot, bool bIncludeDetaching);
	int32 GetSeatCountUse();
	int32 GetSeatCount();
	class UVehicleSeatComponent* GetSeatComponent(int32 Slot);
	struct FRotator GetRotationDelta();
	class APawn* GetPrimaryOccupant(bool bIncludeDetaching);
	float GetPlanarSpeedInMPH();
	int32 GetOccupantSeatSlot(class APawn* Occupant, bool bIncludeDetaching);
	class UVehicleSeatComponent* GetOccupantSeat(class APawn* Occupant, bool bIncludeDetaching);
	class UOakDamageComponent* GetOakDamageComponent();
	class AOakAIController* GetOakAIController();
	float GetMass();
	int32 GetLocalPlayer(TArray<class APlayerController*>* Controllers);
	struct FVector GetLastFrameVelocity();
	struct FVector GetGroundAjustement();
	int32 GetGearsCount();
	bool GetFirstHealthInformationByType(class UHealthTypeData* HealthTypeToFind, struct FHealthType* OutHealthType);
	TArray<class UVehicleSeatComponent*> GetAvailableSeatsForPlayers();
	TArray<class APawn*> GetAllOccupants(bool bIncludeDetaching);
	class AWeapon* GetActiveWeapon(uint8 Slot);
	void FlipOver(class AActor* AwayFromActor);
	class UVehicleSeatComponent* FindNearestSeatComponent(class AActor* SearchActor, float MaxDistance, bool bIsHostile, bool bSearchNearestSeat);
	class AOakVehicle* FindAssociatedOakVehicle(class UObject* Object);
	void EnableVehiclePhysics(class FName& Reason);
	void EnableTransitionControl(bool bEnable);
	void EnableDoorTeleportFailSafe(const struct FVector& Offset, float TestDelay);
	void EnableAIUseSlot(bool bEnable);
	void EjectOccupants(bool bKillOccupants, bool bForceResurrectKilledPlayers, bool bInstantKill, bool bFellOutOfWorld, bool bInstantDetach);
	void DisableVehiclePhysics(class FName& Reason);
	void DigistructOutTeleport();
	void DigistructOutEffectOnly();
	void DigistructIn();
	void DebugBraking();
	void DamageReaction_DetachBreakable(struct FDamageReactionEventSummary& Summary);
	void CopyVehicleInertiaTensor();
	void ClientVehicleSpawnedFromCatchARide();
	void ClearNavPainterLayer(enum class ENavPainterLayer Layer);
	void ClearInputWithFilter(enum class EClearInputFilter Filter);
	void ClearAllInput();
	bool CanVehicleBeControlled();
	bool CanHover();
	bool CanDrive();
	bool CanBeFlippedOver(bool bMustBeUnoccupied);
	void BroadcastHornStoppedEvent();
	void BroadcastHornStartedEvent();
	void BlendedRPMAttenuation();
	void BeforeVehicleDestroyedEvent(enum class EVehicleDeathType VehicleDeathType);
	void AddVehicleForce(struct FVector& ForceToAdd, class FName& ForceSource);
	void AddImpulseFromMelee(float ImpulseStrength, float UpRatio, class AController* InstigatedBy);
};

// 0x0 (0x38 - 0x38)
// Class OakGame.OakVehicleAspectData
class UOakVehicleAspectData : public UInventoryAspectData
{
public:

	static class UClass* StaticClass();
	static class UOakVehicleAspectData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.OakVehicleAdditionalWwiseConfigurationEventsAspectData
class UOakVehicleAdditionalWwiseConfigurationEventsAspectData : public UOakVehicleAspectData
{
public:
	TArray<class UWwiseEvent*>                   AdditionalWwiseConfigurationEvents;                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakVehicleAdditionalWwiseConfigurationEventsAspectData* GetDefaultObj();

};

// 0xC0 (0x420 - 0x360)
// Class OakGame.OakVehicleBalanceStateComponent
class UOakVehicleBalanceStateComponent : public UVehicleInventoryBalanceStateComponent
{
public:
	TArray<class UOakVehicleAspectData*>         VehicleAspectList;                                 // 0x360(0x10)(Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C37[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakVehicleBalanceStateComponent* GetDefaultObj();

	void OnShieldsFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldsDepleted(const struct FGameResourcePoolReference& ShieldPool);
	void OnShieldCurrentValueUpdate(struct FGameResourcePoolReference* ResourcePoolReference, float CurrentValue);
	void OnHealthTypeVeryLow(struct FHealthType& HealthType, int32 Index);
	void OnHealthTypeNormal(struct FHealthType& HealthType, int32 Index);
	void OnHealthTypeLow(struct FHealthType& HealthType, int32 Index);
	void OnHealthTypeAdded(struct FHealthType& HealthType, int32 Index);
	void OnBoostStarted();
	void OnBoostFinished();
};

// 0x38 (0x3D0 - 0x398)
// Class OakGame.OakVehicleBoostData
class UOakVehicleBoostData : public UVehicleBoostData
{
public:
	class UFeedbackData*                         StartBoostFeedback;                                // 0x398(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         BoostLoopFeedback;                                 // 0x3A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStatusEffectData*                     BoostStatusEffectData;                             // 0x3A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               BoostDamageData;                                   // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostDamageTickInterval;                           // 0x3B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C38[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DamagePrimCompTag;                                 // 0x3C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               BoostCollisionDamageData;                          // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakVehicleBoostData* GetDefaultObj();

};

// 0x8 (0x220 - 0x218)
// Class OakGame.OakVehicleBoostComponent
class UOakVehicleBoostComponent : public UVehicleBoostComponent
{
public:
	uint8                                        Pad_6C3A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakVehicleBoostComponent* GetDefaultObj();

	void OnDamageCompOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x8 (0x58 - 0x50)
// Class OakGame.OakVehicleContextResolver
class UOakVehicleContextResolver : public UAttributeContextResolver
{
public:
	class FName                                  ComponentTag;                                      // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakVehicleContextResolver* GetDefaultObj();

};

// 0x10 (0x9F8 - 0x9E8)
// Class OakGame.OakVehicleDamageComponent
class UOakVehicleDamageComponent : public UOakDamageComponent
{
public:
	TArray<struct FVehicleOverrideData>          OverrideByParts;                                   // 0x9E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakVehicleDamageComponent* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class OakGame.OakVehicleEffectAspectData
class UOakVehicleEffectAspectData : public UOakVehicleAspectData
{
public:
	TArray<struct FVehicleEffectData>            Effects;                                           // 0x38(0x10)(BlueprintReadOnly, ZeroConstructor, Deprecated, Protected, NativeAccessSpecifierProtected)
	TArray<class UBaseVehicleEffectData*>        EffectsData;                                       // 0x48(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  ComparisonTag;                                     // 0x58(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakVehicleEffectAspectData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.OakVehicleEffectAspectDataCollection
class UOakVehicleEffectAspectDataCollection : public UOakVehicleAspectData
{
public:
	TArray<class UOakVehicleEffectAspectData*>   EffectAspectDataList;                              // 0x38(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakVehicleEffectAspectDataCollection* GetDefaultObj();

};

// 0x0 (0x3A0 - 0x3A0)
// Class OakGame.OakVehicleInputComponent
class UOakVehicleInputComponent : public UGbxInputComponent
{
public:

	static class UClass* StaticClass();
	static class UOakVehicleInputComponent* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class OakGame.OakVehicleManager
class UOakVehicleManager : public UObject
{
public:
	uint8                                        Pad_6C3B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakVehicleManager* GetDefaultObj();

};

// 0x58 (0x110 - 0xB8)
// Class OakGame.OakVehicleMaterialAspectData
class UOakVehicleMaterialAspectData : public UInventoryMaterialAspectData
{
public:
	struct FSkinParameterData                    SkinParameters;                                    // 0xB8(0x30)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     MaterialSoftRef;                                   // 0xE8(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakVehicleMaterialAspectData* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class OakGame.OakVehicleMovementComponentContextResolver
class UOakVehicleMovementComponentContextResolver : public UAttributeContextResolver
{
public:

	static class UClass* StaticClass();
	static class UOakVehicleMovementComponentContextResolver* GetDefaultObj();

};

// 0x8 (0x298 - 0x290)
// Class OakGame.OakVehiclePartData
class UOakVehiclePartData : public UVehiclePartData
{
public:
	class UVehicleClassIdentifier*               VehicleClassID;                                    // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakVehiclePartData* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class OakGame.OakProjectileVehicleData
class UOakProjectileVehicleData : public UGbxDataAsset
{
public:
	class UStaticMesh*                           Mesh;                                              // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageInfo                           DamageInfo;                                        // 0x38(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakProjectileVehicleData* GetDefaultObj();

};

// 0x50 (0x798 - 0x748)
// Class OakGame.OakVehicleProjectile
class AOakVehicleProjectile : public AOakProjectile
{
public:
	float                                        FuseTime;                                          // 0x748(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitOverlapTime;                                   // 0x74C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakVehicle*                           Vehicle;                                           // 0x750(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MeshProjectile;                                    // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxProjectileMovementComponent*       ProjectileMovement;                                // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      ProximityDetector;                                 // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      MainCollision;                                     // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakProjectileVehicleData*             ProjectileData;                                    // 0x778(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C3F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakVehicleProjectile* GetDefaultObj();

	void ProximityDetectorOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void ProximityDetectorHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x8 (0x30 - 0x28)
// Class OakGame.OakVehiclePropertyValueResolver
class UOakVehiclePropertyValueResolver : public UAttributeValueResolver
{
public:
	enum class EVehiclePropertyValueType         ValueToResolve;                                    // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C40[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakVehiclePropertyValueResolver* GetDefaultObj();

};

// 0x150 (0x188 - 0x38)
// Class OakGame.OakVehicleSettings
class UOakVehicleSettings : public UDeveloperSettings
{
public:
	float                                        MaximumAoeDamageDistance;                          // 0x38(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C41[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       DefaultVehicleManufacturer;                        // 0x40(0x18)(Edit, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DefaultVehicleCategory;                            // 0x58(0x18)(Edit, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInventoryManufacturerBalanceData     DefaultVehicleManufacturerData;                    // 0x70(0xB8)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UActorPartData>            DefaultVehiclePartDataClass;                       // 0x128(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UInventoryPartData>> AlwaysUnlockedParts;                               // 0x130(0x10)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FString>                        AlwaysUnlockedDLCParts;                            // 0x140(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UInventoryData>> AlwaysUnlockedVehicles;                            // 0x150(0x10)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FString>                        AlwaysUnlockedDLCVehicles;                         // 0x160(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bAlwaysDestroyOtherCARVehicle;                     // 0x170(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeverDespawnCARVehicle;                           // 0x171(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C42[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        EnumerationSources;                                // 0x178(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakVehicleSettings* GetDefaultObj();

	void EnumerateValidPartAndWheel(TArray<class FString>* PartAndWheels);
	void EnumeratePropertiesByType(class UObject* Data, TArray<class FString>* Properties);
	class FString CleanVehiclePartName(const class FString& Name);
};

// 0x88 (0xC0 - 0x38)
// Class OakGame.OakVehicleShieldAspectData
class UOakVehicleShieldAspectData : public UOakVehicleAspectData
{
public:
	struct FHealthType                           ShieldHealth;                                      // 0x38(0x78)(Edit, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  ComparisonTag;                                     // 0xB0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C43[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakVehicleShieldAspectData* GetDefaultObj();

};

// 0x0 (0x658 - 0x658)
// Class OakGame.OakVehicleSpawner
class AOakVehicleSpawner : public AOakSpawner
{
public:

	static class UClass* StaticClass();
	static class AOakVehicleSpawner* GetDefaultObj();

};

// 0xA8 (0x588 - 0x4E0)
// Class OakGame.OakVehicleSpawnPoint
class AOakVehicleSpawnPoint : public AOakSpawnPoint
{
public:
	UMulticastDelegateProperty_                  OnVehicleSpawned;                                  // 0x4E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDigistructOnSpawn;                                // 0x4F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnAttached;                                    // 0x4F1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowInterpolationToGround;                       // 0x4F2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C44[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                IntroSpline;                                       // 0x4F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IntroSplineOffset;                                 // 0x500(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C45[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAIAction>                 IntroSplineAIAction;                               // 0x508(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                PatrolSpline;                                      // 0x510(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PatrolSplineOffset;                                // 0x518(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPatrolSpline;                                     // 0x51C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C46[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAIAction>                 PatrolSplineAIAction;                              // 0x520(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAIAction>                 ReplaceDefaultAITree;                              // 0x528(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RubberbandWantedSpeed;                             // 0x530(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C47[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRubberbandSpeedData                  RubberbandSpeedData;                               // 0x538(0x40)(Edit, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bApplyRubberbandOnIntro;                           // 0x578(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C48[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakVehicleSpawnPoint* GetDefaultObj();

	void TriggerOnVehicleSpawned(class USpawnPointComponent* SpawnerComponent, class AActor* Actor);
	void PostSpawnIntro(class AActor* Actor);
};

// 0x10 (0x4B0 - 0x4A0)
// Class OakGame.OakVehicleSpeedTriggerBox
class AOakVehicleSpeedTriggerBox : public AOakTriggerBox
{
public:
	float                                        WantedSpeed;                                       // 0x4A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WantedSteering;                                    // 0x4A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMaxSpeed;                                         // 0x4A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseBoost;                                         // 0x4A9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceReverse;                                     // 0x4AA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHandbrake;                                     // 0x4AB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x4AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakVehicleSpeedTriggerBox* GetDefaultObj();

	void VehicleTouched(class AActor* OtherActor, bool bIsPlayer, class UPrimitiveComponent* OptionalTouchedComponent);
};

// 0x60 (0x9B8 - 0x958)
// Class OakGame.OakVehicleWeaponFireProjectileComponent
class UOakVehicleWeaponFireProjectileComponent : public UWeaponFireProjectileComponent
{
public:
	TArray<struct FDummyProjectileInfo>          DummyProjectiles;                                  // 0x958(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        DelayDummyProjectile;                              // 0x968(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C4B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxDataAsset*                         ProjectileData;                                    // 0x970(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AActor>>            ProjectileTypes;                                   // 0x978(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C4C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCurrentProjectileIndexChanged;                   // 0x998(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnDummyProjectileSpawned;                          // 0x9A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakVehicleWeaponFireProjectileComponent* GetDefaultObj();

	void SpawnDummyProjectile(int32 Index);
	void SpawnAllDummyProjectiles();
	void SetCurrentFiredProjectileIndex(int32 NewIndex);
	void PlayDummyProjectileTransitOut(int32 Index, float PlayRate);
	void PlayDummyProjectileTransitIn(int32 Index, float PlayRate);
	void NotifyHiddenDummyProjectile(bool Hidden);
	void HideDummyProjectile();
	class AActor* GetDummyProjectile(int32 Index);
	int32 GetCurrentFiredProjectileIndex();
	int32 CycleCurrentFiredProjectileIndex(int32 Step);
};

// 0x18 (0x9D0 - 0x9B8)
// Class OakGame.OakVehicleWeaponMultiInputFireProjectileComponent
class UOakVehicleWeaponMultiInputFireProjectileComponent : public UOakVehicleWeaponFireProjectileComponent
{
public:
	TSubclassOf<class AActor>                    AltProjectileTemplate;                             // 0x9B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULightProjectileData>      AltLightProjectileData;                            // 0x9C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFiringPattern*                        AltFiringPatternData;                              // 0x9C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakVehicleWeaponMultiInputFireProjectileComponent* GetDefaultObj();

};

// 0x68 (0x960 - 0x8F8)
// Class OakGame.OakWeapon
class AOakWeapon : public AWeapon
{
public:
	uint8                                        Pad_6C52[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        GripPartType;                                      // 0x918(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ForegripPartType;                                  // 0x919(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MagPartType;                                       // 0x91A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ModePartType;                                      // 0x91B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ModeSwitchPartType;                                // 0x91C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BarrelPartType;                                    // 0x91D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BoltPartType;                                      // 0x91E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TriggerPartType;                                   // 0x91F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        HammerPartType;                                    // 0x920(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ScopePartType;                                     // 0x921(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MeleePartType;                                     // 0x922(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CustomAPartType;                                   // 0x923(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CustomBPartType;                                   // 0x924(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        DaffodilBarrelPartType;                            // 0x925(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPistolStock;                                   // 0x926(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponHolsteredSizeType          HolsteredSizeType;                                 // 0x927(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponBalanceStateComponent*          BalanceStateComponent;                             // 0x928(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CenterCrosshairViewModelLocationOffset;            // 0x930(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CenterCrosshairViewModelRotationOffset;            // 0x93C(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        AudioBodyLoopState;                                // 0x948(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ActiveAbilityEffects;                              // 0x949(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C53[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    QuickEquipTime;                                    // 0x950(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EOakElementalStackBucketType      ElementalEffectBucketType;                         // 0x95C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeaponUsingCollision;                             // 0x95D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C54[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakWeapon* GetDefaultObj();

	void UpdateBodyLoopActivity();
	void SetBodyLoopOverrideSwitch(int32 UseModeIdx, class UWwiseSwitch* WwiseSwitch);
	void ReconfigureWeaponAudio(int32 UseModeIdx, const TArray<struct FWeaponConfigurationEvent>& ConfigureEvents, const TArray<struct FWeaponConfigurationRtpc>& ConfigureRtpcs, bool bAdditive);
	void OnRep_UpdateAbilityEffects();
	uint8 GetPartTypeValue(enum class EOakWeaponPartType PartType);
	class UManufacturerData* GetManufacturer();
	void GetAudioPrepareData(int32 UseModeIdx, TArray<class UWwiseEvent*>* OutEvents, TArray<class UWwiseSwitch*>* OutSwitches);
	void CloneAudioConfiguration(class UWwiseAudioComponent* TargetComponent, int32 UseModeIdx);
};

// 0x120 (0x150 - 0x30)
// Class OakGame.OakWeaponVehicleData
class UOakWeaponVehicleData : public UGbxDataAsset
{
public:
	TArray<class UInventoryAspectData*>          AspectList;                                        // 0x30(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SkeletalMesh;                                      // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x48(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeverDistanceCull;                                // 0x54(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMeshUseAttachParentBound;                         // 0x55(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDualWeaponMesh;                                // 0x56(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChildMeshUseAttachParentBound;                    // 0x57(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftParentSocket;                                  // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LeftMeshComponentName;                             // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         LeftSkeletalMesh;                                  // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftScale;                                         // 0x78(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftOffset;                                        // 0x84(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightParentSocket;                                 // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RightMeshComponentName;                            // 0x98(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         RightSkeletalMesh;                                 // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightScale;                                        // 0xB0(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightOffset;                                       // 0xBC(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePhysicAsset;                                   // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C55[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicsAsset*                         PhysicAsset;                                       // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>             AnimClass;                                         // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     ShotAnimation;                                     // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotAnimationBlendInTime;                          // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotAnimationBlendOutTime;                         // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotAnimationPlayRate;                             // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C56[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SlotName;                                          // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>             DualWeaponAnimClass;                               // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     DualWeaponShotAnimation;                           // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponShotAnimationBlendInTime;                // 0x110(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponShotAnimationBlendOutTime;               // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponShotAnimationPlayRate;                   // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C57[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DualWeaponSlotName;                                // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USwfMovie*                             VehicleWeaponsSwf;                                 // 0x128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WeaponFrameName;                                   // 0x130(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSecondaryAction;                            // 0x140(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SecondaryActionUseMode;                            // 0x141(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseIdleVFX;                                       // 0x142(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponEffectType                 IdleVFXType;                                       // 0x143(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseLinkedSlotDualWield;                           // 0x144(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C58[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LinkedSlotSocketName;                              // 0x148(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakWeaponVehicleData* GetDefaultObj();

};

// 0x10 (0x970 - 0x960)
// Class OakGame.OakWeapon_Vehicle
class AOakWeapon_Vehicle : public AOakWeapon
{
public:
	int32                                        PreferredSlotId;                                   // 0x960(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleWeapons                   VehicleWeapon;                                     // 0x964(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C59[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakWeaponVehicleData*                 DataAsset;                                         // 0x968(0x8)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AOakWeapon_Vehicle* GetDefaultObj();

	void OnPawnDetachedFromWeapon(class APawn* Pawn, class AController* Controller);
};

// 0x30 (0x490 - 0x460)
// Class OakGame.OakWeaponAnimInstance
class UOakWeaponAnimInstance : public UWeaponAnimInstance
{
public:
	TArray<class UAnimSequence*>                 GripPoses;                                         // 0x460(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class AOakWeapon*                            OakWeapon;                                         // 0x470(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         GripPose;                                          // 0x478(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         ForegripPose;                                      // 0x480(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C5A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakWeaponAnimInstance* GetDefaultObj();

	void UpdateGripPoses();
};

// 0x10 (0x60 - 0x50)
// Class OakGame.OakWeaponAttributeMultiContextResolver
class UOakWeaponAttributeMultiContextResolver : public UAttributeContextResolver
{
public:
	TArray<class UWeaponSlotData*>               Slots;                                             // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOakWeaponAttributeMultiContextResolver* GetDefaultObj();

};

// 0x1F0 (0x368 - 0x178)
// Class OakGame.OakWeaponAudioProviderBase
class UOakWeaponAudioProviderBase : public UWeaponAudioProviderComponent
{
public:
	uint8                                        Pad_6C5B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           PrimaryConfigurationEvent;                         // 0x180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponFirePlaybackSocket;                          // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WeaponPlaybackOffset;                              // 0x190(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C5C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DefaultAudioPlaybackSocket;                        // 0x1A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultAudioRadius;                                // 0x1A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeaponAudioBodyLoop>          AdditionalBodyLoops;                               // 0x1B0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        BodyLoopPlaybackStates;                            // 0x1C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C5E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           PreFireEvent;                                      // 0x1C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PostFireEvent;                                     // 0x1D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           PostFireMechEvent;                                 // 0x1D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ModeSwitchFailEvent;                               // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           DryFireEvent;                                      // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ChargeStartEvent;                                  // 0x1F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ChargeStopEvent;                                   // 0x1F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeaponConfigurationEvent>     ConfigurationWwiseEvents;                          // 0x200(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponConfigurationRtpc>      ConfigurationRtpcs;                                // 0x210(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFoleyAccessoryComponent*>      AttachedFoleyAccessories;                          // 0x220(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UOakAudioGlobalsData*                  CachedAudioGlobals;                                // 0x230(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UWwiseEvent*>                   AdditionalEventsToPrepare;                         // 0x238(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C5F[0xD8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseAudioComponent*                  CachedDefaultAudioComponent;                       // 0x320(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AWeapon*                               WeaponPrivate;                                     // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter*                         OwningOakCharacter;                                // 0x330(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseSwitch*                          BodyLoopOverrideSwitch;                            // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C60[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWwiseEvent*>                   PreparedEvents;                                    // 0x348(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UWwiseSwitch*>                  PreparedSwitches;                                  // 0x358(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOakWeaponAudioProviderBase* GetDefaultObj();

	void OnDetachWeapon();
	void OnAttachWeapon();
	void NotifyReloadStarted();
	void NotifyReloadEnded();
	void NotifyPutDown();
	void NotifyHidden(bool bIsHidden);
	void NotifyEquipped();
	void ChargeStarted();
	void ChargedStopped();
};

// 0x158 (0x4C0 - 0x368)
// Class OakGame.OakWeaponAudioProviderComponent
class UOakWeaponAudioProviderComponent : public UOakWeaponAudioProviderBase
{
public:
	uint8                                        Pad_6C62[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWantsShellCasingAudio;                            // 0x370(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C63[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponShellCasingAudioParameters     ShellCasingParams;                                 // 0x378(0x10)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           GunshotEvent;                                      // 0x388(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           TargetLockedEvent;                                 // 0x390(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           TargetUnlockedEvent;                               // 0x398(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C64[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponHeatComponent*                  CachedWeaponHeatComp;                              // 0x4B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C65[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakWeaponAudioProviderComponent* GetDefaultObj();

	void OnTargetLockedStateChange(class AWeapon* EventWeapon, bool bLockedOn);
};

// 0x60 (0x3C8 - 0x368)
// Class OakGame.OakBeamWeaponAudioProviderComponent
class UOakBeamWeaponAudioProviderComponent : public UOakWeaponAudioProviderBase
{
public:
	class UWwiseEvent*                           BeamStartEvent;                                    // 0x368(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BeamBreakEvent;                                    // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C66[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakBeamWeaponAudioProviderComponent* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class OakGame.GbxCondition_WeaponPartType
class UGbxCondition_WeaponPartType : public UGbxCondition
{
public:
	enum class EOakWeaponPartType                PartType;                                          // 0x88(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        PartValue;                                         // 0x89(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C67[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGbxCondition_WeaponPartType* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class OakGame.OakWeaponGlobalsData
class UOakWeaponGlobalsData : public UGbxDataAsset
{
public:
	TArray<struct FOakWeaponTriggerFeedbackDefinitionData> TriggerFeedback;                                   // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FOakWeaponTriggerFeedbackDefinitionData> ZoomFeedback;                                      // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FOakVehicleWeaponTriggerFeedbackDefinitionData> VehicleTriggerFeedback;                            // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FWeaponRegisterAttachmentEffectData   AbilityEffects[0x2];                               // 0x60(0xC0)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakWeaponGlobalsData* GetDefaultObj();

};

// 0x60 (0x98 - 0x38)
// Class OakGame.OakWeaponNamingStrategyData
class UOakWeaponNamingStrategyData : public UInventoryNamingStrategyData
{
public:
	TArray<struct FOakWeaponAttributeNamingData> NamingData;                                        // 0x38(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	bool                                         bApplyAsSuffix;                                    // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C68[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakWeaponNamingAttributeThresholdData> NamingAttributeThresholds;                         // 0x50(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FOakWeaponNamingAttributePair> SingleNames;                                       // 0x60(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FOakWeaponNamingAttributePair> DoubleNames;                                       // 0x70(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FOakWeaponNamingAttributePair> CombinationNames;                                  // 0x80(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	enum class EGlobalNamingAttributionSelection UseNamingAttribute;                                // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C69[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakWeaponNamingStrategyData* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class OakGame.WeaponDataTelemetryCommandlet
class UWeaponDataTelemetryCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UWeaponDataTelemetryCommandlet* GetDefaultObj();

};

// 0x50 (0x9C0 - 0x970)
// Class OakGame.OakWeaponVehicleByDataAsset
class AOakWeaponVehicleByDataAsset : public AOakWeapon_Vehicle
{
public:
	class USkeletalMeshComponent*                WeaponMesh3P;                                      // 0x970(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakDamageComponent*                   OakDamage;                                         // 0x978(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                LeftWeaponMesh3P;                                  // 0x980(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                RightWeaponMesh3P;                                 // 0x988(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnSecondaryActionIn;                               // 0x990(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnSecondaryActionOut;                              // 0x9A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AOakVehicle*                           Vehicle;                                           // 0x9B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSecondaryInUse : 1;                             // Mask: 0x1, PropSize: 0x10x9B8(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C6A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakWeaponVehicleByDataAsset* GetDefaultObj();

	void StopIdleEffects();
	void StartIdleEffects();
	void OnRep_SecondaryUse();
	bool IsSecondaryInUse();
};

// 0x118 (0x578 - 0x460)
// Class OakGame.OakWindActor
class AOakWindActor : public AGbxWindActor
{
public:
	float                                        MaxVariationAngleBetweenGusts;                     // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVariationAngle;                                 // 0x464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FNumericRange                         DirectionChangeDuration;                           // 0x468(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FNumericRange                         DelayBetweenGusts;                                 // 0x470(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FNumericRange                         GustBuildupDuration;                               // 0x478(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        GustFalloffDurationPercent;                        // 0x480(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChanceToReGust;                                    // 0x484(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinWindSpeed;                                      // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxWindSpeed;                                      // 0x48C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviewStrength;                                   // 0x490(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseWindSpeed;                                     // 0x494(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseMinGust;                                       // 0x498(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseMaxGust;                                       // 0x49C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseYawJitter;                                     // 0x4A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C6D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationJitterAngle;                               // 0x4A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationJitterFrequency;                           // 0x4A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C6E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialParameterCollection*          UniversalMaterialParameterCollection;              // 0x4B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WindStrength_MaterialParameterName;                // 0x4B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WindSpeed_MaterialParameterName;                   // 0x4C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WindDirection_MaterialParameterName;               // 0x4C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MinGustAmount_MaterialParameterName;               // 0x4D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MaxGustAmount_MaterialParameterName;               // 0x4D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              BaseRotation;                                      // 0x4E0(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRepWindDirection                     RepDirection;                                      // 0x4EC(0x8)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C6F[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRepWindGust                          RepGust;                                           // 0x508(0x4)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C70[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              CurrentWindRotation;                               // 0x528(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        CurrentWindSpeed;                                  // 0x534(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWindVectorField                      VectorField;                                       // 0x538(0x40)(Edit, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakWindActor* GetDefaultObj();

	void OnRep_RepGust();
	void OnRep_RepDirection();
	struct FLinearColor GetWindVectorFieldAtLocation(class UObject* WorldContextObject, const struct FVector& InLocation);
	struct FVector GetWindDirectionAtLocation(class UObject* WorldContextObject, const struct FVector& InLocation, float* Speed);
};

// 0xB8 (0x510 - 0x458)
// Class OakGame.OakWorldAudioProvider
class AOakWorldAudioProvider : public AActor
{
public:
	uint8                                        Pad_6C71[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseAuxBus*                          GlobalEfx;                                         // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WetPercent;                                        // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WetPercentMin;                                     // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverbScaleDistance;                               // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverbTransitionTime;                              // 0x474(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AVolume*                               ReverbBoundingVolume;                              // 0x478(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UWwiseAuxBus*>                  ChildAuxBusses;                                    // 0x480(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UCurveFloat*                           OutdoornessOcclusionStrengthCurve;                 // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           OutdoornessDistanceReverbFactorCurve;              // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ReverbOverDistanceShapeCurve;                      // 0x4A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverbOverDistanceMaxRange;                        // 0x4A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlobalWetnessScaleDB;                              // 0x4AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseAuxBus*                          InteriorShort;                                     // 0x4B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteriorShortDuration;                             // 0x4B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteriorShortWetnessScaleDB;                       // 0x4BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseAuxBus*                          InteriorLong;                                      // 0x4C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteriorLongDuration;                              // 0x4C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteriorLongWetnessScaleDB;                        // 0x4CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseAuxBus*                          OutdoorShort;                                      // 0x4D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutdoorShortDuration;                              // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutdoorShortWetnessScaleDB;                        // 0x4DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseAuxBus*                          OutdoorLong;                                       // 0x4E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutdoorLongDuration;                               // 0x4E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OutdoorLongWetnessScaleDB;                         // 0x4EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakAudioGlobalsData*                  CachedAudioGlobals;                                // 0x4F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C72[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakWorldAudioProvider* GetDefaultObj();

	void PushEffect(class UWwiseAuxBus* Efx);
	void PopEffect(class UWwiseAuxBus* Efx);
};

// 0x10 (0x468 - 0x458)
// Class OakGame.OakWorldDiscoveryArea
class AOakWorldDiscoveryArea : public AActor
{
public:
	uint8                                        Pad_6C73[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDiscoveryAreaComponent*               DiscoveryComponent;                                // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakWorldDiscoveryArea* GetDefaultObj();

};

// 0x20 (0x6A8 - 0x688)
// Class OakGame.OakWorldSettings
class AOakWorldSettings : public AWorldSettings
{
public:
	class URegionData*                           DefaultRegionData;                                 // 0x688(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class URegionData*>                   RegionDataWhiteList;                               // 0x690(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C74[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakWorldSettings* GetDefaultObj();

};

// 0x2B0 (0x580 - 0x2D0)
// Class OakGame.MapIconAnchor
class UMapIconAnchor : public USceneComponent
{
public:
	uint8                                        Pad_6C75[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FZoneMapIconInfo                      IconInfo;                                          // 0x2E0(0x290)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UOakZoneMapIcon*                       AssociatedMapIcon;                                 // 0x570(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C76[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMapIconAnchor* GetDefaultObj();

};

// 0x18 (0x2E0 - 0x2C8)
// Class OakGame.OakZoneMapIcon
class UOakZoneMapIcon : public UGbxGFxButton
{
public:
	class UMapIconAnchor*                        OwningAnchor;                                      // 0x2C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         OwningContainer;                                   // 0x2D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C77[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakZoneMapIcon* GetDefaultObj();

};

// 0x8 (0x2D0 - 0x2C8)
// Class OakGame.OakZoneMapFriendIcon
class UOakZoneMapFriendIcon : public UGbxGFxButton
{
public:
	uint8                                        Pad_6C78[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakZoneMapFriendIcon* GetDefaultObj();

};

// 0xF0 (0x3D0 - 0x2E0)
// Class OakGame.OakZoneMapMissionWaypointIcon
class UOakZoneMapMissionWaypointIcon : public UOakZoneMapIcon
{
public:
	struct FZoneMapMissionWaypointEntry          WaypointEntry;                                     // 0x2E0(0xF0)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOakZoneMapMissionWaypointIcon* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class OakGame.OakZoneMapSettings
class UOakZoneMapSettings : public UDeveloperSettings
{
public:
	TArray<struct FSoftObjectPath>               ZoneMapLists;                                      // 0x38(0x10)(Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       ZoneMapGlobalData;                                 // 0x48(0x18)(Edit, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMiniMapFacePlayerDirection;                       // 0x60(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowLegendariesOnMiniMap;                         // 0x61(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C79[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiniMapPitchAngle;                                 // 0x64(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGenerateFogTexture;                               // 0x68(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6C7A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOakZoneMapSettings* GetDefaultObj();

};

// 0x50 (0x390 - 0x340)
// Class OakGame.OnlineMessageAnimationWidget
class UOnlineMessageAnimationWidget : public UManagedWidget
{
public:
	uint8                                        Pad_6C7B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxRichTextBlock*                     TitleField;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxRichTextBlock*                     PlayerNameField;                                   // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxRichTextBlock*                     DescriptionField;                                  // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                UserPic;                                           // 0x360(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                SpinnerWidget;                                     // 0x368(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       OnlineMessageInputComponent;                       // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OnSpawnAudioEventName;                             // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OnDespawnAudioEventName;                           // 0x380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      SpinnerAnimation;                                  // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOnlineMessageAnimationWidget* GetDefaultObj();

};

// 0xF8 (0x128 - 0x30)
// Class OakGame.OptionDescriptionItem
class UOptionDescriptionItem : public UGbxDataAsset
{
public:
	enum class EOptionType                       OptionType;                                        // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOptionItemType                   OptionItemType;                                    // 0x31(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C7C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  OptionItemName;                                    // 0x38(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  OptionDescriptionTitle;                            // 0x50(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  OptionDescriptionText;                             // 0x68(0x18)(Edit, NativeAccessSpecifierPrivate)
	float                                        SliderMin;                                         // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliderMax;                                         // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliderStep;                                        // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SliderIsInteger;                                   // 0x8C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C7D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          SpinnerOptions;                                    // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         SpinnerWrapEnabled;                                // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C7E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          DropDownOptions;                                   // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  ButtonBindingName;                                 // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakUIOptionBindType              ButtonBindingType;                                 // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanRebindButton;                                  // 0xC4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C7F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AxisScaleVector;                                   // 0xC8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C80[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ButtonBindingSet;                                  // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  BooleanOnText;                                     // 0xE0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BooleanOffText;                                    // 0xF8(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         IsDesktop;                                         // 0x110(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsQuail;                                           // 0x111(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsXboxOne;                                         // 0x112(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AvailableOnNewerXboxes;                            // 0x113(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsXboxSeriesX;                                     // 0x114(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPS4;                                             // 0x115(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AvailableOnNewerPlayStations;                      // 0x116(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPS5;                                             // 0x117(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOnlyAvailableInFrontendForSplitscreen;           // 0x118(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPrimaryPlayerOnly;                               // 0x119(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFrontendOnly;                                    // 0x11A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C81[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            HelperTexture;                                     // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOptionDescriptionItem* GetDefaultObj();

};

// 0x5E8 (0x618 - 0x30)
// Class OakGame.OptionDescriptionData
class UOptionDescriptionData : public UGbxDataAsset
{
public:
	struct FOptionDescriptionOptionTexts         OptionTexts;                                       // 0x30(0x498)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FOakUIOptionScreenTypeInfo>    ScreenTypeInfos;                                   // 0x4C8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakUIOptionTabInfo>           TabInfos;                                          // 0x4D8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        AudioOptionDescription;                            // 0x4E8(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        NetworkOptionDescription;                          // 0x4F8(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        ControlsOptionDescription;                         // 0x508(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        AdvancedControlsOptionDescription;                 // 0x518(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        GameplayOptionDescription;                         // 0x528(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        GraphicsOptionDescription;                         // 0x538(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        GraphicsAdvancedOptionDescription;                 // 0x548(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        GraphicsBenchmarkOptionsDescription;               // 0x558(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        AccessibilityOptionsDescription;                   // 0x568(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        GamepadDescription;                                // 0x578(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UOptionDescriptionItem*>        KeyboardDescription;                               // 0x588(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FOptionDescriptionButtonPreset> GamepadButtonPresets;                              // 0x598(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOptionDescriptionJoystickPreset> GamepadJoystickPresets;                            // 0x5A8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          GamepadJoystickPresetActionsToBind;                // 0x5B8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOptionDescriptionDataUnbindMap> UnbindSets;                                        // 0x5C8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOptionDescriptionGamepadBindingInfo> GamepadButtonsToShowBindingsFor;                   // 0x5D8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOptionDescriptionGamepadActions> GamepadActionsToShow;                              // 0x5E8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FKey>                          KeysThatCannotBeBound;                             // 0x5F8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOptionDescriptionAudioLanguageOption> LanguageOptions;                                   // 0x608(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOptionDescriptionData* GetDefaultObj();

};

// 0x28 (0x7D0 - 0x7A8)
// Class OakGame.OutOfMapWaypointComponent
class UOutOfMapWaypointComponent : public UMissionIconComponent
{
public:
	class UInWorldIconData*                      IconData;                                          // 0x7A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisibleDistanceOverride;                           // 0x7B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HiddenDistanceOverride;                            // 0x7B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UMission>                  MissionClass;                                      // 0x7B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 IconGuid;                                          // 0x7C0(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOutOfMapWaypointComponent* GetDefaultObj();

};

// 0x850 (0x1B40 - 0x12F0)
// Class OakGame.OutrunnerVehicleAnimInstance
class UOutrunnerVehicleAnimInstance : public UOakVehicleAnimInstance
{
public:
	bool                                         bOverrideParentAnimInstance;                       // 0x12F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C82[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BodyCycleFromEngineCycleRatio;                     // 0x12F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleRPM;                                           // 0x12F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineRunningAmplitude;                            // 0x12FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineIdleAmplitude;                               // 0x1300(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MufflerAmplitudeMutliplier;                        // 0x1304(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineRunningFrequency;                            // 0x1308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineIdleFrequency;                               // 0x130C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MufflerFrequencyMutliplier;                        // 0x1310(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C83[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         AnimCharacterEnter;                                // 0x1318(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         AnimCharacterExit;                                 // 0x1320(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         AnimHoodDown;                                      // 0x1328(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         AnimBrakeBounceA;                                  // 0x1330(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         AnimBrakeBounceB;                                  // 0x1338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendBodyAlpha;                                    // 0x1340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendAccelAlpha;                                   // 0x1344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C84[0x7F8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOutrunnerVehicleAnimInstance* GetDefaultObj();

	void OnPrimaryOccupantExit();
	void OnPrimaryOccupantEnter();
};

// 0x0 (0x458 - 0x458)
// Class OakGame.OverworldLoadingMaskActor
class AOverworldLoadingMaskActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AOverworldLoadingMaskActor* GetDefaultObj();

	void FadeOutAndDestroy();
};

// 0x128 (0x580 - 0x458)
// Class OakGame.Overworld
class AOverworld : public AActor
{
public:
	uint8                                        Pad_6C89[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOverworldPauseChanged;                           // 0x488(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C8A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOnOverworld;                                      // 0x4C8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActive;                                           // 0x4C9(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPageLevelStreamingPaused;                         // 0x4CA(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayingEncounter;                                 // 0x4CB(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C8B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               CurrentPauser;                                     // 0x4D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverworldGlobalsData*                 OverworldGlobals;                                  // 0x4D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPenaltyBoxSlot>               PenaltyBoxSlots;                                   // 0x4E0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C8C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOverworldEncounterLoader*             Loader;                                            // 0x4F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationResurrectComponent*      LastOWResurrectStation;                            // 0x500(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationResurrectComponent*      EncounterDestinationStation;                       // 0x508(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AOverworldRespawnLocation*>     RespawnLocations;                                  // 0x510(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TMap<TWeakObjectPtr<class ULevelStreamingOverworldPage>, TWeakObjectPtr<class AActor>> StreamingMaskActors;                               // 0x520(0x50)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C8D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOverworld* GetDefaultObj();

	void SwitchToOverworld(class UDaffodilEncounterRunner* ExitingRunner, enum class ERunnerCompletionStatus CompletionStatus);
	void SwitchPlayerToOverworld(class AOakPlayerController* Player);
	void SetEncounterTransforms(const TArray<struct FTransform>& Transforms);
	void SetEncounterDestination(class UTravelStationResurrectComponent* Destination);
	void SetEncounterBaseActors(const TArray<class ADynamicRoomBase*>& Bases);
	void PlayTransitionActionOnAllPlayers_BP(TSubclassOf<class UGbxAction> Action, UDelegateProperty_ OnCompleteDelegate);
	void OverworldTransitionActionsComplete__DelegateSignature();
	void OnRep_OnOverworld();
	void OnOverworldPauseChanged__DelegateSignature(bool bPaused);
	void MovePlayerCharToPenaltyBox(class AOakPlayerController* Player);
	bool IsPlayingOverworldEncounter(class UObject* WorldContextObject);
	bool IsPlayingOverworld(class UObject* WorldContextObject);
	bool IsPaused();
	TArray<class AOakCharacter*> GetOverworldPawnList();
	class UOverworldEncounterLoader* GetOverworldLoader(class UObject* WorldContextObject);
	class AOverworld* GetOverworld(class UObject* WorldContextObject, bool bCreateIfNotFound);
	void ExitOverworld();
	void ExitEncounter(class UStreamingEncounterBase* Encounter);
	void ConfigurePenaltyBox(const TArray<struct FVector>& Locations);
	void CloseMissionGiverMenus();
};

// 0x10 (0x700 - 0x6F0)
// Class OakGame.OverworldCollisionComponent
class UOverworldCollisionComponent : public UPrimitiveComponent
{
public:
	class UOverworldCollisionData*               CollisionSource;                                   // 0x6F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C8E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOverworldCollisionComponent* GetDefaultObj();

};

// 0xC8 (0xF0 - 0x28)
// Class OakGame.OverworldCollisionData
class UOverworldCollisionData : public UObject
{
public:
	uint8                                        Pad_6C8F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bGenerateMirroredCollision;                        // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoubleSidedGeometry;                              // 0x31(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C90[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBoxSphereBounds                      Bounds;                                            // 0x34(0x1C)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                CompressedVertData;                                // 0x50(0x10)(ZeroConstructor, Transient, NonTransactional, NativeAccessSpecifierPrivate)
	int32                                        CompressedVertCount;                               // 0x60(0x4)(ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C91[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                CompressedTriData;                                 // 0x68(0x10)(ZeroConstructor, Transient, NonTransactional, NativeAccessSpecifierPrivate)
	int32                                        CompressedTriCount;                                // 0x78(0x4)(ZeroConstructor, Transient, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C92[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FKAggregateGeom                       AggregateGeom;                                     // 0x80(0x68)(Transient, NonTransactional, NativeAccessSpecifierPrivate)
	class UBodySetup*                            BodySetup;                                         // 0xE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOverworldCollisionData* GetDefaultObj();

};

// 0x20 (0x478 - 0x458)
// Class OakGame.OverworldCollisionShell
class AOverworldCollisionShell : public AActor
{
public:
	TArray<class UOverworldCollisionData*>       CollisionDataContainers;                           // 0x458(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class UOverworldCollisionComponent*>  CollisionComponents;                               // 0x468(0x10)(Edit, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOverworldCollisionShell* GetDefaultObj();

};

// 0x20 (0x2F0 - 0x2D0)
// Class OakGame.OverworldEdgeComponent
class UOverworldEdgeComponent : public USceneComponent
{
public:
	bool                                         bEnclosed;                                         // 0x2D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C93[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Order;                                             // 0x2D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOverworldEdgePoint>           Points;                                            // 0x2D8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C94[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOverworldEdgeComponent* GetDefaultObj();

};

// 0x8 (0x460 - 0x458)
// Class OakGame.OverworldEdgeSection
class AOverworldEdgeSection : public AActor
{
public:
	class UOverworldEdgeComponent*               OverworldEdgeComponent;                            // 0x458(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOverworldEdgeSection* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class OakGame.OverworldEncounterLoader
class UOverworldEncounterLoader : public UObject
{
public:
	uint8                                        Pad_6C97[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOverworldEncounterRequestData> EncounterRequests;                                 // 0x30(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class ADynamicRoomBase*>              FreeBases;                                         // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C98[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOverworldEncounterLoader* GetDefaultObj();

	void UpdateWorldEncounterRequest(struct FOverworldEncounterRequest& Request, bool bActive);
	void UnpinRequestedEncounter(const struct FOverworldEncounterRequest& Request);
	void PinRequestedEncounter(const struct FOverworldEncounterRequest& Request, UDelegateProperty_ OnReady);
	void DestroyWorldEncounterRequest(struct FOverworldEncounterRequest& Request);
	struct FOverworldEncounterRequest CreateEncounterRequest(class UStreamingEncounterDataBase* EncounterData, bool bHighPriority, bool bActivate, class UDaffodilEncounterRunner* Runner);
	void CleanUpRequestEncounter(const struct FOverworldEncounterRequest& Request);
};

// 0x278 (0x2A8 - 0x30)
// Class OakGame.OverworldGlobalsData
class UOverworldGlobalsData : public UGbxDataAsset
{
public:
	TMap<class FName, class UDataTable*>         ModeDataTables;                                    // 0x30(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EOverworldRepresentationType, TSoftClassPtr<class AOverworldRepresentation>> OverworldRepresentationClasses;                    // 0x80(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UEncounterRoomData>, TSubclassOf<class UDaffodilEncounterData>> RoomEncounterClasses;                              // 0xD0(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UEnvQuery*                             RandomEncounterLocationEnvQuery;                   // 0x120(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                             TotalPointsNeededKillAllThreeWaves_RandomEncounterParam; // 0x128(0x80)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             TotalPointsNeededKillAllThreeWaves_MiniDungeon;    // 0x1A8(0x80)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        TotalPointsNeededKillAllThreeWaves_RandomEncounter; // 0x228(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C99[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTravelStationData*                    EncounterTravelStationData;                        // 0x230(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    StreamingMaskActorClass;                           // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnOptionData*                      ScriptedRandomEncounterSpawnOption;                // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FConditionalExtraPreloadLocation> ConditionalPreloadLocations;                       // 0x248(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                TransitionFadeOutAction;                           // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                TransitionFadeInAction;                            // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                TransitionREFadeOutAction;                         // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                TransitionREFadeInAction;                          // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCinematicModeData*                    TransitionCinematicMode;                           // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakCharacter_Overworld>   OverworldCharacterClass;                           // 0x280(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NeutralZoneSpeed;                                  // 0x288(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedBoostDuration;                                // 0x28C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OverworldCameraMode;                               // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTeam>                  DefaultPlayerTeam;                                 // 0x298(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTeam>                  NeutralPlayerTeam;                                 // 0x2A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOverworldGlobalsData* GetDefaultObj();

};

// 0x20 (0x478 - 0x458)
// Class OakGame.OverworldLevelInfo
class AOverworldLevelInfo : public AInfo
{
public:
	float                                        SectionSize;                                       // 0x458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C9A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PageLevelFolder;                                   // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PageFileFolder;                                    // 0x468(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOverworldLevelInfo* GetDefaultObj();

};

// 0x20 (0x478 - 0x458)
// Class OakGame.OverworldNeutralSpline
class AOverworldNeutralSpline : public AActor
{
public:
	float                                        Width;                                             // 0x458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C9B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      Spline;                                            // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AOverworldNeutralZone*>         Volumes;                                           // 0x468(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOverworldNeutralSpline* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class OakGame.OverworldNeutralZone
class AOverworldNeutralZone : public AOakTriggerVolume
{
public:
	bool                                         bIsSelectable;                                     // 0x4C8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C9C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOverworldNeutralZone* GetDefaultObj();

};

// 0x18 (0x470 - 0x458)
// Class OakGame.OverworldRepresentation
class AOverworldRepresentation : public AActor
{
public:
	class UOverworldRepresentedEncounter*        OwningEncounter;                                   // 0x458(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEncounterContext_Overworld*           OWContext;                                         // 0x460(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URandomEncounterAreaComponent*         Area;                                              // 0x468(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOverworldRepresentation* GetDefaultObj();

	void ReadyToStart();
	void NotifyActorDespawned(TScriptInterface<class IOverworldRepresentationActorInterface> Actor);
	void CaughtPlayer();
};

// 0x0 (0x470 - 0x470)
// Class OakGame.OverworldRepresentation_StaticActor
class AOverworldRepresentation_StaticActor : public AOverworldRepresentation
{
public:

	static class UClass* StaticClass();
	static class AOverworldRepresentation_StaticActor* GetDefaultObj();

};

// 0x10 (0x480 - 0x470)
// Class OakGame.OverworldRepresentation_AI
class AOverworldRepresentation_AI : public AOverworldRepresentation
{
public:
	class USpawnOptionData*                      SpawnOptions;                                      // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedActor;                                      // 0x478(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOverworldRepresentation_AI* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.OverworldRepresentationActorInterface
class IOverworldRepresentationActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IOverworldRepresentationActorInterface* GetDefaultObj();

	void SetOverworldRepresentationOwner(class AOverworldRepresentation* RepresentationOwner);
	class AOverworldRepresentation* GetOverworldRepresentationOwner();
	void ForceGiveUp();
};

// 0x40 (0x498 - 0x458)
// Class OakGame.OverworldRespawnLocation
class AOverworldRespawnLocation : public AActor
{
public:
	class UMissionEnableCondition*               EnableCondition;                                   // 0x458(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x460(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C9D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCapsuleComponent*                     CapsuleComponent;                                  // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LocationOffset[0x3];                               // 0x470(0x24)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6C9E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOverworldRespawnLocation* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class OakGame.OverworldSafeZone
class AOverworldSafeZone : public AOakTriggerVolume
{
public:

	static class UClass* StaticClass();
	static class AOverworldSafeZone* GetDefaultObj();

};

// 0x40 (0x1B8 - 0x178)
// Class OakGame.OWLocationHelperComponent
class UOWLocationHelperComponent : public UActorComponent
{
public:
	class UEncounterPlaylistRunner*              Runner;                                            // 0x178(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6C9F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEncountersStarting;                              // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncountersFinished;                              // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class URegionData*                           OverrideRegion;                                    // 0x1A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CA0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOWLocationHelperComponent* GetDefaultObj();

	void WantEncounters(bool bWant);
	void StartEncounters(class AController* InstigatorController);
	void SetPlaylist(class UEncounterPlaylist* Playlist);
	void OnEncounterHelperStarting__DelegateSignature(bool bStarting);
	void OnEncounterHelperFinished__DelegateSignature(bool bCancelled, bool bWon);
	bool IsPendingEncounterFullyInstalled();
};

// 0x0 (0x88 - 0x88)
// Class OakGame.OakCondition_CanStartOverworldEncounter
class UOakCondition_CanStartOverworldEncounter : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UOakCondition_CanStartOverworldEncounter* GetDefaultObj();

};

// 0x30 (0x488 - 0x458)
// Class OakGame.OwnedActionAbilityActor
class AOwnedActionAbilityActor : public AActor
{
public:
	uint8                                        Pad_6CA1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bBlocksActionAbilityShutdown;                      // 0x460(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CA2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakActionAbility*                     OwnerActionAbility;                                // 0x468(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  OwnerPlayer;                                       // 0x470(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShuttingDown;                                   // 0x478(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CA3[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOwnedActionAbilityActor* GetDefaultObj();

	void ReleaseFromActionAbility();
	void OnShutdownRequested(bool bForced);
	void OnRep_IsShuttingDown();
	float GetMaxTime();
};

// 0x10 (0x48 - 0x38)
// Class OakGame.ParticleModuleLocationProceduralMeshSurface
class UParticleModuleLocationProceduralMeshSurface : public UParticleModuleLocationBase
{
public:
	class FName                                  ProceduralMeshActorName;                           // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ProceduralMeshComponentName;                       // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UParticleModuleLocationProceduralMeshSurface* GetDefaultObj();

};

// 0x8 (0x1E0 - 0x1D8)
// Class OakGame.PassthroughBalanceStateComponent
class UPassthroughBalanceStateComponent : public UBalanceStateComponent
{
public:
	TWeakObjectPtr<class UBalanceStateComponent> PassthroughTarget;                                 // 0x1D8(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPassthroughBalanceStateComponent* GetDefaultObj();

	void OnPassthroughTargetLevelChanged(int32 OldLevel, int32 NewLevel);
};

// 0x1B0 (0x1E0 - 0x30)
// Class OakGame.PatchExpansionData
class UPatchExpansionData : public UGbxDataAsset
{
public:
	class URegionManagerData*                    RegionManagerData;                                 // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UChallengeList*>                ChallengeLists;                                    // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UGameStatList*>                 GameStatLists;                                     // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UGameStatData*> KillStatMap;                                       // 0x58(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UOakLoadingScreenExpansionData*        LoadingScreenData;                                 // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMayhemOverrideDataAsset*>      MayhemModeTwoData;                                 // 0xB0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UMission>                InitialMission;                                    // 0xC0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UMission>>        MissionsWithoutMissionGraph;                       // 0xE8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UOakStreamingInteractionEvent*> AdditionalStreamingEvents;                         // 0xF8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FString>                        BadassEventBlackListedStrings;                     // 0x108(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                        BadassEventBlackListedNameStrings;                 // 0x118(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                        RareChestLootDefsStrings;                          // 0x128(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	class UZoneMapListData*                      ZoneMapList;                                       // 0x138(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLevelTravelDataListStationPatch> LevelTravelDataLists;                              // 0x140(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UChallengeCategoryData*>        ProgressChallengeCategories;                       // 0x150(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FChallengeFilterType>          AvailableZoneChallengeFilters;                     // 0x160(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FChallengeFilterType>          AvailableGalaxyChallengeFilters;                   // 0x170(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UAdditionalZoneMapData*>        ZoneMapAdditions;                                  // 0x180(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UZoneMapPOITypeData*>           POIDynamicTypeAdditions;                           // 0x190(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UVaultCardGeneralData*                 GlobalVaultCardData;                               // 0x1A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             EnvironmentEncounterTable;                         // 0x1A8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakMapPatchData>              MapPatches;                                        // 0x1D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPatchExpansionData* GetDefaultObj();

};

// 0x10 (0x478 - 0x468)
// Class OakGame.PerceptiveActiveAmbientSound
class APerceptiveActiveAmbientSound : public AActiveAmbientSound
{
public:
	class UAIPerceptionComponent*                AIPerception;                                      // 0x468(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartleRadius;                                     // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CA4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APerceptiveActiveAmbientSound* GetDefaultObj();

	void OnTargetPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus);
};

// 0x8 (0x38 - 0x30)
// Class OakGame.PerformanceEchoData
class UPerformanceEchoData : public UPerformanceEchoDataBase
{
public:
	enum class EEchoPerformanceMode              Mode;                                              // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoPortrait;                                       // 0x31(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CA5[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPerformanceEchoData* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class OakGame.PerPlayerActorCullingManager
class UPerPlayerActorCullingManager : public UObject
{
public:
	uint8                                        Pad_6CA6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPerPlayerCullable>            AllCullables;                                      // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPerPlayerActorCullingManager* GetDefaultObj();

};

// 0xE0 (0x258 - 0x178)
// Class OakGame.PetOwnerComponent
class UPetOwnerComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnPetSpawnFailed;                                  // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPetReleased;                                     // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPetDespawned;                                    // 0x198(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  K2_OnPetSpawned;                                   // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FPetInfo>                      PetInfo;                                           // 0x1B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FPetStencilData                       OwnedPetStencilData;                               // 0x1C8(0x14)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPetStencilData                       UnownedPetStencilData;                             // 0x1DC(0x14)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    PetAggressionCooldown;                             // 0x1F0(0xC)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CAC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TWeakObjectPtr<class AActor>, float>    PetThreats;                                        // 0x200(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CAD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPetOwnerComponent* GetDefaultObj();

	void SetupPetOutline(class AActor* PetActor);
	void OnRep_PetInfo();
	void OnPlayerLevelUp(int32 OldExperienceLevel, int32 NewExperieneLevel);
	void OnPlayerDied();
	void OnPlayerAlert(class AActor* TargetActor, const struct FVector& TargetLocation, class AOakPlayerController* AlertInstigator);
	void OnPetTakeAnyDamage(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void OnPetSpawned(class AActor* SpawnedActor, struct FTransform& SpawnTransform, int32 SomeInt);
	void OnPetDied();
	void OnPetDestroyed(class AActor* DestroyedActor);
	void OnPawnAttachSlotStarted(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCinematicModeChanged(class UCinematicModeData* CinematicMode);
	void NotifyWorldTravel(bool bIsServer);
	bool IsPetAggressive();
	bool HasLivingPet();
	bool HasActivePet();
	struct FGameResourcePoolReference GetRespawnPoolByActor(class AActor* PetActor);
	class AActor* GetFirstActivePet();
	bool GetAllActivePets(TArray<class AActor*>* OutActors);
	void DoNotAllowPetSpawning(bool bAllowPets);
	void DeactivatePet(TSubclassOf<class AActor> PetClass);
	void AddPetThreat(class AActor* ThreatActor);
	void ActivatePet(TSubclassOf<class AActor> PetClass);
};

// 0x10 (0xB00 - 0xAF0)
// Class OakGame.PetSpiderantAnimInstance
class UPetSpiderantAnimInstance : public UOakCharacterAnimInstance
{
public:
	float                                        RollSprintSpeedStart;                              // 0xAF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStartRollSprint;                                  // 0xAF4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CAE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RollSprintSpeedStop;                               // 0xAF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStopRollSprint;                                   // 0xAFC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CAF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPetSpiderantAnimInstance* GetDefaultObj();

};

// 0x18 (0x308 - 0x2F0)
// Class OakGame.PhotoModeAdjustmentsWidget
class UPhotoModeAdjustmentsWidget : public UGbxUmgMenu
{
public:
	uint8                                        Pad_6CB1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APhotoModeController*                  PhotoModeController;                               // 0x2F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhotoModeGlobals*                     PhotoModeGlobals;                                  // 0x300(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPhotoModeAdjustmentsWidget* GetDefaultObj();

	void OnVignetteIntensityChanged(float NewVignetteIntensity);
	void OnVignetteFeatheringChanged(float NewVignetteFeathering);
	void OnViewRollChanged(float NewViewRoll);
	void OnToeChanged(float NewToe);
	void OnTimeOfDayChanged(float NewTimeOfDay);
	void OnSuperSharpModeStateChanged(bool bNewSuperSharpModeState);
	void OnSlopeChanged(float NewSlope);
	void OnShoulderChanged(float NewShoulder);
	void OnSaturationChanged(float NewSaturation);
	void OnQualityChanged(float NewQuality);
	void OnPhotoModeUIVisiblityChanged(bool bNewVisibleState);
	void OnOverrideFocusStateChanged(bool bNewOverrideFocusState);
	void OnHUDVisibilityChanged(bool bNewVisibleState);
	void OnHidePlayerStateChanged(bool bNewHidePlayerState);
	void OnHideDamageNumbersStateChanged(bool bNewHideDamageNumbersState);
	void OnGrainIntensityChanged(float NewGrainIntensity);
	void OnGammaChanged(float NewGamma);
	void OnGamePausedStateChangeRequested();
	void OnGainChanged(float NewGain);
	void OnFringeIntensityChanged(float NewFringeIntensity);
	void OnFOVChanged(float NewFOV);
	void OnFocalRegionChanged(float NewFocalRegion);
	void OnFocalDistanceChanged(float NewFocalDistance);
	void OnFilterIntensityChanged(float NewFilterIntensity);
	void OnFilterIndexChanged(int32 NewFilterIndex);
	void OnFilmToneMapperStateChanged(bool bNewFileToneMapperState);
	void OnExitPhotoModeRequested();
	void OnExitPhotoMode(class AOakCharacter_Player* Player, class AOakPlayerController* PlayerController);
	void OnEnterPhotoMode(class AOakCharacter_Player* Player, class AOakPlayerController* PlayerController);
	void OnDOFIntensityChanged(float NewDOFIntensity);
	void OnContrastChanged(float NewConstrast);
	void OnAutoFocusStateChanged(bool bNewFocusState);
	void HandleGameSoloPlayStateChanged(bool bSoloPlay);
	void HandleGamePauseStateChanged(bool bNewPauseState);
	float ConvertSliderViewRollToGameViewRoll(float SliderValue);
	float ConvertSliderTimeToGameTime(float SliderValue);
	float ConvertSliderSaturationToGameSaturation(float SliderValue);
	float ConvertSliderQualityToGameQuality(float SliderValue);
	float ConvertSliderGammaToGameGamma(float SliderValue);
	float ConvertSliderGainToGameGain(float SliderValue);
	float ConvertSliderFringeIntensityToGameFringeIntensity(float SliderValue);
	float ConvertSliderFOVToGameFOV(float SliderValue);
	float ConvertSliderFocalRegionToGameFocalRegion(float SliderValue);
	float ConvertSliderFocalDistanceToGameFocalDistance(float SliderValue);
	float ConvertSliderDOFIntensityToGameDOFIntensity(float SliderValue);
	float ConvertSliderContrastToGameContrast(float SliderValue);
	void ConvertMinutesToHourMinutesString(int32 Minutes, class FString* OutTimeString);
	float ConvertGameViewRollToSliderViewRoll();
	float ConvertGameSaturationToSliderSaturation();
	float ConvertGameQualityToSliderQuality();
	float ConvertGameGammaToSliderGamma();
	float ConvertGameGainToSliderGain();
	float ConvertGameFringeIntensityToSliderFringeIntensity();
	float ConvertGameFOVToSliderFOV();
	float ConvertGameFocalRegionToSliderFocalRegion();
	float ConvertGameFocalDistanceToSliderGain();
	float ConvertGameDOFIntensityToSliderDOFIntensity();
	float ConvertGameContrastToSliderContrast();
	enum class ECheckBoxState ConvertBoolToCheckBoxState(bool bBooleanState);
};

// 0x1318 (0x1770 - 0x458)
// Class OakGame.PhotoModeController
class APhotoModeController : public AActor
{
public:
	class UPostProcessComponent*                 PostProcessComponent;                              // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakCharacter_Player*                  PhotoPawn;                                         // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakPlayerController*                  PhotoController;                                   // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CB2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IPhotoModeViewInterface> PhotoModeView;                                     // 0x480(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                         bPhotoModeActive;                                  // 0x490(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CB3[0xC5F];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPhotoModeState                       PhotoModeState;                                    // 0x10F0(0x670)(NativeAccessSpecifierPrivate)
	class UGameStatData*                         StylizeStat;                                       // 0x1760(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CB4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APhotoModeController* GetDefaultObj();

	void TakeScreenshot();
	void SetVignetteIntensity(float Vignetteintensity);
	void SetVignetteFeathering(float Vignettefeathering);
	void SetViewRoll(float ViewRoll);
	void SetToe(float Toe);
	void SetTimeOfDay(float Timeofday);
	void SetSuperSharpModeState(bool bEnable);
	void SetSlope(float Slope);
	void SetShoulder(float Shoulder);
	void SetSaturation(float SaturationSlider);
	void SetQuality(float Quality);
	void SetPhotoModeUIVisibility(bool bVisible);
	void SetOverrideFocusState(bool bOverrideFocusState);
	void SetHUDVisibilityChanged(bool bVisible);
	void SetHidePlayerState(bool bHidePlayerState);
	void SetHideDamageNumbersState(bool bHideDamageNumbersState);
	void SetGrainIntensity(float GrainIntensity);
	void SetGamma(float Gamma);
	void SetGamePausedState(bool bPaused);
	void SetGain(float Gain);
	void SetFringeIntensity(float FringeIntensity);
	void SetFOV(float FOV);
	void SetFocalRegion(float FocalRegion);
	void SetFocalDistance(float FocalDistance);
	void SetFilterIntensity(float Filterintensity);
	void SetFilterIndex(int32 FilterIndex);
	void SetFilmToneMapperState(bool bEnable);
	void SetDOFIntensity(float Dofintensity);
	void SetContrast(float ConstrastSlider);
	void SetAutoFocusState(bool bEnable);
	void ResetAllSettings();
	void OnNumPlayersChanged(int32 NewNumPlayers);
	void OnExitPhotoMode();
	void OnEnterPhotoMode();
	bool IsPhotoModeActive();
	bool IsCinematicPhoto();
	float GetVignetteIntensity();
	float GetVignetteFeathering();
	float GetViewRoll();
	float GetToe();
	float GetTimeOfDay();
	bool GetSuperSharpModeState();
	float GetSlope();
	float GetShoulder();
	float GetSaturation();
	float GetQuality();
	bool GetPhotoModeUIVisibility();
	struct FPhotoModeState GetPhotoModeState();
	bool GetOverrideFocusState();
	bool GetHUDVisibility();
	bool GetHidePlayerState();
	bool GetHideDamageNumbersState();
	float GetGrainIntensity();
	float GetGamma();
	bool GetGamePausedState();
	float GetGain();
	float GetFringeIntensity();
	float GetFOV();
	float GetFocalRegion();
	float GetFocalDistance();
	float GetFilterIntensity();
	int32 GetFilterIndex();
	bool GetFilmToneMapperState();
	float GetDOFIntensity();
	float GetContrast();
	bool GetAutoFocusState();
	void DeactivateSlomo();
	void ActivateSlomo();
};

// 0xB8 (0xE8 - 0x30)
// Class OakGame.PhotoModeGlobals
class UPhotoModeGlobals : public UGbxDataAsset
{
public:
	TSubclassOf<class APhotoModeController>      PhotoModeControllerType;                           // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPhotoModeOptionSet>           PhotoModeOptions;                                  // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MinFOV;                                            // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFOV;                                            // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDOFIntensity;                                   // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDOFIntensity;                                   // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFocalDistance;                                  // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFocalDistance;                                  // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFocalRegion;                                    // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFocalRegion;                                    // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinContrast;                                       // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxContrast;                                       // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSaturation;                                     // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSaturation;                                     // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinGamma;                                          // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxGamma;                                          // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinGain;                                           // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxGain;                                           // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinQuality;                                        // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxQuality;                                        // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRoll;                                           // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRoll;                                           // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraModeBlendInTime;                             // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraModeBlendOutTime;                            // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraForwardBackScale;                            // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraForwardBackClamp;                            // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraLeftRightScale;                              // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraLeftRightClamp;                              // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraUpDownScale;                                 // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraUpDownClamp;                                 // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraDeadZone;                                    // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraInputPitchScale;                             // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraInputYawScale;                               // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFringeIntensity;                                // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFringeIntensity;                                // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CB5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTexture*>                      FilterList;                                        // 0xD0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGameStatData*                         StylizeStat;                                       // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPhotoModeGlobals* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.PhotoModeViewInterface
class IPhotoModeViewInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPhotoModeViewInterface* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.PIEBenchmarkManager
class UPIEBenchmarkManager : public UObject
{
public:
	uint8                                        Pad_6CB6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPIEBenchmarkManager* GetDefaultObj();

};

// 0xA8 (0x130 - 0x88)
// Class OakGame.PlanetData
class UPlanetData : public ULevelGroupData
{
public:
	struct FSoftObjectPath                       PlanetMeshDataReference;                           // 0x88(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        PlanetClassReference;                              // 0xA0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CBB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            GalaxyMapTransform;                                // 0xC0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsTrialPlanetoid;                                 // 0xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoPlanetDisplay;                                  // 0xF1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotAvailableForHyperspaceTravel;                  // 0xF2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CBC[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ConceptArtToDisplay;                               // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ConceptArtAssetToDisplay;                          // 0x100(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CBD[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlanetData* GetDefaultObj();

	bool ShouldHighlight(class UObject* WorldContextObject);
	void OnPlanetMeshDataLoaded();
	void OnPlanetClassLoaded();
	class UZoneMapData* GetZoneMapForTrackedMission(class UObject* WorldContextObject);
	void GetWorldDiscoveryAreaCounts(class AOakPlayerController* ViewingPlayer, int32* TotalWorldDiscoveryAreas, int32* FoundWorldDiscoveryAreas, class UPatchExpansionData* InAssociatedPatch, class UDownloadableContentData* InAssociatedDLC);
	void GetWorldChallengeCounts(class AOakPlayerController* ViewingPlayer, class UChallengeCategoryData* ChallengeCategory, int32* TotalCount, int32* CompletedCount);
	bool GetPlanetZoneMaps(class AOakPlayerController* PlayerController, class UPlanetData* Planet, TArray<class UZoneMapData*>* OutZoneMaps, bool FindOnlyDiscovered, bool FindOnlyLicensed);
	void GetPlanetZoneMapFilenames(class AOakPlayerController* PlayerController, class UPlanetData* Planet, TArray<class FString>* OutZoneMapFilenames, bool FindOnlyDiscovered);
	class UPlanetMeshData* GetPlanetMeshData();
	class UPlanetData* GetPlanetForObjective(class UObject* WorldContextObject, TSubclassOf<class UMission> MissionToTrack);
	void GetPlanetFastTravelStations(class UObject* WorldContextObject, class UPlanetData* Planet, TArray<class UFastTravelStationData*>* OutFastTravelStations, bool FindOnlyDiscovered, class APlayerController* ViewingPlayer);
	class UPlanetData* GetPlanetDataForCurrentLevel(class UObject* WorldContextObject);
	TSubclassOf<class AZoneMapPlanetViewer> GetPlanetClass();
	void GetGalaxyDiscoveryAreaCounts(class AOakPlayerController* ViewingPlayer, int32* TotalWorldDiscoveryAreas, int32* FoundWorldDiscoveryAreas, class UPatchExpansionData* InAssociatedPatch, class UDownloadableContentData* InAssociatedDLC);
	void GetGalaxyChallengeCounts(class AOakPlayerController* ViewingPlayer, class UChallengeCategoryData* ChallengeCategory, int32* TotalCount, int32* CompletedCount);
	class UFastTravelStationData* GetClosestFastTravelStationToObjective(class UObject* WorldContextObject, TSubclassOf<class UMission> MissionToTrack);
	void AsyncLoadPlanetMeshData(UDelegateProperty_& LoadedDelegate);
	void AsyncLoadPlanetClass(UDelegateProperty_& LoadedDelegate);
};

// 0x50 (0x80 - 0x30)
// Class OakGame.PlanetMeshData
class UPlanetMeshData : public UGbxDataAsset
{
public:
	class UStaticMesh*                           PlanetMesh;                                        // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           DecoMesh;                                          // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           RingDecoMesh;                                      // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           GalaxyTable_PlanetMesh;                            // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapPOIMeshListEntry>      ZoneMapPOIMeshs;                                   // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    PlanetMaterial;                                    // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    GalaxyTable_PlanetShader;                          // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    GalaxyTable_AtmosphereShader;                      // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            LandTexture;                                       // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlanetMeshData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.PlayerAlertableInterface
class IPlayerAlertableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPlayerAlertableInterface* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class OakGame.PlayerAlertData
class UPlayerAlertData : public UGbxDataAsset
{
public:
	enum class EPlayerAlertType                  PlayerAlertType;                                   // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CBE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDialogEvent*                          PlayerAlertEvent;                                  // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerAlertLifetime;                               // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ApplyOutlineEffect;                                // 0x44(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AttachAlertIcon;                                   // 0x45(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CBF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInWorldIconData*                      PlayerAlertIconData;                               // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          OutlineColor;                                      // 0x50(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CustomStencilValue;                                // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaySound;                                        // 0x64(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CC0[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerAlertData* GetDefaultObj();

};

// 0x70 (0x248 - 0x1D8)
// Class OakGame.PlayerBalanceStateComponent
class UPlayerBalanceStateComponent : public UBalanceStateComponent
{
public:
	int32                                        Experience;                                        // 0x1D8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                       UncappedExperience;                                // 0x1DC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CC4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    CombatExperienceScale;                             // 0x1E4(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    MissionExperienceScale;                            // 0x1F0(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    AllExperienceScale;                                // 0x1FC(0xC)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnLevelUp;                                         // 0x208(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExperienceAdded;                                 // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUncappedExperienceAdded;                         // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnExperienceAddedFromSave;                         // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerBalanceStateComponent* GetDefaultObj();

	void SimplePlayerBalanceEvent__DelegateSignature();
	void PlayerUncappedExpAddedEvent__DelegateSignature(int32 ExperienceAdded, enum class EPlayerExperienceSource Source, enum class EPlayerExperienceType Type);
	void PlayerExpAddedFromSaveEvent__DelegateSignature(class UPlayerBalanceStateComponent* PlayerBalanceComponent);
	void PlayerExpAddedEvent__DelegateSignature(int32 ExperienceAdded, enum class EPlayerExperienceSource Source, enum class EPlayerExperienceType Type);
	void PlayerBalanceEvent__DelegateSignature(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void OnRep_UncappedExperience(uint32 PreviousUncappedExperience);
	void OnRep_Experience();
	int32 GetExperience();
	void Client_OnLevelUp(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void Client_NotifyCheatSetExperienceLevel();
	void AddExperience(int32 Amount, enum class EPlayerExperienceSource Source, enum class EPlayerExperienceType Type);
};

// 0x60 (0x4B8 - 0x458)
// Class OakGame.PlayerBanner
class APlayerBanner : public AActor
{
public:
	class UGbxActionComponent*                   ActionComponent;                                   // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakCustomizationComponent*            CustomizationComponent;                            // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionEnableCondition*               EnableCondition;                                   // 0x468(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoManageBanner;                                 // 0x470(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlayerBannerUsage                UsagePerPlayerCount[0x4];                          // 0x471(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CC5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter*                         PlayerOwner;                                       // 0x478(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGbxCustomizationData*>         AppliedCustomizations;                             // 0x480(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CC6[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APlayerBanner* GetDefaultObj();

	void OnShowBannerComplete(enum class EGbxActionEndState EndState);
	void OnHideBannerComplete(enum class EGbxActionEndState EndState);
};

// 0xA0 (0x4F8 - 0x458)
// Class OakGame.PlayerBannerManager
class APlayerBannerManager : public AActor
{
public:
	uint8                                        Pad_6CC7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakCharacter*>                 Players;                                           // 0x460(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class APlayerBanner*>                 PlayerBanners;                                     // 0x470(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<class AOakCharacter*, struct FPlayerBannerPlayerData> PlayerMap;                                         // 0x480(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class APlayerBanner*>                 PlayerBannerShowQueue;                             // 0x4D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CC8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APlayerBannerManager* GetDefaultObj();

	void OnRep_Players();
	void OnNumPlayersChanged(int32 NumPlayers);
};

// 0x100 (0x278 - 0x178)
// Class OakGame.PlayerCharacterComponent
class UPlayerCharacterComponent : public UActorComponent
{
public:
	uint8                                        Pad_6CCA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlayerCharacterComponentSlotData*> CharacterSlots;                                    // 0x190(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FOakPlayerCharacterSlotItemList       SlotItemList;                                      // 0x1A0(0xC8)(Net, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  CachedPlayer;                                      // 0x268(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CCB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerCharacterComponent* GetDefaultObj();

	void SetSlotAugment(class UPlayerCharacterComponentSlotData* Slot, class UPlayerCharacterComponentAugmentData* Augment);
	bool HasAnySlotAugment(class UPlayerCharacterComponentSlotData* Slot);
	void HandlePreInputActivation();
	void HandleInputActivationEnd();
	void HandleInputActivationBegin();
	class UPlayerCharacterComponentAugmentData* GetSlotAugment(class UPlayerCharacterComponentSlotData* Slot);
};

// 0x40 (0x70 - 0x30)
// Class OakGame.PlayerCharacterComponentSlotData
class UPlayerCharacterComponentSlotData : public UGbxDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class UPlayerCharacterComponentAugmentData*> SupportedAugments;                                 // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPlayerCharacterComponentSlotData* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.PlayerClassCountAttributeValueResolver
class UPlayerClassCountAttributeValueResolver : public UAttributeValueResolver
{
public:
	int32                                        PlayerClassBitmask;                                // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECompoundConditionOperatorType    Operator;                                          // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNormalizeValue;                                   // 0x2D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBooleanValue;                                     // 0x2E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CCC[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerClassCountAttributeValueResolver* GetDefaultObj();

};

// 0x78 (0xE8 - 0x70)
// Class OakGame.PlayerClassIdentifier
class UPlayerClassIdentifier : public UPrimaryAssetLabel
{
public:
	struct FSoftClassPath                        CharacterBlueprint;                                // 0x70(0x18)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UPlayerStandInData>     CharacterStandInData;                              // 0x88(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ShortName;                                         // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CharacterName;                                     // 0xB8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bCameraPlayer;                                     // 0xD0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CCD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDownloadableExpansionData*            DlcExpansion;                                      // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAvailableForDataExtraction;                       // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CCE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerClassIdentifier* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.PlayerClassMissionRewardWeightValueResolver
class UPlayerClassMissionRewardWeightValueResolver : public UAttributeValueResolver
{
public:
	int32                                        PlayerClassBitmask;                                // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECompoundConditionOperatorType    Operator;                                          // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CCF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerClassMissionRewardWeightValueResolver* GetDefaultObj();

};

// 0x180 (0x1A8 - 0x28)
// Class OakGame.PlayerIdentityWidget
class UPlayerIdentityWidget : public UObject
{
public:
	uint8                                        Pad_6CD0[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxMovie*                          OwningMovie;                                       // 0x58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CD1[0x148];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerIdentityWidget* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.PlayerIsLicensedAttributeValueResolver
class UPlayerIsLicensedAttributeValueResolver : public UAttributeValueResolver
{
public:
	class UDownloadableExpansionData*            Expansion;                                         // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckContextPlayer;                               // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CD2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerIsLicensedAttributeValueResolver* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class OakGame.PlayerMeleeChainData
class UPlayerMeleeChainData : public UGbxDataAsset
{
public:
	class UPlayerMeleeData*                      Opener;                                            // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpenerMinDistance;                                 // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpenerChainWindowTime;                             // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerMeleeChainNode>         ChainNodes;                                        // 0x40(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerMeleeChainData* GetDefaultObj();

};

// 0x100 (0x130 - 0x30)
// Class OakGame.PlayerMeleeData
class UPlayerMeleeData : public UGbxDataAsset
{
public:
	class UGbxCondition*                         OverrideCondition;                                 // 0x30(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OverridePriority;                                  // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyOverrideOnSuccess;                            // 0x3C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanHitUntargetables;                              // 0x3D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseTargetHoming;                                  // 0x3E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CD3[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpactDistance;                                    // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetMaxAngleYaw;                                 // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetMaxAngleUpPitch;                             // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetMaxAngleDownPitch;                           // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPitchUpAngle;                                   // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateInterpSpeed;                                 // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawRate;                                        // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPitchRate;                                      // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoCloseInDistance;                                 // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SocketProxomity;                                   // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     TargetMaxDistance;                                 // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SocketTrackingMultiplier;                          // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSuccessMeleeHeightOffsetWhenEnemyBelow;         // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSuccessMeleeHeightOffsetWhenEnemyAbove;         // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CD4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                SuccessAction;                                     // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                FailureAction;                                     // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAdjustByWeaponPlayRate;                           // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CD5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageData>               DamageData;                                        // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               SuccessDamageData;                                 // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeCooldown;                                     // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeMissCooldown;                                 // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImpactData*                           MeleeImpact;                                       // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImpactData*                           MeleeCritImpact;                                   // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         SuccessMeleeFeedback;                              // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         FailMeleeFeedback;                                 // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          ImpactRange;                                       // 0xD0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bReverseImpact;                                    // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CD6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultReverseImpactForce;                         // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMeleeReverseImpactEntry>      Thresholds;                                        // 0x110(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 UntargetableTraceChannel;                          // 0x120(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CD7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UntargetableTraceRadius;                           // 0x124(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMeleeWeapon;                                  // 0x128(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCameraIsFree;                                     // 0x129(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CD8[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerMeleeData* GetDefaultObj();

};

// 0x298 (0x410 - 0x178)
// Class OakGame.PlayerMeleeStateComponent
class UPlayerMeleeStateComponent : public UActorComponent
{
public:
	uint8                                        Pad_6CDB[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeFloat                    MeleeSpeed;                                        // 0x220(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CDC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlayerMeleeData*>              PlayerMeleeDataList;                               // 0x230(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FMeleeWeaponAttachmentData            FirstPersonMeleeWeapon;                            // 0x240(0x40)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FMeleeWeaponAttachmentData            ThirdPersonMeleeWeapon;                            // 0x280(0x40)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  MeleeWeaponBoneModifyStateName;                    // 0x2C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeleeWeaponBoneModifyBlendTime;                    // 0x2C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CDD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPlayerMeleeData*                      ActivePlayerMeleeData;                             // 0x2D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FReplicatedMeleeActionData            ReplicatedMeleeData;                               // 0x2D8(0x18)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        MeleeHitTime;                                      // 0x2F0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EndMeleeDuration;                                  // 0x2F4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MeleeCooldownEndTime;                              // 0x2F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CDE[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentMeleeTarget;                                // 0x310(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CurrentTargetSocket;                               // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CDF[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxDamageType*                        DamageTypeOverride;                                // 0x3B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CE0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShowMeleeWeapon;                                  // 0x3C1(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CE1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPerformMelee;                                    // 0x3C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlayerMeleeChainData*                 DefaultMeleeChainData;                             // 0x3D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreBlockingCharacters;                         // 0x3E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CE2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NextRandomChainSeed;                               // 0x3E4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CE3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastChainIndex;                                    // 0x3F0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CE4[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPlayerMeleeData*                      AbilityPlayerMeleeData;                            // 0x408(0x8)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPlayerMeleeStateComponent* GetDefaultObj();

	void StopContinuousMelee();
	void StartContinuousMelee();
	void SetMeleeWeaponHeld(bool bHeld);
	void SetMeleeDamageType(TSubclassOf<class UGbxDamageType> InDamageType);
	void SetEnableMeleeWeaponCFX(bool bEnableEffect);
	void Server_PerformPlayerMelee();
	void ResourceUnlockPlayerMeleeWeaponVisible(class AActor* PlayerActor, class FName Reason);
	void ResourceLockPlayerMeleeWeaponVisible(class AActor* PlayerActor, class FName Reason);
	bool PerformPlayerMelee();
	void OnRep_ShowMeleeWeapon();
	void OnRep_ReplicatedMeleeData();
	void OnMeleeActionEnd(enum class EGbxActionEndState EndState);
	void MeleeStatePerformMelee__DelegateSignature(class UPlayerMeleeData* MeleeData, bool bSuccess, class AActor* MeleeTarget);
	void MeleeStateChangeEvent__DelegateSignature(bool bCanMelee);
	bool IsPerformingMelee();
	void HandleFirstPersonCreated(bool bArmsCreated);
	void DoSimulatedMeleeDamage(class AActor* MeleeTarget, bool bBroadcast, bool bCountAsMelee, float Multiplier, TSubclassOf<class UDamageData> FallbackDamageData, class UGameStatData* OptionalKillStat);
	void ClearMeleeDamageType();
	void CharacterTransported();
	void CharacterDied();
};

// 0x0 (0x28 - 0x28)
// Class OakGame.PlayerPetInterface
class IPlayerPetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPlayerPetInterface* GetDefaultObj();

};

// 0x80 (0x1F8 - 0x178)
// Class OakGame.PlayerPrestigeComponent
class UPlayerPrestigeComponent : public UActorComponent
{
public:
	int64                                        PrestigeExperience;                                // 0x178(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrestigeLevel;                                     // 0x180(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastUpgradedTreeIndex;                             // 0x184(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalSpentPoints;                                  // 0x188(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CE6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlayerPrestigeTree>           PrestigeTrees;                                     // 0x190(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class AOakCharacter_Player*                  PlayerCharacter;                                   // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityManagerComponent*     AbilityManagerComp;                                // 0x1A8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        ExpRequiredForCurrentLevel;                        // 0x1B0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        ExpNeededForNextLevel;                             // 0x1B8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                UpgradeArray;                                      // 0x1C0(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	bool                                         bRotateBackwards;                                  // 0x1D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSeenTutorial;                                  // 0x1D1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CE7[0x26];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerPrestigeComponent* GetDefaultObj();

	void ServerUploadInitialData(int64 InPrestigeExperience, int32 InLastUpgradedTreeIndex, TArray<int32>& InPointsSpentByIndexOrder);
	void ServerUpgradePrestigeNode(int32 TreeIndex, int32 NodeIndex);
	void OnRep_UpgradeArray();
	void OnRep_PrestigeExperience();
	void OnPlayerLevelChanged(int32 OldExperienceLevel, int32 NewExperienceLevel);
	void NotifyPrimaryCharacterChanged(class AGbxCharacter* NewCharacter);
};

// 0x68 (0x98 - 0x30)
// Class OakGame.PlayerPrestigeTreeData
class UPlayerPrestigeTreeData : public UGbxDataAsset
{
public:
	TArray<struct FPlayerPrestigeNodeData>       Nodes;                                             // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  PrestigeTreeName;                                  // 0x40(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PrestigeTreeDescription;                           // 0x58(0x18)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             PrestigeTreeIconTexture;                           // 0x70(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerPrestigeTreeData* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class OakGame.PlayerPronounData
class UPlayerPronounData : public UGbxDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	enum class ETextGender                       TextGender;                                        // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6CE8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerPronounData* GetDefaultObj();

};

// 0x50 (0x1C8 - 0x178)
// Class OakGame.PlayerShopManagerComponent
class UPlayerShopManagerComponent : public UActorComponent
{
public:
	uint8                                        Pad_6CEC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxBuyBackSize;                                    // 0x190(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlayerBuyBackableInventory>   BuyBackList;                                       // 0x198(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	class AOakPlayerController*                  PlayerController;                                  // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CEE[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerShopManagerComponent* GetDefaultObj();

	void TrySellAllJunk();
	void ServerSellInventory(class AActor* InventoryActor);
	void ServerSellAllJunk();
	void ServerPurchaseSDU(class AAdvancedInteractiveObject* SDUCase, class UOakSDUData* SDU);
	void ServerPurchaseInventoryFromShop(class AActor* InventoryActor, class UInventoryShopComponent* Shop);
	void ServerPurchaseCustomization(class UGbxCustomizationData* Customization);
	void ServerOnPurchaseCrazyEarl(class UOakCustomizationData* PurchasedItem);
	void ServerOnExitMenuCrazyEarl();
	void ServerNotifyStablyVendingMachineSelectedInventory(enum class EVendingMachineTrayTileType Type, class AActor* InventoryActor);
	void ServerBuyBackInventory(class AActor* InventoryActor);
	void OnRep_BuyBackList();
	bool HasJunkToSell();
	void ClientSDUTransactionFinished(class UOakSDUData* SDU, bool bPurchased, int32 NewSDULevel);
	void ClientInventoryTransactionFinished(enum class ETransactionType TransactionType, TArray<class AActor*>& InventoryActor);
	void ClientCustomizationTransactionFinished(class UGbxCustomizationData* CustomizationData);
};

// 0x300 (0x758 - 0x458)
// Class OakGame.PlayerStandIn
class APlayerStandIn : public AActor
{
public:
	UMulticastDelegateProperty_                  OnCharacterSpawned;                                // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCharacterDestroyed;                              // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CEF[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPlayerStandInType                StandInType;                                       // 0x49C(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CF0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerStandInInitData                InitData;                                          // 0x4A0(0x30)(Transient, NativeAccessSpecifierPrivate)
	class UPlayerStandInData*                    StandInData;                                       // 0x4D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLobbyPlayerStandInLoadOutInfo        LoadOutInfo;                                       // 0x4D8(0xA0)(Transient, NativeAccessSpecifierPrivate)
	struct FLobbyPlayerStandInLoadOutInfo        PendingLoadOut;                                    // 0x578(0xA0)(Transient, NativeAccessSpecifierPrivate)
	struct FOakPlayerAbilitySaveGameData         PendingAbilityData;                                // 0x618(0xA8)(Transient, NativeAccessSpecifierPrivate)
	struct FOakPlayerCharacterSlotSaveGameData   PendingCharacterData;                              // 0x6C0(0x10)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CF1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGbxCustomizationData*>         CustomizationsAwaitingApplication;                 // 0x6D8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxAction_CoordinatedEffect> PendingCoordinatedEffect;                          // 0x6E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter_StandIn*                 CharacterInstance;                                 // 0x6F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FStandInAuxiliaryState>        AuxiliaryActors;                                   // 0x6F8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        SlotIndex;                                         // 0x708(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CF2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction_CoordinatedEffect> PlayerStandInDigistructEffect;                     // 0x710(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxAction_CoordinatedEffect> PlayerStandInDigistructOutEffect;                  // 0x718(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxAction_CoordinatedEffect> FrontendStandInHoloEffect;                         // 0x720(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CF3[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APlayerStandIn* GetDefaultObj();

	void PlayGbxAction(TSubclassOf<class UGbxAction> Action);
	void HandleCustomizationApplied(class UGbxCustomizationData* Customization);
};

// 0x3F0 (0x420 - 0x30)
// Class OakGame.PlayerStandInData
class UPlayerStandInData : public UGbxDataAsset
{
public:
	TSubclassOf<class AOakCharacter_StandIn>     StandInBlueprint;                                  // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakCharacter_StandIn>     SkillScreenStandInBlueprint;                       // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakCharacter_StandIn>     BannerStandInBlueprint;                            // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakCharacter_StandIn>     StatueStandInBlueprint;                            // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ScrollsAuraMenuBlueprint;                          // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    WorldBuffsMenuBlueprint;                           // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>             StandInAnimBlueprint;                              // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>             FrontendAnimBlueprint;                             // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGbxAnimSet>>    FrontendAnimSets;                                  // 0x70(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UGbxAnimSet*>                   CharacterSelectAnimSets;                           // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FExtraStandInAnimationMeshData> ExtraFrontendAnimationData;                        // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFrontendStandInSpecialAnimationData  FrontendSpecialAnimations[0x5];                    // 0xA0(0x78)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               CharacterSelectPositionOffset;                     // 0x118(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CharacterSelectRotationOffset;                     // 0x124(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               CharacterCreatePositionOffset;                     // 0x130(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CharacterCreateRotationOffset;                     // 0x13C(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    CharacterInspectCameraHeightOffsetCurve;           // 0x148(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    CharacterInspectCameraDepthOffsetCurve;            // 0x1C0(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    PrimaryLobbyStandInCameraHeightOffsetCurve;        // 0x238(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    PrimaryLobbyStandInCameraDepthOffsetCurve;         // 0x2B0(0x78)(Edit, NativeAccessSpecifierPublic)
	float                                        DelayBeforeMainMenuFlourishAnimation;              // 0x328(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CF4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFrontendStandInAuxiliaryActorData> CharacterCreateAuxiliaryActors;                    // 0x330(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFrontendStandInAuxiliaryActorData    DefaultAuxiliaryActor;                             // 0x340(0x58)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FPlayerStandIn_ActionAbility>  ActionAbilities;                                   // 0x398(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPlayerStandIn_AbilityBranch>  AbilityBranches;                                   // 0x3A8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPlayerStandIn_Augment>        Augments;                                          // 0x3B8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UInventoryBalanceData*                 FrontendWeaponBalanceWeaponData;                   // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPlayerStandInType, struct FPlayerStandInBannerData> StandInTypeToBannerMap;                            // 0x3D0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerStandInData* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class OakGame.PlayerStandInDataPatch
class UPlayerStandInDataPatch : public UGbxDataAsset
{
public:
	class UPlayerStandInData*                    Target;                                            // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Order;                                             // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CF5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                ReplaceCharacterSelectAnims;                       // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerStandIn_ActionAbility>  ActionAbilities;                                   // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FPlayerStandIn_AbilityBranch>  AbilityBranches;                                   // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPlayerStandInDataPatch* GetDefaultObj();

};

// 0x0 (0x680 - 0x680)
// Class OakGame.PlayerStorage
class APlayerStorage : public AAdvancedInteractiveObject
{
public:

	static class UClass* StaticClass();
	static class APlayerStorage* GetDefaultObj();

};

// 0x20 (0x528 - 0x508)
// Class OakGame.PlayerStorageProxy
class APlayerStorageProxy : public AAdvancedInteractiveObjectProxy
{
public:
	class UAnimSequence*                         OpenAnim;                                          // 0x508(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         OpenIdleAnim;                                      // 0x510(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         CloseAnim;                                         // 0x518(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         CloseIdleAnim;                                     // 0x520(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APlayerStorageProxy* GetDefaultObj();

};

// 0xC8 (0x520 - 0x458)
// Class OakGame.PlayerTradeManager
class APlayerTradeManager : public AActor
{
public:
	enum class EPlayerTradeManagerStatus         Status;                                            // 0x458(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CF8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerTradeManager*                   Partner;                                           // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakPlayerController*                  PartnerPC;                                         // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakCharacter_Player*                  PartnerCharacter;                                  // 0x470(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerTradingStance              PartnerStance;                                     // 0x478(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CF9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PartnerCashOffered;                                // 0x47C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                PartnerInvOffered[0x4];                            // 0x480(0x20)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MyCashOffered;                                     // 0x4A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CFA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                MyInvOffered[0x4];                                 // 0x4A8(0x20)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6CFB[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APlayerTradeManager* GetDefaultObj();

	void ServerUpdateStance(enum class EPlayerTradingStance NewStance, uint32 Hash);
	void ServerUpdateInventorySlot(class AActor* INVENTORY, int32 Slot);
	void ServerUpdateCashOffered(int32 NewCashValue);
	void ServerCancelTrade();
	void OnRep_PartnerStance();
	void OnRep_PartnerInvOffered();
	void OnRep_PartnerCharacter();
	void OnRep_PartnerCashOffered();
	void ClientStanceReset(uint32 Hash);
	void ClientShowTradeConfirmationMessage(bool IsDuel);
};

// 0x8 (0x30 - 0x28)
// Class OakGame.PlayThroughAttributeValueResolver
class UPlayThroughAttributeValueResolver : public UAttributeValueResolver
{
public:
	enum class EPlayThroughType                  PlayThroughToResolve;                              // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6CFC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayThroughAttributeValueResolver* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class OakGame.PlayThroughDefinedAttributeValueResolver
class UPlayThroughDefinedAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FPlaythroughDefinedValueRow           Value;                                             // 0x28(0x78)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPlayThroughDefinedAttributeValueResolver* GetDefaultObj();

};

// 0x60 (0x1D8 - 0x178)
// Class OakGame.ProjectedShield
class UProjectedShield : public UActorComponent
{
public:
	class UProjectedShieldData*                  Data;                                              // 0x178(0x8)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ParticleSystem;                                    // 0x180(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x188(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseAudioComponent*                  ProjectedAudioComponent;                           // 0x190(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D02[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OwnerActor;                                        // 0x1C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D03[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UProjectedShield* GetDefaultObj();

	void ToggleProjectedShield(bool bToggleOn);
	void SpawnShield();
	void OnTakeAnyDamageInternal(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void OnTakeAnyDamage(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void OnShieldSpawned();
	void OnShieldNotDepletedInternal(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNotDepleted();
	void OnShieldLowHealth();
	void OnShieldFullHealth();
	void OnShieldDespawned();
	void OnShieldDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldBreak();
	void OnHealthTypeVeryLow(struct FHealthType& HealthType, int32 Index);
	void OnHealthTypeNormal(struct FHealthType& HealthType, int32 Index);
	void OnHealthTypeLow(struct FHealthType& HealthType, int32 Index);
	bool IsShieldBroken();
	void DespawnShield();
};

// 0x18 (0x1F0 - 0x1D8)
// Class OakGame.ProjectedShield_Vehicle
class UProjectedShield_Vehicle : public UProjectedShield
{
public:
	class UMaterialInstanceDynamic*              MaterialInstance;                                  // 0x1D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVehicleEffectsComponent*              VehicleEffectsComponent;                           // 0x1E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D04[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UProjectedShield_Vehicle* GetDefaultObj();

	void OnShouldDespawnShield();
	void OnPrimaryOccupantExit();
	void OnPrimaryOccupantEnter();
	void OnEngineStop();
	void OnEngineStart();
	void OnDigiThrustStarted();
	void OnDigiThrustEndFinished();
};

// 0x130 (0x160 - 0x30)
// Class OakGame.ProjectedShieldData
class UProjectedShieldData : public UGbxDataAsset
{
public:
	class UStaticMesh*                           Mesh;                                              // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    Material;                                          // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D05[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            MeshOffset;                                        // 0x50(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  AudioSocketName;                                   // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWwiseLocationOverride>        AudioLocations;                                    // 0x88(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StartShieldWiseEvent;                              // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopShieldWiseEvent;                               // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       Particle;                                          // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            ParticleOffset;                                    // 0xB0(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FHealthType                           ShieldHealth;                                      // 0xE0(0x78)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         AttachOnSpawn;                                     // 0x158(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D06[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UProjectedShieldData* GetDefaultObj();

};

// 0x10 (0x170 - 0x160)
// Class OakGame.ProjectedShieldData_Vehicle
class UProjectedShieldData_Vehicle : public UProjectedShieldData
{
public:
	bool                                         DespawnShieldOnEngineStop;                         // 0x160(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D07[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UProjectedShieldData_Vehicle* GetDefaultObj();

};

// 0x0 (0x680 - 0x680)
// Class OakGame.QuickChange
class AQuickChange : public AAdvancedInteractiveObject
{
public:

	static class UClass* StaticClass();
	static class AQuickChange* GetDefaultObj();

	void OnSaveGameRenamed(class FText& NewName);
	void OnRespec();
	void OnPickedNewSkinColor(int32 Index, const struct FLinearColor& Color);
	void OnPickedNewSkin(class UOakCustomizationData* NewSkin);
	void OnPickedNewHead(class UOakCustomizationData* NewHead);
	void OnPickedNewEmote(class UOakCustomizationData* NewEmote);
	void OnPickedNewECHOTheme(class UOakCustomizationData* NewECHOTheme);
	void OnPickedNewBody(class UOakCustomizationData* NewBody);
};

// 0x0 (0x508 - 0x508)
// Class OakGame.QuickChangeProxy
class AQuickChangeProxy : public AAdvancedInteractiveObjectProxy
{
public:

	static class UClass* StaticClass();
	static class AQuickChangeProxy* GetDefaultObj();

};

// 0x10 (0x688 - 0x678)
// Class OakGame.RaidGameMode
class ARaidGameMode : public AOakGameMode
{
public:
	bool                                         bSpectateWhenDead;                                 // 0x678(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D08[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ARaidGameState*                        RaidGameState;                                     // 0x680(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ARaidGameMode* GetDefaultObj();

	void SetForceBalanceToMaxPlayers(bool bForced);
	void RespawnAllSpectatingPlayers();
	void OnNumPlayersChanged(int32 NewNumPlayers);
	void OnInitRaidGameState();
	void K2_OnPlayerRespawned(class AOakPlayerController* RespawnedPlayer);
	void K2_OnPlayerDied(class AOakPlayerController* DeadPlayer);
	void K2_OnAllPlayersDied();
	int32 GetNumPlayerSpectators();
	int32 GetNumPlayersAlive();
	void BroadcastRaidComplete();
	void BroadcastRaidBegun(int32 CountdownDuration);
	void BroadcastLegComplete(int32 LegNumber);
};

// 0x158 (0xBC0 - 0xA68)
// Class OakGame.RaidGameState
class ARaidGameState : public AOakGameState
{
public:
	class UHUDNotificationAsset*                 NotificationData;                                  // 0xA68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 RaidStartNotificationData;                         // 0xA70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 RaidFailedNotificationData;                        // 0xA78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 RaidCountdownNotificationData;                     // 0xA80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxHUDData*                           SpectatorHUDData;                                  // 0xA88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxHUDStateData*                      SpectatorHUDState;                                 // 0xA90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RaidBeginningNotificationPriority;                 // 0xA98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D09[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RaidBeginningNotificationText;                     // 0xAA0(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        LegCompleteNotificationPriority;                   // 0xAB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D0A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LegCompleteNotificationText;                       // 0xAC0(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        RaidCompleteNotificationPriority;                  // 0xAD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D0B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RaidCompleteNotificationText;                      // 0xAE0(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        PlayerDiedNotificationPriority;                    // 0xAF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D0C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PlayerDiedNotificationText;                        // 0xB00(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        TeamWipeNotificationPriority;                      // 0xB18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D0D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TeamWipeNotificationText;                          // 0xB20(0x18)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D0E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerDied;                                      // 0xB40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAllPlayersDied;                                  // 0xB50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRaidBegun;                                       // 0xB60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRaidLegComplete;                                 // 0xB70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRaidComplete;                                    // 0xB80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRaidCountdown;                                   // 0xB90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNumSpectatablePlayersChanged;                    // 0xBA0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	int32                                        RaidCountdown;                                     // 0xBB0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSpectatablePlayers;                             // 0xBB4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D0F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARaidGameState* GetDefaultObj();

	void OnRep_NumSpectatablePlayers();
	void OnRaidPlayerDied__DelegateSignature(class AOakPlayerState* PlayerState);
	void OnRaidLegComplete__DelegateSignature(int32 LegNumber);
	void OnRaidCountdown__DelegateSignature(int32 CountdownRemaining);
	void OnRaidComplete__DelegateSignature();
	void OnRaidBegun__DelegateSignature(int32 CountdownDuration);
	void OnRaidAllPlayersDied__DelegateSignature();
	void OnNumSpectatablePlayersChanged__DelegateSignature(int32 NewNumSpectatable);
	void BroadcastRaidComplete();
	void BroadcastRaidBegun(int32 CountdownDuration);
	void BroadcastPlayerDied(class AOakPlayerState* PlayerState);
	void BroadcastLegComplete(int32 LegNumber);
	void BroadcastAllPlayersDied();
};

// 0xC0 (0x238 - 0x178)
// Class OakGame.RandomEncounterAreaComponent
class URandomEncounterAreaComponent : public UActorComponent
{
public:
	bool                                         bActive;                                           // 0x178(0x1)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D12[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExtraScore;                                        // 0x17C(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemainingImmuneTime;                               // 0x180(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemainingImmuneDistance;                           // 0x184(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemainingImmuneDanger;                             // 0x188(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x18C(0x1)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D13[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        EnvironmentFilterTags;                             // 0x190(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class AOakTriggerVolume*                     TriggerVolume;                                     // 0x1A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                TerritoryActor;                                    // 0x1A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           OnEnterAudioLoop;                                  // 0x1B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           OnExitAudioLoop;                                   // 0x1B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       EmitterTemplate;                                   // 0x1C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EmitterAttachPointName;                            // 0x1C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraDangerPerDistance;                            // 0x1D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraDangerPerSecond;                              // 0x1D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImmuneTime;                                        // 0x1D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImmuneDistance;                                    // 0x1DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URegionData*                           OverrideRegion;                                    // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugEQS;                                         // 0x1E8(0x1)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D14[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ARandomEncounterManager*               CachedManager;                                     // 0x1F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URandomEncounterRunner*                Runner;                                            // 0x200(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AOakCharacter_Overworld>> AllTouchingPlayers;                                // 0x208(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AOakCharacter_Overworld>> DangerPlayers;                                     // 0x218(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           OnRandomEncounterCompleted;                        // 0x228(0x10)(ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URandomEncounterAreaComponent* GetDefaultObj();

	void OnUnTouchedTrigger(class AActor* LeavingActor, bool bIsPlayer);
	void OnTouchedTrigger(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void ForceSpawnRandomEncounter(class ASpawner* UseSpawner, class ASpawnPoint* UseSpawnPoint, class UDaffodilEncounterData* SpecificEncounter, UDelegateProperty_ OnEncounterCompleted);
};

// 0x8 (0x460 - 0x458)
// Class OakGame.RandomEncounterArea
class ARandomEncounterArea : public AActor
{
public:
	class URandomEncounterAreaComponent*         REAComponent;                                      // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ARandomEncounterArea* GetDefaultObj();

};

// 0x68 (0x4C0 - 0x458)
// Class OakGame.RandomEncounterManager
class ARandomEncounterManager : public AActor
{
public:
	bool                                         bInAnyDanger;                                      // 0x458(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D15[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RequiredDanger;                                    // 0x45C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseDangerScore;                                   // 0x460(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemainingImmuneDanger;                             // 0x464(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActiveEncounterCount;                              // 0x468(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                         InitialRequiredDanger;                             // 0x46C(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                         SubsequentRequiredDanger;                          // 0x474(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                         GlobalImmuneDangerAfterEscape;                     // 0x47C(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                         ImmuneDangerAfterEscape;                           // 0x484(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                         ImmuneDangerAfterSpawn;                            // 0x48C(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        DangerPerSecond;                                   // 0x494(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DangerPerDistance;                                 // 0x498(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxActiveEncounters;                               // 0x49C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class URandomEncounterAreaComponent*> InDangerAreas;                                     // 0x4A0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class URandomEncounterAreaComponent*> RegisteredAreas;                                   // 0x4B0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ARandomEncounterManager* GetDefaultObj();

};

// 0x68 (0x530 - 0x4C8)
// Class OakGame.RandomEncounterVolume
class ARandomEncounterVolume : public AOakTriggerVolume
{
public:
	class URandomEncounterAreaComponent*         REAComponent;                                      // 0x4C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTerritoryComponent*                   TerritoryComponent;                                // 0x4D0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkSpeedModifier;                                 // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D16[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARandomEncounterVolume* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.RarityWeightAttributeValueResolver
class URarityWeightAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FDataTableRowHandle                   RarityTableRowHandle;                              // 0x28(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URarityWeightAttributeValueResolver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.ReapBehaviorInterface
class IReapBehaviorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IReapBehaviorInterface* GetDefaultObj();

};

// 0x30 (0x208 - 0x1D8)
// Class OakGame.RegionBalanceStateComponent
class URegionBalanceStateComponent : public UBalanceStateComponent
{
public:
	bool                                         bGameStageAlwaysTracksPlayerLevelAboveMinimum;     // 0x1D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritGameStageFromOwner;                        // 0x1D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D17[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URegionManager*                        RegionManager;                                     // 0x1E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URegionData*                           REGION;                                            // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D18[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URegionBalanceStateComponent* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.RegionData
class URegionData : public UGbxDataAsset
{
public:
	class UDownloadableExpansionData*            DlcExpansion;                                      // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPatchExpansionData*                   PatchExpansion;                                    // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class URegionData* GetDefaultObj();

};

// 0x38 (0x4C8 - 0x490)
// Class OakGame.RegionDataVolume
class ARegionDataVolume : public AVolume
{
public:
	class URegionData*                           RegionData;                                        // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysRender;                                     // 0x498(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreVolume;                                     // 0x499(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D19[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          DrawingColor;                                      // 0x49C(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D1A[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARegionDataVolume* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class OakGame.RegionManagerData
class URegionManagerData : public UGbxDataAsset
{
public:
	TArray<struct FPlayThroughData>              PlayThroughs;                                      // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        GameStageIncreaseAbovePlayer;                      // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D1B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URegionManagerData* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class OakGame.RegionManager
class URegionManager : public UObject
{
public:
	uint8                                        Pad_6D1C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class URegionManagerData>     RegionManagerDataPtr;                              // 0x48(0x28)(Edit, Config, GlobalConfig, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URegionManagerData*                    MainRegionManagerData;                             // 0x70(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRegionSaveData>               SavedRegionData;                                   // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D1D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class URegionData*                           OverrideRegion;                                    // 0x98(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D1E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URegionManager* GetDefaultObj();

};

// 0x18 (0x2D0 - 0x2B8)
// Class OakGame.ResourceBar
class UResourceBar : public UGbxUserWidget
{
public:
	class UProgressBar*                          ValueBar;                                          // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            CurrentValueText;                                  // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            MaxValueText;                                      // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UResourceBar* GetDefaultObj();

	void SetTextMaxValue(class FText NewText);
	void SetTextCurrentValue(class FText NewText);
	void SetPercent(float NewValue);
};

// 0x0 (0x490 - 0x490)
// Class OakGame.RespawnRestrictedVolume
class ARespawnRestrictedVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ARespawnRestrictedVolume* GetDefaultObj();

};

// 0x20 (0x2D8 - 0x2B8)
// Class OakGame.ReticleFeedbackWidgetContainer
class UReticleFeedbackWidgetContainer : public UGbxUserWidget
{
public:
	TArray<class UOakReticleFeedbackWidget*>     FeedbackWidgets;                                   // 0x2B8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AOakPlayerController>   OakPCOwner;                                        // 0x2C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D1F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UReticleFeedbackWidgetContainer* GetDefaultObj();

	void OnGameEventCallback(enum class EOakReticleFeedbackGameEvent GameEvent);
};

// 0x7F0 (0x1AE0 - 0x12F0)
// Class OakGame.RevolverVehicleAnimInstance
class URevolverVehicleAnimInstance : public UOakVehicleAnimInstance
{
public:
	float                                        BackRaycastDistance;                               // 0x12F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderRaycastDistance;                              // 0x12F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ProfileName;                                       // 0x12F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         HitSequence;                                       // 0x1300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitBlendInTime;                                    // 0x1308(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitBlendOutTime;                                   // 0x130C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitPlayRate;                                       // 0x1310(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HitLoopCount;                                      // 0x1314(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HitSlotName;                                       // 0x1318(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                BodyMesh;                                          // 0x1320(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D20[0x7B8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URevolverVehicleAnimInstance* GetDefaultObj();

};

// 0x8 (0x470 - 0x468)
// Class OakGame.RotatingStaticMeshActor
class ARotatingStaticMeshActor : public AStaticMeshActor
{
public:
	class URotatingMovementComponent*            RotatingMovement;                                  // 0x468(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARotatingStaticMeshActor* GetDefaultObj();

};

// 0xE8 (0x740 - 0x658)
// Class OakGame.ScriptedRandomEncounter
class AScriptedRandomEncounter : public AOakSpawner
{
public:
	uint8                                        Pad_6D23[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ARandomEncounterVolume*                RandomEncounterVolume;                             // 0x660(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDaffodilEncounterData*                EncounterData;                                     // 0x668(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutomatic;                                        // 0x670(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D24[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReferenceWeak        EnableAtObjective;                                 // 0x678(0x50)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReferenceWeak        DisableAtObjective;                                // 0x6C8(0x50)(Edit, NativeAccessSpecifierPublic)
	class AOakTriggerVolume*                     SpawnProximityTrigger;                             // 0x718(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RespawnDelay;                                      // 0x720(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D25[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AScriptedRandomEncounter* GetDefaultObj();

	void SpawnEncounter();
	void OnUnTouchedTrigger(class AActor* LeavingActor, bool bIsPlayer);
	void OnTouchedTrigger(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void OnEncounterCompleted(bool bWon);
	void OnEncounterComplete(bool bWon);
};

// 0x0 (0x680 - 0x680)
// Class OakGame.SDUCase
class ASDUCase : public AAdvancedInteractiveObject
{
public:

	static class UClass* StaticClass();
	static class ASDUCase* GetDefaultObj();

};

// 0xD0 (0x5D8 - 0x508)
// Class OakGame.SDUCaseProxy
class ASDUCaseProxy : public AAdvancedInteractiveObjectProxy
{
public:
	uint8                                        Pad_6D27[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSDUCaseSpawner>               SDUs;                                              // 0x558(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  InitialCameraTarget;                               // 0x568(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceConstant*             SelectedSDUMaterial;                               // 0x570(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSelectionAngle;                                 // 0x578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSelectionDistance;                              // 0x57C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngleWeight;                                       // 0x580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceWeight;                                    // 0x584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D28[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASDUCaseProxy* GetDefaultObj();

	void PurchaseSDU();
	void OnSDUSoldOut(class UOakSDUData* SoldOutSDU, class USocketComponent* AttachmentSocket);
	void OnSDUSelected(class UOakSDUData* NewSDU, class USocketComponent* NewAttachmentSocket, class UOakSDUData* OldSDU, class USocketComponent* OldAttachmentSocket);
	void OnSDUPurchased(class UOakSDUData* PurchasedSDU, class USocketComponent* AttachmentSocket);
	void OnAxisInput(const struct FVector& Vec, bool bGamepad);
	void NavigateUp();
	void NavigateRight();
	void NavigateLeft();
	void NavigateDown();
	void ExitCase();
};

// 0x80 (0x350 - 0x2D0)
// Class OakGame.SearchLightComponent
class USearchLightComponent : public USceneComponent
{
public:
	float                                        TimeToCompleteRotation;                            // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistance;                                       // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpottingAngle;                                     // 0x2D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpottingCooldown;                                  // 0x2DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerSpotted;                                   // 0x2E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D29[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USearchLightComponent* GetDefaultObj();

	void Stop();
	void Start(bool bReset);
};

// 0x60 (0x520 - 0x4C0)
// Class OakGame.SeatPawn
class ASeatPawn : public APawn
{
public:
	uint8                                        Pad_6D2D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxWeaponAimAdjustmentAngle;                       // 0x4D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D2E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftClassPath                        GbxInputComponentClass;                            // 0x4D8(0x18)(Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          DefaultSchemas;                                    // 0x4F0(0x10)(ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPrivate)
	class UOakPawnAttachSlotComponent*           SeatComponent;                                     // 0x500(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActiveWeaponsComponent*               WeaponsComponent;                                  // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyWeaponHoldManagerComponent*       BodyWeaponHoldManager;                             // 0x510(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetTurretRotationWhenUnoccupied;                // 0x518(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D2F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASeatPawn* GetDefaultObj();

	void StopZooming(bool bForcedStop);
	void StopUsingWeapon(class UWeaponSlotData* Slot, uint8 InputChannel);
	void StopReload(class UWeaponSlotData* Slot);
	void StartZooming();
	void StartUsingWeapon(class UWeaponSlotData* Slot, uint8 InputChannel);
	void SeatAttachStateChanged();
	void Reload(class UWeaponSlotData* Slot);
	bool IsOccupied(bool bIncludeDetaching);
	class APawn* GetOccupant(bool bIncludeDetaching);
	void AttachSeat(class FName AttachSocket, class USceneComponent* AttachComponent);
};

// 0x30 (0x58 - 0x28)
// Class OakGame.ShieldAugmentStackValueResolver
class UShieldAugmentStackValueResolver : public UAttributeValueResolver
{
public:
	TSoftClassPtr<class UShieldAugment>          Augment;                                           // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AugmentName;                                       // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UShieldAugmentStackValueResolver* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class OakGame.ShieldAugmentValueResolver
class UShieldAugmentValueResolver : public UAttributeValueResolver
{
public:
	TSoftClassPtr<class UShieldAugment>          Augment;                                           // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckPrimary;                                     // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D30[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AugmentName;                                       // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStackOperator                    Operator;                                          // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D31[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          ValueB;                                            // 0x68(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UShieldAugmentValueResolver* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class OakGame.ShieldAugmentTableResolver
class UShieldAugmentTableResolver : public UAttributeValueResolver
{
public:
	struct FDataTableRowHandle                   TableShieldAug;                                    // 0x28(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     AttributeAugTier;                                  // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     AttributeAugPowerScalar;                           // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckPrimary;                                     // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D32[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UShieldAugmentTableResolver* GetDefaultObj();

};

// 0x130 (0x5F8 - 0x4C8)
// Class OakGame.Shield
class AShield : public AOakInventoryEquippableItem
{
public:
	struct FGbxAttributeFloat                    ShieldAttribute_Capacity;                          // 0x4C8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    ShieldAttribute_RegenRate;                         // 0x4D4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    ShieldAttribute_RegenDelay;                        // 0x4E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D37[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                ShieldMesh;                                        // 0x4F0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameResourceData*                     ShieldResource;                                    // 0x4F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxAttributeData*                     ShieldDamageAttributeData;                         // 0x500(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ThirdPersonAttachmentSlotName;                     // 0x508(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UShieldBalanceStateComponent*          BalanceStateComponent;                             // 0x510(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakCharacter_Player*                  OwningPlayer;                                      // 0x518(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UShieldAugment*, struct FAugmentData> ShieldAugments;                                    // 0x520(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FTrackedShieldAttributeData>   AppliedAttributes;                                 // 0x570(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AOakCharacter*>                 CharactersWithAppliedShotModifiers;                // 0x580(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FShieldDamageModifierData>     DamageModifiers;                                   // 0x590(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UWeaponShotModifier*                   ShotModifier;                                      // 0x5A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EShieldState                      ShieldState;                                       // 0x5A8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D38[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFeedbackData*                         ShieldBreakFeedback;                               // 0x5B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          AdaptiveTimer;                                     // 0x5B8(0x8)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EOakElementalType                 AdaptiveType;                                      // 0x5C0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D39[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsBarrierShield;                                  // 0x5C2(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D3A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseAudioComponent*                  AudioComponent;                                    // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter*                         EquippedCharacter;                                 // 0x5D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UViewAttachmentComponent*              ProjectedShield;                                   // 0x5D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  ProjectedAudioComponent;                           // 0x5E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  AmpAudioComponent;                                 // 0x5E8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D3B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AShield* GetDefaultObj();

	void RemoveModifierFromAttribute(class UGbxAttributeData* Attribute, class UClass* AugmentClass, enum class EShieldAttributeModificationSource Source);
	void OnWeaponShotModified(class AWeapon* Weapon, struct FWeaponShotModifierData& Data);
	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnShieldUnequipped(class AOakCharacter* Equipper);
	void OnShieldNotFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNotDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldEquipped(class AOakCharacter* Equipper);
	void OnShieldDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldAbsorbedDamage(class UDamageSource* DamageSource, class UGbxDamageType* InDamageType);
	void OnProjectedShieldParticleSystemFinished(class UParticleSystemComponent* PSC);
	void OnOwnerUncrouched();
	void OnOwnerHealthStateChanged(enum class EHealthState HealthState);
	void OnOwnerEnteredVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnOwnerCrouched();
	void OnEquipperArmorChanged(class ABodyArmor* NewArmor);
	void Multicast_PlayShieldAugmentAudio(class UWwiseEvent* AudioEvent, const struct FVector& EventLocation);
	void Multicast_PlayEffectsOnAugment(TSubclassOf<class UShieldAugment> AugmentClass, class FName AugmentName, class UObject* AdditionalContext);
	bool IsProjectedShield();
	bool IsPendingDestroyFromBarrier();
	bool IsBarrierShield();
	TSubclassOf<class UGbxDamageType> GetDamageType();
	float GetBaseShieldDamage();
	void AddModifierToAttribute(class UGbxAttributeData* Attribute, class UObject* Context, float Modifier, enum class EGbxAttributeModifierType Type, class UClass* AugmentClass, enum class EShieldAttributeModificationSource Source);
};

// 0xE0 (0x108 - 0x28)
// Class OakGame.ShieldAugment
class UShieldAugment : public UObject
{
public:
	class FString                                PrimaryStackDescription;                           // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAttributeInitializationData>  PrimaryStackValues;                                // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FString                                SecondaryStackDescription;                         // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAttributeInitializationData>  SecondaryStackValues;                              // 0x58(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        bUseReceivedDamageEvent : 1;                       // Mask: 0x1, PropSize: 0x10x68(0x1)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseCausedDamageEvent : 1;                         // Mask: 0x2, PropSize: 0x10x68(0x1)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCallReceievedDamageEventForBarrierDamage : 1;     // Mask: 0x4, PropSize: 0x10x68(0x1)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_266 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6D41[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FShieldAugmentDamageEventData         ReceivedDamageEventData;                           // 0x70(0x48)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FShieldAugmentDamageEventData         CausedDamageEventData;                             // 0xB8(0x48)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class FName                                  AugmentName;                                       // 0x100(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment* GetDefaultObj();

	void StartAugmentCooldown(class AShield* Shield, struct FAugmentData& StackData, float CooldownDuration);
	void SetDelay(class AShield* Shield, struct FAugmentData& StackData, float Delay, class FName DelayName);
	void K2_OnWeaponShotModified(class AShield* Shield, struct FAugmentData& StackData, class AWeapon* Weapon, struct FWeaponShotModifierData& Data);
	void K2_OnWeaponChanged(class AShield* Shield, struct FAugmentData& StackData, class AWeapon* Weapon, class AWeapon* LastWeapon);
	void K2_OnShieldUnequipped(class AShield* Shield, class AOakCharacter* Equipper, struct FAugmentData& StackData);
	void K2_OnShieldNotFilled(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData& StackData);
	void K2_OnShieldNotDepleted(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData& StackData);
	void K2_OnShieldFilled(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData& StackData);
	void K2_OnShieldEquipped(class AShield* Shield, class AOakCharacter* Equipper, struct FAugmentData& StackData);
	void K2_OnShieldDepleted(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData& StackData);
	void K2_OnShieldBeginPlay(class AShield* Shield, struct FAugmentData& StackData);
	void K2_OnShieldAbsorbedDamage(class AShield* Shield, struct FAugmentData& StackData, class UDamageSource* DamageSource, class UGbxDamageType* DamageType);
	void K2_OnReplicatedEffectTriggered(class AShield* Shield, struct FAugmentData& StackData, class UObject* AdditionalContext);
	void K2_OnDamageTaken(class AShield* Shield, struct FAugmentData& StackData, class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, struct FReceivedDamageDetails& Details);
	void K2_OnCausedDamage(class AShield* Shield, struct FAugmentData& StackData, class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void K2_OnBarrierEnd(class AActor* BarrierActor, class AShield* Shield, struct FAugmentData& StackData);
	void K2_NativeDelayCallback(class AShield* Shield, struct FAugmentData& StackData, class FName DelayName);
	float GetValueFromStackCount(struct FAugmentData& StackData, bool bPrimary);
};

// 0x98 (0x1A0 - 0x108)
// Class OakGame.ShieldAugment_Absorb
class UShieldAugment_Absorb : public UShieldAugment
{
public:
	class UWwiseEvent*                           AbsorbSound;                                       // 0x108(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       AbsorbParticles;                                   // 0x110(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ParticleAttachSocket;                              // 0x118(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxAttributeData*                     LoadedWeaponAmmoAttribute;                         // 0x120(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxAttributeData*                     WeaponMaxAmmoAttribute;                            // 0x128(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponSlotData*                       WeaponSlot;                                        // 0x130(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxAttributeData*                     ShieldAbsorbChanceAttribute;                       // 0x138(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameStatData*                         AbsorbStat;                                        // 0x140(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseRestoreData;                                   // 0x148(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D42[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FShieldAugmentAbsorbRestoreData       ShieldRestoreData;                                 // 0x150(0x50)(Edit, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment_Absorb* GetDefaultObj();

};

// 0x10 (0x118 - 0x108)
// Class OakGame.ShieldAugment_Adaptive
class UShieldAugment_Adaptive : public UShieldAugment
{
public:
	TArray<struct FAdaptiveTypeAssociations>     DamageTypeAssociations;                            // 0x108(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment_Adaptive* GetDefaultObj();

};

// 0x20 (0x128 - 0x108)
// Class OakGame.ShieldAugment_Amp
class UShieldAugment_Amp : public UShieldAugment
{
public:
	class UWeaponShotModifier*                   ShotModifier;                                      // 0x108(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           AmpShotAudio;                                      // 0x110(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           AmpReadyAudioStart;                                // 0x118(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           AmpReadyAudioStop;                                 // 0x120(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment_Amp* GetDefaultObj();

};

// 0x90 (0x198 - 0x108)
// Class OakGame.ShieldAugment_Attribute
class UShieldAugment_Attribute : public UShieldAugment
{
public:
	TArray<struct FAttributeModifiers>           OnEquippedAttributeModifiers;                      // 0x108(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           OnEquippedAudioEvent;                              // 0x118(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTurnOffEquippedAudio;                             // 0x120(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D43[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeModifiers>           OnFilledAttributeModifiers;                        // 0x128(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           OnFilledAudioEvent;                                // 0x138(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTurnOffFilledAudio;                               // 0x140(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D44[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeModifiers>           OnNotDepletedAttributeModifiers;                   // 0x148(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           OnNotDepletedAudioEvent;                           // 0x158(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTurnOffNotDepletedAudio;                          // 0x160(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D45[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeModifiers>           OnDepletedAttributeModifiers;                      // 0x168(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           OnDepletedAudioEvent;                              // 0x178(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTurnOffDepletedAudio;                             // 0x180(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyDefaultEffectsToPlayersInAura;               // 0x181(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyEffectsToBarrier;                            // 0x182(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D46[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeModifiers>           PersistentAuraAttributeModifiers;                  // 0x188(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment_Attribute* GetDefaultObj();

};

// 0x58 (0x160 - 0x108)
// Class OakGame.ShieldAugment_ChargeSpawner
class UShieldAugment_ChargeSpawner : public UShieldAugment
{
public:
	float                                        SpawnCooldown;                                     // 0x108(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D47[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     AttributeToModify;                                 // 0x110(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGbxAttributeModifierType         ModifierType;                                      // 0x118(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D48[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ModifierDuration;                                  // 0x11C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           PickupMesh;                                        // 0x120(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            PickupMeshMaterials;                               // 0x128(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MeshScalar;                                        // 0x138(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D49[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           SpawnAudioEvent;                                   // 0x140(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           PickupAudioEvent;                                  // 0x148(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemPoolListData*                     ItemPoolList;                                      // 0x150(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULootSpawnPatternData*                 SpawnPattern;                                      // 0x158(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment_ChargeSpawner* GetDefaultObj();

};

// 0x8 (0x110 - 0x108)
// Class OakGame.ShieldAugment_Triggerable
class UShieldAugment_Triggerable : public UShieldAugment
{
public:
	enum class EAugmentTriggerOn                 TriggerableOn;                                     // 0x108(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUntriggerable;                                    // 0x109(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAugmentTriggerOn                 UntriggerableOn;                                   // 0x10A(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetOnOpposingTrigger;                           // 0x10B(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D4A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UShieldAugment_Triggerable* GetDefaultObj();

	void K2_UntriggerEffect(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData& StackData);
	void K2_TriggerEffect(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData& StackData);
};

// 0x1A8 (0x2B8 - 0x110)
// Class OakGame.ShieldAugment_Damage
class UShieldAugment_Damage : public UShieldAugment_Triggerable
{
public:
	TSubclassOf<class UOakDamageData>            DamageData;                                        // 0x110(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ScreenParticles;                                   // 0x118(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          DamageOverride;                                    // 0x120(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxDamageType>            DamageTypeOverride;                                // 0x158(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDamageSource>             DamageSourceOverride;                              // 0x160(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExplosionData*                        ExplosionDataOverride;                             // 0x168(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FForceSelection                       ImpactDataOverride;                                // 0x170(0x20)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DamageDelay;                                       // 0x190(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCausePersistentDamageOnEquip;                     // 0x194(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D4B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           PreDelayAudioEvent;                                // 0x198(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           DamageAudioEvent;                                  // 0x1A0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseSingularity;                                   // 0x1A8(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D4C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          SingularityRadius;                                 // 0x1B0(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        BarrierSingularityOffset;                          // 0x1E8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D4D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSingularityInitializationInfo        SingularityInfo;                                   // 0x1F0(0xC8)(Edit, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment_Damage* GetDefaultObj();

};

// 0x10 (0x120 - 0x110)
// Class OakGame.ShieldAugment_DamageModifier
class UShieldAugment_DamageModifier : public UShieldAugment_Triggerable
{
public:
	class UConditionalDamageModifier*            DamageModifier;                                    // 0x110(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EShieldDamageModifierApplicationTarget ApplicationTarget;                                 // 0x118(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseModifierDuration;                              // 0x119(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D4E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UShieldAugment_DamageModifier* GetDefaultObj();

};

// 0xA8 (0x1B0 - 0x108)
// Class OakGame.ShieldAugment_Projected
class UShieldAugment_Projected : public UShieldAugment
{
public:
	class UStaticMesh*                           Mesh;                                              // 0x108(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            ParticleSystemTransform;                           // 0x110(0x30)(Edit, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UParticleSystem*                       Template_OpenAndLoop;                              // 0x140(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       Template_Close;                                    // 0x148(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       Template_Break;                                    // 0x150(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CollisionProfileName;                              // 0x158(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            RelativeTransform;                                 // 0x160(0x30)(Edit, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    Material;                                          // 0x190(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           ProjectedAudio;                                    // 0x198(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           ProjectedStopAudio;                                // 0x1A0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D4F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UShieldAugment_Projected* GetDefaultObj();

};

// 0x10 (0x118 - 0x108)
// Class OakGame.ShieldAugment_Resistance
class UShieldAugment_Resistance : public UShieldAugment
{
public:
	TArray<struct FDamageTypeAttribute>          DamageTypeModifiers;                               // 0x108(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment_Resistance* GetDefaultObj();

};

// 0x140 (0x248 - 0x108)
// Class OakGame.ShieldAugment_Spike
class UShieldAugment_Spike : public UShieldAugment
{
public:
	bool                                         bUseCooldown;                                      // 0x108(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D50[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          Cooldown;                                          // 0x110(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UDamageSource>             TriggeringDamageSource;                            // 0x148(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOakDamageData>            DamageData;                                        // 0x150(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTriggerElementalEffect;                           // 0x158(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D51[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FShieldTriggeredElementalEffect       ElementalEffect;                                   // 0x160(0x80)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bTriggerProjectile;                                // 0x1E0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D52[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FShieldTriggeredProjectileReflectEffect ProjectileEffect;                                  // 0x1E8(0x48)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UEffectCollectionData>     FirstPersonSpikeEffectCollection;                  // 0x230(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpikeParticleAttachPointName;                      // 0x238(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UEffectCollectionData>     ThirdPersonSpikeEffectCollection;                  // 0x240(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugment_Spike* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.ShieldAugmentAspectData
class UShieldAugmentAspectData : public UInventoryAspectData
{
public:
	class UShieldAugment*                        Augment;                                           // 0x38(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldAugmentAspectData* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class OakGame.ShieldAugmentContextResolver
class UShieldAugmentContextResolver : public UAttributeContextResolver
{
public:

	static class UClass* StaticClass();
	static class UShieldAugmentContextResolver* GetDefaultObj();

};

// 0x18 (0x408 - 0x3F0)
// Class OakGame.ShieldBalanceStateComponent
class UShieldBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	TArray<class UShieldAugment*>                ShieldAspects;                                     // 0x3F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UShieldDamageTypeAspectData*           DamageTypeAspect;                                  // 0x400(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldBalanceStateComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.ShieldBarrierInterface
class IShieldBarrierInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IShieldBarrierInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.ShieldBoosterModifierValueResolver
class UShieldBoosterModifierValueResolver : public UAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class UShieldBoosterModifierValueResolver* GetDefaultObj();

};

// 0x30 (0x4D0 - 0x4A0)
// Class OakGame.ShieldBoosterNonAugment
class AShieldBoosterNonAugment : public AOakInventoryItem
{
public:
	class UOakManagedActorDefinition*            ManagedActorDef;                                   // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ModifierValue;                                     // 0x4A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D53[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x4B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           PickupAudioEvent;                                  // 0x4B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           CollisionAudioEvent;                               // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ScreenEffect;                                      // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AShieldBoosterNonAugment* GetDefaultObj();

	void OnShieldChargePickedUp(class AOakCharacter* PickupInstigator);
};

// 0x0 (0x3F0 - 0x3F0)
// Class OakGame.ShieldChargeInventoryBalanceStateComponent
class UShieldChargeInventoryBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:

	static class UClass* StaticClass();
	static class UShieldChargeInventoryBalanceStateComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.ShieldChargeModifierValueResolver
class UShieldChargeModifierValueResolver : public UAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class UShieldChargeModifierValueResolver* GetDefaultObj();

};

// 0x48 (0x4E8 - 0x4A0)
// Class OakGame.ShieldChargeInventoryPickup
class AShieldChargeInventoryPickup : public AOakInventoryItem
{
public:
	class UOakManagedActorDefinition*            ManagedActorDef;                                   // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ModifierValue;                                     // 0x4A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D54[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     AttributeToModify;                                 // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGbxAttributeModifierType         ModifierType;                                      // 0x4B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ModifierDuration;                                  // 0x4BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x4C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           PickupAudioEvent;                                  // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           CollisionAudioEvent;                               // 0x4D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShieldAugment_ChargeSpawner*          ContextAugment;                                    // 0x4D8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ScreenEffect;                                      // 0x4E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AShieldChargeInventoryPickup* GetDefaultObj();

	void OnShieldChargePickedUp(class AOakCharacter* PickupInstigator);
	void OnRep_ContextAugment();
};

// 0x8 (0x40 - 0x38)
// Class OakGame.ShieldDamageTypeAspectData
class UShieldDamageTypeAspectData : public UInventoryAspectData
{
public:
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShieldDamageTypeAspectData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.ShieldProviderInterface
class IShieldProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IShieldProviderInterface* GetDefaultObj();

	bool HasShieldEquipped();
};

// 0x0 (0x90 - 0x90)
// Class OakGame.ShockwaveEffectCollectionData
class UShockwaveEffectCollectionData : public UElementalEffectCollectionData
{
public:

	static class UClass* StaticClass();
	static class UShockwaveEffectCollectionData* GetDefaultObj();

};

// 0x70 (0x340 - 0x2D0)
// Class OakGame.SingularityGrenadeAudioEffectComponent
class USingularityGrenadeAudioEffectComponent : public USceneComponent
{
public:
	class UWwiseAuxBus*                          AuxBus;                                            // 0x2D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseAudioEffect*                     AudioEffect;                                       // 0x2D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            EffectFadeRtpc;                                    // 0x2E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StartEvent;                                        // 0x2E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopEvent;                                         // 0x2F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectSize;                                        // 0x2F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectFadeDistance;                                // 0x2FC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectDuration;                                    // 0x300(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D56[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USingularityGrenadeAudioEffectComponent* GetDefaultObj();

	void StopActiveEffect();
	void SpawnSingularityAudioEffectAtLocation(class UObject* WorldContextObject, class UWwiseAuxBus* EffectAuxBus, const struct FVector& EffectLocation, float Size, float FadeDistance, float Duration, class UWwiseRtpc* FadeDistanceRtpc, class UWwiseEvent* AdditionalStartEvent, class UWwiseEvent* AdditionalStopEvent);
};

// 0x0 (0x28 - 0x28)
// Class OakGame.SingularityPullableInterface
class ISingularityPullableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISingularityPullableInterface* GetDefaultObj();

	void OnSingularityPullEnd(class USingularityComponent* SingularityComponent);
	void OnSingularityPullBegin(class USingularityComponent* SingularityComponent);
	float GetPullScale();
};

// 0x18 (0x550 - 0x538)
// Class OakGame.SkillScreenStandInAnimInstance
class USkillScreenStandInAnimInstance : public UGbxAnimInstance
{
public:
	class AOakCharacter_StandIn*                 StandInCharacter;                                  // 0x538(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsLocked;                                         // 0x540(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D57[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USkillScreenStandInAnimInstance* GetDefaultObj();

};

// 0x8 (0x680 - 0x678)
// Class OakGame.SlaughterGameMode
class ASlaughterGameMode : public AOakGameMode
{
public:
	class ASlaughterGameState*                   SlaughterGameState;                                // 0x678(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASlaughterGameMode* GetDefaultObj();

	void BroadcastRoundComplete(int32 RoundNumber);
	void BroadcastNotAllPlayersAssembled();
	void BroadcastNewWave(bool bBossWave, int32 CountdownDuration);
	void BroadcastNewRound(int32 RoundNumber);
};

// 0x190 (0xBF8 - 0xA68)
// Class OakGame.SlaughterGameState
class ASlaughterGameState : public AOakGameState
{
public:
	class UHUDNotificationAsset*                 SlaughterRoundStartNotificationData;               // 0xA68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 SlaughterNewRoundWaveNotificationData;             // 0xA70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 SlaughterRoundCompletedNotificationData;           // 0xA78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 SlaughterFailedNotificationData;                   // 0xA80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UHUDNotificationAsset*>         SlaughterCountdownNotificationData;                // 0xA88(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 SlaughterNotAllPlayersAssembledNotificationData;   // 0xA98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NewRoundNotificationPriority;                      // 0xAA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D5B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NewRoundNotificationText;                          // 0xAA8(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        NewWaveNotificationPriority;                       // 0xAC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D5C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NewWaveNotificationText;                           // 0xAC8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BossWaveNotificationText;                          // 0xAE0(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        RoundCompleteNotificationPriority;                 // 0xAF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RoundCompleteNotificationText;                     // 0xB00(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        PlayerDiedNotificationPriority;                    // 0xB18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D5E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PlayerDiedNotificationText;                        // 0xB20(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        TeamWipeNotificationPriority;                      // 0xB38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D5F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TeamWipeNotificationText;                          // 0xB40(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        NotAllPlayersAssembledNotificationPriority;        // 0xB58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D60[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NotAllPlayersAssembledNotificationText;            // 0xB60(0x18)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D61[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerDied;                                      // 0xB80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAllPlayersDied;                                  // 0xB90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNewRound;                                        // 0xBA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNewWave;                                         // 0xBB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRoundComplete;                                   // 0xBC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWaveCountdown;                                   // 0xBD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNotAllPlayersAssembled;                          // 0xBE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        WaveCountdown;                                     // 0xBF0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D62[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASlaughterGameState* GetDefaultObj();

	void OnSlaughterWaveCountdown__DelegateSignature(int32 CountdownRemaining);
	void OnSlaughterRoundComplete__DelegateSignature(int32 RoundNumber);
	void OnSlaughterPlayerDied__DelegateSignature(class AOakPlayerState* PlayerState);
	void OnSlaughterNotAllPlayersAssembled__DelegateSignature();
	void OnSlaughterNewWave__DelegateSignature(bool bBossWave, int32 CountdownDuration);
	void OnSlaughterNewRound__DelegateSignature(int32 RoundNumber);
	void OnSlaughterAllPlayersDied__DelegateSignature();
	void BroadcastRoundComplete(int32 RoundNumber);
	void BroadcastPlayerDied(class AOakPlayerState* PlayerState);
	void BroadcastNotAllPlayersAssembled();
	void BroadcastNewWave(bool bBossWave, int32 CountdownDuration);
	void BroadcastNewRound(int32 RoundNumber);
	void BroadcastAllPlayersDied();
};

// 0x8 (0x40 - 0x38)
// Class OakGame.SlideModifierAspectData
class USlideModifierAspectData : public UInventoryAspectData
{
public:
	enum class EOakElementalType                 ElementalType;                                     // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D63[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USlideModifierAspectData* GetDefaultObj();

};

// 0x0 (0x3D8 - 0x3D8)
// Class OakGame.SocialInteractionComponent
class USocialInteractionComponent : public UUsableComponent
{
public:

	static class UClass* StaticClass();
	static class USocialInteractionComponent* GetDefaultObj();

};

// 0x18 (0x470 - 0x458)
// Class OakGame.SoundControllerSensor
class ASoundControllerSensor : public AActor
{
public:
	class ASoundController*                      Aggregator;                                        // 0x458(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         BoxComponent;                                      // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeDistance;                                      // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentValue;                                      // 0x46C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASoundControllerSensor* GetDefaultObj();

};

// 0x68 (0x4C0 - 0x458)
// Class OakGame.SoundController
class ASoundController : public AActor
{
public:
	TArray<class ASoundControllerSensor*>        Sensors;                                           // 0x458(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWwiseRtpc*                            RTPC;                                              // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class AActor*, float>                   Values;                                            // 0x470(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASoundController* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.SpawnableSpellActorInterface
class ISpawnableSpellActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISpawnableSpellActorInterface* GetDefaultObj();

	void SetupSpawnedActor(class AGrenadeMod* OwningSpell);
};

// 0x18 (0x268 - 0x250)
// Class OakGame.SpawnerStyle_Den_Dungeon
class USpawnerStyle_Den_Dungeon : public USpawnerStyle_Den
{
public:
	uint8                                        Pad_6D64[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 AssetGuid;                                         // 0x258(0x10)(DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnerStyle_Den_Dungeon* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class OakGame.SpawnerStyle_Encounter_Dungeon
class USpawnerStyle_Encounter_Dungeon : public USpawnerStyle_Encounter
{
public:
	uint8                                        Pad_6D65[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 AssetGuid;                                         // 0x48(0x10)(DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnerStyle_Encounter_Dungeon* GetDefaultObj();

};

// 0x8 (0x1D0 - 0x1C8)
// Class OakGame.SpawnFactory_Oak
class USpawnFactory_Oak : public USpawnFactory_Generic
{
public:
	bool                                         bCopyRegionDataToSpawnedActors;                    // 0x1C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D66[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpawnFactory_Oak* GetDefaultObj();

};

// 0x40 (0x210 - 0x1D0)
// Class OakGame.SpawnFactory_Lootable
class USpawnFactory_Lootable : public USpawnFactory_Oak
{
public:
	TSoftClassPtr<class ALootableObject>         LootableActorClass;                                // 0x1D0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLockOnSpawn;                                      // 0x1F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D67[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         UnlockCondition;                                   // 0x200(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULootableBalanceData*                  LootableBalanceDataOverride;                       // 0x208(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USpawnFactory_Lootable* GetDefaultObj();

};

// 0xC8 (0x298 - 0x1D0)
// Class OakGame.SpawnFactory_OakAI
class USpawnFactory_OakAI : public USpawnFactory_Oak
{
public:
	TSoftClassPtr<class AOakCharacter>           AIActorClass;                                      // 0x1D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemPoolListInterface*                ItemPoolToDropOnDeath;                             // 0x1F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         ItemPoolToDropOnDeathAdditive;                     // 0x200(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EItemDropOnDeathType              ItemPoolDropOnDeathType;                           // 0x201(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOverrideEquippedItems;                            // 0x202(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D68[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FItemPoolCollection                   CustomItemCollectionToEquip;                       // 0x208(0x20)(Deprecated, NativeAccessSpecifierPrivate)
	TArray<struct FItemPoolCollection>           CustomItemCollectionsToEquip;                      // 0x228(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bEquipSingleItemFromCollection;                    // 0x238(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D69[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxUIName*                            UINameOverride;                                    // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTeam*                                 TeamOverride;                                      // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGestaltPartListData*                  GestaltPartListDataOverride;                       // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDialogNameTag*                        DialogNameTagOverride;                             // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSpawnFactorKeyedAction               KeyedActions;                                      // 0x260(0x38)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnFactory_OakAI* GetDefaultObj();

};

// 0x8 (0x2A0 - 0x298)
// Class OakGame.SpawnFactory_OakAIOverworld
class USpawnFactory_OakAIOverworld : public USpawnFactory_OakAI
{
public:
	TSubclassOf<class AOakCharacter>             AIActorClassHardRef;                               // 0x298(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USpawnFactory_OakAIOverworld* GetDefaultObj();

};

// 0x28 (0x1F8 - 0x1D0)
// Class OakGame.SpawnFactory_OakInteractiveObject
class USpawnFactory_OakInteractiveObject : public USpawnFactory_Oak
{
public:
	TSoftClassPtr<class AInteractiveObject>      InteractiveObjectClass;                            // 0x1D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnFactory_OakInteractiveObject* GetDefaultObj();

};

// 0x30 (0x200 - 0x1D0)
// Class OakGame.SpawnFactory_OakItemPickup
class USpawnFactory_OakItemPickup : public USpawnFactory_Oak
{
public:
	TSoftClassPtr<class AOakInventoryItemPickup> PickupActorClass;                                  // 0x1D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemPoolData*                         ItemPoolToDropFrom;                                // 0x1F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnFactory_OakItemPickup* GetDefaultObj();

};

// 0x28 (0x1F8 - 0x1D0)
// Class OakGame.SpawnFactory_OakProjectile
class USpawnFactory_OakProjectile : public USpawnFactory_Oak
{
public:
	TSoftClassPtr<class AOakProjectile>          ProjectileClass;                                   // 0x1D0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USpawnFactory_OakProjectile* GetDefaultObj();

};

// 0x30 (0x200 - 0x1D0)
// Class OakGame.SpawnFactory_OakTurret
class USpawnFactory_OakTurret : public USpawnFactory_Oak
{
public:
	class USpawnFactory*                         SeatFactory;                                       // 0x1D0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class ATurretSeatPawn>         TurretActorClass;                                  // 0x1D8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnFactory_OakTurret* GetDefaultObj();

};

// 0x38 (0x208 - 0x1D0)
// Class OakGame.SpawnFactory_OakVehicle
class USpawnFactory_OakVehicle : public USpawnFactory_Oak
{
public:
	bool                                         bDigistructOnSpawn;                                // 0x1D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowScanningOnCAR;                               // 0x1D1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCannotWorldTravel;                                // 0x1D2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D6A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryBalanceData*                 InventoryBalanceData;                              // 0x1D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AOakVehicle>               VehicleActorClass;                                 // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USpawnFactory*>                 SeatFactories;                                     // 0x1E8(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bForceDontDespawnWhenNoOccupant;                   // 0x1F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bForceKeepAssociatedToSpawner;                     // 0x1F9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D6B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxUIName*                            UINameOverride;                                    // 0x200(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnFactory_OakVehicle* GetDefaultObj();

};

// 0x0 (0xF8 - 0xF8)
// Class OakGame.VehiclePartSetData
class UVehiclePartSetData : public UInventoryPartSetData
{
public:

	static class UClass* StaticClass();
	static class UVehiclePartSetData* GetDefaultObj();

};

// 0x88 (0x290 - 0x208)
// Class OakGame.SpawnFactory_OakVehicleBuilder
class USpawnFactory_OakVehicleBuilder : public USpawnFactory_OakVehicle
{
public:
	TSubclassOf<class AOakVehicle>               VehicleClass;                                      // 0x208(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowArchetypePartOnly;                            // 0x210(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D6C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehiclePartListData>          VehiclePartLists;                                  // 0x218(0x10)(Edit, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UInventoryBalanceData*                 PartListBalanceData;                               // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActorPartSetData*                     PartSetData;                                       // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSeatOccupant>                 SeatList;                                          // 0x238(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class USpawnOptionData*                      DefaultSpawnOptions;                               // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRandomizePassengerCount;                          // 0x250(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D6D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInt32Interval                        RandomizePassengerCount;                           // 0x254(0x8)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeightedPassengersNum;                            // 0x25C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D6E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeightedPassengersNum>        WeightedPassengersNum;                             // 0x260(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UEnum*                                 PartTypeEnum;                                      // 0x270(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehiclePartSetData*                   CustomVehicleInventoryPartSetData;                 // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryData*                        CustomInventoryData;                               // 0x280(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryBalanceData*                 CustomVehicleInventoryBalanceData;                 // 0x288(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnFactory_OakVehicleBuilder* GetDefaultObj();

};

// 0x10 (0x218 - 0x208)
// Class OakGame.SpawnFactory_OakVehicleRandomSeats
class USpawnFactory_OakVehicleRandomSeats : public USpawnFactory_OakVehicle
{
public:
	TArray<struct FSpawnFactoryDataArray>        SeatOptions;                                       // 0x208(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USpawnFactory_OakVehicleRandomSeats* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class OakGame.SpawnLootManager
class USpawnLootManager : public UObject
{
public:
	uint8                                        Pad_6D6F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnDroppedPickupLootRequestEntry> DroppedPickupRequests;                             // 0x48(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FSpawnInventoryLootRequestEntry> InventoryActorRequests;                            // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AOakInventoryItemPickup*>       PickupsHiddenWhileInStatusMenu;                    // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D70[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakInventoryItemPickup*>       PickupsHiddenInCinematic;                          // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnLootManager* GetDefaultObj();

	void OnNumPlayersChanged(int32 NewNumPlayers);
};

// 0x8 (0x460 - 0x458)
// Class OakGame.SpawnPerformance_Skeletal
class ASpawnPerformance_Skeletal : public APrototypeActor
{
public:
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASpawnPerformance_Skeletal* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class OakGame.SpawnPerformance_SkeletalWithReference
class ASpawnPerformance_SkeletalWithReference : public ASpawnPerformance_Skeletal
{
public:

	static class UClass* StaticClass();
	static class ASpawnPerformance_SkeletalWithReference* GetDefaultObj();

};

// 0x50 (0x4A8 - 0x458)
// Class OakGame.SpawnPerformance_10SMC
class ASpawnPerformance_10SMC : public APrototypeActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent1;                              // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent2;                              // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent3;                              // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent4;                              // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent5;                              // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent6;                              // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent7;                              // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent8;                              // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent9;                              // 0x4A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASpawnPerformance_10SMC* GetDefaultObj();

};

// 0x0 (0x4A8 - 0x4A8)
// Class OakGame.SpawnPerformance_10SMCWithReferences
class ASpawnPerformance_10SMCWithReferences : public ASpawnPerformance_10SMC
{
public:

	static class UClass* StaticClass();
	static class ASpawnPerformance_10SMCWithReferences* GetDefaultObj();

};

// 0x50 (0x4A8 - 0x458)
// Class OakGame.SpawnPerformance_10Components
class ASpawnPerformance_10Components : public APrototypeActor
{
public:
	class UBalanceStateComponent*                BalanceStateComponent;                             // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakDamageComponent*                   DamageReceiverComponent;                           // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UElementalInteractionComponent*        ElementalInteractionComponent;                     // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakMissionIconComponent*              OakMissionIconComponent;                           // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ParticleSystemComponent;                           // 0x478(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URotatingMovementComponent*            RotatingMovementComponent;                         // 0x480(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUsableComponent*                      UsableComponent;                                   // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseAudioComponent*                  WwiseAudioComponent;                               // 0x4A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASpawnPerformance_10Components* GetDefaultObj();

};

// 0x0 (0x4A8 - 0x4A8)
// Class OakGame.SpawnPerformance_10ComponentsWithReferences
class ASpawnPerformance_10ComponentsWithReferences : public ASpawnPerformance_10Components
{
public:

	static class UClass* StaticClass();
	static class ASpawnPerformance_10ComponentsWithReferences* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class OakGame.SpellBehavior_Multi
class USpellBehavior_Multi : public USpellBehavior_Payload
{
public:
	float                                        SpawnDelay;                                        // 0x48(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D71[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpellBehavior_Multi* GetDefaultObj();

};

// 0xA8 (0xF8 - 0x50)
// Class OakGame.SpellBehavior_MultiCone
class USpellBehavior_MultiCone : public USpellBehavior_Multi
{
public:
	struct FAttributeInitializationData          SpreadAngle;                                       // 0x50(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          RotateAngle;                                       // 0x88(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          OriginOffset;                                      // 0xC0(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpellBehavior_MultiCone* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class OakGame.SpellBehavior_MultiCustom
class USpellBehavior_MultiCustom : public USpellBehavior_Multi
{
public:

	static class UClass* StaticClass();
	static class USpellBehavior_MultiCustom* GetDefaultObj();

	TArray<struct FSpellSpawnInfo> GetCustomSpellSpawnInfo(class AGrenadeMod* GrenadeMod, class AOakCharacter_Player* EquippedPlayer, int32 MaxSpawnCount, const struct FTransform& OverrideInitialTransform);
};

// 0xC8 (0x118 - 0x50)
// Class OakGame.SpellBehavior_MultiEQS
class USpellBehavior_MultiEQS : public USpellBehavior_Multi
{
public:
	struct FEnvQueryParams                       TargetSearchQuery;                                 // 0x50(0xB8)(Edit, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bTargetActors;                                     // 0x108(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D73[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TargetSocket;                                      // 0x110(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpellBehavior_MultiEQS* GetDefaultObj();

};

// 0xA8 (0xF8 - 0x50)
// Class OakGame.SpellBehavior_MultiFan
class USpellBehavior_MultiFan : public USpellBehavior_Multi
{
public:
	struct FAttributeInitializationData          SpreadAngle;                                       // 0x50(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          RotateAngle;                                       // 0x88(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          OriginOffset;                                      // 0xC0(0x38)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpellBehavior_MultiFan* GetDefaultObj();

};

// 0x48 (0x4E8 - 0x4A0)
// Class OakGame.SpellLightProjectile
class USpellLightProjectile : public UOakLightProjectile
{
public:
	uint8                                        Pad_6D74[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnableSpellBasicData              SpellData;                                         // 0x4A8(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USpellLightProjectile* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class OakGame.SpellModContextResolver
class USpellModContextResolver : public UAttributeContextResolver
{
public:
	enum class ESpellContext                     CheckContext;                                      // 0x50(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D75[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpellModContextResolver* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class OakGame.SpellPayload_DamageSource
class USpellPayload_DamageSource : public USpellBehavior_Payload
{
public:
	TSubclassOf<class UDamageData>               DamageData;                                        // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitialDamageDelay;                                // 0x50(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D76[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpellPayload_DamageSource* GetDefaultObj();

};

// 0xC8 (0x240 - 0x178)
// Class OakGame.SpellDuplicationComponent
class USpellDuplicationComponent : public UActorComponent
{
public:
	class AOakCharacter_Player*                  SpellOwner;                                        // 0x178(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SpellFireSocket;                                   // 0x180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDamageType>               DuplicatedDamageType;                              // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpellAttributeModifier>       SpellModifiers;                                    // 0x190(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ULightBeam>             ActiveBeam;                                        // 0x1A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ULightBeam>             ActiveDoubleCastBeam;                              // 0x1A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxAttributeModifierHandle>   ActiveModifierHandles;                             // 0x1B0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTargetingComponent*                   OwnerTargetingComp;                                // 0x1C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D78[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpellDuplicationComponent* GetDefaultObj();

	void SpellCastStopped(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void SpellCastStarted(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void SetSpellOwner(class AOakCharacter_Player* InSpellOwner);
	void SetOwnerTargetingComponent(class UTargetingComponent* TargetingComp);
	void OnSpellStopped(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellStarted(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellCastStopped(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer);
	void OnSpellCastStarted(class AGrenadeMod* SpellMod, class AOakCharacter_Player* EquippedPlayer, const struct FTransform& SpellTransform, const struct FVector& SpawnLocationOverride, bool SpellOwnerCausesDamage);
};

// 0x10 (0x700 - 0x6F0)
// Class OakGame.SplatCollisionComponent
class USplatCollisionComponent : public UPrimitiveComponent
{
public:
	class USplatData*                            SplatDataAsset;                                    // 0x6F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D79[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USplatCollisionComponent* GetDefaultObj();

};

// 0x60 (0x4B8 - 0x458)
// Class OakGame.Splat
class ASplat : public AActor
{
public:
	class USplatData*                            SplatDataAsset;                                    // 0x458(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SizeScale;                                         // 0x460(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDecalComponent*                       SplatDecal;                                        // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              SplatDecalMID;                                     // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDecalComponent*                       GroundingDecal;                                    // 0x478(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              GroundingDecalMID;                                 // 0x480(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ParticleSystem;                                    // 0x488(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplatCollisionComponent*              OverlapCollision;                                  // 0x490(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalInteractionComponent*        ElementalInteraction;                              // 0x498(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseAudioComponent*                  Audio;                                             // 0x4A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D7B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASplat* GetDefaultObj();

	void InitializeSplat();
};

// 0x0 (0x350 - 0x350)
// Class OakGame.SplatDamageData
class USplatDamageData : public UOakDamageData
{
public:

	static class UClass* StaticClass();
	static class USplatDamageData* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class OakGame.SplatData
class USplatData : public UGbxDataAsset
{
public:
	uint8                                        bUseGroundingDecal : 1;                            // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseSplatDecalMaterialArray : 1;                   // Mask: 0x2, PropSize: 0x10x30(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideDamageData : 1;                           // Mask: 0x4, PropSize: 0x10x30(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceDamageToPlayerControlled : 1;                // Mask: 0x8, PropSize: 0x10x30(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideDamageAmount : 1;                         // Mask: 0x10, PropSize: 0x10x30(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseGroundingDecalDeathDelay : 1;                  // Mask: 0x20, PropSize: 0x10x30(0x1)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_267 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6D7C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BirthDuration;                                     // 0x34(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BirthOpacity;                                      // 0x38(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BirthRadius;                                       // 0x3C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BirthEffect;                                       // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BirthAudio;                                        // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    GroundingDecalMaterial;                            // 0x50(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    SplatDecalMaterial;                                // 0x58(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            SplatDecalMaterialArray;                           // 0x60(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UParticleSystem*                       Effect;                                            // 0x70(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x78(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Opacity;                                           // 0x7C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x80(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BonusDecalScalePercent;                            // 0x84(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USplatDamageData>          DamageDataOverride;                                // 0x88(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageScalar;                                      // 0x90(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttitudeDamageRules                  AttitudeDamageRules;                               // 0x94(0x4)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          DamageOverride;                                    // 0x98(0x38)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UElementalInteractionData*             ElementalInteraction;                              // 0xD0(0x8)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathDuration;                                     // 0xD8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathOpacity;                                      // 0xDC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathRadius;                                       // 0xE0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D7D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           DeathAudio;                                        // 0xE8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroundingDecalDeathDelay;                          // 0xF0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D7E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBodySetup*                            OverlapBodySetup;                                  // 0xF8(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D7F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USplatData* GetDefaultObj();

};

// 0xA0 (0x218 - 0x178)
// Class OakGame.SplineFollowerComponent
class USplineFollowerComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnReachedEndOfSpline;                              // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReachedCallbackInputKey;                         // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReachedCallbackDistance;                         // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        CallbackInputKey;                                  // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D80[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSplineFollowerDistanceCheckpoint> CallbackDistancesOnSpline;                         // 0x1B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x1C0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseMinSpeed;                                      // 0x1C4(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D81[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinSpeed;                                          // 0x1C8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x1CC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnRate;                                          // 0x1D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoStart;                                        // 0x1D4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D82[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForwardLookUpDistance;                             // 0x1D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OnSplineDistanceDelta;                             // 0x1DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OnSplineYawDelta;                                  // 0x1E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D83[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      SplineComponent;                                   // 0x1E8(0x8)(Edit, ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D84[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentSpeed;                                      // 0x1F8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CurrentDistanceOnSpline;                           // 0x1FC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMoving;                                           // 0x200(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOnSpline;                                         // 0x201(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReverse;                                          // 0x202(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D85[0x15];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USplineFollowerComponent* GetDefaultObj();

	void TelportToPositionOnSpline(float Percent);
	bool Stop();
	bool Start();
	void SnapToSpline();
	void SetSplineComponent(class USplineComponent* Spline);
	void SetDirection(bool bSetReverse);
	void OnRep_SplineComponent();
	bool IsMoving();
	class USplineComponent* GetSplineComponent();
	struct FVector GetLocationAhead(float AheadDistance);
	bool GetDirection();
	float GetCurrentDistanceOnSpline();
};

// 0x60 (0x220 - 0x1C0)
// Class OakGame.SplineMovementComponent
class USplineMovementComponent : public UMovementComponent
{
public:
	class AActor*                                SplineComponentHolder;                             // 0x1C0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SplineComponentNameSelected;                       // 0x1C8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartDistance;                                     // 0x1D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x1D4(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeed;                                          // 0x1D8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LinearDamping;                                     // 0x1DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityZ;                                          // 0x1E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationAngleThreshold;                        // 0x1E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SleepThresholdMaxTime;                             // 0x1E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SleepThreshold;                                    // 0x1EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreCollisionWhenMoving : 1;                    // Mask: 0x1, PropSize: 0x10x1F0(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_268 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6D86[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OffsetFromSpline;                                  // 0x1F4(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityCurrent;                                   // 0x200(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseThisFrameAccumulator;                       // 0x204(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentDistanceAlongSpline;                        // 0x208(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D87[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeWithinSleepThreshold;                          // 0x218(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D88[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USplineMovementComponent* GetDefaultObj();

	void SwitchSpline(class AActor* NewSplineComponentHolder, class FName NewSplineName);
	void SetStartingDistanceOnSpline(float DistanceOnSpline);
	void OnRep_SplineComponentHolder();
	void OnRep_Impulse();
	class USplineComponent* GetSplineComponent();
};

// 0x28 (0x248 - 0x220)
// Class OakGame.SplineMovementComponentDoubleLinked
class USplineMovementComponentDoubleLinked : public USplineMovementComponent
{
public:
	class AActor*                                CartInFront;                                       // 0x220(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                CartBehind;                                        // 0x228(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromCartInFront;                           // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromCartBehind;                            // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D89[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USplineMovementComponentDoubleLinked* GetDefaultObj();

};

// 0x128 (0x580 - 0x458)
// Class OakGame.StandInAuxiliaryActor
class AStandInAuxiliaryActor : public AActor
{
public:
	class UGbxActionComponent*                   ActionComponent;                                   // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxCustomizationComponent*            CustomizationComponent;                            // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                MeshComponent;                                     // 0x468(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D8B[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxSkeletalMeshComponent*             HeadMeshReference;                                 // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       CachedHeadMeshParent;                              // 0x510(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D8C[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWantsFadeInCoordinatedEffects;                    // 0x550(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D8D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryBalanceData*                 EquippedWeaponData;                                // 0x558(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EquippedWeaponSocket;                              // 0x560(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquippedWeaponScale;                               // 0x568(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D8E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AWeapon*                               EquippedWeaponInstance;                            // 0x570(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D8F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AStandInAuxiliaryActor* GetDefaultObj();

	void SetHidden(bool bNewHidden, class FName Reason);
	void OnReceivedClonedWeaponAppearance(class USceneComponent* BaseComponent);
	class AOakCharacter_StandIn* GetOwningStandIn();
	class AOakCharacter_Player* GetOwningPlayer();
};

// 0x0 (0x580 - 0x580)
// Class OakGame.StandInAuxiliaryActor_Pet
class AStandInAuxiliaryActor_Pet : public AStandInAuxiliaryActor
{
public:

	static class UClass* StaticClass();
	static class AStandInAuxiliaryActor_Pet* GetDefaultObj();

};

// 0x0 (0x440 - 0x440)
// Class OakGame.StandInAuxiliaryActorAnimInstance
class UStandInAuxiliaryActorAnimInstance : public UAnimInstance
{
public:

	static class UClass* StaticClass();
	static class UStandInAuxiliaryActorAnimInstance* GetDefaultObj();

};

// 0x188 (0x300 - 0x178)
// Class OakGame.StandInCharacterComponent
class UStandInCharacterComponent : public UActorComponent
{
public:
	uint8                                        Pad_6D90[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                SkillScreenUnlockAnimation;                        // 0x1A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnlockAnimationDelay;                              // 0x1B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnlockedAnimStateDelay;                            // 0x1B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMeleeWeaponAttachmentData            MeleeWeaponAttachmentData;                         // 0x1B8(0x40)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bShowMeleeWeaponOnCharacterCreate;                 // 0x1F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowMeleeWeaponOnCharacterSelect;                 // 0x1F9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D91[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter_StandIn*                 Character;                                         // 0x218(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter_Player*                  OwningPlayer;                                      // 0x220(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AStandInAuxiliaryActor*>        AuxiliaryActors;                                   // 0x228(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UGbxDataAsset*                         LastSlottedItem;                                   // 0x238(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D92[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakPlayerAbilitySaveGameData         AbilityData;                                       // 0x248(0xA8)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6D93[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStandInCharacterComponent* GetDefaultObj();

	void OnAuxiliaryActorDestroyed(class AActor* Actor);
};

// 0x558 (0x588 - 0x30)
// Class OakGame.StandInGlobals
class UStandInGlobals : public UGbxDataAsset
{
public:
	class UDataTable*                            StandInDataTable;                                  // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            RuntimeReplacementStandInDataTable;                // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOnCE;                                       // 0x40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInQuickOnCE;                                  // 0x68(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOffCE;                                      // 0x90(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInQuickOffCE;                                 // 0xB8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> ProjectedStandInLoopCE;                            // 0xE0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOffCE_Head;                                 // 0x108(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOnCE_Head;                                  // 0x130(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOffCE_Head_Vertical;                        // 0x158(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOnCE_Head_Vertical;                         // 0x180(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOffCE_Body;                                 // 0x1A8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOnCE_Body;                                  // 0x1D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOffCE_InnerOutline;                         // 0x1F8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGbxAction_CoordinatedEffect> StandInOnCE_InnerOutline;                          // 0x220(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInventoryBalanceData>  DefaultWeaponSkinWeaponData;                       // 0x248(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalsStandInSettings               FullScreenSettings;                                // 0x270(0x70)(Edit, NativeAccessSpecifierPublic)
	struct FGlobalsStandInSettings               SplitScreenSettings;                               // 0x2E0(0x70)(Edit, NativeAccessSpecifierPublic)
	struct FGlobalsStandInSettings               VerticalSplitScreenSettings;                       // 0x350(0x70)(Edit, NativeAccessSpecifierPublic)
	struct FGlobalsStandInSettings               QuadSplitScreenSettings;                           // 0x3C0(0x70)(Edit, NativeAccessSpecifierPublic)
	int32                                        PlayerLevelToShowActionSkillsOnStandIns;           // 0x430(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandingStandinDelayAfterFrontendEmote;            // 0x434(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandingStandinDelayAfterFrontendInspect;          // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandInReturnToInspectRotationInterpSpeed;         // 0x43C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandInListSelectionChangeDelay;                   // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D94[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFrontendStandInSlotSettings          FrontendSlotSettings[0x4];                         // 0x448(0x140)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UStandInGlobals* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.StandInConfigLibrary
class UStandInConfigLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UStandInConfigLibrary* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.StatusEffectEventProviderInterface
class IStatusEffectEventProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IStatusEffectEventProviderInterface* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.StatusEffectStackingStrategyData_OakElemental
class UStatusEffectStackingStrategyData_OakElemental : public UStatusEffectStackingStrategyData
{
public:

	static class UClass* StaticClass();
	static class UStatusEffectStackingStrategyData_OakElemental* GetDefaultObj();

};

// 0x48 (0x878 - 0x830)
// Class OakGame.StreamerLootableObject
class AStreamerLootableObject : public ALootableObject
{
public:
	class FString                                FirstDonor;                                        // 0x830(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LargestDonor;                                      // 0x840(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LargestDonationAmount;                             // 0x850(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6D95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakMissionIconComponent*              ChestWaypoint;                                     // 0x858(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DonationTier;                                      // 0x860(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D96[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInWorldIconData*                      ChestWorldIconData;                                // 0x868(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChestWaypointVerticalOffset;                       // 0x870(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D97[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AStreamerLootableObject* GetDefaultObj();

	void TriggerShowEffectSlideout(class AOakPlayerController* OakPC);
	void OnShowEffectSlideout(class AOakPlayerController* OakPC);
};

// 0x58 (0x80 - 0x28)
// Class OakGame.StreamingEncounterCoordinator
class UStreamingEncounterCoordinator : public UObject
{
public:
	uint8                                        Pad_6D9C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UStreamingEncounterBase*>       Encounters;                                        // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6D9D[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStreamingEncounterCoordinator* GetDefaultObj();

	void SwitchToEncounterUsingSpawnPoints(class UStreamingEncounterBase* Encounter, const TArray<class AActor*>& OverrideSpawnPoints);
	void SwitchToEncounter(class UStreamingEncounterBase* Encounter);
	void StartEncounterLoad(class UStreamingEncounterBase* Encounter);
	bool SetEncounterVisibility(class UStreamingEncounterBase* Encounter, bool bVisible, class FName MilestoneOnComplete, class FName OnlyThisLoadItemMap);
	class UStreamingEncounterBase* GetStreamingEncounterForActor(class AActor* Actor);
	class UStreamingEncounterCoordinator* GetStreamingEncounterCoordinator(class UObject* WorldContextObject);
	void EndEncounter(class UStreamingEncounterBase* Encounter);
	void DestroyEncounter(class UStreamingEncounterBase*& Encounter);
	void DeactivateEncounter(class UStreamingEncounterBase* Encounter);
	class UStreamingEncounterBase* CreateEncounter(class UStreamingEncounterDataBase* EncounterData, bool bHighPriority, const struct FTransform& LevelTransform, int32 ForceSeed, bool bStartActive);
	void CleanUpEncounter(class UStreamingEncounterBase* Encounter);
	void ActivateMilestone(class UStreamingEncounterBase* Encounter, class FName MilestoneName);
	void ActivateEncounter(class UStreamingEncounterBase* Encounter);
};

// 0xA0 (0x4F8 - 0x458)
// Class OakGame.StreamingEventDispatcher
class AStreamingEventDispatcher : public AActor
{
public:
	class AGbxCharacter*                         EventEnemy;                                        // 0x458(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakMissionIconComponent*              EnemyWaypoint;                                     // 0x460(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxUIName*                            EnemyUIName;                                       // 0x468(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakPlayerController*                  PlayerOwner;                                       // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakStreamingInteractionEvent_EnemySpawn* EnemySpawnEventRef;                                // 0x478(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedEnemy;                                      // 0x480(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorSpawned;                                    // 0x488(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorDied;                                       // 0x498(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorSuspend;                                    // 0x4A8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DA0[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AStreamingEventDispatcher* GetDefaultObj();

	void ValidEnemySuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void ValidEnemyDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void SetEventEnemyName(const class FString& NewEnemyName);
	void SetEventEnemy(class AGbxCharacter* Enemy);
	void SendUpdatedSessionStats(const struct FOakInteractiveSessionStats& Updated);
	void PlayerDied();
	void OnVehicleExited(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnVehicleEntered(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnRep_ValidEnemyActorSpawned();
	void OnPlayerInjured();
	void OnPlayerDead();
	void OnPlayerCausedDeath(class UDamageComponent* Damaged, struct FCausedDeathDetails& Details);
	void OnPlayerCausedDamage(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnLegendarySpawned(bool bNewVal);
	void OnEnemySuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnEnemySpawned(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnEnemyDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void HookToEnemySpawnEvent(class UOakStreamingInteractionEvent_EnemySpawn* EnemySpawnEvent, TArray<class USpawnerComponent*>& AllValidSpawners);
	void GetUpdatedSessionStats();
	void ExecutePollAction(const struct FSoftObjectPath& PollActionClassPath, class UObject* Context, float Value);
	void CleanEventEnemy();
};

// 0x38 (0x68 - 0x30)
// Class OakGame.StreamingPoolActionInfo
class UStreamingPoolActionInfo : public UGbxDataAsset
{
public:
	class FText                                  ActionTitle;                                       // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ActionDescription;                                 // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             ActionValueMinMax;                                 // 0x60(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UStreamingPoolActionInfo* GetDefaultObj();

	void SimulatePollActionSelected(TSoftClassPtr<class UStreamingPoolActionInfo> PollActionClass, class AOakPlayerController* PlayerOwner, class UObject* Context, float Value);
	void PollActionSelected(class AOakPlayerController* PlayerOwner, class UObject* Context, float Value);
	void PollActionInitialized();
};

// 0x18 (0x48 - 0x30)
// Class OakGame.SwayPatternData
class USwayPatternData : public UGbxDataAsset
{
public:
	TArray<struct FVector2D>                     Samples;                                           // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        NumberOfOctaves;                                   // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumberOfSamplesToGenerate;                         // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USwayPatternData* GetDefaultObj();

};

// 0x7C0 (0x1AB0 - 0x12F0)
// Class OakGame.TechnicalVehicleAnimInstance
class UTechnicalVehicleAnimInstance : public UOakVehicleAnimInstance
{
public:
	bool                                         bIsBigWheel;                                       // 0x12F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DA3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SlotToPlayBounceOn;                                // 0x12F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     BrakeBounceBack;                                   // 0x1300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     BrakeBounceFront;                                  // 0x1308(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendAccelAlpha;                                   // 0x1310(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DA4[0x79C];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTechnicalVehicleAnimInstance* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.TedioreBehavior
class UTedioreBehavior : public UObject
{
public:
	uint8                                        Pad_6DA5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTedioreBehavior* GetDefaultObj();

	void K2_OnProjectileLastBounce(class ATedioreProjectile* Projectile);
	void K2_OnProjectileInitialized(class ATedioreProjectile* Projectile);
	void K2_OnProjectileImpact(class ATedioreProjectile* Projectile, struct FHitResult& HitResult);
	void K2_OnProjectileFireWeapon(class ATedioreProjectile* Projectile);
	void K2_OnProjectileExplode(class ATedioreProjectile* Projectile);
	void K2_OnProjectileEndPlay(class ATedioreProjectile* Projectile);
	void K2_OnProjectileBounce(class ATedioreProjectile* Projectile);
	void K2_OnProjectileBeginPlay(class ATedioreProjectile* Projectile);
	void K2_OnLastBounceEvent(class ATedioreProjectile* Projectile);
	void K2_OnInitializedEvent(class ATedioreProjectile* Projectile);
	void K2_OnImpactEvent(class ATedioreProjectile* Projectile, struct FHitResult& HitResult);
	void K2_OnFireWeaponEvent(class ATedioreProjectile* Projectile);
	void K2_OnExplodeEvent(class ATedioreProjectile* Projectile);
	void K2_OnEndPlayEvent(class ATedioreProjectile* Projectile);
	void K2_OnBounceEvent(class ATedioreProjectile* Projectile);
	void K2_OnBeginPlayEvent(class ATedioreProjectile* Projectile);
};

// 0x38 (0x68 - 0x30)
// Class OakGame.TedioreBehavior_Bouncy
class UTedioreBehavior_Bouncy : public UTedioreBehavior
{
public:
	float                                        BouncyLifeSpan;                                    // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxNumBounces;                                     // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Bounciness;                                        // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Friction;                                          // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ProjectileGravityScale;                            // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TriggerTime;                                       // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BounceVelocity;                                    // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       BouncyTrail;                                       // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           BounceEvent;                                       // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           MirvBounceEvent;                                   // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTedioreBehavior_Bouncy* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class OakGame.TedioreBehavior_Drunken
class UTedioreBehavior_Drunken : public UTedioreBehavior
{
public:
	class UDrunkenBaseMovementComponent*         DrunkenTemplate;                                   // 0x30(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTedioreBehavior_Drunken* GetDefaultObj();

};

// 0x1B8 (0x1E8 - 0x30)
// Class OakGame.TedioreBehavior_Homing
class UTedioreBehavior_Homing : public UTedioreBehavior
{
public:
	class UGrenadeHomingComponent*               HomingTemplate;                                    // 0x30(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETedioreHomingApplicationType     Application;                                       // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DA7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialHomingDelay;                                // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RetryHomingDelay;                                  // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DA8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEnvQueryParams                       InitialSearchQuery;                                // 0x48(0xB8)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FEnvQueryParams                       RetrySearchQuery;                                  // 0x100(0xB8)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        OutOfFuelDuration;                                 // 0x1B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GravityScale;                                      // 0x1BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxSpeed;                                          // 0x1C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DA9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           OnHomingFailed;                                    // 0x1C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           MIRVOnHomingInit;                                  // 0x1D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           MIRVHomingLoopEvent;                               // 0x1D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           MIRVOnHomingFailed;                                // 0x1E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTedioreBehavior_Homing* GetDefaultObj();

};

// 0xD8 (0x108 - 0x30)
// Class OakGame.TedioreBehavior_MIRV
class UTedioreBehavior_MIRV : public UTedioreBehavior
{
public:
	float                                        SpawnAngleOffset;                                  // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MirvSpawnOffset;                                   // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ATedioreProjectile>        MirvChildClass;                                    // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHideWeaponVisuals;                                // 0x40(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DAA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MirvChildDamageScalar;                             // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FEnvQueryParams                       MirvHomingSearchQuery;                             // 0x48(0xB8)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        MirvHomingInitialDelay;                            // 0x100(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MirvHomingRetryDelay;                              // 0x104(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTedioreBehavior_MIRV* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class OakGame.TedioreBehavior_Shooting
class UTedioreBehavior_Shooting : public UTedioreBehavior
{
public:
	TSubclassOf<class UEffectCollectionData>     MuzzleEffectCollection;                            // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       LaserSightTemplate;                                // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LaserSightMuzzleOffset;                            // 0x40(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShotDamageScale;                                   // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShotSpeedScale;                                    // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinShotsFired;                                     // 0x54(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NumShotsFiredScale;                                // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseMaxAmmo;                                       // 0x5C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DAB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConeAngleMin;                                      // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConeAngleMax;                                      // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTedioreBehavior_Shooting* GetDefaultObj();

	void K2_OnOutOfAmmo(class ATedioreProjectile* Projectile);
};

// 0x10 (0x40 - 0x30)
// Class OakGame.TedioreBehavior_Sticky
class UTedioreBehavior_Sticky : public UTedioreBehavior
{
public:
	TSubclassOf<class AOakCharacter_Default>     StuckAICharacter;                                  // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StuckCharacterInitialLifetime;                     // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFlipMirvStickyTiming;                             // 0x3C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DAC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTedioreBehavior_Sticky* GetDefaultObj();

	void OnSpawnAiShootingWeapon(class AActor* SpawnedActor);
};

// 0x0 (0x30 - 0x30)
// Class OakGame.TedioreBehavior_SuppressBouncy
class UTedioreBehavior_SuppressBouncy : public UTedioreBehavior
{
public:

	static class UClass* StaticClass();
	static class UTedioreBehavior_SuppressBouncy* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.TedioreBehavior_SuppressDrunken
class UTedioreBehavior_SuppressDrunken : public UTedioreBehavior
{
public:

	static class UClass* StaticClass();
	static class UTedioreBehavior_SuppressDrunken* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class OakGame.TedioreBehavior_SuppressHoming
class UTedioreBehavior_SuppressHoming : public UTedioreBehavior
{
public:

	static class UClass* StaticClass();
	static class UTedioreBehavior_SuppressHoming* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class OakGame.TedioreBehavior_TargetCombo
class UTedioreBehavior_TargetCombo : public UTedioreBehavior
{
public:
	class USphereComponent*                      TargetComboSphere;                                 // 0x30(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        VisualDelay;                                       // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DAE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  TargetComboVisuals;                                // 0x40(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHealthTypeData*                       HealthType;                                        // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxAttributeData*                     ComboDamageScale;                                  // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxAttributeData*                     ComboRadiusScale;                                  // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           OnTargetComboExplode;                              // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           OnTargetComboStart;                                // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           OnTargetComboEnd;                                  // 0x70(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTedioreBehavior_TargetCombo* GetDefaultObj();

	void OnProjectileTakeAnyDamage(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void K2_OnComboTargetTriggered(class ATedioreProjectile* Projectile);
	void K2_ComboTargetTriggeredEvent(class ATedioreProjectile* Projectile);
};

// 0x1E8 (0x878 - 0x690)
// Class OakGame.TedioreProjectile
class ATedioreProjectile : public AProjectile
{
public:
	uint8                                        Pad_6DB1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  StaticMesh;                                        // 0x6A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URotatingMovementComponent*            RotatingComponent;                                 // 0x6A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  WwiseComponent;                                    // 0x6B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USocketComponent*                      FireMuzzleComponent;                               // 0x6B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              AttachedTrail;                                     // 0x6C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                ProjectileMesh;                                    // 0x6C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTedioreBehavior*>              TedioreBehaviors;                                  // 0x6D0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class AWeapon*                               OwningWeapon;                                      // 0x6E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxProjectileMovementComponent*       TedioreProjectileMovement;                         // 0x6E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGrenadeHomingComponent*               HomingComponent;                                   // 0x6F0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDrunkenBaseMovementComponent*         DrunkenComponent;                                  // 0x6F8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseEvent*                           CachedWeaponFireAudio;                             // 0x700(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UWwiseEvent*>                   PrepareAudioEvents;                                // 0x708(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UWwiseSwitch*>                  PrepareAudioSwitches;                              // 0x718(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                         bDidPrepareAudio;                                  // 0x728(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DB2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AmmoCount;                                         // 0x72C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        AmmoUsed;                                          // 0x730(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ProjectilesPerShot;                                // 0x734(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ShotAmmoCost;                                      // 0x738(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ShotDamage;                                        // 0x73C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        FireRate;                                          // 0x740(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ImpactTriggerDuration;                             // 0x744(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRotateWhenThrown;                                 // 0x748(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DB3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MuzzleSocketName;                                  // 0x750(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  LaserSightSocketName;                              // 0x758(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasMirved;                                        // 0x760(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsMirvChild;                                      // 0x761(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DB4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MirvBaseDamage;                                    // 0x764(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIgnoreWeaponVisualCloning;                        // 0x768(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     NumMirvProjectileAttribute;                        // 0x770(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FEnvQueryParams                       BouncyAimAssistQuery;                              // 0x778(0xB8)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                        MaxAssistAngle;                                    // 0x830(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AssistAngleDot;                                    // 0x834(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAttributeInitializationData          StatusEffectDamageScalar;                          // 0x838(0x38)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bIsStuck;                                          // 0x870(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DB6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATedioreProjectile* GetDefaultObj();

	void TurnAttachedTrailOn(bool bRestartTrail);
	void SetAttachedTrail(class UParticleSystem* NewTrail);
	void RemoveAttachedTrail(bool bDestroyTrail);
	void PostBehaviorsInitialized();
	void OnRep_OnProjectileStuck();
	void OnProjectileLastBounce(struct FHitResult& ImpactResult);
	void OnProjectileBounce(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity);
	void OnBehaviorInitialized(TSubclassOf<class UTedioreBehavior> BehaviorClass);
	void K2_SpawnTedioreProjectile(class AWeapon* TedioreWeapon, TSubclassOf<class ATedioreProjectile> TedioreClass);
	bool IsMirvChild();
	class UGrenadeHomingComponent* GetHomingComponent();
	class UDrunkenBaseMovementComponent* GetDrunkenComponent();
	class UParticleSystemComponent* GetAttachedTrail();
	class UTedioreBehavior* FindBehaviorByClass(TSubclassOf<class UTedioreBehavior> BehaviorClass, enum class EBehaviorOutput* Branches, bool bCheckChildClasses);
	float CalculateExplosionDamage(float DamagePerShot, int32 BulletsPerShot);
};

// 0x8 (0x40 - 0x38)
// Class OakGame.TedioreProjectileClassAspect
class UTedioreProjectileClassAspect : public UInventoryAspectData
{
public:
	TSubclassOf<class ATedioreProjectile>        TedioreProjectileClass;                            // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTedioreProjectileClassAspect* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.TedioreWeaponAspectData
class UTedioreWeaponAspectData : public UInventoryAspectData
{
public:
	class UTedioreBehavior*                      TedioreBehavior;                                   // 0x38(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTedioreWeaponAspectData* GetDefaultObj();

};

// 0x100 (0x4F0 - 0x3F0)
// Class OakGame.WeaponBalanceStateComponent
class UWeaponBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	uint8                                        Pad_6DB7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeaponUseModeAspectSetData>   UseModeAspectSetList;                              // 0x3F8(0x10)(Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UWeaponAudioAspectData*>        AudioAspectList;                                   // 0x408(0x10)(Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UWeaponFoleyAspectData*>        FoleyAspectList;                                   // 0x418(0x10)(Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UWeaponAudioStreamingAspectData*> AudioStreamingAspectList;                          // 0x428(0x10)(Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UWeaponEffectBaseAspectData*>   EffectAspectList;                                  // 0x438(0x10)(Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	class UWeaponMaterialWearAspectData*         MaterialWearAspect;                                // 0x448(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponPlayerMeleeOverrideAspectData*  PlayerMeleeOverrideAspect;                         // 0x450(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DB8[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCustomizationComponent*            CachedCustomizationComponent;                      // 0x490(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakWeapon*                            WeaponPrivate;                                     // 0x498(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DB9[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponBalanceStateComponent* GetDefaultObj();

	void NotifyWeaponPutDown();
	void NotifyWeaponEquipped();
	void NotifyWeaponAttached();
	void NotifyFirstPersonCreated();
};

// 0x28 (0x518 - 0x4F0)
// Class OakGame.TedioreWeaponBalanceStateComponent
class UTedioreWeaponBalanceStateComponent : public UWeaponBalanceStateComponent
{
public:
	TArray<class UTedioreWeaponAspectData*>      TedioreAspects;                                    // 0x4F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UTedioreBehavior*>              Behaviors;                                         // 0x500(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UTedioreProjectileClassAspect*         TedioreProjectileClass;                            // 0x510(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTedioreWeaponBalanceStateComponent* GetDefaultObj();

	TSubclassOf<class ATedioreProjectile> GetTedioreProjectileClass();
};

// 0x48 (0x338 - 0x2F0)
// Class OakGame.TestMapsMenu
class UTestMapsMenu : public UGbxUmgMenu
{
public:
	class UGbxListItemText*                      BackItem;                                          // 0x2F0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FText>                          MapCategories;                                     // 0x2F8(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DBA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxUmgMenuData*                       SubMenuData;                                       // 0x328(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxScrollBoxList*                     ContentPanel;                                      // 0x330(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTestMapsMenu* GetDefaultObj();

	void OnTestMapDLCNameSelected(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnTestMapCategorySelected(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnBackClicked(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
};

// 0x20 (0x310 - 0x2F0)
// Class OakGame.TestSubMapsMenu
class UTestSubMapsMenu : public UGbxUmgMenu
{
public:
	class UGbxListItemText*                      BackItem;                                          // 0x2F0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DBB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxScrollBoxList*                     ContentPanel;                                      // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTestSubMapsMenu* GetDefaultObj();

	void OnTestMapSelected(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
	void OnBackClicked(class UGbxUserWidget* Widget, struct FGbxMenuInputEvent& InputInfo);
};

// 0x120 (0x588 - 0x468)
// Class OakGame.TinkPile
class ATinkPile : public ASmartObject
{
public:
	class UOakSpawnerComponent*                  SpawnerComponent;                                  // 0x468(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakSpawnPointComponent*               SpawnPointComponent;                               // 0x470(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                SkelMeshComponent;                                 // 0x478(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URegionBalanceStateComponent*          RegionComponent;                                   // 0x480(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTerritoryComponent*                   TerritoryComponent;                                // 0x488(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x490(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETinkPileBuildOption              StartState;                                        // 0x491(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DBC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeam*                                 DefaultTeam;                                       // 0x498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class ETinkPileBuildOption, class USpawnOptionData*> SpawnOptions;                                      // 0x4A0(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSmartObjectActionSet                 UnusedActionSet;                                   // 0x4F0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSmartObjectActionSet                 UsedActionSet;                                     // 0x510(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UAnimSequence*                         Anim_UnusedIdle;                                   // 0x530(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequence*                         Anim_UsedIdle;                                     // 0x538(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequence*>                 Anim_Use;                                          // 0x540(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UAnimSequence*                         Anim_Reset;                                        // 0x550(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTeam*                                 CurrentTeam;                                       // 0x558(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          ResetTimerHandle;                                  // 0x560(0x8)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	enum class ETinkPileUseState                 UseState;                                          // 0x568(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DBD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGbxAIController*                      CurrentAIOwner;                                    // 0x570(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DBE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATinkPile* GetDefaultObj();

	void StartUsing(class AActor* User);
	void SetTeam(class UTeam* NewTeam);
	void SetStartState(enum class ETinkPileBuildOption NewStartState);
	void SetEnabled(bool bNewEnabled);
	void SetBuildOption(enum class ETinkPileBuildOption NewBuildOption);
	void ResetUse();
	void OnTinkPileUseStarted();
	void OnTinkPileUseFinished();
	void OnRep_UseState();
	void OnActorSpawned(class USpawnerComponent* SpawnerComp, class AActor* Actor);
	void OnActorDied(class USpawnerComponent* SpawnerComp, class AActor* Actor);
	enum class ETinkPileUseState GetUseState();
	void BuildObject();
};

// 0x18 (0x370 - 0x358)
// Class OakGame.TireProjectileMovementComponent
class UTireProjectileMovementComponent : public UWalkingProjectileMovementComponent
{
public:
	class USceneComponent*                       MeshToRotate;                                      // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DBF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTireProjectileMovementComponent* GetDefaultObj();

};

// 0x0 (0x238 - 0x238)
// Class OakGame.TrackedInteractionChallenge
class UTrackedInteractionChallenge : public UOakChallenge
{
public:

	static class UClass* StaticClass();
	static class UTrackedInteractionChallenge* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class OakGame.TrackedInteractionChallengeList
class UTrackedInteractionChallengeList : public UOakChallengeList
{
public:

	static class UClass* StaticClass();
	static class UTrackedInteractionChallengeList* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class OakGame.TrackedInteractionData
class UTrackedInteractionData : public UGbxDataAsset
{
public:
	TSubclassOf<class UOakChallenge>             ChallengeParentClass;                              // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTrackedInteractionInstanceData> Instances;                                         // 0x38(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	class UOakChallengeCategoryData*             ChallengeCategory;                                 // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrackedInteractionChallengeList*      ChallengeList;                                     // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UOakChallenge>           ParentChallenge;                                   // 0x58(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTrackedInteractionData* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.TrackedInteractionAttributeValueResolver
class UTrackedInteractionAttributeValueResolver : public UAttributeValueResolver
{
public:
	class UTrackedInteractionData*               TrackedInteraction;                                // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTrackedInteractionAttributeValueResolver* GetDefaultObj();

};

// 0x38 (0x490 - 0x458)
// Class OakGame.TransporterCrane
class ATransporterCrane : public AActor
{
public:
	class UTransporterTrackComponent*            TransporterTrackComponent;                         // 0x458(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USplineFollowerComponent*              SplineFollowerComponent;                           // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USplineComponent*                      SplineComponent;                                   // 0x468(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                CraneMesh;                                         // 0x470(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DC0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransporterCraneRecord               CraneRecord;                                       // 0x47C(0x10)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        ReplicatedCurrentPosition;                         // 0x48C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ATransporterCrane* GetDefaultObj();

	void StopTrackMovement();
	void SetTrackMovementDirection(bool bReversed);
	void ResumeTrackMovement();
	void ReachedPickupPoint();
	void ReachedEnd();
	void OnRep_SplineComponent();
	void OnRep_CraneRecord();
	void OnReachedPickupPoint(class USplineFollowerComponent* InSplineFollowerComponent, class AActor* SplineFollowerOwner);
	void OnReachedEnd(class USplineFollowerComponent* InSplineFollowerComponent, class AActor* SplineFollowerOwner);
	void BeginTrack();
};

// 0x98 (0x210 - 0x178)
// Class OakGame.TransporterTrackComponent
class UTransporterTrackComponent : public UActorComponent
{
public:
	TArray<struct FWeightedTransporterCrane>     WeightedCranes;                                    // 0x178(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        TimeBetweenCranes;                                 // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenPickups;                                // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarryingSpeed;                                     // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DC1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                PickupLocation;                                    // 0x198(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartWithCranes;                                  // 0x1A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DC2[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bReversed;                                         // 0x1C0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DC3[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCraneBeginTrack;                                 // 0x1E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCraneReachedEnd;                                 // 0x1F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCraneReachedPickupPoint;                         // 0x200(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTransporterTrackComponent* GetDefaultObj();

	void SetOverrideCrane(class ATransporterCrane* NextCrane);
	void ReverseTrack();
	void ResumeTrack();
	void PauseTrack();
	void ManualSpawnCrane(bool ResetTimer);
	void EnableCranes(bool bEnable);
	void CraneReachedPickupPoint(class ATransporterCrane* Crane);
	void CraneReachedEnd(class ATransporterCrane* Crane);
	void CraneBeginTrack(class ATransporterCrane* Crane);
};

// 0xA0 (0x5C0 - 0x520)
// Class OakGame.TurretSeatPawn
class ATurretSeatPawn : public ASeatPawn
{
public:
	uint8                                        Pad_6DC4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EGroundTurretType                 TurretType;                                        // 0x538(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMeshTickMatchesTurretTick;                        // 0x539(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DC5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeamComponent*                        TeamComponent;                                     // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAIAction>                 DefaultTurretAction;                               // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakPawnAttachSlotComponent*           OakPawnAttachSlotComponent;                        // 0x550(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakPawnAttachSlotComponent*           OakHijackSlotComponent;                            // 0x558(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTurretMovementComponent*              TurretComponent;                                   // 0x560(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter*                         LastCharacterAttached;                             // 0x568(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakCharacter*                         LastHijackCharacterAttached;                       // 0x570(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSpawnCostSelection                   SpawnCostSelection;                                // 0x578(0x18)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class FName                                  LeftHandIKSocket;                                  // 0x590(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightHandIKSocket;                                 // 0x598(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftFootIKSocket;                                  // 0x5A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightFootIKSocket;                                 // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                        MeshComponent;                                     // 0x5B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DC6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPlayerAlertType                  PlayerAlertType;                                   // 0x5B9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DC7[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATurretSeatPawn* GetDefaultObj();

	void HijackStateChanged();
	void GetAvailableIKSocketNames(TArray<class FName>* SocketNames);
	void EnableTransitionControl(bool bEnable);
	void AttachStateChanged();
};

// 0x60 (0x1B8 - 0x158)
// Class OakGame.Tutorial_KillAllThreeWaves
class UTutorial_KillAllThreeWaves : public UEncounterGameMode_KillAllThreeWaves
{
public:
	class FText                                  TutorialFindRewardText;                            // 0x158(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TutorialChooseChallengeText;                       // 0x170(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TutorialBreakD20Text;                              // 0x188(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TutorialBuyAltarText;                              // 0x1A0(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTutorial_KillAllThreeWaves* GetDefaultObj();

};

// 0x18 (0x158 - 0x140)
// Class OakGame.Tutorial_LootRoom
class UTutorial_LootRoom : public UEncounterGameMode_LootRoom
{
public:
	class FText                                  TutorialOfferCrystalText;                          // 0x140(0x18)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTutorial_LootRoom* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class OakGame.TutorialGlobals
class UTutorialGlobals : public UGbxDataAsset
{
public:
	struct FPlaythroughUnlockedData              TutorialPlaythroughUnlockedData;                   // 0x30(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FTutorialLevelUpData                  TutorialLevelUpData;                               // 0x58(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTutorialGlobals* GetDefaultObj();

};

// 0x190 (0x200 - 0x70)
// Class OakGame.UIDataCollector_IndigoAccept
class UUIDataCollector_IndigoAccept : public UGbxUIDataCollectorBase
{
public:
	uint8                                        Pad_6DC8[0x190];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIDataCollector_IndigoAccept* GetDefaultObj();

};

// 0x11C0 (0x1390 - 0x1D0)
// Class OakGame.UIGlobals
class UUIGlobals : public UGbxUIGlobals
{
public:
	TSubclassOf<class UOakUICharacterCustomizationManager> CharacterCustomizationManagerClass;                // 0x1D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakUIPlayerStandIn>       PlayerStandInClass;                                // 0x1D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakUIBigMapManager>       BigMapManagerClass;                                // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakUIChallengeDataProvider> ChallengeProviderClass;                            // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakEULAData>           OfflineEULAData;                                   // 0x1F0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOptionDescriptionData*                OptionDescriptionData;                             // 0x218(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakLegalScreenData*                   LegalScreenData;                                   // 0x220(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakTitleScreenData*                   TitleScreenData;                                   // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakUIDataCreditsScreenData*           CreditsScreenData;                                 // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakUICrossplayFirstBootData*          CrossplayFirstBootData;                            // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakUIGraphicsCalibrationDataAsset*    CalibrationData;                                   // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MissionIcon_Default;                               // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MissionIcon_Plot;                                  // 0x250(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MissionIcon_Side;                                  // 0x258(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MissionIcon_ProvingGrounds;                        // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MissionIcon_CircleOfSlaughter;                     // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MissionIcon_Raid;                                  // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MissionIcon_RareSpawn;                             // 0x278(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInWorldIconData*                      MissionAreaIcon;                                   // 0x280(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class UPlayerClassIdentifier>, class UTexture*> PlayerClassProfileIcons;                           // 0x288(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          PauseMenuData;                                     // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxStatusMenuData*                    GFxStatusMenuData;                                 // 0x2E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          PCTextChatMenuData;                                // 0x2E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          PCMenuTextChatMenuData;                            // 0x2F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          PCTextChatMenuNotificationMenuData;                // 0x2F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          ItemInspectionMenuData;                            // 0x300(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemTradingScreenName;                             // 0x308(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LegalScreenName;                                   // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleScreenName;                                   // 0x318(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LoadCharacterScreenName;                           // 0x320(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GraphicsCalibrationScreenName;                     // 0x328(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MainMenuName;                                      // 0x330(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UUIStatData_Attribute*>         PartInspectionStats;                               // 0x338(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<enum class EOakElementalType, struct FOakItemInspectionElementalRatings> DamageRatingMapping;                               // 0x348(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, class FString>             ItemTypeEnumToIconFrame;                           // 0x398(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOakItemInspectionPartEnumTable       PartEnumTable;                                     // 0x3E8(0x10)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakUIActorContainer>      ItemInspectionContainerClass;                      // 0x3F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakItemInspectionCategoryInfo> CategoryInfos;                                     // 0x400(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FLinearColor                          ItemPartInspectionOutlineColor;                    // 0x410(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FItemInspectionSelectedPartData       PartInspectionSelectedPartData;                    // 0x420(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        ExcludedPartTypes;                                 // 0x428(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        RotateFactor;                                      // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PanFactor;                                         // 0x43C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomFactor;                                        // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemFOV;                                           // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReferenceItemScale;                                // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ScaleRange;                                        // 0x44C(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseToPanFactor;                                  // 0x454(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseToRotateFactor;                               // 0x458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseWheelFactor;                                  // 0x45C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KeyboardZoomFactor;                                // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightThreshold;                                   // 0x464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntroDuration;                                     // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxisThreshold;                                     // 0x46C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              IntroRotation;                                     // 0x470(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              IntroRotationRandomness;                           // 0x47C(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        IntroRotationAlphaPowerRandomness;                 // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DC9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UGbxDamageType>          FallbackDamageType;                                // 0x490(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemPartInspectionFocusInterpolationRate;          // 0x4B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxialDeadZoneBegin_Pan;                            // 0x4BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxialDeadZoneRatio_Pan;                            // 0x4C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxialDeadZoneBegin_Rotate;                         // 0x4C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxialDeadZoneRatio_Rotate;                         // 0x4C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DCA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                StatusMenuNavBarHintWidgetOffsets;                 // 0x4D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StatusMenuOpenParticleEffect;                      // 0x4E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusMenuIntroParticleDepth;                      // 0x4E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DCB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EBackgroundEffects, class UParticleSystem*> UIParticleSystems;                                 // 0x4F0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        StatusMenuBackgroundParticleDepth;                 // 0x540(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DCC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       CreditsParticleEffect;                             // 0x548(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CreditsParticleDepth;                              // 0x550(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DCD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTutorialMessageDataAsset*             FastTravelTutorialAsset;                           // 0x558(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGFxControllerDisconnectMovie> ControllerDisconnectMovie;                         // 0x560(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OverLevelAmount;                                   // 0x568(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideToHideFriendlyBars;                       // 0x56C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DCE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakBackpackCapacityThreshold> BackpackThresholds;                                // 0x570(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                WeaponCategory;                                    // 0x580(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                ArtifactCategory;                                  // 0x588(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                ClassModCategory;                                  // 0x590(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                InstantHealthCategory;                             // 0x598(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                AmmoCategory;                                      // 0x5A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UInventoryCategoryData*, struct FOakThumbnailManagerRenderProperties> CategoryToRenderPropertiesMap;                     // 0x5A8(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DCF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakThumbnailManagerRenderProperties  RenderPropertiesForOtherThumbnail;                 // 0x600(0x690)(Edit, NativeAccessSpecifierPublic)
	class UGbxGFxDialogBoxData*                  GFxDialogBoxTemplate;                              // 0xC90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOakThumbnailManagerConfig            IconConfig;                                        // 0xC98(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                  EridianAnalyser;                                   // 0xCB0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EridianResonator;                                  // 0xCC8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MayhemMode;                                        // 0xCE0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ArtifactSlot;                                      // 0xCF8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EridianFabricator;                                 // 0xD10(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FCurrencyInfo                         MoneyCurrencyInfo;                                 // 0xD28(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCurrencyInfo                         EridiumCurrencyInfo;                               // 0xD58(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCurrencyInfo                         GoldenKeyCurrencyInfo;                             // 0xD88(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCurrencyInfo                         VaultCoinCurrencyInfo;                             // 0xDB8(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCurrencyInfo                         DiamondKeyCurrencyInfo;                            // 0xDE8(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                  DLCPromptText;                                     // 0xE18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  DLCPromptOpen;                                     // 0xE30(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bSteamUpsellEnabled;                               // 0xE48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEpicUpsellEnabled;                                // 0xE49(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaystationUpsellEnabled;                         // 0xE4A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bXboxUpsellEnabled;                                // 0xE4B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DD0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EpicGames_DefaultUpsellLink;                       // 0xE50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Steam_DefaultUpsellLink;                           // 0xE60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                XboxOne_DefaultUpsellLink;                         // 0xE70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                XboxSeries_DefaultUpsellLink;                      // 0xE80(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PS4_DefaultUpsellLink;                             // 0xE90(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PS5_DefaultUpsellLink;                             // 0xEA0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUpsellLink                           EpicGames_UpsellLinks;                             // 0xEB0(0x50)(Edit, NativeAccessSpecifierPublic)
	struct FUpsellLink                           Steam_UpsellLinks;                                 // 0xF00(0x50)(Edit, NativeAccessSpecifierPublic)
	struct FUpsellLink                           XboxOne_UpsellLinks;                               // 0xF50(0x50)(Edit, NativeAccessSpecifierPublic)
	struct FUpsellLink                           XboxSeries_UpsellLinks;                            // 0xFA0(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<class FString, struct FUpsellLink>      PS4_RegionalUpsellLinks;                           // 0xFF0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, struct FUpsellLink>      PS5_RegionalUpsellLinks;                           // 0x1040(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCurrencyInfo>                 DLCCurrencies;                                     // 0x1090(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         bCanDisplayDiamondKeys;                            // 0x10A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DD1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          FriendlyColor;                                     // 0x10A4(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeDangerRadiusScalar;                         // 0x10B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrenadeDangerMinimumRadius;                        // 0x10B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerGrenadeDangerDelay;                          // 0x10BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPauseMenuPausesGame;                              // 0x10C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStatusMenuPausesGame;                             // 0x10C1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DD2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMultiClassNamingDataAsset*            MultiClassNamingAsset;                             // 0x10C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, TSoftObjectPtr<class USwfMovie>> SkillMenuIconMapping;                              // 0x10D0(0x50)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UGFxRolloutMessage>        TravelMessageMovieClass;                           // 0x1120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGFxRolloutMessage>        OnlineMessageMovieClass;                           // 0x1128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGFxRolloutMessage>        SocialEventMessageMovieClass;                      // 0x1130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 ErrorMessageAsset;                                 // 0x1138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 DiscoveryNotificationAsset;                        // 0x1140(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 AreaEnteredNotificationAsset;                      // 0x1148(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 VaultRewardNotificationAsset;                      // 0x1150(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 LevelUpNotificationAsset;                          // 0x1158(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 CrewChallengeNotification;                         // 0x1160(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 RandomEncounterNotificationAsset;                  // 0x1168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 NewMissionNotificationAsset;                       // 0x1170(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 MissionCompletedNotificationAsset;                 // 0x1178(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 ObjectiveCompleteNotificationAsset;                // 0x1180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 ObjectiveFailedNotificationAsset;                  // 0x1188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 MayhemActivatedNotificationAsset;                  // 0x1190(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 MayhemDeactivatedNotificationAsset;                // 0x1198(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 MayhemLevelUpNotificationAsset;                    // 0x11A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 DungeonStartNotificationAsset;                     // 0x11A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 RoomStartNotificationAsset;                        // 0x11B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 EliteRoomNotificationAsset;                        // 0x11B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 RoomClearNotificationAsset;                        // 0x11C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 NewGearNotificationAsset;                          // 0x11C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 DungeonCompleteNotificationAsset;                  // 0x11D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUDNotificationAsset*                 DungeonFailedNotificationAsset;                    // 0x11D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  AllPlayersRequiredTitlePresent;                    // 0x11E0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AllPlayersRequiredTitleAbsent;                     // 0x11F8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AllPlayersRequiredMessagePresent;                  // 0x1210(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AllPlayersRequiredMessageAbsent;                   // 0x1228(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        AllPlayersRequiredDuration;                        // 0x1240(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DD3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, TSoftObjectPtr<class USwfMovie>> LanguageToFontSWFMap;                              // 0x1248(0x50)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        SubtitleVisibilityShowVolumeDB;                    // 0x1298(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SubtitleVisibilityHideVolumeDB;                    // 0x129C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SubtitleVisibilityUpdateFrequency;                 // 0x12A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SubtitleTimeBeforeHide;                            // 0x12A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SubtitleDisplayFormat;                             // 0x12A8(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<float>                                SubtitleBackgroundSizeMapping;                     // 0x12C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MaxTextScalingForLargestBackground;                // 0x12D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DD4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDialogEvent*                          DefaultIdleDialogEvent;                            // 0x12D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogParameter*                      DefaultIdleDialogTargetParamater;                  // 0x12E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  RunExpiresFormat_DHM;                              // 0x12E8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RunExpiresFormat_HM;                               // 0x1300(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RunExpiresFormat_M;                                // 0x1318(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        AudioTicksPerSlider;                               // 0x1330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DD5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EUIAudioCues, class UWwiseEvent*> UIAudioCues;                                       // 0x1338(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCurveFloat*                           DistanceScaleCurve;                                // 0x1388(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUIGlobals* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class OakGame.UIManager
class UUIManager : public UObject
{
public:
	uint8                                        Pad_6DD8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUIManagerMessage>             MessageStack;                                      // 0x30(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AOakPlayerController*                  PlayerOwner;                                       // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       BlockingInputComponent;                            // 0x48(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DD9[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIManager* GetDefaultObj();

	struct FMessageHandle DisplaySocialMessage(const class FString& PlayerDisplayName, int32 Level, class FText& ClassDisplayName, class FText& Description, class FText& CommandText);
	void AutoUpdateTravelMessage(class UTravelStationData* DestinationTravelStation, int32 RemainingTime, enum class ETravelStatus CurrentStatus);
};

// 0x88 (0x140 - 0xB8)
// Class OakGame.UIStatData_Ability
class UUIStatData_Ability : public UUIStatData
{
public:
	class FText                                  DescriptionText;                                   // 0xB8(0x18)(Transient, NativeAccessSpecifierPublic)
	int32                                        BonusAbilityPoints;                                // 0xD0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DDA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ItemColorFrame;                                    // 0xD8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SkillTreeDelta_PrimaryPlayer;                      // 0xE8(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  SkillTreeDelta_SecondaryPlayer;                    // 0x100(0x18)(Transient, NativeAccessSpecifierPublic)
	class FString                                CharacterID;                                       // 0x118(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakInventoryBalanceStateComponent*    OwningBalanceComponent;                            // 0x128(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DDB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIStatData_Ability* GetDefaultObj();

};

// 0x58 (0x2E0 - 0x288)
// Class OakGame.UIStatData_MayhemModifier
class UUIStatData_MayhemModifier : public UUIStatData_Numeric
{
public:
	struct FDataTableValueHandle                 DataTableValue;                                    // 0x288(0x18)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          AttributeInitValue;                                // 0x2A0(0x38)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bSubtractOne;                                      // 0x2D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DDC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIStatData_MayhemModifier* GetDefaultObj();

};

// 0x8 (0x2B8 - 0x2B0)
// Class OakGame.UIStatData_WeaponAttribute
class UUIStatData_WeaponAttribute : public UUIStatData_Attribute
{
public:
	enum class EWeaponUseMode                    UseMode;                                           // 0x2B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DDD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIStatData_WeaponAttribute* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class OakGame.UIStatFormulaEvaluator_WeightedWeaponStatAccumulator
class UUIStatFormulaEvaluator_WeightedWeaponStatAccumulator : public UUIStatFormulaEvaluator
{
public:
	bool                                         bInvertPercent;                                    // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DDE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponTypeAttributeStatWeighting     DefaultWeighting;                                  // 0x30(0x18)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FWeaponTypeAttributeStatWeighting> WeaponTypeWeightings;                              // 0x48(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UUIStatFormulaEvaluator_WeightedWeaponStatAccumulator* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class OakGame.VaultCardGeneralData
class UVaultCardGeneralData : public UGbxDataAsset
{
public:
	TArray<struct FAttributeInitializationData>  PerMayhemLevelXPScalars;                           // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          BaseLevelXPScalar;                                 // 0x40(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint32                                       Version;                                           // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DDF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVaultCardGeneralData* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class OakGame.VaultHunterProfileCard
class UVaultHunterProfileCard : public UGbxDataAsset
{
public:
	TArray<class UChallengeCategoryData*>        GameCompletionChallengeListGroups;                 // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UChallengeCategoryData*>        EnemyChallengeListGroups;                          // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UChallengeCategoryData*>        WeaponChallengeListGroups;                         // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UChallengeCategoryData*>        CrewChallengeListGroups;                           // 0x60(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UChallengeCategoryData*>        ExplorationChallengeListGroups;                    // 0x70(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UChallengeCategoryData*>        SlaugherChallengeListGroups;                       // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UChallengeCategoryData*>        RaidChallengeListGroups;                           // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UChallengeCategoryData*>        ProvingGroundChallengeListGroups;                  // 0xA0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UVaultHunterProfileCard* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class OakGame.VehicleAttachActorComponentAspectData
class UVehicleAttachActorComponentAspectData : public UOakVehicleAspectData
{
public:
	TSoftClassPtr<class UActorComponent>         ComponentToAttach;                                 // 0x38(0x28)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ComparisonTag;                                     // 0x60(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UVehicleAttachActorComponentAspectData* GetDefaultObj();

};

// 0xA0 (0xD8 - 0x38)
// Class OakGame.VehicleAttachMeshAspectData
class UVehicleAttachMeshAspectData : public UOakVehicleAspectData
{
public:
	struct FSoftObjectPath                       Mesh;                                              // 0x38(0x18)(Edit, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentName;                                     // 0x50(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ComponentTags;                                     // 0x58(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  AttachSocketName;                                  // 0x68(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalOffset;                                       // 0x70(0xC)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LocalRotationOffset;                               // 0x7C(0xC)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x88(0xC)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAttachParentBound;                             // 0x94(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERevolverOffsetMode               RevolverOffsetMode;                                // 0x95(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DE0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CollisionProfileName;                              // 0x98(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeldSimulatedBodies;                              // 0xA0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeldedBodiesShouldModifyPhysicalProperties;       // 0xA1(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseParentPoseComponent;                           // 0xA2(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DE1[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UAnimInstance>           AnimClass;                                         // 0xA8(0x28)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAnimationMode                    AnimMode;                                          // 0xD0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DE2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleAttachMeshAspectData* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class OakGame.VehicleAttachSlotBlueprintAspectData
class UVehicleAttachSlotBlueprintAspectData : public UOakVehicleAspectData
{
public:
	TSoftClassPtr<class AActor>                  ActorToCopy;                                       // 0x38(0x28)(Edit, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x60(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalOffset;                                       // 0x68(0xC)(Edit, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LocalRotationOffset;                               // 0x74(0xC)(Edit, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bWeldSimulatedBodies;                              // 0x80(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeldedBodiesShouldModifyPhysicalProperties;       // 0x81(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardDamageToParent;                            // 0x82(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachToActor;                                    // 0x83(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DE3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleAttachSlotBlueprintAspectData* GetDefaultObj();

};

// 0x70 (0xA8 - 0x38)
// Class OakGame.VehicleAttachWeaponAspectData
class UVehicleAttachWeaponAspectData : public UOakVehicleAspectData
{
public:
	TSubclassOf<class AOakWeapon_Vehicle>        Weapon;                                            // 0x38(0x8)(BlueprintReadOnly, ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AOakWeapon_Vehicle>      WeaponClass;                                       // 0x40(0x28)(Edit, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakWeaponVehicleData>  WeaponData;                                        // 0x68(0x28)(Edit, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpawnWeapon;                                       // 0x90(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DE4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponSlotData*                       WantedActiveWeaponSlot;                            // 0x98(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrefferedSlotId;                                   // 0xA0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DE5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleAttachWeaponAspectData* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class OakGame.VehicleAudioAspectData
class UVehicleAudioAspectData : public UOakVehicleAspectData
{
public:
	TArray<class UWwiseEvent*>                   ConfigurationEvents;                               // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleConfigurationRtpc>     ConfigurationRtpcs;                                // 0x48(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UVehicleAudioAspectData* GetDefaultObj();

};

// 0x238 (0x3B0 - 0x178)
// Class OakGame.VehicleAudioProviderComponent
class UVehicleAudioProviderComponent : public UActorComponent
{
public:
	float                                        ForwardSpeedRTPCRefValue;                          // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkidAmountRTPCRefValue;                            // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWheelAudioType                   WheelAudioType;                                    // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DE8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WheelAudioCompTag;                                 // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WheelAudioReverbBoost;                             // 0x190(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoveringInPlaceEngineStrength;                     // 0x194(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVehicleLandingEventData>      LandingEvents;                                     // 0x198(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           LandingAudioEvent;                                 // 0x1A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           SteeringAudioEvent;                                // 0x1B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           SuspensionCompressionEvent;                        // 0x1B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           SuspensionExtensionEvent;                          // 0x1C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SuspensionCompressionEventThreshold;               // 0x1C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SuspensionExtensionEventThreshold;                 // 0x1CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           OverspinDebrisEvent;                               // 0x1D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBeforeOverspinDebrisEvent;                    // 0x1D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           OverspinStartEvent;                                // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           OverspinEndEvent;                                  // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             WheelSpinMinMax;                                   // 0x1F0(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVehicleAudioLoopData                 WheelAudioLoop;                                    // 0x1F8(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleAudioLoopData>         AdditionalWheelAudioLoops;                         // 0x208(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           WheelBrakeEvent;                                   // 0x218(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWheelBrakeEventIsPlayerOnly;                      // 0x220(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DEA[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWheelRandomSwitchPack>        WheelSwitchPacks;                                  // 0x248(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleAudioLoopData>         EngineLoops;                                       // 0x258(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleAudioLoopData>         EngineAdditionalLoops;                             // 0x268(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleAudioLoopOnNamedCompData> EngineMiscLoops;                                   // 0x278(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class AOakVehicle*                           OwningVehicle;                                     // 0x288(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOakAudioGlobalsData*                  CachedAudioGlobals;                                // 0x290(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseAudioComponent*                  EngineAudioComponent;                              // 0x298(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVehicleConfigurationEvent>    ConfigurationWwiseEvents;                          // 0x2A0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleConfigurationRtpc>     ConfigurationRtpcs;                                // 0x2B0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6DEB[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleAudioProviderComponent* GetDefaultObj();

	void OnVehicleLanded(float TimeSpentInAir, float LandAngle, int32 NumWheelsOnGround, bool bAllWheelsLanded);
	void OnVehicleGearShift(int32 Gear, bool bIsShiftingUp);
	void OnVehicleBecameAirborne();
	void OnSeatAttachStateChanged();
	void OnOverspinStarted(class UPhysicalMaterial* PhysicalMat);
	void OnOverspinEnded();
	void OnHoverEnabled();
	void OnHoverDisabled();
	void OnEngineStop();
	void OnEngineStart();
};

// 0x8 (0x78 - 0x70)
// Class OakGame.VehicleClassIdentifier
class UVehicleClassIdentifier : public UPrimaryAssetLabel
{
public:
	class FName                                  ShortName;                                         // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVehicleClassIdentifier* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.VehicleCollisionDamageAspectData
class UVehicleCollisionDamageAspectData : public UOakVehicleAspectData
{
public:
	bool                                         LinkedToShield;                                    // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLinkedToBoost;                                    // 0x39(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DEC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVehicleCollisionDamageAspectData* GetDefaultObj();

};

// 0x18 (0x190 - 0x178)
// Class OakGame.VehicleComponent
class UVehicleComponent : public UActorComponent
{
public:
	TArray<struct FVehicleOverrideData>          OverrideByParts;                                   // 0x178(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AOakVehicle*                           OwningVehicle;                                     // 0x188(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UVehicleComponent* GetDefaultObj();

};

// 0x100 (0x130 - 0x30)
// Class OakGame.VehicleDrivingDataAsset
class UVehicleDrivingDataAsset : public UGbxDataAsset
{
public:
	float                                        DesiredSpeed;                                      // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedToActivateBoost;                              // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedToActivateSpeedHack;                          // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReverseSpeed;                                      // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleReverseTime;                                // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleReverseFaceThreshold;                       // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeedFactor;                                   // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnMaxValueDot2;                                  // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnMinValueDot2;                                  // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePIDController;                                 // 0x54(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Kp;                                                // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Ki;                                                // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Kd;                                                // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDeltaVelIntegral;                               // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HandbrakeMinVelocity;                              // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HandbrakeMinTurnDot2;                              // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrottleHandbrakeMinTurnDot2;                      // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HandbrakeStopMinTurnDot2;                          // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActivateThrottleHandbrake;                        // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DEE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         CanDriveCondition;                                 // 0x80(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                             SpeedModifierValue;                                // 0x88(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        SpeedHackForce;                                    // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedHackGravityFactor;                            // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedHackTireGripFactor;                           // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ValidBoostDirectionDot2;                           // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWallTest;                                         // 0x118(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DEF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TestWallsUpdateDelay;                              // 0x11C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TestWallsTraceLength;                              // 0x120(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TestWallsBehindDotFactor;                          // 0x124(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StuckDisableDelay;                                 // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DF0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleDrivingDataAsset* GetDefaultObj();

};

// 0x2D0 (0x460 - 0x190)
// Class OakGame.VehicleEffectsComponent
class UVehicleEffectsComponent : public UVehicleComponent
{
public:
	UMulticastDelegateProperty_                  OnEngineStart;                                     // 0x190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEngineStop;                                      // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBrakesStart;                                     // 0x1B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBrakesStop;                                      // 0x1C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRestartEffectsAfterTravel;                       // 0x1D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<enum class EPhysicalSurface, class UParticleSystem*> JumpParticleSystemPerSurfaceType;                  // 0x1E0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MinJumpVelocity;                                   // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BigLandingMinVelocity;                             // 0x234(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LandingFXLocationOffset;                           // 0x240(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BigLandingFXLocationOffset;                        // 0x24C(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    WheelAddCurve;                                     // 0x258(0x78)(Edit, NativeAccessSpecifierPublic)
	float                                        WheelAddStrength;                                  // 0x2D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOverspin;                                     // 0x2D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnOverspinStarted;                                 // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnOverspinEnded;                                   // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DF9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SpeedLinesPS;                                      // 0x310(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SpeedLineCurve;                                    // 0x318(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactThrottleThreshold;                           // 0x320(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrindingInPlaceMaxSpeed;                           // 0x324(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGrindingInPlace;                                // 0x328(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DFA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakVehicleEffectAspectDataCollection*> DefaultEffectsAspectDataCollections;               // 0x330(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UScreenParticleManagerComponent*       ScreenParticleMgrComp;                             // 0x340(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DFB[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpactCooldownTime;                                // 0x354(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastActorHitResetTime;                             // 0x358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ImpactVelocityThresholdsInKPH[0x6];                // 0x35C(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleImpactEffectData>      ImpactEffects;                                     // 0x378(0x10)(Edit, EditFixedSize, ZeroConstructor, NoClear, NativeAccessSpecifierPrivate)
	TArray<int32>                                ExcludedGearsForBackfire;                          // 0x388(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FFloatRange                           MaxRPMBackfireFrequencyRange;                      // 0x398(0x10)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTriggerBackfireInBoost;                           // 0x3A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DFD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EndBoostBackfireDelay;                             // 0x3AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnImpactDetected;                                  // 0x3B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnGrindingStopped;                                 // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnHitVehicle;                                      // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnHitEnvironment;                                  // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnHitCharacter;                                    // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnHitDestructible;                                 // 0x400(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnHitOther;                                        // 0x410(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class AActor*                                LastHitActor;                                      // 0x420(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6DFE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleEffect>                VehicleEffects;                                    // 0x438(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6DFF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleEffectsComponent* GetDefaultObj();

	void StopEffects(enum class EVehicleEffectEvent Event);
	void SetEffectVectorParameter(class FName& ParamName, struct FVector& ParamValue, struct FVehicleEffectQueryData& QueryData);
	void SetEffectMaterialParameter(class FName& ParamName, class UMaterialInterface* ParamValue, struct FVehicleEffectQueryData& QueryData);
	void SetEffectFloatParameter(class FName& ParamName, float ParamValue, struct FVehicleEffectQueryData& QueryData);
	void SetEffectColorParameter(class FName& ParamName, struct FLinearColor& ParamValue, struct FVehicleEffectQueryData& QueryData);
	void PlayEffects(enum class EVehicleEffectEvent Event);
	void OnStopHorn();
	void OnStatusEffectStarted(class AActor* Receiver, struct FStatusEffectSpec& Spec, enum class EOakElementalType ElementalType);
	void OnStatusEffectEnded(class AActor* Receiver, struct FStatusEffectSpec& Spec, enum class EOakElementalType ElementalType);
	void OnStartHorn();
	void OnPrimarySeatStatusChanged();
	void OnPreBeginFreeze(enum class EFreezeType FreezeType);
	void OnHoverStart();
	void OnHoverEnd();
	void OnHealthy();
	void OnHealthVeryLow();
	void OnHealthLow();
	void OnGearShift(int32 Gear, bool bIsShiftingUp);
	void OnDigitrustStart();
	void OnDigitrustEnd();
	void OnDead();
	void OnCryoThawing();
	void OnCryoThawed();
	void OnCryoFrozen();
	void OnCryoFreezing();
	void OnBoostEnd();
	void OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void AnimateScalarParameterValueWithCallback(class UMaterialInstanceDynamic* MaterialInstanceDynamic, class FName ParameterName, const struct FVector2D& ValueRange, float Time, UDelegateProperty_& OnAnimateEnded);
	void AnimateScalarParameterValue(class UMaterialInstanceDynamic* MaterialInstanceDynamic, class FName ParameterName, const struct FVector2D& ValueRange, float Time);
};

// 0x20 (0x50 - 0x30)
// Class OakGame.BaseVehicleEffectData
class UBaseVehicleEffectData : public UGbxDataAsset
{
public:
	class FName                                  Event;                                             // 0x30(0x8)(BlueprintReadOnly, ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleEffectEvent               EffectEvent;                                       // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerOnly;                                       // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExcludedInSplitScreen;                            // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E00[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         StartCondition;                                    // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         StopCondition;                                     // 0x48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBaseVehicleEffectData* GetDefaultObj();

};

// 0x30 (0x80 - 0x50)
// Class OakGame.BaseVehicleEffectDataWithLocation
class UBaseVehicleEffectDataWithLocation : public UBaseVehicleEffectData
{
public:
	class FName                                  Socket;                                            // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentTag;                                      // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RelativeLocation;                                  // 0x60(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRotation;                                  // 0x6C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RelativeScale;                                     // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E01[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBaseVehicleEffectDataWithLocation* GetDefaultObj();

};

// 0x38 (0xB8 - 0x80)
// Class OakGame.VehicleAudioEffect
class UVehicleAudioEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	bool                                         bPlayAudioAtLocation;                              // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E02[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           StartAudioEvent;                                   // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopAudioEvent;                                    // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FConditionalAudioSwitch>       ConditionalAudioSwitches;                          // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  AudioComponentName;                                // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AudioEmitterRadius;                                // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E03[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleAudioEffect* GetDefaultObj();

};

// 0x20 (0xA0 - 0x80)
// Class OakGame.VehicleParticleEffect
class UVehicleParticleEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	class UParticleSystem*                       ParticleEffect;                                    // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoActivate;                                     // 0x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachToParent;                                   // 0x89(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysSpawnNewInstance;                           // 0x8A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnOnStop;                                      // 0x8B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E04[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ParticleComponentTag;                              // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableBeforeFreeze;                              // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E05[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleParticleEffect* GetDefaultObj();

};

// 0x60 (0xE0 - 0x80)
// Class OakGame.VehicleImpactEffect
class UVehicleImpactEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	class UImpactData*                           ImpactData;                                        // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRelativeDirectionData                ImpactTraceDirection;                              // 0x88(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ImpactTraceLength;                                 // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 TraceChannel;                                      // 0xDC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E06[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleImpactEffect* GetDefaultObj();

};

// 0x18 (0x98 - 0x80)
// Class OakGame.VehicleExplosionEffect
class UVehicleExplosionEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	class UExplosionData*                        ExplosionData;                                     // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionSize;                                     // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E07[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageType>               ExplosionDamageType;                               // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVehicleExplosionEffect* GetDefaultObj();

};

// 0x10 (0x90 - 0x80)
// Class OakGame.VehicleFeedbackEffect
class UVehicleFeedbackEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	class UFeedbackData*                         FeedbackData;                                      // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeedbackScale;                                     // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoop;                                             // 0x8C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocalOnly;                                        // 0x8D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopFeedback;                                     // 0x8E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E08[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleFeedbackEffect* GetDefaultObj();

};

// 0x28 (0x78 - 0x50)
// Class OakGame.VehicleEmitterEnableEffect
class UVehicleEmitterEnableEffect : public UBaseVehicleEffectData
{
public:
	struct FVehicleEffectQueryData               QueryData;                                         // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FEmitterEnableData>            EmittersEnableData;                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVehicleEmitterEnableEffect* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class OakGame.VehicleSetAnimPlayRateEffect
class UVehicleSetAnimPlayRateEffect : public UBaseVehicleEffectData
{
public:
	class FName                                  SkelMeshTag;                                       // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartPlayRate;                                     // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopPlayRate;                                      // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVehicleSetAnimPlayRateEffect* GetDefaultObj();

};

// 0x28 (0x78 - 0x50)
// Class OakGame.VehiclePlaySingleAnimEffect
class UVehiclePlaySingleAnimEffect : public UBaseVehicleEffectData
{
public:
	class FName                                  SkelMeshTag;                                       // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehiclePlaySingleAnimMode        PlayMode;                                          // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E09[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       AnimationAsset;                                    // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoop;                                             // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaying;                                          // 0x69(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCurrentAnimPosition;                           // 0x6A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E0A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Position;                                          // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayRate;                                          // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E0B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehiclePlaySingleAnimEffect* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.VehicleElementalEffectImmunityAspectData
class UVehicleElementalEffectImmunityAspectData : public UOakVehicleAspectData
{
public:
	enum class EOakStatusEffectResourceEffectType ResourceEffectType;                                // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LinkedToShield;                                    // 0x39(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E0C[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleElementalEffectImmunityAspectData* GetDefaultObj();

};

// 0x48 (0x568 - 0x520)
// Class OakGame.VehicleSeatPawn
class AVehicleSeatPawn : public ASeatPawn
{
public:
	uint8                                        Pad_6E0D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UVehicleSeatComponent*                 VehicleSeatComponent;                              // 0x538(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTurretMovementComponent*              TurretMovementComponent;                           // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bControlledByVehicleWhenUnoccupied;                // 0x548(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E0E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxHUDData*                           HUDInfo;                                           // 0x550(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakVehicle*                           Vehicle;                                           // 0x558(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bControlledByVehicle;                              // 0x560(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E0F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreCollisionWithVehicle;                       // 0x562(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E10[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AVehicleSeatPawn* GetDefaultObj();

	class AOakVehicle* GetVehicle();
};

// 0x40 (0x5A8 - 0x568)
// Class OakGame.VehicleGunnerSeatPawn
class AVehicleGunnerSeatPawn : public AVehicleSeatPawn
{
public:
	class USmartObjectComponent*                 GetInSmartObject;                                  // 0x568(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SmartObjectComponentName;                          // 0x570(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GetInVehicleBlackboardKeyName;                     // 0x578(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GetInVehicleSlotIndexBlackboardKeyName;            // 0x580(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxBlackboardKeySelector             GetInVehicleBlackboardKey;                         // 0x588(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxBlackboardKeySelector             GetInVehicleSlotIndexBlackboardKey;                // 0x598(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AVehicleGunnerSeatPawn* GetDefaultObj();

	void OnActionUsageEnded(class AController* UserController, const struct FGameplayTag& ActionTag, enum class ESmartActionResult Result);
	void OnActionReserved(class AController* UserController, const struct FGameplayTag& ActionTag);
};

// 0x10 (0x48 - 0x38)
// Class OakGame.VehicleModifyPhysicPropertiesAspectData
class UVehicleModifyPhysicPropertiesAspectData : public UOakVehicleAspectData
{
public:
	float                                        AdditionalMass;                                    // 0x38(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InertiaTensorScale;                                // 0x3C(0xC)(Edit, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVehicleModifyPhysicPropertiesAspectData* GetDefaultObj();

};

// 0xC0 (0x7B0 - 0x6F0)
// Class OakGame.VehicleSeatComponent
class UVehicleSeatComponent : public UOakPawnAttachSlotComponent
{
public:
	int32                                        SeatSlot;                                          // 0x6F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdjacentSeatSlot;                                  // 0x6F4(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipExitTransitionWhenFlipped;                    // 0x6F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E13[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakVehicle*                           Vehicle;                                           // 0x700(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TransitionSeatSlot;                                // 0x708(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseVehicleAimSettings;                            // 0x70C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAffectVehicleTeam;                                // 0x70D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCrouchWhenSeated;                                 // 0x70E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotUsableByEnemies;                               // 0x70F(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFollowVehicleRotation            FollowVehicleRotation;                             // 0x710(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForcePawnIgnoreControllerRotationOnTransition;    // 0x711(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForcePawnUseAllControllerRotationWhileAttached;   // 0x712(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowRootMotionWhileAttached;                     // 0x713(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideFirstPersonLegsWhileAttached;                 // 0x714(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableHandToWeaponAlpha;                         // 0x715(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUsingBaseAnimation;                             // 0x716(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E14[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HideFirstPersonLegsReason;                         // 0x718(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeSwitchedTo;                                  // 0x720(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaySafePlaceTransitionWhenNoDetachTransitionFound; // 0x721(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E15[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPawnDetachTransition                 DetachToSafePlaceTransition;                       // 0x728(0x68)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bOptimizeInteractBoxes;                            // 0x790(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E16[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUseCharacterWeaponSettings           UseCharacterWeapon;                                // 0x794(0x4)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bUseCharacterWeapon;                               // 0x798(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E17[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AdditiveMovementScale;                             // 0x79C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdditiveSpeedScale;                                // 0x7A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E18[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleSeatComponent* GetDefaultObj();

	void ReserveSeat(class AActor* Actor);
	void RequestSwitchSeats();
	bool IsReservedBy(class AActor* Actor);
	bool IsReserved();
	bool CanUseCharacterWeapon();
};

// 0x28 (0x60 - 0x38)
// Class OakGame.VehicleSetBoostDataAspectData
class UVehicleSetBoostDataAspectData : public UOakVehicleAspectData
{
public:
	TSoftObjectPtr<class UVehicleBoostData>      BoostDataToSet;                                    // 0x38(0x28)(Edit, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVehicleSetBoostDataAspectData* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class OakGame.VehicleScanData
class UVehicleScanData : public UObject
{
public:
	class AOakVehicle*                           VehicleScan;                                       // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NewPartUnlocks;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E19[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleScanData* GetDefaultObj();

};

// 0x160 (0x2D8 - 0x178)
// Class OakGame.VehicleSpawnerComponent
class UVehicleSpawnerComponent : public UActorComponent
{
public:
	uint8                                        Pad_6E23[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInventoryDataUnlockedInfo>    WheelsUnlocked;                                    // 0x188(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UVehicleClassIdentifier*>       VehiclesUnlocked;                                  // 0x198(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FInventoryPartDataUnlockedInfo> PartsUnlocked;                                     // 0x1A8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FOakCARMenuVehicleConfig>      VehicleLoadouts;                                   // 0x1B8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        LastUsedVehicleLoadoutIndex;                       // 0x1C8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E24[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          RespawnVehicleTimer;                               // 0x1D8(0x8)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6E25[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryData*                        SpawnInventoryData;                                // 0x290(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryBalanceData*                 SpawnInventoryBalanceData;                         // 0x298(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakVehicle*                           LastVehicleSpawn;                                  // 0x2A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6E26[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleSpawnerComponent* GetDefaultObj();

	void UnlockVehicleForAllPlayers(class UObject* WorldContextObject, TSoftObjectPtr<class UInventoryData> Vehicle);
	void UnlockVehicleAndPartForAllPlayer(class AOakVehicle* Vehicle);
	void UnlockPartForAllPlayers(class UObject* WorldContextObject, TSoftObjectPtr<class UInventoryPartData> Part);
	void SpawnMissionVehicle(class ACatchARide* Console);
	void SetMissionVehicle(class UWorld* World, class AOakSpawner* MissionSpawner);
	void ServerUpdateLoadoutAtIndex(int32 Index, struct FOakCARMenuVehicleConfig& NewLoadout);
	void ServerUpdateLastUsedVehicleLoadoutIndex(int32 NewIndex);
	void RequestVehicleSpawnCallback();
	void RequestVehicleSpawn(class AActor* PreviousVehicle);
	bool IsVehicleUnlocked(TSoftObjectPtr<class UInventoryData> Vehicle);
	bool IsPartUnlocked(TSoftObjectPtr<class UInventoryPartData> Part);
	bool IsMissionVehicleCanBeSpawn(class ACatchARide* CatchRideStation);
	void GetVehicleUnlocked(TArray<class UOakCARVehicleData*>* Vehicles);
	class UOakCARVehicleData* GetVehicleType(class AOakVehicle* Vehicle);
	void GetVehiclePartUnlocked(class UOakCARVehicleData* Vehicle, enum class ECARPartType PartType, TArray<class UOakCARVehiclePartData*>* Parts);
	class UOakCARVehiclePartData* GetVehiclePartByType(class AOakVehicle* Vehicle, enum class ECARPartType Type);
	bool GetVehicleLoadoutAtIndex(int32 VehicleLoadoutindex, struct FOakCARMenuVehicleConfig* OutLoadout);
	int32 GetTotalNumVehicles();
	int32 GetTotalNumParts(class UOakCARVehicleData* Vehicle, enum class ECARPartType PartType);
	void GetNewlyUnlockedVehicles(TArray<class UOakCARVehicleData*>* Vehicles);
	class AOakVehicle* GetLastVehicleSpawn();
};

// 0x28 (0x480 - 0x458)
// Class OakGame.VehicleSpline
class AVehicleSpline : public AActor
{
public:
	uint8                                        Pad_6E27[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      SplineComponent;                                   // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGbxSpawner*                           DropOffSpawner;                                    // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AVehicleSpline*                        PostDropOffExitSpline;                             // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ExitSequenceLeadInDistance;                        // 0x478(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DescentLeadInDistance;                             // 0x47C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AVehicleSpline* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class OakGame.VehicleStatusEffectModifiersAspectData
class UVehicleStatusEffectModifiersAspectData : public UOakVehicleAspectData
{
public:
	TArray<struct FStatusEffectModifiers>        StatusEffectModifiers;                             // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	bool                                         LinkedToShield;                                    // 0x48(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasHijackProtection;                              // 0x49(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E28[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleStatusEffectModifiersAspectData* GetDefaultObj();

};

// 0x138 (0x2C8 - 0x190)
// Class OakGame.VehicleTrailComponent
class UVehicleTrailComponent : public UVehicleComponent
{
public:
	enum class ETickingGroup                     TrailTickGroup;                                    // 0x190(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E29[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleTrailParticleSystemData       DefaultParticleSystem;                             // 0x198(0x18)(Edit, NativeAccessSpecifierPublic)
	TMap<class UPhysicalMaterial*, struct FVehicleTrailParticleSystemData> ParticlePerPhysicalMaterial;                       // 0x1B0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVehicleTrailData>             TrailData;                                         // 0x200(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        TrailTranslucentSortPriority;                      // 0x210(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedForTrail;                                  // 0x214(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrailUpOffset;                                     // 0x218(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrameIndex;                                        // 0x21C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SkidMarkSize;                                      // 0x220(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRPMForFastSpin;                                 // 0x22C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedForFastSpin;                               // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedToActivateBigCore;                         // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRPMToActivateBigCore;                           // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParticleDriftVelocity;                             // 0x23C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasUpgrade01;                                     // 0x240(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasUpgrade02;                                     // 0x241(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E2A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UElementalInteractionData*, struct FVehicleTrailParticleSystemData> WadeParticleSystems;                               // 0x248(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVehicleTrailParticleSystemData       DefaultWadeParticleSystem;                         // 0x298(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FExtraWadingData>              ExtraWadingEffects;                                // 0x2B0(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UWheeledVehicleMovementComponentNW*    WheelMoveComp;                                     // 0x2C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UVehicleTrailComponent* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_CanUseRefillAmmo
class UGbxCondition_CanUseRefillAmmo : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_CanUseRefillAmmo* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class OakGame.GbxCondition_HasJunkToSell
class UGbxCondition_HasJunkToSell : public UGbxCondition
{
public:

	static class UClass* StaticClass();
	static class UGbxCondition_HasJunkToSell* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.VendingMachineRefillAllAmmoValueResolver
class UVendingMachineRefillAllAmmoValueResolver : public UAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class UVendingMachineRefillAllAmmoValueResolver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.VendingMachineSellAllJunkCostValueResolver
class UVendingMachineSellAllJunkCostValueResolver : public UAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class UVendingMachineSellAllJunkCostValueResolver* GetDefaultObj();

};

// 0x40 (0x6C0 - 0x680)
// Class OakGame.VendingMachine
class AVendingMachine : public AAdvancedInteractiveObject
{
public:
	uint8                                        Pad_6E2D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EVendingMachineType               VendingMachineType;                                // 0x690(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableItemOfTheDay;                               // 0x691(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSellsGearSoldByFriends;                           // 0x692(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E2E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBalanceStateComponent*                BalanceComponent;                                  // 0x698(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryShopComponent*               InventoryShopComponent;                            // 0x6A0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxAreaComponent*                     ItemOfTheDayAreaComponent;                         // 0x6A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostUseRespawnDelaySeconds;                        // 0x6B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E2F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         BoxComponent;                                      // 0x6B8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AVendingMachine* GetDefaultObj();

	void RegisterWithPersistenceManagerPostSpawn(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnPlayerExitedItemOfTheDayArea(class AGbxPlayerController* Player);
	void OnPlayerEnteredItemOfTheDayArea(class AGbxPlayerController* Player);
	void K2_OnSoldSomething(class AActor* InventoryActor);
	void K2_OnSoldAllJunk();
	void K2_OnShelfStablySelected(enum class EVendingMachineTrayTileType Type, class AActor* InventoryActor);
	void K2_OnRefilledAllHealth();
	void K2_OnRefilledAllAmmo();
	void K2_OnBoughtSomething(enum class EVendingMachineBuyType Type, class AActor* InventoryActor);
};

// 0x1B0 (0x208 - 0x58)
// Class OakGame.VendingMachineMenuData
class UVendingMachineMenuData : public UGbxUmgMenuData
{
public:
	TArray<struct FVendingMachineMenuFilter>     Filters;                                           // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           BackgroundImage;                                   // 0x68(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGFxBackpackWidgetConfig              BackpackConfig;                                    // 0xF0(0x118)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVendingMachineMenuData* GetDefaultObj();

};

// 0x5A8 (0xAB0 - 0x508)
// Class OakGame.VendingMachineProxy
class AVendingMachineProxy : public AAdvancedInteractiveObjectProxy
{
public:
	uint8                                        Pad_6E36[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnTilePhysicalStateDirty;                          // 0x5A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnVendingMachineScrolled;                          // 0x5B8(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInventoryBought;                                 // 0x5C8(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E37[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPickupLootAttachmentMode         ItemAttachmentMode;                                // 0x5F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E38[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumTrayTiles;                                      // 0x5F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrimaryTrayIndex;                                  // 0x5F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VisibleTrayTilesBufferSize;                        // 0x5FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndOfListPaddingSize;                              // 0x600(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinNumTilesToAllowWrapping;                        // 0x604(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinNumTiles;                                       // 0x608(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideDummyTiles;                                   // 0x60C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E39[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScrollSkipMaxDuration;                             // 0x610(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bScrollSkipOverSoldOutTiles;                       // 0x614(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPickupFlyToEnabled;                               // 0x615(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E3A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayBeforeShelfIsStablySelected;                  // 0x618(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E3B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0x620(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVendingMachineInteractionMode    CurrentInteractionMode;                            // 0x628(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVendingMachineTilesMode          CurrentTilesMode;                                  // 0x629(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanChangeInteractionMode;                         // 0x62A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E3C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         Animations[0x10];                                  // 0x630(0x80)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AnimIndexOffsets[0x10];                            // 0x6B0(0x40)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBeforeHidingPurchasedItem;                    // 0x6F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBeforeDigistructingBackInPurchasedItem;       // 0x6F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBeforePurchaseItemClunkSound;                 // 0x6F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ShelfMeshOffset;                                   // 0x700(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UStaticMesh*                           DefaultShelfMesh;                                  // 0x730(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           FeaturedInventoryShelfMesh;                        // 0x738(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ShelfBoxExtent;                                    // 0x740(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E3E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    DefaultShelfMaterial;                              // 0x750(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DefaultFeaturedInventoryShelfMaterial;             // 0x758(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SelectedShelfMaterialParameterName;                // 0x760(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InStockShelfMaterialMaterialName;                  // 0x768(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVendingMachineItemRarityData> ShelfRarityInfo;                                   // 0x770(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ItemScoreEmitterTemplate;                          // 0x780(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ItemScoreParticleSortPriority;                     // 0x788(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E3F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemScoreParameterName;                            // 0x790(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInt32Interval                        ItemScoreParameterRange;                           // 0x798(0x8)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ItemScoreParticleScale;                            // 0x7A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ItemScoreParticleTranslationOffset;                // 0x7A4(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ItemScorePositionParameterName;                    // 0x7B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SoldOutParticleTemplate;                           // 0x7B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SoldOutParticleSortPriority;                       // 0x7C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              SoldOutParticleRotation;                           // 0x7C4(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DefaultSelectedItemEmitterTemplate;                // 0x7D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       CompareItemEmitterTemplate;                        // 0x7D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SelectedItemParticleSortPriority;                  // 0x7E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E40[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SelectedItemParticleRarityParameterName;           // 0x7E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              SelectedItemParticleRotation;                      // 0x7F0(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               SelectedItemParticleTranslation;                   // 0x7FC(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ErrorShelfEmitterTemplate;                         // 0x808(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ErrorParticleSortPriority;                         // 0x810(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              ErrorShelfParticleRotation;                        // 0x814(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ErrorShelfParticleTranslation;                     // 0x820(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E41[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction_CoordinatedEffect> ItemDigistructInCE;                                // 0x830(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGbxAction_CoordinatedEffect> ItemDigistructOutCE;                               // 0x838(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVendingMachineInteractSequence       StartInteractSequence;                             // 0x840(0x90)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVendingMachineInteractSequence       StopInteractionSequence;                           // 0x8D0(0x90)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UPhysicalMaterial*                     PrimaryPhysMat;                                    // 0x960(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           ErrorSoundEvent;                                   // 0x968(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           DigistructInItemEvent;                             // 0x970(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           EnteredItemOfTheDayRangeEvent;                     // 0x978(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           ExitedItemOfTheDayRangeEvent;                      // 0x980(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           PurchaseSoundEvent;                                // 0x988(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSellJunkDuration;                               // 0x990(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxJunkCount;                                      // 0x994(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerShopManagerComponent*           PlayerShopManager;                                 // 0x998(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FrontPlateComponent;                               // 0x9A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AVendingMachine*                       OwningVendingMachine;                              // 0x9A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryShopComponent*               OwningShopComponent;                               // 0x9B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVendingMachineTrayTile>       PurchasableTiles;                                  // 0x9B8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FVendingMachineTrayTile>       BuyBackTiles;                                      // 0x9C8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FVendingMachineTrayTile>       SellTiles;                                         // 0x9D8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FVendingMachinePhysicalShelf>  PhysicalShelves;                                   // 0x9E8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              SelectedItemParticleComponent;                     // 0x9F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              HoveredItemParticleComponent;                      // 0xA00(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ErrorSelectionParticleComponent;                   // 0xA08(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              CompareItemParticleComponent;                      // 0xA10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseAudioComponent*                  AudioComponent;                                    // 0xA18(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SelectedTileIndex;                                 // 0xA20(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SelectedCompareItemTileIndex;                      // 0xA24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVendingMachineLastSelectionData      LastSelectionData[0x3];                            // 0xA28(0x30)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EVendingMachineAnimType           CurrentAnimType;                                   // 0xA58(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6E42[0x57];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AVendingMachineProxy* GetDefaultObj();

	void StopAnimation();
	void SetAnimationPaused(bool bNewPaused);
	void ScrollUp(float ScrollDuration, bool bIsInitialPress, bool bCanThrottle);
	void ScrollRight(float ScrollDuration, bool bIsInitialPress, bool bCanThrottle);
	void ScrollDown(float ScrollDuration, bool bIsInitialPress, bool bCanThrottle);
	void OnStopInteractionSequenceFinished();
	void OnStartInteractionSequenceFinished();
	void K2_OnSoldSomething(class AActor* InventoryActor);
	void K2_OnSoldAllJunk();
	void K2_OnShelfStablySelected(enum class EVendingMachineTrayTileType Type, class AActor* InventoryActor);
	void K2_OnRefilledAllHealth();
	void K2_OnRefilledAllAmmo();
	void K2_OnItemDroppedToBottomOfVendingMachine();
	void K2_OnBoughtSomething(enum class EVendingMachineBuyType Type, class AActor* InventoryActor);
	struct FTransform GetCurrentSocketTransform(class AActor* InventoryActor, enum class EVendingMachineTilesMode Mode, int32 SocketLocation);
};

// 0x10 (0x2E0 - 0x2D0)
// Class OakGame.ViewAttachmentComponent
class UViewAttachmentComponent : public USceneComponent
{
public:
	bool                                         bUpdateLocation;                                   // 0x2D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateRotation;                                   // 0x2D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E43[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ViewPitchScale;                                    // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E44[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UViewAttachmentComponent* GetDefaultObj();

};

// 0x38 (0x1B0 - 0x178)
// Class OakGame.VoidMasterOrbsComponent
class UVoidMasterOrbsComponent : public UActorComponent
{
public:
	float                                        MinimumThrowDistance;                              // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaximumThrowDistance;                              // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnThrowSpeed;                                   // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnThrowAnglePercent;                            // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReboundAnticipationPercent;                        // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SectionAngleOffset;                                // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakProjectile>            ProjectileClass;                                   // 0x190(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E45[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVoidMasterOrbsComponent* GetDefaultObj();

	void SpawnOrbs(const struct FVector& SpawnLocation, int32 Amount);
	void SetArena(const struct FVector& ArenaLocation, float Radius);
};

// 0xD0 (0x248 - 0x178)
// Class OakGame.WadingEffectsComponent
class UWadingEffectsComponent : public UActorComponent
{
public:
	TMap<class UElementalInteractionData*, class UParticleSystem*> WakeParticleSystems;                               // 0x178(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              WakePSC;                                           // 0x1C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ALargeLiquidBody*                      CurrentOverlappingLLB;                             // 0x1D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentOverlappingLLBSectionIndex;                 // 0x1D8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E46[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UElementalInteractionData*             CurrentLiquidElement;                              // 0x1E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                     CurrentLiquidPhysMat;                              // 0x1E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentLiquidZ;                                    // 0x1F0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAttachedToPlayer;                               // 0x1F4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E47[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UPrimitiveComponent*, int32>      OverlappingRivers;                                 // 0x1F8(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UWadingEffectsComponent* GetDefaultObj();

	void NotifyEndRiverOverlap(class UPrimitiveComponent* RiverMesh, class UPrimitiveComponent* OtherComponent);
	void NotifyBeginRiverOverlap(class UPrimitiveComponent* RiverMesh, class UPrimitiveComponent* OtherComponent);
};

// 0x60 (0x5E8 - 0x588)
// Class OakGame.WantedPoster
class AWantedPoster : public AInteractiveObject
{
public:
	class UWantedPosterDefinition*               NativeDefinition;                                  // 0x588(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CharacterMeshComponentName;                        // 0x590(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PosterMeshComponentName;                           // 0x598(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NearbyPlayerOverlapComponentName;                  // 0x5A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxSkeletalMeshComponent*             PosterMeshComponent;                               // 0x5A8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxSkeletalMeshComponent*             CharacterMeshComponent;                            // 0x5B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   NearbyPlayerOverlapComponent;                      // 0x5B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionDirectorComponent*             MissionDirectorComponent;                          // 0x5C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionObserverComponent*             MissionObserverComponent;                          // 0x5C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHologramActive;                                   // 0x5D0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E4A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        RegisteredNearbyPlayers;                           // 0x5D8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AWantedPoster* GetDefaultObj();

	void OnRep_bHologramActive();
	void OnNearbyPlayerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnNearbyPlayerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnHologramActiveChanged();
	void HandlePlayerActorDestroyed(class AActor* Actor);
	TSubclassOf<class UMission> GetWantedPosterMission();
};

// 0xD0 (0x100 - 0x30)
// Class OakGame.WantedPosterDefinition
class UWantedPosterDefinition : public UGbxDataAsset
{
public:
	class USkeletalMesh*                         SkeletalMesh;                                      // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E4B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            SkeletalMeshTransform;                             // 0x40(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SkeletalMeshAnimation;                             // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGestaltPartListData*                  GestaltPartList;                                   // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            HologramMaterialOverrides;                         // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UMission>                Mission;                                           // 0x90(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionObjectiveSetReference         MissionEntryPoint;                                 // 0xB8(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWantedPosterDefinition* GetDefaultObj();

};

// 0x58 (0x208 - 0x1B0)
// Class OakGame.WeaponAmmoCurrencyComponent
class UWeaponAmmoCurrencyComponent : public UWeaponAmmoComponent
{
public:
	class UInventoryCategoryData*                CurrencyType;                                      // 0x1B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeInteger                  MaxLoadedAmmo;                                     // 0x1B8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxStoredAmmo;                                     // 0x1C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LoadedAmmo;                                        // 0x1C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StoredAmmo;                                        // 0x1CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SpareAmmo;                                         // 0x1D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bInfiniteAmmoForAI : 1;                            // Mask: 0x1, PropSize: 0x10x1D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_269 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6E4C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ServerSyncedLoadedAmmo;                            // 0x1D8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E4D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryListComponent*               OwnerInventoryComponent;                           // 0x1E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6E4E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponAmmoCurrencyComponent* GetDefaultObj();

	void ServerSendAmmoState();
	void OnRep_SpareAmmo();
	void OnRep_ServerSyncedLoadedAmmo();
	void OnMaxLoadedAmmoChanged(float OldValue, float NewValue);
	void OnGivenTo();
	void ClientSetLoadedAmmo(int32 NewLoadedAmmo);
	void ClientConsumeAmmo(int32 Amount);
};

// 0x20 (0x58 - 0x38)
// Class OakGame.WeaponEffectBaseAspectData
class UWeaponEffectBaseAspectData : public UInventoryAspectData
{
public:
	struct FGameplayTagContainer                 ComparisonTags;                                    // 0x38(0x20)(Edit, BlueprintReadOnly, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponEffectBaseAspectData* GetDefaultObj();

};

// 0x68 (0xC0 - 0x58)
// Class OakGame.WeaponAttachmentEffectAspectData
class UWeaponAttachmentEffectAspectData : public UWeaponEffectBaseAspectData
{
public:
	struct FWeaponRegisterAttachmentEffectData   EffectData;                                        // 0x58(0x60)(Edit, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bCloneInHighDetailView;                            // 0xB8(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E4F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponAttachmentEffectAspectData* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class OakGame.WeaponAttributeEffectsAspectData
class UWeaponAttributeEffectsAspectData : public UInventoryAttributeEffectsAspectData
{
public:
	TArray<struct FWeaponUseModeAttributeEffectData> WeaponUseModeAttributeEffects;                     // 0x70(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponAttributeEffectsAspectData* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class OakGame.WeaponAudioAspectData
class UWeaponAudioAspectData : public UInventoryAspectData
{
public:
	int32                                        UseModeBitmask;                                    // 0x38(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6E50[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UWwiseEvent*>                   ConfigurationEvents;                               // 0x40(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<struct FWeaponConfigurationRtpc>      ConfigurationRtpcs;                                // 0x50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ConfigureWwiseEvent;                               // 0x60(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponAudioAspectData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.WeaponAudioStreamingAspectData
class UWeaponAudioStreamingAspectData : public UInventoryAspectData
{
public:
	TArray<class UWwiseEvent*>                   EventsToPrepareForStreaming;                       // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponAudioStreamingAspectData* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.WeaponBonusCollectionData
class UWeaponBonusCollectionData : public UGbxDataAsset
{
public:
	TArray<struct FWeaponBonusData>              Bonuses;                                           // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponBonusCollectionData* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class OakGame.WeaponBonusDataTableData
class UWeaponBonusDataTableData : public UGbxDataAsset
{
public:
	class UDataTable*                            DataTable;                                         // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWeaponBonusDataTableAttributeMappingData> AttributeMapping;                                  // 0x38(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FWeaponBonusDataTableColumnCollectionData> ColumnCollections;                                 // 0x48(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponBonusDataTableData* GetDefaultObj();

	void EnumerateDataTableColumnNames(TArray<class FString>* OutColumnNames);
};

// 0x0 (0xD0 - 0xD0)
// Class OakGame.WeaponBonusDataTableAttributeValueResolver
class UWeaponBonusDataTableAttributeValueResolver : public UDataTableAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class UWeaponBonusDataTableAttributeValueResolver* GetDefaultObj();

};

// 0x48 (0x80 - 0x38)
// Class OakGame.WeaponBonusAspectData
class UWeaponBonusAspectData : public UInventoryAspectData
{
public:
	uint8                                        Pad_6E51[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInitializationBonus;                              // 0x40(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E52[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponBonusCollectionData*            BonusCollection;                                   // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          BonusesToApply;                                    // 0x50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FWeaponBonusDataTableSelectionData> DataTableBonuses;                                  // 0x60(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                BonusIndices;                                      // 0x70(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponBonusAspectData* GetDefaultObj();

	void EnumerateDataTableRowNames(class UWeaponBonusDataTableData* WeaponBonusDataTable, TArray<class FName>* OutRowNames);
	void EnumerateDataTableColumnNames(class UWeaponBonusDataTableData* WeaponBonusDataTable, TArray<class FString>* OutColumnNames);
	void EnumerateDataTableColumnCollections(class UWeaponBonusDataTableData* WeaponBonusDataTable, TArray<class FName>* OutColumnCollections);
	void EnumerateBonuses(TArray<class FName>* OutBonuses);
};

// 0x58 (0x290 - 0x238)
// Class OakGame.WeaponCOVHeatComponent
class UWeaponCOVHeatComponent : public UWeaponHeatComponent
{
public:
	int32                                        MinShotsToBreak;                                   // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxShotsToBreak;                                   // 0x23C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConsecutiveBreakInfluence;                         // 0x240(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E53[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCOVBrokenEffectData>          BrokenEffects;                                     // 0x248(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        Jankiness;                                         // 0x258(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBroken;                                           // 0x25C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E54[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumShotsToBreak;                                   // 0x260(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int8                                         SelectedBrokenEffectsIndex;                        // 0x264(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumOverheatedShots;                                // 0x268(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RepairHeatCooldownRate;                            // 0x26C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E56[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UStaticMeshComponent*>          BrokenMeshComponents;                              // 0x278(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E57[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponCOVHeatComponent* GetDefaultObj();

	void RepairedNotify();
	void OnRepaired();
	void OnRep_Broken(bool bWasBroken);
	void OnDropped();
	void OnBroken();
};

// 0x30 (0x208 - 0x1D8)
// Class OakGame.WeaponCOVRepairComponent
class UWeaponCOVRepairComponent : public UWeaponReloadComponent
{
public:
	uint8                                        CurrentRepairType;                                 // 0x1D8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E58[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCOVRepairType>                RepairTypes;                                       // 0x1E0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E59[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint16                                       ClientRepairState;                                 // 0x202(0x2)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6E5A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponCOVRepairComponent* GetDefaultObj();

	void OnRep_ClientRepairState();
};

// 0x20 (0x58 - 0x38)
// Class OakGame.WeaponDamageTypeAspectData
class UWeaponDamageTypeAspectData : public UInventoryAspectData
{
public:
	int32                                        UseModeBitmask;                                    // 0x38(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E5B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImpactData*                           ImpactData;                                        // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseForBeamsOnly;                                  // 0x50(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E5C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponDamageTypeAspectData* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.WeaponElementColorizationEvaluator
class UWeaponElementColorizationEvaluator : public UParticleParameterEvaluator
{
public:
	class FName                                  ParameterName;                                     // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponElementColorizationEvaluator* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class OakGame.WeaponEnchantmentTierAttributeValueResolver
class UWeaponEnchantmentTierAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FAttributeInitializationData          BaseValueToScale;                                  // 0x28(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FWeaponEnchantmentTierData>    Tiers;                                             // 0x60(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponEnchantmentTierAttributeValueResolver* GetDefaultObj();

};

// 0x10 (0x968 - 0x958)
// Class OakGame.WeaponFireLootComponent
class UWeaponFireLootComponent : public UWeaponFireProjectileComponent
{
public:
	bool                                         bSpawnLootAtInstigatorLevel;                       // 0x958(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E5D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseProjectileSpeed;                               // 0x95C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemPoolData*                         ItemPool;                                          // 0x960(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponFireLootComponent* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.WeaponFoleyAspectData
class UWeaponFoleyAspectData : public UInventoryAspectData
{
public:
	class UFoleyAccessoryComponent*              FoleyAccessory;                                    // 0x38(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachmentSocket;                                  // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponFoleyAspectData* GetDefaultObj();

};

// 0x18 (0x230 - 0x218)
// Class OakGame.WeaponGenericUseComponent
class UWeaponGenericUseComponent : public UWeaponUseComponent
{
public:
	bool                                         bIsSelfContainedLoopingMontage;                    // 0x218(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsUsing;                                          // 0x219(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6E5E[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponGenericUseComponent* GetDefaultObj();

	void OnRep_bIsUsing();
};

// 0x28 (0x980 - 0x958)
// Class OakGame.WeaponJAKFireProjectileComponent
class UWeaponJAKFireProjectileComponent : public UWeaponFireProjectileComponent
{
public:
	bool                                         bStackCrits;                                       // 0x958(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNonSuccessiveCritBreaksStack;                     // 0x959(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E5F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStatusEffectData*                     StackStatusEffectData;                             // 0x960(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StackStatusEffectDuration;                         // 0x968(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RefundAmmoCount;                                   // 0x96C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RicochetCount;                                     // 0x970(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RicochetDamageScale;                               // 0x974(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E60[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponJAKFireProjectileComponent* GetDefaultObj();

	void ResetStack();
};

// 0xA8 (0x100 - 0x58)
// Class OakGame.WeaponMaterialEffectAspectData
class UWeaponMaterialEffectAspectData : public UWeaponEffectBaseAspectData
{
public:
	struct FWeaponRegisterMaterialEffectData     EffectData;                                        // 0x58(0xA8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponMaterialEffectAspectData* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class OakGame.WeaponMaterialWearAspectData
class UWeaponMaterialWearAspectData : public UInventoryAspectData
{
public:
	TArray<struct FWeightedFloatRange>           DirtRanges;                                        // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FWeightedFloatRange>           RustRanges;                                        // 0x48(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FWeightedFloatRange>           WearRanges;                                        // 0x58(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponMaterialWearAspectData* GetDefaultObj();

};

// 0x20 (0x2A0 - 0x280)
// Class OakGame.WeaponPartData
class UWeaponPartData : public UInventoryPartData
{
public:
	bool                                         bIgnoredForWeaponNaming;                           // 0x280(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E61[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeaponUseModeAttributeEffectData> WeaponUseModeAttributeEffects;                     // 0x288(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	bool                                         bSecondaryUseModeNeededForStatExtraction;          // 0x298(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E62[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponPartData* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class OakGame.WeaponPlayerMeleeOverrideAspectData
class UWeaponPlayerMeleeOverrideAspectData : public UInventoryAspectData
{
public:
	class UPlayerMeleeData*                      OverridePlayerMeleeData;                           // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponPlayerMeleeOverrideAspectData* GetDefaultObj();

};

// 0x78 (0x360 - 0x2E8)
// Class OakGame.WeaponSightComponent
class UWeaponSightComponent : public UWeaponZoomComponent
{
public:
	int32                                        CustomColorSchemeIndex;                            // 0x2E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUpdateZoomTransitionParam : 1;                    // Mask: 0x1, PropSize: 0x10x2EC(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUpdateColorScheme : 1;                            // Mask: 0x2, PropSize: 0x10x2EC(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseGlobalZoomTransitionState : 1;                 // Mask: 0x4, PropSize: 0x10x2EC(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_26A : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6E63[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ZoomViewFlags;                                     // 0x2F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinTargetTime;                                     // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnProjectileCloserToSightPercentZ;              // 0x2F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnProjectileCloserToSightPercentX;              // 0x2FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAccuracyModifierPct;                            // 0x300(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAccuracyModifierTime;                           // 0x304(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E64[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSightComponent* GetDefaultObj();

};

// 0x80 (0x3E0 - 0x360)
// Class OakGame.WeaponRedDotComponent
class UWeaponRedDotComponent : public UWeaponSightComponent
{
public:
	class UMaterialInstance*                     Material;                                          // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MaterialParamName;                                 // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWeaponRegisterAttachmentEffectData   EffectData;                                        // 0x370(0x60)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MaterialInstance;                                  // 0x3D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E65[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponRedDotComponent* GetDefaultObj();

};

// 0x90 (0x3F0 - 0x360)
// Class OakGame.WeaponScopeComponent
class UWeaponScopeComponent : public UWeaponSightComponent
{
public:
	bool                                         bHideWeapon;                                       // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E67[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           ScopeMesh;                                         // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ScopeMeshOffset;                                   // 0x370(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeMeshScale;                                    // 0x37C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeMeshDepthScale;                               // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E68[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ScopeScreenParticle;                               // 0x388(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       CloseScopeScreenParticle;                          // 0x390(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeScreenTransitionTime;                         // 0x398(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasAmmoCounter : 1;                               // Mask: 0x1, PropSize: 0x10x39C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasWeaponShieldIndicator : 1;                     // Mask: 0x2, PropSize: 0x10x39C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasTargetLockIndicator : 1;                       // Mask: 0x4, PropSize: 0x10x39C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasHeatIndicator : 1;                             // Mask: 0x8, PropSize: 0x10x39C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasChargeIndicator : 1;                           // Mask: 0x10, PropSize: 0x10x39C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInheritAdditionalMaterialParameters : 1;          // Mask: 0x20, PropSize: 0x10x39C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_26B : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6E69[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponEffectQueryData                ZoomTransitionEffectQueryData;                     // 0x3A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E6A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  ScopeMeshComponent;                                // 0x3C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponShieldComponent*                WeaponShieldComponent;                             // 0x3C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponHeatComponent*                  WeaponHeatComponent;                               // 0x3D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponChargeComponent*                WeaponChargeComponent;                             // 0x3D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E6B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponScopeComponent* GetDefaultObj();

	void OnTargetLockChange(class AWeapon* EventWeapon, bool bLockedOn);
	void OnHeatChanged();
	void OnAmmoChanged();
};

// 0x1E0 (0x358 - 0x178)
// Class OakGame.WeaponShieldComponent
class UWeaponShieldComponent : public UActorComponent
{
public:
	uint8                                        Pad_6E6E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameResourcePoolData*                 ShieldData;                                        // 0x180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlockAngle;                                        // 0x188(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E6F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeEffectData>          AttributeEffects;                                  // 0x190(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    MaxShield;                                         // 0x1A0(0xC)(BlueprintVisible, BlueprintReadOnly, Net, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E70[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          MaxShieldFormula;                                  // 0x1B0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UHitRegionData*                        HitRegionData;                                     // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeaponRegisterAttachmentEffectData> EffectsData;                                       // 0x1F0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        HitConfirmDuration;                                // 0x200(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E71[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           HitConfirmCurve;                                   // 0x208(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ScreenHitEffect;                                   // 0x210(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShieldStartEffectId;                               // 0x218(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShieldStopEffectId;                                // 0x21C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShieldBreakEffectId;                               // 0x220(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E72[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameResourcePoolReference            ShieldPool;                                        // 0x228(0x18)(Net, Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class EWeaponShieldActivationTrigger    ActivationTrigger;                                 // 0x240(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponZoomState                  ActivationZoomState;                               // 0x241(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponZoomState                  DeactivationZoomState;                             // 0x242(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E73[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           ShieldStartAudio;                                  // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ShieldStopAudio;                                   // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ShieldBreakAudio;                                  // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ShieldHitAudio;                                    // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ShieldNovaAudio;                                   // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         ShieldStartFeedback;                               // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         ShieldStopFeedback;                                // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         ShieldBreakFeedback;                               // 0x280(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackData*                         ShieldHitFeedback;                                 // 0x288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShieldActivated;                                 // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShieldDeactivated;                               // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTakeDamage;                                      // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShieldNowFull;                                   // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShieldNowDepleted;                               // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShieldNowRegenerating;                           // 0x2E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FGbxAttributeModifierHandle>   AttributeModifiers;                                // 0x2F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        bNotifyWeaponUsed : 1;                             // Mask: 0x1, PropSize: 0x10x300(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShieldCreated : 1;                                // Mask: 0x2, PropSize: 0x10x300(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsShieldActive : 1;                               // Mask: 0x4, PropSize: 0x10x300(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_26C : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bPlayShieldHitAction : 1;                          // Mask: 0x10, PropSize: 0x10x300(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_26D : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class EWeaponShieldState                ShieldState;                                       // 0x301(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E74[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ImpactOffsetSocket;                                // 0x308(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HitConfirmParamName;                               // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldHitActionDuration;                           // 0x318(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E75[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakStatusEffectManagerComponent*      OwnerStatusEffectComponent;                        // 0x328(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseAudioComponent*                  AudioComponent;                                    // 0x330(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScopeComponent*                 ActiveScopeComponent;                              // 0x338(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E76[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AWeapon*                               WeaponPrivate;                                     // 0x350(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UWeaponShieldComponent* GetDefaultObj();

	void StopShieldEffect();
	void StartShieldEffect();
	void ResourceNowRegenerating(const struct FGameResourcePoolReference& ResourcePool);
	void ResourceNowFull(const struct FGameResourcePoolReference& ResourcePool);
	void PlayHitConfirm();
	void PlayFeedbackSoundEvent(class UWwiseEvent* Event, bool bReplicated);
	void OnZoomingOut(uint8 Level);
	void OnWeaponUsed();
	void OnShieldCreated();
	void OnRep_ShieldState(enum class EWeaponShieldState PreviousState);
	void OnRep_IsShieldActive(bool bWasShieldActive);
	void OnDetached();
	void OnDeactivationTrigger();
	void OnAttached();
	void OnActivationTrigger();
	class AWeapon* GetWeapon();
	int32 GetStatusEffectStackCount(class UStatusEffectData* StatusEffect);
	class AOakPlayerController* GetPlayerController();
	class APawn* GetInstigator();
	void DeactivateShield();
	void ClientPlayFeedbackSoundEvent(class UWwiseEvent* Event);
	void ActivateShield();
};

// 0x10 (0x68 - 0x58)
// Class OakGame.WeaponSkeletalControlAspectData
class UWeaponSkeletalControlAspectData : public UWeaponEffectBaseAspectData
{
public:
	struct FWeaponRegisterSkeletalControlData    ControlData;                                       // 0x58(0x10)(Edit, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponSkeletalControlAspectData* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class OakGame.WeaponSlotAttributeContextResolver
class UWeaponSlotAttributeContextResolver : public UAttributeContextResolver
{
public:
	class UWeaponSlotData*                       WeaponSlot;                                        // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UWeaponSlotAttributeContextResolver* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class OakGame.WeaponSlotData
class UWeaponSlotData : public UGbxWeaponSlotData
{
public:
	class UWeaponSlotData*                       LinkedWeaponSlot;                                  // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameResourceData*                     AccuracyData;                                      // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrosshairRotation;                                 // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E77[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSlotData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.WeaponSwayGoodnessValueResolver
class UWeaponSwayGoodnessValueResolver : public UAttributeValueResolver
{
public:

	static class UClass* StaticClass();
	static class UWeaponSwayGoodnessValueResolver* GetDefaultObj();

};

// 0xF0 (0x268 - 0x178)
// Class OakGame.WeaponSwayComponent
class UWeaponSwayComponent : public UActorComponent
{
public:
	uint8                                        Pad_6E78[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USwayPatternData*                      Pattern;                                           // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    Scale;                                             // 0x190(0xC)(Edit, Net, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    AccuracyScale;                                     // 0x19C(0xC)(Edit, Net, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Speed;                                             // 0x1A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Lacunarity;                                        // 0x1AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Persistence;                                       // 0x1B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiscWidth;                                         // 0x1B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiscHeight;                                        // 0x1B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    ZoomScale;                                         // 0x1BC(0xC)(Edit, Net, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                    ZoomAccuracyScale;                                 // 0x1C8(0xC)(Edit, Net, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoomSmoothingSpeed;                                // 0x1D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoomSmoothInTime_OnZoom;                           // 0x1D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoomSmoothInTime_OnFire;                           // 0x1DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyAccuracyScaleOnlyWhenFiring;                 // 0x1E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E79[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxAccuracyPercent;                                // 0x1E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CurrentRotation;                                   // 0x1E8(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        CurrentScale;                                      // 0x1F4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E7A[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AWeapon*                               WeaponPrivate;                                     // 0x260(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UWeaponSwayComponent* GetDefaultObj();

	void OnZoomed();
	void OnUsed();
	void OnDetached();
	void OnAttached();
	float GetSwayGoodness();
};

// 0x18 (0x50 - 0x38)
// Class OakGame.WeaponUseModeAspectData
class UWeaponUseModeAspectData : public UInventoryAspectData
{
public:
	enum class EWeaponUseMode                    UseMode;                                           // 0x38(0x1)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E7B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UseModeBitmask;                                    // 0x3C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InputChannelBitmask;                               // 0x40(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E7C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponUseComponent*                   WeaponUseComponent;                                // 0x48(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponUseModeAspectData* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class OakGame.WeaponUseModeCrosshairAspectData
class UWeaponUseModeCrosshairAspectData : public UInventoryAspectData
{
public:
	enum class EWeaponUseMode                    UseMode;                                           // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E7D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCrosshairDataAsset*                CrosshairData;                                     // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxCrosshairDataAsset*                ZoomedCrosshairData;                               // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponUseModeCrosshairAspectData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class OakGame.WeaponUseModeNameAspectData
class UWeaponUseModeNameAspectData : public UInventoryAspectData
{
public:
	enum class EWeaponUseMode                    UseMode;                                           // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E7E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUIStatData_Text*                      UseModeName;                                       // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponUseModeNameAspectData* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class OakGame.WeaponUseModeSecondaryAspectData
class UWeaponUseModeSecondaryAspectData : public UInventoryAspectData
{
public:
	uint8                                        bCreateComponent : 1;                              // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAdditive : 1;                                     // Mask: 0x2, PropSize: 0x10x38(0x1)(Edit, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShareBetweenUseModes : 1;                         // Mask: 0x4, PropSize: 0x10x38(0x1)(Edit, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_26E : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6E7F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UseModeBitmask;                                    // 0x3C(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActorComponent*                       Component;                                         // 0x40(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UActorComponent>           ComparisonClass;                                   // 0x48(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponUseModeSecondaryAspectData* GetDefaultObj();

	void EnumerateComponentTypes(TArray<TSubclassOf<class UActorComponent>>* OutComponentTypes);
};

// 0x9E0 (0xE20 - 0x440)
// Class OakGame.WeaponVehicleAnimInstance
class UWeaponVehicleAnimInstance : public UAnimInstance
{
public:
	bool                                         bIsDriverWeapon;                                   // 0x440(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSeatedWeapon;                                   // 0x441(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasTurretOwner;                                   // 0x442(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E80[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DualWeaponDownOffset;                              // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponDownElbowOffset;                         // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponDownArmEndOffset;                        // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponTopOffset;                               // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponTopElbowOffset;                          // 0x454(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponTopArmEndOffset;                         // 0x458(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DualWeaponSideOffset;                              // 0x45C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxIKStretchRatio;                                 // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartIKStretchingRatio;                            // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CircleZone;                                        // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CircleDeadZone;                                    // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    DualWeaponRightCurveStartArmExtensionByYaw;        // 0x470(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    DualWeaponRightCurveEndArmExtensionByYaw;          // 0x4E8(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    DualWeaponLeftCurveStartArmExtensionByYaw;         // 0x560(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    DualWeaponLeftCurveEndArmExtensionByYaw;           // 0x5D8(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        StretchWheelBase;                                  // 0x650(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E81[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LeftWeaponSocketName;                              // 0x658(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightWeaponSocketName;                             // 0x660(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVehicleOverrideData>          OverrideByParts;                                   // 0x668(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E82[0x788];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakVehicle*                           Vehicle;                                           // 0xE00(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AOakWeapon_Vehicle*                    Weapon_Vehicle;                                    // 0xE08(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                LeftWeaponMesh;                                    // 0xE10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                RightWeaponMesh;                                   // 0xE18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponVehicleAnimInstance* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class OakGame.WeaponWearAttributeValueResolver
class UWeaponWearAttributeValueResolver : public UAttributeValueResolver
{
public:
	enum class EWeaponWearValueType              ValueToResolve;                                    // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6E83[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponWearAttributeValueResolver* GetDefaultObj();

};

// 0x168 (0x228 - 0xC0)
// Class OakGame.ZoneMapData
class UZoneMapData : public ULevelData
{
public:
	struct FSoftObjectPath                       ZoneMapMeshAssetReference;                         // 0xC0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapDataSection>           ZoneMapDataSections;                               // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        CustomUnfogHeight;                                 // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CustomVehicleUnfogHeight;                          // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DefaultZoneMapRotation;                            // 0xF0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E9B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         SuppressFastTravelTunnelCondition;                 // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxCondition*>                 ConditionsForMapSections;                          // 0x108(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapMissionPOIBlacklistEntry> BlacklistedMissionPOIs;                            // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UTexture2D*                            PlanetZoneDisplayTexture;                          // 0x128(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ConceptArtToDisplay;                               // 0x130(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapPOIEntry>              ZoneMapPOIList;                                    // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapMissionWaypointEntry>  ZoneMapMissionWaypointList;                        // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapChallengeEntry>        ZoneMapChallengeList;                              // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapChallengeGroupEntry>   ZoneMapChallengeGroupList;                         // 0x168(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                        NumWorldDiscoveryAreas;                            // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneMapVersion;                                    // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTutorialTarget;                                 // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDisplayNameOnBigMap;                          // 0x181(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMagnetism;                                  // 0x182(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E9C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBigMapPOIData>                BigMapPOIData;                                     // 0x188(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bShowOnBigMapEvenIfUndiscovered;                   // 0x198(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E9D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPatchExpansionData*                   AssociatedPatch;                                   // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDownloadableContentData*              AssociatedDLC;                                     // 0x1A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoFastTravelStations;                             // 0x1B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E9E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UZoneMapPOITypeData*>           POITypesToIgnoreInCurrentMap;                      // 0x1B8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bUseBigMapProjectionOnZoom;                        // 0x1C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6E9F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FZoneToBigMapProjectionData           ZoneToBigMapProjection;                            // 0x1CC(0x34)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bBigMapOverworldZonePOI;                           // 0x200(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EA0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAdditionalZoneMapData*>        AdditionalZoneMaps;                                // 0x208(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EA1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UZoneMapData* GetDefaultObj();

	bool ShouldHighlight(class UObject* WorldContextObject);
	void SetHighlight(class UObject* WorldContextObject, bool bShouldHighlight);
	bool SaveZoneFogOfDiscovery(class AOakPlayerController* ViewingPlayer, class UTextureRenderTarget2D* FogOfDiscoveryRenderTarget);
	bool SaveCurrentZoneFogOfDiscovery(class AOakPlayerController* ViewingPlayer);
	struct FVector ProjectZoneLocationToBigMap(const struct FVector& ZoneLocation);
	struct FVector ProjectBigMapLocationToZone(const struct FVector& OverworldLocation);
	class UTexture2D* LoadZoneFogOfDiscoveryTexture(class AOakPlayerController* ViewingPlayer);
	bool LoadZoneFogOfDiscovery(class AOakPlayerController* ViewingPlayer, class UTextureRenderTarget2D** FoDRenderTarget, int32 DefaultWidth, int32 DefaultHeight);
	class UTexture2D* LoadCurrentZoneFogOfDiscoveryTexture(class AOakPlayerController* ViewingPlayer);
	class UTextureRenderTarget2D* LoadCurrentZoneFogOfDiscovery(class AOakPlayerController* ViewingPlayer, int32 DefaultWidth, int32 DefaultHeight);
	bool IsZoneMapOnPlanet(class UPlanetData* PlanetData);
	bool IsPOIKnownDirect(class AOakPlayerController* ViewingPlayer, struct FZoneMapPOIEntry& POIEntry);
	bool IsPOIKnown(class AOakPlayerController* ViewingPlayer, const class FString& POIObjectName);
	void GetZoneWaypointsForMission(TSubclassOf<class UMission> Mission, TArray<struct FZoneMapMissionWaypointEntry>* OutMissionWaypoints);
	TArray<struct FZoneMapPOIEntry> GetZoneMapPOIList();
	class UPlanetData* GetZoneMapPlanet();
	TArray<struct FZoneMapMissionWaypointEntry> GetZoneMapMissionWaypointList();
	class UZoneMapMeshData* GetZoneMapMeshData();
	TArray<struct FZoneMapChallengeEntry> GetZoneMapChallengeList();
	void GetZoneChallengeCounts(class AOakPlayerController* ViewingPlayer, class UChallengeCategoryData* ChallengeCategory, int32* TotalCount, int32* CompletedCount, bool bIgnoreHidden);
	void GetWorldDiscoveryAreaCounts(class AOakPlayerController* ViewingPlayer, int32* TotalWorldDiscoveryAreas, int32* FoundWorldDiscoveryAreas, class UDownloadableContentData* InAssociatedDLC);
	TArray<struct FVector> GetWaypointLocationsForActiveMission(class UObject* WorldContextObject);
	void GetTravelStationWaypointsToMission(class UObject* WorldContextObject, TArray<struct FZoneMapPOIEntry>* StationPOI, TSubclassOf<class UMission> MissionToTrack);
	enum class EZoneMapMissionStatus GetOverworldViewZoneMissionStatus(class UObject* WorldContextObject, class AOakPlayerController* OwningPlayer, bool* bCanViewZone);
	float GetOverallZoneCompletionPercent(class UObject* WorldContextObject, class UZoneMapData* ZoneMapData);
	enum class EZoneMapMissionStatus GetMissionWaypointStatusDirect(class UObject* WorldContextObject, struct FZoneMapMissionWaypointEntry& MissionWaypointEntry);
	enum class EZoneMapMissionStatus GetMissionWaypointStatus(class UObject* WorldContextObject, const class FString& MissionWaypointObjectName);
	void GetMissionWaypointDisplayTextDirect(class UObject* WorldContextObject, struct FZoneMapMissionWaypointEntry& MissionWaypointEntry, TArray<class FText>* ObjectiveText, TArray<class FText>* DirectorText);
	void GetMissionsReferencedByZoneWaypoints(TArray<TSubclassOf<class UMission>>* OutMissions);
	class FString GetMapFilename();
	class UInWorldIconData* GetChallengeWorldIconDirect(class AGbxPlayerController* Player, struct FZoneMapChallengeEntry& ChallengeEntry);
	class UInWorldIconData* GetChallengeWorldIcon(class AGbxPlayerController* Player, const class FString& ChallengeObjectName);
	enum class EZoneMapChallengeStatus GetChallengeStatusDirect(class AGbxPlayerController* Player, struct FZoneMapChallengeEntry& ChallengeEntry);
	enum class EZoneMapChallengeStatus GetChallengeStatus(class AGbxPlayerController* Player, const class FString& ChallengeObjectName);
	class FString GetChallengeScaleformIconDirect(class AGbxPlayerController* Player, struct FZoneMapChallengeEntry& ChallengeEntry);
	class FString GetChallengeScaleformIcon(class AGbxPlayerController* Player, const class FString& ChallengeObjectName);
	class FText GetChallengeDisplayTextDirect(struct FZoneMapChallengeEntry& MissionWaypointEntry);
	void AsyncLoadZoneMapMeshData(UDelegateProperty_& LoadedDelegate);
	void ActivateZoneMapPOI(class AOakPlayerController* ViewingPlayer, const class FString& POIObjectName);
};

// 0x0 (0x458 - 0x458)
// Class OakGame.ZoneMapDisplayActor
class AZoneMapDisplayActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AZoneMapDisplayActor* GetDefaultObj();

};

// 0x0 (0x458 - 0x458)
// Class OakGame.ZoneMapDisplayPOI
class AZoneMapDisplayPOI : public AZoneMapDisplayActor
{
public:

	static class UClass* StaticClass();
	static class AZoneMapDisplayPOI* GetDefaultObj();

};

// 0x258 (0x288 - 0x30)
// Class OakGame.ZoneMapGlobalsData
class UZoneMapGlobalsData : public UGbxDataAsset
{
public:
	TArray<TSoftObjectPtr<class UZoneMapPOITypeData>> ZoneMapPOITypes;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UZoneMapPOITypeData>    MissionGiverPOIType;                               // 0x40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UZoneMapPOITypeData>    MajorMissionGiverPOIType;                          // 0x68(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UZoneMapPOITypeData>    MissionGiverDLCPOIType;                            // 0x90(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UZoneMapPOITypeData>    MissionObjectivePOIType;                           // 0xB8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UZoneMapPOITypeData>    MissionObjectiveOptionalPOIType;                   // 0xE0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   FriendPOIType;                                     // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   CustomWaypointPOIType;                             // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    ZoneMeshMaterial;                                  // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    ZoneMapDisplayMaterial;                            // 0x120(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ZoneMapDisplayTextureParameter;                    // 0x128(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AZoneMapViewer>          ZoneMapBlueprint;                                  // 0x130(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AZoneMapOverworldViewer> OverworldViewerClass;                              // 0x158(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlanetData*                           DafPlanetData;                                     // 0x180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UZoneMapPOITypeData>    PlayerPOIData;                                     // 0x188(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFogOfDiscoveryCapture>  FoDCaptureBlueprint;                               // 0x1B0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        POIZOffset;                                        // 0x1D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BasePOISelectionDistance;                          // 0x1DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CustomWaypointRemoveDistance;                      // 0x1E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EA2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    FoDWorldPositionTransformMaterial;                 // 0x1E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FoDRenderTargetSize;                               // 0x1F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    FoDMasterMaterial;                                 // 0x1F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    FoDTranslucentMasterMaterial;                      // 0x200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FoDMasterMaterialParameter;                        // 0x208(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    FODMeshMaterialExternal;                           // 0x210(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    FODMeshTranslucentMaterialExternal;                // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FODMeshMatExtTextureParam;                         // 0x220(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FODMeshMatExtTextureSizeParam;                     // 0x228(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    FoDSolverMaterial;                                 // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FoDSolverMaterialParameter;                        // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    FoDLoaderMaterial;                                 // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FoDLoaderMaterialParameter;                        // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FoDMoveDistanceTestSquared;                        // 0x250(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EA3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FoDPlayerPositionMaterialParameter;                // 0x258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FoDRadiusMaterialParameter;                        // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                TestFoDRenderTexture;                              // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerUnfogRadius;                                 // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleUnfogRadius;                                // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultUnfogHeight;                                // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultVehicleUnfogHeight;                         // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             IconClampTransitionBounds;                         // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UZoneMapGlobalsData* GetDefaultObj();

};

// 0x50 (0x4A8 - 0x458)
// Class OakGame.ZoneMapIconBase
class AZoneMapIconBase : public AZoneMapDisplayActor
{
public:
	bool                                         bDisplayInFastTravelList;                          // 0x458(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EA4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnBeginZoneMapCursorOver;                          // 0x460(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndZoneMapCursorOver;                            // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActivatePOI;                                     // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedFromActor;                                  // 0x490(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AZoneMapViewer*                        ZoneMap;                                           // 0x498(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActivated;                                        // 0x4A0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6EA5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AZoneMapIconBase* GetDefaultObj();

	void ViewModeChanged();
	void SetHighlighted(bool bNewActivated);
	bool GetShouldTreatAsNotZoneMap();
	bool CanActivate();
	void Activate();
};

// 0x110 (0x5B8 - 0x4A8)
// Class OakGame.OakZoneMapIcon_POI
class AOakZoneMapIcon_POI : public AZoneMapIconBase
{
public:
	class FName                                  TextureParameter;                                  // 0x4A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            SpriteTexture;                                     // 0x4B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultScaleformIconName;                          // 0x4B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EA7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FZoneMapPOIEntry                      POIEntry;                                          // 0x4D0(0x70)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   POIType;                                           // 0x540(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              SpriteMaterial;                                    // 0x548(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialLocationParameter;                         // 0x550(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialFODTextureParameter;                       // 0x558(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialFODCoordsParameter;                        // 0x560(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialFODEnableParameter;                        // 0x568(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialPlayerZParameter;                          // 0x570(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialScaleMultiplierParameter;                  // 0x578(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialOpacityParameter;                          // 0x580(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpacityIfInWorldIcon;                              // 0x588(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EA8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MaterialMiniMapActiveParameter;                    // 0x590(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IconZOffset;                                       // 0x598(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCullOutsideMiniMap;                               // 0x59C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 AssociatedActor;                                   // 0x5A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsKnown;                                          // 0x5A8(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFogged;                                         // 0x5A9(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvisible;                                        // 0x5AA(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMagnetism;                                  // 0x5AB(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EAA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMeshComponent*                        POIMeshComponent;                                  // 0x5B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakZoneMapIcon_POI* GetDefaultObj();

	void SetupSpriteMaterial(class UMaterialInstanceDynamic* InSpriteMaterial);
	void SetSpriteMaterial(class UMaterial* NewSpriteMaterial);
	void SetIsKnown(bool bInIsKnown);
	void SetAssociatedActor(class AActor* InAssociatedActor);
	bool POIActivated(class FText* ErrorMessage);
	void OnCharacterDied();
	void OnAssociatedActorDestroyed(class AActor* DestroyedActor);
	void GetPOIDisplayInfo(class FString* OutScaleformIconName, class FText* OutPOIDisplayName, class FText* OutPOISubHeading, TArray<class FText>* OutPOIDescriptionText, class FText* OutPOIUseText);
	void ForceUpdateTransform();
	bool ExitMenuWhenActivated();
	bool CanPOIBeActivated();
};

// 0xF8 (0x6B0 - 0x5B8)
// Class OakGame.ZoneMapMissionWaypointIcon
class AZoneMapMissionWaypointIcon : public AOakZoneMapIcon_POI
{
public:
	uint8                                        Pad_6EAB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FZoneMapMissionWaypointEntry          WaypointEntry;                                     // 0x5C0(0xF0)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AZoneMapMissionWaypointIcon* GetDefaultObj();

	void K2_OnWaypointUpdated();
	enum class EZoneMapMissionStatus GetMissionStatus();
};

// 0x78 (0x630 - 0x5B8)
// Class OakGame.OakZoneMapChallengeIcon
class AOakZoneMapChallengeIcon : public AOakZoneMapIcon_POI
{
public:
	uint8                                        Pad_6EAC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FZoneMapChallengeEntry                ChallengeEntry;                                    // 0x5C0(0x70)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AOakZoneMapChallengeIcon* GetDefaultObj();

	void K2_OnChallengeUpdated();
	enum class EZoneMapChallengeStatus GetChallengeStatus();
	class UTexture2D* GetChallengeIconTexture();
};

// 0x28 (0x5E0 - 0x5B8)
// Class OakGame.OakZoneMapFriendIcon_POI
class AOakZoneMapFriendIcon_POI : public AOakZoneMapIcon_POI
{
public:
	uint8                                        Pad_6EAD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFriendStatusMessageChange;                       // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EAE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AOakZoneMapFriendIcon_POI* GetDefaultObj();

};

// 0x30 (0x5E8 - 0x5B8)
// Class OakGame.ZoneMapPlayerIcon_POI
class AZoneMapPlayerIcon_POI : public AOakZoneMapIcon_POI
{
public:
	class FName                                  MaterialXAxisParameter;                            // 0x5B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialYAxisParameter;                            // 0x5C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialZAxisParameter;                            // 0x5C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialIconSizeScaleParameter;                    // 0x5D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerPulseMaterialParameter;                      // 0x5D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleWhenOnZoneMap;                                // 0x5E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateWPOMaterialForVehicleInZoneMapView;         // 0x5E4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EAF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AZoneMapPlayerIcon_POI* GetDefaultObj();

	void SetIsOwningPlayer();
	void OnPlayerExitedVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnPlayerEnteringVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
};

// 0x68 (0x650 - 0x5E8)
// Class OakGame.ZoneMapVehicleIcon_POI
class AZoneMapVehicleIcon_POI : public AZoneMapPlayerIcon_POI
{
public:
	class UZoneMapPOITypeData*                   CatchARidePOIType;                                 // 0x5E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   PlayerPOIType;                                     // 0x5F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   FriendlyPOIType;                                   // 0x5F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   EmptyPOIType;                                      // 0x600(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   EnemyPOIType;                                      // 0x608(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ColorParameterName;                                // 0x610(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EnemyColor;                                        // 0x618(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PlayerColor;                                       // 0x628(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          NeutralColor;                                      // 0x638(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EB0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AZoneMapVehicleIcon_POI* GetDefaultObj();

	void OnVehicleSeatsInitialized(class AOakVehicle* AssociatedVehicle);
	void OnSpawnByCatchARideChanged();
	void OnSeatAttachStateChanged();
	void OnOtherCharacterExitedVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void OnOtherCharacterEnteredVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
};

// 0x38 (0x5F0 - 0x5B8)
// Class OakGame.ZoneMapTravelStationIcon_POI
class AZoneMapTravelStationIcon_POI : public AOakZoneMapIcon_POI
{
public:
	float                                        UnfogRadius;                                       // 0x5B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EB1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MapUnavailableMessage;                             // 0x5C0(0x18)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EB2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UTravelStationComponentBase> AssociatedTravelComponent;                         // 0x5DC(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6EB3[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AZoneMapTravelStationIcon_POI* GetDefaultObj();

	void OnTravelIDsChanged();
	void OnFastTravelStationDiscovered(bool bNoActivationSequence);
};

// 0x130 (0x160 - 0x30)
// Class OakGame.ZoneMapInputData
class UZoneMapInputData : public UGbxDataAsset
{
public:
	float                                        SpawnPitchValue;                                   // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetSpawnPitchValue;                             // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnPitchInterpSpeed;                             // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchMin;                                          // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchMax;                                          // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationYawInterpSpeed;                            // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationPitchInterpSpeed;                          // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationYawInterpSpeedMouse;                       // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationPitchInterpSpeedMouse;                     // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationYawSpeedMax;                               // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationPitchSpeedMax;                             // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationSpeed;                                     // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleMin;                                          // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleMax;                                          // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LevelScaleRate;                                    // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LevelInterpModeSpeed;                              // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseLevelScaleRate;                               // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MousePlanetScaleRate;                              // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseGalaxyScaleRate;                              // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetGalaxyScaleRate;                             // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KeyboardLevelScaleAxisMultiplier;                  // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnScaleValue;                                   // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetSpawnScaleValue;                             // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnScaleInterpSpeed;                             // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleRate;                                         // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleInterpolationSpeed;                           // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransformInterpSpeed;                              // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransformInterpSpeedMouse;                         // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransformMoveSpeedMouse;                           // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransformAcceleration;                             // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransformBuffer;                                   // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GlobalTransformScale;                              // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           POIStickinessCurve;                                // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MovementSpeedByScaleCurve;                         // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ZoomCurve;                                         // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ZoomSpeedByZoomCurve;                              // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ZoomSpeedBasedOnZoom;                              // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisplayRadius;                                     // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        POITraceRadius;                                    // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        POITraceLeadScale;                                 // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugTrace;                                        // 0xE4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EB4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           POISphereScaleOverZoneMapScale;                    // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRecenterResetsOrientation;                        // 0xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EB5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GalaxyPitchMax;                                    // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyPitchMin;                                    // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyPitchInterpSpeed;                            // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyYawInterpSpeed;                              // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyInterpSpeedMouse;                            // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyMoveSpeedMouse;                              // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyDefaultPitch;                                // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyYawMax;                                      // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyYawMin;                                      // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GalaxyInterpModeSpeed;                             // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetPitchMax;                                    // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetPitchMin;                                    // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetYawMax;                                      // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetYawMin;                                      // 0x128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetRotationInterpSpeed;                         // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetRotationInterpSpeedMouse;                    // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetRotationMoveSpeedMouse;                      // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlanetInterpModeSpeed;                             // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMap_Pitch;                                     // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMap_FoV;                                       // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMap_Distance;                                  // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MiniMap_RelativeOffset;                            // 0x148(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseAxisSensitivityMin;                           // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseAxisSensitivityMax;                           // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvertMouseXAxis;                                 // 0x15C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvertMouseYAxis;                                 // 0x15D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EB6[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UZoneMapInputData* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class OakGame.ZoneMapListData
class UZoneMapListData : public UGbxDataAsset
{
public:
	TArray<class UZoneMapData*>                  ZoneMapList;                                       // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UZoneMapListData* GetDefaultObj();

	class UZoneMapData* GetZoneMapDataForCurrentLevel(class UObject* WorldContextObject);
	class FText GetMapDisplayName(class UObject* WorldContextObject, class FName MapName);
};

// 0x38 (0x68 - 0x30)
// Class OakGame.ZoneMapMeshData
class UZoneMapMeshData : public UGbxDataAsset
{
public:
	TArray<struct FZoneMapMeshListEntry>         ZoneMapMeshs;                                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapGPUPointCloudData>     GPUPointCloudList;                                 // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                            FogOfDiscoveryTexture;                             // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneMapMeshVersion;                                // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EB8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFogOfDiscoveryCapture*                FoDCapture;                                        // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UZoneMapMeshData* GetDefaultObj();

	void SetupStaticMeshComponent(int32 Index, class UStaticMeshComponent* InStaticMeshComponent);
};

// 0x20 (0x478 - 0x458)
// Class OakGame.ZoneMapOverworldViewer
class AZoneMapOverworldViewer : public AZoneMapDisplayActor
{
public:
	TArray<struct FPlanetZonePOI>                PlanetZonePOIs;                                    // 0x458(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UPlanetData*                           PlanetData;                                        // 0x468(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AZoneMapViewer*                        OwningZoneMap;                                     // 0x470(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AZoneMapOverworldViewer* GetDefaultObj();

	class UStaticMesh* GetZoneMeshOnPlanet(class UZoneMapData* ZoneMap);
	class USceneComponent* GetPOIRoot();
};

// 0x20 (0x478 - 0x458)
// Class OakGame.ZoneMapPlanetViewer
class AZoneMapPlanetViewer : public AZoneMapDisplayActor
{
public:
	TArray<struct FPlanetZonePOI>                PlanetZonePOIs;                                    // 0x458(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UPlanetData*                           PlanetData;                                        // 0x468(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AZoneMapViewer*                        OwningZoneMap;                                     // 0x470(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AZoneMapPlanetViewer* GetDefaultObj();

	class UStaticMesh* GetZoneMeshOnPlanet(class UZoneMapData* ZoneMap);
};

// 0x58 (0x758 - 0x700)
// Class OakGame.ZoneMapPOIComponent
class UZoneMapPOIComponent : public UMaterialBillboardComponent
{
public:
	uint8                                        Pad_6EB9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TextureParameter;                                  // 0x708(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialLocationParameter;                         // 0x710(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialMiniMapActiveParameter;                    // 0x718(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            SpriteTexture;                                     // 0x720(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IconZOffset;                                       // 0x728(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCullOutsideMiniMap;                               // 0x72C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EBA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              SpriteMaterial;                                    // 0x730(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 AssociatedActor;                                   // 0x738(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsKnown;                                          // 0x740(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EBB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AZoneMapViewer*                        ZoneMap;                                           // 0x748(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakMinimapIconComponent*              MapIconComponent;                                  // 0x750(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UZoneMapPOIComponent* GetDefaultObj();

	void ViewModeChanged();
	void SetupSpriteMaterial(class UMaterialInstanceDynamic* InSpriteMaterial);
	void OnCharacterExitedVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCharacterEnteringVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCharacterDied();
	void OnAssociatedActorDestroyed(class AActor* DestroyedActor);
};

// 0x28 (0x780 - 0x758)
// Class OakGame.ZoneMapPOIAIComponent
class UZoneMapPOIAIComponent : public UZoneMapPOIComponent
{
public:
	class UZoneMapPOITypeData*                   FriendlyPOIType;                                   // 0x758(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapPOITypeData*                   EnemyPOIType;                                      // 0x760(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EBC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UZoneMapPOIAIComponent* GetDefaultObj();

	void OnTeamChanged(class UTeamComponent* TeamComponent, class UTeam* PrevTeam);
	void DelayedTeamChanged();
	void DelayedRemovePOI();
};

// 0x0 (0x28 - 0x28)
// Class OakGame.ZoneMapPOIIconInterface
class IZoneMapPOIIconInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IZoneMapPOIIconInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.ZoneMapPOIInterface
class IZoneMapPOIInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IZoneMapPOIInterface* GetDefaultObj();

};

// 0x8 (0x760 - 0x758)
// Class OakGame.ZoneMapPOILegendaryComponent
class UZoneMapPOILegendaryComponent : public UZoneMapPOIComponent
{
public:
	uint8                                        Pad_6EBD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UZoneMapPOILegendaryComponent* GetDefaultObj();

	void OnShowLegendariesChanged(bool bNewVal);
};

// 0x58 (0x800 - 0x7A8)
// Class OakGame.ZoneMapPOIMeshComponent
class UZoneMapPOIMeshComponent : public UStaticMeshComponent
{
public:
	uint8                                        Pad_6EBE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MeshRadius;                                        // 0x7B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshHeightScale;                                   // 0x7B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AreaRadius;                                        // 0x7B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IconZOffset;                                       // 0x7BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialLocationParameter;                         // 0x7C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialXAxisParameter;                            // 0x7C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialYAxisParameter;                            // 0x7D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialZAxisParameter;                            // 0x7D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialMiniMapActiveParameter;                    // 0x7E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              MeshMaterial;                                      // 0x7E8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 AssociatedActor;                                   // 0x7F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EBF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UZoneMapPOIMeshComponent* GetDefaultObj();

	void ViewModeChanged();
	void SetupMeshMaterial(class UMaterialInstanceDynamic* InMeshMaterial);
};

// 0x118 (0x148 - 0x30)
// Class OakGame.ZoneMapPOITypeData
class UZoneMapPOITypeData : public UGbxDataAsset
{
public:
	class FText                                  DisplayName;                                       // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SubHeading;                                        // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  UseText;                                           // 0x78(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CanNotBeUsedText;                                  // 0x90(0x18)(Edit, NativeAccessSpecifierPublic)
	class UTexture2D*                            POISprite;                                         // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IconFrameName;                                     // 0xB0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AlternateIconFrameName;                            // 0xC0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayInFastTravelList;                          // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EZoneMapTargetType                POICategory;                                       // 0xD1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EC0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AActor>                  POIClass;                                          // 0xD8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AZoneMapIconBase>          POIIconClass;                                      // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UPrimitiveComponent>     POIIconComponentClass;                             // 0x108(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInMiniMap;                                    // 0x130(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInZoneMap;                                    // 0x131(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EC1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TranslucencySortPriority;                          // 0x134(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SizeMultiplier;                                    // 0x138(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IconZOffset;                                       // 0x13C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DontUseScaleformIcon;                              // 0x140(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EC2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UZoneMapPOITypeData* GetDefaultObj();

};

// 0x8 (0x498 - 0x490)
// Class OakGame.ZoneMapSectionVolume
class AZoneMapSectionVolume : public AVolume
{
public:
	int32                                        SectionNumber;                                     // 0x490(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EC3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AZoneMapSectionVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class OakGame.ZoneMapZonePOIInterface
class IZoneMapZonePOIInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IZoneMapZonePOIInterface* GetDefaultObj();

	struct FVector GetInitialFocusLocation();
};

// 0x988 (0xDE0 - 0x458)
// Class OakGame.ZoneMapViewer
class AZoneMapViewer : public AActor
{
public:
	uint8                                        Pad_6EDC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AOakZoneMapIcon_POI*>           DLCGalaxyPOIs;                                     // 0x470(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6EDD[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFocusedPOIChanged;                               // 0x540(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EDE[0x88];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEchoMenuOpen;                                     // 0x5D8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowingZoneMap;                                   // 0x5D9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowingMiniMap;                                   // 0x5DA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EDF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MousePanSpeed;                                     // 0x5DC(0x8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseMaxPanSpeed;                                  // 0x5E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MouseRotateSpeed;                                  // 0x5E8(0x8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseMaxRotateSpeed;                               // 0x5F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseZoomSpeed;                                    // 0x5F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MouseMaxZoomSpeed;                                 // 0x5F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ZoneMapDecorationTag;                              // 0x600(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapInputData*                     ZoneMapInputData;                                  // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MapCenterMaterialParameter;                        // 0x610(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakZoneMapIcon_POI>       MissionPOIActorClass;                              // 0x618(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPrimitiveComponent>       MissionPOIAreaComponentClass;                      // 0x620(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  MissionGiverPOIDisplayName;                        // 0x628(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  MissionObjectivePOIDisplayName;                    // 0x640(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class AOakZoneMapIcon_POI>       ChallengePOIActorClass;                            // 0x658(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           LocalPlayerIcon;                                   // 0x660(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    LocalPlayerIconMaterial;                           // 0x668(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseActorPOIs;                                     // 0x670(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PlayerPositionMaterialParameter;                   // 0x678(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayingLoadedLevelMaterialParameter;            // 0x680(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                             DecorationMeshMaterial;                            // 0x688(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GPUMaterialParameter;                              // 0x690(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           GridBaseMesh;                                      // 0x698(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                             GridBaseMaterial;                                  // 0x6A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GridMaterialParameter;                             // 0x6A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                             WaypointMeshMaterial;                              // 0x6B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        POITargetTraceLength;                              // 0x6B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MainViewTargetSize;                                // 0x6BC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomSpeedModifierTuning;                           // 0x6C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DistortionRadiusParameter;                         // 0x6C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistortionRadiusMultiplier;                        // 0x6D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DistortionRadiusMaskParameter;                     // 0x6D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistortionRadiusMaskMultiplier;                    // 0x6E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HologramDistortionParameter;                       // 0x6E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HologramDistortionMultiplier;                      // 0x6F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FZoneMapDynamicPOIEntry>       DynamicMapPOITypes;                                // 0x6F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UPrimitiveComponent>       DynamicPOIClass;                                   // 0x708(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMapScale;                                      // 0x710(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMapPitch;                                      // 0x714(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MiniMap2DScreenOffset;                             // 0x71C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MiniMapRenderCoordinatesOffset;                    // 0x728(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMapOcclusionScale;                             // 0x730(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMap2DOcclusionScale;                           // 0x734(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                             MiniMapTargetSize;                                 // 0x738(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBlendMode                        MiniMapBlendMode;                                  // 0x740(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MiniMapHUDScale;                                   // 0x744(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeferLevelMapSetState;                            // 0x74C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeferMapListSetup;                                // 0x74D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       ZoneMapRootComponent;                              // 0x750(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                   SpringArm;                                         // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                   MinimapSpringArm;                                  // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       PlanetRootComponent;                               // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       GalaxyRootComponent;                               // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakZoneMapIcon>           MissionIconClass;                                  // 0x778(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideMissionAreaWaypoint;                          // 0x780(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UZoneMapData>           LevelData;                                         // 0x784(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UZoneMapData>           LastLevelData;                                     // 0x78C(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UZoneMapMeshData*                      LevelMeshData;                                     // 0x798(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UZoneMapMeshData*>              AdditionalLevelMeshData;                           // 0x7A0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TSubclassOf<class AZoneMapPlanetViewer>      PlanetClass;                                       // 0x7B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPlanetData>            PlanetData;                                        // 0x7B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UZoneMapData>           PlayerLevel;                                       // 0x7C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPlanetData>            PlayerPlanet;                                      // 0x7C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              MapDynamicMissionIcons;                            // 0x7D0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              MapStaticMissionIcons;                             // 0x7E0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              MapDynamicChallengeIcons;                          // 0x7F0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              MapStaticChallengeIcons;                           // 0x800(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              MapDynamicIcons;                                   // 0x810(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              MapStaticIcons;                                    // 0x820(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              MapPlayerIcons;                                    // 0x830(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              EndlessDungeonIcons;                               // 0x840(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AOakZoneMapIcon_POI*>           MapExternalPOIs;                                   // 0x850(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	enum class EGbxMenuInputDevice               InputDevice;                                       // 0x860(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EEA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        POISelectionDistance;                              // 0x864(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                FocusedPOI;                                        // 0x868(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FocusedPOIDistanceRatio;                           // 0x870(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EZoneMapMovementMode              MovementMode;                                      // 0x874(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableMovementInput;                             // 0x875(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReceivedAxisInputThisFrame;                       // 0x876(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EEB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ZoomInAxis;                                        // 0x878(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomOutAxis;                                       // 0x87C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftStickAxisX_Raw;                                // 0x880(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftStickAxisY_Raw;                                // 0x884(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftStickAxisX;                                    // 0x888(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftStickAxisY;                                    // 0x88C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightStickAxisX_Raw;                               // 0x890(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightStickAxisY_Raw;                               // 0x894(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightStickAxisX;                                   // 0x898(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightStickAxisY;                                   // 0x89C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastAxisInputTime;                                 // 0x8A0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxisDeadzone;                                      // 0x8A4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        POIMovementSpeedScale;                             // 0x8A8(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EEC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TransformTarget;                                   // 0x8B4(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationYawTarget;                                 // 0x8C0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationPitchTarget;                               // 0x8C4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterpolationAlpha;                                // 0x8C8(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleValue;                                        // 0x8CC(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScaleValueTarget;                                  // 0x8D0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetSpawnScaleValue;                             // 0x8D4(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LastPlayerLocation;                                // 0x8E0(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayerMoved;                                       // 0x8EC(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FZoneMapLevelMeshInfo>         LevelMapMeshs;                                     // 0x8F0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>          LevelMapMeshComponents;                            // 0x900(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FPlayerIconInfo>               PlayerIconMeshs;                                   // 0x910(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  GridMeshComponent;                                 // 0x920(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  GalaxyMeshComponent;                               // 0x928(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              GridDMI;                                           // 0x930(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      LevelMapDMIs;                                      // 0x938(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        LastLevelMapMeshCount;                             // 0x948(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastLevelMapDMICount;                              // 0x94C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      ZoneViewLevelMapDMIs;                              // 0x950(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        LastZoneViewLevelMapDMICount;                      // 0x960(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLevelMeshDataLoaded;                              // 0x964(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EEE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              PostProcessDMI;                                    // 0x968(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              WaypointPathDMI;                                   // 0x970(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      WaypointSpline;                                    // 0x978(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProceduralMeshComponent*              WaypointMesh;                                      // 0x980(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                FogOfDiscoveryTexture;                             // 0x988(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFogOfDiscoveryComponent*              FogOfDiscoveryComponent;                           // 0x990(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*              SceneCapture_MainView;                             // 0x998(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*              SceneCapture_MiniMap;                              // 0x9A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                ZoneMapRenderTarget;                               // 0x9A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                MinimapRenderTarget;                               // 0x9B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              ZoneMapDisplayMaterialInstance;                    // 0x9B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoneMapTraceLocation;                              // 0x9C0(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ZoneMapTraceHasHit;                                // 0x9CC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EEF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AOakZoneMapIcon_POI>    CurrentWaypointPOI;                                // 0x9D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoneMapMeshOrigin;                                 // 0x9D8(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                  ZoneMapMeshExtent;                                 // 0x9E4(0x1C)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MaxHeight;                                         // 0xA00(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomInputEased;                                    // 0xA04(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoomPushTransformOffset;                           // 0xA08(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CachedCameraLocation;                              // 0xA14(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AdjustPivotAndTargetLength;                        // 0xA20(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableMenuNotification;                          // 0xA21(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSanctuaryIsHighlighted;                           // 0xA22(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EF0[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakProfile*                           OakProfile;                                        // 0xA28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ZoneMapOffset_4way;                                // 0xA30(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ZoneMapOffset_Vertical;                            // 0xA38(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EF1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisableAutoPOI;                                   // 0xA50(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EF2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AActor>                 TrackedTarget;                                     // 0xA58(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTravelStationData>     FocusedStation;                                    // 0xA80(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6EF3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FZoneMapIconInfo                      TargetInfo;                                        // 0xAB0(0x290)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FZoneMapIconInfo>              CycledWaypoints;                                   // 0xD40(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UPrimitiveComponent*>           POIComponentPool;                                  // 0xD50(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6EF4[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class USceneComponent>> CurrentLevelMissionIcons;                          // 0xDC0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class USceneComponent>> CurrentLevelChallengeIcons;                        // 0xDD0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AZoneMapViewer* GetDefaultObj();

	void ZoneMapFocusedPOIChanged__DelegateSignature(class AActor* NewlyFocusedPOI);
	void UpdateTransforms(float DeltaSeconds);
	void UpdatePOISphereRadii();
	void UpdatePlayerIcons();
	void UpdateMiniMapTransforms(float DeltaSeconds);
	void UpdateGalaxyTransforms(float DeltaSeconds);
	void UpdateDMIs(bool bForceUpdate);
	void UpdateCamera(float DeltaSeconds);
	void UnfogMapIconObject(class UObject* IconObject, float Radius, float Height);
	void TraceForPOI(const struct FVector& StartPos, const struct FVector& Direction, struct FVector* OutZoneMapTraceLocation, bool* OutZoneMapTraceHasHit);
	class AOakZoneMapIcon_POI* SpawnZoneMapIcon(class USceneComponent* IconParentComponent, struct FZoneMapIconInfo& IconInfo, class UZoneMapPOITypeData* POIType);
	class UMapIconAnchor* SpawnZoneMapAnchorAndIcon(class USceneComponent* IconParentComponent, class UOakZoneMapIcon* NewZoneMapIcon, struct FZoneMapIconInfo* IconInfo, class UZoneMapPOITypeData* POIType);
	void ShowZoneMap();
	void ShowMenuList(bool bShow);
	void SetWaypoint();
	void SetVisibleRadius(float Alpha, float RadiusAlpha, float Distortion);
	void SetVisible(bool bVisible);
	void SetPivotToActorWorldLocation(const struct FVector& WorldLocation);
	void ResetPropertiesForZoneChange();
	void ResetMapOrientation(bool bInstant, bool bResetOrientation, bool bSnapToPlayer);
	void ResetCycledWaypointIndex();
	void RemoveMapIconObject(class UObject* IconObject);
	void RemoveMapIcon(struct FZoneMapIconInfo& IconInfo);
	void RemoveActorsFromZoneMapView();
	void RefreshMapIconObject(class UObject* IconObject);
	void OnZoneMapMeshDataLoaded();
	void OnPlayerSaveGameLoaded();
	void OnPlayerProfileChanged();
	void OnPlanetClassLoaded();
	void OnPlanetAddOnPOIsLoaded();
	void OnMinimapIconComponentUpdateTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMinimapIconComponentEndTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMinimapIconComponentBeginTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void NotifyTransitioning(bool bTransitioning);
	void NotifyPOIZoneHighlighted(class UObject* POIIcon, class UZoneMapData* POIZone, bool bSelected);
	void NotifyPOIPlanetHighlighted(class UObject* POIIcon, class UPlanetData* POIPlanet, bool bSelected);
	void NotifyPOIIconHighlighted(class UObject* POIIcon, struct FZoneMapPOIEntry& POIData, bool bSelected);
	void NotifyMissionWaypointIconHighlighted(class UObject* WaypointIcon, struct FZoneMapMissionWaypointEntry& WaypointData, bool bSelected);
	void NotifyDeployedVehicleHighlighted(class UObject* POIIcon, class AOakVehicle* TargetedVehicle, bool bSelected);
	void NotifyChallengeIconHighlighted(class UObject* ChallengeIcon, struct FZoneMapChallengeEntry& ChallengeData, bool bSelected);
	void LoadPlanetForLevel(class UPlanetData* PlanetToLoad);
	void LoadOverworldMap();
	void LoadMapForLevel(class UZoneMapData* ZoneMapToLoad, bool bSetAsCurrent);
	bool K2_UpdateTransforms(float DeltaSeconds);
	bool K2_UpdatePOISphereRadii();
	bool K2_UpdateMiniMapTransforms(float DeltaSeconds);
	void K2_SetCustomWaypoint();
	void K2_ResetAxisInput();
	void K2_PostLoadedPlanetClass();
	void K2_PostLoadedOverworldClass(TSubclassOf<class AActor> OverworldViewerClass);
	void K2_PostLoadedMapMesh();
	void K2_OnZoneMapShown();
	void K2_OnZoneMapHidden();
	void K2_OnUpdatedMissionWaypoints();
	void K2_OnRemoveIcon(class AOakZoneMapIcon_POI* IconActor, struct FZoneMapIconInfo& IconInfo);
	void K2_OnMiniMapShown();
	void K2_OnMiniMapHidden();
	void K2_OnEchoOpened();
	void K2_OnEchoClosed();
	void K2_OnAddIcon(class AOakZoneMapIcon_POI* SpawnedIcon, struct FZoneMapIconInfo* IconInfo);
	void K2_HandleVisibilityChanged(bool bVisible);
	bool K2_HandleInputAction(class FName& InputAction);
	bool K2_HandleAxisInput(class FName& InputAction, float AxisValue);
	void K2_GotoPlanetMap(class UPlanetData* InPlanetData);
	void K2_GotoParentMap();
	void K2_GotoLevelMap(class UZoneMapData* InLevelData, const struct FVector& InitialFocusLocation);
	bool K2_GetRotationYawTarget(float DeltaSeconds, float YawMin, float YawMax);
	bool K2_GetRotationPitchTarget(float DeltaSeconds);
	bool K2_GetNewTransformTarget(float DeltaSeconds, const struct FVector& TransformMin, const struct FVector& TransformMax, float TransformBuffer, float GlobalTransformScale, float ZoomDelta);
	bool K2_GetNewScaleTarget(float DeltaSeconds, float* ZoomDelta);
	void K2_FocusOnTransform(struct FTransform& Transform);
	void K2_FocusOnPlanet(class UPlanetData* Planet);
	void K2_FocusOnLevel(class UZoneMapData* Level);
	void K2_CenterOnPlayer();
	bool IsVisible();
	bool IsViewingCurrentLevel();
	bool IsCurrentLevelLoaded();
	void InitializeZoneMapMesh();
	void InitializeZoneMapForLevel();
	void InitializeOverworldMapNative();
	void InitializeGalaxyMapMesh();
	void InitializeCompassAndGrid();
	void HideZoneMap();
	class UZoneMapMeshData* GetZoneMeshData();
	void GetZoneChallenges(class UChallengeCategoryData* ChallengeCategory, TArray<struct FZoneMapChallengeQuery>* ZoneChallenges);
	struct FZoneMapIconInfo GetTargetInfo();
	void GetNewTransformTargetNative(float DeltaSeconds, const struct FVector& TransformMin, const struct FVector& TransformMax, float TransformBuffer, float GlobalTransformScale, float ZoomDelta);
	void GetNewScaleTargetNative(float DeltaSeconds, float* ZoomDelta, float ScaleMin, float ScaleMax, float ScaleRate);
	void GetNewRotationYawTargetNative(float DeltaSeconds, float YawMin, float YawMax);
	void GetNewRotationPitchTargetNative(float DeltaSeconds);
	class UTexture* GetMiniMapTexture();
	enum class EZoneMapViewerState GetMapState();
	class UTexture* GetMainViewTexture();
	class FText GetGlobalCompletionSummary();
	void GatherZoneMapDecorationActors(TArray<class AActor*>* Actors);
	struct FVector2D FilterDeadZone(const struct FVector2D& AxisValues, float DeadZone);
	void EchoDeviceOpened();
	void EchoDeviceClosed();
	void DeferredSetStatePlanet();
	void DeferredSetStateOverworld();
	void DeferredSetStateLevel();
	void DeferredRegistrationWithMissionTracker();
	void DeferredRegistrationWithIconTracker();
	void DeferredRegistrationWithFriendStatusSystem();
	void DeferredRegistrationWithChallengeManager();
	void CheckAndAdjustCaptureTextureSize();
	void ChallengesRegistered();
	void AddPOIIcons();
	void AddPlayerIcons(bool AllPlayers);
	class UMapIconAnchor* AddMapIcon(struct FZoneMapIconInfo* IconInfo, class UOakZoneMapIcon* NewZoneMapIcon, class UZoneMapPOITypeData* POIType);
	void AddFriendIcons();
	void AddDecorationMeshs();
	void AddChallengeIcons();
	void AddActorToZoneMapView(class AActor* NewViewActor);
};

}


