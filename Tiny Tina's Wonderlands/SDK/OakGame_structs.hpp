#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// ENUMS
//---------------------------------------------------------------------------------------------------------------------

enum class EOakElementalType : uint8
{
	None                           = 0,
	Cryo                           = 1,
	DarkMagic                      = 2,
	Fire                           = 3,
	Poison                         = 4,
	Shock                          = 5,
	MAX                            = 6,
};

enum class EExitDownStateReason : uint8
{
	ExitDownStateReason_None       = 0,
	ExitDownStateReason_Revived    = 1,
	ExitDownStateReason_SecondWind = 2,
	ExitDownStateReason_TimerExpired = 3,
	ExitDownStateReason_Interrupted = 4,
	ExitDownStateReason_Instant    = 5,
	ExitDownStateReason_Custom     = 6,
	ExitDownStateReason_Travel     = 7,
	ExitDownStateReason_MAX        = 8,
};

enum class EDownState : uint8
{
	DownState_Healthy              = 0,
	DownState_Down                 = 1,
	DownState_DownAndExerting      = 2,
	DownState_Resurrecting         = 3,
	DownState_GivingUp             = 4,
	DownState_MAX                  = 5,
};

enum class EReviveState : uint8
{
	ReviveState_None               = 0,
	ReviveState_BeingRevived       = 1,
	ReviveState_Reviving           = 2,
	ReviveState_MAX                = 3,
};

enum class EOakStatusEffectResourceEffectType : uint8
{
	Default                        = 0,
	Cryo                           = 1,
	DarkMagic                      = 2,
	EOakStatusEffectResourceEffectType_MAX = 3,
};

enum class EHealthAdded : uint8
{
	Success                        = 0,
	Falure                         = 1,
	EHealthAdded_MAX               = 2,
};

enum class EValidIndex : uint8
{
	Valid                          = 0,
	Invalid                        = 1,
	EValidIndex_MAX                = 2,
};

enum class EHealthState : uint8
{
	Healthy                        = 0,
	Low                            = 1,
	VeryLow                        = 2,
	Injured                        = 3,
	Dead                           = 4,
	EHealthState_MAX               = 5,
};

enum class EWeaponActionChannel : uint8
{
	Use                            = 0,
	Zoom                           = 1,
	Reload                         = 2,
	Other                          = 3,
	EWeaponActionChannel_MAX       = 4,
};

enum class EZoomEventType : uint8
{
	None                           = 0,
	ZoomingIn                      = 1,
	ZoomingOut                     = 2,
	EZoomEventType_MAX             = 3,
};

enum class EWeaponAbilityEffectType : uint8
{
	Amp                            = 0,
	SpellKill                      = 1,
	MAX                            = 2,
};

enum class EDeathType : uint8
{
	None                           = 0,
	HealthDepleted                 = 1,
	Suicide                        = 2,
	ScriptedInstantDeath           = 3,
	FellOutOfWorld                 = 4,
	Ragdoll                        = 5,
	EDeathType_MAX                 = 6,
};

enum class EOakGender : uint8
{
	Male                           = 0,
	Female                         = 1,
	Random                         = 2,
	EOakGender_MAX                 = 3,
};

enum class EWeaponHolsteredSizeType : uint8
{
	Small                          = 0,
	Medium                         = 1,
	Large                          = 2,
	ExtraLarge                     = 3,
	EWeaponHolsteredSizeType_MAX   = 4,
};

enum class ETargetedNameplateType : uint8
{
	Standard                       = 0,
	NPC                            = 1,
	Boss                           = 2,
	None                           = 3,
	ETargetedNameplateType_MAX     = 4,
};

enum class EKilledEnemyFriendEventType : uint8
{
	None                           = 0,
	Enemy                          = 1,
	NamedEnemy                     = 2,
	Boss                           = 3,
	EKilledEnemyFriendEventType_MAX = 4,
};

enum class EMatchmakingState : uint8
{
	Idle                           = 0,
	PreparingToSearch              = 1,
	Searching                      = 2,
	ConfirmingPlayers              = 3,
	StartingGameplay               = 4,
	Canceling                      = 5,
	EMatchmakingState_MAX          = 6,
};

enum class EBossbarEventType : uint8
{
	Intro_Event                    = 0,
	Enable_Invulnerable_Event      = 1,
	Disable_Invulnerable_Event     = 2,
	Shake_Event                    = 3,
	Destroy_Event                  = 4,
	NONE                           = 5,
	EBossbarEventType_MAX          = 6,
};

enum class EEffectivePlayerCountSetting : int32
{
	GameForced                     = 0,
	UserRequested                  = 1,
	Actual                         = 2,
	EEffectivePlayerCountSetting_MAX = 3,
};

enum class EOakGameStateUIGroupMode : uint8
{
	Cooperation                    = 0,
	Coopetition                    = 1,
	Unknown                        = 2,
	EOakGameStateUIGroupMode_MAX   = 3,
};

enum class EMultiplayerLootMode : uint8
{
	Standard                       = 0,
	Instanced                      = 1,
	EMultiplayerLootMode_MAX       = 2,
};

enum class ENewGameState : int32
{
	None                           = 0,
	IntroMovie                     = 1,
	CharacterSelect                = 2,
	WaitingForPlayerPawns          = 3,
	ENewGameState_MAX              = 4,
};

enum class EGrenadeThrowFailureReason : uint8
{
	UnknownError                   = 0,
	ActionsLocked                  = 1,
	NotHealthy                     = 2,
	InternalCooldown               = 3,
	NotEnoughAmmo                  = 4,
	EGrenadeThrowFailureReason_MAX = 5,
};

enum class EVaultRewardType : uint8
{
	None                           = 0,
	EridianAnalyser                = 1,
	EridianResonator               = 2,
	ArtifactSlot                   = 3,
	EridianFabricator              = 4,
	MayhemMode                     = 5,
	EVaultRewardType_MAX           = 6,
};

enum class EPlayerHeroPoint : uint8
{
	Strength                       = 0,
	Dexterity                      = 1,
	Intelligence                   = 2,
	Wisdom                         = 3,
	Constitution                   = 4,
	Luck                           = 5,
	EPlayerHeroPoint_MAX           = 6,
};

enum class ESpellSlot : uint8
{
	None                           = 0,
	Primary                        = 1,
	Secondary                      = 2,
	ESpellSlot_MAX                 = 3,
};

enum class EDuelClassification : uint8
{
	Standard1v1                    = 0,
	FreeForAll                     = 1,
	EDuelClassification_MAX        = 2,
};

enum class EDuelLoseReason : uint8
{
	None                           = 0,
	PlayerKilled                   = 1,
	PlayerQuit                     = 2,
	OutOfBounds                    = 3,
	EDuelLoseReason_MAX            = 4,
};

enum class EA9KSawState : uint8
{
	NotStarted                     = 0,
	Cooldown                       = 1,
	PickTarget                     = 2,
	TryToReachTarget               = 3,
	ReachedTarget                  = 4,
	EquipSaw                       = 5,
	WaitForQuipAnimDone            = 6,
	Anticipation                   = 7,
	PrepareToShootAndShoot         = 8,
	WaitForBPCallback              = 9,
	FollowingTarget                = 10,
	Resting                        = 11,
	EA9KSawState_MAX               = 12,
};

enum class EAnointedDeathState : uint8
{
	PreFreeze                      = 0,
	Freezing                       = 1,
	Frozen                         = 2,
	ShatterKilled                  = 3,
	TimedOut                       = 4,
	EAnointedDeathState_MAX        = 5,
};

enum class EJumpType : uint8
{
	None                           = 0,
	Default                        = 1,
	Sprint                         = 2,
	Slide                          = 3,
	UpwardLadderJump               = 4,
	EJumpType_MAX                  = 5,
};

enum class ECommandRingLocationType : uint8
{
	Default                        = 0,
	Ground                         = 1,
	Feet                           = 2,
	ECommandRingLocationType_MAX   = 3,
};

enum class ECommandRingAlignmentType : uint8
{
	Default                        = 0,
	SurfaceWorld                   = 1,
	SurfaceView                    = 2,
	View                           = 3,
	View2D                         = 4,
	Actor                          = 5,
	ECommandRingAlignmentType_MAX  = 6,
};

enum class ECommandRingReferenceActorType : uint8
{
	Target                         = 0,
	Owner                          = 1,
	Custom                         = 2,
	ECommandRingReferenceActorType_MAX = 3,
};

enum class EPuzzleState : uint8
{
	InProgress                     = 0,
	Completed                      = 1,
	Failed                         = 2,
	EPuzzleState_MAX               = 3,
};

enum class ETelemetryDungeonStatus : uint8
{
	Start                          = 0,
	Join                           = 1,
	Win                            = 2,
	Fail                           = 3,
	Newroom                        = 4,
	Endscreen                      = 5,
	ETelemetryDungeonStatus_MAX    = 6,
};

enum class EEncounterType : uint8
{
	Overworld                      = 0,
	MiniDungeon                    = 1,
	EndlessDungeon                 = 2,
	FeaturedRun                    = 3,
	EEncounterType_MAX             = 4,
};

enum class EGameModeType : uint8
{
	KillAllThreeWaves              = 0,
	KillMiniBoss                   = 1,
	KillBoss                       = 2,
	LootRoom                       = 3,
	EndlessDungeonBoss             = 4,
	Random                         = 5,
	KillAllTwoWaves                = 6,
	Tutorial_KillAllThreeWaves     = 7,
	Tutorial_LootRoom              = 8,
	Undefined                      = 9,
	EGameModeType_MAX              = 10,
};

enum class EDungeonRunType : uint8
{
	Overworld                      = 0,
	Normal                         = 1,
	Featured                       = 2,
	MayhemTrial                    = 3,
	Debug                          = 4,
	Boss                           = 5,
	Extended                       = 6,
	EDungeonRunType_MAX            = 7,
};

enum class ERunnerType : uint8
{
	RandomEncounter                = 0,
	OverworldDungeon               = 1,
	EndlessDungeon                 = 2,
	ERunnerType_MAX                = 3,
};

enum class ECrystalBonusType : uint8
{
	None                           = 0,
	CrystalAmount                  = 1,
	CrystalDropChance              = 2,
	EliteCrystalAmount             = 3,
	EliteCrystalDropChance         = 4,
	ECrystalBonusType_MAX          = 5,
};

enum class EDungeonBonusType : uint8
{
	Stat                           = 0,
	Reward                         = 1,
	EDungeonBonusType_MAX          = 2,
};

enum class EDungeonObjectiveType : uint8
{
	DOT_None                       = 0,
	DOT_Bonus                      = 1,
	DOT_TakePortal                 = 2,
	DOT_KillBoss                   = 3,
	DOT_ClearEncounter             = 4,
	DOT_TakeReward                 = 5,
	DOT_KillTarget                 = 6,
	DOT_ReachArena                 = 7,
	DOT_KillAll                    = 8,
	DOT_LootRoom                   = 9,
	DOT_LeaveRoom                  = 10,
	DOT_OfferCrystals              = 11,
	DOT_ChooseChallenge            = 12,
	DOT_BreakDie                   = 13,
	DOT_BuyAltar                   = 14,
	DOT_KillDryl                   = 15,
	DOT_KillDragonLord             = 16,
	DOT_MAX                        = 17,
};

enum class EPlayerExperienceType : uint8
{
	Generic                        = 0,
	Combat                         = 1,
	Mission                        = 2,
	EPlayerExperienceType_MAX      = 3,
};

enum class EPlayerExperienceSource : uint8
{
	XPUnknown                      = 0,
	XPCombat                       = 1,
	PlotMissionAward               = 2,
	Discovery                      = 3,
	SideMissionAward               = 4,
	SaveGame                       = 5,
	EPlayerExperienceSource_MAX    = 6,
};

enum class EOakReticleFeedbackGameEvent : uint8
{
	None                           = 0,
	DamageCaused                   = 1,
	DeathCaused                    = 2,
	EOakReticleFeedbackGameEvent_MAX = 3,
};

enum class EMatchmakingError : uint8
{
	None                           = 0,
	StartHostingFailed             = 1,
	StartMatchmakingRoundFailed    = 2,
	StartMatchmakingSearchFailed   = 3,
	CreateClientMatchmakingBeaconFailed = 4,
	SearchFailed                   = 5,
	JoinGameFailed                 = 6,
	RateLimit                      = 7,
	NetworkFailure                 = 8,
	ClientCriticalFailure          = 9,
	UpdateSessionFailed            = 10,
	StartGameplayFailed            = 11,
	SplitscreenJoinFailure         = 12,
	SplitscreenLeaveFailure        = 13,
	NoPlaylistContentAvailable     = 14,
	EMatchmakingError_MAX          = 15,
};

enum class ETradeRequestReceptionType : uint8
{
	All                            = 0,
	FriendsOnly                    = 1,
	Off                            = 2,
	MAX                            = 3,
};

enum class EPlayerDifficultySetting : uint8
{
	Easy                           = 0,
	Normal                         = 1,
	Hard                           = 2,
	MAX                            = 3,
};

enum class ECanReRollInventoryResult : uint8
{
	Yes                            = 0,
	CantAfford                     = 1,
	No                             = 2,
	ECanReRollInventoryResult_MAX  = 3,
};

enum class EPOIActivationResult : uint8
{
	Success                        = 0,
	Failure_Generic                = 1,
	Failure_PlayerInMenu           = 2,
	Failure_AllyDown               = 3,
	Failure_FastTravelDisabled     = 4,
	Failure_PlayerInVehicle        = 5,
	Failure_ClientJoining          = 6,
	Failure_PlayerDueling          = 7,
	Failure_PhotoModeActive        = 8,
	EPOIActivationResult_MAX       = 9,
};

enum class EKickReason : uint8
{
	None                           = 0,
	Kicked                         = 1,
	Invite                         = 2,
	QuitGame                       = 3,
	SessionEnd                     = 4,
	TitleScreen                    = 5,
	IncompatibleMission            = 6,
	MissingContent                 = 7,
	EKickReason_MAX                = 8,
};

enum class EInventoryListType : uint8
{
	IL_Primary                     = 0,
	IL_Bank                        = 1,
	IL_LostLoot                    = 2,
	IL_MAX                         = 3,
};

enum class ELateJoinState : uint8
{
	NotLateJoining                 = 0,
	SelectingCharacter             = 1,
	ApplyingSaveGame               = 2,
	ELateJoinState_MAX             = 3,
};

enum class EOakUIDialogBoxButtonType : uint8
{
	ListButtons                    = 0,
	HintBox                        = 1,
	EOakUIDialogBoxButtonType_MAX  = 2,
};

enum class EOakUIDialogBoxStyle : uint8
{
	Default                        = 0,
	Warning                        = 1,
	Error                          = 2,
	Keybinding                     = 3,
	EOakUIDialogBoxStyle_MAX       = 4,
};

enum class EHyperHoopState : uint8
{
	Invalid                        = 0,
	NotStarted                     = 1,
	AttachingPawn                  = 2,
	Accelerating                   = 3,
	Moving                         = 4,
	Deccelerating                  = 5,
	DetachingPawn                  = 6,
	EHyperHoopState_MAX            = 7,
};

enum class EVendingMachineBuyType : uint8
{
	Regular                        = 0,
	BuyBack                        = 1,
	GearSoldByFriend               = 2,
	ItemOfTheDay                   = 3,
	EVendingMachineBuyType_MAX     = 4,
};

enum class EVendingMachineScrollDirection : uint8
{
	Forward                        = 0,
	Backward                       = 1,
	EVendingMachineScrollDirection_MAX = 2,
};

enum class ECharacterCreationUIDisplayCategory : int32
{
	NotSet                         = 0,
	None                           = 1,
	Body                           = 2,
	Head                           = 3,
	Eyes                           = 4,
	Ears                           = 5,
	Nose                           = 6,
	Mouth                          = 7,
	Scar                           = 8,
	Tattoo                         = 9,
	Accessories                    = 10,
	Personality                    = 11,
	Emote                          = 12,
	Banner                         = 13,
	Statue                         = 14,
	ClassSelection                 = 15,
	AspectOfTheVault               = 16,
	HeroPoints                     = 17,
	Summary                        = 18,
	ECharacterCreationUIDisplayCategory_MAX = 19,
};

enum class EOakUICharacterCustomizationStandInType : uint8
{
	None                           = 0,
	Character                      = 1,
	Banner                         = 2,
	Statue                         = 3,
	EOakUICharacterCustomizationStandInType_MAX = 4,
};

enum class ECharacterCreationPreviewType : int32
{
	Default                        = 0,
	Body                           = 1,
	Head                           = 2,
	FaceDetail                     = 3,
	ECharacterCreationPreviewType_MAX = 4,
};

enum class ECcLayoutItemType : uint8
{
	Header                         = 0,
	CustomizationItem              = 1,
	Sublist                        = 2,
	ECcLayoutItemType_MAX          = 3,
};

enum class EZoneMapChallengeStatus : uint8
{
	ZMC_AvailableChallenge         = 0,
	ZMC_CompletedChallenge         = 1,
	ZMC_Unknown                    = 2,
	ZMC_MAX                        = 3,
};

enum class EZoneMapMissionStatus : uint8
{
	ZMM_AvailableMission           = 0,
	ZMM_TrackedObjective           = 1,
	ZMM_OptionalObjective          = 2,
	ZMM_NotTrackedObjective        = 3,
	ZMM_OutOfMap                   = 4,
	ZMM_Unknown                    = 5,
	ZMM_MAX                        = 6,
};

enum class EZoneMapViewerState : uint8
{
	Level                          = 0,
	Planet                         = 1,
	Galaxy                         = 2,
	Overworld                      = 3,
	Invalid                        = 4,
	EZoneMapViewerState_MAX        = 5,
};

enum class EZoneMapMovementMode : uint8
{
	Direct                         = 0,
	Interpolate                    = 1,
	Animate                        = 2,
	EZoneMapMovementMode_MAX       = 3,
};

enum class ERunnerCompletionStatus : uint8
{
	Cancelled                      = 0,
	Won                            = 1,
	Lost                           = 2,
	NotComplete                    = 3,
	ERunnerCompletionStatus_MAX    = 4,
};

enum class EPetReleaseReason : uint8
{
	SpawnCheckFailed               = 0,
	PetProfileChanged              = 1,
	PetDied                        = 2,
	PlayerDied                     = 3,
	ItemPreventsSpawning           = 4,
	EPetReleaseReason_MAX          = 5,
};

enum class EVehicleImpactForce : uint8
{
	Unknown                        = 0,
	Grinding                       = 1,
	VerySmall                      = 2,
	Small                          = 3,
	Medium                         = 4,
	Heavy                          = 5,
	Count                          = 6,
	EVehicleImpactForce_MAX        = 7,
};

enum class EEffectStateType : uint8
{
	Play                           = 0,
	Stop                           = 1,
	Count                          = 2,
	EEffectStateType_MAX           = 3,
};

enum class EVehicleEffectEvent : uint8
{
	None                           = 0,
	Boost                          = 1,
	BoostChargeCountChanged        = 2,
	BoostPoolEmpty                 = 3,
	BoostPoolFull                  = 4,
	StartEngine                    = 5,
	Braking                        = 6,
	Hover                          = 7,
	Horn                           = 8,
	Digithrust                     = 9,
	ShieldBreak                    = 10,
	ShieldHealthEvent_Normal       = 11,
	ShieldHealthEvent_Low          = 12,
	ShieldHealthEvent_VeryLow      = 13,
	ShieldFullHealth               = 14,
	Backfire                       = 15,
	MaxRPMBackfire                 = 16,
	HealthEvent_Healthy            = 17,
	HealthEvent_Low                = 18,
	HealthEvent_VeryLow            = 19,
	HealthEvent_Dead               = 20,
	StatusEffect_CryoFrozen        = 21,
	StatusEffect_CryoThawing       = 22,
	StatusEffect_Cryo              = 23,
	StatusEffect_DarkMagic         = 24,
	StatusEffect_Shock             = 25,
	StatusEffect_Fire              = 26,
	StatusEffect_Poison            = 27,
	EVehicleEffectEvent_MAX        = 28,
};

enum class EFreezeType : uint8
{
	Cryo                           = 0,
	Anointed                       = 1,
	MAX                            = 2,
};

enum class EShieldEffectState : uint8
{
	Full                           = 0,
	Damaged                        = 1,
	Depleted                       = 2,
	EShieldEffectState_MAX         = 3,
};

enum class EFreezeState : uint8
{
	None                           = 0,
	Freezing                       = 1,
	Frozen                         = 2,
	Thawing                        = 3,
	EFreezeState_MAX               = 4,
};

enum class EOakUIInventoryItemUseType : int32
{
	Unknown                        = 0,
	EquippableInternal             = 1,
	UsableInternal                 = 2,
	EOakUIInventoryItemUseType_MAX = 3,
};

enum class EManagedWidgetType : uint8
{
	Basic                          = 0,
	OnlineMessageAnimation         = 1,
	EManagedWidgetType_MAX         = 2,
};

enum class EMissionDeliveryMenuDisplayState : uint8
{
	Description                    = 0,
	Friends                        = 1,
	EMissionDeliveryMenuDisplayState_MAX = 2,
};

enum class EOakMessageType : uint8
{
	MessageType_PlayerJoined       = 1,
	MessageType_PlayerChangedName  = 2,
	MessageType_PlayerLeft         = 4,
	MessageType_PlayerUnableToJoin = 7,
	MessageType_SpectatorJoined    = 16,
	MessageType_MAX                = 17,
};

enum class EMessageSpecialType : uint8
{
	MST_None                       = 0,
	MST_TradeOffer                 = 1,
	MST_SeatSwapOffer              = 2,
	MST_DLCPrompt                  = 3,
	MST_MAX                        = 4,
};

enum class EMainMenuViewpointType : uint8
{
	TitleScreen                    = 0,
	OptionsMenu                    = 1,
	PlaythroughMode                = 2,
	NewGameSettings                = 3,
	MainMenuGroup                  = 4,
	CharacterSelect                = 5,
	MAX                            = 6,
};

enum class EVehicleDeathType : uint8
{
	None                           = 0,
	HealthDepleted                 = 1,
	FellOutOfWorld                 = 2,
	DigistuctOut                   = 3,
	InstantDeath                   = 4,
	EVehicleDeathType_MAX          = 5,
};

enum class EClearInputFilter : uint8
{
	ClearWeapons                   = 1,
	ClearInputComponent            = 2,
	DisableHover                   = 4,
	ClearAll                       = 255,
	EClearInputFilter_MAX          = 256,
};

enum class ENavPainterLayer : uint8
{
	Default                        = 0,
	Driver                         = 1,
	Scripted                       = 2,
	ENavPainterLayer_MAX           = 3,
};

enum class ENavCorrectionSetting : uint8
{
	Default                        = 0,
	Enabled                        = 1,
	Disabled                       = 2,
	ENavCorrectionSetting_MAX      = 3,
};

enum class EVehicleHealthState : uint8
{
	Healthy                        = 0,
	Low                            = 1,
	VeryLow                        = 2,
	Dead                           = 3,
	EVehicleHealthState_MAX        = 4,
};

enum class EActivityFeedImageAspectRatio : uint8
{
	FEED_IMAGE_ASPECT_RATIO_1_X_1  = 0,
	FEED_IMAGE_ASPECT_RATIO_1_51_X_1 = 1,
	FEED_IMAGE_ASPECT_RATIO_2_08_X_1 = 2,
	FEED_IMAGE_ASPECT_RATIO_16_X_9 = 3,
	FEED_IMAGE_ASPECT_RATIO_4_X_3  = 4,
	FEED_IMAGE_ASPECT_RATIO_MAX    = 5,
};

enum class EAIOOrientedParticleTargetType : uint8
{
	None                           = 0,
	DefaultPosition                = 1,
	UIObject                       = 2,
	EAIOOrientedParticleTargetType_MAX = 3,
};

enum class EA9KFightPhase : uint8
{
	NotStarted                     = 0,
	Phase1                         = 1,
	Phase2                         = 2,
	Phase3                         = 3,
	Phase4                         = 4,
	Dead                           = 5,
	EA9KFightPhase_MAX             = 6,
};

enum class EVehicleAchetypeNative : uint8
{
	Null                           = 0,
	Technical                      = 1,
	Outrunner                      = 2,
	Revolver                       = 3,
	Emperor                        = 4,
	Num                            = 5,
	EVehicleAchetypeNative_MAX     = 6,
};

enum class EHeldActorPreset : uint8
{
	Explosive                      = 0,
	Melee                          = 1,
	Shield                         = 2,
	EHeldActorPreset_MAX           = 3,
};

enum class ECarnivoraBones : uint8
{
	Root                           = 0,
	RW_Root                        = 1,
	RW_SuspensionR0                = 2,
	RW_SuspensionR1                = 3,
	RW_Wheel0                      = 4,
	RW_Tire0                       = 5,
	RW_Wheel1                      = 6,
	RW_Tire1                       = 7,
	RW_Wheel2                      = 8,
	RW_Tire2                       = 9,
	RW_SuspensionB0                = 10,
	RW_SuspensionB1                = 11,
	TrackShaft3                    = 12,
	TrackSuspension3               = 13,
	TrackTire3                     = 14,
	TrackShaft3_T                  = 15,
	SideAxle                       = 16,
	TrackShaft0                    = 17,
	TrackSuspension2               = 18,
	TrackTire2                     = 19,
	TrackShaft0_T                  = 20,
	SideAxle1                      = 21,
	TrackShaft1                    = 22,
	SideAxleSecondary              = 23,
	TrackSuspension1               = 24,
	TrackTire1                     = 25,
	TrackShaft1_T                  = 26,
	SideAxleSecondary1             = 27,
	SideAxle2                      = 28,
	TrackShaft2                    = 29,
	TrackSuspension0               = 30,
	TrackTire0                     = 31,
	TrackShaft2_T                  = 32,
	TunnelDoor                     = 33,
	MainAxle                       = 34,
	MainAxle_Part1                 = 35,
	MainAxle_Part2                 = 36,
	Count                          = 37,
	ECarnivoraBones_MAX            = 38,
};

enum class EEmperorBones : uint8
{
	Body                           = 0,
	Cannon_Yaw                     = 1,
	Cannon_Pitch                   = 2,
	Cannon_Recoil                  = 3,
	EntropyCore                    = 4,
	CannonTurret_Main              = 5,
	CannonTurret_Pitch             = 6,
	L_Turret_Yaw                   = 7,
	L_Turret_Pitch                 = 8,
	R_Turret_Yaw                   = 9,
	R_Turret_Pitch                 = 10,
	F_R_Wheel                      = 11,
	F_R_Wheel1                     = 12,
	F_R_Wheel2                     = 13,
	F_L_Wheel                      = 14,
	F_L_Wheel1                     = 15,
	F_L_Wheel2                     = 16,
	R_R_Wheel                      = 17,
	R_L_Wheel                      = 18,
	R_L_Wheel1                     = 19,
	R_R_Wheel1                     = 20,
	F_L_ThreadSuspension           = 21,
	F_R_ThreadSuspension           = 22,
	F_L_BigWheel_Suspension        = 23,
	F_R_BigWheel_Suspension        = 24,
	F_R_Hover01                    = 25,
	F_R_Hover02                    = 26,
	F_R_Hover03                    = 27,
	F_L_Hover01                    = 28,
	F_L_Hover02                    = 29,
	F_L_Hover03                    = 30,
	R_R_Hover01                    = 31,
	R_R_Hover02                    = 32,
	R_L_Hover01                    = 33,
	R_L_Hover02                    = 34,
	Count                          = 35,
	EEmperorBones_MAX              = 36,
};

enum class EOutrunnerBoosterBones : uint8
{
	Body                           = 0,
	L_Muffler                      = 1,
	R_Muffler                      = 2,
	M_Turbine                      = 3,
	L_Turbine                      = 4,
	R_Turbine                      = 5,
	L_Top_Muffler                  = 6,
	L_Bot_Muffler                  = 7,
	R_Top_Muffler                  = 8,
	R_Bot_Muffler                  = 9,
	L_Razor_Wing                   = 10,
	R_Razor_Wing                   = 11,
	Count                          = 12,
	EOutrunnerBoosterBones_MAX     = 13,
};

enum class EOutrunnerBones : uint8
{
	Body                           = 0,
	F_L_SuspensionArm              = 1,
	F_L_Steering                   = 2,
	F_L_Wheel                      = 3,
	F_R_SuspensionArm              = 4,
	F_R_Steering                   = 5,
	F_R_Wheel                      = 6,
	R_L_SuspensionArm              = 7,
	R_L_Steering                   = 8,
	R_L_Wheel                      = 9,
	R_R_SuspensionArm              = 10,
	R_R_Steering                   = 11,
	R_R_Wheel                      = 12,
	Turret_Yaw                     = 13,
	F_Cannon                       = 14,
	F_Cannon_Visual                = 15,
	Turret_Pitch                   = 16,
	SteeringWheel                  = 17,
	F_L_Spring01                   = 18,
	F_L_Spring02                   = 19,
	F_R_Spring01                   = 20,
	F_R_Spring02                   = 21,
	R_L_Spring01                   = 22,
	R_L_Spring02                   = 23,
	R_R_Spring01                   = 24,
	R_R_Spring02                   = 25,
	SeatMain                       = 26,
	Count                          = 27,
	EOutrunnerBones_MAX            = 28,
};

enum class ERevolverBoosterBones : uint8
{
	Root                           = 0,
	Main                           = 1,
	Muffler                        = 2,
	Helix                          = 3,
	Count                          = 4,
	ERevolverBoosterBones_MAX      = 5,
};

enum class ERevolverBones : uint8
{
	Body_Banking                   = 0,
	Body_Pitch                     = 1,
	Wheels                         = 2,
	SteeringWheel                  = 3,
	Count                          = 4,
	ERevolverBones_MAX             = 5,
};

enum class ETechnicalBones : uint8
{
	Body                           = 0,
	LeftMuffler                    = 1,
	RightMuffler                   = 2,
	Engine                         = 3,
	R_Axle                         = 4,
	R_R_Wheel                      = 5,
	R_L_Wheel                      = 6,
	F_R_Wheel                      = 7,
	F_L_Wheel                      = 8,
	F_L_Axle                       = 9,
	F_L_Steering                   = 10,
	F_L_Steering_T                 = 11,
	F_L_SteeringShaft              = 12,
	F_L_SuspensionUp               = 13,
	F_L_SuspensionBodyUp_T         = 14,
	F_L_SuspensionBodyDn           = 15,
	F_L_SuspensionDn_T             = 16,
	F_L_SuspensionSprings          = 17,
	F_L_SuspensionSpringsBody      = 18,
	F_R_Axle                       = 19,
	F_R_Steering                   = 20,
	F_R_Steering_T                 = 21,
	F_R_SteeringShaft              = 22,
	F_R_SuspensionUp               = 23,
	F_R_SuspensionBodyUp_T         = 24,
	F_R_SuspensionBodyDn           = 25,
	F_R_SuspensionDn_T             = 26,
	F_R_SuspensionSprings          = 27,
	F_R_SuspensionSpringsBody      = 28,
	F_Cannon                       = 29,
	F_Cannon_Visual                = 30,
	Turret                         = 31,
	Player2                        = 32,
	R_DriveShaftPole               = 33,
	R_DriveShaftBodyPole           = 34,
	R_DriveShaftAttach             = 35,
	R_DriveShaftBodyAttach         = 36,
	F_R_DriveShaft00               = 37,
	F_R_DriveShaft01               = 38,
	F_R_DriveShaft02               = 39,
	F_L_DriveShaft00               = 40,
	F_L_DriveShaft01               = 41,
	F_L_DriveShaft02               = 42,
	SteeringWheel                  = 43,
	F_R_Wheel_Hover                = 44,
	F_L_Wheel_Hover                = 45,
	R_R_Wheel_Hover                = 46,
	R_L_Wheel_Hover                = 47,
	F_DriveShaftAttach             = 48,
	F_DriveShaftPole               = 49,
	F_DriveShaftBodyAttach         = 50,
	R_L_Suspension_Body            = 51,
	R_L_Suspension_Axle            = 52,
	R_R_Suspension_Body            = 53,
	R_R_Suspension_Axle            = 54,
	EngineShaft                    = 55,
	EngineBelt                     = 56,
	Seat                           = 57,
	Count                          = 58,
	ETechnicalBones_MAX            = 59,
};

enum class ETrailerBones : uint8
{
	F_Axle                         = 0,
	F_R_Wheel                      = 1,
	F_L_Wheel                      = 2,
	R_Axle                         = 3,
	R_R_Wheel                      = 4,
	R_L_Wheel                      = 5,
	R_R_Spring_Axle                = 6,
	R_L_Spring_Axle                = 7,
	R_R_Spring_Body                = 8,
	R_L_Spring_Body                = 9,
	Count                          = 10,
	ETrailerBones_MAX              = 11,
};

enum class EDualWeaponBones : uint8
{
	Root                           = 0,
	Main                           = 1,
	Base                           = 2,
	L_Base                         = 3,
	L_Shoulder                     = 4,
	L_Elbow                        = 5,
	L_End                          = 6,
	L_Elbow_Piston                 = 7,
	L_Shoulder_Piston              = 8,
	L_Pitch                        = 9,
	L_Projectile                   = 10,
	R_Base                         = 11,
	R_Shoulder                     = 12,
	R_Elbow                        = 13,
	R_End                          = 14,
	R_Elbow_Piston                 = 15,
	R_Shoulder_Piston              = 16,
	R_Pitch                        = 17,
	R_Projectile                   = 18,
	L_BaseAttach                   = 19,
	R_BaseAttach                   = 20,
	Count                          = 21,
	EDualWeaponBones_MAX           = 22,
};

enum class EWeaponBones : uint8
{
	None                           = 0,
	Root                           = 1,
	Main                           = 2,
	Turret_Yaw                     = 3,
	Turret_Pitch                   = 4,
	Cannon_Yaw                     = 5,
	Cannon_Pitch                   = 6,
	Projectile                     = 7,
	Count                          = 8,
	EWeaponBones_MAX               = 9,
};

enum class EIntroType : uint8
{
	EnterFromGround                = 0,
	EnterFromSwapSeat              = 1,
	HijackFromGround               = 2,
	HijackFromSwapSeat             = 3,
	EIntroType_MAX                 = 4,
};

enum class ECARStatus : uint8
{
	Locked                         = 0,
	Unfolding                      = 1,
	Active                         = 2,
	Inactive                       = 3,
	ECARStatus_MAX                 = 4,
};

enum class ECarnivoraFakeTurretShootingStyle : uint8
{
	TARGET_AROUND_PLAYER           = 0,
	CONE_IN_DIRECTION              = 1,
	ECarnivoraFakeTurretShootingStyle_MAX = 2,
};

enum class ECarnivoraAverageLocation : uint8
{
	FRONT_RIGHT                    = 0,
	FRONT_LEFT                     = 1,
	BACK_RIGHT                     = 2,
	BACK_LEFT                      = 3,
	NUM                            = 4,
	ECarnivoraAverageLocation_MAX  = 5,
};

enum class ECarnivoraPartName : uint8
{
	FRONT_WHEEL_0                  = 0,
	FRONT_WHEEL_1                  = 1,
	FRONT_WHEEL_2                  = 2,
	TIRE_TRACK_0                   = 3,
	TIRE_TRACK_1                   = 4,
	TIRE_TRACK_2                   = 5,
	TIRE_TRACK_3                   = 6,
	NUM                            = 7,
	ECarnivoraPartName_MAX         = 8,
};

enum class ECARRestrictionType : uint8
{
	Default                        = 0,
	DLC3                           = 1,
	ECARRestrictionType_MAX        = 2,
};

enum class ECARPartType : uint8
{
	Wheel                          = 1,
	Armor                          = 2,
	CoreMod                        = 3,
	GunnerWeapon                   = 4,
	DriverWeapon                   = 5,
	Ornament                       = 6,
	MaterialDecal                  = 7,
	Material                       = 8,
	None                           = 9,
	ECARPartType_MAX               = 10,
};

enum class ECharacterEchoDataMediaPlaybackType : int32
{
	PlayAndClose                   = 0,
	LoopUntilAudioEnds             = 1,
	ECharacterEchoDataMediaPlaybackType_MAX = 2,
};

enum class ECrosshairColorsEnum : uint8
{
	NONE                           = 0,
	WHITE                          = 1,
	GREEN                          = 2,
	RED                            = 3,
	TEAL                           = 4,
	ORANGE                         = 5,
	PURPLE                         = 6,
	MAX                            = 7,
};

enum class EDaffodilChallengeBonusCategory : int32
{
	CrewChallenge                  = 0,
	Shrine                         = 1,
	EDaffodilChallengeBonusCategory_MAX = 2,
};

enum class EDamagePresentationLevel : uint8
{
	Negligible                     = 0,
	Low                            = 1,
	Medium                         = 2,
	High                           = 3,
	MAX                            = 4,
};

enum class ECullableIORequirement : uint8
{
	None                           = 0,
	Medium_DetailMode              = 1,
	Medium_SpawnCost               = 2,
	High_DetailMode                = 3,
	High_SpawnCost                 = 4,
	ECullableIORequirement_MAX     = 5,
};

enum class EDiscoveryAreaDrawStyle : uint8
{
	None                           = 0,
	Wire                           = 1,
	Solid                          = 2,
	SolidAndWire                   = 3,
	EDiscoveryAreaDrawStyle_MAX    = 4,
};

enum class EDuelTotemDestroyReason : uint8
{
	None                           = 0,
	TimedOut                       = 1,
	Canceled                       = 2,
	DuelFinished                   = 3,
	EDuelTotemDestroyReason_MAX    = 4,
};

enum class EPotentialDuelState : uint8
{
	None                           = 0,
	WaitingToBeAccepted            = 1,
	WaitingToStart                 = 2,
	Started                        = 3,
	EPotentialDuelState_MAX        = 4,
};

enum class EActiveDuelStatus : uint8
{
	WaitingToStart                 = 0,
	InProgress                     = 1,
	Finished                       = 2,
	EActiveDuelStatus_MAX          = 3,
};

enum class EDuelMode : uint8
{
	OnFoot                         = 0,
	Vehicle                        = 1,
	EDuelMode_MAX                  = 2,
};

enum class EBonusObjectiveState : uint8
{
	Active                         = 0,
	Succeded                       = 1,
	Failed                         = 2,
	EBonusObjectiveState_MAX       = 3,
};

enum class EBonusObjectiveType : uint8
{
	Activate                       = 0,
	Defend                         = 1,
	Destroy                        = 2,
	Entrapment                     = 3,
	KillConfirmed                  = 4,
	SacredGround                   = 5,
	TimeTrial                      = 6,
	Fusion                         = 7,
	EBonusObjectiveType_MAX        = 8,
};

enum class ECanSprintResult : uint8
{
	Yes                            = 0,
	No                             = 1,
	Cancel                         = 2,
	ECanSprintResult_MAX           = 3,
};

enum class EEchoLogBlockedStartMethod : uint8
{
	Cancel                         = 0,
	PlayInWorldOnly                = 1,
	Queue                          = 2,
	Interrupt                      = 3,
	EEchoLogBlockedStartMethod_MAX = 4,
};

enum class EEchoLogDisplayCategory : uint8
{
	EchoLog                        = 0,
	EEchoLogDisplayCategory_MAX    = 1,
};

enum class EDamagePresentationModifier : uint8
{
	Default                        = 0,
	Increase                       = 1,
	Decrease                       = 2,
	EDamagePresentationModifier_MAX = 3,
};

enum class EElementalEffectSizeComputationType : uint8
{
	BoundsSphereRadius             = 0,
	BoundsBoxExtentMaxAxis         = 1,
	EElementalEffectSizeComputationType_MAX = 2,
};

enum class EElementalInteractionMode : uint8
{
	Default                        = 0,
	OnlyTransmit                   = 1,
	OnlyReceive                    = 2,
	EElementalInteractionMode_MAX  = 3,
};

enum class EElementalInteractionSourceMode : uint8
{
	Default                        = 0,
	Always                         = 1,
	Never                          = 2,
	OnlyThroughBlueprint           = 3,
	EElementalInteractionSourceMode_MAX = 4,
};

enum class EPuddleState : uint8
{
	Spawning                       = 0,
	Idle                           = 1,
	CleaningUp                     = 2,
	CleanedUp                      = 3,
	EPuddleState_MAX               = 4,
};

enum class EEndlessDungeonSerialNumberState : uint8
{
	Empty                          = 0,
	Writing                        = 1,
	Full                           = 2,
	Reading                        = 3,
	Encrypted                      = 4,
	EEndlessDungeonSerialNumberState_MAX = 5,
};

enum class ENativeEnemyExperienceType : uint8
{
	Chump                          = 0,
	Normal                         = 1,
	NormalHigh                     = 2,
	Tough                          = 3,
	ToughHigh                      = 4,
	Badass                         = 5,
	SuperBadass                    = 6,
	UltimateBadass                 = 7,
	Boss                           = 8,
	Summoned                       = 9,
	Tutorial                       = 10,
	ENativeEnemyExperienceType_MAX = 11,
};

enum class EOakPlayerClass : uint8
{
	None                           = 0,
	Barbarian                      = 1,
	GunMage                        = 2,
	KnightOfTheClaw                = 3,
	Necromancer                    = 4,
	Ranger                         = 5,
	Rogue                          = 6,
	Shaman                         = 7,
	EOakPlayerClass_MAX            = 8,
};

enum class EWeaponInputChannel : uint8
{
	Channel1                       = 0,
	Channel2                       = 1,
	EWeaponInputChannel_MAX        = 255,
};

enum class EWeaponUseMode : uint8
{
	Mode1                          = 0,
	Mode2                          = 1,
	Mode3                          = 2,
	EWeaponUseMode_MAX             = 255,
};

enum class EFriendEventPriority : uint8
{
	Highest                        = 0,
	High                           = 1,
	Normal                         = 2,
	Low                            = 3,
	EFriendEventPriority_MAX       = 4,
};

enum class EFriendEventType : uint8
{
	None                           = 0,
	LevelUp                        = 1,
	GearSold                       = 2,
	GearReceived                   = 3,
	PlotMissionCompletion          = 4,
	SideMissionCompletion          = 5,
	PropagateRareSpawnMission      = 6,
	KilledEnemy                    = 7,
	KilledNamedEnemy               = 8,
	KilledBoss                     = 9,
	Unclaimed_00                   = 10,
	ChallengeUpdate                = 11,
	ChallengeCompletion            = 12,
	ProvingGroundCompletion        = 13,
	CircleOfSlaughterCompletion    = 14,
	RaidCompletion                 = 15,
	UnlockedTrueVaultHunterMode    = 16,
	SlotMachineJackpot             = 17,
	OpenedGoldenChest              = 18,
	SentMail                       = 19,
	FriendGearPurchased            = 20,
	LookingForHelp                 = 21,
	AchievementUnlocked            = 22,
	ChallengeUpdatesMerged         = 23,
	LikedEvent                     = 24,
	CustomizationAcquired          = 25,
	Max                            = 26,
};

enum class EFriendEventNotificationLifetime : uint8
{
	Normal                         = 0,
	Long                           = 1,
	VeryLong                       = 2,
	EFriendEventNotificationLifetime_MAX = 3,
};

enum class EFriendEventNotificationFrequency : uint8
{
	Off                            = 0,
	VeryLow                        = 1,
	Low                            = 2,
	Normal                         = 3,
	High                           = 4,
	VeryHigh                       = 5,
	EFriendEventNotificationFrequency_MAX = 6,
};

enum class EFrontendStandInAnimType : uint8
{
	Default                        = 0,
	CharacterSelect                = 1,
	CharacterCreate                = 2,
	RnRCharaterCreate              = 3,
	EFrontendStandInAnimType_MAX   = 4,
};

enum class EOakCharacterMovementConditionType : uint8
{
	IsGroundSlamming               = 0,
	IsLandingFromGroundSlam        = 1,
	EOakCharacterMovementConditionType_MAX = 2,
};

enum class EBoostChargeCountComparisonMode : uint8
{
	Equal                          = 0,
	NotEqual                       = 1,
	GreaterThan                    = 2,
	GreaterThanOrEqual             = 3,
	SmallerThan                    = 4,
	SmallerThanOrEqual             = 5,
	FullCharges                    = 6,
	EBoostChargeCountComparisonMode_MAX = 7,
};

enum class EBoostPoolValueComparisonMode : uint8
{
	Equal                          = 0,
	NotEqual                       = 1,
	GreaterThan                    = 2,
	GreaterThanOrEqual             = 3,
	SmallerThan                    = 4,
	SmallerThanOrEqual             = 5,
	EBoostPoolValueComparisonMode_MAX = 6,
};

enum class EGbxGFxDialogBoxButtonType : uint8
{
	ListButtons                    = 0,
	HintBox                        = 1,
	EGbxGFxDialogBoxButtonType_MAX = 2,
};

enum class EGbxGFxDialogBoxStyle : uint8
{
	Default                        = 0,
	Warning                        = 1,
	Error                          = 2,
	Keybinding                     = 3,
	EGbxGFxDialogBoxStyle_MAX      = 4,
};

enum class EShiftReportReason : int32
{
	Username                       = 0,
	Sportsmanship                  = 1,
	Abuse                          = 2,
	HateSpeech                     = 3,
	LeavingOrAfk                   = 4,
	Cheating                       = 5,
	UserGeneratedContent           = 6,
	IllicitBehavior                = 7,
	EShiftReportReason_MAX         = 8,
};

enum class EGbxInputEvent_OakUIAxis_Events : uint8
{
	Pressed                        = 0,
	Held                           = 1,
	Released                       = 2,
	EGbxInputEvent_OakUIAxis_MAX   = 3,
};

enum class EGeyserBehavior : uint8
{
	None                           = 0,
	Intermittent                   = 1,
	AlwaysOn                       = 2,
	EGeyserBehavior_MAX            = 3,
};

enum class EGeyserState : uint8
{
	None                           = 0,
	SteamOn                        = 1,
	SteamOff                       = 2,
	SteamAnticipationOn            = 3,
	SteamAnticipationOff           = 4,
	EGeyserState_MAX               = 5,
};

enum class EBuddyWidgetFanfareState : uint8
{
	None                           = 0,
	LevelUp                        = 1,
	SecondWind                     = 2,
	EBuddyWidgetFanfareState_MAX   = 3,
};

enum class EBuddyWidgetState : uint8
{
	Healthy                        = 0,
	Healthy_JustRespawned          = 1,
	Dying                          = 2,
	BeingRevived                   = 3,
	Respawning                     = 4,
	RespawnTimer                   = 5,
	Spectating                     = 6,
	EBuddyWidgetState_MAX          = 7,
};

enum class EBuddyWidgetContainerAnimState : uint8
{
	Inactive                       = 0,
	SlideIn                        = 1,
	SlideOut                       = 2,
	SlideDown                      = 3,
	EBuddyWidgetContainerAnimState_MAX = 4,
};

enum class EGFxChallegeProgressWidgetState : int32
{
	Off                            = 0,
	On                             = 1,
	Out                            = 2,
	EGFxChallegeProgressWidgetState_MAX = 3,
};

enum class ECheckpointWidgetState : uint8
{
	None                           = 0,
	Hidden                         = 1,
	Intro                          = 2,
	Idle                           = 3,
	Exit                           = 4,
	ECheckpointWidgetState_MAX     = 5,
};

enum class EColorPickerMode : uint8
{
	All                            = 0,
	PrimarySecondary               = 1,
	PrimaryOnly                    = 2,
	EColorPickerMode_MAX           = 3,
};

enum class EColorSelectionType : uint8
{
	TopColor                       = 0,
	BottomColor                    = 1,
	ResetBothToDefault             = 2,
	EColorSelectionType_MAX        = 3,
};

enum class ECrosshairType : uint8
{
	NORMAL                         = 0,
	ECrosshairType_MAX             = 1,
};

enum class ECrosshairState : uint8
{
	NORMAL                         = 0,
	ACTION_SKILL                   = 1,
	SPRINTING                      = 2,
	MELEE                          = 3,
	ECrosshairState_MAX            = 4,
};

enum class EGFxCurrencyCounterState : int32
{
	Off                            = 0,
	AnimatingToValue               = 1,
	HoldingOnValue                 = 2,
	EGFxCurrencyCounterState_MAX   = 3,
};

enum class EECHOLOGWidgetState : uint8
{
	Inactive                       = 0,
	Activating                     = 1,
	Displayed                      = 2,
	Deactivating                   = 3,
	EECHOLOGWidgetState_MAX        = 4,
};

enum class EECHOWidgetState : uint8
{
	Inactive                       = 0,
	Activating                     = 1,
	Displayed                      = 2,
	Deactivating                   = 3,
	EECHOWidgetState_MAX           = 4,
};

enum class EGFxFeedWidgetState : int32
{
	Off                            = 0,
	On                             = 1,
	Out                            = 2,
	EGFxFeedWidgetState_MAX        = 3,
};

enum class EFFYLBarState : uint8
{
	Dying                          = 0,
	BeingRevived                   = 1,
	Reviving                       = 2,
	EFFYLBarState_MAX              = 3,
};

enum class EGFxGrenadeIndicatorMode : int32
{
	Hidden                         = 0,
	Safe                           = 1,
	Danger                         = 2,
	EGFxGrenadeIndicatorMode_MAX   = 3,
};

enum class EPromptLinesLayouts : uint8
{
	INVALID                        = 0,
	PrimaryPress                   = 1,
	PrimaryHold                    = 2,
	PrimaryPress_PrimaryHold       = 3,
	PrimaryPress_SecondaryPress    = 4,
	PrimaryPress_SecondaryHold     = 5,
	PrimaryHold_SecondaryPress     = 6,
	PrimaryHold_SecondaryHold      = 7,
	EPromptLinesLayouts_MAX        = 8,
};

enum class EInteractionPromptGlyphMode : uint8
{
	InvalidForUseDef               = 0,
	Normal                         = 1,
	CantUse                        = 2,
	Locked                         = 3,
	EInteractionPromptGlyphMode_MAX = 4,
};

enum class EGFxInventoryMenuBackpackSize : uint8
{
	TwoColumns                     = 0,
	OneColumn                      = 1,
	EGFxInventoryMenuBackpackSize_MAX = 2,
};

enum class EGFxInventoryMenuFocusSide : uint8
{
	None                           = 0,
	PaperDoll                      = 1,
	Backpack                       = 2,
	EGFxInventoryMenuFocusSide_MAX = 3,
};

enum class EGFxInWorldIconClampUpdate : uint8
{
	Unknown                        = 0,
	NotClamped                     = 1,
	ClampedInFront                 = 2,
	ClampedBehind                  = 3,
	EGFxInWorldIconClampUpdate_MAX = 4,
};

enum class EInWorldIconRange : uint8
{
	None                           = 0,
	Near                           = 1,
	Far                            = 2,
	EInWorldIconRange_MAX          = 3,
};

enum class EBackButtonHint : uint8
{
	Back                           = 0,
	Cancel                         = 1,
	Exit                           = 2,
	EBackButtonHint_MAX            = 3,
};

enum class ETradingMenuState : uint8
{
	Offering                       = 0,
	Backpack                       = 1,
	Done                           = 2,
	ETradingMenuState_MAX          = 3,
};

enum class EGFxMapMenuProgressPanelState : uint8
{
	None                           = 0,
	Progress                       = 1,
	List                           = 2,
	EGFxMapMenuProgressPanelState_MAX = 3,
};

enum class EDetailsPanelMode : uint8
{
	Unknown                        = 0,
	NoTarget                       = 1,
	POIInfo                        = 2,
	Challenge                      = 3,
	Mission                        = 4,
	PlanetOverview                 = 5,
	LevelOverview                  = 6,
	POIInfoPlayer                  = 7,
	EDetailsPanelMode_MAX          = 8,
};

enum class EGFxMapMenuState : uint8
{
	None                           = 0,
	Tutorial_Stage1                = 1,
	Tutorial_Stage2                = 2,
	Tutorial_Stage3                = 3,
	Tutorial_Stage4                = 4,
	Tutorial_Stage5                = 5,
	Progress                       = 6,
	FastTravel                     = 7,
	Challenges                     = 8,
	Friends                        = 9,
	EGFxMapMenuState_MAX           = 10,
};

enum class EGFxMapMenuMapState : uint8
{
	None                           = 0,
	Level                          = 1,
	Planet                         = 2,
	Galaxy                         = 3,
	Overworld                      = 4,
	EGFxMapMenuMapState_MAX        = 5,
};

enum class EGFxMenuTutorialFocusDirection : int32
{
	Center                         = 0,
	Left                           = 1,
	Right                          = 2,
	SameAsStardard                 = 3,
	EGFxMenuTutorialFocusDirection_MAX = 4,
};

enum class EGFxMenuTutorialDialogSize : int32
{
	Large                          = 0,
	Medium                         = 1,
	Small                          = 2,
	EGFxMenuTutorialDialogSize_MAX = 3,
};

enum class EGFxMinimapWidgetIconTrackedType : uint8
{
	Unused                         = 0,
	Mission                        = 1,
	MinimapIconComponent           = 2,
	CustomWaypoint                 = 3,
	PlayerIcon                     = 4,
	EGFxMinimapWidgetIconTrackedType_MAX = 5,
};

enum class EGFxMissionLogMissionItemType : uint8
{
	Mission                        = 0,
	EchoLog                        = 1,
	Header                         = 2,
	EGFxMissionLogMissionItemType_MAX = 3,
};

enum class EGFxMissionLogFilterType : uint8
{
	None                           = 0,
	MissionLogMissionType          = 1,
	MissionLogByExpansion          = 2,
	MissionLogByRegion             = 3,
	EGFxMissionLogFilterType_MAX   = 4,
};

enum class EGFxMissionLogNavType : uint8
{
	None                           = 0,
	Missions                       = 1,
	EchoLog                        = 2,
	EGFxMissionLogNavType_MAX      = 3,
};

enum class EGFxMissionLogMissionIconType : uint8
{
	Normal                         = 0,
	Plot                           = 1,
	Side                           = 2,
	Contract                       = 3,
	EchoLog                        = 4,
	Complete                       = 5,
	Ignored                        = 6,
	Failed                         = 7,
	HardMission                    = 8,
	EGFxMissionLogMissionIconType_MAX = 9,
};

enum class ETargetedNameplateState : uint8
{
	NotShowingTarget_Linger        = 0,
	NotShowingTarget               = 1,
	ShowingValidTarget             = 2,
	ShowingDyingTarget             = 3,
	ETargetedNameplateState_MAX    = 4,
};

enum class ENameplateStyle : uint8
{
	Targeted                       = 0,
	BossBar                        = 1,
	Overhead                       = 2,
	ENameplateStyle_MAX            = 3,
};

enum class EOverheadNameplateDisplayState : uint8
{
	None                           = 0,
	CenteredName_Name              = 1,
	CenteredName_Arrow             = 2,
	State_Name                     = 3,
	State_Arrow                    = 4,
	EOverheadNameplateDisplayState_MAX = 5,
};

enum class EOverheadNameplateHealthState : uint8
{
	Healthy                        = 0,
	Dying                          = 1,
	BeingRevived                   = 2,
	Respawning                     = 3,
	EOverheadNameplateHealthState_MAX = 4,
};

enum class EGFxPlayerStorageMenuItemAction : uint8
{
	None                           = 0,
	MoveToBank                     = 1,
	MoveToInventory                = 2,
	Inspect                        = 3,
	EGFxPlayerStorageMenuItemAction_MAX = 4,
};

enum class EGFxPlayerStorageMenuState : uint8
{
	None                           = 0,
	BankRetrieve                   = 1,
	BackpackDeposit                = 2,
	CompareBankFocused             = 3,
	CompareBackpackFocused         = 4,
	EGFxPlayerStorageMenuState_MAX = 5,
};

enum class EQuickChangeMenuSortMode : uint8
{
	Rarity                         = 0,
	Alphabetic                     = 1,
	NewToOld                       = 2,
	EQuickChangeMenuSortMode_MAX   = 3,
};

enum class EBaseQuickChangeChoiceType : uint8
{
	Skin                           = 0,
	Head                           = 1,
	Body                           = 2,
	Emote                          = 3,
	Color                          = 4,
	Respec                         = 5,
	EBaseQuickChangeChoiceType_MAX = 6,
};

enum class EBaseQuickChangeMenuState : uint8
{
	CategorySelection              = 0,
	BodySelection                  = 1,
	HeadSelection                  = 2,
	SkinSelection                  = 3,
	ColorSelection                 = 4,
	EmoteSelection                 = 5,
	Respec                         = 6,
	None                           = 7,
	MAX                            = 8,
};

enum class EReloadWidgetDisplayState : uint8
{
	Default                        = 0,
	AmmoLow                        = 1,
	NoSpareAmmo                    = 2,
	NoAmmoAtAll                    = 3,
	EReloadWidgetDisplayState_MAX  = 4,
};

enum class ESkillItemActionState : uint8
{
	None                           = 0,
	CanEquipPrimary                = 1,
	CanEquipSecondary              = 2,
	CanEquipBoth                   = 3,
	BlockedByTutorial              = 4,
	NoPointsToSpend                = 5,
	Unlock                         = 6,
	AddPoint                       = 7,
	Maxed                          = 8,
	NotEnoughBranchPoints          = 9,
	RequiresTreeUnlock             = 10,
	RequiresOtherSkill             = 11,
	ESkillItemActionState_MAX      = 12,
};

enum class ESkillItemUnlockAnimState : uint8
{
	Uninitialized                  = 0,
	Unplayed                       = 1,
	Played                         = 2,
	ESkillItemUnlockAnimState_MAX  = 3,
};

enum class ESkillScreenItemPurchaseState : uint8
{
	CannotPurchase                 = 0,
	FirstPoint                     = 1,
	AddPoints                      = 2,
	MaxPoints                      = 3,
	ESkillScreenItemPurchaseState_MAX = 4,
};

enum class ESkillScreenReceiveHighlightState : uint8
{
	Off                            = 0,
	Available                      = 1,
	Active                         = 2,
	ESkillScreenReceiveHighlightState_MAX = 3,
};

enum class ESkillScreenLoadoutSlotClearability : uint8
{
	CannotClear_Error              = 0,
	CannotClear_SlotEmpty          = 1,
	CannotClear_SlotMustBeFilled   = 2,
	CannotClear_AbilityInUse       = 3,
	CanClear                       = 4,
	ESkillScreenLoadoutSlotClearability_MAX = 5,
};

enum class EGFxSkillScreenLoadoutChoiceEquipState : uint8
{
	Locked                         = 0,
	Available                      = 1,
	Equipped                       = 2,
	EGFxSkillScreenLoadoutChoiceEquipState_MAX = 3,
};

enum class EGFxSkillScreenState : uint8
{
	None                           = 0,
	BranchesFocused                = 1,
	LoadoutEdit                    = 2,
	PlayingUnlockAnim              = 3,
	TreeLocked_Info                = 4,
	TreeLocked_Branches            = 5,
	DraggingSkillItem              = 6,
	EGFxSkillScreenState_MAX       = 7,
};

enum class ESkillScreenSlotType : uint8
{
	None                           = 0,
	Compatible                     = 1,
	All                            = 2,
	ESkillScreenSlotType_MAX       = 3,
};

enum class EGFxStatusMenuTransitionReason : uint8
{
	None                           = 0,
	Pushed                         = 1,
	NextPage                       = 2,
	PrevPage                       = 3,
	Switched                       = 4,
	Popped                         = 5,
	EGFxStatusMenuTransitionReason_MAX = 6,
};

enum class ESubtitleLayoutType : uint8
{
	None                           = 0,
	SubtitlesOnly                  = 1,
	ClosedCaptionsOnly             = 2,
	Both                           = 3,
	ESubtitleLayoutType_MAX        = 4,
};

enum class EGbxGFxSpinnerWidgetGoToMethod : uint8
{
	FromCurrent                    = 0,
	Immediately                    = 1,
	EGbxGFxSpinnerWidgetGoToMethod_MAX = 2,
};

enum class EGFxVaultHunterProfileCardView : uint8
{
	Skill                          = 0,
	Inventory                      = 1,
	Stat                           = 2,
	EGFxVaultHunterProfileCardView_MAX = 3,
};

enum class EGFxVaultHunterProfileCardMode : uint8
{
	Unknown                        = 0,
	Friend                         = 1,
	Self                           = 2,
	EGFxVaultHunterProfileCardMode_MAX = 3,
};

enum class EGFxVendingMachineMenuBackpackState : int32
{
	Unknown                        = 0,
	Buy                            = 1,
	Sell                           = 2,
	Compare                        = 3,
	CompareToMachine               = 4,
	EGFxVendingMachineMenuBackpackState_MAX = 5,
};

enum class EVendingMachineSocketMapStates : uint8
{
	SOCKETMAP_BUY                  = 0,
	SOCKETMAP_SELL                 = 1,
	SOCKETMAP_COMPARE              = 2,
	SOCKETMAP_VENDINGCOMPARE       = 3,
	SOCKETMAP_MAX                  = 4,
};

enum class EGFxVendingMachineDisplayMode : uint8
{
	GFXVENDOR_Buy                  = 0,
	GFXVENDOR_Sell                 = 1,
	GFXVENDOR_Buyback              = 2,
	GFXVENDOR_END                  = 3,
	GFXVENDOR_MAX                  = 4,
};

enum class EGoreRegionType : uint8
{
	Head                           = 0,
	Arm                            = 1,
	Leg                            = 2,
	Torso                          = 3,
	EGoreRegionType_MAX            = 4,
};

enum class EChildPayloadType : uint8
{
	Payload_Divider                = 0,
	Payload_MiniMirv               = 1,
	Payload_Mirv                   = 2,
	Payload_Rain                   = 3,
	Payload_Spring                 = 4,
	Payload_Sticky                 = 5,
	Payload_MAX                    = 6,
};

enum class ESpellChargeType : uint8
{
	None                           = 0,
	Simple                         = 1,
	Advanced                       = 2,
	Repeated                       = 3,
	ESpellChargeType_MAX           = 4,
};

enum class ESpellType : uint8
{
	Projectile                     = 0,
	HitScan                        = 1,
	Beam                           = 2,
	Self                           = 3,
	Location                       = 4,
	ESpellType_MAX                 = 5,
};

enum class EInstanceDataOperator : uint8
{
	Add                            = 0,
	Multiply                       = 1,
	EInstanceDataOperator_MAX      = 2,
};

enum class ESpinDirection : uint8
{
	SD_NoSpin                      = 0,
	SD_Clockwise                   = 1,
	SD_Counterclockwise            = 2,
	SD_MAX                         = 3,
};

enum class EHeroStatueUsage : uint8
{
	PlayerOne                      = 0,
	PlayerTwo                      = 1,
	PlayerThree                    = 2,
	PlayerFour                     = 3,
	None                           = 4,
	EHeroStatueUsage_MAX           = 5,
};

enum class EHolsteredGearState : uint8
{
	None                           = 0,
	FadingIn                       = 1,
	FadingOut                      = 2,
	EHolsteredGearState_MAX        = 3,
};

enum class EInWorldIconFadeType : uint8
{
	None                           = 0,
	Distance                       = 1,
	TargetedRadius                 = 2,
	EInWorldIconFadeType_MAX       = 3,
};

enum class EInWorldIconClassType : uint8
{
	Icon                           = 0,
	Nameplate                      = 1,
	EInWorldIconClassType_MAX      = 2,
};

enum class EInWorldIconEdgeBehavior : uint8
{
	Clamp                          = 0,
	Hide                           = 1,
	EInWorldIconEdgeBehavior_MAX   = 2,
};

enum class EEncounterWinType : uint8
{
	Manual                         = 0,
	Immediate                      = 1,
	Delayed                        = 2,
	Volume                         = 3,
	Interact                       = 4,
	MissionObjective               = 5,
	EEncounterWinType_MAX          = 6,
};

enum class EInteractiveObjectTrapActivationType : uint8
{
	ActivateTrap                   = 0,
	DeactivateTrap                 = 1,
	EInteractiveObjectTrapActivationType_MAX = 2,
};

enum class EInteractiveObjectInteractiveState : uint8
{
	None                           = 0,
	Interactive                    = 1,
	NonInteractive                 = 2,
	Uninitialized                  = 3,
	EInteractiveObjectInteractiveState_MAX = 4,
};

enum class EInteractiveObjectLockState : uint8
{
	None                           = 0,
	Unlocked                       = 1,
	Locked                         = 2,
	Uninitialized                  = 3,
	EInteractiveObjectLockState_MAX = 4,
};

enum class EInteractiveObjectState : uint8
{
	None                           = 0,
	Enabling                       = 1,
	Enabled                        = 2,
	Disabling                      = 3,
	Disabled                       = 4,
	Locked                         = 5,
	Uninitialized                  = 6,
	EInteractiveObjectState_MAX    = 7,
};

enum class ELootSpawnTiming : uint8
{
	OnEnabled                      = 0,
	OnEnabling                     = 1,
	OnAnimNotify                   = 2,
	ELootSpawnTiming_MAX           = 3,
};

enum class EMissionDrivenLootableType : uint8
{
	None                           = 0,
	CopyPickupMissionObjective     = 1,
	UseSelfMissionObjective        = 2,
	EMissionDrivenLootableType_MAX = 3,
};

enum class ELootableOpenReason : uint8
{
	Use                            = 0,
	Damage                         = 1,
	ELootableOpenReason_MAX        = 2,
};

enum class EDebugMatchmakingFailure : int32
{
	None                           = 0,
	CreateMatchmakingSession       = 1,
	JoinMatchmakingSession         = 2,
	FindMatchmakingSession         = 3,
	FindGameplaySession            = 4,
	JoinGameplaySession            = 5,
	InitClientMatchmakingBeacon    = 6,
	CreateHostMatchmakingBeacon    = 7,
	EDebugMatchmakingFailure_MAX   = 8,
};

enum class EMatchmakingRequirementComparisonOp : uint8
{
	None                           = 0,
	Equal                          = 1,
	NotEqual                       = 2,
	LessThan                       = 3,
	GreaterThan                    = 4,
	EMatchmakingRequirementComparisonOp_MAX = 5,
};

enum class EMatchmakingRequirementType : uint8
{
	None                           = 0,
	PlayerLevel                    = 1,
	PlotMission                    = 2,
	DlcInstalled                   = 3,
	EMatchmakingRequirementType_MAX = 4,
};

enum class EMatchmakingSearchParameterOp : uint8
{
	Invalid                        = 0,
	Equals                         = 1,
	NotEquals                      = 2,
	GreaterThan                    = 3,
	GreaterThanEquals              = 4,
	LessThan                       = 5,
	LessThanEquals                 = 6,
	Max                            = 7,
};

enum class EMeleeWeaponAttackSpeedCategory : int32
{
	Default                        = 0,
	OneHandSword                   = 1,
	TwoHandSword                   = 2,
	Blunt                          = 3,
	Axe                            = 4,
	Dagger                         = 5,
	Throwing                       = 6,
	Extra1                         = 7,
	Extra2                         = 8,
	Extra3                         = 9,
	Extra4                         = 10,
	Extra5                         = 11,
	Extra6                         = 12,
	Extra7                         = 13,
	Extra8                         = 14,
	EMeleeWeaponAttackSpeedCategory_MAX = 15,
};

enum class EInitialPlayerStatus : uint8
{
	NotSelected                    = 0,
	Selected                       = 1,
	EInitialPlayerStatus_MAX       = 2,
};

enum class EMicropatchApplicationType : uint8
{
	AlwaysLoaded                   = 0,
	World                          = 1,
	Character                      = 2,
	EMicropatchApplicationType_MAX = 3,
};

enum class EOakAbilityTimerResult : uint8
{
	Pulsed                         = 0,
	Finished                       = 1,
	Stopped                        = 2,
	Replaced                       = 3,
	EOakAbilityTimerResult_MAX     = 4,
};

enum class EOakAbilityTimerTickPolicy : uint8
{
	AlwaysTick                     = 0,
	OnlyWhenActive                 = 1,
	EOakAbilityTimerTickPolicy_MAX = 2,
};

enum class EOakAbilityTimerReplacePolicy : uint8
{
	KeepExisting                   = 0,
	ReplaceExisting                = 1,
	EOakAbilityTimerReplacePolicy_MAX = 2,
};

enum class ESkillWidgetSlot : uint8
{
	None                           = 0,
	ActionSkillWidget              = 1,
	GrenadeActionSkillWidget       = 2,
	ESkillWidgetSlot_MAX           = 3,
};

enum class EOakAchievements : uint8
{
	Invalid                        = 0,
	ReachLevel10                   = 1,
	ReachLevel20                   = 2,
	ReachLevel30                   = 3,
	ReachLevel40                   = 4,
	CompletePlot00                 = 5,
	CompletePlot01                 = 6,
	CompletePlot02                 = 7,
	CompletePlot04                 = 8,
	CompletePlot05                 = 9,
	CompletePlot06                 = 10,
	CompletePlot07                 = 11,
	CompletePlot08                 = 12,
	CompletePlot09                 = 13,
	CompletePlot10                 = 14,
	CompleteGTFO                   = 15,
	CompleteSkybound               = 16,
	CompleteTrialOfPhil            = 17,
	CompleteDoomed                 = 18,
	CompleteSomeSideMissions       = 19,
	CompleteAllSideMissions        = 20,
	RevivePartner                  = 21,
	SecondWindFromBadassOrBoss     = 22,
	FindEnchantedLegendary         = 23,
	OneHundredThousandGold         = 24,
	OneMillionGold                 = 25,
	SDUFinalTier                   = 26,
	SDUAll                         = 27,
	Trade                          = 28,
	Cosmetic                       = 29,
	HaveSomeLuck                   = 30,
	LoreScroll                     = 31,
	ReRollEnchantment              = 32,
	OverworldDungeonDoor           = 33,
	OverworldStunEnemy             = 34,
	OverworldEncampments           = 35,
	EndlessDungeonRun              = 36,
	ChaosLevel10                   = 37,
	ChaosLevel20                   = 38,
	CompleteAllAchievements        = 39,
	KillChums                      = 40,
	KillChumsFinal                 = 41,
	KillPettyRocker                = 42,
	KillPettyRockerFinal           = 43,
	KillSmith                      = 44,
	KillSmithFinal                 = 45,
	KillWyvern                     = 46,
	KillWyvernFinal                = 47,
	EOakAchievements_MAX           = 48,
};

enum class EOakAnimActionAbilityEndAction : uint8
{
	None                           = 0,
	Stop                           = 1,
	Abort                          = 2,
	AbortReset                     = 3,
	EOakAnimActionAbilityEndAction_MAX = 4,
};

enum class EHostileAttachState : uint8
{
	Loop                           = 0,
	Attack                         = 1,
	GripFeedback                   = 2,
	GetDown                        = 3,
	Ejected                        = 4,
	Completed                      = 5,
	EHostileAttachState_MAX        = 6,
};

enum class ELeapOnVehicle_SeatType : uint8
{
	SpecifiedSlot                  = 0,
	Driver                         = 1,
	Gunner                         = 2,
	Passenger                      = 3,
	Hostile                        = 4,
	ELeapOnVehicle_MAX             = 5,
};

enum class EOakActionAbilitySecondaryUseActionType : uint8
{
	None                           = 0,
	Primary                        = 1,
	Secondary                      = 2,
	EOakActionAbilitySecondaryUseActionType_MAX = 3,
};

enum class EOakActionAbilityStopAction : uint8
{
	Normal                         = 0,
	Expidited                      = 1,
	Abort                          = 2,
	EOakActionAbilityStopAction_MAX = 3,
};

enum class EOakActionAbilityPetModType : uint8
{
	None                           = 0,
	Mod1                           = 1,
	Mod2                           = 2,
	Mod3                           = 3,
	Mod4                           = 4,
	Mod5                           = 5,
	EOakActionAbilityPetModType_MAX = 6,
};

enum class EOakActionAbilityPetEvolutionType : uint8
{
	None                           = 0,
	Evolution1                     = 1,
	Evolution2                     = 2,
	EOakActionAbilityPetEvolutionType_MAX = 3,
};

enum class EOakActionAbilityPetType : uint8
{
	None                           = 0,
	Spiderant                      = 1,
	Jabbermon                      = 2,
	Skag                           = 3,
	EOakActionAbilityPetType_MAX   = 4,
};

enum class EOakAISwarmRotation : uint8
{
	None                           = 0,
	Strafe                         = 1,
	Forward                        = 2,
	EOakAISwarmRotation_MAX        = 3,
};

enum class EOakAssetChunkRuleType : uint8
{
	Reserved                       = 0,
	Class                          = 1,
	Path                           = 2,
	Map                            = 3,
	MapPath                        = 4,
	EOakAssetChunkRuleType_MAX     = 5,
};

enum class EPopulatePackageNameChunkMapPhase : uint8
{
	Launch                         = 0,
	LaunchMaps                     = 1,
	InitialPlayable                = 2,
	Full                           = 3,
	Test                           = 4,
	EPopulatePackageNameChunkMapPhase_MAX = 5,
};

enum class EChallengRewardFormattingType : uint8
{
	Cash                           = 0,
	Eridium                        = 1,
	Other                          = 2,
	EChallengRewardFormattingType_MAX = 3,
};

enum class ECameraAttachState : uint8
{
	CAS_Dettached                  = 0,
	CAS_Attached                   = 1,
	CAS_MAX                        = 2,
};

enum class EVehicleArchetype : uint8
{
	Null                           = 0,
	Technical                      = 1,
	Outrunner                      = 2,
	Revolver                       = 3,
	Emperor                        = 4,
	EVehicleArchetype_MAX          = 5,
};

enum class ECinematicState : uint8
{
	Inactive                       = 0,
	PlayingIntro                   = 1,
	PlayingSequence                = 2,
	PlayingCredits                 = 3,
	ECinematicState_MAX            = 4,
};

enum class EOakMayhemModeConditionType : uint8
{
	IsMayhemModeActive             = 0,
	CompareMayhemLevel             = 1,
	EOakMayhemModeConditionType_MAX = 2,
};

enum class EHealthTypeState : uint8
{
	Normal                         = 0,
	Low                            = 1,
	VeryLow                        = 2,
	Depleted                       = 3,
	EHealthTypeState_MAX           = 4,
};

enum class EDamageInstigatorClassification : uint8
{
	Other                          = 0,
	PlayerVersusPlayer             = 1,
	PlayerVersusAI                 = 2,
	AIVersusPlayer                 = 3,
	EDamageInstigatorClassification_MAX = 4,
};

enum class EOakElementalDeathEffects : uint8
{
	Default                        = 0,
	Custom                         = 1,
	Disabled                       = 2,
	EOakElementalDeathEffects_MAX  = 3,
};

enum class EUIDialogCallout : uint8
{
	EquipAskillFailed              = 0,
	EquipItemFailed                = 1,
	RemoveItemFailed               = 2,
	InsufficientFunds              = 3,
	OutOfSpells                    = 4,
	SpellRecharged                 = 5,
	IdleInventory                  = 6,
	IdleMap                        = 7,
	IdleSkills                     = 8,
	TradeComplete                  = 9,
	EUIDialogCallout_MAX           = 10,
};

enum class EOakDroneFacingMode : uint8
{
	None                           = 0,
	FaceMoveDir                    = 1,
	FaceTarget                     = 2,
	FaceMovementTarget             = 3,
	EOakDroneFacingMode_MAX        = 4,
};

enum class EOakDroneMovementMode : uint8
{
	Projectile                     = 0,
	FlyToTarget                    = 1,
	HoverAtTarget                  = 2,
	HoverAtOwner                   = 3,
	EOakDroneMovementMode_MAX      = 4,
};

enum class EOakElementalStackBucketType : uint8
{
	Unknown                        = 0,
	Character                      = 1,
	Weapon                         = 2,
	Grenade                        = 3,
	InteractiveObject              = 4,
	ElementalInteraction           = 5,
	EOakElementalStackBucketType_MAX = 6,
};

enum class EInviteType : uint8
{
	Public                         = 0,
	InviteOnly                     = 1,
	FriendsOnly                    = 2,
	EInviteType_MAX                = 3,
};

enum class EFriendSyncState : uint8
{
	Disabled                       = 0,
	Enabled                        = 1,
	EFriendSyncState_MAX           = 2,
};

enum class ECrossplayState : uint8
{
	Disabled                       = 0,
	Enabled                        = 1,
	ECrossplayState_MAX            = 2,
};

enum class ENetworkType : uint8
{
	Offline                        = 0,
	Lan                            = 1,
	Online                         = 2,
	ENetworkType_MAX               = 3,
};

enum class EPlayerInputLockType : uint8
{
	None                           = 0,
	All                            = 1,
	Movement                       = 2,
	Looking                        = 3,
	Jumping                        = 4,
	Weapon                         = 5,
	EPlayerInputLockType_MAX       = 6,
};

enum class EActivityCompletionFriendEventType : uint8
{
	RaidCompletion                 = 0,
	CircleOfSlaughterCompletion    = 1,
	ProvingGroundsCompletion       = 2,
	EActivityCompletionFriendEventType_MAX = 3,
};

enum class EBenchmarkDataOutputMode : uint8
{
	None                           = 0,
	Summary                        = 1,
	DetailedCSV                    = 2,
	EBenchmarkDataOutputMode_MAX   = 3,
};

enum class EAMD_FSR2_Preset : uint8
{
	Off                            = 0,
	Quality                        = 1,
	Balanced                       = 2,
	Performance                    = 3,
	EAMD_FSR2_MAX                  = 4,
};

enum class EAmbientOcclusionQuality : uint8
{
	Off                            = 0,
	Low                            = 1,
	Medium                         = 2,
	High                           = 3,
	Ultra                          = 4,
	EAmbientOcclusionQuality_MAX   = 5,
};

enum class ECharacterDetail : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	ECharacterDetail_MAX           = 4,
};

enum class ECharacterTextureDetail : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	Deprecated                     = 4,
	ECharacterTextureDetail_MAX    = 5,
};

enum class EScreenSpaceReflections : uint8
{
	Off                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	EScreenSpaceReflections_MAX    = 4,
};

enum class EVolumetricFogType : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	EVolumetricFogType_MAX         = 4,
};

enum class EFoliageDensity : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	EFoliageDensity_MAX            = 4,
};

enum class ETerrainType : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	ETerrainType_MAX               = 4,
};

enum class EEnvironmentDetail : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	EEnvironmentDetail_MAX         = 4,
};

enum class EDrawDistance : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	EDrawDistance_MAX              = 4,
};

enum class EEnvironmentTextureDetail : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	Deprecated                     = 4,
	EEnvironmentTextureDetail_MAX  = 5,
};

enum class EShadowQuality : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	EShadowQuality_MAX             = 4,
};

enum class EAnisotropicFilteringType : uint8
{
	Trilinear                      = 0,
	TwoX                           = 1,
	FourX                          = 2,
	EightX                         = 3,
	SixteenX                       = 4,
	EAnisotropicFilteringType_MAX  = 5,
};

enum class EMaterialQuality : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	EMaterialQuality_MAX           = 4,
};

enum class ETextureStreamingQuality : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Ultra                          = 3,
	ETextureStreamingQuality_MAX   = 4,
};

enum class EGraphicsQuality : uint8
{
	VeryLow                        = 0,
	Low                            = 1,
	Medium                         = 2,
	High                           = 3,
	Ultra                          = 4,
	Badass                         = 5,
	Undefined                      = 6,
	EGraphicsQuality_MAX           = 7,
};

enum class EFrameRateLimit : uint8
{
	Smooth22_62FPS                 = 0,
	Capped30FPS                    = 1,
	Capped60FPS                    = 2,
	Capped120FPS                   = 3,
	Unlimited                      = 4,
	Custom                         = 5,
	EFrameRateLimit_MAX            = 6,
};

enum class EResolutionScale : uint8
{
	Scale_50                       = 0,
	Scale_75                       = 1,
	Scale_100                      = 2,
	Scale_125                      = 3,
	Scale_150                      = 4,
	Scale_175                      = 5,
	Scale_200                      = 6,
	Scale_MAX                      = 7,
};

enum class ESupportedAspectRatios : uint8
{
	AspectRatio_16_9               = 0,
	AspectRatio_16_10              = 1,
	AspectRatio_32_9               = 2,
	AspectRatio_21_9               = 3,
	AspectRatio_Unsupported        = 4,
	AspectRatio_MAX                = 5,
};

enum class ETrackedIconOwner : uint8
{
	Unknown                        = 0,
	Released                       = 1,
	Minimap_Clamped                = 2,
	Minimap_Interior3D             = 3,
	InWorldContainer               = 4,
	ETrackedIconOwner_MAX          = 5,
};

enum class EHUDType : uint8
{
	NoHUD                          = 0,
	StandardPlayerHUD              = 1,
	VehicleHUD                     = 2,
	EHUDType_MAX                   = 3,
};

enum class EPickupFlyToSettingsType : uint8
{
	Dropped                        = 0,
	Container                      = 1,
	AutoLootContainer              = 2,
	EPickupFlyToSettingsType_MAX   = 3,
};

enum class EOakInventoryItemFlags : uint8
{
	HasBeenSeenInInventoryMenu     = 0,
	MarkedAsFavorite               = 1,
	MarkedAsJunk                   = 2,
	EOakInventoryItemFlags_MAX     = 3,
};

enum class EOakInventoryMenuPaperDollSlotAdjacency : int32
{
	Mid                            = 0,
	Left                           = 1,
	Right                          = 2,
	EOakInventoryMenuPaperDollSlotAdjacency_MAX = 3,
};

enum class EOakInventoryMenuAmmoState : uint8
{
	Default                        = 0,
	Highlighted                    = 1,
	HighlightedEmpty               = 2,
	Low                            = 3,
	Empty                          = 4,
	Full                           = 5,
	EOakInventoryMenuAmmoState_MAX = 6,
};

enum class EOakInventoryMenuWhatChanged : uint8
{
	Initial                        = 0,
	RefreshAll                     = 1,
	SortChanged                    = 2,
	AddedItem                      = 3,
	RemovedItem                    = 4,
	UnequippedItem                 = 5,
	EquippedItem                   = 6,
	EOakInventoryMenuWhatChanged_MAX = 7,
};

enum class EOakInventoryMenuSortMode : uint8
{
	NewestFirst                    = 0,
	Type                           = 1,
	Level                          = 2,
	Manufacturer                   = 3,
	Rarity                         = 4,
	EOakInventoryMenuSortMode_MAX  = 5,
};

enum class EOakInventoryItemWidgetSelectType : uint8
{
	Normal                         = 0,
	HideWhenSelected               = 1,
	PopoutSelection                = 2,
	EOakInventoryItemWidgetSelectType_MAX = 3,
};

enum class EOakInventoryItemWidgetDisabledReason : uint8
{
	NotDisabled                    = 0,
	SlotLocked                     = 1,
	BrowsingAnotherPanel           = 2,
	CantEquipInSlot                = 3,
	EOakInventoryItemWidgetDisabledReason_MAX = 4,
};

enum class EOakStatusMenuInventoryEvent : uint8
{
	PaperDollItemHighlighted       = 0,
	BackpackItemHighlighted        = 1,
	BackpackHighlighted            = 2,
	PaperDollHighlighted           = 3,
	EOakStatusMenuInventoryEvent_MAX = 4,
};

enum class EOakInventoryRarityBalanceTableType : uint8
{
	Weapon                         = 0,
	EOakInventoryRarityBalanceTableType_MAX = 1,
};

enum class EMailItemType : uint8
{
	None                           = 0,
	GearboxMail                    = 1,
	PlayerMail                     = 2,
	StreamerMail                   = 3,
	NPCMail                        = 4,
	DownloadableEntitlement        = 5,
	EMailItemType_MAX              = 6,
};

enum class EReapOrder : uint8
{
	OldestFirst                    = 0,
	NewestFirst                    = 1,
	Random                         = 2,
	EReapOrder_MAX                 = 3,
};

enum class EOakManufacturerBalanceTableType : uint8
{
	Weapon                         = 0,
	EOakManufacturerBalanceTableType_MAX = 1,
};

enum class EOakMinimapIconComponentType : uint8
{
	Manual                         = 0,
	TargetingComponentDriven       = 1,
	WhileAlive                     = 2,
	EOakMinimapIconComponentType_MAX = 3,
};

enum class EOakMissionType : uint8
{
	Default                        = 0,
	Plot                           = 1,
	Side                           = 2,
	ProvingGrounds                 = 3,
	CircleOfSlaughter              = 4,
	Raid                           = 5,
	RareSpawn                      = 6,
	Count                          = 7,
	EOakMissionType_MAX            = 8,
};

enum class EOakMusicLayer : uint8
{
	Aux                            = 0,
	Bass                           = 1,
	Chord                          = 2,
	Melody                         = 3,
	Perc_Kick                      = 4,
	Perc_Large                     = 5,
	Perc_Small                     = 6,
	MAX                            = 7,
};

enum class EOakMusicPart : uint8
{
	Part_None                      = 0,
	Part_0                         = 1,
	Part_1                         = 2,
	Part_2                         = 3,
	Part_3                         = 4,
	Part_4                         = 5,
	Part_5                         = 6,
	Part_6                         = 7,
	Part_7                         = 8,
	Part_8                         = 9,
	Part_9                         = 10,
	Part_10                        = 11,
	Part_11                        = 12,
	Part_12                        = 13,
	Part_13                        = 14,
	Part_14                        = 15,
	Part_15                        = 16,
	Part_16                        = 17,
	Part_17                        = 18,
	Part_18                        = 19,
	Part_19                        = 20,
	Part_SparseAmbiance            = 21,
	Part_MAX                       = 22,
};

enum class EOakMusicSection : uint8
{
	Section_None                   = 0,
	Section_0                      = 1,
	Section_1                      = 2,
	Section_2                      = 3,
	Section_3                      = 4,
	Section_4                      = 5,
	Section_5                      = 6,
	Section_6                      = 7,
	Section_7                      = 8,
	Section_8                      = 9,
	Section_9                      = 10,
	Section_MAX                    = 11,
};

enum class EDrivingOverridePriority : uint8
{
	AINode                         = 0,
	Aspect                         = 1,
	Scripted                       = 2,
	Count                          = 3,
	Invalid                        = 4,
	EDrivingOverridePriority_MAX   = 5,
};

enum class ESpeedModifierOverridePriority : uint8
{
	AINode                         = 0,
	Aspect                         = 1,
	Scripted                       = 2,
	Escort                         = 3,
	UserEdge                       = 4,
	Count                          = 5,
	Invalid                        = 6,
	ESpeedModifierOverridePriority_MAX = 7,
};

enum class EOakOnlineLobbyTalkingState : uint8
{
	NotTalking                     = 0,
	Talking                        = 1,
	Muted                          = 2,
	EOakOnlineLobbyTalkingState_MAX = 3,
};

enum class EOakOnlineLobbyPlayerPlateState : uint8
{
	Offline                        = 0,
	WaitingForPlayers              = 1,
	Invite                         = 2,
	SplitPlayerToJoin              = 3,
	PlayerListed                   = 4,
	EOakOnlineLobbyPlayerPlateState_MAX = 5,
};

enum class EOakOnlineLobbyConnectivityState : uint8
{
	Unknown                        = 0,
	Low                            = 1,
	Medium                         = 2,
	High                           = 3,
	None                           = 4,
	EOakOnlineLobbyConnectivityState_MAX = 5,
};

enum class EOakPassiveAbilityHUDIconActivationType : uint8
{
	TriggeredEffect                = 0,
	StatusEffect                   = 1,
	AbilityTimer                   = 2,
	Manual                         = 3,
	ActiveState                    = 4,
	EOakPassiveAbilityHUDIconActivationType_MAX = 5,
};

enum class EAdditionalTriggeredEffectTargets : uint8
{
	None                           = 0,
	MyCompanions                   = 1,
	DemiLichPetOnly                = 2,
	DragonPetOnly                  = 3,
	MushroomPetOnly                = 4,
	MyAllies                       = 5,
	EAdditionalTriggeredEffectTargets_MAX = 6,
};

enum class EPlayerAbilityFeature : uint8
{
	ClassFeature                   = 0,
	InitialSecondaryClass          = 1,
	SecondaryClassSwapping         = 2,
	EPlayerAbilityFeature_MAX      = 3,
};

enum class EAbilityBranchStatus : uint8
{
	BranchLocked                   = 0,
	BranchUnlocked                 = 1,
	BranchPurchasable              = 2,
	PrimaryBranch                  = 3,
	EAbilityBranchStatus_MAX       = 4,
};

enum class ESkillItemRealType : uint8
{
	None                           = 0,
	PlayerAbility                  = 1,
	Augment                        = 2,
	AugmentSlot                    = 3,
	CharacterAugment               = 4,
	ESkillItemRealType_MAX         = 5,
};

enum class ESkillItemDisplayType : uint8
{
	None                           = 0,
	ActionSkill                    = 1,
	ModPrimary                     = 2,
	ModSecondary                   = 3,
	Passive                        = 4,
	ClassAbility                   = 5,
	ESkillItemDisplayType_MAX      = 6,
};

enum class ESkillItemLayoutInfo : uint8
{
	Left                           = 0,
	Center                         = 1,
	Right                          = 2,
	LeftWing                       = 3,
	RightWing                      = 4,
	ESkillItemLayoutInfo_MAX       = 5,
};

enum class EScreenCalibrationMode : uint8
{
	Off                            = 0,
	HDRBrightness                  = 1,
	StandardBrightnessAndBlackLevel = 2,
	EScreenCalibrationMode_MAX     = 3,
};

enum class EJoystickScheme : int32
{
	Classic                        = 0,
	SouthPaw                       = 1,
	OldSchool                      = 2,
	OldSchool_Southpaw             = 3,
	Count                          = 4,
	EJoystickScheme_MAX            = 5,
};

enum class EDrivingButtonScheme : int32
{
	Classic                        = 0,
	CameraRelative                 = 1,
	VehicleRelative                = 2,
	VehicleRelativeStick           = 3,
	Count                          = 4,
	EDrivingButtonScheme_MAX       = 5,
};

enum class EWalkingButtonScheme : int32
{
	Default                        = 0,
	Classic                        = 1,
	Custom                         = 2,
	Count                          = 3,
	EWalkingButtonScheme_MAX       = 4,
};

enum class EGameJoinNotificationState : uint8
{
	EGJNS_None                     = 0,
	EGJNS_PlayerStateReplicated    = 1,
	EGJNS_SyncLevelReplicated      = 2,
	EGJNS_PlayerNotified           = 3,
	EGJNS_MAX                      = 4,
};

enum class EPresentableStatusEffectValueStrategy : int32
{
	PercentOfMaxHealth             = 0,
	InstanceCount                  = 1,
	EPresentableStatusEffectValueStrategy_MAX = 2,
};

enum class ERadiateMovementType : uint8
{
	FollowInitialDirection         = 0,
	SimpleMoveOnGround             = 1,
	ERadiateMovementType_MAX       = 2,
};

enum class ERadiateMethod : uint8
{
	Velocity                       = 0,
	MinMaxDistance                 = 1,
	ERadiateMethod_MAX             = 2,
};

enum class EClassRepNodeMapping : uint8
{
	NotRouted                      = 0,
	RelevantForConnections         = 1,
	Spatialize_Static              = 2,
	Spatialize_Dynamic             = 3,
	Spatialize_Dormancy            = 4,
	EClassRepNodeMapping_MAX       = 5,
};

enum class EEventTriggerType : uint8
{
	StreamingEvent_DirectorTriggered = 0,
	StreamingEvent_WorldTriggered  = 1,
	StreamingEvent_ViewerTriggered = 2,
	StreamingEvent_MAX             = 3,
};

enum class EStreamingInteractionEventState : uint8
{
	StreamingEvent_Disabled        = 0,
	StreamingEvent_Preliminary     = 1,
	StreamingEvent_Standby         = 2,
	StreamingEvent_Active          = 3,
	StreamingEvent_MAX             = 4,
};

enum class ECharacterProfileUpdateStep : uint8
{
	Step_MainCharacterInfo         = 0,
	Step_Inventory                 = 1,
	Step_MAX                       = 2,
};

enum class EStreamingManagerState : uint8
{
	StreamingManager_Off           = 0,
	StreamingManager_Initialized   = 1,
	StreamingManager_Active        = 2,
	StreamingManager_Paused        = 3,
	StreamingManager_MAX           = 4,
};

enum class EEndEventReasons : int32
{
	Unknown                        = 0,
	Success                        = 1,
	NoParticipants                 = 2,
	Timeout                        = 3,
	Error                          = 4,
	Win                            = 5,
	Draw                           = 6,
	Lose                           = 7,
	MapExited                      = 8,
	EEndEventReasons_MAX           = 9,
};

enum class EOakTriggerComponentEventType : uint8
{
	Touch                          = 0,
	UnTouch                        = 1,
	EOakTriggerComponentEventType_MAX = 2,
};

enum class EOakUIBigMapListViewItemType : uint8
{
	Normal                         = 0,
	Header                         = 1,
	Spacer                         = 2,
	EOakUIBigMapListViewItemType_MAX = 3,
};

enum class EOakUIChallengeDataProviderPopulateType : int32
{
	UNKNOWN                        = 0,
	Galaxy                         = 1,
	World                          = 2,
	Planet                         = 3,
	Level                          = 4,
	EOakUIChallengeDataProviderPopulateType_MAX = 5,
};

enum class EOakUICharacterCustomizationManagerState : uint8
{
	None                           = 0,
	NewCharacter                   = 1,
	NewCharacterLateJoin           = 2,
	QuickChange                    = 3,
	EOakUICharacterCustomizationManagerState_MAX = 4,
};

enum class EOakUIKeys_EquippedWeaponAmmo : uint8
{
	IsEquipped                     = 0,
	IsEquipping                    = 1,
	IsShooting                     = 2,
	SpareCount                     = 3,
	MaxSpareCount                  = 4,
	LoadedCount                    = 5,
	MaxLoadedCount                 = 6,
	ReloadThreshold                = 7,
	HeatPercent                    = 8,
	IsOverheating                  = 9,
	IsOverheated                   = 10,
	AmmoState                      = 11,
	AmmoMaxState                   = 12,
	AmmoMode                       = 13,
	DamageType                     = 14,
	ModeSwitchText                 = 15,
	EOakUIKeys_MAX                 = 16,
};

enum class EAmmoBarMode : uint8
{
	None                           = 0,
	NoMode                         = 1,
	ModeSwitch                     = 2,
	COV                            = 3,
	COVModeSwitch                  = 4,
	EridianFabricator              = 5,
	MAX                            = 6,
};

enum class EOakUIKeys_Cc : uint8
{
	HeroPointsAvailable            = 0,
	Summary                        = 1,
	HighlightedAspect              = 2,
	HighlightedHeroAttribute       = 3,
	ViewedCustomizationList        = 4,
	ViewedCustomizationData        = 5,
	CustomizationListStack         = 6,
	EmoteState                     = 7,
	LutPickerData                  = 8,
	CurrentLuts                    = 9,
	EOakUIKeys_MAX                 = 10,
};

enum class EOakUIKeys_Challenges : uint8
{
	ChallengeCategoryHeaderText    = 0,
	ViewedChallenges               = 1,
	EOakUIKeys_MAX                 = 2,
};

enum class EOakUIKeys_CreditsMenu : uint8
{
	MenuStateData                  = 0,
	EOakUIKeys_MAX                 = 1,
};

enum class EOakUIKeys_CharacterCrosshairInfo : uint8
{
	HasWeapon                      = 0,
	IsSprinting                    = 1,
	HasTarget                      = 2,
	Team                           = 3,
	CanUseActiveWeapons            = 4,
	IsAttachedToTurret             = 5,
	IsCastingSpell                 = 6,
	EOakUIKeys_MAX                 = 7,
};

enum class EOakUIKeys_Crosshair : uint8
{
	WeaponVisible                  = 0,
	ChangingWeapons                = 1,
	AccuracyPercentage             = 2,
	AccuracySpread                 = 3,
	CurrentAccuracy                = 4,
	MinAccuracy                    = 5,
	MaxAccuracy                    = 6,
	ChargePercent                  = 7,
	DynamicCrosshairIdent          = 8,
	EOakUIKeys_MAX                 = 9,
};

enum class EOakUIKeys_CrossplayFirstBoot : uint8
{
	MenuState                      = 0,
	Buttons                        = 1,
	CrossplayName                  = 2,
	UserControllerId               = 3,
	EOakUIKeys_MAX                 = 4,
};

enum class EOakUICrossplayFirstBootViewState : int32
{
	None                           = 0,
	Welcome                        = 1,
	EnableCrossplay                = 2,
	CrossplayName                  = 3,
	Communicating                  = 4,
	ErrorCantEnableCrossplay       = 5,
	EOakUICrossplayFirstBootViewState_MAX = 6,
};

enum class EOakUIKeys_Currency : uint8
{
	Cash                           = 0,
	Eridium                        = 1,
	GoldenKey                      = 2,
	VaultCoin                      = 3,
	SoulCan                        = 4,
	DisplaySouls                   = 5,
	MAX                            = 6,
};

enum class EOakUIKeys_EnchantmentReRoller : uint8
{
	ReRoller                       = 0,
	NewEnchantment                 = 1,
	EOakUIKeys_MAX                 = 2,
};

enum class EOakUIGenericOptionWidgetType : uint8
{
	None                           = 0,
	Header                         = 1,
	Toggle                         = 2,
	Slider                         = 3,
	Button                         = 4,
	CheckboxButton                 = 5,
	LookUpToggle                   = 6,
	HeroPointToggle                = 7,
	EOakUIGenericOptionWidgetType_MAX = 8,
};

enum class EOakUIKeys_GraphicsCalibration : uint8
{
	StateData                      = 0,
	OptionsList                    = 1,
	EOakUIKeys_MAX                 = 2,
};

enum class EOakUIKeys_HintBar : uint8
{
	CanShowEntries                 = 0,
	CanShowHelper                  = 1,
	InputSchema                    = 2,
	InputActions                   = 3,
	ActionDisplayIdents            = 4,
	ActionDisplayStrings           = 5,
	EOakUIKeys_MAX                 = 6,
};

enum class EOakHUDIndicatorType : uint8
{
	Save                           = 0,
	Checkpoint                     = 1,
	Error                          = 2,
	ConnectionLost                 = 3,
	Mail                           = 4,
	OutOfBounds                    = 5,
	EOakHUDIndicatorType_MAX       = 6,
};

enum class EOakUIKeys_LegalScreen : uint8
{
	Description                    = 0,
	ImageList                      = 1,
	EOakUIKeys_MAX                 = 2,
};

enum class EOakUIKeys_LoadCharacter : uint8
{
	SavedList                      = 0,
	GameDetails                    = 1,
	CreateBtn                      = 2,
	MAX                            = 3,
};

enum class EOakUIKeys_LobbyWidget : uint8
{
	Party                          = 0,
	Recommended                    = 1,
	ModeSettings                   = 2,
	MatchmakingPending             = 3,
	MAX                            = 4,
};

enum class EOakUIKeys_MapView : uint8
{
	ViewState                      = 0,
	ViewHeader                     = 1,
	ViewProgressHeader             = 2,
	ViewProgress                   = 3,
	RightPaneData                  = 4,
	PointsOfInterest               = 5,
	SummaryData                    = 6,
	EOakUIKeys_MAX                 = 7,
};

enum class EOakUIKeys_MatchMaking : uint8
{
	Hint                           = 0,
	Panel                          = 1,
	MAX                            = 2,
};

enum class EOakUIMissionLogMissionItemType : uint8
{
	Mission                        = 0,
	ShrineChallenge                = 1,
	CrewChallenge                  = 2,
	EchoLog                        = 3,
	Header                         = 4,
	EOakUIMissionLogMissionItemType_MAX = 5,
};

enum class EOakUIMissionLogFilterType : uint8
{
	MissionLogMissionType          = 0,
	MissionLogByRegion             = 1,
	MissionLogByExpansion          = 2,
	EOakUIMissionLogFilterType_MAX = 3,
};

enum class EOakUIMissionLogNavType : uint8
{
	None                           = 0,
	Missions                       = 1,
	EchoLog                        = 2,
	EOakUIMissionLogNavType_MAX    = 3,
};

enum class EOakUIMissionLogMissionIconType : uint8
{
	New                            = 0,
	Normal                         = 1,
	Plot                           = 2,
	Side                           = 3,
	Contract                       = 4,
	EchoLog                        = 5,
	Complete                       = 6,
	Ignored                        = 7,
	Failed                         = 8,
	Blocked                        = 9,
	HardMission                    = 10,
	Track                          = 11,
	EOakUIMissionLogMissionIconType_MAX = 12,
};

enum class EOakUIMissionTracker_EventType : uint8
{
	None                           = 0,
	ShowWidget                     = 1,
	HideWidget                     = 2,
	UpdateTracker                  = 3,
	ClearTrackerData               = 4,
	ClearTrackerObjectiveInfo      = 5,
	SetMissionTitle                = 6,
	ShowMissionComplete            = 7,
	ShowMissionTitle               = 8,
	HideMissionTitle               = 9,
	SetMissionPlot                 = 10,
	SetMissionFailedVisibility     = 11,
	SetHasMultipleActiveMissions   = 12,
	QueueSlideOutForAllObjectivesNotPartOfSet = 13,
	ClearSlideOutLock              = 14,
	PlayQueuedAnimations           = 15,
	ObjectiveSlot                  = 16,
	EOakUIMissionTracker_MAX       = 17,
};

enum class EOakUIMissionTracker_AnimationType : uint8
{
	None                           = 0,
	Active                         = 1,
	SlideIn                        = 2,
	SlideInChecked                 = 3,
	SlideOut                       = 4,
	SlideInFromAbove               = 5,
	SlideInFromAboveChecked        = 6,
	SlideInFromBelow               = 7,
	SlideInFromBelowChecked        = 8,
	Checked                        = 9,
	CheckedFailed                  = 10,
	Failed                         = 11,
	SlideOutFailed                 = 12,
	EOakUIMissionTracker_MAX       = 13,
};

enum class EOakUINotificationTypes : uint8
{
	MissionDiscovered              = 0,
	MissionStarted                 = 1,
	MissionComplete                = 2,
	CrewChallengeComplete          = 3,
	LevelUp                        = 4,
	SecondWind                     = 5,
	MayhemActived                  = 6,
	MayhemDeactivated              = 7,
	MayhemLevelUp                  = 8,
	NewParts                       = 9,
	AreaDiscovered                 = 10,
	AreaEntered                    = 11,
	BattleEncountered              = 12,
	ShrineActivated                = 13,
	DungeonStart                   = 14,
	EliteRoom                      = 15,
	RoomStart                      = 16,
	RoomCleared                    = 17,
	DungeonComplete                = 18,
	DungeonFailed                  = 19,
	SideObjectiveComplete          = 20,
	SideObjectiveFailed            = 21,
	EOakUINotificationTypes_MAX    = 22,
};

enum class EOakUIKeys_OptionsMenu : uint8
{
	ScreenTitle                    = 0,
	CurrentTabs                    = 1,
	SelectedTab                    = 2,
	CurrentOptionsList             = 3,
	ViewedOptionInfo               = 4,
	ExtraInfo                      = 5,
	ViewedButtonBindsList          = 6,
	EOakUIKeys_MAX                 = 7,
};

enum class EPassiveSkillIconState : uint8
{
	Off                            = 0,
	Active                         = 1,
	Stack                          = 2,
	Cooldown                       = 3,
	MAX                            = 4,
};

enum class EOakUIKeys_PetHealth : uint8
{
	PetHealth                      = 0,
	PetDead                        = 1,
	DownState                      = 2,
	PetRespawn                     = 3,
	PetName                        = 4,
	PetData                        = 5,
	EOakUIKeys_MAX                 = 6,
};

enum class EOakUIKeys_PhotoMode : uint8
{
	CurrentOptionsInfo             = 0,
	IsSoloPlay                     = 1,
	CanShowScreenshots             = 2,
	EOakUIKeys_MAX                 = 3,
};

enum class EOakUIKeys_PlayerId : uint8
{
	PlayerInfo                     = 0,
	CharacterInfo                  = 1,
	PlayerStatus                   = 2,
	PlayerOptions                  = 3,
	Mute                           = 4,
	PlayerCard                     = 5,
	MAX                            = 6,
};

enum class EOakUIKeys_PlayerParty : uint8
{
	PartyData                      = 0,
	PlayerID                       = 1,
	PlayerName                     = 2,
	PlayerPlatform                 = 3,
	PlayerClass                    = 4,
	PlayerLevel                    = 5,
	EOakUIKeys_MAX                 = 6,
};

enum class EOakUIKeys_PlotMission : uint8
{
	MissionName                    = 0,
	ChapterNumber                  = 1,
	EOakUIKeys_MAX                 = 2,
};

enum class EOakUIKeys_RosterKeys : uint8
{
	Grid                           = 0,
	PlayerCard                     = 1,
	FriendCard                     = 2,
	StatusText                     = 3,
	MAX                            = 4,
};

enum class EOakUIKeys_TitleScreen : uint8
{
	HintText                       = 0,
	SplashImagePath                = 1,
	EOakUIKeys_MAX                 = 2,
};

enum class EOakUIKeys_Vitals : uint8
{
	Health                         = 0,
	MaxHealth                      = 1,
	Shield                         = 2,
	MaxShield                      = 3,
	Armor                          = 4,
	MaxArmor                       = 5,
	ShieldEquipped                 = 6,
	DeadState                      = 7,
	EOakUIKeys_MAX                 = 8,
};

enum class EOakUIKeys_VOIP : uint8
{
	PlayerIDs                      = 0,
	EOakUIKeys_MAX                 = 1,
};

enum class EOakUIKeys_WorldIcons : uint8
{
	IconData                       = 0,
	Position                       = 1,
	IconType                       = 2,
	UniqueId                       = 3,
	Payload                        = 4,
	Source                         = 5,
	EOakUIKeys_MAX                 = 6,
};

enum class EOakUIKeys_XP : uint8
{
	Level                          = 0,
	FillPercent                    = 1,
	AmountXPAdded                  = 2,
	PointsToSpend                  = 3,
	IsVisible                      = 4,
	EOakUIKeys_MAX                 = 5,
};

enum class EExperienceLevelType : uint8
{
	Standard                       = 0,
	Prestige                       = 1,
	MAX                            = 2,
};

enum class EOakSocialMenuType : uint8
{
	Roster                         = 0,
	MatchMaking                    = 1,
	Shift                          = 2,
	Mail                           = 3,
	Lan                            = 4,
	None                           = 5,
	EOakSocialMenuType_MAX         = 6,
};

enum class EECHOState : uint8
{
	Inactive                       = 0,
	Activating                     = 1,
	Displayed                      = 2,
	Deactivating                   = 3,
	EECHOState_MAX                 = 4,
};

enum class EReloadDisplayState : uint8
{
	Default                        = 0,
	AmmoLow                        = 1,
	NoSpareAmmo                    = 2,
	NoAmmoAtAll                    = 3,
	EReloadDisplayState_MAX        = 4,
};

enum class EMailboxMenuMailSort : uint8
{
	Date                           = 0,
	Unread                         = 1,
	EMailboxMenuMailSort_MAX       = 2,
};

enum class EOakPlayerOptionType : uint8
{
	Invite                         = 0,
	Join                           = 1,
	SendItem                       = 2,
	Favorite                       = 3,
	Unfavorite                     = 4,
	Mute                           = 5,
	Unmute                         = 6,
	Delete                         = 7,
	KickOut                        = 8,
	Inspect                        = 9,
	ViewProfile                    = 10,
	AddFriend                      = 11,
	RemoveFriend                   = 12,
	NetworkOption_Anyone           = 13,
	NetworkOption_FriendsOnly      = 14,
	NetworkOption_InviteOnly       = 15,
	LootMode_Classic               = 16,
	LootMode_Shared                = 17,
	Shift_AddFriend                = 18,
	Shift_RemoveFriend             = 19,
	Shift_Block                    = 20,
	Shift_Unblock                  = 21,
	Shift_Report                   = 22,
	None                           = 23,
	SwitchLookingForHelp           = 24,
	ChangeLookingForHelpType       = 25,
	DisplayShiftInfoOption         = 26,
	Count                          = 27,
	ActivateCollector              = 28,
	DeactivateCollector            = 29,
	EOakPlayerOptionType_MAX       = 30,
};

enum class EBuddyWidgetType : uint8
{
	HealthShield                   = 0,
	Dying                          = 1,
	Reviving                       = 2,
	SecondWind                     = 3,
	LevelUp                        = 4,
	Speaking                       = 5,
	Death                          = 6,
	NONE                           = 7,
	EBuddyWidgetType_MAX           = 8,
};

enum class EOakUIMissionLogPageType : uint8
{
	Mission                        = 0,
	Buff                           = 1,
	Echo                           = 2,
	MAX                            = 3,
};

enum class EXPPromptActionType : uint8
{
	SkillPoints                    = 0,
	HeroPoints                     = 1,
	PrestigePoints                 = 2,
	EXPPromptActionType_MAX        = 3,
};

enum class EVehicleInputMode : int32
{
	CameraRelative_Classic         = 0,
	CameraRelative_ThirdPerson     = 1,
	VehicleRelative_LeftSide       = 2,
	VehicleRelative_StickOnly      = 3,
	Count                          = 4,
	EVehicleInputMode_MAX          = 5,
};

enum class EVehiclePropertyValueType : uint8
{
	Speed_KPH                      = 0,
	PlanarSpeed_KPH                = 1,
	ForwardSpeed_KPH               = 2,
	Speed_MPH                      = 3,
	PlanarSpeed_MPH                = 4,
	ForwardSpeed_MPH               = 5,
	Mass                           = 6,
	IsPlayerDriven                 = 7,
	IsAIDriven                     = 8,
	EVehiclePropertyValueType_MAX  = 9,
};

enum class EOakWeaponPartType : uint8
{
	Grip                           = 0,
	Foregrip                       = 1,
	Mag                            = 2,
	Mode                           = 3,
	ModeSwitch                     = 4,
	Barrel                         = 5,
	Scope                          = 6,
	Reload                         = 7,
	Melee                          = 8,
	Bolt                           = 9,
	Trigger                        = 10,
	Hammer                         = 11,
	CustomA                        = 12,
	CustomB                        = 13,
	EOakWeaponPartType_MAX         = 14,
};

enum class EVehicleWeapons : uint8
{
	Technical_BarrelLauncher       = 0,
	Technical_StickyBombs          = 1,
	Technical_TireBombs            = 2,
	Outrunner_HeavyMissile         = 3,
	Outrunner_SwarmerMissile       = 4,
	Outrunner_ShotgunMissile       = 5,
	Emperor_Entropy                = 6,
	Emperor_Hellfire               = 7,
	Outrunner_FlameThrower         = 8,
	Outrunner_TeslaCoil            = 9,
	Technical_MachineGun           = 10,
	Technical_FlakCannon           = 11,
	Revolver_SpikeLauncher         = 12,
	Revolver_SawBladeLauncher      = 13,
	Revolver_GrenadeLauncher       = 14,
	Emperor_PulseRifle             = 15,
	Emperor_BouncingLaser          = 16,
	VehicleWeapons_MAX             = 17,
};

enum class EWeaponAudioBodyLoopState : uint8
{
	Active                         = 0,
	Equipping                      = 1,
	Reloading                      = 2,
	Invalid                        = 3,
	EWeaponAudioBodyLoopState_MAX  = 4,
};

enum class EWeaponAudioBodyLoopType : int32
{
	PlayerOnly                     = 0,
	BothPlayersAndNPCs             = 1,
	NPCOnly                        = 2,
	EWeaponAudioBodyLoopType_MAX   = 3,
};

enum class EGlobalNamingAttributionSelection : uint8
{
	Weapon                         = 0,
	MeleeWeapon                    = 1,
	EGlobalNamingAttributionSelection_MAX = 2,
};

enum class EOnlineMessageAnimationEnum : uint8
{
	NONE                           = 0,
	EXIT_ANIMATION                 = 1,
	INTRO_ANIMATION                = 2,
	EOnlineMessageAnimationEnum_MAX = 3,
};

enum class EOptionType : uint8
{
	Option_TODO                    = 0,
	Option_Title                   = 1,
	Option_Keybinding              = 2,
	Gameplay_InvertMapPitchControls = 3,
	Gameplay_InvertMapYawControls  = 4,
	Audio_MasterVolume             = 5,
	Audio_MusicVolume              = 6,
	Audio_SoundEffectVolume        = 7,
	Audio_VoiceVolume              = 8,
	Audio_SoundMode                = 9,
	Audio_PlayerCallouts           = 10,
	Audio_MuteAudioOnFocusLost     = 11,
	Audio_ControllerAudio          = 12,
	Audio_PushToTalk               = 13,
	Audio_VoiceChatVolume          = 14,
	Audio_EnableMicrosoftSpatial_Available = 15,
	Audio_EnableMicrosoftSpatial_Unavailable = 16,
	Audio_AudioLanguage            = 17,
	Gameplay_ResetTutorials        = 18,
	Gameplay_IndividualDifficulty  = 19,
	Gameplay_EnableTrainingMessages = 20,
	Gameplay_MPHOrKPH              = 21,
	Gameplay_CenterCrosshair       = 22,
	Gameplay_FixedMinimapRotation  = 23,
	Gameplay_CensorGore            = 24,
	Gameplay_MinimapLegendaries    = 25,
	Network_NetworkConnection      = 26,
	Network_CrossplayState         = 27,
	Network_FriendSync             = 28,
	Network_MatchmakingRegion      = 29,
	Network_HideTextChat           = 30,
	Network_TradeRequest           = 31,
	Network_PlayerToasts           = 32,
	Network_ToastsDuration         = 33,
	Network_StreamingService       = 34,
	Network_IncreasedSubscribersChance = 35,
	Network_RareChestEventEnabled  = 36,
	Network_BadassEventEnabled     = 37,
	Network_BadassEventCooldown    = 38,
	Network_PinataEventEnabled     = 39,
	Network_MoxxisDrinkEventEnabled = 40,
	Network_MoxxisDrinkEventBitsProductId = 41,
	Network_ExtractionEventEnabled = 42,
	Graphics_WindowMode            = 43,
	Graphics_Resolutions           = 44,
	Graphics_VSync                 = 45,
	Graphics_FieldOfView           = 46,
	Graphics_EnableMotionBlur      = 47,
	Graphics_TargetDisplay         = 48,
	Graphics_GraphicsMode          = 49,
	Graphics_CalibrateSafeArea     = 50,
	Graphics_CalibrateDisplay      = 51,
	Graphics_VehicleFieldOfView    = 52,
	Graphics_FramerateLimiter      = 53,
	Graphics_EnableCAS             = 54,
	Graphics_PreferredAPI          = 55,
	Graphics_AspectRatio           = 56,
	Graphics_RefreshRate           = 57,
	Graphics_FramerateLimitCustom  = 58,
	Graphics_ResolutionScale       = 59,
	Graphics_HUDScaleMultiplier    = 60,
	Graphics_SplitScreenConfig     = 61,
	Graphics_AMD_FSR2              = 62,
	Graphics_AMD_FSR2_Sharpness    = 63,
	AdvancedGraphics_GraphicsQuality = 64,
	AdvancedGraphics_AntialiasingMode = 65,
	AdvancedGraphics_AnisotropicFiltering = 66,
	AdvancedGraphics_DisplayPerformanceStats = 67,
	AdvancedGraphics_TextureDetail = 68,
	AdvancedGraphics_DrawDistance  = 69,
	AdvancedGraphics_Clutter       = 70,
	AdvancedGraphics_Tessellation  = 71,
	AdvancedGraphics_Foliage       = 72,
	AdvancedGraphics_VolumetricFog = 73,
	AdvancedGraphics_ScreenSpaceReflections = 74,
	AdvancedGraphics_CharacterTextureDetail = 75,
	AdvancedGraphics_CharacterDetail = 76,
	AdvancedGraphics_ShadowQuality = 77,
	AdvancedGraphics_AmbientOcclusionQuality = 78,
	AdvancedGraphics_CameraMotionBlur = 79,
	AdvancedGraphics_ObjectMotionBlur = 80,
	AdvancedGraphics_TextureStreaming = 81,
	AdvancedGraphics_MaterialQuality = 82,
	AdvancedGraphics_SystemInfo    = 83,
	Benchmark_Run                  = 84,
	Benchmark_Type                 = 85,
	Benchmark_DataOutput           = 86,
	Benchmark_Results              = 87,
	Benchmark_Uncapped             = 88,
	Benchmark_ResultPhase          = 89,
	Benchmark_ResultMeasurementType = 90,
	Benchmark_ResultDateTime       = 91,
	Benchmark_ResultFPS            = 92,
	Benchmark_ResultFrameTime      = 93,
	Benchmark_ResultLoadTime       = 94,
	Benchmark_ResultDataOutputPath = 95,
	Benchmark_ResultDetails0       = 96,
	Benchmark_ResultDetails1       = 97,
	Benchmark_ResultDetails2       = 98,
	Benchmark_ResultDetails3       = 99,
	Benchmark_ResultDetails4       = 100,
	Controls_MouseInvertLook       = 101,
	Controls_MouseSmoothing        = 102,
	Controls_LookSensitivity       = 103,
	Controls_MouseWeaponZoomSensitivity = 104,
	Controls_MouseVehicleSpensitivity = 105,
	Controls_GamepadInvertVerticalLook = 106,
	Controls_GamepadInvertHorizontalLook = 107,
	Controls_GamepadLookSensitivity = 108,
	Controls_GamepadWeaponZoomSensitivity = 109,
	Controls_GamepadVehicleSensitivity = 110,
	Controls_Vibration             = 111,
	Controls_TriggerFeedback       = 112,
	Controls_GamepadInvertMapVerticalLook = 113,
	Controls_GamepadInvertMapHorizontalLook = 114,
	Controls_MouseAcceleration     = 115,
	Controls_EnableGamepad         = 116,
	Controls_GamepadAimingInputStyle = 117,
	Controls_GlyphMode             = 118,
	Controls_AllowWindowsKey       = 119,
	ControlsAdvanced_InvertForwardMovement = 120,
	ControlsAdvanced_InvertStrafeMovement = 121,
	ControlsAdvanced_LeftDeadZoneCenter = 122,
	ControlsAdvanced_LeftDeadZoneOuter = 123,
	ControlsAdvanced_LeftAxialDeadZone = 124,
	ControlsAdvanced_RightDeadZoneCenter = 125,
	ControlsAdvanced_RightDeadZoneOuter = 126,
	ControlsAdvanced_RightAxialDeadZone = 127,
	Bindings_Move                  = 128,
	Bindings_Look                  = 129,
	Bindings_PCMoveForward         = 130,
	Bindings_PCMoveBackward        = 131,
	Bindings_PCStrafeLeft          = 132,
	Bindings_PCStrafeRight         = 133,
	Bindings_Jump                  = 134,
	Bindings_Crouch                = 135,
	Bindings_Sprint                = 136,
	Bindings_Fire                  = 137,
	Bindings_Reload                = 138,
	Bindings_Melee                 = 139,
	Bindings_ActionSkill           = 140,
	Bindings_GrenadeActionSkill2   = 141,
	Bindings_NextWeapon            = 142,
	Bindings_PrevWeapon            = 143,
	Bindings_NextWeaponCycleModeUseAlt = 144,
	Bindings_SelectWeapon1         = 145,
	Bindings_SelectWeapon2         = 146,
	Bindings_SelectWeapon3         = 147,
	Bindings_SelectWeapon4         = 148,
	Bindings_DropWeapon            = 149,
	Bindings_SecondaryUseQuickMenu = 150,
	Bindings_UseGiveUp             = 151,
	Bindings_UseGiveUpReload       = 152,
	Bindings_WeaponToggle          = 153,
	Bindings_Zoom                  = 154,
	Bindings_Emote1                = 155,
	Bindings_Emote2                = 156,
	Bindings_Emote3                = 157,
	Bindings_Emote4                = 158,
	Bindings_UnrebindableButton    = 159,
	Bindings_Vehicle_SteerForward  = 160,
	Bindings_Vehicle_SteerBackward = 161,
	Bindings_Vehicle_WeaponPrimary = 162,
	Bindings_Vehicle               = 163,
	ControlSchemes_Driving         = 164,
	ControlSchemes_DrivingJoystick = 165,
	ControlSchemes_Walking         = 166,
	ControlSchemes_WalkingJoystick = 167,
	Accessibility_CrosshairFriendlyColor = 168,
	Accessibility_CrosshairNeutralColor = 169,
	Accessibility_CrosshairHostileColor = 170,
	Accessibility_Subtitles        = 171,
	Accessibility_ClosedCaptioning = 172,
	Accessibility_CCTextSize       = 173,
	Accessibility_CCBackgroundOpacity = 174,
	Accessibility_AimAssist        = 175,
	Accessibility_GamepadAimAssist = 176,
	Accessibility_ZoomSnap         = 177,
	Accessibility_GamepadZoomSnap  = 178,
	Accessibility_MouseZoomSnap    = 179,
	Accessibility_WeaponZoom       = 180,
	Accessibility_AutoCenter       = 181,
	Accessibility_HeadBobScale     = 182,
	Accessibility_CameraShakeScale = 183,
	Accessibility_Sprint           = 184,
	Accessibility_Crouch           = 185,
	Accessibility_MantleStyle      = 186,
	Accessibility_MovementRecenters = 187,
	Accessibility_ShowDamageNumberElementalIcons = 188,
	EOptionType_MAX                = 189,
};

enum class EOptionItemType : uint8
{
	Title                          = 0,
	Slider                         = 1,
	Spinner                        = 2,
	BooleanSpinner                 = 3,
	Button                         = 4,
	Controls                       = 5,
	Keybinding_Button              = 6,
	KeyBinding_Axis                = 7,
	TodoItem                       = 8,
	DropDownList                   = 9,
	BenchmarkResults               = 10,
	EOptionItemType_MAX            = 11,
};

enum class EOakUIOptionBindType : int32
{
	None                           = 0,
	PlayerKeyboard                 = 1,
	PlayerControllerKeyboard       = 2,
	PlayerGamepad                  = 3,
	PlayerControllerGamepad        = 4,
	EOakUIOptionBindType_MAX       = 5,
};

enum class EOakUIOptionTabType : uint8
{
	None                           = 0,
	Audio                          = 1,
	Gameplay                       = 2,
	Graphics                       = 3,
	Graphics_Console               = 4,
	Graphics_Advanced              = 5,
	Network                        = 6,
	Controls_Basic                 = 7,
	Controls_Advanced              = 8,
	Controls_Keyboard              = 9,
	Controls_Controller_XBox       = 10,
	Controls_Controller_XBSX       = 11,
	Controls_Controller_Ps4        = 12,
	Controls_Controller_Ps5        = 13,
	Controls_Controller_SwitchPro  = 14,
	Controls_Controller_Stadia     = 15,
	Accessibility                  = 16,
	Graphics_Benchmark             = 17,
	EOakUIOptionTabType_MAX        = 18,
};

enum class EOakUIOptionScreenType : uint8
{
	None                           = 0,
	Audio                          = 1,
	Gameplay                       = 2,
	Graphics                       = 3,
	Network                        = 4,
	Controls                       = 5,
	Accessibility                  = 6,
	EOakUIOptionScreenType_MAX     = 7,
};

enum class EEchoPerformanceMode : uint8
{
	EchoCommunication              = 0,
	EchoLog                        = 1,
	EEchoPerformanceMode_MAX       = 2,
};

enum class EPhotoModeOptionEffect : uint8
{
	None                           = 0,
	FieldOfView                    = 1,
	CameraRoll                     = 2,
	Target                         = 3,
	FocusDistance                  = 4,
	FocusRegion                    = 5,
	DOFIntensity                   = 6,
	Contrast                       = 7,
	Saturation                     = 8,
	Gamma                          = 9,
	Gain                           = 10,
	TimeOfDay                      = 11,
	HideCharacters                 = 12,
	FilmGrain                      = 13,
	Filter                         = 14,
	FilterIntensity                = 15,
	VignetteIntensity              = 16,
	VignetteFeathering             = 17,
	HideDamageNumbers              = 18,
	OverrideDOF                    = 19,
	Border                         = 20,
	Tag                            = 21,
	EPhotoModeOptionEffect_MAX     = 22,
};

enum class EPlayerAlertType : uint8
{
	Location                       = 0,
	Neutral                        = 1,
	Friendly                       = 2,
	Hostile                        = 3,
	Loot                           = 4,
	Chest                          = 5,
	Max                            = 6,
};

enum class EPlayerBannerUsage : uint8
{
	PlayerOne                      = 0,
	PlayerTwo                      = 1,
	PlayerThree                    = 2,
	PlayerFour                     = 3,
	None                           = 4,
	EPlayerBannerUsage_MAX         = 5,
};

enum class EMeleeChainSpecialIdx : uint8
{
	StartWithOpener                = -2,
	ProceedToChain                 = -1,
	EMeleeChainSpecialIdx_MAX      = 0,
};

enum class ETransactionType : uint8
{
	Buy                            = 0,
	Sell                           = 1,
	BuyBack                        = 2,
	SellAllJunk                    = 3,
	PurchaseCustomization          = 4,
	ETransactionType_MAX           = 5,
};

enum class EPlayerStandInType : uint8
{
	Unspecified                    = 0,
	FrontendLobby                  = 1,
	CharacterSelect                = 2,
	CharacterCreate                = 3,
	StatusMenu                     = 4,
	SkillScreen                    = 5,
	RnRCharacterSelect             = 6,
	HeroStatue                     = 7,
	EPlayerStandInType_MAX         = 8,
};

enum class EFrontendStandInSpecialAnimType : uint8
{
	PlayerArrival                  = 0,
	PrimaryPlayerFlourish          = 1,
	CharacterSelectSelection       = 2,
	CharacterSelectSelection_NoActionSkill = 3,
	CharacterCreationSelection     = 4,
	MAX                            = 5,
};

enum class EPlayerTradingStance : uint8
{
	Deciding                       = 0,
	TradeReady                     = 1,
	DuelReady                      = 2,
	Disconnected                   = 3,
	EPlayerTradingStance_MAX       = 4,
};

enum class EPlayerTradeManagerStatus : uint8
{
	Uninitialized                  = 0,
	Trading                        = 1,
	Dueling                        = 2,
	ResolvingTrade                 = 3,
	ResolvingDuel                  = 4,
	EPlayerTradeManagerStatus_MAX  = 5,
};

enum class EPlayThroughType : uint8
{
	CurrentPlayThrough             = 0,
	EffectivePlayThrough           = 1,
	EPlayThroughType_MAX           = 2,
};

enum class EProjectedMeshShape : uint8
{
	Circle                         = 0,
	Square                         = 1,
	EProjectedMeshShape_MAX        = 2,
};

enum class ERandomEncounterManagerState : uint8
{
	Idle                           = 0,
	InDanger                       = 1,
	Encounter                      = 2,
	ERandomEncounterManagerState_MAX = 3,
};

enum class EShieldState : uint8
{
	Uninitialized                  = 0,
	Empty                          = 1,
	PartiallyFilled                = 2,
	Filled                         = 3,
	EShieldState_MAX               = 4,
};

enum class EShieldAttributeModificationSource : uint8
{
	Other                          = 0,
	Equipped                       = 1,
	Filled                         = 2,
	Depleted                       = 3,
	NotDepleted                    = 4,
	EShieldAttributeModificationSource_MAX = 5,
};

enum class EStackOperator : uint8
{
	Add                            = 0,
	Multiply                       = 1,
	EStackOperator_MAX             = 2,
};

enum class EShieldDamageModifierApplicationTarget : uint8
{
	InstigatorCausedDamage         = 0,
	InstigatorReceivedDamage       = 1,
	EShieldDamageModifierApplicationTarget_MAX = 2,
};

enum class EAugmentTriggerOn : uint8
{
	TriggerOn_Filled               = 0,
	TriggerOn_NotFilled            = 1,
	TriggerOn_Depleted             = 2,
	TriggerOn_NotDepleted          = 3,
	TriggerOn_MAX                  = 4,
};

enum class EItemDropOnDeathType : uint8
{
	DropOnDeath_All                = 0,
	DropOnDeath_FirstDeath         = 1,
	DropOnDeath_LastDeath          = 2,
	DropOnDeath_RandomDeath        = 3,
	DropOnDeath_MAX                = 4,
};

enum class ELootInstancingPolicy : uint8
{
	Instance                       = 0,
	DontInstance                   = 1,
	InstanceForPlayer              = 2,
	ELootInstancingPolicy_MAX      = 3,
};

enum class ESpawnDroppedPickupLootRequestType : uint8
{
	Drop                           = 0,
	Attach                         = 1,
	ESpawnDroppedPickupLootRequestType_MAX = 2,
};

enum class ESpellContext : uint8
{
	Context                        = 0,
	Primary                        = 1,
	Secondary                      = 2,
	ESpellContext_MAX              = 3,
};

enum class ESpellAttributeContext : uint8
{
	Spell                          = 0,
	Player                         = 1,
	Owner                          = 2,
	ESpellAttributeContext_MAX     = 3,
};

enum class EStandInAutoScaleMode : uint8
{
	None                           = 0,
	ScaleDown                      = 1,
	ScaleUpOrDown                  = 2,
	EStandInAutoScaleMode_MAX      = 3,
};

enum class EStandInActorType : uint8
{
	None                           = 0,
	Player                         = 1,
	PlayerCreate                   = 2,
	PlayerStatusMenu               = 3,
	PlayerSkillScreen              = 4,
	PlayerBanner                   = 5,
	PlayerStatue                   = 6,
	ScrollsAuraMenu                = 7,
	WorldBuffsMenu                 = 8,
	CustomActor                    = 9,
	EStandInActorType_MAX          = 10,
};

enum class EEncounterInstanceState : uint8
{
	Inactive                       = 0,
	Active                         = 1,
	Playing                        = 2,
	Unloading                      = 3,
	EEncounterInstanceState_MAX    = 4,
};

enum class EOverworldRepresentationType : uint8
{
	Default                        = 0,
	Bone                           = 1,
	Cyclops                        = 2,
	Goblin                         = 3,
	Humans                         = 4,
	Mimic                          = 5,
	Mushrooms                      = 6,
	Naga                           = 7,
	Humans_Pirates                 = 8,
	Custom_Boss_Baldornok          = 61,
	Custom_SolarCream              = 62,
	Tutorial                       = 63,
	EOverworldRepresentationType_MAX = 64,
};

enum class EEncounterArmy : uint8
{
	None                           = 0,
	BoneArmy                       = 1,
	Crab                           = 2,
	Cyclops                        = 3,
	Goblin                         = 4,
	Mimic                          = 5,
	Mushroom                       = 6,
	Shark                          = 7,
	Splotch                        = 8,
	Troll                          = 9,
	Wyvern                         = 10,
	Human                          = 11,
	Zombie                         = 12,
	NagaAqua                       = 13,
	NagaSand                       = 14,
	Eyeclop                        = 15,
	ExtraArmy1                     = 16,
	ExtraArmy2                     = 17,
	ExtraArmy3                     = 18,
	EEncounterArmy_MAX             = 19,
};

enum class EEncounterTrapBehaviorType : uint8
{
	Overlap                        = 0,
	Damage                         = 1,
	AlwaysAlternating              = 2,
	NUM_USED_TYPES                 = 3,
	ExtraTrapType1                 = 4,
	ExtraTrapType2                 = 5,
	ExtraTrapType3                 = 6,
	EEncounterTrapBehaviorType_MAX = 7,
};

enum class ETedioreHomingApplicationType : uint8
{
	Default                        = 0,
	MIRV                           = 1,
	ETedioreHomingApplicationType_MAX = 2,
};

enum class EBehaviorOutput : uint8
{
	Found                          = 0,
	NotFound                       = 1,
	EBehaviorOutput_MAX            = 2,
};

enum class ETinkPileUseState : uint8
{
	None                           = 0,
	NotUsed                        = 1,
	InUse                          = 2,
	WasUsed                        = 3,
	Resetting                      = 4,
	ETinkPileUseState_MAX          = 5,
};

enum class ETinkPileBuildOption : uint8
{
	None                           = 0,
	TurretBasic                    = 1,
	RocketPodBasic                 = 2,
	TurretPlaceholder1             = 3,
	TurretPlaceholder2             = 4,
	TurretPlaceholder3             = 5,
	TurretPlaceholder4             = 6,
	ETinkPileBuildOption_MAX       = 7,
};

enum class ETransporterCraneState : uint8
{
	Deactivated                    = 0,
	Stopped                        = 1,
	MoveForward                    = 2,
	MoveBackward                   = 3,
	ETransporterCraneState_MAX     = 4,
};

enum class EGroundTurretType : uint8
{
	Seated                         = 0,
	Standing                       = 1,
	EGroundTurretType_MAX          = 2,
};

enum class EDLCCurrencyType : uint8
{
	Souls                          = 0,
	EDLCCurrencyType_MAX           = 1,
};

enum class EBackgroundEffects : uint8
{
	StatusBackground               = 0,
	StatusPurple                   = 1,
	PauseBackground                = 2,
	EBackgroundEffects_MAX         = 3,
};

enum class EUIAudioCues : uint8
{
	StatusMenuOpen                 = 0,
	SellAllJunk                    = 1,
	TravelCountdownTone            = 2,
	EUIAudioCues_MAX               = 3,
};

enum class EUIManagerState : uint8
{
	None                           = 0,
	Active                         = 1,
	Hiding                         = 2,
	EUIManagerState_MAX            = 3,
};

enum class EOakUI : uint8
{
	Lowest                         = 0,
	BelowNormal                    = 1,
	Normal                         = 2,
	AboveNormal                    = 3,
	Critical                       = 4,
	OakUI_MAX                      = 5,
};

enum class EChallengeCategoryID : uint8
{
	GameCompletion                 = 0,
	Enemy                          = 1,
	Weapon                         = 2,
	Crew                           = 3,
	Exploration                    = 4,
	Slaughter                      = 5,
	Raid                           = 6,
	ProvingGround                  = 7,
	Max                            = 8,
};

enum class ERevolverOffsetMode : uint8
{
	None                           = 0,
	Left                           = 1,
	Right                          = 2,
	ERevolverOffsetMode_MAX        = 3,
};

enum class EWheelAudioType : uint8
{
	Standard                       = 0,
	MultiPosition2Wheels           = 1,
	MultiPosition1Wheel            = 2,
	SingleWheel                    = 3,
	EWheelAudioType_MAX            = 4,
};

enum class EVehiclePlaySingleAnimMode : int32
{
	PlayOnStart                    = 0,
	PlayOnStop                     = 1,
	EVehiclePlaySingleAnimMode_MAX = 2,
};

enum class EEmitterEnableMode : uint8
{
	EnableOnStart                  = 0,
	EnableOnStartDisableOnStop     = 1,
	EnableOnStop                   = 2,
	DisableOnStart                 = 3,
	DisableOnStartEnableOnStop     = 4,
	DisableOnStop                  = 5,
	EEmitterEnableMode_MAX         = 6,
};

enum class EFollowVehicleRotation : uint8
{
	None                           = 0,
	Yaw                            = 1,
	YawAndPitch                    = 2,
	EFollowVehicleRotation_MAX     = 3,
};

enum class EVendingMachineType : uint8
{
	Guns                           = 0,
	Ammo                           = 1,
	Health                         = 2,
	CrazyEarl                      = 3,
	EVendingMachineType_MAX        = 4,
};

enum class EVendingMachineTilesMode : uint8
{
	Purchase                       = 0,
	BuyBack                        = 1,
	Sell                           = 2,
	MAX                            = 3,
};

enum class EVendingMachineInteractionMode : uint8
{
	Purchase                       = 0,
	BuyBack                        = 1,
	Sell                           = 2,
	EVendingMachineInteractionMode_MAX = 3,
};

enum class EVendingMachineAnimType : uint8
{
	Idle                           = 0,
	Back                           = 1,
	BackTwice                      = 2,
	BackThrice                     = 3,
	BackJiggle                     = 4,
	Forward                        = 5,
	ForwardTwice                   = 6,
	ForwardThrice                  = 7,
	ForwardJiggle                  = 8,
	Purchase                       = 9,
	PurchaseInPlace                = 10,
	TurnOn                         = 11,
	TurnOff                        = 12,
	ErrorJiggle                    = 13,
	SlideInFromTop                 = 14,
	SlideInFromBottom              = 15,
	MAX                            = 16,
};

enum class EVendingMachineTrayTileType : uint8
{
	Regular                        = 0,
	Featured                       = 1,
	GearSoldByFriend               = 2,
	VisibleDummy                   = 3,
	EndOfListDummy                 = 4,
	EVendingMachineTrayTileType_MAX = 5,
};

enum class EWeaponShieldActivationTrigger : uint8
{
	Zoom                           = 0,
	Attach                         = 1,
	Custom                         = 2,
	EWeaponShieldActivationTrigger_MAX = 3,
};

enum class EWeaponShieldState : uint8
{
	Normal                         = 0,
	Depleted                       = 1,
	EWeaponShieldState_MAX         = 2,
};

enum class EWeaponWearValueType : uint8
{
	Wear                           = 0,
	Rust                           = 1,
	Dirt                           = 2,
	EWeaponWearValueType_MAX       = 3,
};

enum class EZoneMapTargetType : uint8
{
	None                           = 0,
	POI                            = 1,
	Player                         = 2,
	CrewChallenge                  = 3,
	MissionWaypoint                = 4,
	DeployedVehicle                = 5,
	EZoneMapTargetType_MAX         = 6,
};


//---------------------------------------------------------------------------------------------------------------------
// STRUCTS
//---------------------------------------------------------------------------------------------------------------------

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.SecondaryHealthDamageEventDetails
struct FSecondaryHealthDamageEventDetails
{
public:
	class UDamageSource*                         DamageSource;                                      // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxDamageType*                        DamageType;                                        // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                 InstigatorPawn;                                    // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasCrit;                                          // 0x18(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EF5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HitLocation;                                       // 0x1C(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitDirection;                                      // 0x28(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EF6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.HealthTypeDepletedDetails
struct FHealthTypeDepletedDetails
{
public:
	class UHealthTypeData*                       HealthType;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxDamageType*                        DamageType;                                        // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Index;                                             // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EF7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DamageBlockEventDetails
struct FDamageBlockEventDetails
{
public:
	class UGbxDamageType*                        DamageType;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDamageSource*                         DamageSource;                                      // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.ExitDownStateInformation
struct FExitDownStateInformation
{
public:
	enum class EExitDownStateReason              ExitReason;                                        // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EF8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHUDNotificationAsset*                 CustomExitNotification;                            // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CustomExitMessageText;                             // 0x10(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.HUDInWorldIconTargetInfo
struct FHUDInWorldIconTargetInfo
{
public:
	class UInWorldIconData*                      IconData;                                          // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Actor;                                             // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       LocationComponent;                                 // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x20(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 Guid;                                              // 0x30(0x10)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EF9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.OakResourceEffectData
struct FOakResourceEffectData
{
public:
	enum class EOakStatusEffectResourceEffectType ResourceEffectType;                                // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EFA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameResourcePoolData*                 ResourcePool;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     PostDepleteImmuneTime;                             // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            DamageTypeClass;                                   // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     DamageModifier;                                    // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     DamagedActorModifier;                              // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultPercentBaseDamage;                          // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakStatusEffectPresentationData*      FXData;                                            // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPresentableStatusEffectData*       StatusEffectData;                                  // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrackContributors;                                // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EFC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ContributorExpirationTime;                         // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContributorNotificationTime;                       // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6EFD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakCoordinatedEffectSwitchState
struct FOakCoordinatedEffectSwitchState
{
public:
	class FString                                DisplayName;                                       // 0x0(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Name;                                              // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakAction_CoordinatedEffect> Effect;                                            // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.OakCoordinatedEffectSwitch
struct FOakCoordinatedEffectSwitch
{
public:
	class UEnum*                                 Enum;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  NativeEnumName;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNativeEnum;                                       // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        InitialState;                                      // 0x11(0x1)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6EFE[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakCoordinatedEffectSwitchState> States;                                            // 0x18(0x10)(Edit, EditFixedSize, ZeroConstructor, RepSkip, NativeAccessSpecifierPrivate)
	uint8                                        CurrentState;                                      // 0x28(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6EFF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Owner;                                             // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxActionComponent*                   ActionComp;                                        // 0x38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F00[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        ReplicatedState;                                   // 0x50(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F01[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ColorRandomizer
struct FColorRandomizer
{
public:
	float                                        Hue;                                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Saturation;                                        // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FNumericRange                         Scale;                                             // 0x8(0x8)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.OakCharacterCustomization
struct FOakCharacterCustomization
{
public:
	bool                                         bRandomizeColor;                                   // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F02[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FColorRandomizer                      ColorRandomizer;                                   // 0x4(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x78 (0x8C - 0x14)
// ScriptStruct OakGame.OakCharacterColorization
struct FOakCharacterColorization : public FOakCharacterCustomization
{
public:
	struct FLinearColor                          Primary1;                                          // 0x14(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverridePrimary1;                                 // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F03[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Primary2;                                          // 0x28(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverridePrimary2;                                 // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F04[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Secondary1;                                        // 0x3C(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideSecondary1;                               // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F05[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Secondary2;                                        // 0x50(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideSecondary2;                               // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F06[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Tertiary1;                                         // 0x64(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideTertiary1;                                // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F07[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          Tertiary2;                                         // 0x78(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideTertiary2;                                // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F08[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x28 - 0x14)
// ScriptStruct OakGame.OakCharacterSkinTone
struct FOakCharacterSkinTone : public FOakCharacterCustomization
{
public:
	struct FLinearColor                          SkinTone;                                          // 0x14(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideSkinTone;                                 // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F09[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x3C (0x50 - 0x14)
// ScriptStruct OakGame.OakCharacterHair
struct FOakCharacterHair : public FOakCharacterCustomization
{
public:
	struct FLinearColor                          InnerColor;                                        // 0x14(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideInnerColor;                               // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F0A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          OuterColor;                                        // 0x28(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideOuterColor;                               // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F0B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          SSSColor;                                          // 0x3C(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideSSSColor;                                 // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F0C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakCharacterTexturePair
struct FOakCharacterTexturePair
{
public:
	class UTexture*                              Comp;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                              Normal;                                            // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x5C (0x70 - 0x14)
// ScriptStruct OakGame.OakCharacterDecal
struct FOakCharacterDecal : public FOakCharacterCustomization
{
public:
	float                                        DecalStrength;                                     // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideDecalStrength;                            // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F0D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          DecalColor;                                        // 0x1C(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideDecalColor;                               // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F0E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          DecalColorHighlight;                               // 0x30(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideDecalColorHighlight;                      // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F0F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture*                              Texture_Comp;                                      // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                              Texture_Normal;                                    // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                              Texture_BaseColor;                                 // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakCharacterTexturePair>      Textures;                                          // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.OakCharacterPattern
struct FOakCharacterPattern
{
public:
	float                                        Primary;                                           // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverridePrimary;                                  // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F10[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Secondary;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideSecondary;                                // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F11[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Tertiary;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideTertiary;                                 // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F12[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Skin;                                              // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideSkin;                                     // 0x1C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomizeUse;                                     // 0x1D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F13[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Chance;                                            // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomizeTexture;                                 // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F14[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakCharacterTexturePair>      Textures;                                          // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x28 - 0x14)
// ScriptStruct OakGame.OakCharacterTattoos
struct FOakCharacterTattoos : public FOakCharacterCustomization
{
public:
	struct FLinearColor                          TattooColor;                                       // 0x14(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideTattooColor;                              // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F15[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakCharacterEyes
struct FOakCharacterEyes
{
public:
	TArray<struct FColor>                        RandomEyeColors;                                   // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bOverrideEyeColor;                                 // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F16[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x248 (0x248 - 0x0)
// ScriptStruct OakGame.OakCharacterCustomizationData
struct FOakCharacterCustomizationData
{
public:
	TArray<struct FOakCharacterColorization>     Customization_Colorizations;                       // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bApplyCustomization_Colorization;                  // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F17[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakCharacterPattern                  Customization_Pattern;                             // 0x18(0x38)(Edit, NativeAccessSpecifierPublic)
	bool                                         bApplyCustomization_Pattern;                       // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F18[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakCharacterSkinTone                 Customization_SkinTone;                            // 0x54(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bApplyCustomization_SkinTone;                      // 0x7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F19[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakCharacterTattoos                  Customization_Tattoos;                             // 0x80(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bApplyCustomization_Tattoos;                       // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F1A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakCharacterHair>             Customization_Hairs;                               // 0xB0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bApplyCustomization_Hair;                          // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F1B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakCharacterEyes                     Customization_Eyes;                                // 0xC8(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bApplyCustomization_Eyes;                          // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F1C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakCharacterDecal>            Customization_Decals;                              // 0xE8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bApplyCustomization_Decal;                         // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F1D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakCharacterColorization             Customization_Colorization;                        // 0xFC(0x8C)(NoDestructor, NativeAccessSpecifierPublic)
	struct FOakCharacterHair                     Customization_Hair;                                // 0x188(0x50)(NoDestructor, NativeAccessSpecifierPublic)
	struct FOakCharacterDecal                    Customization_Decal;                               // 0x1D8(0x70)(NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct OakGame.OakGenderData
struct FOakGenderData
{
public:
	class USkeletalMesh*                         Mesh;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshOffset;                                        // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F1E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGestaltPartListData*                  GestaltPartList;                                   // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>             AnimBlueprint;                                     // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AnimSetGenericNames_Enable;                        // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AnimSetGenericNames_Disable;                       // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGbxAnimSet*>                   AnimSets_Enable;                                   // 0x48(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGbxAnimSet*>                   AnimSets_Disable;                                  // 0x58(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>             Materials;                                         // 0x68(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UDialogNameTag*>                DialogNameTags;                                    // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDestructibleMesh*                     CryoMesh;                                          // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoreSourceMaterialIndex;                           // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F1F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct OakGame.WeaponSlotEntry
struct FWeaponSlotEntry
{
public:
	class UWeaponSlotData*                       SlotData;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWeapon*                               AttachedWeapon;                                    // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWeapon*                               PendingAttachedWeapon;                             // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWeapon*                               ClientPredictedPendingAttachedWeapon;              // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               RestoreSlotData;                                   // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F20[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameResourcePoolReference            AccuracyPool;                                      // 0xE0(0x18)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
};

// 0x650 (0x650 - 0x0)
// ScriptStruct OakGame.WeaponSlotContainer
struct FWeaponSlotContainer
{
public:
	TArray<struct FWeaponSlotEntry>              WeaponSlots;                                       // 0x0(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F21[0x640];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x24 (0x30 - 0xC)
// ScriptStruct OakGame.InventorySlotEntry
struct FInventorySlotEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_6F22[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                EquippedInventory;                                 // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Enabled;                                           // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Selected;                                          // 0x19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F23[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventorySlotData*                    SlotData;                                          // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ClientCachedEquippedInventory;                     // 0x28(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x38 (0xE8 - 0xB0)
// ScriptStruct OakGame.InventorySlotContainer
struct FInventorySlotContainer : public FFastArraySerializer
{
public:
	TArray<struct FInventorySlotEntry>           InventorySlots;                                    // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F24[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.HolsteredWeaponData
struct FHolsteredWeaponData
{
public:
	enum class EWeaponHolsteredSizeType          WeaponSizeType;                                    // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPickupLootAttachmentMode         AttachMode;                                        // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F25[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SocketName;                                        // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVisibleInFirstPerson;                             // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F26[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct OakGame.CharacterCorpseState
struct FCharacterCorpseState
{
public:
	uint8                                        bEnableCorpseCleanup : 1;                          // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldTearOff : 1;                                // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideVisibleCorpseRemovalTime : 1;             // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_26F : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6F27[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideVisibleCorpseRemovalTime;                  // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContactWithVehiclesTime;                           // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F28[0xDC];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct OakGame.MapIDData
struct FMapIDData
{
public:
	uint8                                        ZoneNameID;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MapNameID;                                         // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.BossbarEventData
struct FBossbarEventData
{
public:
	enum class EBossbarEventType                 Type;                                              // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F29[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakCharacter*                         Boss;                                              // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GlobalScreenParticleData
struct FGlobalScreenParticleData
{
public:
	class UParticleSystem*                       StartAndLoopParticle;                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       EndParticle;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ContentDims;                                       // 0x10(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParticleDepth;                                     // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F2A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Tag;                                               // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.LuckAssociation
struct FLuckAssociation
{
public:
	class ULuckCategoryData*                     Category;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    LuckModification;                                  // 0x8(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F2B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.EffectivePlayerCountData
struct FEffectivePlayerCountData
{
public:
	int32                                        EffectiveNumPlayers;                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEffectivePlayerCountSetting      Setting;                                           // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.MayhemDebugOverrides
struct FMayhemDebugOverrides
{
public:
	TArray<int32>                                ModifierIndexOverrides;                            // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct OakGame.MayhemReplicableSetsData
struct FMayhemReplicableSetsData
{
public:
	int32                                        ActiveSetsBits;                                    // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.MayhemModeState
struct FMayhemModeState
{
public:
	bool                                         bIsActive;                                         // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsLocked;                                         // 0x1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F2C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MayhemLevel;                                       // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HighestHostUnlockedMayhemLevel;                    // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MayhemTier;                                        // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PendingMayhemLevel;                                // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PendingRandomSeed;                                 // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMayhemDebugOverrides                 CachedOptionalOverrides;                           // 0x18(0x10)(Transient, NativeAccessSpecifierPrivate)
	struct FMayhemReplicableSetsData             ReplicableSets;                                    // 0x28(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        RandomSeed;                                        // 0x2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                InventoryOverpowerLevelWeights;                    // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.AdditionalProcessedReward
struct FAdditionalProcessedReward
{
public:
	class UInventoryCategoryData*                CurrencyType;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Currency;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F2D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.ProcessedReward
struct FProcessedReward
{
public:
	int32                                        Currency;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Experience;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                CurrencyType;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAdditionalProcessedReward>    AdditionalRewards;                                 // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SpawnedInventoryItems;                             // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PlayerPainSoundData
struct FPlayerPainSoundData
{
public:
	float                                        HealthPercentThreshold;                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F2E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterSoundTag*                    SoundTag;                                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.TownHubTravelInfo
struct FTownHubTravelInfo
{
public:
	uint8                                        Pad_6F2F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ReturnMapName;                                     // 0x20(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ReturnStationName;                                 // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTravelStationData>     ReturnTravelStation;                               // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.HeroPointsScheduleEntry
struct FHeroPointsScheduleEntry
{
public:
	int32                                        Level;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExtraPoints;                                       // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct OakGame.PlayerHeroPointsData
struct FPlayerHeroPointsData
{
public:
	struct FGbxAttributeFloat                    Strength;                                          // 0x0(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Strength_Base;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    Dexterity;                                         // 0x10(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Dexterity_Base;                                    // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    Intelligence;                                      // 0x20(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Intelligence_Base;                                 // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    Wisdom;                                            // 0x30(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Wisdom_Base;                                       // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    Constitution;                                      // 0x40(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Constitution_Base;                                 // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                    Luck;                                              // 0x50(0xC)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Luck_Base;                                         // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       RespecCount;                                       // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F30[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct OakGame.OakSDUEntry
struct FOakSDUEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_6F31[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakSDUData*                           SDUData;                                           // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SDULevel;                                          // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F32[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0xF8 - 0xB0)
// ScriptStruct OakGame.OakSDUContainer
struct FOakSDUContainer : public FFastArraySerializer
{
public:
	TArray<struct FOakSDUEntry>                  SDUList;                                           // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F33[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxAttributeModifierHandle>   SDUAttributeModifiers;                             // 0xE8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ReplicatedInteractionInfo
struct FReplicatedInteractionInfo
{
public:
	TArray<class UMaterialInterface*>            OriginalMaterials;                                 // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  HandSocketName;                                    // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGhostedMaterialOn;                                // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttractEmitterOn;                                 // 0x19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F34[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.GroundSlamEndedDetails
struct FGroundSlamEndedDetails
{
public:
	bool                                         bInterrupted;                                      // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F35[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImpactVelocity;                                    // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.SlideEndedDetails
struct FSlideEndedDetails
{
public:
	class AActor*                                HitActor;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StopVelocity;                                      // 0x8(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F36[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.TrackedSlidingImpactEffect
struct FTrackedSlidingImpactEffect
{
public:
	class USceneComponent*                       Component;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                     PhysicalMaterial;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F37[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct OakGame.SlidingImpactState
struct FSlidingImpactState
{
public:
	class UOakCharacterMovementComponent*        OwnerMovementComponent;                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StartAudioEvent;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopAudioEvent;                                    // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreSlidingState;                               // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F38[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHitResult                            LastImpact;                                        // 0x20(0x90)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        LastImpactTraceTime;                               // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F39[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTrackedSlidingImpactEffect>   Effects;                                           // 0xB8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  SpeedParticleParameterName;                        // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F3A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.CharacterJumpGoalSetting
struct FCharacterJumpGoalSetting
{
public:
	float                                        InitialZVelocity;                                  // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoalHeight;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseInitialZVelocity : 1;                          // Mask: 0x1, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseGoalHeight : 1;                                // Mask: 0x2, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F3B[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.CommandRingTarget
struct FCommandRingTarget
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       BaseComponent;                                     // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x10(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x1C(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.RegisteredWeaponShotModifier
struct FRegisteredWeaponShotModifier
{
public:
	class UWeaponShotModifier*                   Modifier;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               Owner;                                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               ContextOverride;                                   // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F3C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ReplicatedMeleeActionData
struct FReplicatedMeleeActionData
{
public:
	int32                                        Counter;                                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                Action;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayerMeleeData*                      MeleeData;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.MeleeWeaponAttachmentData
struct FMeleeWeaponAttachmentData
{
public:
	class UStaticMesh*                           Mesh;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Socket;                                            // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RelativeLocation;                                  // 0x10(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRotation;                                  // 0x1C(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UGbxCustomizationTargetData*>   CustomizationTargets;                              // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGbxStaticMeshComponent*               Component;                                         // 0x38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct OakGame.DungeonRunDef
struct FDungeonRunDef
{
public:
	enum class EDungeonRunType                   RunType;                                           // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F3E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  ChallengeDescription;                              // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                  FeaturedRunName;                                   // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEncounterPlaylistDataCreator*         DataCreator;                                       // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEncounterPlaylist*                    Playlist;                                          // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 ID;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTutorial;                                       // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F3F[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.PlaylistAssociatedData
struct FPlaylistAssociatedData
{
public:
	TSubclassOf<class AActor>                    RewardClassToSpawn;                                // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.RoomDataInfo
struct FRoomDataInfo
{
public:
	enum class EGameModeType                     GameModeType;                                      // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F40[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        EnvironmentFilterTags;                             // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bUseSpecificGameModeOptions;                       // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F41[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEncounterCombatModeOptions*           GameModeOptions;                                   // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.DungeonAttributeModifier
struct FDungeonAttributeModifier
{
public:
	uint8                                        Pad_6F42[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     Attribute;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F43[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.EndlessDungeonWaypoint
struct FEndlessDungeonWaypoint
{
public:
	int32                                        EndlessId;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F44[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Target;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation;                                    // 0x10(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       Radius;                                            // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.DungeonObjective
struct FDungeonObjective
{
public:
	uint8                                        Pad_6F45[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDungeonBonusObjective>    ObjectiveClass;                                    // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ObjectiveActor;                                    // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDungeonObjectiveType             ObjectiveType;                                     // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBonus;                                          // 0x21(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsVisible;                                        // 0x22(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedProgressBar;                                  // 0x23(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProgressBarProgress;                               // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedTimer;                                        // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReadyToPlayOut;                                   // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F46[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeLeft;                                          // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Status;                                            // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.EDReplicatedBlessingData
struct FEDReplicatedBlessingData
{
public:
	class UTutorialMessageDataAsset*             TutorialMessage;                                   // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F47[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            Icon;                                              // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.EDReplicatedBonusData
struct FEDReplicatedBonusData
{
public:
	enum class EDungeonBonusType                 BonusType;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECrystalBonusType                 CrystalBonusType;                                  // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F48[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BonusValue;                                        // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RowName;                                           // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.DungeonRunRoomInfo
struct FDungeonRunRoomInfo
{
public:
	bool                                         bIsElite;                                          // 0x0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBonusObjectiveSuccessful;                         // 0x1(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F49[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CompletedRoomIconPath;                             // 0x8(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RoomIconPath;                                      // 0x18(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.EDReplicatedCurseData
struct FEDReplicatedCurseData
{
public:
	int32                                        Quantity;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F4A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RowName;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C8 (0x1C8 - 0x0)
// ScriptStruct OakGame.DungeonRunInfo
struct FDungeonRunInfo
{
public:
	bool                                         DoCleanUp;                                         // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDungeonWidgetVisible;                             // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRunActive;                                      // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F4B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NbOfLifeLeft;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DeathCount;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       TimePlayedStartTime;                               // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       TimePlayedEndTime;                                 // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimerTimeTotal;                                    // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 RunGuid;                                           // 0x18(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RunSerialString;                                   // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentEncounterRoomIndex;                         // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F4C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEncounterGameMode>        CurrentGameModeClass;                              // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDungeonRunType                   RunType;                                           // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F4D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CrystalsGained;                                    // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CrystalsSpent;                                     // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCrystalsValue;                                 // 0x54(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNbOfPlayer;                                     // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MainObjectiveProgress;                             // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MainObjectiveTotal;                                // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowKillCountProgress;                             // 0x64(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F4E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BonusObjectiveTitle;                               // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusObjectiveProgress;                            // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusObjectiveTotal;                               // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMainPanelVisible;                                // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TimerActive;                                       // 0x81(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRoomElite;                                       // 0x82(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F4F[0xD];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDungeonObjective>             DungeonObjectives;                                 // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDungeonRunRoomInfo>           RoomInfo;                                          // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                DungeonRunProviderClass;                           // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 RunId;                                             // 0xB8(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FeaturedRunName;                                   // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F50[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FEDReplicatedBlessingData>     ReplicatedBlessingsList;                           // 0x168(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F51[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FEDReplicatedCurseData>        ReplicatedCursesList;                              // 0x188(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEDReplicatedBonusData>        ReplicatedBonusesList;                             // 0x198(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F52[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.FeaturedRunData
struct FFeaturedRunData
{
public:
	uint8                                        Pad_6F53[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UEncounterPlaylist*                    Playlist;                                          // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F54[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct OakGame.OakNPCMailDataEntry
struct FOakNPCMailDataEntry : public FTableRowBase
{
public:
	class FText                                  SenderDisplayName;                                 // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Subject;                                           // 0x20(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	class UItemPoolData*                         ItemPoolReward;                                    // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.PlayerCombatEncounterData
struct FPlayerCombatEncounterData
{
public:
	int32                                        Experience;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CriticalHits;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Kills;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BadassKills;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RaidBossKills;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.MessageHandle
struct FMessageHandle
{
public:
	uint64                                       ID;                                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.GearSoldByFriendData
struct FGearSoldByFriendData
{
public:
	class FString                                GearSerialNumber;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerClassIdentifierHash;                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F55[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      FriendNetId;                                       // 0x18(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x188 (0x188 - 0x0)
// ScriptStruct OakGame.OakCARMenuVehicleConfig
struct FOakCARMenuVehicleConfig
{
public:
	class FString                                LoadoutSaveName;                                   // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehicleData>     Body;                                              // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehiclePartData> Wheel;                                             // 0x38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehiclePartData> Armor;                                             // 0x60(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehiclePartData> CoreMod;                                           // 0x88(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehiclePartData> GunnerWeapon;                                      // 0xB0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehiclePartData> DriverWeapon;                                      // 0xD8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehiclePartData> Ornament;                                          // 0x100(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehiclePartData> MaterialDecal;                                     // 0x128(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakCARVehiclePartData> Material;                                          // 0x150(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ColorIndex1;                                       // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ColorIndex2;                                       // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ColorIndex3;                                       // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F56[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.GFxMissionTrackerInventoryItemData
struct FGFxMissionTrackerInventoryItemData
{
public:
	class FString                                ItemTypeFrameName;                                 // 0x0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ItemRarityFrameName;                               // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ItemRarityFrameText;                               // 0x20(0x18)(Transient, NativeAccessSpecifierPublic)
	class FString                                ItemRarityIdentifier;                              // 0x38(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemScore;                                         // 0x48(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F57[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GFxMissionTrackerRewardDisplayData
struct FGFxMissionTrackerRewardDisplayData
{
public:
	int32                                        Currency;                                          // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F58[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryCategoryData*                CurrencyType;                                      // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGFxMissionTrackerInventoryItemData> Items;                                             // 0x10(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.MissionDeliveryData
struct FMissionDeliveryData
{
public:
	TArray<TSubclassOf<class UMission>>          Missions;                                          // 0x0(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AActor*                                MissionGiver;                                      // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.OakUIDialogBoxChoiceInfo
struct FOakUIDialogBoxChoiceInfo
{
public:
	class FText                                  LabelText;                                         // 0x0(0x18)(Transient, NativeAccessSpecifierPublic)
	class FName                                  ActionName;                                        // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InputAction;                                       // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCloseDialogOnSelection;                           // 0x28(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPressToHoldChoice;                                // 0x29(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F59[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x170 (0x170 - 0x0)
// ScriptStruct OakGame.OakUIDialogBoxInfo
struct FOakUIDialogBoxInfo
{
public:
	class FText                                  HeaderText;                                        // 0x0(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  BodyText;                                          // 0x18(0x18)(Transient, NativeAccessSpecifierPublic)
	TArray<struct FOakUIDialogBoxChoiceInfo>     Choices;                                           // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F5A[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bKeybindingAllowGamepadInputs;                     // 0xB0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKeybindingAllowMouseKeyboardInputs;               // 0xB1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakUIDialogBoxStyle              DialogBoxStyle;                                    // 0xB2(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F5B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InputText;                                         // 0xB8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InputTextMaxLen;                                   // 0xC8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanCloseWhenChoicesArrayIsEmpty;                  // 0xCC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInputTextField;                                   // 0xCD(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPasswordTextField;                                // 0xCE(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAnyUserCanInteract;                               // 0xCF(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanCancel;                                        // 0xD0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuppressSpawnSound;                               // 0xD1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F5C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Amount;                                            // 0xD8(0x18)(Transient, NativeAccessSpecifierPublic)
	class FString                                AmountType;                                        // 0xF0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InitialChoice;                                     // 0x100(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialChoiceIndex;                                // 0x108(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DialogIndexIdent;                                  // 0x110(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakUIDialogBoxButtonType         ButtonType;                                        // 0x120(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F5E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGbxPlayerController*                  TargetPC;                                          // 0x128(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowCloseWhenAnotherLocalPlayerLeaves;           // 0x130(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayEULA;                                      // 0x131(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDeleteConfirmation;                             // 0x132(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F5F[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CostLine;                                          // 0x138(0x18)(Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F60[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.TrackedInteractionSaveData
struct FTrackedInteractionSaveData
{
public:
	TSoftObjectPtr<class UTrackedInteractionData> TrackedInteractionData;                            // 0x0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                         CompletedInstances;                                // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.OakUIStatusMenuManager
struct FOakUIStatusMenuManager
{
public:
	uint8                                        Pad_6F61[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              PSC_IntroEffect;                                   // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              PSC_BackgroundElement;                             // 0x10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              PSC_SocialPurple;                                  // 0x18(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F62[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  Owner;                                             // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakUIPlayerStandIn*                   PlayerStandIn;                                     // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PremiumCurrencyData
struct FPremiumCurrencyData
{
public:
	class UGbxInventoryCategoryData*             CategoryData;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F63[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.PremiumCurrencyManager
struct FPremiumCurrencyManager
{
public:
	uint8                                        Pad_6F64[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPremiumCurrencyData>          Currencies;                                        // 0x10(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class AOakPlayerController*                  Owner;                                             // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F65[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.UnlockedPlayerEchoLogData
struct FUnlockedPlayerEchoLogData
{
public:
	class UEchoLogData*                          EchoLogData;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F66[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakInventoryCustomizationPartInfo
struct FOakInventoryCustomizationPartInfo
{
public:
	class UOakInventoryCustomizationPartData*    CustomizationPart;                                 // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsNew;                                            // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F67[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakCustomizationInfo
struct FOakCustomizationInfo
{
public:
	class UOakCustomizationData*                 Customization;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNew;                                             // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F68[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakPlayerPath
struct FOakPlayerPath
{
public:
	uint8                                        Pad_6F69[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.TriggerFeedbackState
struct FTriggerFeedbackState
{
public:
	uint8                                        Pad_6F6A[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponTriggerFeedbackAsset*           WeaponTriggerFeedback;                             // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OrphanedUIStandIn
struct FOrphanedUIStandIn
{
public:
	class AActor*                                StandInActor;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakUIActorContainer*                  Container;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OutstandingActivityFeedData
struct FOutstandingActivityFeedData
{
public:
	class UActivityFeedReward*                   FeedData;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChallengeLevelTargetValue;                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChallengeLevelCompleted;                           // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.ResourcePoolSavegameData
struct FResourcePoolSavegameData
{
public:
	float                                        Amount;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F6B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UGameResourceData>      ResourcePath;                                      // 0x8(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F6C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.OakAbilityTreeItemSaveGameData
struct FOakAbilityTreeItemSaveGameData
{
public:
	TSoftObjectPtr<class UOakPlayerAbilityTreeItemData> ItemAssetPath;                                     // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Points;                                            // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxPoints;                                         // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TreeIdentifier;                                    // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F6D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.OakAbilitySlotSaveGameData
struct FOakAbilitySlotSaveGameData
{
public:
	TSoftClassPtr<class UOakPlayerAbility>       AbilityClassPath;                                  // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakPlayerAbilitySlotData> SlotAssetPath;                                     // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct OakGame.OakActionAbilityAugmentSaveGameData
struct FOakActionAbilityAugmentSaveGameData
{
public:
	TSoftClassPtr<class UOakActionAbility>       ActionAbilityClassPath;                            // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakActionAbilityAugmentSlotData> SlotAssetPath;                                     // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakActionAbilityAugmentData> AugmentAssetPath;                                  // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.OakActionAbilityAugmentConfigurationSaveGameData
struct FOakActionAbilityAugmentConfigurationSaveGameData
{
public:
	TSoftClassPtr<class UOakActionAbility>       AbilityClassPath;                                  // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakActionAbilityAugmentData> AugmentAssetPath;                                  // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakActionAbilityAugmentSlotData> ModSlotAssetPath;                                  // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakActionAbilityAugmentData> ModAssetPath;                                      // 0x78(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.OakDualClassSaveGameData
struct FOakDualClassSaveGameData
{
public:
	TSoftObjectPtr<class UOakPlayerAbilityTreeBranchData> PrimaryClassBranchPath;                            // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UOakPlayerAbilityTreeBranchData> SlottedSecondaryBranchPath;                        // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUnlockedClassFeatures;                            // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUnlockedInitialSecondaryClass;                    // 0x51(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUnlockedSecondaryClassSwapping;                   // 0x52(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F6E[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct OakGame.OakPlayerAbilitySaveGameData
struct FOakPlayerAbilitySaveGameData
{
public:
	int32                                        TreeGrade;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AbilityPoints;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakAbilityTreeItemSaveGameData> TreeItemList;                                      // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakAbilitySlotSaveGameData>   AbilitySlotList;                                   // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakActionAbilityAugmentSaveGameData> AugmentSlotList;                                   // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakActionAbilityAugmentConfigurationSaveGameData> AugmentConfigurationList;                          // 0x38(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FOakDualClassSaveGameData             DualClassSave;                                     // 0x48(0x58)(Edit, EditConst, NativeAccessSpecifierPublic)
	uint32                                       RespecCount;                                       // 0xA0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F6F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakSDUSaveGameData
struct FOakSDUSaveGameData
{
public:
	int32                                        SDULevel;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F70[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SDUDataPath;                                       // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct OakGame.ClientExpectedSaveGameValues
struct FClientExpectedSaveGameValues
{
public:
	bool                                         bWaitingForServer;                                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F71[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExperiencePoints;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FResourcePoolSavegameData>     ResourcePools;                                     // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOakPlayerAbilitySaveGameData         Abilities;                                         // 0x18(0xA8)(NativeAccessSpecifierPublic)
	TArray<struct FInventorySaveGameData>        InventoryList;                                     // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakSDUSaveGameData>           SDUList;                                           // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.IndigoRunDebugStats
struct FIndigoRunDebugStats
{
public:
	int32                                        PreRunSoulsCount;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreCurrentEncounterSoulsCount;                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                MapDeaths;                                         // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                MapSouls;                                          // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                MapKills;                                          // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.OakUICCThumbnailData
struct FOakUICCThumbnailData
{
public:
	uint8                                        Pad_6F72[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCustomizationData*                 Customization;                                     // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ThumbnailTemplateClass;                            // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ThumbnailTemplate;                                 // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F73[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UTextureStreaming*>             StreamingTextures;                                 // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F74[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture*                              ThumbnailTexture;                                  // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakThumbnailManagerConfig
struct FOakThumbnailManagerConfig
{
public:
	float                                        ThumbnailLoadFrequency;                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxThumbnails;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                             ThumbnailSize;                                     // 0x8(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    ThumbnailMaterial;                                 // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.OakUICcManagerRespecText
struct FOakUICcManagerRespecText
{
public:
	class FText                                  HeaderText;                                        // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TextForBoth;                                       // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TextForSkills;                                     // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TextForHeroPoints;                                 // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x240 (0x240 - 0x0)
// ScriptStruct OakGame.OakUICcManagerText
struct FOakUICcManagerText
{
public:
	class FText                                  AskRespecHeaderText;                               // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AskRespecBodyText;                                 // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RespecChoiceSkills;                                // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RespecChoiceHeroPoints;                            // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RespecChoiceBoth;                                  // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FOakUICcManagerRespecText             ConfirmRespecTexts;                                // 0x78(0x60)(Edit, NativeAccessSpecifierPublic)
	struct FOakUICcManagerRespecText             CannotRespecTexts;                                 // 0xD8(0x60)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ChoiceYes;                                         // 0x138(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ChoiceNo;                                          // 0x150(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ChoiceOkay;                                        // 0x168(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LateJoinPopupHeader;                               // 0x180(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LateJoinPopupBody;                                 // 0x198(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LateJoinPopupConfirm;                              // 0x1B0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LateJoinPopupCancel;                               // 0x1C8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidPlayerNameHeaderText;                       // 0x1E0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidPlayerNameBodyText;                         // 0x1F8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  WaitingOnYouText;                                  // 0x210(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  WaitingForOthersText;                              // 0x228(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.StandInLightComponentInstance
struct FStandInLightComponentInstance
{
public:
	class ULightComponent*                       Component;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F75[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.DesiredStandInActorData
struct FDesiredStandInActorData
{
public:
	uint8                                        Pad_6F76[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    CustomStandInClass;                                // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F77[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxDataAsset*                         DataAsset;                                         // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F78[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x430 (0x430 - 0x0)
// ScriptStruct OakGame.StandInUIController
struct FStandInUIController
{
public:
	uint8                                        Pad_6F79[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AOakUIActorContainer>    ContainerClass;                                    // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VerticalSplitInVehicleAdjustment;                  // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                               OuterObject;                                       // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakPlayerController*                  PlayerController;                                  // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerClassIdentifier*                FallbackPlayerClass;                               // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakUIActorContainer*                  StandInContainer;                                  // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FStandInLightComponentInstance> LightComponents;                                   // 0x58(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class USceneComponent*                       StandInTransformRoot;                              // 0x68(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       StandInRotationRoot;                               // 0x70(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                CurrentStandInActor;                               // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        SecondaryActors;                                   // 0x80(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class AActor*                                TempInventoryActor;                                // 0x90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryBalanceStateComponent*       StandInTemplateInventoryBalanceState;              // 0x98(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F7B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDesiredStandInActorData              LastDesiredActorData;                              // 0xB8(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F7C[0x138];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDesiredStandInActorData              DesiredActorData;                                  // 0x240(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                       StreamedObjects;                                   // 0x290(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F7D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       WantedStreamRequest;                               // 0x2B0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F7E[0x17C];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.CharacterCreationStandInPreviewInfo
struct FCharacterCreationStandInPreviewInfo
{
public:
	class FName                                  BodyStandInConfiguration;                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeadStandInConfiguration;                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FaceDetailStandInConfiguration;                    // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct OakGame.CharacterCreationStandInPreviewMap
struct FCharacterCreationStandInPreviewMap
{
public:
	struct FCharacterCreationStandInPreviewInfo  CharacterInfo;                                     // 0x0(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterCreationStandInPreviewInfo  EmoteInfo;                                         // 0x18(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterCreationStandInPreviewInfo  BannerInfo;                                        // 0x30(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterCreationStandInPreviewInfo  StatueInfo;                                        // 0x48(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  ClassSelectionConfiguration;                       // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AspectOfTheVaultConfiguration;                     // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeroPointsConfiguration;                           // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CharacterConfirmConfiguration;                     // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.CharacterCreationBaseTypeInterface
struct FCharacterCreationBaseTypeInterface
{
public:
	uint8                                        Pad_6F7F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Name;                                              // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  DisplayLabel;                                      // 0x20(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FName                                  ListIconName;                                      // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECharacterCreationUIDisplayCategory DisplayCategory;                                   // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanToggleStandInPreviewType;                      // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F80[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECharacterCreationPreviewType     DefaultStandInPreviewType;                         // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowedCharacterCreate;                           // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowedInCharacterCreateLateJoin;                 // 0x4D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowedInQuickChange;                             // 0x4E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowedToRandomize;                               // 0x4F(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  RandomizeLink;                                     // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInvertRandomizeLink;                              // 0x58(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOnlyRandomizeWhenVisible;                         // 0x59(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F81[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0x110 - 0x70)
// ScriptStruct OakGame.CharacterCreationCustomFloatData
struct FCharacterCreationCustomFloatData : public FCharacterCreationBaseTypeInterface
{
public:
	float                                        DeltaMoveNormalizedAmount;                         // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FNumericRange                         AdvancedRange;                                     // 0x74(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FNumericRange                         LimitedRange;                                      // 0x7C(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        DefaultValue;                                      // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInvertValue;                                      // 0x88(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F82[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    RandomizeCurve;                                    // 0x90(0x78)(Edit, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F83[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.CharacterCreationAspectOfTheVaultData
struct FCharacterCreationAspectOfTheVaultData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UOakPlayerAspectData>   AspectDataAsset;                                   // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDownloadableContentData*              AssociatedExpansionData;                           // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F84[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.CharacterCreationClassData
struct FCharacterCreationClassData
{
public:
	TSoftObjectPtr<class UOakPlayerAbilityTreeBranchData> Class;                                             // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClassArmorSerialNumberString;                      // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.CharacterCreationFloatLinkSet
struct FCharacterCreationFloatLinkSet
{
public:
	class FName                                  ControlSlider;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvertLinkedSliders;                              // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F85[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          LinkedSliders;                                     // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x88 - 0x70)
// ScriptStruct OakGame.CharacterCreationFloatLinkType
struct FCharacterCreationFloatLinkType : public FCharacterCreationBaseTypeInterface
{
public:
	TArray<struct FCharacterCreationFloatLinkSet> LinkSets;                                          // 0x70(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bDefaultLinkActive;                                // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6F86[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.CcLayoutItem
struct FCcLayoutItem
{
public:
	enum class ECcLayoutItemType                 Type;                                              // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F87[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemId;                                            // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
	class FString                                IconFrameName;                                     // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterCreationUIDisplayCategory StandInType;                                       // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterCreationPreviewType     StandInPreviewType;                                // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F88[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.CcLayoutGroup
struct FCcLayoutGroup
{
public:
	class FName                                  GroupId;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCcLayoutItem>                 Items;                                             // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x98 - 0x70)
// ScriptStruct OakGame.CharacterCreationAssetType
struct FCharacterCreationAssetType : public FCharacterCreationBaseTypeInterface
{
public:
	bool                                         bAllowSelectingNone;                               // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6F89[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                AssetClass;                                        // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                       Assets;                                            // 0x80(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6F8A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0xB8 - 0x98)
// ScriptStruct OakGame.CharacterCreationCustomizationType
struct FCharacterCreationCustomizationType : public FCharacterCreationAssetType
{
public:
	class UGbxCustomizationTypeData*             CustomizationType;                                 // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseLUTPicker;                                     // 0xA0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6F8B[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.CharacterCreationAttributeData
struct FCharacterCreationAttributeData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6F8C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0xA8 - 0x70)
// ScriptStruct OakGame.CharacterCreationAdvancedCustomizationType
struct FCharacterCreationAdvancedCustomizationType : public FCharacterCreationBaseTypeInterface
{
public:
	class FText                                  ActiveText;                                        // 0x70(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  InactiveText;                                      // 0x88(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bDefaultValue;                                     // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6F8D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x0 (0x98 - 0x98)
// ScriptStruct OakGame.CharacterCreationPresetAssetType
struct FCharacterCreationPresetAssetType : public FCharacterCreationAssetType
{
public:
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct OakGame.CharacterCreationDataPresetData
struct FCharacterCreationDataPresetData
{
public:
	TArray<class UGbxCustomizationCollectionData*> Presets;                                           // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCharacterCreationPresetAssetType     Selection;                                         // 0x10(0x98)(Edit, NativeAccessSpecifierPublic)
};

// 0x530 (0x530 - 0x0)
// ScriptStruct OakGame.CharacterCreationData
struct FCharacterCreationData
{
public:
	class UPlayerClassIdentifier*                PlayerClassId;                                     // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DefaultCharacterName;                              // 0x8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  InvalidText;                                       // 0x20(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  CustomText;                                        // 0x38(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  NoneText;                                          // 0x50(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                EmoteIdPrefix;                                     // 0x68(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterCreationStandInPreviewMap   StandInPreviewMap_NewCharacter;                    // 0x78(0x80)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterCreationStandInPreviewMap   StandInPreviewMap_QuickChange;                     // 0xF8(0x80)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        StandInMaxRotationSpeed;                           // 0x178(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandInMaxSecondsToReachTargetSpeed;               // 0x17C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCreationClassData>   Classes;                                           // 0x180(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                NewCharacterArmorSerialNumberString;               // 0x190(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxCustomizationData*>         NewCharacterOverrideCustomizations;                // 0x1A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCcLayoutGroup>                Layouts;                                           // 0x1B0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCreationCustomizationType> CustomizationTypes;                                // 0x1C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCreationCustomFloatData> FloatTypes;                                        // 0x1D0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, TSoftObjectPtr<class UTexture2D>> ListItemTypeIcons;                                 // 0x1E0(0x50)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCreationFloatLinkType> LinkedFloats;                                      // 0x230(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCharacterCreationAdvancedCustomizationType AdvancedCustomizationToggle;                       // 0x240(0xA8)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCreationAttributeData> HeroAttributes;                                    // 0x2E8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        StartingHeroPointPool;                             // 0x2F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F8E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCharacterCreationAspectOfTheVaultData> AspectOfTheVaultOptions;                           // 0x300(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCharacterCreationAssetType           PronounSelection;                                  // 0x310(0x98)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UDialogNameTag*>                Voices;                                            // 0x3A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDialogTimeSlotReference              VoicePreview;                                      // 0x3B8(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCharacterCreationAssetType           VoicesSelection;                                   // 0x3F8(0x98)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCreationDataPresetData> Presets;                                           // 0x490(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F8F[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOakCustomizationData*>         UnlockedCustomizationsDataArray;                   // 0x4E0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UOakCustomizationData*>         LockedCustomizationsDataArray;                     // 0x4F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UGbxCustomizationData*>         ViewedCustomizationsDataArray;                     // 0x500(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UGbxCustomizationTypeData*>     SuppressedCustomizationTypes;                      // 0x510(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_6F90[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct OakGame.ZoneMapMissionWaypointEntry
struct FZoneMapMissionWaypointEntry
{
public:
	class UZoneMapPOITypeData*                   PointOfInterestType;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionWaypointObjectName;                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F91[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            MissionWaypointTransform;                          // 0x20(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        MissionWaypointRadius;                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F92[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMissionObjectiveReferenceWeak> MissionObjectives;                                 // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FGbxUIFormattedText                   MissionDirectorName;                               // 0x68(0x68)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UMission>>        DirectorMissions;                                  // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        BlacklistIndex;                                    // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOutOfMap;                                         // 0xE4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideMissionAreaWaypoint;                          // 0xE5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F93[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPrimitiveComponent>       AreaComponentClassOverride;                        // 0xE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.ZoneMapChallengeEntry
struct FZoneMapChallengeEntry
{
public:
	class FString                                ChallengeActorName;                                // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            ChallengeWaypointTransform;                        // 0x10(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FIntPoint                             ChallengeWaypointFODTexelCoords;                   // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapSection;                                        // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F94[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UChallenge>                ChallengeClass;                                    // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 ChallengeGUID;                                     // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F95[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.ZoneMapPOIEntry
struct FZoneMapPOIEntry
{
public:
	class UZoneMapPOITypeData*                   PointOfInterestType;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PointOfInterestObjectName;                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F96[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            PointOfInterestTransform;                          // 0x20(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FIntPoint                             PointOfInterestFODTexelCoords;                     // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               CustomPOIData;                                     // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapSection;                                        // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F97[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x290 (0x290 - 0x0)
// ScriptStruct OakGame.ZoneMapIconInfo
struct FZoneMapIconInfo
{
public:
	TWeakObjectPtr<class AActor>                 TargetActor;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMapIconAnchor*                        IconAnchor;                                        // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   IconPOIComponent;                                  // 0x10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AOakZoneMapIcon_POI>    IconActor;                                         // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                IconClass;                                         // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 IconGuid;                                          // 0x28(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IconLocation;                                      // 0x38(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              IconRotation;                                      // 0x44(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UChallengeLevelActorComponent*         ChallengeComponent;                                // 0x50(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x58(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x70(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                IconFrameName;                                     // 0x88(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDynamic;                                        // 0x98(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDynamicInNonCurrentMap;                       // 0x99(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPlayer;                                         // 0x9A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInMiniMap;                                    // 0x9B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInZoneMap;                                    // 0x9C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F98[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FZoneMapPOIEntry                      POIEntry;                                          // 0xA0(0x70)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FZoneMapMissionWaypointEntry          MissionWaypointEntry;                              // 0x110(0xF0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FZoneMapChallengeEntry                ChallengeEntry;                                    // 0x200(0x70)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AOakVehicle*                           TargetedVehicle;                                   // 0x270(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EZoneMapMissionStatus             WaypointStatus;                                    // 0x278(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMissionTrackerIcon;                               // 0x279(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOutOfMapWaypoint;                                 // 0x27A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EZoneMapChallengeStatus           ChallengeStatus;                                   // 0x27B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       ChallengeRadius;                                   // 0x27C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UChallenge>                ChallengeClass;                                    // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F99[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ZoneMapChallengeQuery
struct FZoneMapChallengeQuery
{
public:
	TSubclassOf<class UChallenge>                ChallengeClass;                                    // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EZoneMapChallengeStatus           ChallengeStatus;                                   // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F9A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakZoneMapIcon_POI*                   IconActor;                                         // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.PlayerIconInfo
struct FPlayerIconInfo
{
public:
	class AOakPlayerState*                       AssociatedPlayer;                                  // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakCharacter_Player*                  AssociatedCharacter;                               // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  PlayerIconMesh;                                    // 0x10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LastPlayerLocation;                                // 0x18(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LastPlayerRotation;                                // 0x24(0xC)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.ZoneMapLevelMeshInfo
struct FZoneMapLevelMeshInfo
{
public:
	class UStaticMeshComponent*                  MapMesh;                                           // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              MapMeshDMI;                                        // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  MapTranslucentMesh;                                // 0x10(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              MapTranslucentMeshDMI;                             // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         MeshDisplayCondition;                              // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ZoneMapDynamicPOIEntry
struct FZoneMapDynamicPOIEntry
{
public:
	class UZoneMapPOITypeData*                   POIType;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInMiniMap;                                    // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInZoneMap;                                    // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateOnBigMap;                                   // 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F9B[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.LootableEventResultItem
struct FLootableEventResultItem
{
public:
	int32                                        OrderIndex;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayNameIsInventoryDataName;                   // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F9C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UInventoryNamePartData*>        DisplayNameParts;                                  // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                SerialNumber;                                      // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MonetaryValue;                                     // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InventoryScoreValue;                               // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasAFoilPart;                                     // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F9D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCachedUIStatCollectionData           Stats;                                             // 0x38(0x10)(NativeAccessSpecifierPublic)
	class FString                                Base64EncodedThumbnail;                            // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryBalanceStateComponent*       BalanceStateComp;                                  // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.PenaltyBoxSlot
struct FPenaltyBoxSlot
{
public:
	uint8                                        Pad_6F9E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  Occupant;                                          // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x158 (0x158 - 0x0)
// ScriptStruct OakGame.PetInfo
struct FPetInfo
{
public:
	bool                                         bIsActive;                                         // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLastActive;                                       // 0x1(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6F9F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    PetClass;                                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameResourcePoolData*                 PetCooldownPool;                                   // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameResourcePoolReference            PetCooldownPoolRef;                                // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FEnvQueryParams                       PetSpawnLocationParams;                            // 0x30(0xB8)(Edit, DisableEditOnInstance, RepSkip, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                CurrentPet;                                        // 0xE8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnCount;                                        // 0xF0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LocalSpawnCount;                                   // 0xF4(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPetOwnerComponent*                    PetOwnerComp;                                      // 0xF8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakCharacter_Player*                  OwnerPlayer;                                       // 0x100(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PetRespawnAttemptCooldown;                         // 0x108(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PetVerifyCooldown;                                 // 0x10C(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoNotAllowPetSpawning;                            // 0x110(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FA0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          PetVerificationCooldown;                           // 0x118(0x38)(Edit, DisableEditOnInstance, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        SpawnLocationQueryID;                              // 0x150(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FA1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ShieldEffectStateData
struct FShieldEffectStateData
{
public:
	class UOakStatusEffectManagerComponent*      Owner;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EShieldEffectState                State;                                             // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FA2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize                   RelativeHitLocation;                               // 0xC(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        NextHitTime;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FA3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakPresentationParticleSystemWrapper
struct FOakPresentationParticleSystemWrapper
{
public:
	class UParticleSystemComponent*              Component;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FA4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x34 (0x40 - 0xC)
// ScriptStruct OakGame.OakEffectPresentationItem
struct FOakEffectPresentationItem : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_6FA5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakStatusEffectPresentationData*      FXData;                                            // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EffectValue;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWwisePlaybackInstance                EffectAudioInstance;                               // 0x20(0x18)(RepSkip, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FA7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakPresentationParamTransitionInstance
struct FOakPresentationParamTransitionInstance
{
public:
	class UOakStatusEffectPresentationData*      FXData;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ScreenComponent;                                   // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FA8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct OakGame.AppliedMeshComponentTracker
struct FAppliedMeshComponentTracker
{
public:
	uint8                                        Pad_6FA9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakStatusEffectManagerComponent*      ManagerComponent;                                  // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMeshComponent*>                TrackedMeshes;                                     // 0x10(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        ChildTargetActors;                                 // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FAA[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.OakFreezePresentation
struct FOakFreezePresentation
{
public:
	class UOakFreezeData*                        Data;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDestructibleComponent*>        DestructibleComponents;                            // 0x8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>          StaticMeshComponents;                              // 0x18(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UDecalComponent*                       GroundDecalComponent;                              // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FAB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C8 (0x278 - 0xB0)
// ScriptStruct OakGame.OakEffectPresentationManager
struct FOakEffectPresentationManager : public FFastArraySerializer
{
public:
	class UOakStatusEffectManagerComponent*      Owner;                                             // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakEffectPresentationItem>    Items;                                             // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FOakPresentationParticleSystemWrapper> ParticleSystemWrappers;                            // 0xC8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FOakPresentationParamTransitionInstance> PresentationTransitionInstances;                   // 0xD8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FAC[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakFreezePresentation                FreezePresentation;                                // 0x118(0x40)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAppliedMeshComponentTracker          MeshComponentTracker;                              // 0x158(0xF0)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FAD[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.OakElementalAuraEffectData
struct FOakElementalAuraEffectData
{
public:
	class UOakElementalEffectData*               ElementalEffectData;                               // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageData>               DamageData;                                        // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          DamageRadius;                                      // 0x10(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     DamagedActorModifier;                              // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     DamageCauserModifier;                              // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRate;                                        // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FAE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.OakElementalAuraEffectInstance
struct FOakElementalAuraEffectInstance
{
public:
	struct FOakElementalAuraEffectData           Data;                                              // 0x0(0x60)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FAF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ActiveOakResourceEffectContributor
struct FActiveOakResourceEffectContributor
{
public:
	class AActor*                                OwnerActor;                                        // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FB0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x120 (0x120 - 0x0)
// ScriptStruct OakGame.ActiveOakResourceEffect
struct FActiveOakResourceEffect
{
public:
	struct FOakResourceEffectData                ResourceEffectData;                                // 0x0(0x58)(NoDestructor, NativeAccessSpecifierPublic)
	struct FGameResourcePoolReference            ResourcePoolReference;                             // 0x58(0x18)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FResourceLock                         ResourceLock;                                      // 0x70(0x98)(RepSkip, NativeAccessSpecifierPublic)
	TArray<struct FActiveOakResourceEffectContributor> Contributors;                                      // 0x108(0x10)(ZeroConstructor, RepSkip, NativeAccessSpecifierPublic)
	float                                        CachedStatusValue;                                 // 0x118(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FB1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.StreamerBoosterStatus
struct FStreamerBoosterStatus
{
public:
	class UOakStatusEffectManagerComponent*      Owner;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8                                         PrimaryBoosterStatusIndex;                         // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8                                         SecondaryBoosterStatusIndex;                       // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FB2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeDuration;                                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeRemaining;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FB3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.CSBoosterStatus
struct FCSBoosterStatus
{
public:
	class UOakStatusEffectManagerComponent*      Owner;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8                                         BoosterStatusIndex;                                // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FB4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeDuration;                                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeRemaining;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FB5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.CryoFreezeAssetData
struct FCryoFreezeAssetData
{
public:
	class UDestructibleMesh*                     Mesh;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AssociatedComponentName;                           // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x148 (0x148 - 0x0)
// ScriptStruct OakGame.OakUIInventoryItemDisplayInfo
struct FOakUIInventoryItemDisplayInfo
{
public:
	class FText                                  ItemName;                                          // 0x0(0x18)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	int32                                        ItemLevel;                                         // 0x18(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FB6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ItemDescription;                                   // 0x20(0x18)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	class FText                                  ManufacturerName;                                  // 0x38(0x18)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	int32                                        ItemScore;                                         // 0x50(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNew;                                              // 0x54(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFavorite;                                         // 0x55(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrash;                                            // 0x56(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEquip;                                         // 0x57(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEquipped;                                       // 0x58(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCellLocked;                                       // 0x59(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCellUnavailable;                                  // 0x5A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FB7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UObject>                ReferenceObject;                                   // 0x5C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FB8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture>               ReferencePicture;                                  // 0x68(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupOrderIndex;                                  // 0x90(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInventoryListEntry                   ListEntry;                                         // 0x98(0x78)(BlueprintVisible, Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FInventoryListEntryHandle             ItemHandle;                                        // 0x110(0x4)(BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 ItemActor;                                         // 0x114(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UInventoryRarityData>   RarityData;                                        // 0x11C(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UManufacturerData>      ManufacturerData;                                  // 0x124(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UGbxDamageType>         DamageType;                                        // 0x12C(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FBA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpecialSortName;                                   // 0x138(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakUIInventoryItemUseType        UseType;                                           // 0x140(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCosmeticLabel;                                 // 0x144(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FBB[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.OakLevelSyncMessageText
struct FOakLevelSyncMessageText
{
public:
	class FText                                  TitleText;                                         // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlayerStateDescriptionText;                        // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  AnonymousDescriptionText;                          // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        OnScreenDuration;                                  // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FBC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct OakGame.BrushInfo
struct FBrushInfo
{
public:
	struct FSlateBrush                           SlateBrush;                                        // 0x0(0x88)(NativeAccessSpecifierPublic)
	uint8                                        Pad_6FBD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x168 (0x168 - 0x0)
// ScriptStruct OakGame.UIManagerMessage
struct FUIManagerMessage
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  PlayerName;                                        // 0x18(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x30(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  Glyph;                                             // 0x48(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  CommandText;                                       // 0x60(0x18)(Transient, NativeAccessSpecifierPublic)
	class FString                                IconFrame;                                         // 0x78(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IntroSound;                                        // 0x88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OutroSound;                                        // 0x90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBlocking;                                       // 0x98(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTimedMessage;                                     // 0x99(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FBE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeCreated;                                       // 0x9C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeRemaining;                                     // 0xA0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplaySpinner;                                   // 0xA4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMessageSpecialType               SpecialType;                                       // 0xA5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FBF[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBrushInfo                            BrushInfo;                                         // 0xB0(0x90)(NativeAccessSpecifierPublic)
	struct FMessageHandle                        Handle;                                            // 0x140(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FC0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerState*                       OtherPlayerState;                                  // 0x158(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FC1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.HornSequenceEntry
struct FHornSequenceEntry
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakVehicleAdditiveData
struct FOakVehicleAdditiveData
{
public:
	float                                        VelocityMinTresholdForward;                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityMaxTresholdForward;                        // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityMinTresholdBackward;                       // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityMaxTresholdBackward;                       // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityMinTresholdLateral;                        // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityMaxTresholdLateral;                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontBackMinInterpSpeed;                           // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontBackMaxInterpSpeed;                           // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftRightMinInterpSpeed;                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftRightMaxInterpSpeed;                           // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.VehicleOccupantLoopingFeedback
struct FVehicleOccupantLoopingFeedback
{
public:
	class UFeedbackData*                         FeedbackData;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FC2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APlayerController*>             AffectedControllers;                               // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.PawnAttachCameraModeOptions
struct FPawnAttachCameraModeOptions
{
public:
	float                                        AttachingBlendInTimeOverride;                      // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PersistentBlendInTimeOverride;                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PersistentBlendOutTimeOverride;                    // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DetachingBlendOutTimeOverride;                     // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachingMode;                                     // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PersistentMode;                                    // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetachingMode;                                     // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.VehicleInputParams
struct FVehicleInputParams
{
public:
	TSubclassOf<class UInputComponent>           InputComponentClass;                               // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCameraOverride;                                // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FC3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPawnAttachCameraModeOptions          DriverSeatCameraModeOptionsOverride;               // 0x10(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.SectorDistance
struct FSectorDistance
{
public:
	uint8                                        Pad_6FC4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct OakGame.SectorFromBP
struct FSectorFromBP
{
public:
	class USceneComponent*                       SectorRoot;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  FakeEmissiveWholeFloor;                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseAudioComponent*                  PropaneAudioComponent;                             // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>          HeatingElements;                                   // 0x18(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>          FakeEmissives;                                     // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>          DamageZones;                                       // 0x38(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UParticleSystemComponent*>      Bursts;                                            // 0x48(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UParticleSystemComponent*>      HeatHazes;                                         // 0x58(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UParticleSystemComponent*>      Anticipations;                                     // 0x68(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.Sector
struct FSector
{
public:
	uint8                                        Pad_6FC5[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.Ring
struct FRing
{
public:
	uint8                                        Pad_6FC6[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.AIOOrientedParticleTarget
struct FAIOOrientedParticleTarget
{
public:
	uint8                                        Pad_6FC7[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.AIOOrientedParticleData
struct FAIOOrientedParticleData
{
public:
	class UParticleSystem*                       ParticleSystem;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OriginSocket;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ParticleBeamTargetParameterName;                   // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DefaultBeamTargetPosition;                         // 0x18(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FC8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              ParticleComponent;                                 // 0x28(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIOOrientedParticleTarget            Target;                                            // 0x30(0xC)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FC9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct OakGame.AgonizerAttackDataTableRow
struct FAgonizerAttackDataTableRow : public FTableRowBase
{
public:
	float                                        CooldownMin;                                       // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CooldownMax;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.FloorSectorDistance
struct FFloorSectorDistance
{
public:
	uint8                                        Pad_6FCA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.FloorSector
struct FFloorSector
{
public:
	uint8                                        Pad_6FCB[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.FloorSectorRing
struct FFloorSectorRing
{
public:
	uint8                                        Pad_6FCC[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_DialogCondition
struct FAIAspectSettings_DialogCondition
{
public:
	struct FGbxParam                             Condition;                                         // 0x0(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UDialogEvent*                          DialogEvent;                                       // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_Dialog
struct FAIAspectSettings_Dialog
{
public:
	TArray<struct FAIAspectSettings_DialogCondition> ConditionalDialogEvents;                           // 0x0(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UDialogEvent*                          DialogEvent;                                       // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxNamedParam>                DialogParams;                                      // 0x18(0x10)(Edit, EditFixedSize, ZeroConstructor, NoClear, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UDialogParameter*>              DialogParamAssets;                                 // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxParam                             DialogStartDelay;                                  // 0x38(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             DialogCooldownTime;                                // 0xB8(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseDialogCooldownTime;                            // 0x138(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayOnStop;                                       // 0x139(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FCD[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x34 (0x34 - 0x0)
// ScriptStruct OakGame.PathSegmentSetting
struct FPathSegmentSetting
{
public:
	float                                        ReachDistance;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReachHeight;                                       // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SnapGroundDistance;                                // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxNavGoalModifiers                  GoalModifiers;                                     // 0xC(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_MovePath
struct FAIAspectSettings_MovePath
{
public:
	class FName                                  NodeTag;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPathSegment;                                 // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FCE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPathSegmentSetting                   IntermediatePath;                                  // 0xC(0x34)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_Revive
struct FAIAspectSettings_Revive
{
public:
	struct FGbxBlackboardKeySelector             Target;                                            // 0x0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                             ReviveDistance;                                    // 0x10(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_VehicleArchetype
struct FAIAspectSettings_VehicleArchetype
{
public:
	enum class EVehicleAchetypeNative            VehicleArchetype;                                  // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInverted;                                         // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_VehicleAttitude
struct FAIAspectSettings_VehicleAttitude
{
public:
	enum class ETeamAttitude                     Attitude;                                          // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Inverted;                                          // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_VehicleDriverLeaves
struct FAIAspectSettings_VehicleDriverLeaves
{
public:
	bool                                         bInverted;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_VehicleDriving
struct FAIAspectSettings_VehicleDriving
{
public:
	struct FGbxParam                             DisableTurnHandBrake;                              // 0x0(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.EscortPathValidation
struct FEscortPathValidation
{
public:
	float                                        RotateAngleToSearchPath;                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ValidatePathAnticipationTime;                      // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ValidatePathFowardDistance;                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ValidatePathIteration;                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanGoIfValidationFailed;                          // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FCF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1A0 (0x1A0 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_VehicleEscortSpeed
struct FAIAspectSettings_VehicleEscortSpeed
{
public:
	struct FGbxParam                             NearDistance;                                      // 0x0(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             FarDistance;                                       // 0x80(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             CatchUpSpeed;                                      // 0x100(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        GoalUpdateDistance;                                // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnticipationTime;                                  // 0x184(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bValidatePath;                                     // 0x188(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEscortPathValidation                 EscortPathValidation;                              // 0x18C(0x14)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_VehicleHorn
struct FAIAspectSettings_VehicleHorn
{
public:
	TArray<struct FHornSequenceEntry>            HornSequence;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bStopWithAction;                                   // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_VehicleParts
struct FAIAspectSettings_VehicleParts
{
public:
	TArray<TSoftObjectPtr<class UVehiclePartData>> Parts;                                             // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bInverted;                                         // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x218 (0x218 - 0x0)
// ScriptStruct OakGame.RubberbandSpeed
struct FRubberbandSpeed
{
public:
	struct FGbxBlackboardKeySelector             RubberbandTargetKey;                               // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                             MinDistance;                                       // 0x10(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             MaxDistance;                                       // 0x90(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             MaxSpeed;                                          // 0x110(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             MinSpeed;                                          // 0x190(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bBehindOnly;                                       // 0x210(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x6B8 (0x6B8 - 0x0)
// ScriptStruct OakGame.AIAspectSettings_VehicleSpeed
struct FAIAspectSettings_VehicleSpeed
{
public:
	struct FGbxParam                             WantedSpeed;                                       // 0x0(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseWantedSpeed;                                   // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxParam                             WantedSteering;                                    // 0x88(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseWantedSteering;                                // 0x108(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxParam                             MaxSpeed;                                          // 0x110(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             UseBoost;                                          // 0x190(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             ForceReverse;                                      // 0x210(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             GoBackward;                                        // 0x290(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             ForceHandbrake;                                    // 0x310(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             SpeedHack;                                         // 0x390(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FRubberbandSpeed                      RubberbandSpeed;                                   // 0x410(0x218)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseRubberbandSpeed;                               // 0x628(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxParam                             Duration;                                          // 0x630(0x80)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseDuration;                                      // 0x6B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.AnointedEnemyData
struct FAnointedEnemyData
{
public:
	TSubclassOf<class UGbxAction>                PreFreezeAction;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FailsafeDestroyDelay;                              // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuppressItemPoolsForFailsafeShatter;              // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FD8[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct OakGame.AIPlayThroughData
struct FAIPlayThroughData
{
public:
	uint8                                        bOverrideUIDisplayName : 1;                        // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideDisplayName : 1;                          // Mask: 0x2, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideDropOnDeathItemPools : 1;                 // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideEquippedItems : 1;                        // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideHealthInformation : 1;                    // Mask: 0x10, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_270 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6FD9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxUIName*                            DisplayUIName;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(NativeAccessSpecifierPublic)
	struct FItemPoolCollection                   DropOnDeathItemPools;                              // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FItemPoolCollection                   EquippedItemPoolCollection;                        // 0x48(0x20)(Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FItemPoolCollection>           EquippedItemPoolCollections;                       // 0x68(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bEquipSingleItemFromCollection;                    // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FDA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeBaseValueData>       AttributeStartingValues;                           // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   BalanceTableRow;                                   // 0x90(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FHealthType>                   HealthInformation;                                 // 0xA0(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.AILootDropOverride
struct FAILootDropOverride
{
public:
	uint8                                        bOverrideDropPattern : 1;                          // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideSocketName : 1;                           // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisabledByDefault : 1;                            // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_271 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6FDB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SocketName;                                        // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULootSpawnPatternData*                 OverrideDropPattern;                               // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DodgeVOInfo
struct FDodgeVOInfo
{
public:
	class UDialogEvent*                          DialogEvent;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterSoundTag*                    VocalizationTag;                                   // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.AIOCameraEntryTransition
struct FAIOCameraEntryTransition
{
public:
	class FName                                  TransitionName;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                         AngleRange;                                        // 0x8(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               StartLocation;                                     // 0x10(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideLocationDuration;                         // 0x1C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FDC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LocationDurationOverride;                          // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideRotationDuration;                         // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FDD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationDurationOverride;                          // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FDE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.AIOCameraStatePostProcessOverrides
struct FAIOCameraStatePostProcessOverrides
{
public:
	uint8                                        bOverrideFocalDistance : 1;                        // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideFarTransitionRegion : 1;                  // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideNearTransitionRegion : 1;                 // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideFocalRegion : 1;                          // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideFarBlurSize : 1;                          // Mask: 0x10, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideNearBlurSize : 1;                         // Mask: 0x20, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideVignetteIntensity : 1;                    // Mask: 0x40, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_272 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6FDF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FocalDistanceOverride;                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarTransitionRegionOverride;                       // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearTransitionRegionOverride;                      // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FocalRegionOverride;                               // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarBlurSizeOverride;                               // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearBlurSizeOverride;                              // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VignetteIntensityOverride;                         // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct OakGame.AIOCameraStateInfo
struct FAIOCameraStateInfo
{
public:
	class FName                                  StateName;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation;                                    // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocationSplitscreen;                         // 0x14(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocationVerticalSplitscreen;                 // 0x20(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocationQuadSplitscreen;                     // 0x2C(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLookAtLocation;                              // 0x38(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLookAtLocationSplitscreen;                   // 0x44(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLookAtLocationVerticalSplitscreen;           // 0x50(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLookAtLocationQuadSplitscreen;               // 0x5C(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxEasingFunc                        Easing;                                            // 0x68(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TransitionDuration;                                // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIOCameraStatePostProcessOverrides   PostProcessOverrides;                              // 0x78(0x20)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ReplicatedStolenProjectileData
struct FReplicatedStolenProjectileData
{
public:
	class FName                                  Socket;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Projectile;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1A10 (0x1B50 - 0x140)
// ScriptStruct OakGame.AnimNode_Carnivora
struct FAnimNode_Carnivora : public FAnimNode_SkeletalControlBase
{
public:
	float                                        MaxYawFrontWheel;                                  // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinYawFrontWheel;                                  // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawTireTrack;                                   // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinYawTireTrack;                                   // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTrackShaftBoneScale;                            // 0x150(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTrackShaftBoneScale;                            // 0x154(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontWheelsMinHeight;                              // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontWheelsMaxHeight;                              // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TireTrackMinHeight;                                // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TireTrackMaxHeight;                                // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrontWheelRadius;                                  // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TireTrackWheelsRadius;                             // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmallGearRadius;                                   // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BigAxleRadius;                                     // 0x174(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MainAxleRadius;                                    // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FE0[0x19D4];                                  // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1990 (0x1AD0 - 0x140)
// ScriptStruct OakGame.AnimNode_EmperorHandler
struct FAnimNode_EmperorHandler : public FAnimNode_SkeletalControlBase
{
public:
	float                                        SuspensionDropMaxSpeed;                            // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingInterpolationSpeed;                         // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SlidingDisplacement;                               // 0x148(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinPeriod1;                                        // 0x150(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinPeriod2;                                        // 0x154(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinPeriod3;                                        // 0x158(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinAmplitude1;                                     // 0x15C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinAmplitude2;                                     // 0x160(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinAmplitude3;                                     // 0x164(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwivelConeX;                                       // 0x168(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwivelConeY;                                       // 0x16C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverIntrepSpeed;                                  // 0x170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverBodyHeigth;                                   // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InoccupiedHoverBodyHeigth;                         // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FE1[0x1954];                                  // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x870 (0x9B0 - 0x140)
// ScriptStruct OakGame.AnimNode_OutrunnerBooster
struct FAnimNode_OutrunnerBooster : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                        Pad_6FE2[0x870];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.RoadBumpinessDataOutrunner
struct FRoadBumpinessDataOutrunner
{
public:
	enum class EPhysicalSurface                  SurfaceType;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FE3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Bumpiness;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct OakGame.HoverBodySinusOutrunner
struct FHoverBodySinusOutrunner
{
public:
	struct FVector                               HoverScale;                                        // 0x0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetX;                                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetY;                                           // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Frequency;                                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Amplitude;                                         // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1700 (0x1840 - 0x140)
// ScriptStruct OakGame.AnimNode_OutrunnerHandler
struct FAnimNode_OutrunnerHandler : public FAnimNode_SkeletalControlBase
{
public:
	float                                        SuspensionDropMaxSpeed;                            // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelInterpSpeed;                                  // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationTreshold;                              // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningVelocityTreshold;                           // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchInterpSpeed;                                  // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollInterpSpeed;                                   // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMaxAngle;                                      // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostAlphaInterSpeed;                              // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BankingBoostAlpha;                                 // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FE4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    PitchAccelerationCurve;                            // 0x168(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    TranslationUpAccelerationCurve;                    // 0x1E0(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        MaxSteeringAngle;                                  // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoostBodyTranslation;                              // 0x25C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostBodyPitchAdd;                                 // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceAmplitudePitchHighFreq;                 // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceFrequencyPitchHighFreq;                 // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceFrequencyRollFreq;                      // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfacePersistencePitchHighFreq;               // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RoadSurfaceOctavesPitchHighFreq;                   // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceAmplitudePitchLowFreq;                  // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceFrequencyPitchLowFreq;                  // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfacePersistencePitchLowFreq;                // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RoadSurfaceOctavesPitchLowFreq;                    // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyFollowSpeedOfPitch;                            // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyFollowAmplitudeMultiplier;                     // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeToSwitch;                                   // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTimeToSwitch;                                   // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinBumpTimeValue;                                  // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBumpTimeValue;                                  // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAlphaValue;                                     // 0x2A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAlphaValue;                                     // 0x2AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinInterpSpeed;                                    // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInterpSpeed;                                    // 0x2B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultRoadBumpiness;                              // 0x2B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FE5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRoadBumpinessDataOutrunner>   RoadBumpinessOverrides;                            // 0x2C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                        HoverWheelSpeedWhenTurningOnSelf;                  // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverWheelAngle;                                   // 0x2D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HoverWheelRearLeftPos;                             // 0x2D8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HoverWheelRearRightPos;                            // 0x2E4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSpinSpeedIdle;                                // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverOffsetZ;                                      // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSuspensionArmAngleOffset;                     // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSuspensionArmAmplitude;                       // 0x2FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSuspensionArmSpeed;                           // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverMaxPitchAngle;                                // 0x304(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverMaxRollAngle;                                 // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSpinSpeedFullTrottle;                         // 0x30C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSpinMaxSpeedAngularVelocity;                  // 0x310(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverMaxVelocity;                                  // 0x314(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverPitchInterpSpeed;                             // 0x318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverPitchBoostingInterpSpeed;                     // 0x31C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverRollInterpSpeed;                              // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverBodyAccelTreshold;                            // 0x324(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverBodyActiveBlend;                              // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverVelocityIntensityX;                           // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverVelocityIntensityY;                           // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverWheelRotationIntensity;                       // 0x334(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverWheelRotationIntensityY;                      // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FE6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHoverBodySinusOutrunner>      HoverBodySin;                                      // 0x340(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector2D                             SwivelCone;                                        // 0x350(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    HoverBodyTransitionCurve;                          // 0x358(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FE7[0x1470];                                  // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x340 (0x480 - 0x140)
// ScriptStruct OakGame.AnimNode_RevolverBooster
struct FAnimNode_RevolverBooster : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                        Pad_6FE8[0x314];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BodyCycleFromEngineCycleRatio;                     // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleRPM;                                           // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineRunningAmplitude;                            // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineIdleAmplitude;                               // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MufflerAmplitudeMutliplier;                        // 0x464(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineRunningFrequency;                            // 0x468(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EngineIdleFrequency;                               // 0x46C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MufflerFrequencyMutliplier;                        // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FE9[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x460 (0x5A0 - 0x140)
// ScriptStruct OakGame.AnimNode_RevolverHandler
struct FAnimNode_RevolverHandler : public FAnimNode_SkeletalControlBase
{
public:
	float                                        MaxSteeringAngle;                                  // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinPeriod1;                                        // 0x144(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinPeriod2;                                        // 0x148(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinPeriod3;                                        // 0x14C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinAmplitude1;                                     // 0x150(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinAmplitude2;                                     // 0x154(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinAmplitude3;                                     // 0x158(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwivelConeX;                                       // 0x15C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwivelConeY;                                       // 0x160(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwivelPeriodX;                                     // 0x164(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwivelPeriodY;                                     // 0x168(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverIntrepSpeed;                                  // 0x16C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyCompensationInterpSpeed;                       // 0x170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverBodyCompensationInterpSpeed;                  // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyOffsetInterpSpeed;                             // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyHoverOffset;                                   // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PositionOffsetFromRotation;                        // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverMaxPitchAngle;                                // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverMaxRollAngle;                                 // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverPitchInterpSpeed;                             // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverPitchBoostingInterpSpeed;                     // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverRollInterpSpeed;                              // 0x194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    AccelerationCurve;                                 // 0x198(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FEA[0x390];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct OakGame.HoverBodySinus
struct FHoverBodySinus
{
public:
	struct FVector                               HoverScale;                                        // 0x0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetX;                                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetY;                                           // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Frequency;                                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Amplitude;                                         // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.RoadBumpinessData
struct FRoadBumpinessData
{
public:
	enum class EPhysicalSurface                  SurfaceType;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FEB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Bumpiness;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2BF0 (0x2D30 - 0x140)
// ScriptStruct OakGame.AnimNode_TechnicalHandler
struct FAnimNode_TechnicalHandler : public FAnimNode_SkeletalControlBase
{
public:
	float                                        SuspensionDropMaxSpeed;                            // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SuspensionCamberCurve;                             // 0x148(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        CamberIntensity;                                   // 0x1C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BigWheelsBodyZ;                                    // 0x1C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationTreshold;                              // 0x1C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurningVelocityTreshold;                           // 0x1CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchInterpSpeed;                                  // 0x1D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollInterpSpeed;                                   // 0x1D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMaxAngle;                                      // 0x1D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BankingBoostAlpha;                                 // 0x1DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    PitchAccelerationCurve;                            // 0x1E0(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        BoostBodyPitchAdd;                                 // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostBodyUpAdd;                                    // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSteeringAngle;                                  // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceAmplitudePitchHighFreq;                 // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceFrequencyPitchHighFreq;                 // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceFrequencyRollFreq;                      // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfacePersistencePitchHighFreq;               // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RoadSurfaceOctavesPitchHighFreq;                   // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceAmplitudePitchLowFreq;                  // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfaceFrequencyPitchLowFreq;                  // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RoadSurfacePersistencePitchLowFreq;                // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RoadSurfaceOctavesPitchLowFreq;                    // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyFollowSpeedOfPitch;                            // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyFollowAmplitudeMultiplier;                     // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeToSwitch;                                   // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTimeToSwitch;                                   // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinBumpTimeValue;                                  // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBumpTimeValue;                                  // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAlphaValue;                                     // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAlphaValue;                                     // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinInterpSpeed;                                    // 0x2A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInterpSpeed;                                    // 0x2AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultRoadBumpiness;                              // 0x2B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_6FED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRoadBumpinessData>            RoadBumpinessOverrides;                            // 0x2B8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                        EngineAmplitude;                                   // 0x2C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyCycleFromEngineCycleRatio;                     // 0x2CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleRPM;                                           // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverWheelAngle;                                   // 0x2D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSpinSpeedIdle;                                // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSpinSpeedFullTrottle;                         // 0x2DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverOffsetZ;                                      // 0x2E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverFrontWheelAdd;                                // 0x2E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverMaxVelocity;                                  // 0x2E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSuspensionIntensityUp;                        // 0x2EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverSuspensionIntensityDown;                      // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FEE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHoverBodySinus>               HoverBodySin;                                      // 0x2F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector2D                             SwivelCone;                                        // 0x308(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverMaxPitchAngle;                                // 0x310(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverMaxRollAngle;                                 // 0x314(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverPitchInterpSpeed;                             // 0x318(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverPitchBoostingInterpSpeed;                     // 0x31C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverRollInterpSpeed;                              // 0x320(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverWheelRotationIntensity;                       // 0x324(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverWheelRotationIntensityY;                      // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FEF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    HoverBodyTransitionCurve;                          // 0x330(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF0[0x2988];                                  // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x760 (0x8A0 - 0x140)
// ScriptStruct OakGame.AnimNode_TrailerHandler
struct FAnimNode_TrailerHandler : public FAnimNode_SkeletalControlBase
{
public:
	float                                        SuspensionDropMaxSpeed;                            // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF1[0x75C];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1480 (0x15C0 - 0x140)
// ScriptStruct OakGame.AnimNode_WeaponVehicleHandler
struct FAnimNode_WeaponVehicleHandler : public FAnimNode_SkeletalControlBase
{
public:
	bool                                         bUseYawBone;                                       // 0x140(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePitchBone;                                     // 0x141(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PitchMinAngleClamp;                                // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchMaxAngleClamp;                                // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseProjectileBone;                                // 0x14C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDualWeapon;                                     // 0x14D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseBoneReTargeting;                               // 0x14E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF3[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBoneReference                        SourceBone;                                        // 0x150(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        DestBone;                                          // 0x168(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF4[0x1440];                                  // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.BlackJackCardDefinition
struct FBlackJackCardDefinition
{
public:
	class FString                                DebugString;                                       // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CardValue;                                         // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SuitIndex;                                         // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CardIndex;                                         // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x100 (0x108 - 0x8)
// ScriptStruct OakGame.BodyArmorMaterialModParameterSetData
struct FBodyArmorMaterialModParameterSetData : public FTableRowBase
{
public:
	struct FLinearColor                          GBX_Soft1;                                         // 0x8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Soft2;                                         // 0x18(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Soft3;                                         // 0x28(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Soft4;                                         // 0x38(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Hard1;                                         // 0x48(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Hard2;                                         // 0x58(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Hard3;                                         // 0x68(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Hard4;                                         // 0x78(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Parchment;                                     // 0x88(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_SkinHard;                                      // 0x98(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_SkinSoft;                                      // 0xA8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Hair1;                                         // 0xB8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Hair2;                                         // 0xC8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Teeth;                                         // 0xD8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Nails;                                         // 0xE8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          GBX_Tongue;                                        // 0xF8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.BodyArmorMaterialModParameterData
struct FBodyArmorMaterialModParameterData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Value;                                             // 0x8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.BodyArmorNamingData
struct FBodyArmorNamingData
{
public:
	class FName                                  FirstPartName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondPartName;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryNamePartData*                NamePart;                                          // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct OakGame.DialogParameterValuePair
struct FDialogParameterValuePair
{
public:
	class UDialogParameter*                      Parameter;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                             Value;                                             // 0x8(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.LadderBehaviorGoalParams
struct FLadderBehaviorGoalParams
{
public:
	uint8                                        bControlPitch : 1;                                 // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bControlYaw : 1;                                   // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInterruptedByInput : 1;                           // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisableInput : 1;                                 // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_273 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_6FF6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInitialRotationAxisParams            Pitch;                                             // 0x8(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FInitialRotationAxisParams            Yaw;                                               // 0x38(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct OakGame.CameraIntroBlend
struct FCameraIntroBlend
{
public:
	float                                        TimeBeforeAllowingMovingCamera;                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartBlend;                                        // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndBlend;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseACurve;                                        // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    BlendByCurve;                                      // 0x10(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        DampingLocation;                                   // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DampingRotation;                                   // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.CameraPitchOffset
struct FCameraPitchOffset
{
public:
	float                                        KeyYawAngle;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardOffset;                                     // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardOffset;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DampingBankingRatio;                               // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CloneSymmetricalKey;                               // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FF9[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct OakGame.CameraKeyOffset
struct FCameraKeyOffset
{
public:
	bool                                         TeleportFromStart;                                 // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FFA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LookAtLocationOffset;                              // 0x4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalCameraLocationOffset;                         // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LocalCameraRotationOffset;                         // 0x1C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        AddedFOV;                                          // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.CarnivoraFakeTurrets
struct FCarnivoraFakeTurrets
{
public:
	enum class ECarnivoraFakeTurretShootingStyle ShootingStyle;                                     // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FFB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDelayBetweenBurstWave;                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDelayInsideBurstShot;                           // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbBulletPerBurst;                                  // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULightProjectileData>      LightProjectileData;                               // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileSpeed;                                   // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPrediction;                                     // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Range;                                             // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromPoint;                                 // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAngle;                                          // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectHitPct;                                      // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadAngle;                                       // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DrawDebugProjectileLine;                           // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FFC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentTargetActor;                                // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FFD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.SplineTriggers
struct FSplineTriggers
{
public:
	TSoftObjectPtr<class AOakTriggerBox>         Trigger;                                           // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ACarnivoraTrackBuilder> Spline;                                            // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsReverse;                                        // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FFE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NextSplineTriggerId;                               // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.WheelState
struct FWheelState
{
public:
	float                                        RelativeSpeed;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6FFF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x6E0 - 0x6C0)
// ScriptStruct OakGame.CarnivoraAnimInstanceProxy
struct FCarnivoraAnimInstanceProxy : public FAnimInstanceProxy
{
public:
	uint8                                        Pad_7000[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.CarnivoraDamageZoneInfo
struct FCarnivoraDamageZoneInfo
{
public:
	float                                        FrontDamageMultiplier;                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SideDamageMultiplier;                              // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackDamageMultiplier;                              // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct OakGame.OakCARMenuVehicleConfigSaveData
struct FOakCARMenuVehicleConfigSaveData
{
public:
	class FString                                LoadoutSaveName;                                   // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BodyAssetPath;                                     // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WheelAssetPath;                                    // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ArmorAssetPath;                                    // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CoreModAssetPath;                                  // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GunnerWeaponAssetPath;                             // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DriverWeaponAssetPath;                             // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OrnamentAssetPath;                                 // 0x70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MaterialDecalAssetPath;                            // 0x80(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MaterialAssetPath;                                 // 0x90(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ColorIndex1;                                       // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ColorIndex2;                                       // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ColorIndex3;                                       // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7001[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.ChallengeFilterType
struct FChallengeFilterType
{
public:
	class FName                                  FilterId;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  FilterName;                                        // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bIncludedCategoriesIsBlacklist;                    // 0x20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7002[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UChallengeCategoryData*>        IncludedCategories;                                // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.CharacterGroundSlamGradeData
struct FCharacterGroundSlamGradeData
{
public:
	float                                        MinimumHeight;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7003[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UControlledMove>           ControlledMove;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                StartAction;                                       // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingDistance;                                   // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7004[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                LandingAction;                                     // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.CharacterItemPoolExpansionInfo
struct FCharacterItemPoolExpansionInfo
{
public:
	TArray<struct FItemPoolInfo>                 DropOnDeathItemPools;                              // 0x0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UItemPoolExpansionData>> ItemPoolExpansions;                                // 0x10(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};

// 0x150 (0x150 - 0x0)
// ScriptStruct OakGame.ElementalSlideEffect
struct FElementalSlideEffect
{
public:
	struct FImpactResponseEffect                 DefaultResponse;                                   // 0x0(0x140)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FImpactResponseInfo>           ImpactResponses;                                   // 0x140(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.LastCollisionDamageInfo
struct FLastCollisionDamageInfo
{
public:
	class AActor*                                HitActor;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOwnerIsCollider;                                  // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7005[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RelativeVelocity;                                  // 0xC(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.TextElementCondition
struct FTextElementCondition
{
public:
	class UGbxCondition*                         Condition;                                         // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TextToAdd;                                         // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.CorpseRecord
struct FCorpseRecord
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorpseStartTime;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7006[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.CosmeticDamageEventDetails
struct FCosmeticDamageEventDetails
{
public:
	float                                        Damage;                                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitLocation;                                       // 0x4(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitDirection;                                      // 0x10(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7007[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Instigator;                                        // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             DamageSource;                                      // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.DaffodilChallengeBonusObjectiveData
struct FDaffodilChallengeBonusObjectiveData
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UChallenge>                Challenge;                                         // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplicateSubChallenges;                           // 0x20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7008[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.DaffodilChallengeBonusData
struct FDaffodilChallengeBonusData
{
public:
	enum class EDaffodilChallengeBonusCategory   Category;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7009[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Name;                                              // 0x8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  Description;                                       // 0x20(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDaffodilChallengeBonusObjectiveData> Objectives;                                        // 0x38(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAttributeEffectData>          RewardAttributeEffects;                            // 0x48(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            Icon;                                              // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUIStatData*>                   RewardUIStats;                                     // 0x60(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.SlideClassWrapper
struct FSlideClassWrapper
{
public:
	class UClass*                                SlideClass;                                        // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_700A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct OakGame.IncomingDamagePresentationGenericData
struct FIncomingDamagePresentationGenericData
{
public:
	uint8                                        Pad_700B[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct OakGame.IncomingDamagePresentationGlobalInfo
struct FIncomingDamagePresentationGlobalInfo
{
public:
	class UParticleSystem*                       ScreenParticleHealth;                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ScreenParticleShield;                              // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ScreenParticleArmor;                               // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ScreenParticleHealth_SplitScreen;                  // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ScreenParticleShield_SplitScreen;                  // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ScreenParticleArmor_SplitScreen;                   // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DirectionalParticleEventName;                      // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DirectionalEmitterName;                            // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumDirectionalParticles;                        // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_700C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FullParticleEventName;                             // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FullEmitterName;                                   // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageSeverityParameterName;                       // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageDirectionParameterName;                      // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageParticleDirectionQuantization;               // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AspectRatioThresholdToUseWidescreenParticles;      // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlinchAnimationStregthNoise;                       // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlinchAnimationAngleNoise;                         // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadialBlurMaxDistance;                             // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIncomingDamagePresentationGenericData PresentationLevels[0x4];                           // 0x7C(0x4)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct OakGame.IncomingDamagePresentationData
struct FIncomingDamagePresentationData
{
public:
	struct FAttributeInitializationData          DamageThreshold;                                   // 0x0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          DamageScore;                                       // 0x38(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          DamageScoreThreshold;                              // 0x70(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UFeedbackData*                         FeedbackData;                                      // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           HealthAudioEvent;                                  // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ShieldAudioEvent;                                  // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           ArmorAudioEvent;                                   // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageSeverityParticleParamValue;                  // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmsAnimationFlinchStrength;                       // 0xCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseRadialBlur;                                    // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_700D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRadialBlurSelection                  RadialBlur;                                        // 0xD4(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x380 (0x380 - 0x0)
// ScriptStruct OakGame.IncomingDamagePresentationGroup
struct FIncomingDamagePresentationGroup
{
public:
	struct FIncomingDamagePresentationData       PresentationLevels[0x4];                           // 0x0(0x380)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x390 (0x390 - 0x0)
// ScriptStruct OakGame.IncomingDamagePresentationSource
struct FIncomingDamagePresentationSource
{
public:
	TArray<TSubclassOf<class UDamageSource>>     DamageSources;                                     // 0x0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FIncomingDamagePresentationGroup      PresentationGroup;                                 // 0x10(0x380)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.DebugMenuCommandItemData
struct FDebugMenuCommandItemData
{
public:
	class FName                                  Category;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Label;                                             // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FString                                ExecCommand;                                       // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.DebugMenuGradebox
struct FDebugMenuGradebox
{
public:
	class UCanvasPanel*                          Panel;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Image;                                             // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Description;                                       // 0x10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTextBlock*>                    Atts;                                              // 0x18(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxReportTag
struct FGbxReportTag
{
public:
	bool                                         bShowInMenu;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_700E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Tag;                                               // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ManagedNPCIO
struct FManagedNPCIO
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkinnedMeshComponent*                 Component;                                         // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DefaultCrosshairData
struct FDefaultCrosshairData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        XSpread;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YSpread;                                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.CullableIO
struct FCullableIO
{
public:
	enum class ECullableIORequirement            CullableIORequirement;                             // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_700F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DiscoveredAreaInfo
struct FDiscoveredAreaInfo
{
public:
	class FName                                  DiscoveredAreaName;                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       PlaythroughBits;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7010[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.DiscoveredLevelInfo
struct FDiscoveredLevelInfo
{
public:
	class FName                                  DiscoveredLevelName;                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDiscoveredAreaInfo>           DiscoveredAreas;                                   // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint32                                       PlaythroughBits;                                   // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7011[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DiscoverySaveData
struct FDiscoverySaveData
{
public:
	TArray<struct FDiscoveredLevelInfo>          DiscoveredLevelInfo;                               // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.DiscoveredPlanetInfo
struct FDiscoveredPlanetInfo
{
public:
	TSoftObjectPtr<class UPlanetData>            DiscoveredPlanet;                                  // 0x0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsNewPlanet;                                      // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7012[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.SpawnedLTSSpawnLocations
struct FSpawnedLTSSpawnLocations
{
public:
	struct FTransform                            BaseTransform;                                     // 0x0(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                    SpawnRelativeTransforms;                           // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.CharacterCreationAspectOfTheVaultExpansionData
struct FCharacterCreationAspectOfTheVaultExpansionData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAspectData*                  AspectDataAsset;                                   // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DlcLevelTravelPair
struct FDlcLevelTravelPair
{
public:
	class UTravelStationData*                    NonDlcStationData;                                 // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTravelStationData*                    DlcStationData;                                    // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PlayerDuelArenaState
struct FPlayerDuelArenaState
{
public:
	class AOakCharacter_Player*                  Player;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7013[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.DuelingNumParticipantsInfo
struct FDuelingNumParticipantsInfo
{
public:
	int32                                        NumPlayers;                                        // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxArenaSize;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DuelLength;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.DuelModeSettings
struct FDuelModeSettings
{
public:
	float                                        DuelArenaTimeout;                                  // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DuelChallengeTimeout;                              // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDuelStartDelay;                                // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7014[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DuelStartDelay;                                    // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDuelingNumParticipantsInfo>   NumParticipantsInfo;                               // 0x10(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        DuelTotemSpawnTraceVertOffset;                     // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DuelTotemSpawnInFrontDistance;                     // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DuelTotemSpawnFindGroundDistance;                  // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7015[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DuelTeamGroup
struct FDuelTeamGroup
{
public:
	TArray<class UTeam*>                         PlayerIndexToTeam;                                 // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.PlayerDueling_SavedInfo
struct FPlayerDueling_SavedInfo
{
public:
	class UTeam*                                 Team;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.PlayerActiveDuelState
struct FPlayerActiveDuelState
{
public:
	class AOakCharacter_Player*                  PlayerCharacter;                                   // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMainPlayer;                                     // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7016[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTeam*                                 DuelTeam;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlayerDueling_SavedInfo              SavedInfo;                                         // 0x18(0x8)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.TeamActiveDuelState
struct FTeamActiveDuelState
{
public:
	class UTeam*                                 DuelTeam;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlayerActiveDuelState>        Players;                                           // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.DuelLoserState
struct FDuelLoserState
{
public:
	class AOakCharacter_Player*                  Player;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDuelLoseReason                   LoseReason;                                        // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7017[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.ActiveDuelState
struct FActiveDuelState
{
public:
	TArray<struct FTeamActiveDuelState>          ParticipatingTeams;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class ADuelArena*                            DuelArena;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADuelTotem*                            DuelTotem;                                         // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakCharacter_Player*                  DuelInstigator;                                    // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTeam*                                 WinningTeam;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDuelLoserState>               DuelLosers;                                        // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class APlayerTradeManager*                   TradeManager;                                      // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActiveIndex;                                       // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDuelClassification               Classification;                                    // 0x4C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7018[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.EchoInfo
struct FEchoInfo
{
public:
	int32                                        DialogPlayingID;                                   // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7019[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxDialogComponent*                   Caller;                                            // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterEchoData*                    CharacterData;                                     // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPerformanceEchoData*                  PerformanceData;                                   // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWwisePlaybackInstance                AudioInstance;                                     // 0x20(0x18)(Transient, NativeAccessSpecifierPublic)
	class FString                                MoodKeyframeToUse;                                 // 0x38(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VoGMoodKeyToUse;                                   // 0x48(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVoiceOfGodSpeaker                VoGSpeakerID;                                      // 0x58(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceEchoOnly;                                    // 0x59(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_701A[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DeferredElementalInteractionPrimitiveOverlapData
struct FDeferredElementalInteractionPrimitiveOverlapData
{
public:
	class UPrimitiveComponent*                   SelfComponent;                                     // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   OtherComponent;                                    // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DeferredElementalInteractionOverlapData
struct FDeferredElementalInteractionOverlapData
{
public:
	TArray<struct FDeferredElementalInteractionPrimitiveOverlapData> PrimitiveOverlaps;                                 // 0x0(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.ElementalInteractionDamageOverlapData
struct FElementalInteractionDamageOverlapData
{
public:
	uint8                                        Pad_701B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.ElementalInteractionDamageValuesData
struct FElementalInteractionDamageValuesData
{
public:
	uint8                                        Pad_701C[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.ElementalDamageTriggeredInteractionData
struct FElementalDamageTriggeredInteractionData
{
public:
	class UElementalInteractionData*             Interaction;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitLocation;                                       // 0x8(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_701D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           InstigatorController;                              // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_701E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.ElementalInteractionComponentReference
struct FElementalInteractionComponentReference
{
public:
	class UElementalInteractionComponent*        Component;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.ElementalInteractionActorReference
struct FElementalInteractionActorReference
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct OakGame.SupportedElementalInteractionData
struct FSupportedElementalInteractionData
{
public:
	class UElementalInteractionData*             State;                                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionTimeScale;                               // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageTriggeredTransitionTimeScale;                // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverrideDamageTriggeredSourceDuration;             // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideDamageAmount : 1;                         // Mask: 0x1, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideBaseStatusEffectChance : 1;               // Mask: 0x2, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideBaseStatusEffectDamage : 1;               // Mask: 0x4, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideBaseStatusEffectDuration : 1;             // Mask: 0x8, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBaseStatusEffectDamageIsPercent : 1;              // Mask: 0x10, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_274 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_701F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          OverrideDamageAmount;                              // 0x18(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          OverrideBaseStatusEffectChance;                    // 0x50(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          OverrideBaseStatusEffectDamage;                    // 0x88(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          OverrideBaseStatusEffectDuration;                  // 0xC0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ElementalInteractionTransitionData
struct FElementalInteractionTransitionData
{
public:
	class UElementalInteractionData*             SourceInteraction;                                 // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElementalInteractionData*             TargetInteraction;                                 // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TransitionTime;                                    // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageTriggeredTransitionTime;                     // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x8 (0x58 - 0x50)
// ScriptStruct OakGame.ElementalInteractionManagerPostPhysicsTickFunction
struct FElementalInteractionManagerPostPhysicsTickFunction : public FTickFunction
{
public:
	uint8                                        Pad_7020[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct OakGame.ActorElementalInteractionDamageData
struct FActorElementalInteractionDamageData
{
public:
	TMap<struct FElementalInteractionComponentReference, struct FElementalInteractionDamageValuesData> DamageMap;                                         // 0x0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_7021[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           InstigatorController;                              // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7022[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.ActorElementalDamageData
struct FActorElementalDamageData
{
public:
	TMap<TSubclassOf<class UGbxDamageType>, struct FActorElementalInteractionDamageData> DamageInteractions;                                // 0x0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        DamageCount;                                       // 0x50(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7023[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.ElementalPuddleTransitionConfigurationData
struct FElementalPuddleTransitionConfigurationData
{
public:
	class UMaterialInterface*                    DecalMaterial;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MeshMaterial;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWwiseEvent*                           AudioLoop;                                         // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicalMaterial*                     PhysMatOverride;                                   // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          EmitterNames;                                      // 0x20(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0xA0 (0x780 - 0x6E0)
// ScriptStruct OakGame.OakVehicleAnimInstanceProxy
struct FOakVehicleAnimInstanceProxy : public FVehicleAnimInstanceProxy
{
public:
	uint8                                        Pad_7024[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x7F0 - 0x780)
// ScriptStruct OakGame.EmperorVehicleAnimInstanceProxy
struct FEmperorVehicleAnimInstanceProxy : public FOakVehicleAnimInstanceProxy
{
public:
	uint8                                        Pad_7025[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OWContextSpawnedAIContainer
struct FOWContextSpawnedAIContainer
{
public:
	class AActor*                                Owner;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnOptionData*                      SpawnData;                                         // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7026[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.FoundGoodOWContextLocationContainer
struct FFoundGoodOWContextLocationContainer
{
public:
	uint8                                        Pad_7027[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.BasicDungeonObjective
struct FBasicDungeonObjective
{
public:
	TSubclassOf<class UDungeonBonusObjective>    ObjectiveClass;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ObjectiveActor;                                    // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDungeonObjectiveType             ObjectiveType;                                     // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBonus;                                          // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedProgressBar;                                  // 0x12(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedTimer;                                        // 0x13(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7028[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD0 (0xD8 - 0x8)
// ScriptStruct OakGame.ModeKillAllThreeWavesTableEntry
struct FModeKillAllThreeWavesTableEntry : public FTableRowBase
{
public:
	enum class EEncounterArmy                    MainArmy;                                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEncounterArmy                    SecondaryArmy;                                     // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7029[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USpawnOptionData>       SpawnOption;                                       // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnerStyle_Encounter_Dungeon> SpawnStyle;                                        // 0x38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOverworldRepresentationType      Representation;                                    // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_702A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Weight;                                            // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            EnableObjective;                                   // 0x68(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            DisableObjective;                                  // 0x98(0x30)(Edit, NativeAccessSpecifierPublic)
	TArray<class FString>                        FilterTags;                                        // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct OakGame.BonusObjectivesArmyFilters
struct FBonusObjectivesArmyFilters : public FTableRowBase
{
public:
	enum class EBonusObjectiveType               BonusObjectiveType;                                // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_702B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        FilterTags;                                        // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD8 - 0x8)
// ScriptStruct OakGame.ModeKillAllTwoWavesTableEntry
struct FModeKillAllTwoWavesTableEntry : public FTableRowBase
{
public:
	enum class EEncounterArmy                    MainArmy;                                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEncounterArmy                    SecondaryArmy;                                     // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_702C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USpawnOptionData>       SpawnOption;                                       // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnerStyle_Encounter_Dungeon> SpawnStyle;                                        // 0x38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_702D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReference            EnableObjective;                                   // 0x68(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            DisableObjective;                                  // 0x98(0x30)(Edit, NativeAccessSpecifierPublic)
	TArray<class FString>                        FilterTags;                                        // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct OakGame.ModeKillAllTwoWavesNamedBadassTableEntry
struct FModeKillAllTwoWavesNamedBadassTableEntry : public FTableRowBase
{
public:
	TSoftObjectPtr<class USpawnOptionData>       SpawnOption;                                       // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD8 - 0x8)
// ScriptStruct OakGame.ModeKillMiniBossArmyTableEntry
struct FModeKillMiniBossArmyTableEntry : public FTableRowBase
{
public:
	enum class EEncounterArmy                    ArmyType;                                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_702E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USpawnOptionData>       SpawnOption;                                       // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnerStyle_Den_Dungeon> SpawnStyle;                                        // 0x38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_702F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReference            EnableObjective;                                   // 0x68(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            DisableObjective;                                  // 0x98(0x30)(Edit, NativeAccessSpecifierPublic)
	TArray<class FString>                        FilterTags;                                        // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct OakGame.ModeKillMiniBossTableEntry
struct FModeKillMiniBossTableEntry : public FTableRowBase
{
public:
	TSoftObjectPtr<class USpawnOptionData>       SpawnOption;                                       // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOverworldRepresentationType      Representation;                                    // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7030[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Weight;                                            // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            EnableObjective;                                   // 0x38(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            DisableObjective;                                  // 0x68(0x30)(Edit, NativeAccessSpecifierPublic)
	TArray<class FString>                        FilterTags;                                        // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct OakGame.RunnerEncounterRef
struct FRunnerEncounterRef
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.DungeonObjectiveUIData
struct FDungeonObjectiveUIData
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Status;                                            // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedProgressBar;                                  // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7031[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProgressBarProgress;                               // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedTimer;                                        // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReadyToPlayOut;                                   // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7032[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct OakGame.PassiveAbilityBuffTableEntry
struct FPassiveAbilityBuffTableEntry : public FTableRowBase
{
public:
	TSoftObjectPtr<class UOakPassiveAbilityBuffAspectData> BuffData;                                          // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTutorialMessageDataAsset*             TutorialMessage;                                   // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7033[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          FilterTags;                                        // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.EDBonusUIData
struct FEDBonusUIData
{
public:
	enum class EDungeonBonusType                 BonusType;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECrystalBonusType                 CrystalBonusType;                                  // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7034[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  BonusTitle;                                        // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                BonusValue;                                        // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            Icon;                                              // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RowName;                                           // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.EDBlessingAndCurseUIData
struct FEDBlessingAndCurseUIData
{
public:
	class UTutorialMessageDataAsset*             TutorialMessage;                                   // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x20(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7035[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            Icon;                                              // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RowName;                                           // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC8 (0xD0 - 0x8)
// ScriptStruct OakGame.ModeKillTableEntry
struct FModeKillTableEntry : public FTableRowBase
{
public:
	TSoftObjectPtr<class USpawnOptionData>       SpawnOption;                                       // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USpawnerStyle_Den_Dungeon> SpawnStyle;                                        // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOverworldRepresentationType      Representation;                                    // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7036[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Weight;                                            // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            EnableObjective;                                   // 0x60(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            DisableObjective;                                  // 0x90(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class FString>                        FilterTags;                                        // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct OakGame.EndlessDungeonBossAttacks
struct FEndlessDungeonBossAttacks : public FTableRowBase
{
public:
	float                                        Multiplier;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Angle;                                             // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfHeight;                                        // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Cooldown;                                          // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Comment;                                           // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.EndlessDungeonAttributeScaling
struct FEndlessDungeonAttributeScaling
{
public:
	class UGbxAttributeData*                     Attribute;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ModifierValue;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7037[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxAttributeModifierHandle           ModifierHandle;                                    // 0x10(0x10)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.EndlessDungeonSerialNumber
struct FEndlessDungeonSerialNumber
{
public:
	enum class EEndlessDungeonSerialNumberState  State;                                             // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7038[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                Buffer;                                            // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint32                                       RunningCounter;                                    // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DatabaseVersion;                                   // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7039[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.EDEndStatUIData
struct FEDEndStatUIData
{
public:
	class FText                                  Description;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_703A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.EDEndStat
struct FEDEndStat
{
public:
	class FText                                  Description;                                       // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UChallenge>                TrackedChallenge;                                  // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameStatData*                         TrackedGameStat;                                   // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialValue;                                      // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CachedValue;                                       // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.PlayerGuardianRankFormula
struct FPlayerGuardianRankFormula
{
public:
	float                                        BaseValue;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseMultiplier;                                    // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Multiplier;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Power;                                             // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Offset;                                            // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.PlayerExperienceFormula
struct FPlayerExperienceFormula
{
public:
	float                                        Multiplier;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Power;                                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Offset;                                            // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.LevelBasedExpScale
struct FLevelBasedExpScale
{
public:
	int32                                        LevelDifference;                                   // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HigherLevelEnemyExpScale;                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowerLevelEnemyExpScale;                           // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.ExpAwardWeight
struct FExpAwardWeight
{
public:
	int32                                        Players;                                           // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillerExpBonus;                                    // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpWeight;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct OakGame.ReviveStateInformation
struct FReviveStateInformation
{
public:
	enum class EReviveState                      ReviveState;                                       // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ReviveSuccessful;                                  // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct OakGame.FriendEventDataEntry
struct FFriendEventDataEntry : public FTableRowBase
{
public:
	enum class EFriendEventType                  FriendEventType;                                   // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFriendEventPriority              Priority;                                          // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_703B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       Ordinal;                                           // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ContainsSpoiler;                                   // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BroadcastToSingleFriend;                           // 0x11(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayNotificationOnFriendHUD;                    // 0x12(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysShowNotification;                           // 0x13(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayEventOnTimeline;                            // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_703C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  EventTitleText;                                    // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EventText;                                         // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GalaxyDataProgressCategoriesGroup
struct FGalaxyDataProgressCategoriesGroup
{
public:
	class FText                                  GroupName;                                         // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseAsFallbackCategory;                            // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_703D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UChallengeCategoryData*>        CategoriesInGroup;                                 // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.CustomizationMorphTargetSetExpansionData
struct FCustomizationMorphTargetSetExpansionData
{
public:
	class UGbxCustomizationMorphTargetSetData*   InsertTarget;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AdditionalMorphTargets;                            // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.InsertAdditionalAbility
struct FInsertAdditionalAbility
{
public:
	TSoftObjectPtr<class UOakPlayerAbilitySlotData> TargetSlot;                                        // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakActionAbility>         Ability;                                           // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct OakGame.AnimSetExtensionData
struct FAnimSetExtensionData
{
public:
	TSoftObjectPtr<class UGbxAnimSet>            TargetAnimSet;                                     // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class UAnimationAsset*>    AnimSetExtensions;                                 // 0x28(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x108 (0x108 - 0x0)
// ScriptStruct OakGame.AdditionalPlayerClass
struct FAdditionalPlayerClass
{
public:
	TArray<class UGbxAnimSet*>                   Additional1stPersonAnimSets;                       // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UGbxAnimSet*>                   Additional3rdPersonAnimSets;                       // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UOakPlayerAbilityTreeBranchData*> AdditionalAbilityTreeBranches;                     // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class UOakPlayerAbilityTreeBranchData*, class FString> ClassArmorSerialNumbers;                           // 0x30(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FInsertAdditionalAbility>      AdditionalAbilitySlotSkills;                       // 0x80(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UOakActionAbility>, TSubclassOf<class UGbxAction>> CustomizationActionMapExtensions;                  // 0x90(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FAnimSetExtensionData>         AnimSetExtensions;                                 // 0xE0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UPlayerStandInDataPatch*               PlayerStandInPatch;                                // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EPlayerHeroPoint>          BestHeroPoints;                                    // 0xF8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.HeroStatueCustomizationData
struct FHeroStatueCustomizationData
{
public:
	class UGbxCustomizationTypeData*             CustomizationType;                                 // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxCustomizationTargetData*           CustomizationTarget;                               // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.InventoryFoundAssociation
struct FInventoryFoundAssociation
{
public:
	TSubclassOf<class AOakInventoryEquippableItem> ItemClass;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGameStatData>          ClassStat;                                         // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.AmpedShotSettings
struct FAmpedShotSettings
{
public:
	TSubclassOf<class UEffectCollectionData>     AmpedShotTracerFX;                                 // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEffectCollectionData>     AmpedShotBeamFX;                                   // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           AmpedShotSound;                                    // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakVehicleManagerSettings
struct FOakVehicleManagerSettings
{
public:
	float                                        OakVehicleManagerUpdateTime;                       // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeStartDamaging;                           // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagePercentBySecond;                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeDigistructOut;                           // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeExplode;                                 // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceToDigistruct;                              // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavCorrecterSearchRadius;                          // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavCorrecterDestroyDelay;                          // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.PickupEvaluationSettings
struct FPickupEvaluationSettings
{
public:
	float                                        MinEvaluationHeight;                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EvaluationWidth;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoxExtentZFactor;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelectedWidthBoost;                                // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelectedHeightBoost;                               // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelectedBoxZFactorBoost;                           // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelectedBoxZFactorBoost_Attached;                  // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachedPickupPreferredBoxMaxHeight;               // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttachedPickupTracedMeshPriorityBoost;             // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupStickiness;                                  // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinLookAtTolerance;                                // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkipVisibilityTraceTestRange;                      // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemCardBottomPickupOffset;                        // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemCardUpperLootBeamHeight;                       // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxGFxDialogBoxChoiceInfo
struct FGbxGFxDialogBoxChoiceInfo
{
public:
	class FText                                  LabelText;                                         // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FName                                  ActionName;                                        // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InputAction;                                       // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCloseDialogOnSelection;                           // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPressToHoldChoice;                                // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_703E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct OakGame.GbxGFxDialogBoxInfo
struct FGbxGFxDialogBoxInfo
{
public:
	class FText                                  HeaderText;                                        // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BodyText;                                          // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxGFxDialogBoxChoiceInfo>    Choices;                                           // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	UDelegateProperty_                           OnChoiceMade;                                      // 0x40(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_703F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bKeybindingAllowGamepadInputs;                     // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKeybindingAllowMouseKeyboardInputs;               // 0x61(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGbxGFxDialogBoxStyle             DialogBoxStyle;                                    // 0x62(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7040[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  InputText;                                         // 0x68(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bCanCloseWhenChoicesArrayIsEmpty;                  // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInputTextField;                                   // 0x81(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPasswordTextField;                                // 0x82(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAnyUserCanInteract;                               // 0x83(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanCancel;                                        // 0x84(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuppressSpawnSound;                               // 0x85(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7041[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  InitialChoice;                                     // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialChoiceIndex;                                // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGbxGFxDialogBoxButtonType        ButtonType;                                        // 0x94(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7042[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGbxPlayerController*                  TargetPC;                                          // 0x98(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowCloseWhenAnotherLocalPlayerLeaves;           // 0xA0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7043[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxDialogBoxData*                  OverrideDefaultTemplate;                           // 0xA8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7044[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ReportReason
struct FReportReason
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	enum class EShiftReportReason                Code;                                              // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7045[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.BlueprintGbxInputActionReceiverDelegateBinding_Continuous_Vector
struct FBlueprintGbxInputActionReceiverDelegateBinding_Continuous_Vector
{
public:
	class FName                                  InputActionDefName;                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FunctionNameToBind;                                // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 BindingId;                                         // 0x10(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.BlueprintGbxInputActionReceiverDelegateBinding_Discrete
struct FBlueprintGbxInputActionReceiverDelegateBinding_Discrete
{
public:
	class FName                                  InputActionDefName;                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInputEvent                       InputEvent;                                        // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7046[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FunctionNameToBind;                                // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 BindingId;                                         // 0x18(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x118 (0x118 - 0x0)
// ScriptStruct OakGame.GFxBackpackWidgetConfig
struct FGFxBackpackWidgetConfig
{
public:
	class FString                                GridWidgetPath;                                    // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxGFxListConfig                     GridWidgetConfig;                                  // 0x10(0x90)(Edit, NativeAccessSpecifierPublic)
	int32                                        ItemBackpackSpaceMinIfInfinite;                    // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumBackpackIconsToKeep;                            // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemBackpackSpaceMinLocked;                        // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinVisibleCells;                                   // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumCellsToPreCreate;                               // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7047[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BackpackItemScaleformClass;                        // 0xB8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EmptyBackpackItemScaleformClass;                   // 0xC8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGFxBackpackWidgetItem>    ListItemNativeClass;                               // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ButtonHelpText;                                    // 0xE0(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseTrashButtonStates;                             // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7048[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AOakPlayerController>   OakPC;                                             // 0xFC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UGbxGFxMovie>           OwningMovie;                                       // 0x104(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UGbxGFxObject>          GridWidgetParent;                                  // 0x10C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7049[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x198 (0x198 - 0x0)
// ScriptStruct OakGame.GFxBackpackWidget
struct FGFxBackpackWidget
{
public:
	UMulticastDelegateProperty_                  ItemSelectedDelegate;                              // 0x0(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ItemClickedDelegate;                               // 0x10(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  ItemPressedDelegate;                               // 0x20(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UOakThumbnailManager>   ThumbnailManager;                                  // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bThumbnailMangerIsExternal;                        // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_704A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UUIGlobals>             UIGlobals;                                         // 0x3C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_704B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGFxBackpackWidgetConfig              Config;                                            // 0x48(0x118)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FOakUIInventoryItemDisplayInfo> Items;                                             // 0x160(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UGbxGFxGridScrollingList*              GridWidget;                                        // 0x170(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxBackpackWidgetListener*            Listener;                                          // 0x178(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInited;                                         // 0x180(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_704C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FirstBackpackItemOfInterest;                       // 0x184(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UGFxBackpackWidgetItem> LastSelectedBackpackItem;                          // 0x188(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNeedsThumbnailsRefreshed;                         // 0x190(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDoNotManageThumbnailSweeping;                     // 0x191(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNeedsSweep;                                       // 0x192(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_704D[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxBuddyWidgetAnimQueueItem
struct FGFxBuddyWidgetAnimQueueItem
{
public:
	class AActor*                                TargetActor;                                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_704E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct OakGame.GFxChallengeProgressItem
struct FGFxChallengeProgressItem
{
public:
	class FText                                  FirstChallengeName;                                // 0x0(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  SecondChallengeName;                               // 0x18(0x18)(Transient, NativeAccessSpecifierPublic)
	bool                                         bHasNameTransitioned;                              // 0x30(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_704F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FirstDescription;                                  // 0x38(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  SecondDescription;                                 // 0x50(0x18)(Transient, NativeAccessSpecifierPublic)
	bool                                         bHasDescriptionTransitioned;                       // 0x68(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7050[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                FirstTypeIconFrame;                                // 0x70(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SecondTypeIconFrame;                               // 0x80(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasIconTransitioned;                              // 0x90(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bViewAsPercent;                                    // 0x91(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bViewOneOffCompletionNotProgress;                  // 0x92(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7051[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProgressPctToStartAnimFrom;                        // 0x94(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProgressOutOfValue;                                // 0x98(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProgressOutOfMax;                                  // 0x9C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChallengeWasCompleted;                            // 0xA0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPercentCompleteTransitioned;                   // 0xA1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7052[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UChallenge>                ChallengeClass;                                    // 0xA8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddedAsProgressOfChildChallenge;                  // 0xB0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7053[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ParentRanking;                                     // 0xB4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakUIControllerConnectedState
struct FOakUIControllerConnectedState
{
public:
	TWeakObjectPtr<class ULocalPlayer>           LocalPlayer;                                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxControllerDisconnectMovie*         DisconnectMovie;                                   // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxCurrencyCounterCategoryData
struct FGFxCurrencyCounterCategoryData
{
public:
	class UInventoryCategoryData*                ItemCategory;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastValue;                                         // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7054[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GFxCurrencyCounterQueueInfo
struct FGFxCurrencyCounterQueueInfo
{
public:
	class UInventoryCategoryData*                ItemCategory;                                      // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DeltaValue;                                        // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartTotal;                                        // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FinalTotal;                                        // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7055[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StartAudioEvent;                                   // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StopAudioEvent;                                    // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxDisplayNotificationWidgetTextFields
struct FGFxDisplayNotificationWidgetTextFields
{
public:
	class FString                                TextFieldPath;                                     // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxFriendsInAreaListMenu_Adjustment
struct FGFxFriendsInAreaListMenu_Adjustment
{
public:
	struct FVector2D                             ContextMenuOffsetExpandingDown;                    // 0x0(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ContextMenuOffsetExpandingUp;                      // 0x8(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxGrenadeIndicatorSortItem
struct FGFxGrenadeIndicatorSortItem
{
public:
	class AOakProjectile*                        Grenade;                                           // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistSq;                                            // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7056[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.GFxInventoryMenuUnlockLookupItem
struct FGFxInventoryMenuUnlockLookupItem
{
public:
	TSoftObjectPtr<class UInventoryCategoryData> InventoryCategory;                                 // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayText;                                       // 0x28(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.OakInventoryMenuPaperDollSlotInfo
struct FOakInventoryMenuPaperDollSlotInfo
{
public:
	class FString                                WidgetName;                                        // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TrinketName;                                       // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventorySlotData*                    SlotData;                                          // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SlotFilterId;                                      // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SlotIconWidgetName;                                // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SlotIconFrame;                                     // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                ButtonBinding;                                     // 0x50(0x28)(Deprecated, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NoKeyBoundFrameName;                               // 0x78(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SlotIconInputAction;                               // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakInventoryMenuPaperDollSlotAdjacency Adjancency;                                        // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnlockedIsBeastmaster;                            // 0x94(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnlockedIsExtraArtifacts;                         // 0x95(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7057[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SplitScreenPage;                                   // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7058[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct OakGame.GFxInventoryMenuEquipToSlot
struct FGFxInventoryMenuEquipToSlot
{
public:
	class UGFxInventoryItemWidget*               ItemWidget;                                        // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxInventoryMenuTrinketButton*        TrinketWidget;                                     // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         IconWidget;                                        // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7059[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTrinketEnabled;                                   // 0x30(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_705A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakInventoryMenuPaperDollSlotInfo    SlotInfo;                                          // 0x38(0xA0)(Transient, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.GFxInventoryMenuSwapItem
struct FGFxInventoryMenuSwapItem
{
public:
	enum class EGFxInventoryMenuFocusSide        Side;                                              // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_705B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UGFxInventoryItemWidget> ItemWidget;                                        // 0x4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UObject>                ItemObject;                                        // 0xC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakInventoryMenuFilter
struct FOakInventoryMenuFilter
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	enum class EOakInventoryMenuSortMode         SortMode;                                          // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_705C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakInventoryMenuTypePriorityInfo
struct FOakInventoryMenuTypePriorityInfo
{
public:
	class UInventoryCategoryData*                ItemType;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponTypeAsset*                      WeaponTypeData;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PriorityValue;                                     // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_705D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakInventoryMenuItemGrouping
struct FOakInventoryMenuItemGrouping
{
public:
	class FName                                  ID;                                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponTypeAsset*                      WeaponTypeData;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManufacturerData*                     ManufacturerData;                                  // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct OakGame.GFxMenuTutorialState
struct FGFxMenuTutorialState
{
public:
	enum class EGFxMenuTutorialDialogSize        DialogSize;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxMenuTutorialFocusDirection    FocusDirection;                                    // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxMenuTutorialFocusDirection    SplitScreenFocusDirection;                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxMenuTutorialFocusDirection    VerticalSplitScreenFocusDirection;                 // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxMenuTutorialFocusDirection    QuadSplitScreenFocusDirection;                     // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             DialogOffset;                                      // 0x14(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SplitScreenDialogOffset;                           // 0x1C(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             VerticalSplitScreenDialogOffset;                   // 0x24(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             QuadSplitScreenDialogOffset;                       // 0x2C(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_705E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  HeaderText;                                        // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BodyText;                                          // 0x50(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<class FName>                          VisibleTintClipsNames;                             // 0x68(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          SplitScreenVisibleTintClipsNames;                  // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          VerticalSplitScreenVisibleTintClipsNames;          // 0x88(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          QuadSplitScreenVisibleTintClipsNames;              // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AllowedInputAxes;                                  // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          AllowedInputActions;                               // 0xB8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bAdvanceOnKeyPress;                                // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowTutorialSkip;                                // 0xC9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_705F[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxMenuTutorialSequence
struct FGFxMenuTutorialSequence
{
public:
	TArray<struct FGFxMenuTutorialState>         SequenceList;                                      // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GFxMenuTutorial
struct FGFxMenuTutorial
{
public:
	class FName                                  TutorialName;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGFxMenuTutorialSequence              TutorialSequence;                                  // 0x8(0x10)(Edit, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GFxMenuTutorialTintClipData
struct FGFxMenuTutorialTintClipData
{
public:
	class FName                                  TintClipName;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TintClipPath;                                      // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         TintClip;                                          // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GFxMenuTutorialCollection
struct FGFxMenuTutorialCollection
{
public:
	TArray<struct FGFxMenuTutorial>              Tutorials;                                         // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGFxMenuTutorialTintClipData>  TintClips;                                         // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x298 (0x298 - 0x0)
// ScriptStruct OakGame.GFxInventoryMenuConfig
struct FGFxInventoryMenuConfig
{
public:
	class UInventoryCategoryData*                WeaponCategory;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                GrenadeCategory;                                   // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                ShieldCategory;                                    // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                GoldenKeyResourceData;                             // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                ErediumResourceData;                               // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                MoneyResourceData;                                 // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                VaultCoinResourceData;                             // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReturnToBackpackWhenEquippingFromIt;              // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClearAllNewnessWhenLeavingMenu;                   // 0x39(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInspect;                                    // 0x3A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7060[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          SelectionHighlightColorForItemCard;                // 0x3C(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SelectionComparisonColorForItemCard;               // 0x4C(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemCardLineThickness;                             // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuFilter>       PageFilters;                                       // 0x60(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuTypePriorityInfo> ItemTypeSortPriorities;                            // 0x70(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuItemGrouping> ItemGroupingsByType;                               // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuItemGrouping> ItemGroupingsByManufacturer;                       // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  InputAction_Drop;                                  // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InputAction_DropByHolding;                         // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InputAction_TrashFavorite;                         // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InputAction_Inspect;                               // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InputAction_Unequip;                               // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuPaperDollSlotInfo> PaperDollSlotSetup;                                // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGbxAmmoTypeData*>              AmmoTypes;                                         // 0xD8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UGbxAmmoTypeData*                      GrenadeAmmoType;                                   // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxMenuData*                          ItemInspectionMenuData;                            // 0xF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USwfMovie*                             ItemCardMovie;                                     // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ItemCardOffset;                                    // 0x100(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemCardScale;                                     // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CompareItemCardOffset;                             // 0x10C(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompareItemCardScale;                              // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGFxBackpackWidgetConfig              BackpackConfig;                                    // 0x118(0x118)(Edit, NativeAccessSpecifierPublic)
	int32                                        TrinketIconsReserveCount;                          // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalCurrencySpinnerHeightOverride;                // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrencyWidgetPauseOnNewValueTime;                 // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrencyWidgetCostSpinTime;                        // 0x23C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TrinketsText;                                      // 0x240(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FGFxMenuTutorialCollection            Tutorials;                                         // 0x258(0x20)(Edit, NativeAccessSpecifierPublic)
	class FName                                  FirstBootTutorial;                                 // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GearUpModeTutorial;                                // 0x280(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LargeBackpackVisibleCells;                         // 0x288(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SmallBackpackVisibleCells;                         // 0x28C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResortBackpackWhenAddingAndRemovingItems;         // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7061[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayBeforeDragStart;                              // 0x294(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct OakGame.PetNameplateData
struct FPetNameplateData
{
public:
	struct FHUDInWorldIconTargetInfo             TargetInfo;                                        // 0x0(0x58)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_7062[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxOverheadNameplate*                 Nameplate;                                         // 0x70(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.ItemCardElementalDetails
struct FItemCardElementalDetails
{
public:
	class FText                                  EffectText;                                        // 0x0(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  ProcChanceText;                                    // 0x18(0x18)(Transient, NativeAccessSpecifierPublic)
	class FString                                IconFrame;                                         // 0x30(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1D8 (0x1D8 - 0x0)
// ScriptStruct OakGame.GFxItemCardAbbreviatedObject
struct FGFxItemCardAbbreviatedObject
{
public:
	uint8                                        Pad_7063[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  ElementalUpdatedDelegate;                          // 0x8(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AOakPlayerController>   OwningPC;                                          // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         ItemCardRootClip;                                  // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryShopComponent*               CachedInventoryShop;                               // 0x28(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7064[0xD8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGFxItemCardMainStat*>          MainStatWidgets;                                   // 0x108(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UGFxItemCardMainStat*>          MainStatMirroredWidgets;                           // 0x118(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         ArtifactRarityIcon;                                // 0x128(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         AbbreviatedAmmoIcon;                               // 0x130(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpdateElementalInfoTime;                           // 0x138(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7065[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryBalanceStateComponent*       CurrentBalanceComponent;                           // 0x140(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7066[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryBalanceStateComponent*       CurrentComparisonItem;                             // 0x150(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FItemCardElementalDetails>     ElementalEffects;                                  // 0x158(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_7067[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastElementalFrame;                                // 0x178(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGFxItemCardArtifactLine*>      ArtifactMainStats;                                 // 0x188(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_7068[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGFxItemCardSkillEntry*>        ClassModSkillEntries;                              // 0x1A0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class USwfMovie*                             SkillIconSWF;                                      // 0x1B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       CurrentSkillIconSWFPath;                           // 0x1B8(0x18)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7069[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x360 (0x538 - 0x1D8)
// ScriptStruct OakGame.GFxItemCardObject
struct FGFxItemCardObject : public FGFxItemCardAbbreviatedObject
{
public:
	class FString                                DescriptionHighlightColor;                         // 0x1D8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalSpinnerHeightOverride;                        // 0x1E8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CostSpinTime;                                      // 0x1EC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PauseOnNewValueTime;                               // 0x1F0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondaryStatsBottomSpacer;                        // 0x1F4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClassModSpacingHeight;                             // 0x1F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegendaryArtifactSpacingHeight;                    // 0x1FC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalVerticalAdjustment;                           // 0x200(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_706A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGFxCurrencyCounterClip*               CurrencyWidget;                                    // 0x208(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_706B[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         ItemName;                                          // 0x2B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_706C[0xE0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         MainStatBackground;                                // 0x398(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         MainStatBackgroundRaritySides;                     // 0x3A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         TextStats;                                         // 0x3A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         SDUTextStats;                                      // 0x3B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         PickupTextStats;                                   // 0x3B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_706D[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumTextStats;                                   // 0x480(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_706E[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxTextField*                         TextStatsTextfieldToUse;                           // 0x4A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_706F[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         ManufacturerWrapper;                               // 0x4D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7070[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxObject*                         ManufacturerFill;                                  // 0x4F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxTextField*                         ManufacturerStats;                                 // 0x4F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         ManufacturerTextTint;                              // 0x500(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxGFxObject*                         ItemCardBottom;                                    // 0x508(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7071[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxMapMenu_Adjustment
struct FGFxMapMenu_Adjustment
{
public:
	struct FVector2D                             ContextMenuOffsetExpandingDown;                    // 0x0(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ContextMenuOffsetExpandingUp;                      // 0x8(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.FriendIconNameAndIndex
struct FFriendIconNameAndIndex
{
public:
	int32                                        IconFlashIndex;                                    // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7072[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconTextureName;                                   // 0x8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GFxMapMenuStateInfo
struct FGFxMapMenuStateInfo
{
public:
	class FText                                  StateName;                                         // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FString                                StateFrame;                                        // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct OakGame.GFxMinimapWidgetIcon
struct FGFxMinimapWidgetIcon
{
public:
	struct FZoneMapPOIEntry                      ZoneMapPOIData;                                    // 0x0(0x70)(Edit, NativeAccessSpecifierPublic)
	bool                                         bIsAreaWaypoint;                                   // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampRadarEdge;                                   // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7073[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxClampDistance;                                  // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldBeVisibleIfInRange;                         // 0x78(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7074[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IconLocation;                                      // 0x7C(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStaticIconLocation;                               // 0x88(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7075[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       WaypointRadius;                                    // 0x8C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 TargetActor;                                       // 0x90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 TargetGuid;                                        // 0x98(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                TargetMinimapIconComponent;                        // 0xA8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         IconInstance;                                      // 0xB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCachedVisible;                                    // 0xB8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxMinimapWidgetIconTrackedType  TrackedType;                                       // 0xB9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7076[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AreaWaypointIconSize;                              // 0xBC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentTransitionTime;                             // 0xC0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TransitionStartingLocation;                        // 0xC4(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7077[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconFrameName;                                     // 0xD0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.MissionLogEchoDeviceSettings
struct FMissionLogEchoDeviceSettings
{
public:
	enum class EStandInActorType                 StandInType;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7078[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AGenericStandInActor>    StandInActorClass;                                 // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StandInConfigName;                                 // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.GFxMissionLogMissionItem
struct FGFxMissionLogMissionItem
{
public:
	bool                                         bValid;                                            // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7079[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayText;                                       // 0x8(0x18)(Transient, NativeAccessSpecifierPublic)
	enum class EGFxMissionLogMissionItemType     Type;                                              // 0x20(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_707A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UMission>                  MissionClass;                                      // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakMission*                           AsOakMission;                                      // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UEchoLogData>           EchoLogData;                                       // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakMissionType                   MissionType;                                       // 0x40(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTracked;                                        // 0x41(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBlocked;                                        // 0x42(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCompleted;                                      // 0x43(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInCurrentZone;                                  // 0x44(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenViewed;                                    // 0x45(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxMissionLogMissionIconType     IconType;                                          // 0x46(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_707B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumFriendsPlayingThisMission;                      // 0x48(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_707C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.NameplateBarData
struct FNameplateBarData
{
public:
	class UGbxGFxProgressBar*                    NameplateBar;                                      // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         NameplateBarContainer;                             // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class INameplateInfoProviderInterface> TargetActorOverride;                               // 0x10(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_707D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.GFxNotificationQueueListItem
struct FGFxNotificationQueueListItem
{
public:
	class UHUDNotificationAsset*                 AssetData;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxDisplayedNotificationWidget*       ActiveWidgetContent;                               // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_707E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MessageText;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FName                                  SpawnAudioOverride;                                // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DespawnAudioOverride;                              // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeoutTimeRemaining;                              // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCurrentlyDisplayed;                               // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        NotificationId;                                    // 0x45(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_707F[0xA];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct OakGame.GFxOakMenuHelpers
struct FGFxOakMenuHelpers
{
public:
	uint8                                        Pad_7080[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxPassiveSkillWidgetSlotData
struct FGFxPassiveSkillWidgetSlotData
{
public:
	class UOakPlayerAbilityHUDItemData*          HUDItemData;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxPassiveSkillIcon*                  Icon;                                              // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct OakGame.GFxPlayerStorageBag
struct FGFxPlayerStorageBag
{
public:
	uint8                                        Pad_7081[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakUIInventoryItemDisplayInfo> Items;                                             // 0xB8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_7082[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.QuickChangeRespecTreeBranchRow
struct FQuickChangeRespecTreeBranchRow
{
public:
	TArray<class UGbxGFxObject*>                 Entries;                                           // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         RespecAnim;                                        // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7083[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.IconNameAndIndex
struct FIconNameAndIndex
{
public:
	int32                                        IconFlashIndex;                                    // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7084[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconTextureName;                                   // 0x8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.BaseQuickChangeMenuStateData
struct FBaseQuickChangeMenuStateData
{
public:
	class FText                                  MenuStateName;                                     // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MenuStateDescription;                              // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FString                                ContentFrameName;                                  // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IconFrameName;                                     // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StandInConfig;                                     // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceProjectionFXOn;                              // 0x58(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBaseQuickChangeMenuState         MenuState;                                         // 0x59(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7085[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCustomizationTypeData*             CustomizationType;                                 // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct OakGame.GFxSkillScreenSkillInfo
struct FGFxSkillScreenSkillInfo
{
public:
	enum class ESkillItemDisplayType             ItemType;                                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7086[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ItemName;                                          // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ItemDescription;                                   // 0x20(0x18)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_7087[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.GFxSkillScreenBranchContainer
struct FGFxSkillScreenBranchContainer
{
public:
	class UGbxGFxObject*                         Root;                                              // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         BranchObject;                                      // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxSkillScreenBranch*                 Branch;                                            // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxSkillScreenBranch*                 OriginalBranch;                                    // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7088[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x160 (0x160 - 0x0)
// ScriptStruct OakGame.GFxSkillScreenInfoCardContainer
struct FGFxSkillScreenInfoCardContainer
{
public:
	class UGbxGFxObject*                         Root;                                              // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7089[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxGFxButton*                         InfoCardButton;                                    // 0x118(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         IconArt;                                           // 0x120(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         DescriptionText;                                   // 0x128(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxSlider*                         ScrollBar;                                         // 0x130(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxGFxObject*                         ScrollMask;                                        // 0x138(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  AvailablePointsString;                             // 0x140(0x18)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_708A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.GFxSkillScreenLoadoutChoiceInfo
struct FGFxSkillScreenLoadoutChoiceInfo
{
public:
	class UOakPlayerAbilityTreeItemData*         ItemData;                                          // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ChoiceSelectedName;                                // 0x8(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  ChoiceSelectionName;                               // 0x20(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  ChoiceDescription;                                 // 0x38(0x18)(Transient, NativeAccessSpecifierPublic)
	enum class EGFxSkillScreenLoadoutChoiceEquipState EquipState;                                        // 0x50(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_708B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GFxStatusMenuNavBarInfo
struct FGFxStatusMenuNavBarInfo
{
public:
	class FString                                IconFrameName;                                     // 0x0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MenuID;                                            // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GFxStatusMenuSubmenuKeyMap
struct FGFxStatusMenuSubmenuKeyMap
{
public:
	class FName                                  InputAction;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SubMenuId;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.SubtitleLine
struct FSubtitleLine
{
public:
	class FText                                  TextToDisplay;                                     // 0x0(0x18)(Transient, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForce;                                            // 0x1C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_708C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ClosedCaptionEntry
struct FClosedCaptionEntry
{
public:
	class UGbxTextField*                         LineField;                                         // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_708D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RemainingLifetime;                                 // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_708E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.StatConfigInfo
struct FStatConfigInfo
{
public:
	class FText                                  StatName;                                          // 0x0(0x18)(Transient, NativeAccessSpecifierPublic)
	uint8                                        PercentCompletion;                                 // 0x18(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_708F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GFxVaultHunterProfileCardStatConfig
struct FGFxVaultHunterProfileCardStatConfig
{
public:
	TArray<struct FStatConfigInfo>               StatsInfo;                                         // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint32                                       TimePlayedHours;                                   // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       TimePlayedMinutes;                                 // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct OakGame.GFxVaultHunterProfileCardInventoryConfig
struct FGFxVaultHunterProfileCardInventoryConfig
{
public:
	class FString                                WeaponRarityFrames[0x4];                           // 0x0(0x40)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WeaponTypeFrames[0x4];                             // 0x40(0x40)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GrenadeRarityFrame;                                // 0x80(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ShieldRarityFrame;                                 // 0x90(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClassModRarityFrame;                               // 0xA0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RelicRarityFrame;                                  // 0xB0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRelic2;                                         // 0xC0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7090[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GFxVaultHunterProfileCardSkillsConfig
struct FGFxVaultHunterProfileCardSkillsConfig
{
public:
	float                                        GreenProgress;                                     // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlueProgress;                                      // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RedProgress;                                       // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PurpleProgress;                                    // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClassFrameName;                                    // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct OakGame.GFxVaultHunterProfileCardPlayerConfig
struct FGFxVaultHunterProfileCardPlayerConfig
{
public:
	class UTexture*                              ProfilePicture;                                    // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PlayerName;                                        // 0x8(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  MissionName;                                       // 0x20(0x18)(Transient, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPlayerClassIdentifier> PlayerClass;                                       // 0x38(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSelectedCharacter;                             // 0x60(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7091[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.VendingTabOrder
struct FVendingTabOrder
{
public:
	enum class EGFxVendingMachineDisplayMode     BuyTab;                                            // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxVendingMachineDisplayMode     BuyBackTab;                                        // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGFxVendingMachineDisplayMode     SellTab;                                           // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7092[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EGFxVendingMachineDisplayMode> TabOrder;                                          // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.VendingMachineSocketLocationAndOffset
struct FVendingMachineSocketLocationAndOffset
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7093[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SocketName;                                        // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Offset;                                            // 0x18(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             OffsetSplitScreen;                                 // 0x20(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.VendingObjectToSocketLocationMap
struct FVendingObjectToSocketLocationMap
{
public:
	TMap<class UGbxGFxObject*, struct FVendingMachineSocketLocationAndOffset> SocketMap;                                         // 0x0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.VendingIDToSocketNameMap
struct FVendingIDToSocketNameMap
{
public:
	TMap<class FString, struct FVendingMachineSocketLocationAndOffset> SocketMap;                                         // 0x0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.OakBackpackCapacityThreshold
struct FOakBackpackCapacityThreshold
{
public:
	float                                        Percentage;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7094[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateColor                           Color;                                             // 0x8(0x28)(Edit, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.GFxVendingMenuConfig
struct FGFxVendingMenuConfig
{
public:
	class UInventoryCategoryData*                GoldenKeyResourceData;                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                ErediumResourceData;                               // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInventoryCategoryData*>        InventoryCategoriesAllowed;                        // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuFilter>       PageFilters;                                       // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuItemGrouping> ItemGroupingsByType;                               // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuItemGrouping> ItemGroupingsByManufacturer;                       // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryMenuTypePriorityInfo> ItemTypeSortPriorities;                            // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakBackpackCapacityThreshold> BackpackThresholds;                                // 0x60(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GFxVendingMachineMenuFilter
struct FGFxVendingMachineMenuFilter
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                DataTypeFilter;                                    // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct OakGame.HeroPointDetails
struct FHeroPointDetails
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ShortDescription;                                  // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LongDescription;                                   // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SecondaryEffectDescription;                        // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UOakPlayerAbilityTreeBranchData>> BestForClassList;                                  // 0x60(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          MinimumValue;                                      // 0x70(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UUIStatData*>                   CurrentValueDisplayStats;                          // 0xA8(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct OakGame.GoreSelectionResults
struct FGoreSelectionResults
{
public:
	class FName                                  StumpSocket;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StumpBoneScale;                                    // 0x8(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StumpDecalSize;                                    // 0x14(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StumpMesh;                                         // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StumpParticles;                                    // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             StumpMaterialOverride;                             // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             StumpDecal;                                        // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StumpSound;                                        // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStumpReceivesDecal;                               // 0x48(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritStumpMaterialParameters;                   // 0x49(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMaterialParameterCopyMethod      InheritStumpMaterialParametersMethod;              // 0x4A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritLimbMaterialParameters;                    // 0x4B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMaterialParameterCopyMethod      InheritLimbMaterialParametersMethod;               // 0x4C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7095[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LimbSocket;                                        // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               LimbMesh;                                          // 0x58(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LimbParticles;                                     // 0x60(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    LimbActorClass;                                    // 0x68(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             LimbMaterialOverride;                              // 0x70(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbForce;                                         // 0x78(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bScaleLimbToStump;                                 // 0x7C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7096[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LimbScale;                                         // 0x80(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbMassScale;                                     // 0x84(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SourceMaterialIndex;                               // 0x88(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7097[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.GoreSizeSelectionData
struct FGoreSizeSelectionData
{
public:
	uint8                                        bSpecifiedMinScale : 1;                            // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSpecifiedMaxScale : 1;                            // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_275 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_7098[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinScale;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxScale;                                          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7099[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UStaticMesh*>                   StumpMeshes;                                       // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               StumpParticles;                                    // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceConstant*>     StumpDecals;                                       // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StumpSound;                                        // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             StumpMaterialOverride;                             // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                       LimbMeshes;                                        // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               LimbParticles;                                     // 0x60(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             LimbMaterialOverride;                              // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FForceSelection                       LimbForce;                                         // 0x78(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bScaleLimbToStump;                                 // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_709A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LimbScale;                                         // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GrenadeAttachedTrail
struct FGrenadeAttachedTrail
{
public:
	uint8                                        Pad_709B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GrenadeChildGenerationData
struct FGrenadeChildGenerationData
{
public:
	int32                                        DividerGrenadeGeneration;                          // 0x0(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MiniMirvGrenadeGeneration;                         // 0x4(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MirvGrenadeGeneration;                             // 0x8(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RainGrenadeGeneration;                             // 0xC(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpringGrenadeGeneration;                           // 0x10(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StickyGrenadeGeneration;                           // 0x14(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLingering;                                      // 0x18(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_709C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LongbowTarget;                                     // 0x1C(0xC)(BlueprintVisible, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.SimpleAttributeModifier
struct FSimpleAttributeModifier
{
public:
	class UGbxAttributeData*                     ModifierAttribute;                                 // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGbxAttributeModifierType         ModifierType;                                      // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_709D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          ModifierValue;                                     // 0x10(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct OakGame.SpellTriggerData
struct FSpellTriggerData
{
public:
	class FName                                  NotifyTriggerName;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerDelay;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseInitialTransform;                              // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_709E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSimpleAttributeModifier>      TriggerModifiers;                                  // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bUseCustomDelivery;                                // 0x20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpellType                        TriggerType;                                       // 0x21(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_709F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AOakProjectile>            TriggerGrenadeClass;                               // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULightProjectileData>      TriggerLightProjectileData;                        // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    TriggerSpellActor;                                 // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEnvQueryParams                       TriggerTargetSearchQuery;                          // 0x40(0xB8)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x48 (0x140 - 0xF8)
// ScriptStruct OakGame.SpellTriggerInfo
struct FSpellTriggerInfo : public FSpellTriggerData
{
public:
	uint8                                        Pad_70A0[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.SpellSpawnInfo
struct FSpellSpawnInfo
{
public:
	struct FTransform                            SpawnTransform;                                    // 0x0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                AttachActor;                                       // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachSocket;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.ChannelStage
struct FChannelStage
{
public:
	float                                        ChargeStepDuration;                                // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpellChargesUsed;                                  // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                SpellStageAction;                                  // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                SecondaryStageAction;                              // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSimpleAttributeModifier>      StageModifiers;                                    // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.PayloadInstanceData
struct FPayloadInstanceData
{
public:
	int32                                        StackCount;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInstanceBool;                                     // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InstanceFloat;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstanceInt;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InstanceVector;                                    // 0x10(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                InstanceActor;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TriggerCount;                                      // 0x28(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.SpellTypeOverrideInfo
struct FSpellTypeOverrideInfo
{
public:
	TSubclassOf<class UDamageData>               DamageData;                                        // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpellType                        SpellType;                                         // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AOakProjectile>            GrenadeClass;                                      // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULightProjectileData>      LightProjectileData;                               // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULightBeamData>            LightBeamData;                                     // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    SpawningSpellActor;                                // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.SingularityTargetInfo
struct FSingularityTargetInfo
{
public:
	class AActor*                                TargetActor;                                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.SingularityInitializationBase
struct FSingularityInitializationBase
{
public:
	class UHitReactionTag*                       PullTag;                                           // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 IgnoreTags;                                        // 0x8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        MinPullRadius;                                     // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        IgnoreActors;                                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWwiseAuxBus*                          EffectAuxBus;                                      // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectSize;                                        // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectFadeDistance;                                // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectDuration;                                    // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseRtpc*                            FadeDistanceRtpc;                                  // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           AdditionalStartEvent;                              // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           AdditionalStopEvent;                               // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x90 - 0x70)
// ScriptStruct OakGame.SingularityBurstInfo
struct FSingularityBurstInfo : public FSingularityInitializationBase
{
public:
	struct FVector                               SingularityLocation;                               // 0x70(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPullRadius;                                     // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SingularityForce;                                  // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UExplosionData*                        SingularityExplosion;                              // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0xC8 - 0x70)
// ScriptStruct OakGame.SingularityInitializationInfo
struct FSingularityInitializationInfo : public FSingularityInitializationBase
{
public:
	float                                        Duration;                                          // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForcePerSecond;                                    // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpinDirection                    SpinDirection;                                     // 0x78(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70A9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpinMinDistance;                                   // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpinMaxDistance;                                   // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpinHorizontalScalar;                              // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpinVerticalScalar;                                // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOverride;                                  // 0x8C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x98(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachToOwnerRoot;                                // 0xA4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPersistantComponent;                              // 0xA5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70AA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SingularityParticles;                              // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseDestructibleChunkMass;                         // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70AB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageSource>             SingularitySource;                                 // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFalloffScalar;                                  // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContinuousForceScalar;                             // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.HeroStatueComponentList
struct FHeroStatueComponentList
{
public:
	TArray<class UHeroStatueComponent*>          Statues;                                           // 0x0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.HeroStatueGearInstance
struct FHeroStatueGearInstance
{
public:
	class AActor*                                LikenessActor;                                     // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                Actor;                                             // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct OakGame.OakCharacterMassData
struct FOakCharacterMassData : public FTableRowBase
{
public:
	float                                        Mass;                                              // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlinchThreshold;                                   // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StaggerThreshold;                                  // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaunchThreshold;                                   // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.HolsteredGearSlotOptions
struct FHolsteredGearSlotOptions
{
public:
	class UInventoryCategoryData*                InventoryCategory;                                 // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70AC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.HolsteredGearAttachmentSlot
struct FHolsteredGearAttachmentSlot
{
public:
	class AHolsteredGearSlot*                    OuterSlot;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                        Mesh;                                              // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70AD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct OakGame.IndigoRunDef
struct FIndigoRunDef
{
public:
	struct FDungeonRunDef                        DungeonRunDef;                                     // 0x0(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            RequiredMission;                                   // 0x88(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UOakCinematicTag*                      CinematicTag;                                      // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.IndigoMessage
struct FIndigoMessage
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70AE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.InteractiveObjectTrapEntry
struct FInteractiveObjectTrapEntry
{
public:
	class AInteractiveObject*                    TrapActor;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInteractiveObjectTrapActivationType ActivationType;                                    // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70AF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InstructionDelay;                                  // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.InventoryAspectAbilityInfo
struct FInventoryAspectAbilityInfo
{
public:
	TSubclassOf<class UGbxAbility>               Ability;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.MeleeBaseSpeedSource
struct FMeleeBaseSpeedSource
{
public:
	enum class EMeleeWeaponAttackSpeedCategory   BaseSpeedCategory;                                 // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseSpeed;                                         // 0x4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.VendingMachineRefillAmmoData
struct FVendingMachineRefillAmmoData
{
public:
	class UGbxAttributeData*                     AmmoMax;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     AmmoCurrent;                                       // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     AmmoStackCount;                                    // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     AmmoStackCost;                                     // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakWeaponNamedNamingAttribute
struct FOakWeaponNamedNamingAttribute
{
public:
	class FName                                  AttributeName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseFormula;                                       // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     Attribute;                                         // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIStatFormulaEvaluator*               Formula;                                           // 0x18(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ManufacturerWeaponSightData
struct FManufacturerWeaponSightData
{
public:
	class UManufacturerData*                     Manufacturer;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            RarityTable;                                       // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct OakGame.WeaponSightEffectTableData
struct FWeaponSightEffectTableData : public FTableRowBase
{
public:
	struct FLinearColor                          CrosshairColor;                                    // 0x8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ConditionalItemPools
struct FConditionalItemPools
{
public:
	class UItemPoolData*                         ItemPool;                                          // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         IncludeCondition;                                  // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x48 - 0x10)
// ScriptStruct OakGame.ConditionalFeaturedItemPools
struct FConditionalFeaturedItemPools : public FConditionalItemPools
{
public:
	struct FAttributeInitializationData          PoolWeight;                                        // 0x10(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.LargeLiquidBodySurfaceSectionClippingVolume
struct FLargeLiquidBodySurfaceSectionClippingVolume
{
public:
	TArray<struct FPlane>                        ClippingPlanes;                                    // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.LargeLiquidBodySurfaceSection
struct FLargeLiquidBodySurfaceSection
{
public:
	float                                        WorldZ;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLargeLiquidBodySurfaceSectionClippingVolume> ClippingVolumes;                                   // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.LevelAssetList
struct FLevelAssetList
{
public:
	class FName                                  LevelPackage;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AssetNames;                                        // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.LevelTravelDataListPatch
struct FLevelTravelDataListPatch
{
public:
	class ULevelTravelStationData*               LevelTravelData;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         LevelTravelDataCondition;                          // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         MissionIconCondition;                              // 0x10(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MovieToPlayDuringTravelMap;                        // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.LevelTravelDataListStationPatch
struct FLevelTravelDataListStationPatch
{
public:
	class FString                                AssociatedTravelStationName;                       // 0x0(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLevelTravelDataListPatch>     PatchedTravelData;                                 // 0x10(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.LootablePersistenceData
struct FLootablePersistenceData
{
public:
	float                                        ResetDelay;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStoreInSaveGame;                                  // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B3[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.LootablePileInteractionResponse
struct FLootablePileInteractionResponse
{
public:
	class ULootSpawnPatternData*                 LootPatternOverride;                               // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisturbBoneForce;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.LootablePileDamageInteraction
struct FLootablePileDamageInteraction
{
public:
	TArray<TSubclassOf<class UDamageSource>>     DamageSources;                                     // 0x0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FLootablePileInteractionResponse      Response;                                          // 0x10(0x10)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.LootableObjectDamageEventDetails
struct FLootableObjectDamageEventDetails
{
public:
	float                                        Damage;                                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitLocation;                                       // 0x4(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitDirection;                                      // 0x10(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitForce;                                          // 0x1C(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Instigator;                                        // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDamageSource>             DamageSource;                                      // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.LootableInteractionResponse
struct FLootableInteractionResponse
{
public:
	class UAnimSequence*                         TransitionAnimation;                               // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         IdleAnimation;                                     // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.LootableMeshSwapData
struct FLootableMeshSwapData
{
public:
	class USkeletalMesh*                         NewMesh;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipRegularOpeningWhenDamaged;                    // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLootableInteractionResponse          Response;                                          // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.LootableAnimState
struct FLootableAnimState
{
public:
	bool                                         bLooping;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         Animation;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.LootableDirectionalResponse
struct FLootableDirectionalResponse
{
public:
	struct FNumericRange                         AngleRange;                                        // 0x0(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FLootableInteractionResponse>  Interactions;                                      // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ConditionalLootableInteractionResponse
struct FConditionalLootableInteractionResponse
{
public:
	class UGbxCondition*                         Condition;                                         // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLootableInteractionResponse          Interaction;                                       // 0x8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.MatchmakingSearchParameter
struct FMatchmakingSearchParameter
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TargetParamName;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingSearchParameterOp     Op;                                                // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ValueRange;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.MatchmakingSearchParameters
struct FMatchmakingSearchParameters
{
public:
	class FString                                SearchName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMatchGameSettings;                                // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMatchmakingSearchParameter>   SearchParameters;                                  // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.MatchmakingRequirement
struct FMatchmakingRequirement
{
public:
	enum class EMatchmakingRequirementType       Type;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingRequirementComparisonOp ComparisonOp;                                      // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70B9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Value;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DescriptionKey;                                    // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70BA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.MatchmakingModifierData
struct FMatchmakingModifierData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TargetResolverName;                                // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EffectName;                                        // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70BB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.MatchmakingModifierSetData
struct FMatchmakingModifierSetData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DisplayDesc;                                       // 0x20(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FMatchmakingModifierData>      Modifiers;                                         // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct OakGame.MatchmakingSearchDefinition
struct FMatchmakingSearchDefinition
{
public:
	class FString                                ActivityGuidString;                                // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ParentActivityGuidString;                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TitleKey;                                          // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DescriptionKey;                                    // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ImageId;                                           // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HopperName;                                        // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Version;                                           // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMatchmakingSearchParameters>  OrderedSearches;                                   // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        TravelStationPaths;                                // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMatchmakingRequirement>       MatchmakingRequirements;                           // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        MinPlayerCount;                                    // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPlayerCount;                                    // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMatchmakingModifierSetData>   ModifierSets;                                      // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x130 (0x130 - 0x0)
// ScriptStruct OakGame.MayhemModeTierData
struct FMayhemModeTierData
{
public:
	struct FAttributeInitializationData          StartingMayhemLevel;                               // 0x0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          AvailableInventoryOverpowerLevel;                  // 0x50(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          AvailableInventoryOverpowerLevelWeight;            // 0x88(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          AvailableInventoryOverpowerLevelWeightPerMayhemLevel; // 0xC0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          BonusCatchup;                                      // 0xF8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.MayhemModifier
struct FMayhemModifier
{
public:
	TSoftClassPtr<class UGbxAbility>             ModifierAbility;                                   // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAbilityEffectTargetResolutionData* ModifierTarget;                                    // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.MayhemModifierSet
struct FMayhemModifierSet
{
public:
	TArray<struct FMayhemModifier>               Modifiers;                                         // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70BC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          MutualExclusionTags;                               // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UUIStatData*>                   UIStats;                                           // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PendingMayhemState
struct FPendingMayhemState
{
public:
	TArray<struct FMayhemModifierSet>            ModifierSets;                                      // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.MayhemCoreSetUIStats
struct FMayhemCoreSetUIStats
{
public:
	TArray<class UUIStatData*>                   UIStat_GameModifierScales;                         // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UUIStatData*>                   UIStat_TierDropRates;                              // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.MayhemCoreModifierSet
struct FMayhemCoreModifierSet
{
public:
	TArray<struct FMayhemModifier>               Modifiers;                                         // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMayhemCoreSetUIStats                 UIStats;                                           // 0x10(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.MayhemModeTwoLevelOverride
struct FMayhemModeTwoLevelOverride
{
public:
	int32                                        LevelRangeMin;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelRangeMax;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideCoreModifierSet;                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70BD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMayhemCoreModifierSet                CoreModifierSetOverride;                           // 0x10(0x30)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideRandomModifiersSlots;                     // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70BE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMayhemModifierSlotInterface*>  RandomModifierSlotsOverride;                       // 0x48(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.MainMenuCameraBlendParams
struct FMainMenuCameraBlendParams
{
public:
	float                                        BlendTime;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxEasingFunc                        BlendEasing;                                       // 0x4(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x34 (0x34 - 0x0)
// ScriptStruct OakGame.MainMenuCameraBlendParamsSet
struct FMainMenuCameraBlendParamsSet
{
public:
	struct FMainMenuCameraBlendParams            DefaultParams;                                     // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bOverrideLocationParams : 1;                       // Mask: 0x1, PropSize: 0x10x10(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideRotationParams : 1;                       // Mask: 0x2, PropSize: 0x10x10(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_276 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_70BF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMainMenuCameraBlendParams            LocationParams;                                    // 0x14(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMainMenuCameraBlendParams            RotationParams;                                    // 0x24(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.MainMenuCameraViewpointBlendPair
struct FMainMenuCameraViewpointBlendPair
{
public:
	enum class EMainMenuViewpointType            ViewpointA;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMainMenuViewpointType            ViewpointB;                                        // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70C0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMainMenuCameraBlendParamsSet         BlendParamsOverride;                               // 0x4(0x34)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.MainMenuCameraViewpoint
struct FMainMenuCameraViewpoint
{
public:
	class ACameraActor*                          CameraActor;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.MainMenuCameraViewpointGroup
struct FMainMenuCameraViewpointGroup
{
public:
	struct FMainMenuCameraViewpoint              PrimaryViewpoint;                                  // 0x0(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMainMenuCameraViewpoint>      SecondaryViewpoints;                               // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ClaptrapSkitSublevel
struct FClaptrapSkitSublevel
{
public:
	class FName                                  SublevelName;                                      // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         LoadCondition;                                     // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.SimpleMicropatch
struct FSimpleMicropatch
{
public:
	class FString                                Comment;                                           // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMicropatchApplicationType        MicropatchType;                                    // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70C1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MicropatchString;                                  // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ObjectOrWorldName;                                 // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.TimedMicropatches
struct FTimedMicropatches
{
public:
	class FString                                Comment;                                           // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                             Duration;                                          // 0x10(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSimpleMicropatch>             Micropatches;                                      // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.TimedMicropatchList
struct FTimedMicropatchList
{
public:
	class FString                                Comment;                                           // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             TimeToStart;                                       // 0x10(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoopWhenDurationsExpire;                          // 0x18(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70C2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTimedMicropatches>            TimedMicropatchList;                               // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakMultiClassNamingAttributePair
struct FOakMultiClassNamingAttributePair
{
public:
	class FName                                  PrimaryClassName;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondaryClassName;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ComboClassName;                                    // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakAbilityDebugMenuSpecList
struct FOakAbilityDebugMenuSpecList
{
public:
	uint8                                        Pad_70C3[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.OakAbilityDebugMenuListItemSpec
struct FOakAbilityDebugMenuListItemSpec
{
public:
	uint8                                        Pad_70C4[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct OakGame.OakAbilityResourceController_WeaponShotModifier
struct FOakAbilityResourceController_WeaponShotModifier : public FGbxAbilityResourceController
{
public:
	uint8                                        Pad_70C5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x28 - 0x10)
// ScriptStruct OakGame.OakAbilityResourceSpec_WeaponShotModifier
struct FOakAbilityResourceSpec_WeaponShotModifier : public FGbxAbilityResourceSpec
{
public:
	class UOakDamageCauserComponent*             DamageCauserComponent;                             // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponShotModifier*                   ShotModifier;                                      // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               ContextOverride;                                   // 0x20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct OakGame.OakActionAbilityEnumMaskHelper
struct FOakActionAbilityEnumMaskHelper
{
public:
	uint32                                       Value;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakPlayerAbilityTreeItemInfo
struct FOakPlayerAbilityTreeItemInfo
{
public:
	class UOakPlayerAbilityTreeItemData*         ItemData;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70C6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakPlayerAbilityTreeBranchData*       BranchData;                                        // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakPlayerAbilityTreeTierInfo
struct FOakPlayerAbilityTreeTierInfo
{
public:
	class UOakPlayerAbilityTreeTierData*         TierData;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70C7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakPlayerAbilityTreeBranchInfo
struct FOakPlayerAbilityTreeBranchInfo
{
public:
	class UOakPlayerAbilityTreeBranchData*       BranchData;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70C8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.OakAbilityTimerResult
struct FOakAbilityTimerResult
{
public:
	enum class EOakAbilityTimerResult            Result;                                            // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PulsesThisFrame;                                   // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalPulseTime;                                    // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakAbilityTimerSpec
struct FOakAbilityTimerSpec
{
public:
	class UOakAbilityTimerData*                  Timer;                                             // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInfinite;                                       // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRemoveOnPause;                                    // 0x9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70CA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LoopCount;                                         // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakAbilityTimerReplacePolicy     ReplacePolicy;                                     // 0x14(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakAbilityTimerTickPolicy        TickPolicy;                                        // 0x15(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70CB[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakAbilityTimer
struct FOakAbilityTimer
{
public:
	struct FOakAbilityTimerSpec                  Spec;                                              // 0x0(0x18)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        Value;                                             // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_70CC[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ActionSkillFailureCodeDescription
struct FActionSkillFailureCodeDescription
{
public:
	uint8                                        FailureCode;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70CD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FailureCodeText;                                   // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x520 - 0x4F8)
// ScriptStruct OakGame.ActionState_OakAnim
struct FActionState_OakAnim : public FActionState_Anim
{
public:
	uint8                                        Pad_70CE[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakAnimActionAbilityEndAction
struct FOakAnimActionAbilityEndAction
{
public:
	enum class EOakAnimActionAbilityEndAction    EndAction;                                         // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         Condition;                                         // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x530 - 0x520)
// ScriptStruct OakGame.ActionState_OakAnimActionAbility
struct FActionState_OakAnimActionAbility : public FActionState_OakAnim
{
public:
	uint8                                        Pad_70D0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x0 (0x520 - 0x520)
// ScriptStruct OakGame.ActionState_OakPlayerMelee
struct FActionState_OakPlayerMelee : public FActionState_OakAnim
{
public:
};

// 0x0 (0x520 - 0x520)
// ScriptStruct OakGame.ActionState_OakAnim_TedioreReload
struct FActionState_OakAnim_TedioreReload : public FActionState_OakAnim
{
public:
};

// 0x0 (0x520 - 0x520)
// ScriptStruct OakGame.ActionState_OakAnim_WeaponReload
struct FActionState_OakAnim_WeaponReload : public FActionState_OakAnim
{
public:
};

// 0x8 (0x528 - 0x520)
// ScriptStruct OakGame.ActionState_OakAttachedAnim
struct FActionState_OakAttachedAnim : public FActionState_OakAnim
{
public:
	uint8                                        Pad_70D1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.PawnInterpolationInfo
struct FPawnInterpolationInfo
{
public:
	float                                        TranslationTime;                                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationTime;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x0 (0x1C0 - 0x1C0)
// ScriptStruct OakGame.OakActionState_CoordinatedEffect
struct FOakActionState_CoordinatedEffect : public FActionState_CoordinatedEffect
{
public:
};

// 0x0 (0x1C0 - 0x1C0)
// ScriptStruct OakGame.OakActionState_CoordinatedEffect_ActionAbility
struct FOakActionState_CoordinatedEffect_ActionAbility : public FOakActionState_CoordinatedEffect
{
public:
};

// 0x8 (0xD0 - 0xC8)
// ScriptStruct OakGame.ActionState_OakDetachFromSeat
struct FActionState_OakDetachFromSeat : public FActionState_Base
{
public:
	uint8                                        Pad_70D2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x530 - 0x520)
// ScriptStruct OakGame.ActionState_OakEmote
struct FActionState_OakEmote : public FActionState_OakAnim
{
public:
	uint8                                        Pad_70D3[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x0 (0xC8 - 0xC8)
// ScriptStruct OakGame.ActionState_OakFrozenDeath
struct FActionState_OakFrozenDeath : public FActionState_Base
{
public:
};

// 0x0 (0xD0 - 0xD0)
// ScriptStruct OakGame.ActionState_OakGib
struct FActionState_OakGib : public FActionState_Gib
{
public:
};

// 0x160 (0x160 - 0x0)
// ScriptStruct OakGame.OakElementalGibData
struct FOakElementalGibData
{
public:
	uint8                                        bOverrideDefaultEffects : 1;                       // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideDefaultParticleSystem : 1;                // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideDefaultSound : 1;                         // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideDefaultDecal : 1;                         // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_277 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_70D4[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FImpactResponseEffect                 Effect;                                            // 0x10(0x140)(Edit, NativeAccessSpecifierPublic)
	class UParticleSystem*                       Particle;                                          // 0x150(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           Sound;                                             // 0x158(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x4F0 - 0x468)
// ScriptStruct OakGame.ActionState_OakHostileAttach
struct FActionState_OakHostileAttach : public FActionState_SimpleAnim
{
public:
	uint8                                        Pad_70D5[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.ReplicatedEject
struct FReplicatedEject
{
public:
	struct FVector                               EjectVel;                                          // 0x0(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x570 - 0x560)
// ScriptStruct OakGame.ActionState_OakLeapOnVehicle
struct FActionState_OakLeapOnVehicle : public FActionState_NavHomingJump
{
public:
	uint8                                        Pad_70D6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x5A0 - 0x540)
// ScriptStruct OakGame.ActionState_OakPhaseMove
struct FActionState_OakPhaseMove : public FActionState_Loop
{
public:
	uint8                                        Pad_70D7[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x570 - 0x540)
// ScriptStruct OakGame.ActionState_OakPhysicalDeath
struct FActionState_OakPhysicalDeath : public FActionState_PhysicalDeath
{
public:
	uint8                                        Pad_70D8[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x0 (0x520 - 0x520)
// ScriptStruct OakGame.ActionState_OakRandomAnim
struct FActionState_OakRandomAnim : public FActionState_OakAnim
{
public:
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.RandomAnimDef
struct FRandomAnimDef
{
public:
	struct FAnimActionDef                        AnimAsset3rd;                                      // 0x0(0x18)(NoDestructor, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70D9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x530 - 0x520)
// ScriptStruct OakGame.ActionState_OakVehicleInteractionAnim
struct FActionState_OakVehicleInteractionAnim : public FActionState_OakAnim
{
public:
	uint8                                        Pad_70DA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0xE0 - 0xC8)
// ScriptStruct OakGame.ActionState_OakVehicleMoveTo
struct FActionState_OakVehicleMoveTo : public FActionState_Base
{
public:
	uint8                                        Pad_70DB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x518 - 0x4F8)
// ScriptStruct OakGame.ActionState_OakVehicleSpawnAnim
struct FActionState_OakVehicleSpawnAnim : public FActionState_SpawnAnim
{
public:
	uint8                                        Pad_70DC[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct OakGame.OakActionAbilityActiveState
struct FOakActionAbilityActiveState
{
public:
	bool                                         bIsActive;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RepCounter;                                        // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x188 (0x188 - 0x0)
// ScriptStruct OakGame.OakAISwarmMovement
struct FOakAISwarmMovement
{
public:
	struct FGbxParam                             MaxSpeed;                                          // 0x0(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             Acceleration;                                      // 0x80(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGbxParam                             RotationRate;                                      // 0x100(0x80)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class EOakAISwarmRotation               RotationType;                                      // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70DD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1D0 (0x1D0 - 0x0)
// ScriptStruct OakGame.OakAISwarmActor
struct FOakAISwarmActor
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       DestinationComponent;                              // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       Destination;                                       // 0x10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOakAISwarmMovement                   Movement;                                          // 0x18(0x188)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_70DE[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakAssetChunkRuleData
struct FOakAssetChunkRuleData
{
public:
	enum class EOakAssetChunkRuleType            Type;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70DF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        Items;                                             // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_70E0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x30 - 0x28)
// ScriptStruct OakGame.OakAssetChunkDeferData
struct FOakAssetChunkDeferData : public FOakAssetChunkRuleData
{
public:
	enum class EPopulatePackageNameChunkMapPhase Phase;                                             // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70E1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x30 - 0x28)
// ScriptStruct OakGame.OakAssetChunkData
struct FOakAssetChunkData : public FOakAssetChunkRuleData
{
public:
	int32                                        ID;                                                // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70E2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA8 (0xB0 - 0x8)
// ScriptStruct OakGame.PlayerDifficultyDefinedValueRow
struct FPlayerDifficultyDefinedValueRow : public FAttributeDefinedValueRow
{
public:
	struct FAttributeInitializationData          Easy;                                              // 0x8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          Normal;                                            // 0x40(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          Hard;                                              // 0x78(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0xA8 (0xB0 - 0x8)
// ScriptStruct OakGame.LevelMultiplierDefinedValueRow
struct FLevelMultiplierDefinedValueRow : public FAttributeDefinedValueRow
{
public:
	struct FAttributeInitializationData          Multiplier;                                        // 0x8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          Level;                                             // 0x40(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          Offset;                                            // 0x78(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0x1C0 (0x1C8 - 0x8)
// ScriptStruct OakGame.PlayerCountAndPlaythroughDefinedValueRow
struct FPlayerCountAndPlaythroughDefinedValueRow : public FAttributeDefinedValueRow
{
public:
	struct FAttributeInitializationData          OnePlayer_PT1;                                     // 0x8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          TwoPlayers_PT1;                                    // 0x40(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          ThreePlayers_PT1;                                  // 0x78(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          FourPlayers_PT1;                                   // 0xB0(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          OnePlayer_PT2;                                     // 0xE8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          TwoPlayers_PT2;                                    // 0x120(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          ThreePlayers_PT2;                                  // 0x158(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          FourPlayers_PT2;                                   // 0x190(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0xE0 (0xE8 - 0x8)
// ScriptStruct OakGame.PlayerCountDefinedValueRow
struct FPlayerCountDefinedValueRow : public FAttributeDefinedValueRow
{
public:
	struct FAttributeInitializationData          OnePlayer;                                         // 0x8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          TwoPlayers;                                        // 0x40(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          ThreePlayers;                                      // 0x78(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          FourPlayers;                                       // 0xB0(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0x70 (0x78 - 0x8)
// ScriptStruct OakGame.PlaythroughDefinedValueRow
struct FPlaythroughDefinedValueRow : public FAttributeDefinedValueRow
{
public:
	struct FAttributeInitializationData          PlaythroughOne;                                    // 0x8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          PlaythroughTwoAndBeyond;                           // 0x40(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.AdditionalCurrencyRewardInfo
struct FAdditionalCurrencyRewardInfo
{
public:
	TSoftObjectPtr<class UInventoryCategoryData> CurrencyType;                                      // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          CurrencyReward;                                    // 0x28(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCreditsRewardFormula;                       // 0x60(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70E3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakProjectedShield
struct FOakProjectedShield
{
public:
	class UStaticMeshComponent*                  StaticMesh;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ParticleSystem;                                    // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.BodyMeshLinkedParameters
struct FBodyMeshLinkedParameters
{
public:
	TArray<TSubclassOf<class AOakCharacter>>     OwnerClasses;                                      // 0x0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FCustomizationLinkedParameter> LinkedParameters;                                  // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct OakGame.OakChallengeTierRewards
struct FOakChallengeTierRewards
{
public:
	struct FAttributeInitializationData          ExperienceReward;                                  // 0x0(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          CashReward;                                        // 0x38(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          EridiumReward;                                     // 0x70(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UItemPoolData*                         RewardItemPool;                                    // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOakCustomizationData*>         RewardCustomizations;                              // 0xB0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ChallengeReward
struct FChallengeReward
{
public:
	uint8                                        Pad_70E4[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.DaffodilChallengeBonusCompletionData
struct FDaffodilChallengeBonusCompletionData
{
public:
	class UDaffodilChallengeBonusGlobalsData*    ChallengeBonusGlobals;                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_70E5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ChallengeMinimapIcon
struct FChallengeMinimapIcon
{
public:
	class UChallengeLevelActorComponent*         LevelActorComponent;                               // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 MinimapIconGUID;                                   // 0x8(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCompleted;                                        // 0x18(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70E6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ChallengeInWorldIcon
struct FChallengeInWorldIcon
{
public:
	class UChallengeLevelActorComponent*         LevelActorComponent;                               // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxInWorldIconContainer*              AssociatedContainer;                               // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxInWorldIcon*                       ChallengeIcon;                                     // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ChallengeInWorldIconQueueEntry
struct FChallengeInWorldIconQueueEntry
{
public:
	class UChallengeLevelActorComponent*         LevelActorComponent;                               // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGbxPlayerController*                  PlayerToRegister;                                  // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.DamageChallengeData
struct FDamageChallengeData
{
public:
	class UWeaponTypeData*                       WeaponType;                                        // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UManufacturerData*                     Manufacturer;                                      // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            DamageTypeClass;                                   // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70E7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.OakChallengeStatSaveGameData
struct FOakChallengeStatSaveGameData
{
public:
	int32                                        CurrentStatValue;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70E8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UGameStatData>          ChallengeStatPath;                                 // 0x8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.OakChallengeSaveGameData
struct FOakChallengeSaveGameData
{
public:
	int32                                        CompletedCount;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsActive;                                         // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCurrentlyCompleted;                               // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70E9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CompletedProgressLevel;                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProgressCounter;                                   // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakChallengeStatSaveGameData> StatInstanceState;                                 // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 RewardTiersClaimed;                                // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UChallenge>              ChallengeClassPath;                                // 0x30(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChallenge*                            DefaultChallengeObj;                               // 0x58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.CameraManViewPoint
struct FCameraManViewPoint
{
public:
	uint8                                        Pad_70EA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.FrontendStandInAuxiliaryActorData
struct FFrontendStandInAuxiliaryActorData
{
public:
	TSubclassOf<class AStandInAuxiliaryActor>    ActorClass;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Translation;                                       // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x14(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayAnimations;                                   // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDigistructIn;                                     // 0x25(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70EB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DigistructDelay;                                   // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachAuxiliaryActorToCharacter;                  // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AuxiliaryAttachmentSocket;                         // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRotateWithCharacter;                              // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCopyPlayerWeapon;                                 // 0x39(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70ED[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PlayerTranslation;                                 // 0x3C(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PlayerRotation;                                    // 0x48(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHidden;                                           // 0x54(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70EE[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.StandInAuxiliaryState_Character
struct FStandInAuxiliaryState_Character
{
public:
	class AStandInAuxiliaryActor*                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrontendStandInAuxiliaryActorData    TemplateData;                                      // 0x8(0x58)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.PlayerTeleportState
struct FPlayerTeleportState
{
public:
	uint8                                        Pad_70EF[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakPlayerTeleportData*                TeleportData;                                      // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.CheatManagerItemPool
struct FCheatManagerItemPool
{
public:
	class FString                                ItemPool;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.CinematicState
struct FCinematicState
{
public:
	class UOakCinematicTag*                      CinematicTag;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SequenceTime;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECinematicState                   CurrentState;                                      // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F1[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct OakGame.CinematicData
struct FCinematicData
{
public:
	class UOakCinematicTag*                      CinematicTag;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                        Sequence;                                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaSource*                          Movie;                                             // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCinematicModeData*                    IntroCinematicMode;                                // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRepeatable;                                       // 0x20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisallowCutsceneSkip;                             // 0x21(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IntroTime;                                         // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       IntroScreenParticle;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCinematicModeData*                    PlayingCinematicMode;                              // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            MissionObjective;                                  // 0x38(0x30)(Edit, NativeAccessSpecifierPublic)
	class UOakUIDataCreditsScreenData*           CreditsScreenData;                                 // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDismissCreditsOnEnd;                              // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.OakCustomizationSaveGameData
struct FOakCustomizationSaveGameData
{
public:
	bool                                         IsNew;                                             // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UOakCustomizationData>  CustomizationAssetPath;                            // 0x8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.OakThumbnailManagerLightProperties
struct FOakThumbnailManagerLightProperties
{
public:
	struct FRotator                              Direction;                                         // 0x0(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Brightness;                                        // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                Color;                                             // 0x10(0x4)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x690 (0x690 - 0x0)
// ScriptStruct OakGame.OakThumbnailManagerRenderProperties
struct FOakThumbnailManagerRenderProperties
{
public:
	struct FTransform                            ItemTransform;                                     // 0x0(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FOakThumbnailManagerLightProperties   LightProperties;                                   // 0x30(0x14)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakThumbnailManagerLightProperties> AdditionalLights;                                  // 0x48(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FThumbnailParameters                  ThumbnailParameters;                               // 0x58(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x90(0x600)(Edit, NativeAccessSpecifierPublic)
};

// 0x50 (0x6E0 - 0x690)
// ScriptStruct OakGame.OakCustomizationThumbnailData
struct FOakCustomizationThumbnailData : public FOakThumbnailManagerRenderProperties
{
public:
	TSoftClassPtr<class AActor>                  ItemClass;                                         // 0x690(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxCustomizationTypeData*>     WhitelistedCustomizationTypes;                     // 0x6B8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGbxCustomizationTypeData*>     BlacklistedCustomizationTypes;                     // 0x6C8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct OakGame.GoreRegionEventSummary
struct FGoreRegionEventSummary
{
public:
	struct FVector_NetQuantize                   HitLocation;                                       // 0x0(0xC)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             HitDirection;                                      // 0xC(0xC)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   Origin;                                            // 0x18(0xC)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x24(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoreRegionIndex;                                   // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.GoreRegionState
struct FGoreRegionState
{
public:
	class UGoreDamageData*                       GoreData;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideStumpSocket : 1;                          // Mask: 0x1, PropSize: 0x10x8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideRootDamageBone : 1;                       // Mask: 0x2, PropSize: 0x10x8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideStumpBoneScale : 1;                       // Mask: 0x4, PropSize: 0x10x8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideLimbSocket : 1;                           // Mask: 0x8, PropSize: 0x10x8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_278 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_70F7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StumpSocket;                                       // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StumpBoneScale;                                    // 0x18(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RootDamageBone;                                    // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LimbSocket;                                        // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbScale;                                         // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70F9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventName;                                         // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70FA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.DamageDataCustomStatusEffectApplicationSpec
struct FDamageDataCustomStatusEffectApplicationSpec
{
public:
	class UStatusEffectData*                     StatusEffect;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         Condition;                                         // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyToEnemiesOnly;                               // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70FB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          EffectDuration;                                    // 0x18(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.PlayerDifficultyBalanceInfo
struct FPlayerDifficultyBalanceInfo
{
public:
	float                                        PlayerDamageTakenMultiplier;                       // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerDamageDoneMultiplier;                        // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x270 (0x270 - 0x0)
// ScriptStruct OakGame.IncomingDamageDisplayInfo
struct FIncomingDamageDisplayInfo
{
public:
	class UStaticMesh*                           HealthDamageIndicatorStaticMesh;                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           ShieldDamageIndicatorStaticMesh;                   // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           ArmorDamageIndicatorStaticMesh;                    // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DamageIndicatorRelativeLocation;                   // 0x18(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageIndicatorScale;                              // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinForegroundFOVToDrawIndicators;                  // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageIndicatorDuration;                           // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageIndicatorFadeDuration;                       // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70FC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    ScaleDurationBySeverityCurve;                      // 0x38(0x78)(Edit, NativeAccessSpecifierPublic)
	int32                                        MaxDamageIndicators;                               // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DamageIndicatorSphereRelativeLocation;             // 0xB4(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageIndicatorSphereRelativePitch;                // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DamageIndicatorSphereRadius;                       // 0xC4(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageIndicatorOpacityAlphaParameterName;          // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageIndicatorPercentOfLifeMaterialParameterName; // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                         DamageIndicatorCenterFadeScreenPercent;            // 0xE0(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  DamageIndicatorCenterFadeMaterialParameterName;    // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    DamageIndicatorYawRemappingCurve;                  // 0xF0(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    DamageIndicatorPitchRemappingCurve;                // 0x168(0x78)(Edit, NativeAccessSpecifierPublic)
	float                                        MaxPitchToApplyYawRemapping;                       // 0x1E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeJoltRange;                                    // 0x1E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    MeleeJoltLocationCurve;                            // 0x1E8(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FGbxEasingFunc                        AttackerLocationCrouchEasing;                      // 0x260(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        AttackerLocationCrouchTransitionDuration;          // 0x26C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.StatusEffectApplicationDamageDefaultSettings
struct FStatusEffectApplicationDamageDefaultSettings
{
public:
	class UStatusEffectData*                     StatusEffectData;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentBaseDamage;                                 // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentChance;                                     // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70FD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.DamageDisplayInfo
struct FDamageDisplayInfo
{
public:
	class UParticleSystem*                       DamageNumberParticleSystem;                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageNumberParticleEventName;                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageNumberCritParticleEventName;                 // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageNumberResistParticleEventName;               // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DamageNumberImmuneParticleEventName;               // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DamageNumberVehicleLocationOffset;                 // 0x28(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_70FE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x200 - 0x1C0)
// ScriptStruct OakGame.OakPipelineDamageInput
struct FOakPipelineDamageInput : public FPipelineDamageInput
{
public:
	uint8                                        Pad_70FF[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameStatData*                         KillStat;                                          // 0x1F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct OakGame.OakHealthTypeBalanceData
struct FOakHealthTypeBalanceData : public FHealthTypeBalanceData
{
public:
	float                                        NonelementalModifier;                              // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CryoModifier;                                      // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DarkMagicModifier;                                 // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireModifier;                                      // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PoisonModifier;                                    // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShockModifier;                                     // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   EasyOverride;                                      // 0x20(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   HardOverride;                                      // 0x30(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct OakGame.AmputateLimbData
struct FAmputateLimbData
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoneScale;                                         // 0x8(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7100[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           StumpMesh;                                         // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StumpParticles;                                    // 0x20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             StumpMaterialOverride;                             // 0x28(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             StumpDecal;                                        // 0x30(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StumpDecalSize;                                    // 0x38(0xC)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStumpReceivesDecal;                               // 0x44(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7101[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           StumpSound;                                        // 0x48(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            StumpTransform;                                    // 0x50(0x30)(BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                               LimbMesh;                                          // 0x80(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LimbParticles;                                     // 0x88(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    LimbActorClass;                                    // 0x90(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceConstant*             LimbMaterialOverride;                              // 0x98(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritStumpMaterialParameters;                   // 0xA0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMaterialParameterCopyMethod      InheritStumpMaterialParametersMethod;              // 0xA1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritLimbMaterialParameters;                    // 0xA2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMaterialParameterCopyMethod      InheritLimbMaterialParametersMethod;               // 0xA3(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bScaleLimbToStump;                                 // 0xA4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7102[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LimbSocket;                                        // 0xA8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbScale;                                         // 0xB0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LimbMassScale;                                     // 0xB4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SourceMaterialIndex;                               // 0xB8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7103[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct OakGame.CauseDamageStatusEffectOverrides
struct FCauseDamageStatusEffectOverrides
{
public:
	float                                        BaseChance;                                        // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseDuration;                                      // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseDamage;                                        // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBaseDamageAsPercent;                              // 0xC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7104[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChanceScalar;                                      // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DurationScalar;                                    // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageScalar;                                      // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.AvailablePartData
struct FAvailablePartData
{
public:
	struct FWeightedActorPartData                PartData;                                          // 0x0(0x40)(NoDestructor, NativeAccessSpecifierPublic)
	class UOakDebugWeaponBuilderButton*          OptionButton;                                      // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7105[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.AvailableInventoryBalanceData
struct FAvailableInventoryBalanceData
{
public:
	class UInventoryBalanceData*                 InventoryBalance;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakDebugWeaponBuilderButton*          OptionButton;                                      // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7106[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.AvailableAmmoType
struct FAvailableAmmoType
{
public:
	class UGbxAmmoTypeData*                      AmmoType;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakDebugWeaponBuilderButton*          OptionButton;                                      // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7107[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.AvailableManufacturer
struct FAvailableManufacturer
{
public:
	class UManufacturerData*                     Manufacturer;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakDebugWeaponBuilderButton*          OptionButton;                                      // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7108[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.DeveloperPerk
struct FDeveloperPerk
{
public:
	TArray<struct FKey>                          KeyCombo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        PerkTypeEnumIdx;                                   // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7109[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.EchoLogTrackingInfo
struct FEchoLogTrackingInfo
{
public:
	uint8                                        Pad_710A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           Event;                                             // 0x10(0x10)(ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.DialogScriptToLoadEntry
struct FDialogScriptToLoadEntry
{
public:
	class FString                                DialogScriptLevelName;                             // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDialogScriptData>      DialogScriptToLoad;                                // 0x10(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakDownloadableEntitlementCurrencyType
struct FOakDownloadableEntitlementCurrencyType
{
public:
	class FName                                  CurrencyName;                                      // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDownloadableEntitlementPartData_Currency* CurrencyPartData;                                  // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.DownloadableEntitlementSetItem
struct FDownloadableEntitlementSetItem
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Count;                                             // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  Description;                                       // 0x8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FString                                SerialNumber;                                      // 0x20(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x0 (0x6D0 - 0x6D0)
// ScriptStruct OakGame.OakDroneProjectileAnimInstanceProxy
struct FOakDroneProjectileAnimInstanceProxy : public FGbxAnimInstanceProxy
{
public:
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.OakEULAData_EULA
struct FOakEULAData_EULA
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_710B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Version;                                           // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<class FText>                          BodyParagraphs;                                    // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.PlayerClassToClassId
struct FPlayerClassToClassId
{
public:
	class FString                                PlayerClassName;                                   // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       ClassId;                                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_710C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DevMapToMapId
struct FDevMapToMapId
{
public:
	class FName                                  DevMapName;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       MapId;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_710D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.LootAudioStinger
struct FLootAudioStinger
{
public:
	TWeakObjectPtr<class AActor>                 SoundActor;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           Sound;                                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ConditionalSavegameExpression
struct FConditionalSavegameExpression
{
public:
	class UGbxCondition*                         Condition;                                         // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakSaveGame>              SaveGame;                                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakProfile>               Profile;                                           // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.GameStateSaveData
struct FGameStateSaveData
{
public:
	struct FMapIDData                            LastTraveledMapID;                                 // 0x0(0x2)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_710E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MayhemLevel;                                       // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MayhemRandomSeed;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakUIStatusMenuLookupEntry
struct FOakUIStatusMenuLookupEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  State;                                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakUIStatusMenuSettings
struct FOakUIStatusMenuSettings
{
public:
	class FName                                  DefaultSubMenu;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOakUIStatusMenuLookupEntry>   SubMenuLookup;                                     // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0xC8 - 0xA8)
// ScriptStruct OakGame.OakGlobalsUI
struct FOakGlobalsUI : public FGbxGlobalsUI
{
public:
	struct FOakUIStatusMenuSettings              StatusMenuSettings;                                // 0xA8(0x18)(NativeAccessSpecifierPublic)
	bool                                         UseGFxPauseMenu;                                   // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseGFxMainMenu;                                    // 0xC1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_710F[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.OakHitRegionModifierData
struct FOakHitRegionModifierData
{
public:
	struct FAttributeInitializationData          DamageScale;                                       // 0x0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UGbxCondition*                         Condition;                                         // 0x38(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x0 (0x8 - 0x8)
// ScriptStruct OakGame.OakInputActionEventInterpreter
struct FOakInputActionEventInterpreter : public FGbxInputActionEventInterpreter
{
public:
};

// 0x88 (0x88 - 0x0)
// ScriptStruct OakGame.OakInventoryItemSaveGameData
struct FOakInventoryItemSaveGameData
{
public:
	struct FInventorySaveGameData                Item;                                              // 0x0(0x80)(NativeAccessSpecifierPublic)
	int32                                        PickupOrderIndex;                                  // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Flags;                                             // 0x84(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakInventorySortData
struct FOakInventorySortData
{
public:
	enum class EOakInventoryMenuSortMode         SortMode;                                          // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7110[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakInventoryMenuTypePriorityInfo> SortPriorities;                                    // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         bDoEquippedTypeFirst;                              // 0x18(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7111[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EquippedItemGrouping;                              // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakInventoryMenuCounts
struct FOakInventoryMenuCounts
{
public:
	int32                                        ItemCount;                                         // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemMax;                                           // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ItemCountColor;                                    // 0x8(0x10)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoldenKeyCount;                                    // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ErediumCount;                                      // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoneyCount;                                        // 0x20(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VaultCoinCount;                                    // 0x24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ExtractedOakInventoryCombinationNameData
struct FExtractedOakInventoryCombinationNameData
{
public:
	class FName                                  FirstPartTag;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SecondPartTag;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryNamePartData*                NamePart;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakInventoryNameData
struct FOakInventoryNameData
{
public:
	class UInventoryPartData*                    Part;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryNamePartData*                NamePart;                                          // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakJAKFeedbackData
struct FOakJAKFeedbackData
{
public:
	class UParticleSystem*                       ParticleEffect;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           SoundEvent;                                        // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct OakGame.LevelledSaveGameData
struct FLevelledSaveGameData
{
public:
	int32                                        Level;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7112[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTravelStationData>     InitialTravelStation;                              // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UMission>                ActiveMissionClass;                                // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMissionObjectiveSet>   ActiveMissionObjectiveSet;                         // 0x58(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       CreditsAmount;                                     // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       EridiumAmount;                                     // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UItemPoolData>>  DefaultInventory;                                  // 0x88(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint32                                       RandomRolls;                                       // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7113[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UItemPoolData>>  RandomInventory;                                   // 0xA0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x10 (0x138 - 0x128)
// ScriptStruct OakGame.OakLightBeamInitializationData
struct FOakLightBeamInitializationData : public FLightBeamInitializationData
{
public:
	float                                        BaseStatusEffectChance;                            // 0x128(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseStatusEffectDamage;                            // 0x12C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseStatusEffectDuration;                          // 0x130(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7114[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x158 - 0x140)
// ScriptStruct OakGame.OakLightProjectileInitializationData
struct FOakLightProjectileInitializationData : public FLightProjectileInitializationData
{
public:
	float                                        BaseStatusEffectChance;                            // 0x140(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseStatusEffectDamage;                            // 0x144(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseStatusEffectDuration;                          // 0x148(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusEffectChanceScalar;                          // 0x14C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusEffectDamageScalar;                          // 0x150(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusEffectDurationScalar;                        // 0x154(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.WeightedLoadingTooltip
struct FWeightedLoadingTooltip
{
public:
	class FText                                  ToolTipText;                                       // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7115[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.LoadingScreenPerMapOptions
struct FLoadingScreenPerMapOptions
{
public:
	struct FColor                                FadeColor;                                         // 0x0(0x4)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMesh;                                         // 0x4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTips;                                         // 0x5(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideFadeTime;                                 // 0x6(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7116[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideFadeTime;                                  // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7117[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UGbxAction>              PostLoadScreenAction;                              // 0x10(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFillViewport;                                     // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7118[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct OakGame.OakMailItem
struct FOakMailItem
{
public:
	enum class EMailItemType                     MailItemType;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7119[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SenderDisplayName;                                 // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Subject;                                           // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x38(0x18)(NativeAccessSpecifierPublic)
	class FString                                GearSerialNumber;                                  // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       MissionHash;                                       // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_711A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MailGuid;                                          // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             DateSent;                                          // 0x78(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             ExpirationDate;                                    // 0x80(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      FromPlayerId;                                      // 0x88(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenRead;                                      // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_711B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ManagedActorCountData
struct FManagedActorCountData
{
public:
	uint8                                        Pad_711C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ManagedActorOwnerEntry
struct FManagedActorOwnerEntry
{
public:
	uint8                                        Pad_711D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ManagedActorEntry
struct FManagedActorEntry
{
public:
	uint8                                        Pad_711E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        Actors;                                            // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct OakGame.MapCharacterPhysicsSettings
struct FMapCharacterPhysicsSettings
{
public:
	float                                        PlayerAirControlScale;                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.OakMapPatchActorPatchData
struct FOakMapPatchActorPatchData
{
public:
	TSoftObjectPtr<class AActor>                 Actor;                                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UOakMapPatchScript>      ActorScript;                                       // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.OakMapPatchActorGroupPatchData
struct FOakMapPatchActorGroupPatchData
{
public:
	TArray<struct FOakMapPatchActorPatchData>    Actors;                                            // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UOakMapPatchScript>      GroupScript;                                       // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct OakGame.OakMapPatchActorSpawnData
struct FOakMapPatchActorSpawnData
{
public:
	TSoftClassPtr<class AActor>                  Class;                                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_711F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform;                                         // 0x30(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UOakMapPatchScript>      ActorScript;                                       // 0x60(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7120[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.OakMapPatchActorGroupSpawnData
struct FOakMapPatchActorGroupSpawnData
{
public:
	TArray<struct FOakMapPatchActorSpawnData>    Actors;                                            // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UOakMapPatchScript>      GroupScript;                                       // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.OakMapPatchData
struct FOakMapPatchData
{
public:
	class FName                                  MapName;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UOakMapPatchScript>      Script;                                            // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AActor>>         ActorsToDelete;                                    // 0x30(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FOakMapPatchActorGroupPatchData> PatchGroups;                                       // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakMapPatchActorGroupSpawnData> SpawnGroups;                                       // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct OakGame.OakMenuHelpers
struct FOakMenuHelpers
{
public:
	uint8                                        Pad_7121[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.InstancedPlayerOwnerInfo
struct FInstancedPlayerOwnerInfo
{
public:
	TWeakObjectPtr<class AOakPlayerController>   InstancedPlayerOwner;                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyShowOnPlayerOwner;                            // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7122[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UZoneMapPOITypeData*                   PointOfInterestType;                               // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.AutoplayCombatState
struct FAutoplayCombatState
{
public:
	uint8                                        Pad_7123[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                EnemyTarget;                                       // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7124[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.AutoplayAction
struct FAutoplayAction
{
public:
	class AActor*                                Target;                                            // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7125[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.AutoplayMissionState
struct FAutoplayMissionState
{
public:
	uint8                                        Pad_7126[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAutoplayAction>               PossibleActions;                                   // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TSubclassOf<class UMission>                  CurrentMission;                                    // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               CurrentObjective;                                  // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7127[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.MissionSpawnerFailsafeData
struct FMissionSpawnerFailsafeData
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FailsafeSeconds;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7128[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.LevelSyncCompletedMission
struct FLevelSyncCompletedMission
{
public:
	TSubclassOf<class UMission>                  MissionClass;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7129[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.MissionStarterGear
struct FMissionStarterGear
{
public:
	class UMissionObjective*                     Objective;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UItemPoolData>          StarterGearItemPool;                               // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInventoryCategoryData> InventoryCategory;                                 // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct OakGame.OakModifierData
struct FOakModifierData : public FTableRowBase
{
public:
	struct FDataTableRowHandle                   TargetResolver;                                    // 0x8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   Effect;                                            // 0x18(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MinValue;                                          // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxValue;                                          // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.OakModifierSet
struct FOakModifierSet
{
public:
	bool                                         bDisplay;                                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_712A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ModifierName;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  DisplayDesc;                                       // 0x28(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           Modifiers;                                         // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.OakModifierSetWithMutexTags
struct FOakModifierSetWithMutexTags
{
public:
	struct FOakModifierSet                       ModifierSet;                                       // 0x0(0x50)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MutexTags;                                         // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct OakGame.OakModifierStatusEffectData
struct FOakModifierStatusEffectData : public FTableRowBase
{
public:
	class UGbxAttributeData*                     AttributeData;                                     // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGbxAttributeModifierType         ModifierType;                                      // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_712B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxValue;                                          // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinValue;                                          // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_712C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct OakGame.OakModifierTargetResolverData
struct FOakModifierTargetResolverData : public FTableRowBase
{
public:
	TArray<class UGbxAbilityEffectTargetResolutionData*> TargetResolvers;                                   // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UGbxAbilityEffectTargetResolutionData* TargetResolver;                                    // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.MusicInterestASR
struct FMusicInterestASR
{
public:
	float                                        SustainValue;                                      // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackTimeSeconds;                                 // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SustainTimeSeconds;                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecayTimeSeconds;                                  // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.MusicLayerInfo
struct FMusicLayerInfo
{
public:
	class UWwiseState*                           NoneState;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseState*                           OnState;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseState*                           OffState;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseState*                           ExitCombatState;                                   // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.MusicLayer
struct FMusicLayer
{
public:
	float                                        InterestMin;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterestMax;                                       // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.MusicPart
struct FMusicPart
{
public:
	int32                                        UpdateIntervalInBeats;                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterestMin;                                       // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterestMax;                                       // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_712D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EOakMusicLayer, struct FMusicLayer> AssociatedMusicLayers;                             // 0x10(0x50)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.MusicSection
struct FMusicSection
{
public:
	float                                        CombatMin;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatMax;                                         // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EOakMusicPart, struct FMusicPart> AssociatedMusicParts;                              // 0x8(0x50)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct OakGame.ScriptedVehicleMove
struct FScriptedVehicleMove
{
public:
	uint8                                        Pad_712E[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct OakGame.DrivingOverride
struct FDrivingOverride
{
public:
	uint8                                        Pad_712F[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.SpeedOverride
struct FSpeedOverride
{
public:
	uint8                                        Pad_7130[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.RubberbandSpeedData
struct FRubberbandSpeedData
{
public:
	TWeakObjectPtr<class AActor>                 RubberBandTarget;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistance;                                       // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistance;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceSpeed;                                  // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceSpeed;                                  // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBehindOnly;                                       // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7131[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SplineReference;                                   // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SplineDistanceOffset;                              // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSpline;                                        // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7132[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      CachedSplineComponent;                             // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7133[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakNavReverseState
struct FOakNavReverseState
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakNavComponent*                      NavComp;                                           // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7134[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.OakOnlineLobbyPlayerInfo
struct FOakOnlineLobbyPlayerInfo
{
public:
	uint8                                        Pad_7135[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EOakOnlineLobbyPlayerPlateState   PlateState;                                        // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLobbyLead;                                      // 0x11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7136[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x18(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MissionDisplayName;                                // 0x30(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MapDisplayName;                                    // 0x48(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        CharacterLevel;                                    // 0x60(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakOnlineLobbyConnectivityState  ConnectivityState;                                 // 0x64(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakOnlineLobbyTalkingState       TalkingState;                                      // 0x65(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7137[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.OakOnlineLobbyInfo
struct FOakOnlineLobbyInfo
{
public:
	enum class ENetworkType                      NetworkType;                                       // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInviteType                       InviteType;                                        // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7138[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CurrentActivity;                                   // 0x8(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EOakOnlineLobbyConnectivityState  ConnectivityState;                                 // 0x20(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7139[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentConnectedPlayerCount;                       // 0x24(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxConnectedPlayerCount;                           // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_713A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.OnlineNetworkOptionData
struct FOnlineNetworkOptionData
{
public:
	class FText                                  Label;                                             // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class ENetworkType                      NetworkType;                                       // 0x30(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInviteType                       InviteType;                                        // 0x31(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_713B[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakPassiveAbilityHUDIconData
struct FOakPassiveAbilityHUDIconData
{
public:
	enum class EOakPassiveAbilityHUDIconActivationType ActivationType;                                    // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_713C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStatusEffectData*                     CustomStatusEffectData;                            // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakAbilityTimerData*                  AbilityTimerData;                                  // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityHUDItemData*          HUDItemData;                                       // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.TriggeredPassiveAbilityEffect
struct FTriggeredPassiveAbilityEffect
{
public:
	class UStatusEffectData*                     StatusEffectData;                                  // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          Duration;                                          // 0x8(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bApplyToPlayer;                                    // 0x40(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAdditionalTriggeredEffectTargets AdditionalEffectTargets;                           // 0x41(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePlayerForAdditionalEffectTargetContext;        // 0x42(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWantsEffectEndedEvent;                            // 0x43(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanTriggerMultipleTimesPerFrame;                  // 0x44(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_713D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.BonusAttributeModifierUpgrade
struct FBonusAttributeModifierUpgrade
{
public:
	int32                                        GradeToApplyAt;                                    // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_713E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          BonusUpgrade;                                      // 0x8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct OakGame.BranchColorInfo
struct FBranchColorInfo
{
public:
	class FString                                FrameColorName;                                    // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FrameColorHeader;                                  // 0x10(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FrameColorBackground;                              // 0x20(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          IconColor;                                         // 0x30(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          IconBackgroundColor;                               // 0x40(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IllustrationName;                                  // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             ClassIcon;                                         // 0x60(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClassIconCssClassName;                             // 0x88(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x198 (0x198 - 0x0)
// ScriptStruct OakGame.PassiveAbilityBuffData
struct FPassiveAbilityBuffData
{
public:
	struct FSoftObjectPath                       PassiveAbilityClassPath;                           // 0x0(0x18)(Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UOakPassiveAbility>      PassiveAbilityClassPtr;                            // 0x18(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBranchColorInfo                      TreeBranchColorInfo;                               // 0x40(0x98)(Edit, EditConst, NativeAccessSpecifierPublic)
	class FString                                ItemFrameName;                                     // 0xD8(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AbilityNameLocNamespace;                           // 0xE8(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AbilityNameLocKey;                                 // 0xF8(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityTreeBranchData*       AbilityTreeBranch;                                 // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          GradeBonusInitializer;                             // 0x110(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x148(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             ClassIcon;                                         // 0x170(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.MicropatchTracker
struct FMicropatchTracker
{
public:
	class FString                                MicropatchString;                                  // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CurrentValue;                                      // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NewValue;                                          // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.OakPlayerAbilityHUDItemValue
struct FOakPlayerAbilityHUDItemValue
{
public:
	int32                                        StackCount;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PercentComplete;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.ExtraAbilityPointsScheduleEntry
struct FExtraAbilityPointsScheduleEntry
{
public:
	int32                                        Level;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExtraPoints;                                       // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakActionAbilityAugmentConfigurationSetting
struct FOakActionAbilityAugmentConfigurationSetting
{
public:
	class UOakActionAbilityAugmentSlotData*      ModSlotData;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakActionAbilityAugmentData*          ModData;                                           // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakActionAbilityAugmentConfiguration
struct FOakActionAbilityAugmentConfiguration
{
public:
	class UOakActionAbilityAugmentData*          AugmentData;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakActionAbilityAugmentConfigurationSetting> Settings;                                          // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakActionAbilityAugmentSlotConfiguration
struct FOakActionAbilityAugmentSlotConfiguration
{
public:
	TSubclassOf<class UOakActionAbility>         ActionAbilityClass;                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakActionAbilityAugmentSlotData*      SlotData;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakActionAbilityAugmentConfiguration> AugmentConfigurations;                             // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakActionAbilityAugmentSlotConfigurationList
struct FOakActionAbilityAugmentSlotConfigurationList
{
public:
	class UOakPlayerAbilityManagerComponent*     Owner;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakActionAbilityAugmentSlotConfiguration> SlotConfigurations;                                // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x1C (0x28 - 0xC)
// ScriptStruct OakGame.OakActionAbilityAugmentSlot
struct FOakActionAbilityAugmentSlot : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_713F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UOakActionAbility>         ActionAbilityClass;                                // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakActionAbilityAugmentSlotData*      SlotData;                                          // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakActionAbilityAugmentData*          AugmentData;                                       // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct OakGame.OakActionAbilityAugmentSlotList
struct FOakActionAbilityAugmentSlotList : public FFastArraySerializer
{
public:
	class UOakPlayerAbilityManagerComponent*     Owner;                                             // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakActionAbilityAugmentSlot>  Items;                                             // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x14 (0x20 - 0xC)
// ScriptStruct OakGame.OakPlayerAbilitySlot
struct FOakPlayerAbilitySlot : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_7140[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOakPlayerAbilitySlotData*             SlotData;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOakPlayerAbility>         AbilityClass;                                      // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct OakGame.OakPlayerAbilitySlotList
struct FOakPlayerAbilitySlotList : public FFastArraySerializer
{
public:
	class UOakPlayerAbilityManagerComponent*     Owner;                                             // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakPlayerAbilitySlot>         Items;                                             // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x2C (0x38 - 0xC)
// ScriptStruct OakGame.OakPlayerAbilityHUDItem
struct FOakPlayerAbilityHUDItem : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_7141[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IOakPlayerAbilityHUDItemValueProviderInterface> Provider;                                          // 0x10(0x10)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UOakPlayerAbilityHUDItemData*          HUDItemData;                                       // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOakPlayerAbilityHUDItemValue         Value;                                             // 0x28(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7142[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct OakGame.OakPlayerAbilityHUDItemList
struct FOakPlayerAbilityHUDItemList : public FFastArraySerializer
{
public:
	class UOakPlayerAbilityManagerComponent*     Owner;                                             // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakPlayerAbilityHUDItem>      Items;                                             // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.OakAbilitySlot
struct FOakAbilitySlot
{
public:
	int32                                        LevelUnlock;                                       // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 SlotID;                                            // 0x4(0x10)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x28 - 0x14)
// ScriptStruct OakGame.OakActionAbilitySlot
struct FOakActionAbilitySlot : public FOakAbilitySlot
{
public:
	uint8                                        Pad_7143[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakAbilitySlot>               AugmentSlots;                                      // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakPlayerAbilityAllyQueryResult
struct FOakPlayerAbilityAllyQueryResult
{
public:
	TArray<class AOakCharacter_Player*>          Allies;                                            // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Companions;                                        // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakPlayerAbilityAllyQuerySpec
struct FOakPlayerAbilityAllyQuerySpec
{
public:
	bool                                         bInfiniteRange;                                    // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7144[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Range;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeCompanions;                                // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7145[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.AbilityTreeItem
struct FAbilityTreeItem
{
public:
	class UOakPlayerAbilityTree*                 Owner;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityTreeItemData*         ItemData;                                          // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7146[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.AbilityTreeTier
struct FAbilityTreeTier
{
public:
	class UOakPlayerAbilityTree*                 Owner;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityTreeTierData*         TierData;                                          // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7147[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.AbilityTreeBranch
struct FAbilityTreeBranch
{
public:
	class UOakPlayerAbilityTree*                 Owner;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakPlayerAbilityTreeBranchData*       BranchData;                                        // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakActionAbility>         BranchActionAbilityClass;                          // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7148[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x6E0 - 0x6D0)
// ScriptStruct OakGame.OakPlayerAnimInstanceProxy
struct FOakPlayerAnimInstanceProxy : public FGbxCharacterAnimInstanceProxy
{
public:
	uint8                                        Pad_7149[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.ViewLeadingInfo
struct FViewLeadingInfo
{
public:
	struct FViewLeadingTranslationInfo           Translation;                                       // 0x0(0x2C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FViewLeadingRotationInfo              Rotation;                                          // 0x2C(0x3C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.QueuedInventoryTransfer
struct FQueuedInventoryTransfer
{
public:
	uint8                                        Pad_714A[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PlayerEchoLogStatus
struct FPlayerEchoLogStatus
{
public:
	class UEchoLogData*                          EchoLogData;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_714B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct OakGame.AutoAimDebugData
struct FAutoAimDebugData
{
public:
	uint8                                        Pad_714C[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakAcceptedOfflineEULA
struct FOakAcceptedOfflineEULA
{
public:
	int32                                        ID;                                                // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_714D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Version;                                           // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakFriendEncounterData
struct FOakFriendEncounterData
{
public:
	uint32                                       NumEncounters;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_714E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        TimeLastEncounter;                                 // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakProfileMenuTutorialInfo
struct FOakProfileMenuTutorialInfo
{
public:
	TArray<class FName>                          SeenTutorials;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bTutorialsDisabled;                                // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTutorialsAllowedInNonGameModes;                   // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSeenFastTravelPrompt;                          // 0x12(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_714F[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakProfileLastInventoryFilterInfo
struct FOakProfileLastInventoryFilterInfo
{
public:
	class FName                                  SlotTypeId;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastFilterIndex;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7150[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.TriggeredDamagePresentation
struct FTriggeredDamagePresentation
{
public:
	uint8                                        Pad_7151[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.RecentlyResistedAttackData
struct FRecentlyResistedAttackData
{
public:
	class AActor*                                DamagedActor;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7152[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.RecentIncomingDamageData
struct FRecentIncomingDamageData
{
public:
	class AActor*                                DamageInstigator;                                  // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7153[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDamageComponent*                      DamageInstigatorDamageComponent;                   // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   DamageInstigatorLocation;                          // 0x20(0xC)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7154[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialDuration;                                   // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageSeverity;                                    // 0x3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeRemaining;                                     // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasJolt;                                          // 0x44(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERecentDamageFlags                Flags;                                             // 0x45(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        InstanceId;                                        // 0x46(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7155[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakForceReplicateActorInfo
struct FOakForceReplicateActorInfo
{
public:
	uint8                                        Pad_7156[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Actor;                                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.DafTownHubTravelData
struct FDafTownHubTravelData
{
public:
	bool                                         bIsSet;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsActive;                                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7157[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ReturnTravelLocation;                              // 0x4(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ReturnTravelRotation;                              // 0x10(0xC)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_7158[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ReturnMapName;                                     // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ReturnStationName;                                 // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTravelStationData>     ReturnTravelStation;                               // 0x40(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakProfileCustomizationLinkData
struct FOakProfileCustomizationLinkData
{
public:
	class FName                                  CustomizationName;                                 // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActive;                                           // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7159[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GameStatSaveGameData
struct FGameStatSaveGameData
{
public:
	int32                                        StatValue;                                         // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_715A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UGameStatData>          StatPath;                                          // 0x8(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.PlayerPrestigeProfileData
struct FPlayerPrestigeProfileData
{
public:
	int64                                        PrestigeExperience;                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastUpgradedTreeIndex;                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_715B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                PointsSpentByIndexOrder;                           // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bHasSeenTutorial;                                  // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_715C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct OakGame.OakProfileCloudData
struct FOakProfileCloudData
{
public:
	TArray<struct FGameStatSaveGameData>         ProfileStatsData;                                  // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryItemSaveGameData> BankInventoryList;                                 // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FInventorySaveGameData>        LostLootInventoryList;                             // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakMailItem>                  NPCMailItems;                                      // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        MailGuids;                                         // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakSDUSaveGameData>           ProfileSDUList;                                    // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakCustomizationSaveGameData> UnlockedCustomizations;                            // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakInventoryCustomizationPartInfo> UnlockedInventoryCustomizationParts;               // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakChallengeSaveGameData>     OakProfileChallengeData;                           // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EPlayerDifficultySetting          Difficulty;                                        // 0x90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_715D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerPrestigeProfileData            PlayerPrestige;                                    // 0x98(0x28)(NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.HeroPointsSaveData
struct FHeroPointsSaveData
{
public:
	uint32                                       Strength;                                          // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       Dexterity;                                         // 0x4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       Intelligence;                                      // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       Wisdom;                                            // 0xC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       Constitution;                                      // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       Luck;                                              // 0x14(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       UnspentPoints;                                     // 0x18(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       RespecCount;                                       // 0x1C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UOakPlayerAspectData>   PlayerAspectDataPath;                              // 0x20(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PlaythroughActiveFastTravelSaveData
struct FPlaythroughActiveFastTravelSaveData
{
public:
	TArray<struct FActiveFastTravelSaveData>     ActiveTravelStations;                              // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.LevelPersistence_Actor_SaveGameData
struct FLevelPersistence_Actor_SaveGameData
{
public:
	class FName                                  ActorName;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimerRemaining;                                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_715E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.LevelPersistence_Level_SaveGameData
struct FLevelPersistence_Level_SaveGameData
{
public:
	class FName                                  LevelName;                                         // 0x0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLevelPersistence_Actor_SaveGameData> SavedActors;                                       // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.InventoryUISaveGameData
struct FInventoryUISaveGameData
{
public:
	int32                                        PickupOrderIndex;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenSeenInInventoryMenu;                       // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMarkedAsFavorite;                                 // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMarkedAsJunk;                                     // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_715F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InventoryListIndex;                                // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.UITrackingSaveGameData
struct FUITrackingSaveGameData
{
public:
	bool                                         bHasSeenSkillMenuUnlock;                           // 0x0(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSeenEchoBoot_AmmoBar;                          // 0x1(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSeenEchoBoot_ShieldBar;                        // 0x2(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSeenEchoBoot_Grenades;                         // 0x3(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighestTHVMBreadcrumbSeen;                         // 0x4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UInventorySlotData>> InventorySlotUnlocksSeen;                          // 0x8(0x10)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        SavedSpinOffset;                                   // 0x18(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7160[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.EchoLogSaveGameData
struct FEchoLogSaveGameData
{
public:
	bool                                         bHasBeenSeenInLog;                                 // 0x0(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7161[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UEchoLogData>           EchoLogPath;                                       // 0x8(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.CustomFloatCustomizationSaveGameData
struct FCustomFloatCustomizationSaveGameData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7162[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.CustomPlayerColorSaveGameData
struct FCustomPlayerColorSaveGameData
{
public:
	class FName                                  ColorParameter;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AppliedColor;                                      // 0x8(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SplitColor;                                        // 0x18(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDefaultColor;                                  // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDefaultSplitColor;                             // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7163[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.EquippedInventorySaveGameData
struct FEquippedInventorySaveGameData
{
public:
	int32                                        InventoryListIndex;                                // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Enabled;                                           // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7164[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UInventorySlotData>     SlotDataPath;                                      // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ChallengeCategoryProgressSaveData
struct FChallengeCategoryProgressSaveData
{
public:
	TArray<uint8>                                CategoryProgress;                                  // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.MissionStatusPlayerSaveGameData
struct FMissionStatusPlayerSaveGameData
{
public:
	enum class EMissionStatus                    Status;                                            // 0x0(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenViewedInLog;                               // 0x1(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKickoffPlayed;                                    // 0x2(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7165[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint32>                               ObjectivesProgress;                                // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UMission>                MissionClassPath;                                  // 0x18(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMissionObjectiveSet>   ActiveObjectiveSetPath;                            // 0x40(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                       DlcPackageId;                                      // 0x68(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7166[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.MissionPlaythroughSaveGameData
struct FMissionPlaythroughSaveGameData
{
public:
	TArray<struct FMissionStatusPlayerSaveGameData> MissionList;                                       // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UMission>                TrackedMissionClassPath;                           // 0x10(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.OakPlayerCharacterAugmentSaveGameData
struct FOakPlayerCharacterAugmentSaveGameData
{
public:
	TSoftObjectPtr<class UPlayerCharacterComponentSlotData> SlotAssetPath;                                     // 0x0(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UPlayerCharacterComponentAugmentData> AugmentAssetPath;                                  // 0x28(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakPlayerCharacterSlotSaveGameData
struct FOakPlayerCharacterSlotSaveGameData
{
public:
	TArray<struct FOakPlayerCharacterAugmentSaveGameData> AugmentSlotList;                                   // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.RegionSaveGameData
struct FRegionSaveGameData
{
public:
	int32                                        GameStage;                                         // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayThroughIdx;                                    // 0x4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class URegionData>            RegionPath;                                        // 0x8(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                       DlcPackageId;                                      // 0x30(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7167[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.PlayerClassSaveGameData
struct FPlayerClassSaveGameData
{
public:
	TSoftObjectPtr<class UPlayerClassIdentifier> PlayerClassPath;                                   // 0x0(0x28)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                       DlcPackageId;                                      // 0x28(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7168[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0xA0 - 0x8)
// ScriptStruct OakGame.SDUBonusLevelData
struct FSDUBonusLevelData : public FTableRowBase
{
public:
	int32                                        SDUPrice;                                          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7169[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryCategoryData*                Currency;                                          // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeEffectData                  AttributeModifyInfo;                               // 0x18(0x48)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UInventoryRarityData*                  SDURarity;                                         // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          SDUPriceModifier;                                  // 0x68(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.SpawnPointEffect
struct FSpawnPointEffect
{
public:
	class UGbxCondition*                         Condition;                                         // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakAction_CoordinatedEffect> SpecialEffect;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakStatusEffectPresentation_Audio
struct FOakStatusEffectPresentation_Audio
{
public:
	bool                                         bUsesAudioEvents;                                  // 0x0(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_716A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           StartEvent;                                        // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopEvent;                                         // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakStatusEffectPresentation_Material
struct FOakStatusEffectPresentation_Material
{
public:
	bool                                         bUsesMaterialParameter;                            // 0x0(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_716B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MaterialParameterName;                             // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionDuration;                                // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_716C[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.OakStatusEffectPresentation_Material_TransitionData
struct FOakStatusEffectPresentation_Material_TransitionData
{
public:
	float                                        TransitionTriggerValue;                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaterialTargetValue;                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakStatusEffectPresentation_ScreenParticle
struct FOakStatusEffectPresentation_ScreenParticle
{
public:
	bool                                         bUsesScreenParticle;                               // 0x0(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_716D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransitionDuration;                                // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ParamName;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FirstPersonScreenEffect;                           // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScreenParticleDepth;                               // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_716E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.OakStatusEffectPresentation_Particle
struct FOakStatusEffectPresentation_Particle
{
public:
	bool                                         bUsesThirdPersonParticles;                         // 0x0(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_716F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ParticlePresentationName;                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ThirdPersonParameterName;                          // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ThirdPersonParticleSystem;                         // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          SupportedEmitters;                                 // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.DonorInfo
struct FDonorInfo
{
public:
	class FString                                DonorName;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalDonation;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7170[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.StreamingStatusInfo
struct FStreamingStatusInfo
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	struct FColor                                Color;                                             // 0x18(0x4)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7171[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Description;                                       // 0x20(0x18)(NativeAccessSpecifierPublic)
	bool                                         bIsDescriptionRelevant;                            // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7172[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakInteractiveEventStats
struct FOakInteractiveEventStats
{
public:
	int32                                        NbRareChestEvents;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RareChestEventWinners;                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbBadassEvents;                                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BadassViewersKilled;                               // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbPinataEvents;                                    // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbMoxxisEvents;                                    // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoxxisEventTotalBits;                              // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbExtractionEvents;                                // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakInteractiveSessionStats
struct FOakInteractiveSessionStats
{
public:
	float                                        SessionLifetimeInSeconds;                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7173[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        DamageCaused;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbEnemiesKilled;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbTimeInjured;                                     // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbTimeDead;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbLegendaries;                                     // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.PollActionInfo
struct FPollActionInfo
{
public:
	class UStreamingPoolActionInfo*              PollAction;                                        // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UStreamingPoolActionInfo> PollActionClass;                                   // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SelectionText;                                     // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxUsagePerEvent;                                  // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActionID;                                          // 0x50(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NbTimeUsedInEvent;                                 // 0x54(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastSelectedValue;                                 // 0x58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VoteCount;                                         // 0x5C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.MinimalInventoryInfo
struct FMinimalInventoryInfo
{
public:
	int32                                        PickupOrderIdx;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7174[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                StoredActor;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SerialNumber;                                      // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ThumbnailName;                                     // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                InventoryCategory;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTrash;                                          // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFavorite;                                       // 0x39(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMissionItem;                                    // 0x3A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7175[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       TrinketPartHash;                                   // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       SkinPartHash;                                      // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       MayhemPartHash;                                    // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       MayhemPartUIStatHash;                              // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7176[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ItemJsonObjString;                                 // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBase64ThumbnailGenerated;                         // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7177[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.MinimalAugmentSlotInfo
struct FMinimalAugmentSlotInfo
{
public:
	uint32                                       ActionAbilityHash;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       AugmentSlotHash;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       AugmentHash;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.MinimalEquippedInventoryInfo
struct FMinimalEquippedInventoryInfo
{
public:
	uint32                                       InventorySlotHash;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupOrderIdx;                                    // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7178[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.MinimalAbilitSlotInfo
struct FMinimalAbilitSlotInfo
{
public:
	uint32                                       AbilitySlotHash;                                   // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       AbilityHash;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.SkillTreeItemsStatValues
struct FSkillTreeItemsStatValues
{
public:
	uint8                                        Pad_7179[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x158 (0x158 - 0x0)
// ScriptStruct OakGame.MinimalCharacterInfo
struct FMinimalCharacterInfo
{
public:
	uint32                                       TimePlayedSeconds;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExperiencePoints;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerLevel;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BackpackSize;                                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GoldenKeys;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_717A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMinimalInventoryInfo>         INVENTORY;                                         // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMinimalEquippedInventoryInfo> EquippedInventory;                                 // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<uint32, int32>                          InventoryCategoryList;                             // 0x38(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        AbilityPoints;                                     // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_717B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<uint32, int32>                          TreeItems;                                         // 0x90(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMinimalAbilitSlotInfo>        AbilitySlots;                                      // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMinimalAugmentSlotInfo>       AugmentSlots;                                      // 0xF0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint32                                       PetAugmentHash;                                    // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_717C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<uint32, struct FSkillTreeItemsStatValues> SkillTreeItemsStatValues;                          // 0x108(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakThumbnailManagerIcon
struct FOakThumbnailManagerIcon
{
public:
	uint8                                        Pad_717D[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x710 (0x710 - 0x0)
// ScriptStruct OakGame.OakThumbnailManagerItemInfo
struct FOakThumbnailManagerItemInfo
{
public:
	uint8                                        Pad_717E[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                URL;                                               // 0x30(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOakThumbnailManagerIcon              IconData;                                          // 0x40(0x28)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_717F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakThumbnailManagerRenderProperties  RenderProperties;                                  // 0x70(0x690)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_7180[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x198 (0x198 - 0x0)
// ScriptStruct OakGame.OakUIBigMapManagerText
struct FOakUIBigMapManagerText
{
public:
	class FText                                  ErrorPlanetNameText;                               // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ErrorLevelNameText;                                // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  DoglegHeaderTempText;                              // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  OverworldHeaderTempText;                           // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  GlobalTravelText;                                  // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  HubtownTitleText;                                  // 0x78(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  OverworldTitleText;                                // 0x90(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LocalTravelText;                                   // 0xA8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TravelText;                                        // 0xC0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  MissionGiverText;                                  // 0xD8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ZoneSubTitleText;                                  // 0xF0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TableSubTitleText;                                 // 0x108(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ViewZoneText;                                      // 0x120(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  POITypeFormatText;                                 // 0x138(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LevelSubTitleText;                                 // 0x150(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PlanetSubTitleText;                                // 0x168(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  GlobalCompletionProgressText;                      // 0x180(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.OakUIBigMapSpecialTravelInfo
struct FOakUIBigMapSpecialTravelInfo
{
public:
	TSoftObjectPtr<class UZoneMapData>           LevelData;                                         // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTravelStationData>     TravelData;                                        // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct OakGame.OakUIBigMapListViewItem
struct FOakUIBigMapListViewItem
{
public:
	uint8                                        Pad_7181[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2B0 (0x2B0 - 0x0)
// ScriptStruct OakGame.OakUIBigMapPOIListInfo
struct FOakUIBigMapPOIListInfo
{
public:
	struct FZoneMapIconInfo                      TargetIconInfo;                                    // 0x0(0x290)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FZoneMapIconInfo>              MapIcons;                                          // 0x290(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FOakUIBigMapListViewItem>      ListView;                                          // 0x2A0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct OakGame.OakUIChallengeListData
struct FOakUIChallengeListData
{
public:
	class FString                                UniqueId;                                          // 0x0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChallengeCategoryData*                HeaderCategory;                                    // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumHeaderChildren;                                 // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumHeaderChildrenCompleted;                        // 0x1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FChallengeInstanceData                ChallengeInstanceData;                             // 0x20(0x80)(Transient, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UZoneMapData>           ZoneMapData;                                       // 0xA0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumChildren;                                       // 0xA8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumChildrenComplete;                               // 0xAC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUndiscovered;                                   // 0xB0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7182[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UChallenge>                ChallengeClass;                                    // 0xB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UOakUIChallengeDataProvider> OwnerDataProvider;                                 // 0xC0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAllChallenges;                                // 0xC8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7183[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.OakUIChallengeDataListInfo
struct FOakUIChallengeDataListInfo
{
public:
	enum class EOakUIChallengeDataProviderPopulateType PopulateType;                                      // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7184[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FChallengeFilterType                  Filter;                                            // 0x8(0x38)(Transient, NativeAccessSpecifierPublic)
	TArray<struct FOakUIChallengeListData>       List;                                              // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FOakUIChallengeListData>       FilteredList;                                      // 0x50(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.CreditsImageData
struct FCreditsImageData
{
public:
	struct FSoftObjectPath                       CreditsImage;                                      // 0x0(0x18)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageShowTime;                                     // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageMaxTime;                                      // 0x1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.CreditsSection
struct FCreditsSection
{
public:
	TArray<class UCreditsDataAsset*>             CreditsDataAssets;                                 // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCreditsImageData>             CreditsImageDataList;                              // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        TransitionTimeBetweenImages;                       // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalSpacing;                                 // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UserAnimationSpeed;                                // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultAnimationSpeed;                             // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PauseTime;                                         // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowScrollingCredits;                            // 0x34(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7185[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScrollingDelay;                                    // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayAfterLastCredit;                              // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BackgroundMusicStartEvent;                         // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           BackgroundMusicEndEvent;                           // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.CreditsTextureCache
struct FCreditsTextureCache
{
public:
	class UTexture2D*                            CreditsTexture;                                    // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7186[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.CreditsRangeIndex
struct FCreditsRangeIndex
{
public:
	uint8                                        Pad_7187[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.CreditsTextFieldInfo
struct FCreditsTextFieldInfo
{
public:
	class FName                                  StyleId;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTextField*                         TextField;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.CreditsLineInfo
struct FCreditsLineInfo
{
public:
	class FName                                  StyleId;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TextEntry;                                         // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OrganizationInfo
struct FOrganizationInfo
{
public:
	class FName                                  OrganizationId;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextStyle;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TextEntry;                                         // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct OakGame.CreditsTableRow
struct FCreditsTableRow : public FTableRowBase
{
public:
	class FString                                FirstName;                                         // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LastName;                                          // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Title;                                             // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Organization;                                      // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ExtraText;                                         // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExtraTextStyle;                                    // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakUICrossplayFirstbBootButtonData
struct FOakUICrossplayFirstbBootButtonData
{
public:
	class FString                                Identity;                                          // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  LabelText;                                         // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.OakUICrossplayFirstbBootStateData
struct FOakUICrossplayFirstbBootStateData
{
public:
	enum class EOakUICrossplayFirstBootViewState ViewState;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7188[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  HeaderText;                                        // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BodyText;                                          // 0x20(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BodyTextCrossplayDisabled;                         // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bShowNameInput;                                    // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7189[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakUICrossplayFirstbBootButtonData> buttons;                                           // 0x58(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct OakGame.OakUICrossplayFirstBootDataStruct
struct FOakUICrossplayFirstBootDataStruct
{
public:
	class FName                                  ScreenStateName;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CrossplayUnavailableText_Header;                   // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CrossplayUnavailableText_Body;                     // 0x20(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidDisplayName_Length;                         // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidDisplayName_Contain;                        // 0x50(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidDisplayName_StartLetter;                    // 0x68(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidDisplayName_NoGbx;                          // 0x80(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidDisplayName_TwoSpecial;                     // 0x98(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FOakUICrossplayFirstbBootStateData> StateData;                                         // 0xB0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.EndlessDungeonIconInfo
struct FEndlessDungeonIconInfo
{
public:
	uint8                                        Pad_718A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                FollowActor;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x180 (0x180 - 0x0)
// ScriptStruct OakGame.DialogInfoInstance
struct FDialogInfoInstance
{
public:
	struct FOakUIDialogBoxInfo                   DialogBoxInfo;                                     // 0x0(0x170)(Transient, NativeAccessSpecifierPublic)
	class FString                                StackIndentifier;                                  // 0x170(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x200 (0x200 - 0x0)
// ScriptStruct OakGame.OakUIGraphicsCalibrationData
struct FOakUIGraphicsCalibrationData
{
public:
	class FText                                  HDRToggleTitle;                                    // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  HDRToggleDescription;                              // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  HDRBrightnessTitle;                                // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  HDRBrightnessDescription;                          // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  HDRMenuBrightnessTitle;                            // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  HDRMenuBrightnessDescription;                      // 0x78(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        HDRBrightnessStep;                                 // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HDRBrightnessDefault;                              // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HDRMenuBrightnessDefault;                          // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_718B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  BrightnessTitle;                                   // 0xA0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BrightnessDescription;                             // 0xB8(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        BrightnessStep;                                    // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrightnessDefault;                                 // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  BlackLevelTitle;                                   // 0xD8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BlackLevelDescription;                             // 0xF0(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        BlackLevelStep;                                    // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlackLevelDefault;                                 // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  GraphicsPreferenceTitle;                           // 0x110(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  GraphicsPreferenceDescription;                     // 0x128(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SubtitlesTitle;                                    // 0x140(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SubtitlesDescription;                              // 0x158(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ClosedCaptionsTitle;                               // 0x170(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ClosedCaptionsDescription;                         // 0x188(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  OffText;                                           // 0x1A0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  OnText;                                            // 0x1B8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PerformanceText;                                   // 0x1D0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ResolutionText;                                    // 0x1E8(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakMenuAxisInputEvent
struct FOakMenuAxisInputEvent
{
public:
	uint8                                        Pad_718C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct OakGame.OakItemInspectionMeshData
struct FOakItemInspectionMeshData
{
public:
	uint8                                        Pad_718D[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x210 (0x210 - 0x0)
// ScriptStruct OakGame.OakLoadGameMenuEntry
struct FOakLoadGameMenuEntry
{
public:
	class FString                                SaveGameName;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterLevel;                                    // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_718E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CharacterClassName;                                // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       SaveGameId;                                        // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_718F[0x1EC];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakRecommendedFriendInviteStatus
struct FOakRecommendedFriendInviteStatus
{
public:
	uint8                                        Pad_7190[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.OakEchoNetMathcmakingActivitySubTypeData
struct FOakEchoNetMathcmakingActivitySubTypeData
{
public:
	class FString                                Guid;                                              // 0x0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocked;                                           // 0x10(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFeatured;                                         // 0x11(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHeroic;                                         // 0x12(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7191[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Name;                                              // 0x18(0x18)(Transient, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x30(0x18)(Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_7192[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct OakGame.OakEchoNetMatchmakingActivityData
struct FOakEchoNetMatchmakingActivityData
{
public:
	struct FOakEchoNetMathcmakingActivitySubTypeData NormalData;                                        // 0x0(0x58)(Transient, NativeAccessSpecifierPublic)
	struct FOakEchoNetMathcmakingActivitySubTypeData HeroicData;                                        // 0x58(0x58)(Transient, NativeAccessSpecifierPublic)
	class FString                                ImageId;                                           // 0xB0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLookingAtHeroic;                                  // 0xC0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7193[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.MinimapBoundedCircle
struct FMinimapBoundedCircle
{
public:
	struct FVector2D                             CenterPoint;                                       // 0x0(0x8)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7194[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ActiveAbilityQueueData
struct FActiveAbilityQueueData
{
public:
	class UOakPlayerAbilityHUDItemData*          HudItem;                                           // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7195[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.FollowedPet
struct FFollowedPet
{
public:
	int64                                        UniqueId;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Name;                                              // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Pet;                                               // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LastPosition;                                      // 0x20(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7196[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTargetableComponent*                  Component;                                         // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.PlayerAlertInfo
struct FPlayerAlertInfo
{
public:
	uint8                                        Pad_7197[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                FollowActor;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       FollowComponent;                                   // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7198[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x160 (0x160 - 0x0)
// ScriptStruct OakGame.OakTitleScreenDataStruct
struct FOakTitleScreenDataStruct
{
public:
	TSoftObjectPtr<class UTexture2D>             SplashImage;                                       // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKey>                          ValidPressStartKeys;                               // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  PressToContinuePrompt;                             // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  PressToContinuePrompt_PC;                          // 0x50(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LogInTextPrompt;                                   // 0x68(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LogInTextPromptNoNickname;                         // 0x80(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidProfile_NotLoggedIn;                        // 0x98(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidProfile_GuestLogin;                         // 0xB0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidProfile;                                    // 0xC8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  LoginErrorText;                                    // 0xE0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  DialogChoice_Okay;                                 // 0xF8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  DialogChoice_Desktop;                              // 0x110(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  InvalidLogin_MfaRequired;                          // 0x128(0x18)(Edit, NativeAccessSpecifierPublic)
	class FString                                ButtonPromptSytle;                                 // 0x140(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ButtonPromptGlyph;                                 // 0x150(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.FollowedWaypoint
struct FFollowedWaypoint
{
public:
	uint8                                        Pad_7199[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FActiveMissionIconData                MissionIcon;                                       // 0x30(0x70)(ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x8 (0x50 - 0x48)
// ScriptStruct OakGame.OakUIData_QueuedData
struct FOakUIData_QueuedData : public FGbxUIWidgetDataBase
{
public:
	uint8                                        Pad_719A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIInternalNavBarItem
struct FGbxUIInternalNavBarItem
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Ident;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUIActionGlyph
struct FGbxUIActionGlyph
{
public:
	class FString                                GlyphClass;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.GbxUIActionButtonEntry
struct FGbxUIActionButtonEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionGlyph                     MainGlyph;                                         // 0x8(0x10)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIActionGlyph>             Glyphs;                                            // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  DisplayText;                                       // 0x28(0x18)(NativeAccessSpecifierPublic)
	float                                        HoldProgress;                                      // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHoldAction;                                      // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0x45(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoText;                                          // 0x46(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoIcon;                                          // 0x47(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.GbxUIInternalNavBar
struct FGbxUIInternalNavBar
{
public:
	TArray<struct FGbxUIInternalNavBarItem>      Entries;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               LeftTriggerEntry;                                  // 0x10(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RightTriggerEntry;                                 // 0x58(0x48)(NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.GbxUIRadialWheelEntry
struct FGbxUIRadialWheelEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FString                                IconTexturePath;                                   // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEmpty;                                           // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisabled;                                        // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_719B[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x230 (0x230 - 0x0)
// ScriptStruct OakGame.GbxUIRadialWheel
struct FGbxUIRadialWheel
{
public:
	bool                                         AllowEmpty;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_719C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIRadialWheelEntry                PhotoMode;                                         // 0x8(0x50)(NativeAccessSpecifierPublic)
	struct FGbxUIRadialWheelEntry                Ping;                                              // 0x58(0x50)(NativeAccessSpecifierPublic)
	struct FGbxUIRadialWheelEntry                Slot1;                                             // 0xA8(0x50)(NativeAccessSpecifierPublic)
	struct FGbxUIRadialWheelEntry                Slot2;                                             // 0xF8(0x50)(NativeAccessSpecifierPublic)
	struct FGbxUIRadialWheelEntry                Slot3;                                             // 0x148(0x50)(NativeAccessSpecifierPublic)
	struct FGbxUIRadialWheelEntry                Slot4;                                             // 0x198(0x50)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               LeftStickButton;                                   // 0x1E8(0x48)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIElementOptionEntry
struct FGbxUIElementOptionEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ImageAssetPath;                                    // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xC0 - 0x10)
// ScriptStruct OakGame.GbxUIListPrimitiveEntry
struct FGbxUIListPrimitiveEntry : public FGbxUIInteractiveElement
{
public:
	class FString                                Class;                                             // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Label;                                             // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Title;                                             // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ValueText;                                         // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MaxText;                                           // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BonusText;                                         // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IconPath;                                          // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LabelIcon;                                         // 0x80(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Initial;                                           // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveBy;                                            // 0x94(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Limit;                                             // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Default;                                           // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OptionIndex;                                       // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CheckboxState;                                     // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLocked;                                          // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LeftArrowEnabled;                                  // 0xA9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RightArrowEnabled;                                 // 0xAA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Modified;                                          // 0xAB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNewItems;                                       // 0xAC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_719D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIElementOptionEntry>      Options;                                           // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIColorGridItemEntry
struct FGbxUIColorGridItemEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ColorName;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ColorTexture;                                      // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNew;                                             // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_719E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIColorGridSection
struct FGbxUIColorGridSection
{
public:
	bool                                         Visible;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_719F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Title;                                             // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIColorGridItemEntry>      ColorItemEntries;                                  // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct OakGame.EventLine
struct FEventLine
{
public:
	float                                        EvenLineValue;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIProgressbarWDeltaEntry
struct FGbxUIProgressbarWDeltaEntry
{
public:
	float                                        ProgressValue;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeltaValue;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxValue;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Focused;                                           // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Type;                                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEventLine>                    EventLines;                                        // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIProgressbarEntry
struct FGbxUIProgressbarEntry
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Visible;                                           // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Class;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.OakUIVirtualBackpackConfig
struct FOakUIVirtualBackpackConfig
{
public:
	uint8                                        Pad_71A1[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD8 (0x120 - 0x48)
// ScriptStruct OakGame.OakUIData_AmmoBar
struct FOakUIData_AmmoBar : public FGbxUIWidgetDataBase
{
public:
	bool                                         IsEquipped;                                        // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentAmmo;                                       // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxAmmo;                                           // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CurrentAmmoDisplay;                                // 0x58(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MaxAmmoDisplay;                                    // 0x70(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ModeSwitchText;                                    // 0x88(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsCOV;                                             // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsModes;                                           // 0xA1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNoSwap;                                          // 0xA2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAmmoEmpty;                                       // 0xA3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HeatPercent;                                       // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOverheating;                                     // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOverheated;                                      // 0xA9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShooting;                                        // 0xAA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCoolingDown;                                     // 0xAB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEquipping;                                       // 0xAC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayElementalDamage;                            // 0xAD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayAmmoEmpty;                                  // 0xAE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ElementalDamage;                                   // 0xB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               WeaponMode;                                        // 0xC0(0x48)(NativeAccessSpecifierPublic)
	class FText                                  OutOfAmmoText;                                     // 0x108(0x18)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.MatchMakingData_Search
struct FMatchMakingData_Search
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	bool                                         bDisplay;                                          // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x68 - 0x48)
// ScriptStruct OakGame.OakWidgetData_AURAMenu
struct FOakWidgetData_AURAMenu : public FGbxUIWidgetDataBase
{
public:
	struct FMatchMakingData_Search               MatchmakingSearch;                                 // 0x48(0x20)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIChallengeProgressEntry
struct FGbxUIChallengeProgressEntry
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Class;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIChallengeRewardEntry
struct FGbxUIChallengeRewardEntry
{
public:
	class FString                                Value;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x168 (0x168 - 0x0)
// ScriptStruct OakGame.GbxUIMapEntry
struct FGbxUIMapEntry
{
public:
	class FString                                Ident;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisible;                                         // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Name;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Description;                                       // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowHeader;                                        // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SubTitle;                                          // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Summary;                                           // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasAsset;                                          // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Asset;                                             // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Rank;                                              // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIChallengeProgressEntry          Progress;                                          // 0x98(0x28)(NativeAccessSpecifierPublic)
	class FString                                RewardsHeader;                                     // 0xC0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIChallengeRewardEntry>    Rewards;                                           // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisplayRewards;                                    // 0xE0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowZoneProgressText;                              // 0xE1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71AA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ZoneProgressText;                                  // 0xE8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionDescriptionMode;                          // 0xF8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71AB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MissionIcon;                                       // 0x100(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionIconType;                                   // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionIconTitle;                                  // 0x120(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionIconDescription;                            // 0x130(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionObjectivesHeader;                           // 0x140(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIChallengeRewardEntry>    MissionObjectives;                                 // 0x150(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisplayMissionObjectives;                          // 0x160(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71AC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIZoneEntry
struct FGbxUIZoneEntry
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIMapEntry>                Places;                                            // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct OakGame.GbxUIMapCycleMission
struct FGbxUIMapCycleMission
{
public:
	class FString                                Icon;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionName;                                       // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               LeftButton;                                        // 0x20(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RightButton;                                       // 0x68(0x48)(NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71AD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUIChallengeEntry
struct FGbxUIChallengeEntry
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Progress;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowHeader;                                        // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71AE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIMapEntry>                CombatChallenges;                                  // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUIPOIBuffEntry
struct FGbxUIPOIBuffEntry
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIPOISummaryEntry
struct FGbxUIPOISummaryEntry
{
public:
	class FString                                Label;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIPOIBuffEntry>            Buffs;                                             // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.GbxUIPOIEntry
struct FGbxUIPOIEntry
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SubTitle;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IconPath;                                          // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIPOISummaryEntry>         Summary;                                           // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIProgressEntry
struct FGbxUIProgressEntry
{
public:
	class FString                                Label;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUILevelProgressEntry
struct FGbxUILevelProgressEntry
{
public:
	class FString                                Title;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIProgressEntry>           Summary;                                           // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x468 (0x4B0 - 0x48)
// ScriptStruct OakGame.OakUIData_BigMap
struct FOakUIData_BigMap : public FGbxUIWidgetDataBase
{
public:
	bool                                         ShowDetails;                                       // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71AF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ContainerParentIndex;                              // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MapTitleText;                                      // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ProgressTitle;                                     // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ZonesTitle;                                        // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ChallengesTitle;                                   // 0x80(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIZoneEntry>               ZonesAreas;                                        // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                FilterButtonAssetPath;                             // 0xA0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIChallengeEntry>          Challenges;                                        // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIMapEntry                        DescriptionPanelEntry;                             // 0xC0(0x168)(NativeAccessSpecifierPublic)
	struct FGbxUILevelProgressEntry              CurrentLevelProgress;                              // 0x228(0x20)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ChallengesFilterBtn;                               // 0x248(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               TabLeftBtn;                                        // 0x290(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               TabRightBtn;                                       // 0x2D8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ViewZoneBtn;                                       // 0x320(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               TravelBtn;                                         // 0x368(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIPOIEntry                        CurrentPOI;                                        // 0x3B0(0x40)(NativeAccessSpecifierPublic)
	struct FGbxUIMapCycleMission                 CycleMission;                                      // 0x3F0(0xB8)(NativeAccessSpecifierPublic)
	bool                                         DisplayWorldProgress;                              // 0x4A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct OakGame.GbxUICombatChallengeEntry
struct FGbxUICombatChallengeEntry
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SubTitle;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Description;                                       // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Rank;                                              // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIChallengeProgressEntry          Progress;                                          // 0x40(0x28)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIChallengeRewardEntry>    Rewards;                                           // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC0 (0x108 - 0x48)
// ScriptStruct OakGame.OakUIData_TargetedNamePlate
struct FOakUIData_TargetedNamePlate : public FGbxUIWidgetDataBase
{
public:
	class FText                                  TargetName;                                        // 0x48(0x18)(NativeAccessSpecifierPublic)
	bool                                         HideLevel;                                         // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TargetLevel;                                       // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETargetedNameplateType            NameplateToDisplay;                                // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIProgressbarWDeltaEntry          Primary;                                           // 0x70(0x30)(NativeAccessSpecifierPublic)
	struct FGbxUIProgressbarWDeltaEntry          Secondary;                                         // 0xA0(0x30)(NativeAccessSpecifierPublic)
	struct FGbxUIProgressbarWDeltaEntry          Tertiary;                                          // 0xD0(0x30)(NativeAccessSpecifierPublic)
	uint8                                        IsEnemy : 1;                                       // Mask: 0x1, PropSize: 0x10x100(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ShowTextOnly : 1;                                  // Mask: 0x2, PropSize: 0x10x100(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ShowSkull : 1;                                     // Mask: 0x4, PropSize: 0x10x100(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ShowDeathAnimation : 1;                            // Mask: 0x8, PropSize: 0x10x100(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldDisplayNameplate : 1;                       // Mask: 0x10, PropSize: 0x10x100(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x130 - 0x108)
// ScriptStruct OakGame.OakUIData_BossBar
struct FOakUIData_BossBar : public FOakUIData_TargetedNamePlate
{
public:
	enum class EBossbarEventType                 EVENTTYPE;                                         // 0x108(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EventCounter;                                      // 0x10C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Invulnerable;                                      // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LevelText;                                         // 0x118(0x18)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIPetHealthBar
struct FGbxUIPetHealthBar
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Class;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.GbxUIPet
struct FGbxUIPet
{
public:
	struct FGbxUIPetHealthBar                    HealthBar;                                         // 0x0(0x28)(NativeAccessSpecifierPublic)
	bool                                         IsDying;                                           // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReviving;                                        // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDead;                                            // 0x2A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B7[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IsDyingText;                                       // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IsRevivingText;                                    // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PetStateDead;                                      // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0xA8 - 0x48)
// ScriptStruct OakGame.OakUIData_Buddy
struct FOakUIData_Buddy : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIPet                             Pet;                                               // 0x48(0x60)(NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct OakGame.GbxUIBuddyWidgetMeta
struct FGbxUIBuddyWidgetMeta
{
public:
	uint8                                        Pad_71B8[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct OakGame.GbxUIBuddyWidgetEntry
struct FGbxUIBuddyWidgetEntry
{
public:
	class FString                                UniqueIDString;                                    // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71B9[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EBuddyWidgetType                  WidgetType;                                        // 0x2E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71BA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIProgressbarWDeltaEntry          ProgressHealth;                                    // 0x30(0x30)(NativeAccessSpecifierPublic)
	struct FGbxUIProgressbarWDeltaEntry          ProgressShield;                                    // 0x60(0x30)(NativeAccessSpecifierPublic)
	class FText                                  GamerTag;                                          // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DescText;                                          // 0xA8(0x18)(NativeAccessSpecifierPublic)
	class FString                                ClassImgUrl;                                       // 0xC0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlatformIdent;                                     // 0xD0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowPlatformIdent;                                 // 0xE0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPet;                                             // 0xE1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpeaking;                                        // 0xE2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71BB[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0xE0 - 0x48)
// ScriptStruct OakGame.OakUIData_BuddyWidgetSet
struct FOakUIData_BuddyWidgetSet : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUIBuddyWidgetEntry>        BuddyBars;                                         // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisplayBuddyBar1;                                  // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayBuddyBar2;                                  // 0x59(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayBuddyBar3;                                  // 0x5A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayBuddyBar4;                                  // 0x5B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayBuddyBar5;                                  // 0x5C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71BC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RevivingText;                                      // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DyingText;                                         // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SecondWindText;                                    // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LevelUpText;                                       // 0xA8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LevelText;                                         // 0xC0(0x18)(NativeAccessSpecifierPublic)
	float                                        MessageTime;                                       // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71BD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x68 - 0x48)
// ScriptStruct OakGame.OakUIData_ClosedCaptions
struct FOakUIData_ClosedCaptions : public FGbxUIWidgetDataBase
{
public:
	class FText                                  CCText;                                            // 0x48(0x18)(NativeAccessSpecifierPublic)
	float                                        TextOpacity;                                       // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TextScale;                                         // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUIArrayImagesLeft
struct FGbxUIArrayImagesLeft
{
public:
	class FString                                UrlImage;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUICreditsImageLayout
struct FGbxUICreditsImageLayout
{
public:
	bool                                         IsActive;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71BE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Title;                                             // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ImgCenter;                                         // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIArrayImagesLeft>         ImagesCenterArray;                                 // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUILogosCredits
struct FGbxUILogosCredits
{
public:
	class FString                                Logo;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUICreditsLogos
struct FGbxUICreditsLogos
{
public:
	bool                                         IsActive;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71BF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Text;                                              // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUILogosCredits>            LogosCredits;                                      // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.GbxUICreditsSection
struct FGbxUICreditsSection
{
public:
	uint8                                        Pad_71C0[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Title;                                             // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LayoutStyle;                                       // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUICreditsLine>             Lines;                                             // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        Delay;                                             // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x120 (0x168 - 0x48)
// ScriptStruct OakGame.OakUIData_Credits
struct FOakUIData_Credits : public FGbxUIWidgetDataBase
{
public:
	class FString                                Text;                                              // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowModalSkip;                                     // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ModalSkipText;                                     // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ModalSkipYes;                                      // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ModalSkipNo;                                       // 0x80(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SkipButton;                                        // 0x90(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FastForwardButton;                                 // 0xA0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalScrollSpeed;                                 // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScrollSpeed;                                       // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IntervalScroll;                                    // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceUntilNextSection;                          // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUICreditsImageLayout              CreditsImageLayout;                                // 0xC0(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUICreditsLogos                    CreditsLogos;                                      // 0xF8(0x28)(NativeAccessSpecifierPublic)
	struct FGbxUICreditsLogos                    CreditsLogosPrueba;                                // 0x120(0x28)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUICreditsSection>          CreditsSections;                                   // 0x148(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         GbxCredits;                                        // 0x158(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSections;                                       // 0x15C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0xA0 - 0x48)
// ScriptStruct OakGame.OakUIData_Crosshair
struct FOakUIData_Crosshair : public FGbxUIWidgetDataBase
{
public:
	bool                                         ShowWeaponCrosshair;                               // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowSprintCrosshair;                               // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowNoWeaponCrosshair;                             // 0x4A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowEnemyTarget;                                   // 0x4B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFriendlyTarget;                                // 0x4C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowHitEvent;                                      // 0x4D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowDeathEvent;                                    // 0x4E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AccuracyPercent;                                   // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccuracySpread;                                    // 0x54(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargePercent;                                     // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C6[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentAccuracyRadius;                             // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAccuracyRadius;                                 // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAccuracyRadius;                                 // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DynamicCrosshairIdent;                             // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          CrosshairColor;                                    // 0x88(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CrosshairCenterPos;                                // 0x98(0x8)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OakWidgetData_CrossplayFirstBoot_ButtonItem
struct FOakWidgetData_CrossplayFirstBoot_ButtonItem
{
public:
	class FString                                Ident;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  LabelText;                                         // 0x10(0x18)(NativeAccessSpecifierPublic)
};

// 0x68 (0xB0 - 0x48)
// ScriptStruct OakGame.OakWidgetData_CrossplayFirstBoot
struct FOakWidgetData_CrossplayFirstBoot : public FGbxUIWidgetDataBase
{
public:
	class FText                                  HeaderText;                                        // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  BodyText;                                          // 0x60(0x18)(NativeAccessSpecifierPublic)
	bool                                         HasErrorText;                                      // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ErrorText;                                         // 0x80(0x18)(NativeAccessSpecifierPublic)
	int32                                        ViewState;                                         // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowNameInput;                                     // 0x9C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakWidgetData_CrossplayFirstBoot_ButtonItem> buttons;                                           // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0xB8 - 0x50)
// ScriptStruct OakGame.OakUIData_CurrencyWidget
struct FOakUIData_CurrencyWidget : public FOakUIData_QueuedData
{
public:
	uint8                                        Pad_71CA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Amount;                                            // 0x58(0x18)(NativeAccessSpecifierPublic)
	class FString                                AmountType;                                        // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  GainAmount;                                        // 0x80(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LossAmount;                                        // 0x98(0x18)(NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowGainAmount;                                    // 0xB1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowLossAmount;                                    // 0xB2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71CB[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x80 - 0x48)
// ScriptStruct OakGame.OakUIData_EchoCommunicator
struct FOakUIData_EchoCommunicator : public FGbxUIWidgetDataBase
{
public:
	bool                                         IsVisible;                                         // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTransmitter;                                     // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71CC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Name;                                              // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FString                                Image;                                             // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEchoLog;                                         // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71CD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictoryListItem
struct FGbxUIEDVictoryListItem
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictoryList
struct FGbxUIEDVictoryList
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEDVictoryListItem>       Items;                                             // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictorySkillSummaryItem
struct FGbxUIEDVictorySkillSummaryItem
{
public:
	class FString                                Icon;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEmpty;                                           // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisabled;                                        // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71CE[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictorySKillTree
struct FGbxUIEDVictorySKillTree
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEDVictorySkillSummaryItem> PrimarySkillTree;                                  // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEDVictorySkillSummaryItem> SecondarySkillTree;                                // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictoryHeader
struct FGbxUIEDVictoryHeader
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Timer;                                             // 0x18(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsWellPerformedTimer;                              // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  WellPerformedTimerPercentage;                      // 0x38(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MayhemLevel;                                       // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CookieCount;                                       // 0x68(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsWellPerformedCrystal;                            // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  WellPerformedCrystalPercentage;                    // 0x88(0x18)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictoryStatItem
struct FGbxUIEDVictoryStatItem
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	int32                                        Score;                                             // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictoryStat
struct FGbxUIEDVictoryStat
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEDVictoryStatItem>       Items;                                             // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictorySkill
struct FGbxUIEDVictorySkill
{
public:
	class FString                                ClassIcon;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ClassName;                                         // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SkillName;                                         // 0x28(0x18)(NativeAccessSpecifierPublic)
	class FString                                SkillPoints;                                       // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictoryAttribute
struct FGbxUIEDVictoryAttribute
{
public:
	class FString                                Icon;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x108 (0x118 - 0x10)
// ScriptStruct OakGame.OakWidgetData_InventoryEntry
struct FOakWidgetData_InventoryEntry : public FGbxUIInteractiveElement
{
public:
	class FString                                Asset;                                             // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ManufacturerImagePath;                             // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Type;                                              // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GearType;                                          // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TypeAssetPath;                                     // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DamageTypeIdent;                                   // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Rarity;                                            // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OrderText;                                         // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SplitSide;                                         // 0xA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClassBindToggles;                                  // 0xB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  EmptyText;                                         // 0xC0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CantSellText;                                      // 0xD8(0x18)(NativeAccessSpecifierPublic)
	uint8                                        IsNew : 1;                                         // Mask: 0x1, PropSize: 0x10xF0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsLocked : 1;                                      // Mask: 0x2, PropSize: 0x10xF0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsFavorite : 1;                                    // Mask: 0x4, PropSize: 0x10xF0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsInvalid : 1;                                     // Mask: 0x8, PropSize: 0x10xF0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsJunk : 1;                                        // Mask: 0x10, PropSize: 0x10xF0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsEmpty : 1;                                       // Mask: 0x20, PropSize: 0x10xF0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsRefresh : 1;                                     // Mask: 0x40, PropSize: 0x10xF0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsCompare : 1;                                     // Mask: 0x80, PropSize: 0x10xF0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CantSell : 1;                                      // Mask: 0x1, PropSize: 0x10xF1(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsLoading : 1;                                     // Mask: 0x2, PropSize: 0x10xF1(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsEquipped : 1;                                    // Mask: 0x4, PropSize: 0x10xF1(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsTracked : 1;                                     // Mask: 0x8, PropSize: 0x10xF1(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D3[0x26];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2F0 (0x2F0 - 0x0)
// ScriptStruct OakGame.OakWidgetData_EquipmentContainer
struct FOakWidgetData_EquipmentContainer
{
public:
	TArray<struct FOakWidgetData_InventoryEntry> GunEntries;                                        // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakWidgetData_InventoryEntry> GearEntries;                                       // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOakWidgetData_InventoryEntry         MeleeEntry;                                        // 0x20(0x118)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_InventoryEntry         GunMageSpellEntry;                                 // 0x138(0x118)(NativeAccessSpecifierPublic)
	bool                                         bShowGunMageSpellSlot;                             // 0x250(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D4[0x9F];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictoryClassSkill
struct FGbxUIEDVictoryClassSkill
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x5F8 (0x640 - 0x48)
// ScriptStruct OakGame.OakWidgetData_EDVictory
struct FOakWidgetData_EDVictory : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictoryHeader                 Header;                                            // 0x60(0xA0)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictoryStat                   Stats;                                             // 0x100(0x28)(NativeAccessSpecifierPublic)
	class FText                                  LvlText;                                           // 0x128(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SkillNAttributesTitle;                             // 0x140(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictorySkill                  PrimarySkillClass;                                 // 0x158(0x50)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictorySkill                  SecondarySkillClass;                               // 0x1A8(0x50)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEDVictoryAttribute>      Attributes;                                        // 0x1F8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  InventoryTitle;                                    // 0x208(0x18)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_EquipmentContainer     EquipmentData;                                     // 0x220(0x2F0)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictorySKillTree              SKILLTREES;                                        // 0x510(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictoryClassSkill             CLASSSKILL;                                        // 0x548(0x28)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictoryList                   Offenses;                                          // 0x570(0x28)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictoryList                   Defenses;                                          // 0x598(0x28)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictoryList                   RUNRESULTS;                                        // 0x5C0(0x28)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictoryList                   Blessings;                                         // 0x5E8(0x28)(NativeAccessSpecifierPublic)
	struct FGbxUIEDVictoryList                   Curses;                                            // 0x610(0x28)(NativeAccessSpecifierPublic)
	bool                                         ShowBlessingAndCurse;                              // 0x638(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIEDVictoryInventorySummaryItem
struct FGbxUIEDVictoryInventorySummaryItem
{
public:
	class FString                                WeaponIcon;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Rarity;                                            // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x500 (0x500 - 0x0)
// ScriptStruct OakGame.OakWidgetData_InventoryContainer
struct FOakWidgetData_InventoryContainer
{
public:
	class FText                                  HeaderText;                                        // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SortByOption;                                      // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SortByTitle;                                       // 0x30(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               LeftTriggerEntry;                                  // 0x48(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RightTriggerEntry;                                 // 0x90(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevPageEntry;                                     // 0xD8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextPageEntry;                                     // 0x120(0x48)(NativeAccessSpecifierPublic)
	TArray<struct FOakWidgetData_InventoryEntry> Entries;                                           // 0x168(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0x178(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ContainerMaxSize;                                  // 0x17C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsOver : 1;                                        // Mask: 0x1, PropSize: 0x10x180(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_279 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_71D6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PageText;                                          // 0x188(0x18)(NativeAccessSpecifierPublic)
	int32                                        PageSize;                                          // 0x1A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PageIndex;                                         // 0x1A4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPages;                                          // 0x1A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D7[0x354];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.OakWidgetData_StatEntry
struct FOakWidgetData_StatEntry
{
public:
	class FString                                Description;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Image;                                             // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SecondaryIcon;                                     // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ComparisonResult;                                  // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        DownArrow : 1;                                     // Mask: 0x1, PropSize: 0x10x50(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UpArrow : 1;                                       // Mask: 0x2, PropSize: 0x10x50(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        WrongClass : 1;                                    // Mask: 0x4, PropSize: 0x10x50(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasValue : 1;                                     // Mask: 0x8, PropSize: 0x10x50(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE38 (0xE80 - 0x48)
// ScriptStruct OakGame.OakWidgetData_ItemCard
struct FOakWidgetData_ItemCard : public FGbxUIWidgetDataBase
{
public:
	class FString                                CardType;                                          // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CategoryText;                                      // 0x58(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ItemName;                                          // 0x70(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MayhemText;                                        // 0x88(0x18)(NativeAccessSpecifierPublic)
	class FString                                ImagePath;                                         // 0xA0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ManufacturerImagePath;                             // 0xB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  LabelScore;                                        // 0xC0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LabelRequiredPlayerLevel;                          // 0xD8(0x18)(NativeAccessSpecifierPublic)
	int32                                        RequiredPlayerLevel;                               // 0xF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Type;                                              // 0xF8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Rarity;                                            // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  RarityText;                                        // 0x118(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Currency;                                          // 0x130(0x18)(NativeAccessSpecifierPublic)
	class FString                                CurrencyType;                                      // 0x148(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Score;                                             // 0x158(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0x15C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DLCRequiredText;                                   // 0x160(0x18)(NativeAccessSpecifierPublic)
	class FString                                ElementalDamage;                                   // 0x178(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x188(0x18)(NativeAccessSpecifierPublic)
	class FText                                  AlreadyKnownText;                                  // 0x1A0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FOakWidgetData_StatEntry>      PrimaryStats;                                      // 0x1B8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakWidgetData_StatEntry>      SecondaryStats;                                    // 0x1C8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOakWidgetData_StatEntry>      ManufacturerStats;                                 // 0x1D8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOakWidgetData_StatEntry              ElementalStat;                                     // 0x1E8(0x58)(NativeAccessSpecifierPublic)
	uint8                                        Pad_71DA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakWidgetData_StatEntry>      AbilityStats;                                      // 0x250(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Visible : 1;                                       // Mask: 0x1, PropSize: 0x10x260(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasManufacturerImagePath : 1;                     // Mask: 0x2, PropSize: 0x10x260(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsSmall : 1;                                       // Mask: 0x4, PropSize: 0x10x260(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Foil : 1;                                          // Mask: 0x8, PropSize: 0x10x260(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Mayhem : 1;                                        // Mask: 0x10, PropSize: 0x10x260(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsDLCRequired : 1;                                 // Mask: 0x20, PropSize: 0x10x260(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsLevelRequired : 1;                               // Mask: 0x40, PropSize: 0x10x260(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsEquipped : 1;                                    // Mask: 0x80, PropSize: 0x10x260(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasDescription : 1;                               // Mask: 0x1, PropSize: 0x10x261(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasPrimaryStats : 1;                              // Mask: 0x2, PropSize: 0x10x261(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasSecondaryStats : 1;                            // Mask: 0x4, PropSize: 0x10x261(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasManufacturerStats : 1;                         // Mask: 0x8, PropSize: 0x10x261(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasElementalStats : 1;                            // Mask: 0x10, PropSize: 0x10x261(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasAbilityStats : 1;                              // Mask: 0x20, PropSize: 0x10x261(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CanSell : 1;                                       // Mask: 0x40, PropSize: 0x10x261(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UsesCurrency : 1;                                  // Mask: 0x80, PropSize: 0x10x261(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UsesItemScore : 1;                                 // Mask: 0x1, PropSize: 0x10x262(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UsesLevelRequirement : 1;                          // Mask: 0x2, PropSize: 0x10x262(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ShowAlreadyKnownText : 1;                          // Mask: 0x4, PropSize: 0x10x262(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UseFullItemCard : 1;                               // Mask: 0x8, PropSize: 0x10x262(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_27A : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_71DB[0xC05];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PosX;                                              // 0xE68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PosY;                                              // 0xE6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71DC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GbxUIReRollerCurrency
struct FGbxUIReRollerCurrency
{
public:
	class FString                                AmountType;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Amount;                                            // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71DD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1F0 (0x1F0 - 0x0)
// ScriptStruct OakGame.GbxUIReRollerSection
struct FGbxUIReRollerSection
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ChooseTitle;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ReRollCountTitle;                                  // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ReRollCountValue;                                  // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NextCostTitle;                                     // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NextCostValue;                                     // 0x78(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ReRollEnchantmentActionButton;                     // 0x90(0x48)(NativeAccessSpecifierPublic)
	bool                                         CanAfford;                                         // 0xD8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71DE[0x117];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x24D8 (0x2520 - 0x48)
// ScriptStruct OakGame.OakWidgetData_EnchantmentReRoller
struct FOakWidgetData_EnchantmentReRoller : public FGbxUIWidgetDataBase
{
public:
	class FText                                  NewEnchantmentTitle;                               // 0x48(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIReRollerCurrency                Currency;                                          // 0x60(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIReRollerSection                 ReRollerSection;                                   // 0x78(0x1F0)(NativeAccessSpecifierPublic)
	uint8                                        Pad_71DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakWidgetData_InventoryContainer     BackpackData;                                      // 0x270(0x500)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               PrimaryItemCard;                                   // 0x770(0xE80)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               SecondaryItemCard;                                 // 0x15F0(0xE80)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               AcceptNewActionButton;                             // 0x2470(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               DiscardActionButton;                               // 0x24B8(0x48)(NativeAccessSpecifierPublic)
	bool                                         DisplayNewEnchantment;                             // 0x2500(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E0[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1E0 (0x228 - 0x48)
// ScriptStruct OakGame.OakWidgetData_EndlessAcceptPlacard
struct FOakWidgetData_EndlessAcceptPlacard : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  RoomTitle;                                         // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  RemainingText;                                     // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MayhemLevelText;                                   // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0xA8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  AcceptText;                                        // 0xC0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DeclineText;                                       // 0xD8(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               DeclineButton;                                     // 0xF0(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               AcceptButton;                                      // 0x138(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevTabButton;                                     // 0x180(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextTabButton;                                     // 0x1C8(0x48)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIListPrimitiveEntry>      Entries;                                           // 0x210(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisplayMayhem;                                     // 0x220(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AcceptDisabled;                                    // 0x221(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E1[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct OakGame.GbxUIEndlessDungeonHeaders
struct FGbxUIEndlessDungeonHeaders
{
public:
	class FText                                  MainTitle;                                         // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Timer;                                             // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MayhemLevel;                                       // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CrystalCount;                                      // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  BlessingsTitle;                                    // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CURSESTITLE;                                       // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  RunStatsTitle;                                     // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LvlText;                                           // 0xA8(0x18)(NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.GbxUIEndlessDungeonRoom
struct FGbxUIEndlessDungeonRoom
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ObjectiveText;                                     // 0x30(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsObjectiveCompleted;                              // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBonusCompleted;                                  // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsElite;                                           // 0x4A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCurrent;                                         // 0x4B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCompleted;                                       // 0x4C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                IconPath;                                          // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLootRoom;                                        // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.GbxUIEndlessDungeonMenuDetailItem
struct FGbxUIEndlessDungeonMenuDetailItem
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Multiplier;                                        // 0x30(0x18)(NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.GbxUIEndlessDungeonMenuRunStatItem
struct FGbxUIEndlessDungeonMenuRunStatItem
{
public:
	class FText                                  Value;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                IconPath;                                          // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Bonus;                                             // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBetter;                                          // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x100 (0x148 - 0x48)
// ScriptStruct OakGame.OakUIData_EndlessDungeon
struct FOakUIData_EndlessDungeon : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIEndlessDungeonHeaders           Headers;                                           // 0x48(0xC0)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEndlessDungeonRoom>      RoomsItems;                                        // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEndlessDungeonMenuDetailItem> BlessingItems;                                     // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEndlessDungeonMenuDetailItem> CurseItems;                                        // 0x128(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIEndlessDungeonMenuRunStatItem> RunStatsItems;                                     // 0x138(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x80 (0xC8 - 0x48)
// ScriptStruct OakGame.OakWidgetData_EndlessDungeonTracker
struct FOakWidgetData_EndlessDungeonTracker : public FGbxUIWidgetDataBase
{
public:
	int32                                        NbOfLifeLeft;                                      // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MainObjectiveTitle;                                // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MainObjectiveProgress;                             // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MainObjectiveTotal;                                // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusObjectiveProgress;                            // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusObjectiveTotal;                               // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BonusObjectiveTitle;                               // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRoomElite;                                       // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CrystalTotal;                                      // 0x84(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowKillCountProgress;                             // 0x88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMainPanelVisible;                                // 0x89(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TimerActive;                                       // 0x8A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DoCleanUp;                                         // 0x8B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          TimerHandle;                                       // 0x90(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	float                                        TimerProgress;                                     // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeTotal;                                         // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TimerText;                                         // 0xA0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RunType;                                           // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDungeonObjectiveUIData>       DungeonObjectives;                                 // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIInputEntry
struct FGbxUIInputEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Placeholder;                                       // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x90 - 0x48)
// ScriptStruct OakGame.OakUIData_EnterNamePopup
struct FOakUIData_EnterNamePopup : public FGbxUIWidgetDataBase
{
public:
	class FString                                Title;                                             // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIInputEntry                      Input;                                             // 0x58(0x28)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIActionButtonEntry>       HintEntries;                                       // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xE0 (0x128 - 0x48)
// ScriptStruct OakGame.OakUIData_Ffyl
struct FOakUIData_Ffyl : public FGbxUIWidgetDataBase
{
public:
	class FText                                  DyingTitle;                                        // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  RevivingTitle;                                     // 0x60(0x18)(NativeAccessSpecifierPublic)
	bool                                         DisplayDying;                                      // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayReviving;                                   // 0x79(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71E9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIProgressbarWDeltaEntry          ProgressDying;                                     // 0x80(0x30)(NativeAccessSpecifierPublic)
	struct FGbxUIProgressbarWDeltaEntry          ProgressReviving;                                  // 0xB0(0x30)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               GiveUpAction;                                      // 0xE0(0x48)(NativeAccessSpecifierPublic)
};

// 0x38 (0x80 - 0x48)
// ScriptStruct OakGame.OakUIData_FFYLAlly
struct FOakUIData_FFYLAlly : public FGbxUIWidgetDataBase
{
public:
	class FString                                ResurrectingText;                                  // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIProgressbarEntry                ProgressbarEntry;                                  // 0x58(0x28)(NativeAccessSpecifierPublic)
};

// 0x40 (0x88 - 0x48)
// ScriptStruct OakGame.OakWidgetData_FirstTimeCalibration
struct FOakWidgetData_FirstTimeCalibration : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x60(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIListPrimitiveEntry>      Entries;                                           // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct OakGame.GbxUICalibrationImageEntry
struct FGbxUICalibrationImageEntry
{
public:
	float                                        Opacity;                                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.OakUIData_WidgetArticle
struct FOakUIData_WidgetArticle
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FString                                ImagePath;                                         // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LargeImagePath;                                    // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForceFullScreen;                                   // 0x51(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71EA[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x198 (0x1E0 - 0x48)
// ScriptStruct OakGame.OakUIData_WidgetGameNews
struct FOakUIData_WidgetGameNews : public FGbxUIWidgetDataBase
{
public:
	struct FOakUIData_WidgetArticle              CurrentNew;                                        // 0x48(0x58)(NativeAccessSpecifierPublic)
	TArray<struct FOakUIData_WidgetArticle>      News;                                              // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CurrentIndexNewsSelected;                          // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNewsExpanded;                                    // 0xB4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSmallNewFocused;                                 // 0xB5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayNews;                                       // 0xB6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71EB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIActionButtonEntry               PrevTabButton;                                     // 0xB8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextTabButton;                                     // 0x100(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ViewMoreButton;                                    // 0x148(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               CloseButton;                                       // 0x190(0x48)(NativeAccessSpecifierPublic)
	int32                                        NewsTimer;                                         // 0x1D8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71EC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x50 - 0x48)
// ScriptStruct OakGame.GbxUIGenericPopupButton
struct FGbxUIGenericPopupButton : public FGbxUIActionButtonEntry
{
public:
	bool                                         CloseDialogOnSelection;                            // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71ED[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIGenericPopupCurrency
struct FGbxUIGenericPopupCurrency
{
public:
	class FText                                  Amount;                                            // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                AmountType;                                        // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x150 (0x198 - 0x48)
// ScriptStruct OakGame.OakWidgetData_GenericPopup
struct FOakWidgetData_GenericPopup : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CostLine;                                          // 0x78(0x18)(NativeAccessSpecifierPublic)
	bool                                         DisplayCostLine;                                   // 0x90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71EE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIGenericPopupButton>      buttons;                                           // 0x98(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIGenericPopupButton>      Options;                                           // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIGenericPopupCurrency            Currency;                                          // 0xB8(0x28)(NativeAccessSpecifierPublic)
	bool                                         DisplayCurrency;                                   // 0xE0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71EF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InitialChoiceIndex;                                // 0xE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayTextbox;                                    // 0xE8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayEULA;                                       // 0xE9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayOptions;                                    // 0xEA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F0[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIGenericPopupButton              HintButton1;                                       // 0xF0(0x50)(NativeAccessSpecifierPublic)
	struct FGbxUIGenericPopupButton              HintButton2;                                       // 0x140(0x50)(NativeAccessSpecifierPublic)
	bool                                         ShowHintButtons;                                   // 0x190(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct OakGame.GbxUIGuardianRankNode
struct FGbxUIGuardianRankNode
{
public:
	class FString                                Asset;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Node;                                              // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  WarningMessage;                                    // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  WarningMessage2;                                   // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  WarningMessageFull;                                // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DeltaChange;                                       // 0xA8(0x18)(NativeAccessSpecifierPublic)
	int32                                        Current;                                           // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max;                                               // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Amount;                                            // 0xC8(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsUnlocked;                                        // 0xE0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0xE1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAvailable;                                       // 0xE2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F2[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct OakGame.GbxUIGuardianRankTree
struct FGbxUIGuardianRankTree
{
public:
	class FString                                Asset;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x38(0x18)(NativeAccessSpecifierPublic)
	class FText                                  WarningMessage;                                    // 0x50(0x18)(NativeAccessSpecifierPublic)
	int32                                        TotalPoints;                                       // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TotalGuardianPointsText;                           // 0x70(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TotalGuardianPointsNameText;                       // 0x88(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIGuardianRankNode>        Nodes;                                             // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUnlocked;                                        // 0xB1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAvailable;                                       // 0xB2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFocus;                                           // 0xB3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsArrowFocus;                                      // 0xB4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F4[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIGuardianProgressEntry
struct FGbxUIGuardianProgressEntry
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Class;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x300 (0x348 - 0x48)
// ScriptStruct OakGame.OakUIData_GuardianRank
struct FOakUIData_GuardianRank : public FGbxUIWidgetDataBase
{
public:
	bool                                         DisplayGuardianRankUnlockedAnim;                   // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGuardianRankUnlocked;                            // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PrestigeRankTitle;                                 // 0x50(0x18)(NativeAccessSpecifierPublic)
	int32                                        PrestigeRankLevel;                                 // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AvailablePoints;                                   // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  AvailablePointsText;                               // 0x70(0x18)(NativeAccessSpecifierPublic)
	int32                                        GuardianRankLevel;                                 // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UnlockGuardianRankLevel;                           // 0x8C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UnlockText;                                        // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NextPoint;                                         // 0xA8(0x18)(NativeAccessSpecifierPublic)
	bool                                         UnlockTree;                                        // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIGuardianRankTree>        Trees;                                             // 0xC8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIGuardianRankTree                CurrentTreeSelected;                               // 0xD8(0xB8)(NativeAccessSpecifierPublic)
	struct FGbxUIGuardianRankNode                CurrentNodeSelected;                               // 0x190(0xE8)(NativeAccessSpecifierPublic)
	int32                                        CurrentIndexTreeSelected;                          // 0x278(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentIndexNodeSelected;                          // 0x27C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIGuardianProgressEntry           Progress;                                          // 0x280(0x28)(NativeAccessSpecifierPublic)
	int32                                        TotalGuardianPoints;                               // 0x2A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TotalGuardianPointsText;                           // 0x2B0(0x18)(NativeAccessSpecifierPublic)
	bool                                         ShowGuardianTotals;                                // 0x2C8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplaySplitVertical;                              // 0x2C9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplaySplit4p;                                    // 0x2CA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayArchmageTree;                               // 0x2CB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayDeadeyeTree;                                // 0x2CC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayDruidTree;                                  // 0x2CD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayBlameMasterTree;                            // 0x2CE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71F9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIActionButtonEntry               GuardianTotals;                                    // 0x2D0(0x48)(NativeAccessSpecifierPublic)
	class FText                                  GuardianRankUnlockedTitle;                         // 0x318(0x18)(NativeAccessSpecifierPublic)
	class FText                                  GuardianRankUnlockedSubtitle;                      // 0x330(0x18)(NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIHealthShieldProgressEntry
struct FGbxUIHealthShieldProgressEntry
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Class;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayDamaged;                                    // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayHalf;                                       // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowHitmarker;                                     // 0x2A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71FB[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x140 (0x188 - 0x48)
// ScriptStruct OakGame.OakWidgetData_HealthBar
struct FOakWidgetData_HealthBar : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIHealthShieldProgressEntry       ProgressHealth;                                    // 0x48(0x30)(NativeAccessSpecifierPublic)
	struct FGbxUIHealthShieldProgressEntry       ProgressHealthDelta;                               // 0x78(0x30)(NativeAccessSpecifierPublic)
	struct FGbxUIHealthShieldProgressEntry       ProgressShield;                                    // 0xA8(0x30)(NativeAccessSpecifierPublic)
	struct FGbxUIHealthShieldProgressEntry       ProgressShieldDelta;                               // 0xD8(0x30)(NativeAccessSpecifierPublic)
	int32                                        Health;                                            // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxHealth;                                         // 0x10C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HealthDelta;                                       // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxHealthDelta;                                    // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Shield;                                            // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxShield;                                         // 0x11C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShieldDelta;                                       // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxShieldDelta;                                    // 0x124(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HealthImage;                                       // 0x128(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HealthTint;                                        // 0x138(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PlayerClassName;                                   // 0x148(0x18)(NativeAccessSpecifierPublic)
	class FString                                HealthIcon;                                        // 0x160(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ShieldIcon;                                        // 0x170(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayGlyphDamaged;                               // 0x180(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayShield;                                     // 0x181(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayShieldbarEmpty;                             // 0x182(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71FC[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x78 - 0x48)
// ScriptStruct OakGame.OakUIWidgetData_HintBar
struct FOakUIWidgetData_HintBar : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUIActionButtonEntry>       Entries;                                           // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         CanShowEntries;                                    // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanShowHelper;                                     // 0x59(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71FD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SplitscreenDisplayText;                            // 0x60(0x18)(NativeAccessSpecifierPublic)
};

// 0x40 (0x88 - 0x48)
// ScriptStruct OakGame.OakWidgetData_HUDIndicator
struct FOakWidgetData_HUDIndicator : public FGbxUIWidgetDataBase
{
public:
	enum class EOakHUDIndicatorType              WidgetMode;                                        // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71FE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayMessage;                                    // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ErrorMessage;                                      // 0x68(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsErrorVisible;                                    // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCheckpointVisible;                               // 0x81(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSaveVisible;                                     // 0x82(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMailVisible;                                     // 0x83(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLostConnectionVisible;                           // 0x84(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOutOfBoundsVisible;                              // 0x85(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_71FF[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C8 (0x210 - 0x48)
// ScriptStruct OakGame.OakWidgetData_IndigoAcceptPlacard
struct FOakWidgetData_IndigoAcceptPlacard : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  RoomTitle;                                         // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ChallengeDescription;                              // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  AcceptText;                                        // 0xA8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DeclineText;                                       // 0xC0(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               DeclineButton;                                     // 0xD8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               AcceptButton;                                      // 0x120(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevTabButton;                                     // 0x168(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextTabButton;                                     // 0x1B0(0x48)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIListPrimitiveEntry>      Entries;                                           // 0x1F8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bCanChangeTabs;                                    // 0x208(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7200[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x100 (0x150 - 0x50)
// ScriptStruct OakGame.OakWidgetData_InGameMessage
struct FOakWidgetData_InGameMessage : public FOakUIData_QueuedData
{
public:
	class FText                                  Title;                                             // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x68(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ProgressText;                                      // 0x80(0x18)(NativeAccessSpecifierPublic)
	int32                                        Progress;                                          // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Total;                                             // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsComplete;                                        // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowProgress;                                      // 0xA1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7201[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Type;                                              // 0xA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Fee;                                               // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7202[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FeeText;                                           // 0xB8(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               BUTTON;                                            // 0xD0(0x48)(NativeAccessSpecifierPublic)
	uint8                                        Pad_7203[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsOnlineNotification;                              // 0x119(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEventRollout;                                    // 0x11A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFee;                                             // 0x11B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsChallenge;                                       // 0x11C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7204[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AssetPlayerPath;                                   // 0x120(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CompleteText;                                      // 0x130(0x18)(NativeAccessSpecifierPublic)
	uint8                                        Pad_7205[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.GbxUIPromptEntry
struct FGbxUIPromptEntry
{
public:
	struct FGbxUIActionButtonEntry               ActionButton;                                      // 0x0(0x48)(NativeAccessSpecifierPublic)
	bool                                         ShowIcon;                                          // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7206[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Icon;                                              // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayShowAnimation;                                 // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayHideAnimation;                                 // 0x61(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0x62(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOutOfAmmo;                                       // 0x63(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisabled;                                        // 0x64(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7207[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x208 (0x250 - 0x48)
// ScriptStruct OakGame.OakUIData_InteractPrompt
struct FOakUIData_InteractPrompt : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIPromptEntry                     ReloadPrompt;                                      // 0x48(0x68)(NativeAccessSpecifierPublic)
	struct FGbxUIPromptEntry                     UsePromptOne;                                      // 0xB0(0x68)(NativeAccessSpecifierPublic)
	struct FGbxUIPromptEntry                     UsePromptTwo;                                      // 0x118(0x68)(NativeAccessSpecifierPublic)
	struct FGbxUIPromptEntry                     UsePromptThree;                                    // 0x180(0x68)(NativeAccessSpecifierPublic)
	struct FGbxUIPromptEntry                     UsePromptFour;                                     // 0x1E8(0x68)(NativeAccessSpecifierPublic)
};

// 0x440 (0x440 - 0x0)
// ScriptStruct OakGame.OakUIData_InventoryCurrency
struct FOakUIData_InventoryCurrency
{
public:
	class FText                                  MoneyText;                                         // 0x0(0x18)(NativeAccessSpecifierPublic)
	int32                                        MoneyAmount;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MoneyMaxAmount;                                    // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  KeyText;                                           // 0x20(0x18)(NativeAccessSpecifierPublic)
	int32                                        KeyAmount;                                         // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KeyMaxAmount;                                      // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  EridiumText;                                       // 0x40(0x18)(NativeAccessSpecifierPublic)
	int32                                        EridiumAmount;                                     // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EridiumMaxAmount;                                  // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  VaultCoinText;                                     // 0x60(0x18)(NativeAccessSpecifierPublic)
	int32                                        VaultCoinAmount;                                   // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VaultCoinMaxAmount;                                // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SoulCanText;                                       // 0x80(0x18)(NativeAccessSpecifierPublic)
	int32                                        SoulCanAmount;                                     // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SoulCanMaxAmount;                                  // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplaySouls;                                      // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowWarning;                                       // 0xA1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7208[0x39E];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x128 (0x128 - 0x0)
// ScriptStruct OakGame.OakWidgetData_Ammo
struct FOakWidgetData_Ammo
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Current;                                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max;                                               // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CurrentDisplay;                                    // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MaxDisplay;                                        // 0x28(0x18)(NativeAccessSpecifierPublic)
	class FString                                AmmoType;                                          // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7209[0xD8];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x29F8 (0x2A40 - 0x48)
// ScriptStruct OakGame.OakUIData_Inventory
struct FOakUIData_Inventory : public FGbxUIWidgetDataBase
{
public:
	struct FOakUIData_InventoryCurrency          Currency;                                          // 0x48(0x440)(NativeAccessSpecifierPublic)
	class FText                                  GearTitle;                                         // 0x488(0x18)(NativeAccessSpecifierPublic)
	class FText                                  WeaponsTitle;                                      // 0x4A0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  AmmoTitle;                                         // 0x4B8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CurrencyTitle;                                     // 0x4D0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DroppedText;                                       // 0x4E8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  UnlockedText;                                      // 0x500(0x18)(NativeAccessSpecifierPublic)
	class FText                                  UnlockedTypeText;                                  // 0x518(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FOakWidgetData_Ammo>           AmmoEntries;                                       // 0x530(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         Horizontal;                                        // 0x540(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_720A[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakWidgetData_InventoryContainer     BackpackData;                                      // 0x550(0x500)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_EquipmentContainer     EquipmentData;                                     // 0xA50(0x2F0)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               PrimaryItemCard;                                   // 0xD40(0xE80)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               SecondaryItemCard;                                 // 0x1BC0(0xE80)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIInvitesEntry
struct FGbxUIInvitesEntry
{
public:
	class FString                                Icon;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PlayerName;                                        // 0x10(0x18)(NativeAccessSpecifierPublic)
};

// 0x40 (0x88 - 0x48)
// ScriptStruct OakGame.OakWidgetData_Invites
struct FOakWidgetData_Invites : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SubTitle;                                          // 0x60(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIInvitesEntry>            Invites;                                           // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x58 - 0x48)
// ScriptStruct OakGame.OakUIData_InWorldWaypoints
struct FOakUIData_InWorldWaypoints : public FGbxUIWidgetDataBase
{
public:
	class FString                                IconImg;                                           // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.GbxUIIEDetailsManufacturerSection
struct FGbxUIIEDetailsManufacturerSection
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                ImagePath;                                         // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Content;                                           // 0x28(0x18)(NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.GbxUIIEDetailsElementalSlot
struct FGbxUIIEDetailsElementalSlot
{
public:
	class FText                                  Value;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DamageDescription;                                 // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FString                                ComparisonResult;                                  // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        DownArrow : 1;                                     // Mask: 0x1, PropSize: 0x10x40(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UpArrow : 1;                                       // Mask: 0x2, PropSize: 0x10x40(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_720B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x160 (0x160 - 0x0)
// ScriptStruct OakGame.GbxUIIEDetailsElementalSection
struct FGbxUIIEDetailsElementalSection
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Content;                                           // 0x28(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIIEDetailsElementalSlot          FleshRating;                                       // 0x40(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIIEDetailsElementalSlot          ArmorRating;                                       // 0x88(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIIEDetailsElementalSlot          ShieldRating;                                      // 0xD0(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIIEDetailsElementalSlot          BoneRating;                                        // 0x118(0x48)(NativeAccessSpecifierPublic)
};

// 0x200 (0x200 - 0x0)
// ScriptStruct OakGame.GbxUIIEDetailsSection
struct FGbxUIIEDetailsSection
{
public:
	bool                                         bNoElements;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSecondaryElement;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanInspectElementalEffects;                       // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanInspectManufacturer;                           // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentElementIndex;                               // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SecondaryElementButton;                            // 0x8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIIEDetailsElementalSection       ElementalDamage;                                   // 0x50(0x160)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIIEDetailsElementalSection> Elements;                                          // 0x1B0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIIEDetailsManufacturerSection    Manufacturer;                                      // 0x1C0(0x40)(NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.GbxUIIEPartInspectionItemEntry
struct FGbxUIIEPartInspectionItemEntry
{
public:
	class FString                                Icon;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x28(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FOakWidgetData_StatEntry>      Attributes;                                        // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.GbxUIIEPartInspectionEntry
struct FGbxUIIEPartInspectionEntry
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIIEPartInspectionItemEntry> Entries;                                           // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIIEPartInspectionAttributesSection
struct FGbxUIIEPartInspectionAttributesSection
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Content;                                           // 0x18(0x18)(NativeAccessSpecifierPublic)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct OakGame.GbxUIIEPartInspectionSection
struct FGbxUIIEPartInspectionSection
{
public:
	struct FGbxUIIEPartInspectionEntry           Inspection;                                        // 0x0(0x40)(NativeAccessSpecifierPublic)
	struct FGbxUIIEPartInspectionAttributesSection Attribute;                                         // 0x40(0x30)(NativeAccessSpecifierPublic)
	bool                                         DisplayDescription;                                // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_720C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20C0 (0x2108 - 0x48)
// ScriptStruct OakGame.OakWidgetData_ItemInspect
struct FOakWidgetData_ItemInspect : public FGbxUIWidgetDataBase
{
public:
	struct FOakWidgetData_ItemCard               ItemCardData;                                      // 0x48(0xE80)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               SecondaryItemCardData;                             // 0xEC8(0xE80)(NativeAccessSpecifierPublic)
	struct FGbxUIInternalNavBar                  NavBar;                                            // 0x1D48(0xA0)(NativeAccessSpecifierPublic)
	struct FGbxUIInternalNavBar                  TabBar;                                            // 0x1DE8(0xA0)(NativeAccessSpecifierPublic)
	struct FGbxUIIEDetailsSection                Details;                                           // 0x1E88(0x200)(NativeAccessSpecifierPublic)
	struct FGbxUIIEPartInspectionSection         Parts;                                             // 0x2088(0x78)(NativeAccessSpecifierPublic)
	int32                                        SelectedPart;                                      // 0x2100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_720D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.GbxUIItemTradingPanelData
struct FGbxUIItemTradingPanelData
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FOakWidgetData_InventoryEntry> Entries;                                           // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  CurrencyText;                                      // 0x28(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ActionButtonText;                                  // 0x40(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsReady;                                           // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_720E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1898 (0x18E0 - 0x48)
// ScriptStruct OakGame.OakWidgetData_ItemTrading
struct FOakWidgetData_ItemTrading : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIItemTradingPanelData            OfferingData;                                      // 0x48(0x60)(NativeAccessSpecifierPublic)
	struct FGbxUIItemTradingPanelData            ReceivingData;                                     // 0xA8(0x60)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               ItemCardData;                                      // 0x108(0xE80)(NativeAccessSpecifierPublic)
	struct FOakUIData_InventoryCurrency          CurrencyData;                                      // 0xF88(0x440)(NativeAccessSpecifierPublic)
	uint8                                        Pad_720F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakWidgetData_InventoryContainer     BackpackData;                                      // 0x13D0(0x500)(NativeAccessSpecifierPublic)
	bool                                         CurrencySelected;                                  // 0x18D0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7210[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA8 (0xF0 - 0x48)
// ScriptStruct OakGame.OakWidgetData_SocialOffline
struct FOakWidgetData_SocialOffline : public FGbxUIWidgetDataBase
{
public:
	class FString                                ImagePath;                                         // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  OfflineTitleText;                                  // 0x58(0x18)(NativeAccessSpecifierPublic)
	class FText                                  OfflineDescriptionText;                            // 0x70(0x18)(NativeAccessSpecifierPublic)
	class FText                                  GoOnlineLoadingText;                               // 0x88(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LoadingText;                                       // 0xA0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TransitioningText;                                 // 0xB8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  GoOnlineText;                                      // 0xD0(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsGoOnlineDisabled;                                // 0xE8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsConnectVisible;                                  // 0xE9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLoading;                                         // 0xEA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7211[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.GbxUILanEntry
struct FGbxUILanEntry
{
public:
	class FText                                  HostName;                                          // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Mission;                                           // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Players;                                           // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Ping;                                              // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FString                                PingQuality;                                       // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x200 (0x268 - 0x68)
// ScriptStruct OakGame.OakWidgetData_LAN
struct FOakWidgetData_LAN : public FOakWidgetData_AURAMenu
{
public:
	TArray<struct FGbxUILanEntry>                Entries;                                           // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SortButton;                                        // 0x78(0x48)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_SocialOffline          SocialOffline;                                     // 0xC0(0xF0)(NativeAccessSpecifierPublic)
	bool                                         DisplaySearching;                                  // 0x1B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayNoServersFound;                             // 0x1B1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7212[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0x1B8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  HostNameText;                                      // 0x1D0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MissionText;                                       // 0x1E8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PlayersText;                                       // 0x200(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PingText;                                          // 0x218(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NoServersFoundText;                                // 0x230(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SearchingText;                                     // 0x248(0x18)(NativeAccessSpecifierPublic)
	bool                                         bCanViewProfile;                                   // 0x260(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOffline;                                        // 0x261(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7213[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUILegalImage
struct FGbxUILegalImage
{
public:
	class FString                                Path;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x68 - 0x48)
// ScriptStruct OakGame.OakWidgetData_Legal
struct FOakWidgetData_Legal : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUILegalImage>              Images;                                            // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                Description;                                       // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.GbxUILoadCharacterPanelInfoEntry
struct FGbxUILoadCharacterPanelInfoEntry
{
public:
	class FText                                  CharacterMission;                                  // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CurrentMission;                                    // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PlayTime;                                          // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ClassName;                                         // 0x48(0x18)(NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct OakGame.GbxUILoadCharacterEntry
struct FGbxUILoadCharacterEntry
{
public:
	class FString                                Icon;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Level;                                             // 0x28(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasUnlicensedData;                                 // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7214[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUILoadCharacterPanelInfoEntry     Info;                                              // 0x48(0x60)(NativeAccessSpecifierPublic)
};

// 0xF0 (0x138 - 0x48)
// ScriptStruct OakGame.OakWidgetData_LoadCharacter
struct FOakWidgetData_LoadCharacter : public FGbxUIWidgetDataBase
{
public:
	class FText                                  SelectCharacterTitle;                              // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CharacterMissionTitle;                             // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CurrentMissionTitle;                               // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PlayThroughTitle;                                  // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PlayTimeTitle;                                     // 0xA8(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUILoadCharacterEntry>      Characters;                                        // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               CreateCharacterActionButton;                       // 0xD0(0x48)(NativeAccessSpecifierPublic)
	int32                                        CurrentCharacterIndex;                             // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CreateCharacterBtnVisible;                         // 0x11C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayCharacters;                                 // 0x11D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7215[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LoadCharacterTitle;                                // 0x120(0x18)(NativeAccessSpecifierPublic)
};

// 0x48 (0x90 - 0x48)
// ScriptStruct OakGame.OakWidgetData_LoadingScreen
struct FOakWidgetData_LoadingScreen : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Location;                                          // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Image;                                             // 0x78(0x18)(NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.LobbyWidgetData_GroupMode
struct FLobbyWidgetData_GroupMode
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ToolTipText;                                       // 0x28(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsCheckIcon;                                       // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCrossOver;                                       // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7216[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.LobbyWidgetData_NetworkMode
struct FLobbyWidgetData_NetworkMode
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ToolTipText;                                       // 0x28(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsCheckIcon;                                       // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCrossOver;                                       // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7217[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.LobbyWidgetData_PlayerOption
struct FLobbyWidgetData_PlayerOption
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCheckIcon;                                       // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCrossOver;                                       // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7218[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x140 (0x140 - 0x0)
// ScriptStruct OakGame.GbxUILobbyWidgetPlayerEntry
struct FGbxUILobbyWidgetPlayerEntry
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                ProfileIconAssetPath;                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  LevelText;                                         // 0x28(0x18)(NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7219[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Type;                                              // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TypeIconAssetPath;                                 // 0x58(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsExtended;                                        // 0x71(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMuted;                                           // 0x72(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTalking;                                         // 0x73(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_721A[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsHostPlayer;                                      // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCrossPlay;                                       // 0xB1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsClassPlayer;                                     // 0xB2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_721B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLobbyWidgetData_PlayerOption> PlayerOptions;                                     // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_721C[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bForceUpdate;                                      // 0x108(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_721D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlatformIdent;                                     // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_721E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.LobbyWidgetData_RecommendedFriend
struct FLobbyWidgetData_RecommendedFriend
{
public:
	class FText                                  InviteText;                                        // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerId;                                          // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCheckIcon;                                       // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCrossOver;                                       // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_721F[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x160 (0x1A8 - 0x48)
// ScriptStruct OakGame.OakUIData_LobbyWidget
struct FOakUIData_LobbyWidget : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIActionButtonEntry               EditGroupButton;                                   // 0x48(0x48)(NativeAccessSpecifierPublic)
	bool                                         DisplayGroupButton;                                // 0x90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7220[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  GroupMembersText;                                  // 0x98(0x18)(NativeAccessSpecifierPublic)
	int32                                        CurrentGroupMembers;                               // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxGroupMembers;                                   // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowLegendText;                                    // 0xB8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7221[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  InfoPanelContent;                                  // 0xC0(0x18)(NativeAccessSpecifierPublic)
	class FString                                GroupModeIcon;                                     // 0xD8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GroupPrivacyIcon;                                  // 0xE8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  GroupModeText;                                     // 0xF8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  GroupPrivacyText;                                  // 0x110(0x18)(NativeAccessSpecifierPublic)
	bool                                         bShowSettingsList;                                 // 0x128(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7222[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLobbyWidgetData_GroupMode>    GroupMode;                                         // 0x130(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLobbyWidgetData_NetworkMode>  GroupPrivacy;                                      // 0x140(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bShowPlayerOptionsList;                            // 0x150(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7223[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUILobbyWidgetPlayerEntry>  LobbyPlayerEntry;                                  // 0x158(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CurrentIndexLobbyPlayer;                           // 0x168(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7224[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLobbyWidgetData_RecommendedFriend> FriendEntry;                                       // 0x170(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bEnableLeaveBtn;                                   // 0x180(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanOpenRoster;                                    // 0x181(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayFriendList;                                // 0x182(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanEditGroupMode;                                 // 0x183(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7225[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMatchMakingData_Search               MatchmakingSearch;                                 // 0x188(0x20)(NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.GbxUIMailEntry
struct FGbxUIMailEntry
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Message;                                           // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FString                                Guid;                                              // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Date;                                              // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNew;                                             // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7226[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.GbxUIPlayerWidgetSideEntry
struct FGbxUIPlayerWidgetSideEntry
{
public:
	int32                                        CurrentAmount;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxAmount;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SDUText;                                           // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FString                                Type;                                              // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SecondaryType;                                     // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFull;                                            // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStatLess;                                        // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7227[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x868 (0x8B0 - 0x48)
// ScriptStruct OakGame.OakWidgetData_PlayerWidget
struct FOakWidgetData_PlayerWidget : public FGbxUIWidgetDataBase
{
public:
	class FName                                  CharacterClassIdent;                               // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CurrencyAmountText;                                // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ActionText;                                        // 0x68(0x18)(NativeAccessSpecifierPublic)
	bool                                         NotEnoughMoney;                                    // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7228[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIPlayerWidgetSideEntry           LeftData;                                          // 0x88(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIPlayerWidgetSideEntry           RightData;                                         // 0xD0(0x48)(NativeAccessSpecifierPublic)
	uint8                                        Pad_7229[0x798];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB68 (0xBD0 - 0x68)
// ScriptStruct OakGame.OakWidgetData_Mail
struct FOakWidgetData_Mail : public FOakWidgetData_AURAMenu
{
public:
	TArray<struct FGbxUIMailEntry>               Entries;                                           // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOakWidgetData_PlayerWidget           PlayerWidget;                                      // 0x78(0x8B0)(NativeAccessSpecifierPublic)
	int32                                        SelectedEntryIndex;                                // 0x928(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_722A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SelectedMailEntryGuid;                             // 0x930(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SelectedMailEntryImagePath;                        // 0x940(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevSortButton;                                    // 0x950(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextSortButton;                                    // 0x998(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               AcceptItemButton;                                  // 0x9E0(0x48)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_SocialOffline          SocialOffline;                                     // 0xA28(0xF0)(NativeAccessSpecifierPublic)
	bool                                         NewItemRecieved;                                   // 0xB18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNewMail;                                        // 0xB19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_722B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0xB20(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SortText;                                          // 0xB38(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NewItemText;                                       // 0xB50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  AcceptItemText;                                    // 0xB68(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ReceivedItemText;                                  // 0xB80(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NoMailText;                                        // 0xB98(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NoMailItemsText;                                   // 0xBB0(0x18)(NativeAccessSpecifierPublic)
	bool                                         bIsOffline;                                        // 0xBC8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_722C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIMissionPreReqs
struct FGbxUIMissionPreReqs
{
public:
	class FText                                  Description;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
	bool                                         bResult;                                           // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_722D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.GbxUIMissions
struct FGbxUIMissions
{
public:
	class FText                                  MissionTitle;                                      // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MissionDescription;                                // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FString                                ImgBackGround;                                     // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocked;                                           // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoading;                                          // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_722E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIMissionPreReqs>          PreReqs;                                           // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x168 (0x1D0 - 0x68)
// ScriptStruct OakGame.OakUIData_MatchMaking
struct FOakUIData_MatchMaking : public FOakWidgetData_AURAMenu
{
public:
	TArray<struct FGbxUIMissions>                MissionsEntry;                                     // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  FriendsOnlineText;                                 // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NumberOfOnlineFirends;                             // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  StartButtonText;                                   // 0xA8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LockedButtonText;                                  // 0xC0(0x18)(NativeAccessSpecifierPublic)
	int32                                        CurrentIndex;                                      // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_722F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakWidgetData_SocialOffline          SocialOffline;                                     // 0xE0(0xF0)(NativeAccessSpecifierPublic)
};

// 0xA8 (0xF0 - 0x48)
// ScriptStruct OakGame.OakUIData_MatchMakingUpdate
struct FOakUIData_MatchMakingUpdate : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Message;                                           // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FString                                StatusIconString;                                  // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MatchTypeIconString;                               // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               CancelAction;                                      // 0x98(0x48)(NativeAccessSpecifierPublic)
	int32                                        PreviousPlayerCount;                               // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousRemainingTime;                             // 0xE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayCancelPrompt;                              // 0xE8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsJoinMatch;                                      // 0xE9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPass;                                           // 0xEA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFailed;                                         // 0xEB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayMessage;                                    // 0xEC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7230[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIMayhemStat
struct FGbxUIMayhemStat
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Value;                                             // 0x18(0x18)(NativeAccessSpecifierPublic)
};

// 0xE0 (0x128 - 0x48)
// ScriptStruct OakGame.OakWidgetData_MayhemMode
struct FOakWidgetData_MayhemMode : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUIMayhemStat>              Stats;                                             // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIMayhemStat>              TierDropRates;                                     // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIListPrimitiveEntry>      Entries;                                           // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  HeaderText;                                        // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  StatsText;                                         // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FText                                  InformationText;                                   // 0xA8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  InformationContent;                                // 0xC0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MayhemDropText;                                    // 0xD8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  InformationWarningMessage;                         // 0xF0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ApplyText;                                         // 0x108(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsMayhemModeOn;                                    // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowStatsDisplay;                                  // 0x121(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowDescriptionDisplay;                            // 0x122(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsApplyButtonDisabled;                             // 0x123(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7231[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x50 - 0x48)
// ScriptStruct OakGame.OakWidgetData_MenuDamage
struct FOakWidgetData_MenuDamage : public FGbxUIWidgetDataBase
{
public:
	bool                                         IsTakingDamage;                                    // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7232[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.DebugMapMenuEntry
struct FDebugMapMenuEntry
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                MapName;                                           // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x100 (0x150 - 0x50)
// ScriptStruct OakGame.OakWidgetData_MetagameMessage
struct FOakWidgetData_MetagameMessage : public FOakUIData_QueuedData
{
public:
	class FString                                Type;                                              // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x78(0x18)(NativeAccessSpecifierPublic)
	int32                                        Progress;                                          // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Total;                                             // 0x94(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IconIdent;                                         // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsComplete;                                        // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7233[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIActionButtonEntry               PromptAction;                                      // 0xB0(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               DLCPromptAction;                                   // 0xF8(0x48)(NativeAccessSpecifierPublic)
	uint8                                        Pad_7234[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUIMapElementEntry
struct FGbxUIMapElementEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RotateValue;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCustom;                                          // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7235[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x98 - 0x48)
// ScriptStruct OakGame.OakUIData_MiniMapInfo
struct FOakUIData_MiniMapInfo : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIMapElementEntry                 Map;                                               // 0x48(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	class FString                                MapAssetPath;                                      // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIMapElementEntry                 NPointer;                                          // 0x68(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIMapElementEntry>         Arrows;                                            // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIMapElementEntry                 MissionIcon;                                       // 0x88(0x10)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x1F8 (0x240 - 0x48)
// ScriptStruct OakGame.OakUIData_MissionAcceptPlacard
struct FOakUIData_MissionAcceptPlacard : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Location;                                          // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Level;                                             // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DifficultyText;                                    // 0x90(0x18)(NativeAccessSpecifierPublic)
	class FString                                DifficultyType;                                    // 0xA8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0xB8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  OnQuestText;                                       // 0xD0(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               AcceptButton;                                      // 0xE8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               DeclineButton;                                     // 0x130(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevTabButton;                                     // 0x178(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextTabButton;                                     // 0x1C0(0x48)(NativeAccessSpecifierPublic)
	bool                                         TriggerFadeIn;                                     // 0x208(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TriggerFadeOut;                                    // 0x209(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0x20A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayQuestDescription;                           // 0x20B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7236[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FriendsOnlineQuestText;                            // 0x210(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NumberOfOnlineFriends;                             // 0x228(0x18)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUIMissionFriend
struct FGbxUIMissionFriend
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIBuffItem
struct FGbxUIBuffItem
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsActive;                                          // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7237[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIBuffsSection
struct FGbxUIBuffsSection
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIBuffItem>                Items;                                             // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUILogItemObjective
struct FGbxUILogItemObjective
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsChecked;                                         // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7238[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUILogItemObjectiveSection
struct FGbxUILogItemObjectiveSection
{
public:
	class FText                                  ObjectiveHeaderText;                               // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUILogItemObjective>        SubObjectives;                                     // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUIRewardItem
struct FGbxUIRewardItem
{
public:
	class FString                                CategoryType;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIRewardWeapon
struct FGbxUIRewardWeapon
{
public:
	class FString                                Rarity;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUIRewardsSection
struct FGbxUIRewardsSection
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIRewardItem>              Items;                                             // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIRewardWeapon>            Weapons;                                           // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x108 (0x108 - 0x0)
// ScriptStruct OakGame.GbxUILogSectionItem
struct FGbxUILogSectionItem
{
public:
	class FString                                Icon;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x10(0x18)(NativeAccessSpecifierPublic)
	int32                                        NoFriends;                                         // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNew;                                             // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisabled;                                        // 0x2D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayingAudio;                                    // 0x2E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0x2F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCompleted;                                       // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStoryMission;                                    // 0x31(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHardMission;                                     // 0x32(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTracked;                                         // 0x33(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7239[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Type;                                              // 0x38(0x18)(NativeAccessSpecifierPublic)
	class FString                                SuggestLevelText;                                  // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SuggestLevel;                                      // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_723A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PointsText;                                        // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PointsName;                                        // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Points;                                            // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_723B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUILogItemObjectiveSection> Objectives;                                        // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIRewardsSection                  Rewards;                                           // 0xA0(0x38)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0xD8(0x18)(NativeAccessSpecifierPublic)
	TSubclassOf<class UMission>                  Mission;                                           // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 EchoLogGuid;                                       // 0xF8(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUILogSection
struct FGbxUILogSection
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Ident;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUILogSectionItem>          Items;                                             // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.GbxUILog
struct FGbxUILog
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUILogSection>              Sections;                                          // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakUIMissionLogFilterType        FilterType;                                        // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_723C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Icon;                                              // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NavigationType;                                    // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct OakGame.GbxUILogSecondaryPanel
struct FGbxUILogSecondaryPanel
{
public:
	bool                                         IsVisible;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsTracked;                                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBonusFirst;                                      // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_723D[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Name;                                              // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Bonus;                                             // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Type;                                              // 0x38(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IconPath;                                          // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x70(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DescriptionTitle;                                  // 0x88(0x18)(NativeAccessSpecifierPublic)
	bool                                         HasObjectives;                                     // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_723E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUILogItemObjectiveSection> Objectives;                                        // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         HasRewards;                                        // 0xB8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_723F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIRewardsSection                  Rewards;                                           // 0xC0(0x38)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUIFriendsList
struct FGbxUIFriendsList
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x370 (0x3B8 - 0x48)
// ScriptStruct OakGame.OakUIData_MissionLog
struct FOakUIData_MissionLog : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUILog>                     TabsLogs;                                          // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUILog                             CurrentTab;                                        // 0x58(0x50)(NativeAccessSpecifierPublic)
	int32                                        SelectedTab;                                       // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectedSectionIndex;                              // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectedItemIndex;                                 // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7240[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUILogSecondaryPanel               SecondaryPanelInfo;                                // 0xB8(0xF8)(NativeAccessSpecifierPublic)
	bool                                         DisplayLogsDetails;                                // 0x1B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayShrineBuff;                                 // 0x1B1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayEcho;                                       // 0x1B2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7241[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIFriendsList>             Friends;                                           // 0x1B8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisplayFriendsList;                                // 0x1C8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7242[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIBuffsSection>            Buffs;                                             // 0x1D0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                          SortMissionButtonText;                             // 0x1E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SortButton;                                        // 0x1F0(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PlayAudioButton;                                   // 0x238(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ShowOnMapButton;                                   // 0x280(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevTabButton;                                     // 0x2C8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextTabButton;                                     // 0x310(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ShowBuffsButton;                                   // 0x358(0x48)(NativeAccessSpecifierPublic)
	class FText                                  RewardsText;                                       // 0x3A0(0x18)(NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.GbxUIRewardEntry
struct FGbxUIRewardEntry
{
public:
	class FString                                Ident;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Type;                                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SmallIcon;                                         // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Rarity;                                            // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x68 - 0x48)
// ScriptStruct OakGame.OakUIData_MissionReward
struct FOakUIData_MissionReward : public FGbxUIWidgetDataBase
{
public:
	class FString                                Title;                                             // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIRewardEntry>             Rewards;                                           // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x68 - 0x48)
// ScriptStruct OakGame.OakUIData_MissionState
struct FOakUIData_MissionState : public FGbxUIWidgetDataBase
{
public:
	class FString                                Title;                                             // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SubTitle;                                          // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.OakUI_MissionTrackerAnimationData
struct FOakUI_MissionTrackerAnimationData
{
public:
	class FText                                  Description;                                       // 0x0(0x18)(Transient, NativeAccessSpecifierPublic)
	enum class EOakUIMissionTracker_AnimationType AnimationType;                                     // 0x18(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7243[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ObjectiveGuid;                                     // 0x1C(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7244[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.OakUIData_MissionTrackerTask
struct FOakUIData_MissionTrackerTask
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	struct FGuid                                 ObjectiveGuid;                                     // 0x18(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCompleted;                                       // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFailed;                                          // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOptional;                                        // 0x2A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToggleEnterAnimation;                              // 0x2B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToggleExitAnimation;                               // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToggleSlideUpAnimation;                            // 0x2D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToggleSlideDownAnimation;                          // 0x2E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0x2F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHiddenTask;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7245[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x120 (0x168 - 0x48)
// ScriptStruct OakGame.OakUIData_MissionTrackerUI
struct FOakUIData_MissionTrackerUI : public FGbxUIWidgetDataBase
{
public:
	bool                                         ShowWidget;                                        // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7246[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MissionTitle;                                      // 0x50(0x18)(NativeAccessSpecifierPublic)
	bool                                         ShowMissionTitle;                                  // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlotMission;                                     // 0x69(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7247[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FOakUIData_MissionTrackerTask> Tasks;                                             // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsMissionFailed;                                   // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToggleMissionFailedAnimation;                      // 0x81(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasMultipleActiveMissions;                         // 0x82(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7248[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MissionFailedTitle;                                // 0x88(0x18)(NativeAccessSpecifierPublic)
	class FText                                  MissionFailedSubtitle;                             // 0xA0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Timer;                                             // 0xB8(0x18)(NativeAccessSpecifierPublic)
	bool                                         ToggleTimer;                                       // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToggleBar;                                         // 0xD1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayMissionTrackerList;                         // 0xD2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7249[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIActionButtonEntry               TrackMissionPrev;                                  // 0xD8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               TrackMissionNext;                                  // 0x120(0x48)(NativeAccessSpecifierPublic)
};

// 0x90 (0x118 - 0x88)
// ScriptStruct OakGame.OakUIData_NavigationBar
struct FOakUIData_NavigationBar : public FGbxUIData_ListMenu
{
public:
	struct FGbxUIActionButtonEntry               LeftTriggerEntry;                                  // 0x88(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RightTriggerEntry;                                 // 0xD0(0x48)(NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.GbxUIAspectAttributeEntry
struct FGbxUIAspectAttributeEntry
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Bonus;                                             // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BonusText;                                         // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.GbxUIPlayerSelectionEntry
struct FGbxUIPlayerSelectionEntry
{
public:
	class FString                                AssetPath;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x28(0x18)(NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.GbxUIClassFeatEntry
struct FGbxUIClassFeatEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FString                                Asset;                                             // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GbxUIHorizontalSelectorItemEntry
struct FGbxUIHorizontalSelectorItemEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.GbxUIHorizontalSelector
struct FGbxUIHorizontalSelector
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIHorizontalSelectorItemEntry     SelectorLeftArrow;                                 // 0x18(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIHorizontalSelectorItemEntry     SelectorRightArrow;                                // 0x30(0x18)(NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.GbxUIActionSkillEntry
struct FGbxUIActionSkillEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FString                                Asset;                                             // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x160 (0x160 - 0x0)
// ScriptStruct OakGame.GbxUICharacterClass
struct FGbxUICharacterClass
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FString                                IconAssetPath;                                     // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DescriptionTitle;                                  // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x48(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               HintSelect;                                        // 0x60(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIHorizontalSelector              ClassSelector;                                     // 0xA8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIClassFeatEntry                  ClassFeat;                                         // 0xF0(0x58)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIActionSkillEntry>        ActionSkills;                                      // 0x148(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0x158(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOver;                                            // 0x159(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLocked;                                          // 0x15A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_724A[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIClassIconEntry
struct FGbxUIClassIconEntry
{
public:
	class FString                                AssetPath;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsHighlighted;                                     // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_724B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIPointsSpentEntry
struct FGbxUIPointsSpentEntry
{
public:
	class FString                                Value;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AttributeText;                                     // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct OakGame.GbxUIDescriptionPanelEntry
struct FGbxUIDescriptionPanelEntry
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ShortDescription;                                  // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SecondaryEffect;                                   // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TwistOfFateEffect;                                 // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasAssetPath;                                      // 0x88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_724C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RequireDLCText;                                    // 0x90(0x18)(NativeAccessSpecifierPublic)
	bool                                         DisplayTwistOfFateEffect;                          // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_724D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIAspectAttributeEntry>    Attributes;                                        // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIClassIconEntry>          BestFor;                                           // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIPointsSpentEntry>        PointsSpent;                                       // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x640 (0x688 - 0x48)
// ScriptStruct OakGame.OakUIData_NewCharacter
struct FOakUIData_NewCharacter : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIColorGridSection                ColorGridSection;                                  // 0x48(0x28)(NativeAccessSpecifierPublic)
	struct FGbxUIColorGridItemEntry              ColorGridItemFocused;                              // 0x70(0x30)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIListPrimitiveEntry>      Entries;                                           // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsSelectedAspectOfTheVaultLocked;                 // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_724E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUICharacterClass                  CharacterClassSelected;                            // 0xB8(0x160)(NativeAccessSpecifierPublic)
	class FText                                  ActionSkillTitle;                                  // 0x218(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ClassFeatTitle;                                    // 0x230(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIDescriptionPanelEntry           DescriptionPanel;                                  // 0x248(0xE0)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIActionButtonEntry>       HintEntries;                                       // 0x328(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x338(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerNameCurrentInput;                            // 0x348(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PointsAvailableTitle;                              // 0x358(0x18)(NativeAccessSpecifierPublic)
	class FString                                PointsAvailableValue;                              // 0x370(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIPlayerSelectionEntry            PlayerAspect;                                      // 0x380(0x40)(NativeAccessSpecifierPublic)
	struct FGbxUIPlayerSelectionEntry            PlayerClass;                                       // 0x3C0(0x40)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIAspectAttributeEntry>    PlayerAttributes;                                  // 0x400(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  BestForTitle;                                      // 0x410(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ActionsSkillTitle;                                 // 0x428(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TitleChooseClass;                                  // 0x440(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TitleCustomizeCharacter;                           // 0x458(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TitlePlayerAttributes;                             // 0x470(0x18)(NativeAccessSpecifierPublic)
	class FText                                  AllocatePlayerAttributePointsTitle;                // 0x488(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TitleAspectOfTheVault;                             // 0x4A0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TitleClassFeat;                                    // 0x4B8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TitleActionSkills;                                 // 0x4D0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TitleCharacterClass;                               // 0x4E8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TitleTwistOfFate;                                  // 0x500(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ContinueButtonText;                                // 0x518(0x18)(NativeAccessSpecifierPublic)
	int32                                        PhaseState;                                        // 0x530(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SymmetryMsg;                                       // 0x534(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_724F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIActionButtonEntry               ToggleTwistButton;                                 // 0x538(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               StartButton;                                       // 0x580(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SortButton;                                        // 0x5C8(0x48)(NativeAccessSpecifierPublic)
	bool                                         ShowColorGrid;                                     // 0x610(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CharacterIsCommitted;                              // 0x611(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasHurryUpMessage;                                 // 0x612(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7250[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  HurryUpMessage;                                    // 0x618(0x18)(NativeAccessSpecifierPublic)
	class FText                                  EnterNameText;                                     // 0x630(0x18)(NativeAccessSpecifierPublic)
	bool                                         SymmetryWarning;                                   // 0x648(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7251[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SymmetryText;                                      // 0x650(0x18)(NativeAccessSpecifierPublic)
	class FText                                  IndigoDlcText;                                     // 0x668(0x18)(NativeAccessSpecifierPublic)
	bool                                         UIVisible;                                         // 0x680(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7252[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.OakUIData_NewGameSelection
struct FOakUIData_NewGameSelection
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                IconIdent;                                         // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x28(0x18)(NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.OakUIData_NewGameOptions
struct FOakUIData_NewGameOptions
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  InfoTitle;                                         // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  InfoDescription;                                   // 0x30(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FOakUIData_NewGameSelection>   AvailableSections;                                 // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x78 (0xC0 - 0x48)
// ScriptStruct OakGame.OakWidgetData_NewGame
struct FOakWidgetData_NewGame : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FOakUIData_NewGameOptions>     CurrentOptions;                                    // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CurrentTabIdx;                                     // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentSectionIdx;                                 // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SelectActionButton;                                // 0x78(0x48)(NativeAccessSpecifierPublic)
};

// 0x80 (0xD0 - 0x50)
// ScriptStruct OakGame.OakUIData_Notification
struct FOakUIData_Notification : public FOakUIData_QueuedData
{
public:
	class FName                                  Type;                                              // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x58(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SubTitle;                                          // 0x70(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PromptAction;                                      // 0x88(0x48)(NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUIOptionsDescriptionPanel
struct FGbxUIOptionsDescriptionPanel
{
public:
	bool                                         ShowPanel;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7253[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x20(0x18)(NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUIOptionsGamepadBinding
struct FGbxUIOptionsGamepadBinding
{
public:
	class FText                                  KeyGlyph;                                          // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  BoundAction;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	bool                                         bIsHighlighted;                                    // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7254[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x3F0 (0x3F0 - 0x0)
// ScriptStruct OakGame.GbxUIOptionsGamepadBindings
struct FGbxUIOptionsGamepadBindings
{
public:
	struct FGbxUIOptionsGamepadBinding           SpecialLeft;                                       // 0x0(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           SpecialRight;                                      // 0x38(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           LeftShoulder;                                      // 0x70(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           RightShoulder;                                     // 0xA8(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           LeftTrigger;                                       // 0xE0(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           RightTrigger;                                      // 0x118(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           LeftStickAxis;                                     // 0x150(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           LeftStickButton;                                   // 0x188(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           RightStickAxis;                                    // 0x1C0(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           RightStickButton;                                  // 0x1F8(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           FaceButtonTop;                                     // 0x230(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           FaceButtonBottom;                                  // 0x268(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           FaceButtonLeft;                                    // 0x2A0(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           FaceButtonRight;                                   // 0x2D8(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           DPadUp;                                            // 0x310(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           DPadDown;                                          // 0x348(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           DPadLeft;                                          // 0x380(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBinding           DPadRight;                                         // 0x3B8(0x38)(NativeAccessSpecifierPublic)
};

// 0x540 (0x588 - 0x48)
// ScriptStruct OakGame.OakWidgetData_Options
struct FOakWidgetData_Options : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUIListPrimitiveEntry>      Entries;                                           // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  PanelTitle;                                        // 0x58(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PanelSubTitle;                                     // 0x70(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIInternalNavBar                  TabBar;                                            // 0x88(0xA0)(NativeAccessSpecifierPublic)
	int32                                        CurrentTabBarIndex;                                // 0x128(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowController;                                    // 0x12C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7255[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIOptionsDescriptionPanel         DescriptionPanel;                                  // 0x130(0x38)(NativeAccessSpecifierPublic)
	int32                                        OptionsType;                                       // 0x168(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NeedRestartWarningVisible;                         // 0x16C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7256[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NeedRestartText;                                   // 0x170(0x18)(NativeAccessSpecifierPublic)
	class FString                                ViewedGamepadType;                                 // 0x188(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIOptionsGamepadBindings          GamepadBindings;                                   // 0x198(0x3F0)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIPassiveBuff
struct FGbxUIPassiveBuff
{
public:
	bool                                         Visible;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7257[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ProgressValue;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MultiplierValue;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7258[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AssetPath;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x58 - 0x48)
// ScriptStruct OakGame.OakWidgetData_PassiveBuff
struct FOakWidgetData_PassiveBuff : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUIPassiveBuff>             Passives;                                          // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.GbxUIPhotoModeSectionEntry
struct FGbxUIPhotoModeSectionEntry
{
public:
	TArray<struct FGbxUIListPrimitiveEntry>      Entries;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC8 (0x110 - 0x48)
// ScriptStruct OakGame.OakUIWidgetData_PhotoMode
struct FOakUIWidgetData_PhotoMode : public FGbxUIWidgetDataBase
{
public:
	bool                                         DisplayPhotoMode;                                  // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7259[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentIndex;                                      // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIListPrimitiveEntry>      CurrentEntries;                                    // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIPhotoModeSectionEntry>   AllEntries;                                        // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIInternalNavBar                  TabBar;                                            // 0x70(0xA0)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GbxUIPhotoModeElementOptionEntry
struct FGbxUIPhotoModeElementOptionEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.GbxUIPhotoModeListPrimitiveEntry
struct FGbxUIPhotoModeListPrimitiveEntry
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Class;                                             // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Label;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Title;                                             // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Initial;                                           // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveBy;                                            // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Limit;                                             // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OptionIndex;                                       // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CheckboxState;                                     // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_725A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIPhotoModeElementOptionEntry> Options;                                           // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x27F8 (0x2840 - 0x48)
// ScriptStruct OakGame.OakUIData_PlayerStorage
struct FOakUIData_PlayerStorage : public FGbxUIWidgetDataBase
{
public:
	uint8                                        Pad_725B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOakWidgetData_InventoryContainer     BankData;                                          // 0x50(0x500)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_InventoryContainer     BackpackData;                                      // 0x550(0x500)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               ItemCardData;                                      // 0xA50(0xE80)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               CompareItemCardData;                               // 0x18D0(0xE80)(NativeAccessSpecifierPublic)
	class FName                                  DisplayedContainerIdent;                           // 0x2750(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevTabEntry;                                      // 0x2758(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextTabEntry;                                      // 0x27A0(0x48)(NativeAccessSpecifierPublic)
	bool                                         IsComparisonMode;                                  // 0x27E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_725C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RetrieveText;                                      // 0x27F0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DepositText;                                       // 0x2808(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PageText;                                          // 0x2820(0x18)(NativeAccessSpecifierPublic)
	uint8                                        Pad_725D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct OakGame.OakUIData_DeferedItemCard
struct FOakUIData_DeferedItemCard : public FGbxHasStructType
{
public:
	uint8                                        Pad_725E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x68 - 0x48)
// ScriptStruct OakGame.OakWidgetData_PressStartMenu
struct FOakWidgetData_PressStartMenu : public FGbxUIWidgetDataBase
{
public:
	class FString                                PressButtonText;                                   // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Logo;                                              // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIQuickChangeNavBarItem
struct FGbxUIQuickChangeNavBarItem
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FName                                  Ident;                                             // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.GbxUIQuickChangeNavBar
struct FGbxUIQuickChangeNavBar
{
public:
	TArray<struct FGbxUIQuickChangeNavBarItem>   Entries;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               LeftTriggerEntry;                                  // 0x10(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RightTriggerEntry;                                 // 0x58(0x48)(NativeAccessSpecifierPublic)
};

// 0x4C0 (0x508 - 0x48)
// ScriptStruct OakGame.OakWidgetData_QuickChange
struct FOakWidgetData_QuickChange : public FGbxUIWidgetDataBase
{
public:
	class FString                                PlayerName;                                        // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Pet1Name;                                          // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Pet2Name;                                          // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIColorGridSection                ColorGridSection;                                  // 0x78(0x28)(NativeAccessSpecifierPublic)
	struct FGbxUIColorGridItemEntry              ColorGridItemFocused;                              // 0xA0(0x30)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIListPrimitiveEntry>      Entries;                                           // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  PanelTitle;                                        // 0xE0(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIRadialWheel                     RadialWheel;                                       // 0xF8(0x230)(NativeAccessSpecifierPublic)
	struct FGbxUIQuickChangeNavBar               NavBar;                                            // 0x328(0xA0)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SortButton;                                        // 0x3C8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RenameCharacterButton;                             // 0x410(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RenamePet1Button;                                  // 0x458(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RenamePet2Button;                                  // 0x4A0(0x48)(NativeAccessSpecifierPublic)
	bool                                         SymmetryWarning;                                   // 0x4E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_725F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SymmetryText;                                      // 0x4F0(0x18)(NativeAccessSpecifierPublic)
};

// 0x230 (0x278 - 0x48)
// ScriptStruct OakGame.OakWidgetData_RadialWheel
struct FOakWidgetData_RadialWheel : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIRadialWheel                     RadialWheel;                                       // 0x48(0x230)(NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUIRosterDropdownEntry
struct FGbxUIRosterDropdownEntry
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                Ident;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Current;                                           // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisabled;                                         // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7260[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct OakGame.GbxUIPlayerHunterCard
struct FGbxUIPlayerHunterCard
{
public:
	uint8                                        Strength;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Dexterity;                                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Intelligence;                                      // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Wisdom;                                            // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Constitution;                                      // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Luck;                                              // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7261[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FirstClass;                                        // 0x8(0x18)(NativeAccessSpecifierPublic)
	uint8                                        FirstPoints;                                       // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7262[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SecondClass;                                       // 0x28(0x18)(NativeAccessSpecifierPublic)
	uint8                                        SecondPoints;                                      // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LookingForHelp;                                    // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7263[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MissionName;                                       // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ActivityStatus;                                    // 0x60(0x18)(NativeAccessSpecifierPublic)
	int32                                        PartyCount;                                        // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7264[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x150 (0x150 - 0x0)
// ScriptStruct OakGame.GbxUIGridCell
struct FGbxUIGridCell
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  OnlineStatus;                                      // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LevelText;                                         // 0x30(0x18)(NativeAccessSpecifierPublic)
	class FString                                Platform;                                          // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ImagePath;                                         // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StatusIdent;                                       // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEmpty;                                           // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NotInGame;                                         // 0x79(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFindFriends;                                     // 0x7A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsManageShiftFriends;                              // 0x7B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayButtonList;                                 // 0x7C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFavorite;                                        // 0x7D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7265[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIPlayerHunterCard                VaultHunterCard;                                   // 0x80(0x80)(NativeAccessSpecifierPublic)
	bool                                         bIsOnline;                                         // 0x100(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7266[0x4F];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GbxUISHiFTFriendTabOption
struct FGbxUISHiFTFriendTabOption
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIRosterPanelAttribute
struct FGbxUIRosterPanelAttribute
{
public:
	class FString                                Ident;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUIRosterPanelClass
struct FGbxUIRosterPanelClass
{
public:
	class FString                                ClassIdent;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ClassName;                                         // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FString                                SkillPointsValue;                                  // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x108 (0x108 - 0x0)
// ScriptStruct OakGame.GbxUIRosterPanel
struct FGbxUIRosterPanel
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                ImagePath;                                         // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  MissionName;                                       // 0x28(0x18)(NativeAccessSpecifierPublic)
	class FString                                FriendsText;                                       // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  StatusText;                                        // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FString                                StatusIdent;                                       // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUnknown;                                         // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Visible;                                           // 0x79(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7267[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUIRosterPanelAttribute>    Attributes;                                        // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIRosterPanelClass                PrimaryClass;                                      // 0x90(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIRosterPanelClass                SecondaryClass;                                    // 0xC8(0x38)(NativeAccessSpecifierPublic)
	uint8                                        Pad_7268[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x800 (0x868 - 0x68)
// ScriptStruct OakGame.OakWidgetData_Roster
struct FOakWidgetData_Roster : public FOakWidgetData_AURAMenu
{
public:
	struct FGbxUIGridCell                        MyInfo;                                            // 0x68(0x150)(NativeAccessSpecifierPublic)
	bool                                         DisplayStatusText;                                 // 0x1B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFriendAccept;                                    // 0x1B9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7269[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FriendRequestMessage;                              // 0x1C0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ShiftInviteText;                                   // 0x1D8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ShiftFindText;                                     // 0x1F0(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsShiftFriends;                                    // 0x208(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_726A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SearchText;                                        // 0x210(0x18)(NativeAccessSpecifierPublic)
	class FText                                  FriendsOnlineText;                                 // 0x228(0x18)(NativeAccessSpecifierPublic)
	int32                                        TabIndex;                                          // 0x240(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_726B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUISHiFTFriendTabOption>    TabOptions;                                        // 0x248(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOakWidgetData_SocialOffline          SocialOffline;                                     // 0x258(0xF0)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIGridCell>                RosterCells;                                       // 0x348(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  WidgetTitle;                                       // 0x358(0x18)(NativeAccessSpecifierPublic)
	class FText                                  NumberOfOnlineFirends;                             // 0x370(0x18)(NativeAccessSpecifierPublic)
	int8                                         SelectedCellIndex;                                 // 0x388(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_726C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxPages;                                          // 0x38C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNoPages;                                        // 0x390(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_726D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxAmount;                                         // 0x394(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxUIRosterDropdownEntry>     DropdownEntries;                                   // 0x398(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIRosterPanel                     CurrentPlayerPanelInfo;                            // 0x3A8(0x108)(NativeAccessSpecifierPublic)
	struct FGbxUIRosterPanel                     FriendPlayerPanelInfo;                             // 0x4B0(0x108)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               DropdownStatusButton;                              // 0x5B8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ViewClassButton;                                   // 0x600(0x48)(NativeAccessSpecifierPublic)
	class FText                                  SkillPointsText;                                   // 0x648(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PageText;                                          // 0x660(0x18)(NativeAccessSpecifierPublic)
	class FText                                  AttributesText;                                    // 0x678(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               NextPage;                                          // 0x690(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevPage;                                          // 0x6D8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SortButton;                                        // 0x720(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               EditStatusButton;                                  // 0x768(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PlayerStatusButton;                                // 0x7B0(0x48)(NativeAccessSpecifierPublic)
	int8                                         ItemsPerpageFullScreen;                            // 0x7F8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         ItemsPerpageSplitScreenH;                          // 0x7F9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         ItemsPerpage2PlayerV;                              // 0x7FA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         ItemsPerpageSplit3or4;                             // 0x7FB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         SelectedIndex;                                     // 0x7FC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_726E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LookingForHelpText;                                // 0x800(0x18)(NativeAccessSpecifierPublic)
	uint8                                        Pad_726F[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUIPlayerOption
struct FGbxUIPlayerOption
{
public:
	class FText                                  OptionName;                                        // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                OptionIcon;                                        // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct OakGame.GbxUIPlayerCard
struct FGbxUIPlayerCard
{
public:
	class FText                                  PlayerName;                                        // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  OnlineStatus;                                      // 0x18(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIPlayerHunterCard                VaultHunterCard;                                   // 0x30(0x80)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUIPlayerOption>            PlayerOptions;                                     // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x1A0 (0x1E8 - 0x48)
// ScriptStruct OakGame.OakWidgetData_ScreenCalibration
struct FOakWidgetData_ScreenCalibration : public FGbxUIWidgetDataBase
{
public:
	float                                        ScreenSize;                                        // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7270[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ScreenTitle;                                       // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ScreenExplanation;                                 // 0x68(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ButtonInc;                                         // 0x80(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ButtonDec;                                         // 0xC8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ButtonAccept;                                      // 0x110(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ButtonDefault;                                     // 0x158(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ButtonCancel;                                      // 0x1A0(0x48)(NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct OakGame.GbxUISDUItemCard
struct FGbxUISDUItemCard
{
public:
	class FString                                Rarity;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SubTitle;                                          // 0x28(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x40(0x18)(NativeAccessSpecifierPublic)
	class FString                                Icon;                                              // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MonetaryType;                                      // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Price;                                             // 0x78(0x18)(NativeAccessSpecifierPublic)
	bool                                         Foil;                                              // 0x90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisible;                                         // 0x91(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7271[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x948 (0x990 - 0x48)
// ScriptStruct OakGame.OakWidgetData_SDUVendor
struct FOakWidgetData_SDUVendor : public FGbxUIWidgetDataBase
{
public:
	struct FOakWidgetData_PlayerWidget           PlayerWidget;                                      // 0x48(0x8B0)(NativeAccessSpecifierPublic)
	struct FGbxUISDUItemCard                     ItemCard;                                          // 0x8F8(0x98)(NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.GbxUIRewardHistory
struct FGbxUIRewardHistory
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Date;                                              // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x30(0x18)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GbxUISHiFTTabOption
struct FGbxUISHiFTTabOption
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIProfileInfo
struct FGbxUIProfileInfo
{
public:
	class FString                                DisplayName;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ShiftID;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x748 (0x7B0 - 0x68)
// ScriptStruct OakGame.OakWidgetData_SHiFTMenu
struct FOakWidgetData_SHiFTMenu : public FOakWidgetData_AURAMenu
{
public:
	TArray<struct FGbxUIRewardHistory>           Rewards;                                           // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUISHiFTTabOption>          TabOptions;                                        // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOakWidgetData_SocialOffline          SocialOffline;                                     // 0x88(0xF0)(NativeAccessSpecifierPublic)
	struct FGbxUIProfileInfo                     Profile;                                           // 0x178(0x20)(NativeAccessSpecifierPublic)
	class FText                                  ShiftText;                                         // 0x198(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ShiftCodeValue;                                    // 0x1B0(0x18)(NativeAccessSpecifierPublic)
	class FString                                RedeemCodeValue;                                   // 0x1C8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TimerValue;                                        // 0x1D8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SupportAccountOptionsURL;                          // 0x1F0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SupportAdditionalQuestionsURL;                     // 0x208(0x18)(NativeAccessSpecifierPublic)
	class FString                                RewardImagePath;                                   // 0x220(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  RewardHistoryText;                                 // 0x230(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SHiFTCodeText;                                     // 0x248(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SupportText;                                       // 0x260(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CodeValidTimerText;                                // 0x278(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LinkAccountText;                                   // 0x290(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LinkAccountInfoText;                               // 0x2A8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  RefreshText;                                       // 0x2C0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ProfileText;                                       // 0x2D8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  StepText;                                          // 0x2F0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Step1LabelText;                                    // 0x308(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Step2LabelText;                                    // 0x320(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Step0Text;                                         // 0x338(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Step1Text;                                         // 0x350(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Step2Text;                                         // 0x368(0x18)(NativeAccessSpecifierPublic)
	class FText                                  GetRewardedText;                                   // 0x380(0x18)(NativeAccessSpecifierPublic)
	class FText                                  GbxSoftwareSupportText;                            // 0x398(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SupportInfoVisitingText;                           // 0x3B0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SupportInfoQuestionsText;                          // 0x3C8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SHiFTCodeInfoText;                                 // 0x3E0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  EnterCodeText;                                     // 0x3F8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  RedeemText;                                        // 0x410(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PersonalInfoText;                                  // 0x428(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SHiFTIdText;                                       // 0x440(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CodeRedemptionText;                                // 0x458(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CodeRedeemErrorText;                               // 0x470(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CodeRedemptionInfoText;                            // 0x488(0x18)(NativeAccessSpecifierPublic)
	class FText                                  EmailText;                                         // 0x4A0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  EmailInstText;                                     // 0x4B8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  FirstNameText;                                     // 0x4D0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LastNameText;                                      // 0x4E8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  CountryText;                                       // 0x500(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DisplayNameText;                                   // 0x518(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DisplayNameInfoText;                               // 0x530(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DisplayNameInstText;                               // 0x548(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SHiFTIdInfoText;                                   // 0x560(0x18)(NativeAccessSpecifierPublic)
	class FText                                  WelcomeBackSHiFTText;                              // 0x578(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TextNameErrorLength;                               // 0x590(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TextNameErrorContainChar;                          // 0x5A8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TextNameErrorStartLetter;                          // 0x5C0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TextNameErrorNoGbx;                                // 0x5D8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TextNameErrorSpecialChar;                          // 0x5F0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ConfirmText;                                       // 0x608(0x18)(NativeAccessSpecifierPublic)
	class FText                                  UpdateText;                                        // 0x620(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RefreshButton;                                     // 0x638(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               UpdateButton;                                      // 0x680(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               RedeemButton;                                      // 0x6C8(0x48)(NativeAccessSpecifierPublic)
	int32                                        TabIndex;                                          // 0x710(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7272[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIActionButtonEntry               NextView;                                          // 0x718(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PrevView;                                          // 0x760(0x48)(NativeAccessSpecifierPublic)
	bool                                         HasAccount;                                        // 0x7A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7273[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUISpellObject
struct FGbxUISpellObject
{
public:
	class FString                                ItemImage;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Countdown;                                         // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCountdown;                                       // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FullStack;                                         // 0x12(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CantUse;                                           // 0x13(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReady;                                           // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAction;                                          // 0x15(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Cooldown;                                          // 0x16(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStackVisible;                                    // 0x17(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisible;                                         // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        StackCount;                                        // 0x19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        StackProgress;                                     // 0x1A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SkillDurationActive;                               // 0x1B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SkillDurationProgress;                             // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7274[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GbxUIActionDurationObject
struct FGbxUIActionDurationObject
{
public:
	class FString                                ItemImage;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Progress;                                          // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisible;                                         // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7275[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x80 - 0x48)
// ScriptStruct OakGame.OakWidgetData_SkillAndSpells
struct FOakWidgetData_SkillAndSpells : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUISpellObject>             Spells;                                            // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUIActionDurationObject            ActionDuration;                                    // 0x58(0x18)(NativeAccessSpecifierPublic)
	struct FVector2D                             PlayerCrosshairLocation;                           // 0x70(0x8)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NotifyTravelCount;                                 // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7276[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenAbilityAttribute
struct FGbxUISkillScreenAbilityAttribute
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Value;                                             // 0x18(0x18)(NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenAbility
struct FGbxUISkillScreenAbility
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Message;                                           // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x38(0x18)(NativeAccessSpecifierPublic)
	uint8                                        CurrentValue;                                      // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MaxValue;                                          // 0x51(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BonusPoints;                                       // 0x52(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LevelUnlockedAt;                                   // 0x53(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLocked;                                          // 0x54(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0x55(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEmpty;                                           // 0x56(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InUse;                                             // 0x57(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisible;                                         // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEquipped;                                        // 0x59(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasSkillInvestment;                                // 0x5A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7277[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGbxUISkillScreenAbilityAttribute> Attributes;                                        // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                Asset;                                             // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x80(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPathSelected;                                 // 0x90(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SkillIconBackgroundPath;                           // 0xA0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x120 (0x120 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenTree
struct FGbxUISkillScreenTree
{
public:
	TArray<struct FGbxUISkillScreenAbility>      Abilities;                                         // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUISkillScreenAbility>      ActionSkills;                                      // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUISkillScreenAbility              ClassFeat;                                         // 0x20(0xB0)(NativeAccessSpecifierPublic)
	class FText                                  ClassName;                                         // 0xD0(0x18)(NativeAccessSpecifierPublic)
	class FString                                ClassIconAssetPath;                                // 0xE8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ClassNameSkills;                                   // 0xF8(0x18)(NativeAccessSpecifierPublic)
	int32                                        Progress;                                          // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       PointsInvested;                                    // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLocked;                                          // 0x118(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSlot;                                            // 0x119(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7278[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenDescriptionStat
struct FGbxUISkillScreenDescriptionStat
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenInfoPanel
struct FGbxUISkillScreenInfoPanel
{
public:
	class FString                                Icon;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowIcon;                                          // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7279[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SubTitle;                                          // 0x30(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsAvailable;                                       // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_727A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DescriptionNote;                                   // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x68(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUISkillScreenDescriptionStat> CurrentEffects;                                    // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUISkillScreenDescriptionStat> NextRanks;                                         // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenVaultItem
struct FGbxUISkillScreenVaultItem
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Value;                                             // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FString                                Asset;                                             // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AssetPath;                                         // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PanelTitle;                                        // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SubTitle;                                          // 0x68(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x80(0x18)(NativeAccessSpecifierPublic)
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenHeroAttribute
struct FGbxUISkillScreenHeroAttribute
{
public:
	class FString                                StyleIdent;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Class;                                             // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x38(0x18)(NativeAccessSpecifierPublic)
	class FText                                  AbbrDescription;                                   // 0x50(0x18)(NativeAccessSpecifierPublic)
	class FText                                  FullDescription;                                   // 0x68(0x18)(NativeAccessSpecifierPublic)
	class FText                                  PerkBonus;                                         // 0x80(0x18)(NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasPerk;                                           // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelected;                                        // 0xA9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InvestedPoints;                                    // 0xAA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayPanelTitle;                                 // 0xAB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayDescription;                                // 0xAC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_727B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MaxValue;                                          // 0xB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LeftArrowEnabled;                                  // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RightArrowEnabled;                                 // 0xC1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_727C[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenStatsPanel
struct FGbxUISkillScreenStatsPanel
{
public:
	class FText                                  PanelTitle;                                        // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SubTitle;                                          // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x30(0x18)(NativeAccessSpecifierPublic)
};

// 0x128 (0x128 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenHero
struct FGbxUISkillScreenHero
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                IconAssetPath;                                     // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ClassComboName;                                    // 0x28(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LevelTitle;                                        // 0x40(0x18)(NativeAccessSpecifierPublic)
	int32                                        LevelValue;                                        // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_727D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  VaultText;                                         // 0x60(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUISkillScreenVaultItem>    VaultItems;                                        // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUISkillScreenVaultItem>    StatsInfo;                                         // 0x88(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUISkillScreenStatsPanel           StatsPanel;                                        // 0x98(0x48)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUISkillScreenHeroAttribute> Attributes;                                        // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  AttributePointsAvailableTitle;                     // 0xF0(0x18)(NativeAccessSpecifierPublic)
	int32                                        AttributePointsAvailableValue;                     // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_727E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  AttributeDescription;                              // 0x110(0x18)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenTutorial
struct FGbxUISkillScreenTutorial
{
public:
	class FString                                Title;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Description;                                       // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.GbxUISkillScreenHeroAttributeInfoPanel
struct FGbxUISkillScreenHeroAttributeInfoPanel
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUISkillScreenDescriptionStat> Current;                                           // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUISkillScreenDescriptionStat> Next;                                              // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x878 (0x8C0 - 0x48)
// ScriptStruct OakGame.OakUIData_SkillScreen
struct FOakUIData_SkillScreen : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUISkillScreenTree>         SKILLTREES;                                        // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUISkillScreenAbility              CurrentAbilitySelected;                            // 0x58(0xB0)(NativeAccessSpecifierPublic)
	struct FGbxUISkillScreenHero                 HeroStats;                                         // 0x108(0x128)(NativeAccessSpecifierPublic)
	class FText                                  HeroPointsTitle;                                   // 0x230(0x18)(NativeAccessSpecifierPublic)
	int32                                        SkillPointsAvailable;                              // 0x248(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_727F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SkillPointsAvailableTitle;                         // 0x250(0x18)(NativeAccessSpecifierPublic)
	class FText                                  UnlockSecondaryTreeText;                           // 0x268(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SlotSecondaryClassTitle;                           // 0x280(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ChooseCharacterClassText;                          // 0x298(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ClassFeatText;                                     // 0x2B0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  InUseText;                                         // 0x2C8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  ActionSkillsText;                                  // 0x2E0(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUISkillScreenTutorial             Tutorial;                                          // 0x2F8(0x20)(NativeAccessSpecifierPublic)
	struct FGbxUIPlayerSelectionEntry            PlayerClass;                                       // 0x318(0x40)(NativeAccessSpecifierPublic)
	TArray<struct FGbxUICharacterClass>          CharacterClasses;                                  // 0x358(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxUICharacterClass                  CharacterClassSelected;                            // 0x368(0x160)(NativeAccessSpecifierPublic)
	int32                                        CharacterClassSelectedIdx;                         // 0x4C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VaultPanelIdx;                                     // 0x4CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MagicFindPanelIdx;                                 // 0x4D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         VaultSelected;                                     // 0x4D4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CurrentSecondaryCharacterClassIdx;                 // 0x4D5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayQuarterSplit;                               // 0x4D6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayPrimaryTree;                                // 0x4D7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplaySecondaryTree;                              // 0x4D8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplaySkillDetails;                               // 0x4D9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayHeroDetails;                                // 0x4DA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SwapHeroStats;                                     // 0x4DB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayMagicFind;                                  // 0x4DC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayTutorial;                                   // 0x4DD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayTutorialArrowTopLeft;                       // 0x4DE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayTutorialArrowTopRight;                      // 0x4DF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayTutorialArrowBottomLeft;                    // 0x4E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayTutorialArrowBottomRight;                   // 0x4E1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFirstVaultItem;                                  // 0x4E2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7280[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGbxUIActionButtonEntry               ToggleClassPanelButtonLeft;                        // 0x4E8(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ToggleClassPanelButtonRight;                       // 0x530(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ViewHeroStatsActionButton;                         // 0x578(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SwapHeroStatsActionButton;                         // 0x5C0(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SwitchSecondaryClassActionButton;                  // 0x608(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SlotSecondaryClassActionButton;                    // 0x650(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               MagicFindActionButton;                             // 0x698(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ChooseClassConfirmActionButton;                    // 0x6E0(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ChooseClassCancelActionButton;                     // 0x728(0x48)(NativeAccessSpecifierPublic)
	class FText                                  ButtonLabel;                                       // 0x770(0x18)(NativeAccessSpecifierPublic)
	bool                                         IsSecondaryTreeReadyToUnlock;                      // 0x788(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUnlockAvailable;                                 // 0x789(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasInvestedHeroStatsPoints;                        // 0x78A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisplayCharacterSelector;                          // 0x78B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WasLongPressHeroPointsConfirmFinished;             // 0x78C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7281[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TutorialType;                                      // 0x790(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUISkillScreenInfoPanel            InfoPanel;                                         // 0x7A0(0xA0)(NativeAccessSpecifierPublic)
	struct FGbxUISkillScreenHeroAttributeInfoPanel HeroAttributeInfoPanel;                            // 0x840(0x50)(NativeAccessSpecifierPublic)
	class FText                                  CharacterClassTitle;                               // 0x890(0x18)(NativeAccessSpecifierPublic)
	int32                                        CharacterClassTreeIdx;                             // 0x8A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HeroAttributePointFocused;                         // 0x8AC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkillTreeToUpdateIdx;                              // 0x8B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AbilityToUpdateIdx;                                // 0x8B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActionSkillToUpdateIdx;                            // 0x8B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7282[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x90 - 0x88)
// ScriptStruct OakGame.OakUIData_StartMenu
struct FOakUIData_StartMenu : public FGbxUIData_ListMenu
{
public:
	int32                                        ActiveIndex;                                       // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7283[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x0 (0x48 - 0x48)
// ScriptStruct OakGame.OakWidgetData_StatusMenu
struct FOakWidgetData_StatusMenu : public FGbxUIWidgetDataBase
{
public:
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.GbxUISubtitleEntry
struct FGbxUISubtitleEntry
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(NativeAccessSpecifierPublic)
	float                                        TextOpacity;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TextScale;                                         // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisplayDuration;                                   // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7284[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        SubtitleID;                                        // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7285[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x78 - 0x48)
// ScriptStruct OakGame.OakUIData_Subtitles
struct FOakUIData_Subtitles : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUISubtitleEntry>           Subtitles;                                         // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxUISubtitleEntry>           CCEntries;                                         // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         HideSubtitles;                                     // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowSubtitle;                                      // 0x69(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowCC;                                            // 0x6A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7286[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TextScale;                                         // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasNewSubtitle;                                    // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCinematic;                                       // 0x71(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7287[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.GbxUITargetedNamePlateProgressEntry
struct FGbxUITargetedNamePlateProgressEntry
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7288[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Class;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.GbxUIChatEntry
struct FGbxUIChatEntry
{
public:
	class FString                                Text;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Channel;                                           // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7289[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x80 - 0x48)
// ScriptStruct OakGame.OakUIData_TextChat
struct FOakUIData_TextChat : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FGbxUIChatEntry>               TextEntries;                                       // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  OpenTextChatInstruction;                           // 0x58(0x18)(NativeAccessSpecifierPublic)
	bool                                         DisplayOpenTextChatInstruction;                    // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanOpenTextChat;                                   // 0x71(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CloseOnSubmit;                                     // 0x72(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_728A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NotificationDisplayDuration;                       // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInput;                                           // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_728B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x50 - 0x48)
// ScriptStruct OakGame.OakWidgetData_TextChatInput
struct FOakWidgetData_TextChatInput : public FGbxUIWidgetDataBase
{
public:
	bool                                         CloseOnSubmit;                                     // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_728C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0xD8 - 0x48)
// ScriptStruct OakGame.OakUIData_TutorialFullScreen
struct FOakUIData_TutorialFullScreen : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ExitButton;                                        // 0x60(0x48)(NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0xA8(0x18)(NativeAccessSpecifierPublic)
	class FString                                Image;                                             // 0xC0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpsell;                                           // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_728D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD0 (0x118 - 0x48)
// ScriptStruct OakGame.OakWidgetData_TutorialSequence
struct FOakWidgetData_TutorialSequence : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Title;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Content;                                           // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FString                                Type;                                              // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               SkipButton;                                        // 0x88(0x48)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               ContinueButton;                                    // 0xD0(0x48)(NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.OakUITutorialItem
struct FOakUITutorialItem
{
public:
	class FName                                  Ident;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x8(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x20(0x18)(NativeAccessSpecifierPublic)
	class FName                                  PositionClass;                                     // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakUITutorialSequenceEntry
struct FOakUITutorialSequenceEntry
{
public:
	TArray<struct FOakUITutorialItem>            TutorialItems;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x418 (0x460 - 0x48)
// ScriptStruct OakGame.OakWidgetData_ItemOfTheDay
struct FOakWidgetData_ItemOfTheDay : public FGbxUIWidgetDataBase
{
public:
	class FText                                  Timer;                                             // 0x48(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x60(0x18)(NativeAccessSpecifierPublic)
	class FText                                  SoldOutText;                                       // 0x78(0x18)(NativeAccessSpecifierPublic)
	class FString                                WeaponAssetPath;                                   // 0x90(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ManufacturerAssetPath;                             // 0xA0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BulletAssetPath;                                   // 0xB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Rarity;                                            // 0xC0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  RarityText;                                        // 0xD0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Level;                                             // 0xE8(0x18)(NativeAccessSpecifierPublic)
	float                                        PosX;                                              // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PosY;                                              // 0x104(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ItemType;                                          // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ElementalDamage;                                   // 0x118(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Visible : 1;                                       // Mask: 0x1, PropSize: 0x10x128(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SoldOut : 1;                                       // Mask: 0x2, PropSize: 0x10x128(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_728E[0x337];                                   // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x2FC8 (0x3010 - 0x48)
// ScriptStruct OakGame.OakWidgetData_VendingMachine
struct FOakWidgetData_VendingMachine : public FGbxUIWidgetDataBase
{
public:
	struct FOakWidgetData_ItemOfTheDay           ItemOfTheDayData;                                  // 0x48(0x460)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               ItemCardData;                                      // 0x4A8(0xE80)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_ItemCard               CompareItemCardData;                               // 0x1328(0xE80)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_PlayerWidget           PlayerWidget;                                      // 0x21A8(0x8B0)(NativeAccessSpecifierPublic)
	class FName                                  DisplayedContainerIdent;                           // 0x2A58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxUIInternalNavBar                  NavBar;                                            // 0x2A60(0xA0)(NativeAccessSpecifierPublic)
	struct FOakWidgetData_InventoryContainer     BackpackData;                                      // 0x2B00(0x500)(NativeAccessSpecifierPublic)
	int32                                        CurrentState;                                      // 0x3000(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrevState;                                         // 0x3004(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsComparisonMode : 1;                              // Mask: 0x1, PropSize: 0x10x3008(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CompareFocusShelf : 1;                             // Mask: 0x2, PropSize: 0x10x3008(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CompareFocusBackpack : 1;                          // Mask: 0x4, PropSize: 0x10x3008(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ShouldShowBackpack : 1;                            // Mask: 0x8, PropSize: 0x10x3008(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsBuyBackEnable : 1;                               // Mask: 0x10, PropSize: 0x10x3008(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_728F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0xB8 - 0x48)
// ScriptStruct OakGame.OakUIData_VendingMachineExAd
struct FOakUIData_VendingMachineExAd : public FGbxUIWidgetDataBase
{
public:
	class FString                                ItemCountDown;                                     // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VendingMachineItemOfTheDayIcon;                    // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VendingMachineItemOfTheDayTitle;                   // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VendingMachineItemOfTheDayType;                    // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VendingMachineItemOfTheDayScore;                   // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VendingMachineItemOfTheDayBulletType;              // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VendingMachineItemOfTheDayBrand;                   // 0xA8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0xC8 - 0x48)
// ScriptStruct OakGame.OakUIData_WorldIconEntry
struct FOakUIData_WorldIconEntry : public FGbxUIWidgetDataBase
{
public:
	uint8                                        Pad_7290[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PosX;                                              // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PosY;                                              // 0x84(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Image;                                             // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SecondaryImage;                                    // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowSecondaryImage;                                // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7291[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Text;                                              // 0xB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImgOpacity;                                        // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondaryImgOpacity;                               // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x58 - 0x48)
// ScriptStruct OakGame.OakUIData_WorldIconSet
struct FOakUIData_WorldIconSet : public FGbxUIWidgetDataBase
{
public:
	TArray<struct FOakUIData_WorldIconEntry>     WorldIcons;                                        // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x38 - 0x30)
// ScriptStruct OakGame.GbxUIXpBar
struct FGbxUIXpBar : public FGbxUIProgressbarWDeltaEntry
{
public:
	bool                                         IsDim;                                             // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsActive;                                          // 0x31(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFull;                                            // 0x32(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7292[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Level;                                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.GbxUIXpMayhem
struct FGbxUIXpMayhem
{
public:
	bool                                         Visible;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7293[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Level;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.GbxUIXpExperience
struct FGbxUIXpExperience
{
public:
	bool                                         Visible;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7294[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Amount;                                            // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x100 (0x148 - 0x48)
// ScriptStruct OakGame.OakUIData_XpBar
struct FOakUIData_XpBar : public FGbxUIWidgetDataBase
{
public:
	struct FGbxUIXpBar                           ExpBar;                                            // 0x48(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIXpBar                           GuardianRankExpBar;                                // 0x80(0x38)(NativeAccessSpecifierPublic)
	struct FGbxUIActionButtonEntry               PromptAction;                                      // 0xB8(0x48)(NativeAccessSpecifierPublic)
	enum class EXPPromptActionType               PromptActionType;                                  // 0x100(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7295[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PlayerLevel;                                       // 0x108(0x18)(NativeAccessSpecifierPublic)
	struct FGbxUIXpMayhem                        Mayhem;                                            // 0x120(0x8)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxUIXpExperience                    Experience;                                        // 0x128(0x20)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.TouchPickupEvaluationResult
struct FTouchPickupEvaluationResult
{
public:
	TArray<class AOakInventoryItemPickup*>       Pickups;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PickupEvaluationResult
struct FPickupEvaluationResult
{
public:
	class AOakInventoryItemPickup*               Pickup;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7296[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.HornSequence
struct FHornSequence
{
public:
	TArray<struct FHornSequenceEntry>            HornSequence;                                      // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_7297[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct OakGame.FakeGear
struct FFakeGear
{
public:
	struct FFloatCurve                           RPMCurve;                                          // 0x0(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             SpeedMinMax;                                       // 0x90(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct OakGame.NavPainterLayerEntry
struct FNavPainterLayerEntry
{
public:
	uint8                                        Pad_7298[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.SkinParameterData
struct FSkinParameterData
{
public:
	TArray<struct FMaterialParameterData>        Color1;                                            // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParameterData>        Color2;                                            // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParameterData>        Color3;                                            // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.StuckTeleport
struct FStuckTeleport
{
public:
	bool                                         bEnableStuckTeleport;                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7299[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForwardStuckValue;                                 // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CantMoveValuePerSec;                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StuckTeleportTrigger;                              // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StuckDecay;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDebug;                                        // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_729A[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct OakGame.OakVehicleNavCorrecter
struct FOakVehicleNavCorrecter
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGbxNavWorld*                          GbxNavWorld;                                       // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOakNavComponent*                      OakNavComp;                                        // 0x10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOakVehicle*                           OakVehicle;                                        // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FNavAgentProperties                   NavAgentProps;                                     // 0x20(0x30)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_729B[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.VehicleUnlockedSaveGameData
struct FVehicleUnlockedSaveGameData
{
public:
	class FString                                AssetPath;                                         // 0x0(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJustUnlocked;                                     // 0x10(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_729C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.DummyProjectileInfo
struct FDummyProjectileInfo
{
public:
	TSubclassOf<class AActor>                    ProjectileClass;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Socket;                                            // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                TransitInAction;                                   // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                TransitOutAction;                                  // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           TransitInSoundEvent;                               // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ProjectileActor;                                   // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.WeaponAudioBodyLoopPlaybackInfo
struct FWeaponAudioBodyLoopPlaybackInfo
{
public:
	uint8                                        Pad_729D[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.WeaponAudioBodyLoop
struct FWeaponAudioBodyLoop
{
public:
	class FName                                  PlaybackSocket;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StartLoopEvent;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopLoopEvent;                                     // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponAudioBodyLoopType          LoopType;                                          // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ComponentSize;                                     // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentTag;                                      // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.WeaponShellCasingImpact
struct FWeaponShellCasingImpact
{
public:
	uint8                                        Pad_729E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.WeaponShellCasingAudioParameters
struct FWeaponShellCasingAudioParameters
{
public:
	class UWwiseEvent*                           ShellCasingWwiseEvent;                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EjectDistance;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactDelay;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.WeaponAudioFailsafe
struct FWeaponAudioFailsafe
{
public:
	uint8                                        Pad_729F[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.WeaponConfigurationRtpc
struct FWeaponConfigurationRtpc
{
public:
	class UWwiseRtpc*                            RtpcParam;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PriorityAveragingSum;                              // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.WeaponConfigurationEvent
struct FWeaponConfigurationEvent
{
public:
	int32                                        Priority;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWwiseEvent*                           WwiseEvent;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.OakVehicleWeaponTriggerFeedbackDefinitionData
struct FOakVehicleWeaponTriggerFeedbackDefinitionData
{
public:
	class UWeaponTriggerFeedbackAsset*           Feedback;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WeaponAssetPath;                                   // 0x8(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A1[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.OakWeaponTriggerFeedbackDefinitionData
struct FOakWeaponTriggerFeedbackDefinitionData
{
public:
	class UWeaponTriggerFeedbackAsset*           Feedback;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WeaponClassPath;                                   // 0x8(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakWeaponPartType                PartType;                                          // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        PartTypeValue;                                     // 0x19(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A2[0x2E];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakWeaponNamingAttributePair
struct FOakWeaponNamingAttributePair
{
public:
	class FName                                  FirstAttributeName;                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondAttributeName;                               // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryNamePartData*                NamePart;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakWeaponNamingAttributeThresholdData
struct FOakWeaponNamingAttributeThresholdData
{
public:
	class FName                                  AttributeName;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstThreshold;                                    // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondThreshold;                                   // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakWeaponNameThresholdPairData
struct FOakWeaponNameThresholdPairData
{
public:
	float                                        Threshold;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_72A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryNamePartData*                NamePart;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakWeaponAttributeNamingData
struct FOakWeaponAttributeNamingData
{
public:
	class UGbxAttributeData*                     Attribute;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FOakWeaponNameThresholdPairData> NamingTiers;                                       // 0x8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.WindVectorField
struct FWindVectorField
{
public:
	struct FIntVector                            VectorFieldSize;                                   // 0x0(0xC)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                  Bounds;                                            // 0xC(0x1C)(Edit, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A4[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.RepWindDirection
struct FRepWindDirection
{
public:
	float                                        TargetYaw;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct OakGame.RepWindGust
struct FRepWindGust
{
public:
	int32                                        Seed;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OptionDescriptionAudioLanguageOption
struct FOptionDescriptionAudioLanguageOption
{
public:
	class FString                                CultureName;                                       // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.OptionDescriptionGamepadActions
struct FOptionDescriptionGamepadActions
{
public:
	class FName                                  ButtonBindingName;                                 // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAxis;                                           // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EOakUIOptionBindType              BindType;                                          // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AxisScaleVector;                                   // 0x10(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FKey                                  HardCodedKey;                                      // 0x20(0x18)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ActionDisplayName;                                 // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.OptionDescriptionGamepadBindingInfo
struct FOptionDescriptionGamepadBindingInfo
{
public:
	struct FKey                                  BoundKey;                                          // 0x0(0x18)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                  AlternateBoundKey;                                 // 0x18(0x18)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x498 (0x498 - 0x0)
// ScriptStruct OakGame.OptionDescriptionOptionTexts
struct FOptionDescriptionOptionTexts
{
public:
	class FText                                  Default;                                           // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  SystemLanguage;                                    // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ConfirmSettingsBody;                               // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EnableGamepadInputHeaderText;                      // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EnableGamepadInputBodyText;                        // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TODOHeaderText;                                    // 0x78(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  TODOBodyText;                                      // 0x90(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BenchmarkUnavailableTitle;                         // 0xA8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BenchmarkUnavailableMessage;                       // 0xC0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BenchmarkUnavailableMessage_Coop;                  // 0xD8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BenchmarkUnavailableMessage_PendingSettings;       // 0xF0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BenchmarkDataOutputPathTitle;                      // 0x108(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  BenchmarkDataOutputPathUnavailableMessage;         // 0x120(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NoDropDownChoicesHeaderText;                       // 0x138(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NoDropDownChoicesBodyText;                         // 0x150(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NoResults;                                         // 0x168(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  GraphicsBenchmarkDate_NA;                          // 0x180(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NoKeyBind;                                         // 0x198(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NoMonitorRemoteSession;                            // 0x1B0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  NoMonitorUnknown;                                  // 0x1C8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Automatic;                                         // 0x1E0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  OffText;                                           // 0x1F8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  OnText;                                            // 0x210(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RestoreDefaultsDialogTitle;                        // 0x228(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ResetTutorialsMessageText;                         // 0x240(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ResolutionHeader;                                  // 0x258(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  DialogChoice_Yes;                                  // 0x270(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  DialogChoice_No;                                   // 0x288(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ConfirmLeaveMenuSettingsBody;                      // 0x2A0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ConfirmLeaveMenuSettingsHeader;                    // 0x2B8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ConfirmLeaveMenuSettingsIgnoreSettings;            // 0x2D0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ConfirmLeaveMenuSettingsApply;                     // 0x2E8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CustomResolution;                                  // 0x300(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  KeyRebindBody;                                     // 0x318(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RebindBoxDescriptionDesktop;                       // 0x330(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RebindBoxDescriptionConsole;                       // 0x348(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CrossplayState_OptionItemName;                     // 0x360(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CrossplayState_OptionDescriptionTitle;             // 0x378(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CrossplayState_OptionDescriptionText;              // 0x390(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  FriendSync_OptionItemName;                         // 0x3A8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  FriendSync_OptionDescriptionTitle;                 // 0x3C0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  FriendSync_OptionDescriptionText;                  // 0x3D8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ControllerTitleTextXBox;                           // 0x3F0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ControllerTitleTextXBSX;                           // 0x408(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ControllerTitleTextPs4;                            // 0x420(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ControllerTitleTextPs5;                            // 0x438(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ControllerTitleTextSwitchPro;                      // 0x450(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ControllerTitleTextStadia;                         // 0x468(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ControllerTitleTextGeneric;                        // 0x480(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OptionDescriptionJoystickPreset
struct FOptionDescriptionJoystickPreset
{
public:
	enum class EJoystickScheme                   ButtonScheme;                                      // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetToDefault;                                   // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerRebindContext;                               // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.OptionDescriptionButtonPreset
struct FOptionDescriptionButtonPreset
{
public:
	enum class EWalkingButtonScheme              ButtonScheme;                                      // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetToDefault;                                   // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerRebindContext;                               // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerControllerRebindContext;                     // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OptionDescriptionDataUnbindMap
struct FOptionDescriptionDataUnbindMap
{
public:
	class FName                                  OptionSet;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          SetsToUnbind;                                      // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.OakUIOptionScreenTypeInfo
struct FOakUIOptionScreenTypeInfo
{
public:
	enum class EOakUIOptionScreenType            ScreenType;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ScreenName;                                        // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.OakUIOptionTabInfo
struct FOakUIOptionTabInfo
{
public:
	enum class EOakUIOptionTabType               TabType;                                           // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TabName;                                           // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
	class FString                                TabIcon;                                           // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x7C0 - 0x780)
// ScriptStruct OakGame.OutrunnerVehicleAnimInstanceProxy
struct FOutrunnerVehicleAnimInstanceProxy : public FOakVehicleAnimInstanceProxy
{
public:
	uint8                                        Pad_72AB[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OverworldEdgePoint
struct FOverworldEdgePoint
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Height;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.OverworldEncounterRequestData
struct FOverworldEncounterRequestData
{
public:
	class UDaffodilEncounterData*                EncounterData;                                     // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDaffodilEncounterRunner*              RequestingRunner;                                  // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72AC[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           OnReadyDynamicDelegate;                            // 0x38(0x10)(ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	class UDaffodilEncounter*                    Encounter;                                         // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADynamicRoomBase*                      AssignedBase;                                      // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OverworldEncounterRequest
struct FOverworldEncounterRequest
{
public:
	TWeakObjectPtr<class UOverworldEncounterLoader> Loader;                                            // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EncounterNumber;                                   // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActive;                                           // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72AD[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ConditionalExtraPreloadLocation
struct FConditionalExtraPreloadLocation
{
public:
	class UGbxCondition*                         Condition;                                         // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72AE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.OverworldTravelStationExpansionData
struct FOverworldTravelStationExpansionData
{
public:
	TSoftClassPtr<class ATravelStationObject>    TravelStationBlueprint;                            // 0x0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_72AF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TravelStationTransform;                            // 0x30(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class ULevelTravelStationData*               LevelTravelData;                                   // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_72B0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.PerPlayerCullable
struct FPerPlayerCullable
{
public:
	class AActor*                                CullableActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct OakGame.PetStencilData
struct FPetStencilData
{
public:
	struct FLinearColor                          OutlineColor;                                      // 0x0(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OutlineThickness;                                  // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x670 (0x670 - 0x0)
// ScriptStruct OakGame.PhotoModeState
struct FPhotoModeState
{
public:
	bool                                         bPhotoModeUIVisible;                               // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHUDVisible;                                       // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGamePausedState;                                  // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoFocusState;                                   // 0x3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72B1[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x10(0x600)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	float                                        Contrast;                                          // 0x610(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Dofintensity;                                      // 0x614(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FOV;                                               // 0x618(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFilmToneMapperState;                              // 0x61C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72B2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FilterIndex;                                       // 0x620(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Filterintensity;                                   // 0x624(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FocalDistance;                                     // 0x628(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FocalRegion;                                       // 0x62C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FringeIntensity;                                   // 0x630(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Gain;                                              // 0x634(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Gamma;                                             // 0x638(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrainIntensity;                                    // 0x63C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHidePlayerState;                                  // 0x640(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72B3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Quality;                                           // 0x644(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Saturation;                                        // 0x648(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Shoulder;                                          // 0x64C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Slope;                                             // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSuperSharpModeState;                              // 0x654(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Toe;                                               // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewRoll;                                          // 0x65C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Vignetteintensity;                                 // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Vignettefeathering;                                // 0x664(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Timeofday;                                         // 0x668(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPausable;                                         // 0x66C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideDamageNumbersState;                           // 0x66D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideFocusState;                               // 0x66E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMatchGameState;                                   // 0x66F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.PhotoModeOption
struct FPhotoModeOption
{
public:
	class FText                                  OptionName;                                        // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	enum class EPhotoModeOptionEffect            OptionEffect;                                      // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSlider;                                         // 0x19(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72B5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SliderDisplayMin;                                  // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliderDisplayMax;                                  // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliderOutputMin;                                   // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SliderOutputMax;                                   // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSliderDisplayAsInteger;                           // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72B6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SliderStepping;                                    // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SliderRepeatsToAccelerate;                         // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SliderMaxIncreases;                                // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SliderFastestSteps;                                // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          SpinnerOptions;                                    // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.PhotoModeOptionSet
struct FPhotoModeOptionSet
{
public:
	class FString                                OptionSetName;                                     // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPhotoModeOption>              Options;                                           // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ZoneMapPOIMeshListEntry
struct FZoneMapPOIMeshListEntry
{
public:
	class UStaticMesh*                           ZoneMapPOIMesh;                                    // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UZoneMapData*                          ZoneMapForPOIMesh;                                 // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.PlayerBannerPlayerData
struct FPlayerBannerPlayerData
{
public:
	TArray<class APlayerBanner*>                 PlayerBanners;                                     // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_72B7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct OakGame.OakPlayerCharacterSlotItem
struct FOakPlayerCharacterSlotItem : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_72B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPlayerCharacterComponentSlotData*     SlotData;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerCharacterComponentAugmentData*  AugmentData;                                       // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x18 (0xC8 - 0xB0)
// ScriptStruct OakGame.OakPlayerCharacterSlotItemList
struct FOakPlayerCharacterSlotItemList : public FFastArraySerializer
{
public:
	class UPlayerCharacterComponent*             Owner;                                             // 0xB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOakPlayerCharacterSlotItem>   Items;                                             // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.PlayerIdentityWidgetInfo
struct FPlayerIdentityWidgetInfo
{
public:
	uint8                                        Pad_72B9[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.PlayerMeleeOpenerData
struct FPlayerMeleeOpenerData
{
public:
	class UPlayerMeleeData*                      OpenerMeleeData;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         SelectCondition;                                   // 0x10(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.PlayerMeleeChainNode
struct FPlayerMeleeChainNode
{
public:
	class UPlayerMeleeData*                      MeleeData;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         ChainCondition;                                    // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChainWindowTime;                                   // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72BB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.MeleeReverseImpactEntry
struct FMeleeReverseImpactEntry
{
public:
	float                                        TargetMass;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactForce;                                       // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.PlayerPrestigeNode
struct FPlayerPrestigeNode
{
public:
	TSubclassOf<class UOakPlayerAbility>         AbilityClass;                                      // 0x0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPoints;                                         // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72BC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                UnlockedByIndex;                                   // 0x10(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_72BD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PlayerPrestigeTree
struct FPlayerPrestigeTree
{
public:
	TArray<struct FPlayerPrestigeNode>           PrestigeNodes;                                     // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.PlayerPrestigeNodeData
struct FPlayerPrestigeNodeData
{
public:
	TSubclassOf<class UOakPlayerAbility>         AbilityClass;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPoints;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                UnlockedByIndex;                                   // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UUIStatData*                           DeltaChange_UIStat;                                // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             PrestigeNodeIconTexture;                           // 0x28(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayOppositeSign;                              // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72BF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.PlayerBuyBackableInventory
struct FPlayerBuyBackableInventory
{
public:
	class AActor*                                InventoryActor;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct OakGame.LobbyPlayerStandInLoadOutInfo
struct FLobbyPlayerStandInLoadOutInfo
{
public:
	uint8                                        Pad_72C0[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UGbxCustomizationData*>         Customizations;                                    // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C1[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct OakGame.StandInAuxiliaryState
struct FStandInAuxiliaryState
{
public:
	class AStandInAuxiliaryActor*                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrontendStandInAuxiliaryActorData    TemplateData;                                      // 0x8(0x58)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.PlayerStandInInitData
struct FPlayerStandInInitData
{
public:
	class UPlayerClassIdentifier*                PlayerClass;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  OwnerPlayerController;                             // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C3[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.PlayerStandInBannerData
struct FPlayerStandInBannerData
{
public:
	TSubclassOf<class APlayerBanner>             BannerClass;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RelativeTransform;                                 // 0x10(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.ExtraStandInAnimationMeshData
struct FExtraStandInAnimationMeshData
{
public:
	class FName                                  ComponentName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>             AnimBlueprint;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAnimSet*                           AnimSet;                                           // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.FrontendStandInSpecialAnimationData
struct FFrontendStandInSpecialAnimationData
{
public:
	TSubclassOf<class UGbxAction>                Animation;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                AuxiliaryAnimation;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialDelay;                                      // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct OakGame.PlayerStandIn_Augment
struct FPlayerStandIn_Augment
{
public:
	TSoftObjectPtr<class UGbxDataAsset>          Augment;                                           // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrontendStandInAuxiliaryActorData    ActorData;                                         // 0x28(0x58)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bOverrideDefault;                                  // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.PlayerStandIn_AbilityBranch
struct FPlayerStandIn_AbilityBranch
{
public:
	class UOakPlayerAbilityTreeBranchData*       AbilityTreeData;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrontendStandInAuxiliaryActorData    ActorData;                                         // 0x8(0x58)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bOverrideDefault;                                  // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct OakGame.PlayerStandIn_ActionAbility
struct FPlayerStandIn_ActionAbility
{
public:
	TSoftClassPtr<class UOakActionAbility>       ActionAbilityClass;                                // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrontendStandInAuxiliaryActorData    ActorData;                                         // 0x28(0x58)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bOverrideDefault;                                  // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72C8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGbxAction>                AssociatedAction;                                  // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.ProjectedMeshResults
struct FProjectedMeshResults
{
public:
	uint8                                        Pad_72C9[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.ProjectedMeshOptions
struct FProjectedMeshOptions
{
public:
	enum class EProjectedMeshShape               Shape;                                             // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72CA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Size;                                              // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Scale2D;                                           // 0x8(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Complexity;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRings;                                          // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFlipNormals;                                      // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGenerateUVs;                                      // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72CB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StartTraceDistance;                                // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndTraceDistance;                                  // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushAwayDistance;                                  // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreActor;                                      // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72CC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        AdditionalIgnoredActors;                           // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_72CD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct OakGame.BaseItemRarity
struct FBaseItemRarity : public FTableRowBase
{
public:
	float                                        IntroductionLevel;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseWeight;                                        // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrowthExponent;                                    // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     LocalWeightModifierAttribute;                      // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct OakGame.RegionBalancePreviewData
struct FRegionBalancePreviewData
{
public:
	int32                                        GameStageMinimum;                                  // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GameStageMaximum;                                  // 0x4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GameStageIncreaseOverPlayerLevel;                  // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.RegionBalanceDataBase
struct FRegionBalanceDataBase
{
public:
	int32                                        MinGameStage;                                      // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxGameStage;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GameStageIncreaseAbovePlayer;                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpecifyBoostAbovePlayer;                          // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxLevelBelowPlayerLevel;                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpecifyMaxLevelBelowPlayer;                       // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72D0[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x20 - 0x18)
// ScriptStruct OakGame.RegionMissionBalanceData
struct FRegionMissionBalanceData : public FRegionBalanceDataBase
{
public:
	TSubclassOf<class UMission>                  Mission;                                           // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x30 - 0x18)
// ScriptStruct OakGame.RegionBalanceData
struct FRegionBalanceData : public FRegionBalanceDataBase
{
public:
	class URegionData*                           REGION;                                            // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRegionMissionBalanceData>     MissionOverrides;                                  // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.PlayThroughData
struct FPlayThroughData
{
public:
	int32                                        PlayThrough;                                       // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnforceMinimumGameStageForPlaythrough;            // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72D1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          MinimumGameStageForPlaythrough;                    // 0x8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FRegionBalanceData>            Regions;                                           // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bGameStageTracksPlayerLevelAboveMinimum;           // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_72D2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.RegionSaveData
struct FRegionSaveData
{
public:
	class URegionData*                           REGION;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GameStage;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayThroughIdx;                                    // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x7A0 - 0x780)
// ScriptStruct OakGame.RevolverVehicleAnimInstanceProxy
struct FRevolverVehicleAnimInstanceProxy : public FOakVehicleAnimInstanceProxy
{
public:
	uint8                                        Pad_72D3[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct OakGame.SDUCaseSpawner
struct FSDUCaseSpawner
{
public:
	class FName                                  AttachmentSocketName;                              // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOakSDUData*                           SDUData;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           DisplayMesh;                                       // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSDULeft;                                       // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSDURight;                                      // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSDUUp;                                         // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSDUDown;                                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSoldOut;                                          // 0x38(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72D4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USocketComponent*                      AttachmentSocket;                                  // 0x40(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USocketComponent*                      CameraSocket;                                      // 0x48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  DisplayMeshComponent;                              // 0x50(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextRenderComponent*                  TextRenderComponent;                               // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         MouseCollisionComponent;                           // 0x60(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72D5[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ShieldDamageModifierData
struct FShieldDamageModifierData
{
public:
	class UShieldAugment_DamageModifier*         Augment;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UConditionalDamageModifier*            ModifierInstance;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AOakCharacter*>                 RegisteredCharacters;                              // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.AugmentData
struct FAugmentData
{
public:
	class AShield*                               Shield;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StackCount;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeTriggered;                                   // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInstanceBool;                                     // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72D6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InstanceFloat;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstanceInt;                                       // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InstanceVector;                                    // 0x18(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                InstanceActor;                                     // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72D8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.TrackedShieldAttributeData
struct FTrackedShieldAttributeData
{
public:
	class UGbxAttributeData*                     Data;                                              // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeModifierHandle           ModifierHandle;                                    // 0x8(0x10)(Transient, NativeAccessSpecifierPublic)
	class UClass*                                ShieldAugmentClass;                                // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72D9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.ShieldAugmentDamageEventData
struct FShieldAugmentDamageEventData
{
public:
	uint8                                        bShieldMustNotBeDepleted : 1;                      // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInstanceBoolMustBeTrue : 1;                       // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInstanceBoolMustBeTrueForBarrier : 1;             // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMustBeTriggerable : 1;                            // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSetNotTriggerableAfterTriggering : 1;             // Mask: 0x10, PropSize: 0x10x0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_27B : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_72DA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          TriggerCooldown;                                   // 0x8(0x38)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UDamageFilter*                         DamageEventFilter;                                 // 0x40(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.ShieldAugmentAbsorbRestoreData
struct FShieldAugmentAbsorbRestoreData
{
public:
	bool                                         bOnlyTriggerOnBarrier;                             // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72DB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGbxDamageType>>    TriggeringDamageTypes;                             // 0x8(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          RestoreAmount;                                     // 0x18(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.AdaptiveTypeAssociations
struct FAdaptiveTypeAssociations
{
public:
	enum class EOakElementalType                 DamageType;                                        // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72DC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     ResistanceAttribute;                               // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           TriggerAudioEvent;                                 // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           HitByTypeAudioEvent;                               // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.AttributeModifiers
struct FAttributeModifiers
{
public:
	class UGbxAttributeData*                     AttributeToModify;                                 // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGbxAttributeModifierType         ModifierType;                                      // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72DD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeInitializationData>  StackValues;                                       // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.DamageTypeAttribute
struct FDamageTypeAttribute
{
public:
	class UGbxAttributeData*                     AttributeToModify;                                 // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDamageType>            DamageType;                                        // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.ShieldTriggeredProjectileReflectEffect
struct FShieldTriggeredProjectileReflectEffect
{
public:
	bool                                         bShieldMustBeActiveToTrigger;                      // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ULightProjectileData>      LightProjectile;                                   // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          Damage;                                            // 0x10(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct OakGame.ShieldTriggeredElementalEffect
struct FShieldTriggeredElementalEffect
{
public:
	bool                                         bShieldMustBeActiveToTrigger;                      // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72DF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttributeInitializationData          DamagePerSecond;                                   // 0x8(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FAttributeInitializationData          ResourceEffectValue;                               // 0x40(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UOakDamageType>            DamageType;                                        // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.SpawnableSpellBasicData
struct FSpawnableSpellBasicData
{
public:
	float                                        Damage;                                            // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Force;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusEffectDamage;                                // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusEffectChance;                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedScale;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedScale;                                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChannelStage;                                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnID;                                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UDamageType>               DamageType;                                        // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AOakCharacter_Player*                  OwningPlayer;                                      // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGrenadeMod*                           OwningMod;                                         // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.SpawnFactorKeyedAction
struct FSpawnFactorKeyedAction
{
public:
	bool                                         bOverrideKeyedActionList;                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDataActionPair_Spawn>         SpawnKeyedActionList;                              // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDataActionPair_SpawnMesh>     SpawnMeshKeyedActionList;                          // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDataActionPair_SmartObject>   SmartObjectKeyedActionList;                        // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.WeightedPassengersNum
struct FWeightedPassengersNum
{
public:
	int32                                        PassengerCount;                                    // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.SeatOccupant
struct FSeatOccupant
{
public:
	int32                                        SeatSlot;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USpawnOptionData*                      SpawnOptions;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x0 (0x40 - 0x40)
// ScriptStruct OakGame.VehiclePartListData
struct FVehiclePartListData : public FActorPartListData
{
public:
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.SpawnFactoryDataArray
struct FSpawnFactoryDataArray
{
public:
	TArray<struct FSpawnFactoryData>             SpawnFactoryDataArray;                             // 0x0(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.SpawnInventoryLootRequest
struct FSpawnInventoryLootRequest
{
public:
	class AActor*                                ContextActor;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSelectedInventoryInfo>        SelectedInventoryInfos;                            // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ELootInstancingPolicy             InstancingPolicy;                                  // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  PlayerToInstanceFor;                               // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x40 - 0x38)
// ScriptStruct OakGame.SpawnInventoryLootRequestEntry
struct FSpawnInventoryLootRequestEntry : public FSpawnInventoryLootRequest
{
public:
	uint8                                        Pad_72E6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct OakGame.SpawnDroppedPickupLootRequest
struct FSpawnDroppedPickupLootRequest
{
public:
	class AActor*                                ContextActor;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSelectedInventoryInfo>        SelectedInventoryInfos;                            // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UItemPoolListInterface*                ItemPools;                                         // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELootInstancingPolicy             InstancingPolicy;                                  // 0x20(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AOakPlayerController*                  PlayerToInstanceFor;                               // 0x28(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartHidden;                                      // 0x30(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomizeActivateDelay;                           // 0x31(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ActivateDelay;                                     // 0x34(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpawnDelay;                                     // 0x38(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialLootMassScale;                              // 0x3C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxAction>                LootSpawnAction;                                   // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x48(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnDroppedPickupLootRequestType RequestType;                                       // 0x50(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72E9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeEffectData>          AttributeEffects;                                  // 0x58(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class ULootSpawnPatternData*                 DropPattern;                                       // 0x68(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72EA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       AttachComponent;                                   // 0x80(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPickupLootAttachmentMode         AttachmentMode;                                    // 0x88(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72EB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           PickupSpawned;                                     // 0x90(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_72EC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct OakGame.SelectedInventorySpawningState
struct FSelectedInventorySpawningState
{
public:
	struct FSelectedInventoryInfo                SeletedInventoryInfo;                              // 0x0(0x58)(NativeAccessSpecifierPublic)
	uint8                                        Pad_72ED[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInventoryBalanceStateInitializationData InitData;                                          // 0x60(0x68)(NativeAccessSpecifierPublic)
	uint8                                        Pad_72EE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x100 - 0xB0)
// ScriptStruct OakGame.SpawnDroppedPickupLootRequestEntry
struct FSpawnDroppedPickupLootRequestEntry : public FSpawnDroppedPickupLootRequest
{
public:
	uint8                                        Pad_72EF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSelectedInventorySpawningState> SpawningStates;                                    // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F0[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x160 - 0x158)
// ScriptStruct OakGame.SpellLightProjectileInitializationData
struct FSpellLightProjectileInitializationData : public FOakLightProjectileInitializationData
{
public:
	class AGrenadeMod*                           SpellMod;                                          // 0x158(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x50 - 0x48)
// ScriptStruct OakGame.SpellAttributeModifier
struct FSpellAttributeModifier : public FSimpleAttributeModifier
{
public:
	enum class ESpellAttributeContext            Context;                                           // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.SplineFollowerDistanceCheckpoint
struct FSplineFollowerDistanceCheckpoint
{
public:
	class FString                                Name;                                              // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Distance;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.FrontendStandInSlotTransitionSettings
struct FFrontendStandInSlotTransitionSettings
{
public:
	TArray<int32>                                SlotsToHideDuringInspection;                       // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.FrontendStandInSlotSettings
struct FFrontendStandInSlotSettings
{
public:
	TArray<int32>                                SlotsToRemainHidden;                               // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFrontendStandInSlotTransitionSettings Transitions[0x4];                                  // 0x10(0x40)(Edit, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.GlobalsStandInSettings
struct FGlobalsStandInSettings
{
public:
	float                                        BaseStandInDepth_EchoRelative;                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BaseStandInPosition_EchoRelative;                  // 0x4(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BaseStandInRotation_EchoRelative;                  // 0xC(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        BaseEchoProjectionFXDepth_UIObject;                // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UPlayerClassIdentifier*, float>   BasePlayerClassScale;                              // 0x20(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.StandInLightingComponentConfig
struct FStandInLightingComponentConfig
{
public:
	class FName                                  ComponentName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideLocation;                                 // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Location;                                          // 0xC(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideRotation;                                 // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              Rotation;                                          // 0x1C(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bOverrideIntensity;                                // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Intensity;                                         // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSplitScreenIntensity;                          // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SplitScreenIntensity;                              // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseVerticalSplitScreenIntensity;                  // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VerticalSplitScreenIntensity;                      // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseQuadSplitScreenIntensity;                      // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72F9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        QuadSplitScreenIntensity;                          // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.StandInLightingConfig
struct FStandInLightingConfig
{
public:
	TArray<struct FStandInLightingComponentConfig> LightComponents;                                   // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AmbientCubemapIntensity;                           // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72FA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.StandInLightingSetting
struct FStandInLightingSetting
{
public:
	struct FStandInLightingConfig                DefaultLighting;                                   // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	TMap<class UPlayerClassIdentifier*, struct FStandInLightingConfig> PlayerClassLighting;                               // 0x18(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.StandInScaleSetting
struct FStandInScaleSetting
{
public:
	float                                        Scale;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72FB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UPlayerClassIdentifier*, float>   PlayerClassScale;                                  // 0x8(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EStandInAutoScaleMode             AutoScaleMode;                                     // 0x58(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72FC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AutoScaleExtent;                                   // 0x5C(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.StandInPlayerClassSpecificPositionSettingContextOverride
struct FStandInPlayerClassSpecificPositionSettingContextOverride
{
public:
	struct FVector2D                             ScreenPosition;                                    // 0x0(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DefaultRotation;                                   // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Depth;                                             // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.StandInPlayerClassSpecificPositionSetting
struct FStandInPlayerClassSpecificPositionSetting
{
public:
	struct FVector2D                             ScreenPosition;                                    // 0x0(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DefaultRotation;                                   // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Depth;                                             // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FStandInPlayerClassSpecificPositionSettingContextOverride> ContextOverrides;                                  // 0x18(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct OakGame.StandInPositionSetting
struct FStandInPositionSetting
{
public:
	struct FVector2D                             ScreenPosition;                                    // 0x0(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DefaultRotation;                                   // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Depth;                                             // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UPlayerClassIdentifier*, struct FStandInPlayerClassSpecificPositionSetting> PlayerClassPosition;                               // 0x18(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MaxAspectRatio;                                    // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72FD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.StandInVisualAdjustmentSetting
struct FStandInVisualAdjustmentSetting
{
public:
	TSubclassOf<class AStandInAuxiliaryActor>    AuxiliaryActorToMatch;                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideItem;                                         // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Offset;                                            // 0xC(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x18(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4F0 (0x4F8 - 0x8)
// ScriptStruct OakGame.StandInUIConfigData
struct FStandInUIConfigData : public FTableRowBase
{
public:
	class FName                                  CustomPivotSocket;                                 // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockStandInPositionOnFadeOut;                     // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_72FF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStandInLightingSetting               Lighting;                                          // 0x18(0x68)(Edit, NativeAccessSpecifierPublic)
	struct FStandInScaleSetting                  Scale;                                             // 0x80(0x68)(Edit, NativeAccessSpecifierPublic)
	struct FStandInPositionSetting               Positioning;                                       // 0xE8(0x70)(Edit, NativeAccessSpecifierPublic)
	struct FStandInScaleSetting                  ScaleSplitScreen;                                  // 0x158(0x68)(Edit, NativeAccessSpecifierPublic)
	struct FStandInScaleSetting                  ScaleVerticalSplitScreen;                          // 0x1C0(0x68)(Edit, NativeAccessSpecifierPublic)
	struct FStandInScaleSetting                  ScaleQuadSplitScreen;                              // 0x228(0x68)(Edit, NativeAccessSpecifierPublic)
	struct FStandInPositionSetting               PositioningSplitScreen;                            // 0x290(0x70)(Edit, NativeAccessSpecifierPublic)
	struct FStandInPositionSetting               PositioningVerticalSplitScreen;                    // 0x300(0x70)(Edit, NativeAccessSpecifierPublic)
	struct FStandInPositionSetting               PositioningQuadSplitScreen;                        // 0x370(0x70)(Edit, NativeAccessSpecifierPublic)
	bool                                         bMayAlterRotationDamping;                          // 0x3E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7300[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationDamping;                                   // 0x3E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterpTime;                                        // 0x3E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7301[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStandInVisualAdjustmentSetting       PedestalAdjustment;                                // 0x3F0(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FStandInVisualAdjustmentSetting       PedestalAdjustment_HorizontalSplitScreen;          // 0x418(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FStandInVisualAdjustmentSetting       PedestalAdjustment_VerticalSplitScreen;            // 0x440(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FStandInVisualAdjustmentSetting       PedestalAdjustment_QuadSplitScreen;                // 0x468(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FStandInVisualAdjustmentSetting       AbilityBranchAuxActorAdjustment;                   // 0x490(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FStandInVisualAdjustmentSetting       ActionAbilityAuxActorAdjustment;                   // 0x4B8(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FStandInVisualAdjustmentSetting> AuxiliaryActorAdjustment;                          // 0x4E0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bPlayActionAbilityAnimation;                       // 0x4F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHidePlayerGuns;                                   // 0x4F1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRaiseHeadForBigHat;                               // 0x4F2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlayerBanner;                                 // 0x4F3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7302[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x58 - 0x50)
// ScriptStruct OakGame.StandInUIControllerTickFunction
struct FStandInUIControllerTickFunction : public FTickFunction
{
public:
	uint8                                        Pad_7303[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x150 (0x150 - 0x0)
// ScriptStruct OakGame.EncounterLoadItemState
struct FEncounterLoadItemState
{
public:
	uint8                                        Pad_7304[0xF8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       PinnedLoadedObjects;                               // 0xF8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class ADynamicRoomBase*                      DynamicRoomBase;                                   // 0x108(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDynamicRoomBaseData*                  DynamicRoomData;                                   // 0x110(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelStreaming*                       LevelStreaming;                                    // 0x118(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevel*                                DebugPersistentLevel;                              // 0x120(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7305[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.EncounterDynamicRoomConfig
struct FEncounterDynamicRoomConfig
{
public:
	class UDynamicRoomBaseData*                  RoomData;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CustomData;                                        // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct OakGame.EncounterLoadScheduleItem
struct FEncounterLoadScheduleItem
{
public:
	class FName                                  ScheduleItemName;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AutoStartOnMilestone;                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLowPriority;                                      // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7306[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UWorld>                 LoadLevel;                                         // 0x18(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEncounterDynamicRoomConfig           LoadDynamicRoom;                                   // 0x40(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bCustomLevelVisibility;                            // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7307[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UObject>>        LoadAssets;                                        // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bParallelLoadSameMilestone;                        // 0x70(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bParallelLoadNextMilestone;                        // 0x71(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7308[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExpectedLoadTime;                                  // 0x74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MilestoneOnComplete;                               // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<float, class FName>                     EarlyMilestones;                                   // 0x80(0x50)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct OakGame.DetailledEnvironmentMapTableEntry
struct FDetailledEnvironmentMapTableEntry : public FTableRowBase
{
public:
	class UEncounterRoomData*                    Room;                                              // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SupportKillAllThreeWaves;                          // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SupportKillAllTwoWaves;                            // 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SupportKillMiniBoss;                               // 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SupportKillBoss;                                   // 0x13(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            EnableObjective;                                   // 0x18(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            DisableObjective;                                  // 0x48(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class FString>                        FilterTags;                                        // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        ExcludedArmyFilterTags;                            // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        IncludedArmyFilterTags;                            // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct OakGame.EnvironmentMapTableEntry
struct FEnvironmentMapTableEntry : public FTableRowBase
{
public:
	class UEncounterRoomData*                    Room;                                              // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7309[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMissionObjectiveReference            EnableObjective;                                   // 0x18(0x30)(Edit, NativeAccessSpecifierPublic)
	struct FMissionObjectiveReference            DisableObjective;                                  // 0x48(0x30)(Edit, NativeAccessSpecifierPublic)
	TArray<class FString>                        EnvironmentFilterTags;                             // 0x78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x6 (0x6 - 0x0)
// ScriptStruct OakGame.TrapConfiguration
struct FTrapConfiguration
{
public:
	enum class EEncounterTrapBehaviorType        BehaviorType;                                      // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOakElementalType                 ElementalType;                                     // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        FloorTrapType;                                     // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        WallTrapType;                                      // 0x3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CeilingTrapType;                                   // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BarrelTrapType;                                    // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x790 - 0x780)
// ScriptStruct OakGame.TechnicalVehicleAnimInstanceProxy
struct FTechnicalVehicleAnimInstanceProxy : public FOakVehicleAnimInstanceProxy
{
public:
	uint8                                        Pad_730A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.TestMapMenuEntry
struct FTestMapMenuEntry
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FString                                MapName;                                           // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x50 - 0x48)
// ScriptStruct OakGame.TrackedInteractionAttributeEffectData
struct FTrackedInteractionAttributeEffectData : public FAttributeEffectData
{
public:
	bool                                         bGlobalEffect;                                     // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_730B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.TrackedInteractionInstanceData
struct FTrackedInteractionInstanceData
{
public:
	struct FGuid                                 Guid;                                              // 0x0(0x10)(Edit, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UOakChallenge>           Challenge;                                         // 0x10(0x28)(Edit, EditConst, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTrackedInteractionAttributeEffectData> AttributeEffects;                                  // 0x38(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.TransporterCraneRecord
struct FTransporterCraneRecord
{
public:
	enum class ETransporterCraneState            CraneState;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_730C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveStartPosition;                                 // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveStartTime;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.WeightedTransporterCrane
struct FWeightedTransporterCrane
{
public:
	TSubclassOf<class ATransporterCrane>         Crane;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Weight;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_730D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.PlaythroughUnlockedData
struct FPlaythroughUnlockedData
{
public:
	TArray<class UTutorialMessageDataAsset*>     PlaythroughUnlockedMessages;                       // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGFxModalTutorialDataAsset*>    PlaythroughUnlockedMessages_Modal;                 // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bUseModalTutorial;                                 // 0x20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_730E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ModalTutorialDelay;                                // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.TutorialLevelUpData
struct FTutorialLevelUpData
{
public:
	class UTutorialMessageDataAsset*             LevelUpMessage;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxModalTutorialDataAsset*            LevelUpMessage_Modal;                              // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelForMessage;                                   // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseModalTutorial;                                 // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_730F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ModalTutorialDelay;                                // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7310[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.CurrencyInfo
struct FCurrencyInfo
{
public:
	class UInventoryCategoryData*                ItemCategory;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IncStartAudioEvent;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IncStopAudioEvent;                                 // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecStartAudioEvent;                                // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DecStopAudioEvent;                                 // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CurrencyFrameName;                                 // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.UpsellLink
struct FUpsellLink
{
public:
	TMap<class FName, class FString>             RegionBasedUpsellLink;                             // 0x0(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakItemInspectionElementalRatings
struct FOakItemInspectionElementalRatings
{
public:
	float                                        VsFlesh;                                           // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VsShield;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VsArmor;                                           // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VsBone;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.OakItemInspectionCategoryInfo
struct FOakItemInspectionCategoryInfo
{
public:
	class UInventoryCategoryData*                CategoryData;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7311[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            BaseTransform;                                     // 0x10(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.ItemInspectionSelectedPartData
struct FItemInspectionSelectedPartData
{
public:
	TSubclassOf<class UGbxAction_CoordinatedEffect> SelectedPartCE;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.OakItemInspectionMenuEnumIdMap
struct FOakItemInspectionMenuEnumIdMap
{
public:
	class UEnum*                                 EnumType;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        IdValues;                                          // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.OakItemInspectionPartEnumTable
struct FOakItemInspectionPartEnumTable
{
public:
	TArray<struct FOakItemInspectionMenuEnumIdMap> IdMap;                                             // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.WeightedWeaponUIStat
struct FWeightedWeaponUIStat
{
public:
	struct FFloatInterval                        NormalizationRange;                                // 0x0(0x8)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAttributeData*                     Attribute;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EUIStatValueStyle                 ValueStyle;                                        // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7312[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Weight;                                            // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreviewPercentWeight;                              // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7313[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.WeaponTypeAttributeStatWeighting
struct FWeaponTypeAttributeStatWeighting
{
public:
	class UWeaponTypeData*                       WeaponType;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeightedWeaponUIStat>         WeightedStats;                                     // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.VehicleAttachWeaponAdditionalData
struct FVehicleAttachWeaponAdditionalData
{
public:
	class FName                                  Key;                                               // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Data;                                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.WheelRandomSwitchPack
struct FWheelRandomSwitchPack
{
public:
	TArray<class UWwiseSwitch*>                  WheelSwitches;                                     // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                WheelsToIgnoreForSwitches;                         // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.VehicleConfigurationRtpc
struct FVehicleConfigurationRtpc
{
public:
	class UWwiseRtpc*                            RtpcParam;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DefaultValue;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7314[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxAttributeData*                     ValueAttribute;                                    // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUpdateEveryFrame;                                 // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_7315[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.VehicleConfigurationEvent
struct FVehicleConfigurationEvent
{
public:
	class UWwiseEvent*                           WwiseEvent;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AudioComponentTag;                                 // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.VehicleAudioLoopData
struct FVehicleAudioLoopData
{
public:
	class UWwiseEvent*                           LoopStart;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           LoopEnd;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.VehicleAudioLoopOnNamedCompData
struct FVehicleAudioLoopOnNamedCompData
{
public:
	struct FVehicleAudioLoopData                 AudioLoopData;                                     // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class FName                                  AudioComponentTag;                                 // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FWwisePlaybackInstance>        PlaybackInstances;                                 // 0x18(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.VehicleLandingEventData
struct FVehicleLandingEventData
{
public:
	class UWwiseEvent*                           LandingEvent;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTimeInAir;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7316[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.VehicleEffect
struct FVehicleEffect
{
public:
	class UBaseVehicleEffectData*                EffectData;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7317[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct OakGame.FilteredImpactData
struct FFilteredImpactData
{
public:
	TArray<class UImpactData*>                   ImpactData;                                        // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFeedbackData*                         DefaultVehicleOccupantsFeedback;                   // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UPhysicalMaterial*, class UFeedbackData*> VehicleOccupantsFeedback;                          // 0x18(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        FeedbackScale;                                     // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocalOnlyFeedback;                                // 0x6C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7318[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftClassPtr<class AActor>>          ClassesToTarget;                                   // 0x70(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class AActor>>          ClassesToExclude;                                  // 0x80(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.VehicleImpactEffectData
struct FVehicleImpactEffectData
{
public:
	uint8                                        Pad_7319[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFilteredImpactData>           FilteredImpactData;                                // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.EmitterEnableData
struct FEmitterEnableData
{
public:
	class FName                                  EmitterName;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEmitterEnableMode                EnableMode;                                        // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_731A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.VehicleEffectQueryData
struct FVehicleEffectQueryData
{
public:
	class FName                                  Event;                                             // 0x0(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleEffectEvent               EffectEvent;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_731B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ComponentTag;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ConditionalAudioSwitch
struct FConditionalAudioSwitch
{
public:
	class UGbxCondition*                         SwitchCondition;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseSwitch*                          SwitchToSet;                                       // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct OakGame.VehicleEffectData
struct FVehicleEffectData
{
public:
	class FName                                  Event;                                             // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ParticleEffect;                                    // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Socket;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayerOnly : 1;                                   // Mask: 0x1, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAutoActivate : 1;                                 // Mask: 0x2, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayAudioAtLocation : 1;                          // Mask: 0x4, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_27C : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_731C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RelativeLocation;                                  // 0x1C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRotation;                                  // 0x28(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RelativeScale;                                     // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StartAudioEvent;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWwiseEvent*                           StopAudioEvent;                                    // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FConditionalAudioSwitch>       ConditionalAudioSwitches;                          // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  AudioComponentName;                                // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AudioEmitterRadius;                                // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_731D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.VehicleOverrideData
struct FVehicleOverrideData
{
public:
	TArray<class FString>                        PartSelections;                                    // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        Property;                                          // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UObject*                               Data;                                              // 0x20(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                DataType;                                          // 0x28(0x8)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct OakGame.UseCharacterWeaponSettings
struct FUseCharacterWeaponSettings
{
public:
	float                                        ShootMaxAngle;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.InventoryPartDataUnlockedInfo
struct FInventoryPartDataUnlockedInfo
{
public:
	uint8                                        Pad_731E[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.InventoryDataUnlockedInfo
struct FInventoryDataUnlockedInfo
{
public:
	uint8                                        Pad_731F[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct OakGame.VehicleTrailData
struct FVehicleTrailData
{
public:
	class FName                                  WheelFXSocketName;                                 // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WheelPhysBoneName;                                 // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalOffset;                                       // 0x10(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LocalRotationOffset;                               // 0x1C(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              TrailPSComponent;                                  // 0x28(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              WadingPSComponent;                                 // 0x30(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxVehicleWheel*                      WheelRef;                                          // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7320[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.TrailVectorParam
struct FTrailVectorParam
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Value;                                             // 0x8(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7321[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.VehicleTrailParticleSystemData
struct FVehicleTrailParticleSystemData
{
public:
	class UParticleSystem*                       ParticleSystemTemplate;                            // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTrailVectorParam>             VectorParamsToSet;                                 // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct OakGame.ExtraWadingData
struct FExtraWadingData
{
public:
	struct FVehicleTrailData                     WadingData;                                        // 0x0(0x50)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<class UElementalInteractionData*, struct FVehicleTrailParticleSystemData> WadeParticleSystems;                               // 0x50(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVehicleTrailParticleSystemData       DefaultWadeParticleSystem;                         // 0xA0(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.VendingMachineMenuFilter
struct FVendingMachineMenuFilter
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class UInventoryCategoryData*                DataTypeFilter;                                    // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.VendingMachineSequenceTimedEvent
struct FVendingMachineSequenceTimedEvent
{
public:
	float                                        Delay;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7322[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct OakGame.VendingMachineInteractSequence
struct FVendingMachineInteractSequence
{
public:
	struct FRuntimeFloatCurve                    DigistructCurve;                                   // 0x0(0x78)(Edit, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7323[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVendingMachineSequenceTimedEvent> Events;                                            // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.VendingMachineLastSelectionData
struct FVendingMachineLastSelectionData
{
public:
	class AActor*                                InventoryActor;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7324[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.VendingMachineItemRarityData
struct FVendingMachineItemRarityData
{
public:
	class UInventoryRarityData*                  Rarity;                                            // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    ShelfMaterial;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    ItemOfTheDayShelfMaterial;                         // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelectionParticleRarityParameter;                  // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7325[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.VendingMachineTrayTile
struct FVendingMachineTrayTile
{
public:
	class APickupableMeshActor*                  PhysicalActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                InventoryActor;                                    // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryBalanceStateComponent*       InventoryBalance;                                  // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7326[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.VendingMachinePhysicalShelf
struct FVendingMachinePhysicalShelf
{
public:
	class UStaticMeshComponent*                  ShelfMeshComponent;                                // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         ClickCollisionComponent;                           // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              ItemScoreParticleComponent;                        // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              SoldOutParticleComponent;                          // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              MaterialInstance;                                  // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7327[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.WeaponUseModeAspectSetData
struct FWeaponUseModeAspectSetData
{
public:
	class UWeaponUseModeAspectData*              Aspect;                                            // 0x0(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UWeaponUseModeSecondaryAspectData*> SecondaryAspectList;                               // 0x8(0x10)(Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	class UWeaponDamageTypeAspectData*           DamageTypeAspect[0x2];                             // 0x18(0x10)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponUseModeNameAspectData*          NameAspect;                                        // 0x28(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponUseModeCrosshairAspectData*     CrosshairAspect;                                   // 0x30(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.WeaponBonusDataTableSelectionData
struct FWeaponBonusDataTableSelectionData
{
public:
	int32                                        UseModeBitmask;                                    // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_7328[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponBonusDataTableData*             WeaponBonusDataTable;                              // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RowName;                                           // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                        ColumnNames;                                       // 0x18(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          ColumnCollections;                                 // 0x28(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_7329[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.WeaponBonusDataTableColumnCollectionData
struct FWeaponBonusDataTableColumnCollectionData
{
public:
	class FName                                  CollectionName;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        ColumnNames;                                       // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_732A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.WeaponBonusDataTableAttributeMappingData
struct FWeaponBonusDataTableAttributeMappingData
{
public:
	bool                                         bInstigatorAttribute;                              // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_732B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ColumnName;                                        // 0x8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxAttributeData*                     Attribute;                                         // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGbxAttributeModifierType         ModifierType;                                      // 0x20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EInstigatorAttributeEffectAttributeToModifyContextSource AttributeToModifyContextSource;                    // 0x21(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EInstigatorAttributeEffectModifierValueContext ModifierValueContext;                              // 0x22(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_732C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponBonusDataTableAttributeValueResolver* DataTableAttributeValueResolver;                   // 0x28(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct OakGame.WeaponUseModeAttributeEffectData
struct FWeaponUseModeAttributeEffectData
{
public:
	enum class EWeaponUseMode                    UseMode;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_732D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UseModeBitmask;                                    // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttributeEffectData>          AttributeEffects;                                  // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct OakGame.WeaponBonusData
struct FWeaponBonusData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWeaponUseModeAttributeEffectData> WeaponUseModeAttributeEffects;                     // 0x8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAttributeEffectData>          InstigatorAttributeEffects;                        // 0x18(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.COVBrokenEffectData
struct FCOVBrokenEffectData
{
public:
	class UStaticMesh*                           Mesh;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachSocket;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HiddenBone;                                        // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponEffectType                 BreakEffectType;                                   // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BreakEffectID;                                     // 0x19(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponEffectType                 BrokenEffectType;                                  // 0x1A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BrokenEffectID;                                    // 0x1B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideAmpEffect;                                    // 0x1C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_732E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct OakGame.COVRepairType
struct FCOVRepairType
{
public:
	struct FAttributeInitializationData          BrokenEffectIndex;                                 // 0x0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RepairTime;                                        // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RepairCompletePercent;                             // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CooldownCompletePercent;                           // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelectionWeight;                                   // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct OakGame.WeaponEnchantmentTierData
struct FWeaponEnchantmentTierData
{
public:
	int32                                        WeaponLevel;                                       // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.WeightedFloatRange
struct FWeightedFloatRange
{
public:
	float                                        MinValue;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxValue;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAttributeInitializationData          Weight;                                            // 0x8(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0xC0 (0x780 - 0x6C0)
// ScriptStruct OakGame.WeaponVehicleAnimInstanceProxy
struct FWeaponVehicleAnimInstanceProxy : public FAnimInstanceProxy
{
public:
	uint8                                        Pad_732F[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x34 (0x34 - 0x0)
// ScriptStruct OakGame.ZoneToBigMapProjectionData
struct FZoneToBigMapProjectionData
{
public:
	struct FVector                               ZoneMapMin;                                        // 0x0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BigMapMin;                                         // 0xC(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoneMapMax;                                        // 0x18(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BigMapMax;                                         // 0x24(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBigMapIsInverted;                                 // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSwapXY;                                           // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7330[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct OakGame.BigMapPOIData
struct FBigMapPOIData
{
public:
	class FText                                  Label;                                             // 0x0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UGbxCondition*                         DisplayCondition;                                  // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            LocationTransform;                                 // 0x20(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            Mesh;                                              // 0x50(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7331[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TextRelativeTransform;                             // 0x80(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               WaypointPositionOffset;                            // 0xB0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BigMapPartIndex;                                   // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ZoomInOrigin;                                      // 0xC0(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7332[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct OakGame.ZoneMapMissionPOIBlacklistEntry
struct FZoneMapMissionPOIBlacklistEntry
{
public:
	TSoftClassPtr<class AOakCharacter>           BlacklistedCharacter;                              // 0x0(0x28)(Deprecated, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BlacklistedCharacterPath;                          // 0x28(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxCondition*                         MissionBlacklistCondition;                         // 0x38(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlacklistMissionGiving;                           // 0x40(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7333[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         ObjectiveBlacklistCondition;                       // 0x48(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlacklistObjectiveWaypoint;                       // 0x50(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7334[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct OakGame.ZoneMapChallengeGroupEntry
struct FZoneMapChallengeGroupEntry
{
public:
	class UChallengeCategoryData*                ChallengeGroup;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UChallenge>>        ChallengesInGroup;                                 // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        NumChallengesInCategory;                           // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumChallengesVisibleInUI;                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct OakGame.ZoneMapDataSection
struct FZoneMapDataSection
{
public:
	class FString                                ZoneMapSectionObjectName;                          // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SectionName;                                       // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               Origin;                                            // 0x28(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Extents;                                           // 0x34(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.ZoneMapDisplayInfo
struct FZoneMapDisplayInfo
{
public:
	class FName                                  LevelName;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.ZoneMapGPUPointCloudData
struct FZoneMapGPUPointCloudData
{
public:
	class UTexture*                              PositionData;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                              NormalsData;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct OakGame.ZoneMapMeshListEntry
struct FZoneMapMeshListEntry
{
public:
	class UStaticMesh*                           ZoneMapMesh;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                  ZoneMapVisibilityExtents;                          // 0x8(0x1C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_7335[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGbxCondition*                         MeshDisplayCondition;                              // 0x28(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConditionalMeshDisplay;                           // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7336[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct OakGame.CachedPlanetZonePOI
struct FCachedPlanetZonePOI
{
public:
	class UZoneMapData*                          ZoneReference;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            ZoneMeshOnPlanet;                                  // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct OakGame.PlanetZonePOI
struct FPlanetZonePOI
{
public:
	class UZoneMapData*                          ZoneReference;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           ZoneMeshOnPlanet;                                  // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}


