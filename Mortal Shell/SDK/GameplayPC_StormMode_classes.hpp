#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x5A2 (0x1544 - 0xFA2)
// BlueprintGeneratedClass GameplayPC_StormMode.GameplayPC_StormMode_C
class AGameplayPC_StormMode_C : public AGameplayPC_C
{
public:
	uint8                                        Pad_425B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xFA8(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UStormModeNotifier_Component_C*        StormModeNotifierComponent;                        // 0xFB0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URuneInventoryComponent_C*             RuneInventoryComponent;                            // 0xFB8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                        Timeline_Playtime_Run_Alpha_2D55EEF94095FA0E065F48BCC2F4A14D; // 0xFC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                Timeline_Playtime_Run__Direction_2D55EEF94095FA0E065F48BCC2F4A14D; // 0xFC4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_425D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTimelineComponent*                    Timeline_Playtime_Run;                             // 0xFC8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Runes_SelectWindow_C*              UI_Runes_SelectWindow;                             // 0xFD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         InRuneSkillTree;                                   // 0xFD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         StopSavingGPData;                                  // 0xFD9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         StopSavingCheckpoints;                             // 0xFDA(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	enum class Enum_StormModeProgress            StormModeProgress;                                 // 0xFDB(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_425F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class Enum_StormModeArea, enum class Enum_StormModeAreaState> StormModeEntrancesState;                           // 0xFE0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<enum class Enum_StormModeProgress, int32> StormModeAreasProgress;                            // 0x1030(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_AreaBlocker_C*>             FallgrimAreaBlockers;                              // 0x1080(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<enum class Enum_StormModeProgress, enum class Enum_StormModeGlandData> StormModeGlandsData;                               // 0x1090(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FStruct_StormModeSeeds                StormModeSeeds;                                    // 0x10E0(0x28)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EArmorTypes                       StormModeSelectedShell;                            // 0x1108(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EComboTypes                       StormModeSelectedWeapon;                           // 0x1109(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EComboTypes                       StormModeLoadedWeapon;                             // 0x110A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EComboTypes                       StormModeSavedWeapon;                              // 0x110B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         StormModeHasSelectedShell;                         // 0x110C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4260[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            StormMode_RunStart;                                // 0x1110(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                        StormModeTarRetain;                                // 0x1120(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        TarLostOnDeath;                                    // 0x1124(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SeedManager_C*                     SeedManager;                                       // 0x1128(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABarbarous_StormMode_C*                Barbarous_StormMode;                               // 0x1130(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            StormMode_RuneNotify;                              // 0x1138(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDateTime                             RunPlaytime;                                       // 0x1148(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                        RunPlaytimeSeconds;                                // 0x1150(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EArmorTypes                       ShellFromSaveFile;                                 // 0x1154(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4262[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStruct_StormModeRun_Data>     StormModeRunData;                                  // 0x1158(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<struct FDateTime, struct FStruct_Rune>  ProgressRunesWithPlaytime;                         // 0x1168(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                StormMode_CurrentLevel;                            // 0x11B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStruct_Rune                          RuneForNotify;                                     // 0x11C8(0xD0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                  OpenAreaID;                                        // 0x1298(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  ChaliceUnlockedID;                                 // 0x12A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CanUpdateCheckpoint;                               // 0x12A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4267[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Crypt_StartTransform;                              // 0x12B0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                            FireLevel_StartTransform;                          // 0x12E0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                            Cathedral_StartTransform;                          // 0x1310(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	FMulticastInlineDelegateProperty_            OnMilestoneUnlocked;                               // 0x1340(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTransform                            FinalBoss_StartTransform;                          // 0x1350(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                        ConcurrentEnemies;                                 // 0x1380(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4268[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UClass*, enum class Enum_StormModePlayerKiller> KillerMap;                                         // 0x1388(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ULargeTutorial_C*                      UI_StormModeTutorial;                              // 0x13D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        MaxHealthFromSaveGame;                             // 0x13E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        HealthFromSaveGame;                                // 0x13E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, float>                     MU_Progress_Start;                                 // 0x13E8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, float>                     MU_Progress_End;                                   // 0x1438(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUI_StormMode_End_C*                   UI_StormMode_End;                                  // 0x1488(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                     MU_Progress_Tier_Start;                            // 0x1490(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, int32>                     MU_Progress_Tier_End;                              // 0x14E0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAudioComponent*                       SisterDialogueAudioComponent;                      // 0x1530(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bDebugSisterDialogues;                             // 0x1538(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         bIsSisterDialogue;                                 // 0x1539(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_426C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EquippedLute;                                      // 0x153C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class AGameplayPC_StormMode_C* GetDefaultObj();

	void StormMode_GetEquippedLute(class FName* Lute);
	void StormMode_GetCurrentUpgradeForSlot(enum class Enum_RuneSlots_IDs Slot, class FName* ID, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FStruct_Rune& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void StormMode_GetEndingProgress(class FName ID, float* Progress, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void StormMode_GetInitialProgress(class FName ID, float* Progress, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	bool StormMode_IsSisterDialogue();
	void StormMode_DebugDialogues(bool* Debug_);
	void StormMode_PlaySister3ChoiceWindowAudio(class USoundBase* Sound, class UAudioComponent** Audio, class UAudioComponent* CallFunc_CreateSound2D_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void StormMode_AskRandomDarkFormUpgrade(struct FStruct_Rune* Rune, const struct FStruct_Rune& CallFunc_GetRandomDarkFormUpgrade_Rune, bool CallFunc_IsValid_ReturnValue);
	void StormMode_GetCurrentShadeForCharacter(enum class EArmorTypes Character, enum class Enum_ShellDye* Shade, enum class EArmorTypes Temp_byte_Variable, enum class Enum_ShellDye K2Node_Select_Default);
	void StormMode_AskForRandomWeaponUpgrade(bool* GrantUpgrade_, struct FStruct_Rune* Upgrade, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class FName CallFunc_GetMilestoneUnlockForWeapon_ID, bool CallFunc_IsMilestoneUnlocked_bUnlocked, int32 CallFunc_IsMilestoneUnlocked_Current, float CallFunc_IsMilestoneUnlocked_Percent, int32 CallFunc_IsMilestoneUnlocked_Tier, TArray<int32>& CallFunc_IsMilestoneUnlocked_TiersX, bool CallFunc_IsMilestoneUnlocked_HasTier, int32 CallFunc_Clamp_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, const struct FStruct_Rune& CallFunc_GetRandomWeaponUpgrade_Upgrade);
	void StormMode_GetUnlockedItems(TArray<class FName>* UnlockedItems);
	void IsMilestoneUnlocked(class FName ID, bool* bUnlocked, int32* Current, float* Percent, int32* Tier, TArray<int32>* TiersX, bool* HasTier, float Local_Percent, const TArray<int32>& XValues, int32 CurrentProgressVal, int32 Counter, class FName MilestoneID, int32 Temp_int_Variable, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool K2Node_SwitchName_CmpSuccess, const class FString& CallFunc_Conv_BoolToString_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, bool CallFunc_Array_IsValidIndex_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, class FName CallFunc_GetMilestoneCheckID_PillarShell_ID, class FName CallFunc_GetMilestoneCheckID_PillarShell_ID_1, int32 CallFunc_GetNamedPCInt_Value, int32 CallFunc_GetNamedPCInt_Value_1, class FName CallFunc_GetMilestoneCheckID_PillarShell_ID_2, class FName CallFunc_GetMilestoneCheckID_PillarShell_ID_3, int32 CallFunc_GetNamedPCInt_Value_2, int32 CallFunc_GetNamedPCInt_Value_3, const class FString& CallFunc_Concat_StrStr_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, float CallFunc_Conv_IntToFloat_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, float CallFunc_Divide_FloatFloat_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, class FName CallFunc_GetMilestoneCheckID_PillarWeapon_ID, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, int32 CallFunc_GetNamedPCInt_Value_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, class FName CallFunc_GetMilestoneCheckID_PillarWeapon_ID_1, int32 CallFunc_GetNamedPCInt_Value_5, class FName CallFunc_GetMilestoneCheckID_PillarWeapon_ID_2, class FName CallFunc_GetMilestoneCheckID_PillarWeapon_ID_3, int32 CallFunc_GetNamedPCInt_Value_6, int32 CallFunc_GetNamedPCInt_Value_7, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_4, float CallFunc_GetPercentForTier_Percent, int32 CallFunc_Add_IntInt_ReturnValue_5, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_6, int32 CallFunc_Array_Get_Item, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_GetNamedPCInt_Value_8, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, const class FString& CallFunc_Concat_StrStr_ReturnValue_11, const struct FStruct_MilestoneUnlock& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
	bool StormMode_StartingRiposteNotDefault_(class FName* StartingRiposte, class FName Local_StartingRiposte, class FName Temp_name_Variable, bool CallFunc_NotEqual_NameName_ReturnValue, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void StormMode_GetNamedInts(TMap<class FName, int32>* NamedInts);
	void StormMode_AskRandomUpgrade(struct FStruct_Rune* Upgrade, const struct FStruct_Rune& CallFunc_GetRandomUpgrade_Upgrade, bool CallFunc_IsValid_ReturnValue);
	void StormMode_CheckForGlands(bool* HasAny_, bool CallFunc_HasAnyGland__ReturnValue);
	void StormMode_GetRunPlaytime(struct FDateTime* RunPlaytime, const struct FDateTime& CallFunc_GetRunPlaytime_ReturnValue);
	void StormMode_AskForASeed(int32* Seed, int32 CallFunc_AskForASeed_Seed, bool CallFunc_IsValid_ReturnValue);
	void StormMode_GetSelectedShell(bool* HasSelected, enum class EArmorTypes* Shell);
	void StormMode_GetSeeds(struct FStruct_StormModeSeeds* Seeds);
	void StormMode_GetCurrentGlandData(enum class Enum_StormModeProgress Progress, enum class Enum_StormModeGlandData* Gland, enum class Enum_StormModeGlandData CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	bool StormMode_ShouldUnlockChalice_(TMap<int32, float> Local_CathLevelChances, TMap<int32, float> Local_CryptLevelChances, TMap<int32, float> Local_FireLevelChances, bool Local_Result, int32 Local_CurrentProgress, TMap<int32, float> K2Node_MakeVariable_MakeVariableOutput, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_RandomBoolWithWeight_ReturnValue, float CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, bool CallFunc_RandomBoolWithWeight_ReturnValue_1, bool K2Node_SwitchString_CmpSuccess, TMap<int32, float> K2Node_MakeVariable_MakeVariableOutput_1, float CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, bool CallFunc_RandomBoolWithWeight_ReturnValue_2, TMap<int32, float> K2Node_MakeVariable_MakeVariableOutput_2, int32 CallFunc_Map_Find_Value_3, bool CallFunc_Map_Find_ReturnValue_3, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
	bool GetStormMode_ShouldOpenArea_(bool Local_ShouldOpenArea, int32 Local_CurrentValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void GetStormModeAreaState(enum class Enum_StormModeArea Area, enum class Enum_StormModeAreaState* CurrentState, enum class Enum_StormModeAreaState CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void GetStormModeAllAreasState(TMap<enum class Enum_StormModeArea, enum class Enum_StormModeAreaState>* AreasState);
	void GetStormModeProgress(enum class Enum_StormModeProgress* Progress);
	void UpdateStormModeCampaign(class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class FName CallFunc_GetAscensionName_ID, class FName CallFunc_SeedDial_NextIndex_PCIntName, int32 CallFunc_GetNamedPCInt_Value, int32 CallFunc_GetNamedPCInt_Value_1, int32 CallFunc_Add_IntInt_ReturnValue);
	void EquipLoadedWeapon(const class FString& CallFunc_GetCurrentLevelName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue_1);
	void DebugLoadedWeapon(enum class EComboTypes CharWeapon, const class FString& Temp_string_Variable, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, const class FString& Temp_string_Variable_1, bool Temp_bool_Variable, const class FString& K2Node_Select_Default, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3);
	void CheckLoadedWeapon(bool CallFunc_NotEqual_ByteByte_ReturnValue, class FName CallFunc_GetCharacterWeaponIDFromEnum_ID, const struct FInventoryItem& CallFunc_GetItemFromID_Item, bool CallFunc_SetInventoryItem_Success, bool CallFunc_HasItem_Success, int32 CallFunc_HasItem_InventorySlot, int32 CallFunc_HasItem_Amount, bool CallFunc_Not_PreBool_ReturnValue);
	void SaveCurrentWeapon(enum class EComboTypes* CurrentWeapon, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void ShowEndWidget(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AGamePlayGameState_C* K2Node_DynamicCast_AsGame_Play_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void IncrementSuccesCounter(class FName Temp_name_Variable, class FName Temp_name_Variable_1, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void SetCycleCompleted(class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, TScriptInterface<class IBPI_StormMode_GM_C> K2Node_DynamicCast_AsBPI_Storm_Mode_GM, bool K2Node_DynamicCast_bSuccess, class FName CallFunc_GoldenPathDialogueCounterName_PCIntName);
	void DH_DebugSisterDialogues(bool CallFunc_Not_PreBool_ReturnValue);
	void FadeOutSisterAudio(bool CallFunc_IsValid_ReturnValue);
	void DH_ResetStormModeDialogues(class FName CallFunc_Next_Golden_Path_Dialogue_Index_Name_PCIntName, class FName CallFunc_GoldenPathDialogueCounterName_PCIntName);
	void CheckAxatanaUpgradeAchievement(bool CallFunc_HasRune_Yes, bool CallFunc_HasRune_Yes_1, bool CallFunc_HasRune_Yes_2, bool CallFunc_HasRune_Yes_3, bool CallFunc_HasRune_Yes_4, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_HasRune_Yes_5, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_HasRune_Yes_6, bool CallFunc_HasRune_Yes_7, bool CallFunc_HasRune_Yes_8, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_HasRune_Yes_9, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_HasRune_Yes_10, bool CallFunc_BooleanOR_ReturnValue_5, bool CallFunc_HasRune_Yes_11, bool CallFunc_BooleanOR_ReturnValue_6, bool CallFunc_HasRune_Yes_12, bool CallFunc_BooleanOR_ReturnValue_7, bool CallFunc_BooleanOR_ReturnValue_8, bool CallFunc_HasRune_Yes_13, bool CallFunc_BooleanOR_ReturnValue_9, bool CallFunc_HasRune_Yes_14, bool CallFunc_HasRune_Yes_15, bool CallFunc_HasRune_Yes_16, bool CallFunc_HasRune_Yes_17, bool CallFunc_HasRune_Yes_18, bool CallFunc_BooleanOR_ReturnValue_10, bool CallFunc_BooleanOR_ReturnValue_11, bool CallFunc_BooleanOR_ReturnValue_12, bool CallFunc_BooleanOR_ReturnValue_13, bool CallFunc_BooleanOR_ReturnValue_14, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	void IsAllShadeUnlocked(bool* bYes, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 Temp_int_Variable, int32 Temp_int_Variable_1, uint8 CallFunc_Conv_IntToByte_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, uint8 CallFunc_GetEnumeratorValueFromIndex_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, enum class EArmorTypes Temp_byte_Variable, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, const class FString& Temp_string_Variable_2, const class FString& Temp_string_Variable_3, const class FString& Temp_string_Variable_4, const class FString& Temp_string_Variable_5, int32 Temp_int_Variable_2, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& K2Node_Select_Default, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void CreateEndWidget(bool CycleCompleted, const struct FDateTime& CallFunc_GetRunPlaytime_ReturnValue, enum class Enum_ShellDye CallFunc_StormMode_GetCurrentShadeForCharacter_Shade, TScriptInterface<class ICharacterUtilInterface_C> K2Node_DynamicCast_AsCharacter_Util_Interface, bool K2Node_DynamicCast_bSuccess, class APlayerController* CallFunc_GetPlayerController_ReturnValue, enum class EComboTypes CallFunc_0_Base_GetCurrentWeapon_CurrentWeapon, class UUI_StormMode_End_C* CallFunc_Create_ReturnValue);
	void CheckMilestoneState_RunEnd(class FName Local_ID, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class FName>& CallFunc_Map_Keys_Keys, bool CallFunc_IsMilestoneUnlocked_bUnlocked, int32 CallFunc_IsMilestoneUnlocked_Current, float CallFunc_IsMilestoneUnlocked_Percent, int32 CallFunc_IsMilestoneUnlocked_Tier, TArray<int32>& CallFunc_IsMilestoneUnlocked_TiersX, bool CallFunc_IsMilestoneUnlocked_HasTier, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void CheckMilestoneState_RunStart(class FName Local_ID, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsMilestoneUnlocked_bUnlocked, int32 CallFunc_IsMilestoneUnlocked_Current, float CallFunc_IsMilestoneUnlocked_Percent, int32 CallFunc_IsMilestoneUnlocked_Tier, TArray<int32>& CallFunc_IsMilestoneUnlocked_TiersX, bool CallFunc_IsMilestoneUnlocked_HasTier, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void ShouldApplyHealEffect(bool Apply_, const struct FStruct_Rune& Rune, bool K2Node_SwitchName_CmpSuccess, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue, TScriptInterface<class IBPI_StormMode_Character_C> K2Node_DynamicCast_AsBPI_Storm_Mode_Character, bool K2Node_DynamicCast_bSuccess);
	void DH_SetNamedInt(class FName Name, int32 Value);
	void DH_PrintConcurrentEnemies(const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void DH_UnlockAllMilestones(int32 PreTier, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void ShouldRemove10KTarOnDeath(bool* Remove, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_GetNamedPCInt_Value, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void AddShadeAbility(bool CallFunc_GetRuneFromID_Found_, const struct FStruct_Rune& CallFunc_GetRuneFromID_Rune, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue, TScriptInterface<class IBPI_StormMode_Character_C> K2Node_DynamicCast_AsBPI_Storm_Mode_Character, bool K2Node_DynamicCast_bSuccess, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_1, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_2, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_3, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_4, bool CallFunc_GetRuneFromID_Found__1, const struct FStruct_Rune& CallFunc_GetRuneFromID_Rune_1, bool CallFunc_GetRuneFromID_Found__2, const struct FStruct_Rune& CallFunc_GetRuneFromID_Rune_2, int32 CallFunc_MakeLiteralInt_ReturnValue, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous, bool CallFunc_GetRuneFromID_Found__3, const struct FStruct_Rune& CallFunc_GetRuneFromID_Rune_3, bool CallFunc_GetRuneFromID_Found__4, const struct FStruct_Rune& CallFunc_GetRuneFromID_Rune_4, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_5, bool CallFunc_GetRuneFromID_Found__5, const struct FStruct_Rune& CallFunc_GetRuneFromID_Rune_5, bool CallFunc_GetRuneFromID_Found__6, const struct FStruct_Rune& CallFunc_GetRuneFromID_Rune_6, bool CallFunc_GetRuneFromID_Found__7, const struct FStruct_Rune& CallFunc_GetRuneFromID_Rune_7, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_6, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_7, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_8, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_9, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_10, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_11, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_12, const struct FStruct_Rune& CallFunc_StormMode_AskRandomUpgrade_Upgrade, const struct FStruct_Rune& CallFunc_StormMode_AskRandomUpgrade_Upgrade_1, const struct FStruct_Rune& CallFunc_StormMode_AskRandomUpgrade_Upgrade_2, const struct FStruct_Rune& CallFunc_StormMode_AskRandomUpgrade_Upgrade_3, const struct FStruct_Rune& CallFunc_StormMode_AskRandomUpgrade_Upgrade_4, const struct FStruct_Rune& CallFunc_StormMode_AskRandomDarkFormUpgrade_Rune, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_13, bool K2Node_SwitchEnum_CmpSuccess_2, bool K2Node_SwitchEnum_CmpSuccess_3, bool K2Node_SwitchEnum_CmpSuccess_4, const struct FStruct_Rune& CallFunc_GetMiscRuneFromID_Out_Row_14, bool K2Node_SwitchEnum_CmpSuccess_5, bool CallFunc_StormMode_GetSelectedShell_HasSelected, enum class EArmorTypes CallFunc_StormMode_GetSelectedShell_Shell, bool K2Node_SwitchEnum_CmpSuccess_6);
	void DH_UnlockMilestone(class FName ID, int32 PreTier);
	void DH_SetMilestoneProgress(class FName ID, int32 Value, int32 PreTier, int32 CallFunc_MakeLiteralInt_ReturnValue);
	void HandleMilestoneUnlocked(class FName ID, int32 LastUnlockedTier, bool IsConsoleCommand, class FName Local_UnlockID, bool Local_ConsoleCommand, const TArray<int32>& Local_XValues, int32 Local_Tier, class FName Local_ID, bool CallFunc_IsAllShadeUnlocked_bYes, int32 CallFunc_Array_LastIndex_ReturnValue, int32 CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, const struct FStruct_MilestoneUnlock& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, int32 CallFunc_MakeLiteralInt_ReturnValue);
	class FName GetBeatMilestoneNameForShell(enum class EArmorTypes Temp_byte_Variable, class FName Temp_name_Variable, class FName Temp_name_Variable_1, class FName Temp_name_Variable_2, class FName Temp_name_Variable_3, class FName Temp_name_Variable_4, class FName Temp_name_Variable_5, class FName K2Node_Select_Default);
	void Storm_Mode_Reset_Milestones_on_Death(bool Local_Reset, class FName Local_ID, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsMilestoneUnlocked_bUnlocked, int32 CallFunc_IsMilestoneUnlocked_Current, float CallFunc_IsMilestoneUnlocked_Percent, int32 CallFunc_IsMilestoneUnlocked_Tier, TArray<int32>& CallFunc_IsMilestoneUnlocked_TiersX, bool CallFunc_IsMilestoneUnlocked_HasTier, int32 CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const struct FStruct_MilestoneUnlock& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void UpdateMilestonesOnInstinctGained_Internal(int32 Local_WeaponTier, float Local_WeaponProgress, int32 Local_ShellTier, float Local_ShellProgress, class FName Local_WeaponID, class FName Local_ShellID, class FName CallFunc_MakeLiteralName_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_1, class FName CallFunc_MakeLiteralName_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, int32 CallFunc_GetNamedPCInt_Value, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, int32 CallFunc_GetNamedPCInt_Value_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, class FName CallFunc_MakeLiteralName_ReturnValue_2, int32 CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_IsMilestoneUnlocked_bUnlocked, int32 CallFunc_IsMilestoneUnlocked_Current, float CallFunc_IsMilestoneUnlocked_Percent, int32 CallFunc_IsMilestoneUnlocked_Tier, TArray<int32>& CallFunc_IsMilestoneUnlocked_TiersX, bool CallFunc_IsMilestoneUnlocked_HasTier, class FName CallFunc_MakeLiteralName_ReturnValue_3, int32 CallFunc_MakeLiteralInt_ReturnValue_1, bool CallFunc_IsMilestoneUnlocked_bUnlocked_1, int32 CallFunc_IsMilestoneUnlocked_Current_1, float CallFunc_IsMilestoneUnlocked_Percent_1, int32 CallFunc_IsMilestoneUnlocked_Tier_1, TArray<int32>& CallFunc_IsMilestoneUnlocked_TiersX_1, bool CallFunc_IsMilestoneUnlocked_HasTier_1, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base, class FName CallFunc_GetMilestoneCheckID_PillarShell_ID, class FName CallFunc_GetMilestoneCheckID_PillarWeapon_ID);
	void GetMilestoneCheckID_PillarShell(enum class EArmorTypes Shell, class FName* ID, enum class EArmorTypes Temp_byte_Variable, class FName Temp_name_Variable, class FName Temp_name_Variable_1, class FName Temp_name_Variable_2, class FName Temp_name_Variable_3, class FName Temp_name_Variable_4, class FName Temp_name_Variable_5, class FName K2Node_Select_Default);
	void GetMilestoneCheckID_PillarWeapon(enum class EComboTypes Weapon, class FName* ID, enum class EComboTypes Temp_byte_Variable, class FName Temp_name_Variable, class FName Temp_name_Variable_1, class FName Temp_name_Variable_2, class FName Temp_name_Variable_3, class FName Temp_name_Variable_4, class FName Temp_name_Variable_5, class FName Temp_name_Variable_6, class FName K2Node_Select_Default);
	void SetMilestoneProgress(class FName ID, int32 Value, float Local_PreProgress, float Local_PostProgress, int32 Local_UnlockedTier, int32 Local_PostTier, bool Local_PostUnlocked, bool Local_PreUnlocked, int32 Local_Value, class FName Local_ID, int32 PreTier, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, int32 CallFunc_SelectInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, bool CallFunc_Not_PreBool_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, int32 CallFunc_GetNamedPCInt_Value, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, bool CallFunc_IsMilestoneUnlocked_bUnlocked, int32 CallFunc_IsMilestoneUnlocked_Current, float CallFunc_IsMilestoneUnlocked_Percent, int32 CallFunc_IsMilestoneUnlocked_Tier, TArray<int32>& CallFunc_IsMilestoneUnlocked_TiersX, bool CallFunc_IsMilestoneUnlocked_HasTier, bool CallFunc_IsMilestoneUnlocked_bUnlocked_1, int32 CallFunc_IsMilestoneUnlocked_Current_1, float CallFunc_IsMilestoneUnlocked_Percent_1, int32 CallFunc_IsMilestoneUnlocked_Tier_1, TArray<int32>& CallFunc_IsMilestoneUnlocked_TiersX_1, bool CallFunc_IsMilestoneUnlocked_HasTier_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void GetPercentForTier(TArray<int32>& Tiers, int32 Level, int32 CurrentValue, float* Percent, int32 Local_CurrentValue, int32 Local_Tier, const TArray<int32>& Local_Tiers, int32 CallFunc_Array_Get_Item, int32 CallFunc_Subtract_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_Array_Get_Item_1, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Array_Get_Item_2, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_3, float CallFunc_Conv_IntToFloat_ReturnValue_2, int32 CallFunc_Array_Get_Item_3, int32 CallFunc_Subtract_IntInt_ReturnValue_4, bool CallFunc_Array_IsValidIndex_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_3, float CallFunc_Divide_FloatFloat_ReturnValue_1);
	void LoadDataFromBaseGame(bool* Success, class FName Local_LoreEntry, const TArray<class FName>& Local_TutorialsUnlocked, const TArray<class FName>& Local_UnlockedItems_BaseGame, const TArray<class FName>& Local_Lore_Names, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, TArray<class FName>& K2Node_MakeArray_Array, int32 Temp_int_Loop_Counter_Variable_1, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_AddUnique_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue_1, TArray<class FName>& K2Node_MakeArray_Array_1, bool CallFunc_Array_Contains_ReturnValue, class FName Temp_name_Variable, class FName CallFunc_Array_Get_Item_1, int32 CallFunc_Array_AddUnique_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1);
	void DiscoverTeleportTokenItem();
	void StormMode_UpdateCurrentCheckpoint(class FName CurrentMainLevel, class FName CurrentSubLevel, class FName CurrentCheckpoint, const struct FTransform& CurrentCheckpointTransform);
	void UpdateCheckpoint_OnGlandTaken(const struct FTransform& Local_Transform, bool CallFunc_IsValid_ReturnValue, const struct FTransform& CallFunc_GetTeleportTransform_Transform, bool CallFunc_IsValid_ReturnValue_1, bool K2Node_SwitchString_CmpSuccess);
	void CloseReturnPath(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ABP_AreaBlocker_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue, class ABP_AreaBlocker_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void OnChaliceUnlocked_Teleport(bool CallFunc_IsValid_ReturnValue);
	void OnOpenArea_Teleport(class FName ID, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool K2Node_SwitchName_CmpSuccess, TScriptInterface<class IBPI_StormMode_PC_C> K2Node_DynamicCast_AsBPI_Storm_Mode_PC, bool K2Node_DynamicCast_bSuccess, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, TScriptInterface<class IBPI_StormMode_PC_C> K2Node_DynamicCast_AsBPI_Storm_Mode_PC_1, bool K2Node_DynamicCast_bSuccess_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_2, TScriptInterface<class IBPI_StormMode_PC_C> K2Node_DynamicCast_AsBPI_Storm_Mode_PC_2, bool K2Node_DynamicCast_bSuccess_2, class AGameplayGM_C* CallFunc_GetGameModeAsGameplayGM_AsGameplay_GM, class AGameplayGM_C* CallFunc_GetGameModeAsGameplayGM_AsGameplay_GM_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class AGameplayGM_C* CallFunc_GetGameModeAsGameplayGM_AsGameplay_GM_2);
	void OnOpenArea_IncreaseProgress_v2(bool K2Node_SwitchEnum_CmpSuccess);
	bool HasAnyGland_(bool CallFunc_CheckForItem_Success, bool CallFunc_CheckForItem_Success_1, bool CallFunc_CheckForItem_Success_2, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
	void CheckForItem(class FName ItemId, bool* Success, bool CallFunc_HasItem_Success, int32 CallFunc_HasItem_InventorySlot, int32 CallFunc_HasItem_Amount);
	void DH_PrintRunPlaytime(const struct FDateTime& CallFunc_GetRunPlaytime_ReturnValue, class FText CallFunc_GetPlaytimeFromDate_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void AddRunData(int32 Temp_int_Variable, class FName Temp_name_Variable, int32 Temp_int_Variable_1, class FName Temp_name_Variable_1, class FName Temp_name_Variable_2, class FName Temp_name_Variable_3, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const struct FDateTime& CallFunc_GetRunPlaytime_ReturnValue, int32 CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, const struct FStruct_StormModeRun_Data& K2Node_MakeStruct_Struct_StormModeRun_Data, int32 CallFunc_Array_Add_ReturnValue);
	void HandlePlayerHealthOnLoad(bool IsStormModeStart, int32 PlayerMaxHealth, float PlayerHealthFromSave, bool Local_StormModeStart, int32 Temp_int_Variable, int32 Temp_int_Variable_1, int32 Temp_int_Variable_2, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, enum class EArmorTypes Temp_byte_Variable, int32 Temp_int_Variable_3, int32 Temp_int_Variable_4, int32 Temp_int_Variable_5, int32 Temp_int_Variable_6, int32 Temp_int_Variable_7, int32 Temp_int_Variable_8, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_StormMode_GetHasJustStartedRun__Return, int32 Temp_int_Variable_9, int32 Temp_int_Variable_10, int32 K2Node_Select_Default, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 Temp_int_Variable_11, enum class EArmorTypes Temp_byte_Variable_1, bool CallFunc_NotEqual_ByteByte_ReturnValue, int32 K2Node_Select_Default_1);
	void StormMode_SpawnDeathStatue(const struct FStruct_StormModeCheckpointSave& Local_Save, bool CallFunc_WasDarkFormOnDeath_Value, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1, class AUseable_Player_Death_TarVFX_C* CallFunc_FinishSpawningActor_ReturnValue, class AUseable_Player_Death_Statue_C* CallFunc_FinishSpawningActor_ReturnValue_1, const class FString& CallFunc_CheckpointsSlotName_ReturnValue, bool CallFunc_NotEqual_VectorVector_ReturnValue, const class FString& CallFunc_CheckpointsSlotName_ReturnValue_1, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue, class UCheckpointsSave_C* K2Node_DynamicCast_AsCheckpoints_Save, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, class FName CallFunc_GetCurrentPersistentLevelName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	struct FDateTime GetRunPlaytime(int32 CallFunc_FTrunc_ReturnValue, const struct FTimespan& CallFunc_MakeTimespan_ReturnValue, const struct FDateTime& CallFunc_Add_DateTimeTimespan_ReturnValue);
	void IncrementRuneObtained(bool IsBonusRune, class FName Temp_name_Variable, bool CallFunc_Not_PreBool_ReturnValue, class FName Temp_name_Variable_1, class FName Temp_name_Variable_2, class FName Temp_name_Variable_3, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void IncrementAttempCounter(class FName Temp_name_Variable, class FName Temp_name_Variable_1, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void IncrementDeathsCounter(class FName Temp_name_Variable, class FName Temp_name_Variable_1, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	struct FDateTime GetTotalPlaytimeForSave(float CallFunc_GetGameTimeInSeconds_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, const struct FTimespan& CallFunc_MakeTimespan_ReturnValue, const struct FDateTime& CallFunc_Add_DateTimeTimespan_ReturnValue);
	void Process_Damage_Resist(float DamageIn, class UClass* DamageType, float* DamageOut, float Local_StaminaToDeduct, float Local_MaxStaminaAvailable, float Local_Damage_Reduced, class UClass* Local_DamageType, float Local_Damage, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_1, const class FString& CallFunc_Conv_FloatToString_ReturnValue_2, const class FString& CallFunc_Conv_FloatToString_ReturnValue_3, float CallFunc_FClamp_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, float CallFunc_FClamp_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, float CallFunc_FClamp_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_2, bool CallFunc_EqualEqual_ClassClass_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_RandomBoolWithWeight_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_2, float CallFunc_Add_FloatFloat_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_FClamp_ReturnValue_3, float CallFunc_Multiply_FloatFloat_ReturnValue);
	float GetRetainTarUpgradeLevel(class FName Temp_name_Variable, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);
	void StormMode_HandleMoneyOnDeath(bool Local_Remove10K, bool CallFunc_ShouldRemove10KTarOnDeath_Remove, int32 CallFunc_Multiply_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, float CallFunc_GetRetainTarUpgradeLevel_ReturnValue, bool Temp_bool_Variable, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous, class FName CallFunc_GetLostMoneyName_MoneyName, class FName CallFunc_GetMoneyName_MoneyName, bool CallFunc_ShouldLooseMoneyOnDeath_bShould, int32 CallFunc_GetNamedPCInt_Value, float CallFunc_Multiply_IntFloat_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_Clamp_ReturnValue, int32 K2Node_Select_Default);
	void GetSelectedShell(bool Local_FoundValue_, class FName Local_Value, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FName Temp_name_Variable, const class FString& CallFunc_Conv_BoolToString_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool K2Node_SwitchName_CmpSuccess, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void HideInteractText_StormMode(bool CallFunc_IsValid_ReturnValue);
	void OnActorUsed(bool CallFunc_HasAuthority_ReturnValue, class AActor* CallFunc_GetUsableActor_Actor, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_GetIsActorUsable_IsUsable, bool CallFunc_OnActorUsed_Success, bool CallFunc_IsValid_ReturnValue);
	void StormMode_ResetCheckpoints(bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_CheckpointsSlotName_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue);
	void WasDarkFormOnDeath(struct FStruct_StormModeCheckpointSave& Save, bool* Value, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	class FString CheckpointsSlotName(const class FString& CallFunc_Concat_StrStr_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	void ShowRuneNotify(bool Show_, const struct FStruct_Rune& Rune, bool IsBonusRune, bool Local_IsBonusRune, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ABP_RuneFancyNotification_C* CallFunc_FinishSpawningActor_ReturnValue);
	void SaveDeathStatueLocation(const struct FVector& Location, enum class EArmorTypes Local_Shell, const struct FVector& Local_Location, enum class EArmorTypes Temp_byte_Variable, const class FString& CallFunc_CheckpointsSlotName_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base, enum class Enum_ShellDye K2Node_Select_Default, class FName CallFunc_GetCurrentPersistentLevelName_ReturnValue, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_1, class ABarbarous_C* K2Node_DynamicCast_AsBarbarous, bool K2Node_DynamicCast_bSuccess, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue, class UCheckpointsSave_C* CallFunc_CreateSaveGameObject_ReturnValue);
	void LoadCheckpoints(const class FString& CallFunc_CheckpointsSlotName_ReturnValue, const class FString& CallFunc_CheckpointsSlotName_ReturnValue_1, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, class UCheckpointsSave_C* K2Node_DynamicCast_AsCheckpoints_Save, bool K2Node_DynamicCast_bSuccess, bool CallFunc_DoesSaveGameExist_ReturnValue);
	void SaveCheckpoint(class FName Checkpoint, const class FString& Local_LevelName, class FName Local_Checkpoint, bool CallFunc_Not_PreBool_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const class FString& CallFunc_CheckpointsSlotName_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UCheckpointsSave_C* CallFunc_CreateSaveGameObject_ReturnValue);
	void ResetFallgrimAsCurrentCheckpoint();
	void UnlockChaliceIncreaseProgress(bool K2Node_SwitchEnum_CmpSuccess);
	void DebugAreaProgress(const class FString& MainString, enum class Enum_StormModeProgress StormModeProgress, int32 Progress, bool InBool, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_BoolToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5);
	void ResetInventory(int32 Local_ItemIndex, const struct FInventoryItem& Local_Item, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FInventoryItem& Temp_struct_Variable, const struct FInventoryItem& K2Node_MakeStruct_InventoryItem, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_1, const struct FInventoryItem& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_3, bool CallFunc_EqualEqual_NameName_ReturnValue_4, bool CallFunc_EqualEqual_NameName_ReturnValue_5, bool CallFunc_EqualEqual_NameName_ReturnValue_6, bool CallFunc_EqualEqual_NameName_ReturnValue_7, bool CallFunc_EqualEqual_NameName_ReturnValue_8, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_9, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue_10, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_EqualEqual_NameName_ReturnValue_11, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_EqualEqual_NameName_ReturnValue_12, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_EqualEqual_NameName_ReturnValue_13, bool CallFunc_EqualEqual_NameName_ReturnValue_14, bool CallFunc_BooleanOR_ReturnValue_5, bool CallFunc_BooleanOR_ReturnValue_6, bool CallFunc_BooleanOR_ReturnValue_7, bool CallFunc_BooleanOR_ReturnValue_8, bool CallFunc_BooleanOR_ReturnValue_9, bool CallFunc_BooleanOR_ReturnValue_10, bool CallFunc_BooleanOR_ReturnValue_11, bool CallFunc_BooleanOR_ReturnValue_12);
	enum class Enum_InventoryItem_CanUse InventoryUtil_GetCanUseItem(class FName ID, bool UsableInDarkForm, enum class Enum_LuteType Local_Lute, bool Local_UsableInDarkForm, class FName Local_ID, bool K2Node_SwitchName_CmpSuccess, int32 CallFunc_LuteAbilities_Params_Active_Uses, int32 CallFunc_LuteAbilities_Params_Active_Minutes, enum class Enum_InventoryItem_CanUse CallFunc_InventoryUtil_GetCanUseItem_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_Contains_ReturnValue, enum class Enum_InventoryItem_CanUse CallFunc_InventoryUtil_GetCanUseItem_ReturnValue_1, enum class Enum_InventoryItem_CanUse CallFunc_InventoryUtil_GetCanUseItem_ReturnValue_2, bool K2Node_SwitchName_CmpSuccess_1, class FName Temp_name_Variable, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, enum class Enum_InventoryItem_CanUse CallFunc_InventoryUtil_GetCanUseItem_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void ServerSaveGameSaveToDisk(const class FString& InString, const class FString& CallFunc_GetSaveSlot_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue);
	void StormMode_ResetGPData(bool CallFunc_IsValid_ReturnValue, class FName Temp_name_Variable, int32 Temp_int_Variable);
	void OnOpenArea_IncreaseProgress_v1(bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void OpenBlocker(enum class Enum_StormModeArea AreaToOpen, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class ABP_AreaBlocker_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void IncrementAreaProgress(int32 Local_CurrentAreaProgress, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void DebugSavingStormMode(enum class Enum_StormModeProgress Progress_StormMode, enum class EArmorTypes SelectedShell_StormMode, enum class EComboTypes SelectedWeapon_StormMode, class FName CurrentMainLevel_StormMode, class FName CurrentSubLevel_StormMode, class FName CurrentCheckpoint_StormMode, const struct FTransform& CurrentCheckpointTransform_StormMode, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_TransformToString_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue_2, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, const class FString& CallFunc_Concat_StrStr_ReturnValue_11, const class FString& CallFunc_Concat_StrStr_ReturnValue_12, const class FString& CallFunc_Concat_StrStr_ReturnValue_13);
	void LoadStormModeProgress();
	void SpawnDeathStatueAtSavedLocation(const struct FStruct_StormModeCheckpointSave& Local_Save);
	void ServerSaveGame(bool bShouldRestorePlayerTransformOnLoad_, enum class EComboTypes CallFunc_SaveCurrentWeapon_CurrentWeapon, const struct FDateTime& CallFunc_GetRunPlaytime_ReturnValue, const struct FDateTime& CallFunc_Now_ReturnValue, const struct FDateTime& CallFunc_GetTotalPlaytimeForSave_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, TMap<class FName, float> CallFunc_GetSerializedFloats_Floats, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UServerSaveGame_C* CallFunc_CreateSaveGameObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void ServerLoadGame(const class FString& SaveSlotName, bool Local_SaveExist, const class FString& Local_SaveSlot, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_LoadDataFromBaseGame_Success, bool CallFunc_HasAuthority_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, bool CallFunc_IsValid_ReturnValue, bool CallFunc_LoadInventoryItems_Success, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, const class FString& CallFunc_GetSaveSlot_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, class UServerSaveGame_C* K2Node_DynamicCast_AsServer_Save_Game, bool K2Node_DynamicCast_bSuccess, class UServerSaveGame_C* CallFunc_CreateSaveGameObject_ReturnValue);
	void Timeline_Playtime_Run__FinishedFunc();
	void Timeline_Playtime_Run__UpdateFunc();
	void InpActEvt_PausedNav_Up_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_PausedNav_Down_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_PausedNav_Confirm_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_PausedNav_Back_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_PausedNav_Left_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_PausedNav_Right_K2Node_InputActionEvent_0(const struct FKey& Key);
	void LoadStormModeLevel_Fallgrim();
	void LoadStormModeLevel_Crypt();
	void OnLevelShown_Crypt();
	void BndEvt__RuneInventoryComponent_K2Node_ComponentBoundEvent_1_OnChaliceRuneGained__DelegateSignature(class FName ID);
	void SetStormModeEntranceState(enum class Enum_StormModeArea Area, enum class Enum_StormModeAreaState EntranceState);
	void StormMode_SetFallgrimAsCurrentCheckpoint();
	void StormMode_SetGlandData(enum class Enum_StormModeProgress Progress, enum class Enum_StormModeGlandData GlandData);
	void LastChanceSaveStatue();
	void LoadStormModeLevel_Cathedral();
	void OnLevelShown_Cathedral();
	void LoadStormModeLevel_FireTemple();
	void OnLevelShown_FireTemple();
	void StormMode_SetSeeds(const struct FStruct_StormModeSeeds& Seeds);
	void StormMode_ResetOnEndCredits();
	void StormMode_SetSelectedShell(enum class EArmorTypes Shell);
	void StormModeRunStartOrResume();
	void HandleMoneyOnDeath();
	void BndEvt__RuneInventoryComponent_K2Node_ComponentBoundEvent_0_OnOpenNewArea__DelegateSignature(class FName ID);
	void ReceivePossess(class APawn* PossessedPawn);
	void StormMode_ShowRuneNotify(const struct FStruct_Rune& Rune, bool IsBonusRune);
	void Playtime_Start();
	void Playtime_Stop();
	void Playtime_Check();
	void AddProgressRune(const struct FStruct_Rune& Rune);
	void BndEvt__RuneInventoryComponent_K2Node_ComponentBoundEvent_2_OnBossRuneGained__DelegateSignature();
	void BndEvt__RuneInventoryComponent_K2Node_ComponentBoundEvent_3_OnGlandRuneGained__DelegateSignature();
	void StormMode_UpdateCheckpointTransform(const struct FTransform& Checkpoint);
	void OnAreaOpen_TeleportPlayer();
	void ReceiveBeginPlay();
	void StormMode_IncrementAreaProgress();
	void OnChaliceUnlocked_TeleportPlayer();
	void OnLevelShown_Fallgrim();
	void OnGameLoaded();
	void SetStormModeProgress(enum class Enum_StormModeProgress Progress);
	void DeathAfterLastChance(class AActor* Killer);
	void StormMode_DisableWeaponNotify();
	void StormMode_TeleportToNewArea(class FName ID);
	void StormMode_TeleportToChalice();
	void StormMode_FireLevelAsCurrentCheckpoint();
	void StormMode_CryptAsCurrentCheckpoint();
	void StormMode_CathedralAsCurrentCheckpoint();
	void StormMode_CheckpointOnGlandTaken();
	void SetActiveCheckpoint(class FName CurrentCheckpoint, const struct FTransform& CurrentCheckpointTransform, class FName CurrentMainLevel, class FName CurrentSubLevel);
	void StormMode_UIVisibility(bool Show, bool Instant);
	void StormMode_RemoveItemWithNotify(class FName ID, int32 AmountToRemove);
	void StormMode_OnBeaten();
	void StormMode_ResetRunData();
	void IncreaseMilestoneProgress(class FName ID);
	void SetMilestoneProgressIfLess(class FName ID, int32 NewMinVal);
	void UpdateMilestonesOnInstinctGained();
	void OnStormModeProgressChanged();
	void AddNewRune(const struct FStruct_Rune& Rune, bool ShowNotify_, bool IsBonusRune_, bool ForceHealEffect_);
	void StormMode_AddShadeAbility();
	void StormMode_DebugConcurrentEnemy(bool Remove);
	void SaveKiller(class AActor* Killer);
	void StormMode_FinalBossAsCurrentCheckpoint();
	void StormMode_ShowEndWidget();
	void CheckSMBeatenAchievement();
	void OnSisterAudio_Start();
	void OnSisterAudio_End();
	void StormMode_ShowCycleCompletedScreen();
	void StormMode_CompleteCycleAndSave();
	void StormMode_UpdateSelectedWeapon(enum class EComboTypes Weapon);
	void StormMode_UpdateEquippedLute(class FName Lute);
	void ExecuteUbergraph_GameplayPC_StormMode(int32 EntryPoint, bool Temp_bool_Variable, int32 Temp_int_Variable, int32 Temp_int_Variable_1, const struct FKey& K2Node_InputActionEvent_Key_2, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FKey& K2Node_InputActionEvent_Key_1, const struct FKey& K2Node_InputActionEvent_Key, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_IsValid_ReturnValue_8, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, TScriptInterface<class IBPI_StormMode_GM_C> K2Node_DynamicCast_AsBPI_Storm_Mode_GM, bool K2Node_DynamicCast_bSuccess, bool CallFunc_LoadLevelInstance_bOutSuccess, class ULevelStreamingDynamic* CallFunc_LoadLevelInstance_ReturnValue, class FName K2Node_ComponentBoundEvent_ID_1, bool CallFunc_IsValid_ReturnValue_9, enum class Enum_StormModeArea K2Node_Event_Area, enum class Enum_StormModeAreaState K2Node_Event_EntranceState, const struct FKey& K2Node_InputActionEvent_Key_3, const struct FKey& K2Node_InputActionEvent_Key_4, const struct FKey& K2Node_InputActionEvent_Key_5, enum class Enum_StormModeProgress K2Node_Event_Progress_1, enum class Enum_StormModeGlandData K2Node_Event_GlandData, bool CallFunc_IsValid_ReturnValue_10, const struct FVector& CallFunc_GetControlledPawnLocation_ReturnValue, bool CallFunc_LoadLevelInstance_bOutSuccess_1, class ULevelStreamingDynamic* CallFunc_LoadLevelInstance_ReturnValue_1, bool CallFunc_LoadLevelInstance_bOutSuccess_2, class ULevelStreamingDynamic* CallFunc_LoadLevelInstance_ReturnValue_2, const struct FStruct_StormModeSeeds& K2Node_Event_Seeds, enum class EArmorTypes K2Node_Event_Shell, TArray<class ABP_SeedManager_C*>& CallFunc_GetAllActorsOfClass_OutActors, TArray<class ABP_SeedManager_C*>& CallFunc_GetAllActorsOfClass_OutActors_1, class ABP_SeedManager_C* CallFunc_Array_Get_Item, class ABP_SeedManager_C* CallFunc_Array_Get_Item_1, TArray<class ABP_AreaBlocker_C*>& CallFunc_GetAllActorsOfClass_OutActors_2, TArray<class ABP_SeedManager_C*>& CallFunc_GetAllActorsOfClass_OutActors_3, class ABP_SeedManager_C* CallFunc_Array_Get_Item_2, bool CallFunc_IsValid_ReturnValue_11, TArray<class ABP_SeedManager_C*>& CallFunc_GetAllActorsOfClass_OutActors_4, class FName K2Node_ComponentBoundEvent_ID, class ABP_SeedManager_C* CallFunc_Array_Get_Item_3, class APawn* K2Node_Event_PossessedPawn, class ABarbarous_StormMode_C* K2Node_DynamicCast_AsBarbarous_Storm_Mode, bool K2Node_DynamicCast_bSuccess_1, const struct FStruct_Rune& K2Node_Event_Rune_1, bool K2Node_Event_IsBonusRune, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_NotEqual_ByteByte_ReturnValue, const struct FStruct_Rune& K2Node_CustomEvent_Rune, const struct FDateTime& CallFunc_GetRunPlaytime_ReturnValue, bool CallFunc_HasAnyGland__ReturnValue, const struct FTransform& K2Node_Event_Checkpoint, bool CallFunc_Not_PreBool_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, TArray<class ABP_StormMode_Starter_C*>& CallFunc_GetAllActorsOfClass_OutActors_5, bool CallFunc_IsValid_ReturnValue_12, class ABP_StormMode_Starter_C* CallFunc_Array_Get_Item_4, bool CallFunc_IsValid_ReturnValue_13, bool CallFunc_LoadLevelInstance_bOutSuccess_3, class ULevelStreamingDynamic* CallFunc_LoadLevelInstance_ReturnValue_3, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, enum class Enum_StormModeProgress K2Node_Event_Progress, class AActor* K2Node_Event_Killer, class FName K2Node_Event_ID_3, TScriptInterface<class IBPI_StormMode_Character_C> K2Node_DynamicCast_AsBPI_Storm_Mode_Character, bool K2Node_DynamicCast_bSuccess_2, enum class Enum_StormModeArea Temp_byte_Variable, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool K2Node_SwitchName_CmpSuccess_1, class FName K2Node_Event_CurrentCheckpoint, const struct FTransform& K2Node_Event_CurrentCheckpointTransform, class FName K2Node_Event_CurrentMainLevel, class FName K2Node_Event_CurrentSubLevel, bool K2Node_Event_Show, bool K2Node_Event_Instant, bool CallFunc_IsValid_ReturnValue_14, bool CallFunc_IsValid_ReturnValue_15, bool K2Node_SwitchString_CmpSuccess, class FName K2Node_Event_ID_2, int32 K2Node_Event_AmountToRemove, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_RemoveInventoryItem_Success, enum class Enum_StormModeAreaState Temp_byte_Variable_1, class FName K2Node_Event_ID_1, class FName K2Node_Event_ID, int32 K2Node_Event_NewMinVal, int32 CallFunc_GetNamedPCInt_Value, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_GetNamedPCInt_Value_1, bool CallFunc_Less_IntInt_ReturnValue, class FName CallFunc_GetBeatMilestoneNameForShell_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, class FName CallFunc_GetBeatMilestoneNameForShell_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess_2, const struct FStruct_Rune& K2Node_Event_Rune, bool K2Node_Event_ShowNotify_, bool K2Node_Event_IsBonusRune_, bool K2Node_Event_ForceHealEffect_, bool CallFunc_AddNewRune_ReloadRunesForCharacter_, bool K2Node_Event_Remove, class FName CallFunc_GoldenPathDialogueCounterName_PCIntName, int32 K2Node_Select_Default, int32 CallFunc_Add_IntInt_ReturnValue_1, enum class Enum_StormModeArea Temp_byte_Variable_2, class AActor* K2Node_CustomEvent_Killer, bool CallFunc_IsValid_ReturnValue_16, class UClass* CallFunc_GetObjectClass_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, enum class Enum_StormModePlayerKiller CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class FName CallFunc_DeathDial_DiedInSM_PCIntName, class FName CallFunc_Interact_Dial_Talked_Once_This_Run_PCIntName, enum class Enum_StormModeAreaState Temp_byte_Variable_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, enum class Enum_StormModeArea Temp_byte_Variable_4, enum class Enum_StormModeAreaState Temp_byte_Variable_5, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_BooleanAND_ReturnValue, class FName CallFunc_GetBeatMilestoneNameForShell_ReturnValue_2, enum class EComboTypes K2Node_Event_Weapon, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance_1, class FName K2Node_Event_Lute);
	void OnMilestoneUnlocked__DelegateSignature(class FName ID, int32 LastUnlockedTier);
	void StormMode_RuneNotify__DelegateSignature(class UUI_RuneFancyNotification_C* Widget);
	void StormMode_RunStart__DelegateSignature();
};

}


