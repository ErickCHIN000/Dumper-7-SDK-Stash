#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0xA2A (0xFA2 - 0x578)
// BlueprintGeneratedClass GameplayPC.GameplayPC_C
class AGameplayPC_C : public ADHPlayerController
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x578(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UDHConsoleExtensionComponent*          DHConsoleExtension;                                // 0x580(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPCInputDispatcherComponent_C*         PCInputDispatcherComponent;                        // 0x588(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInventoryManagerComponent_C*          InventoryManagerComponent;                         // 0x590(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInventoryComponent_C*        PlayerInventoryComponent;                          // 0x598(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FString                                PlayerSettingsSave;                                // 0x5A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FPlayerInfo                           PlayerSettings;                                    // 0x5B0(0x48)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                         BlockInputs;                                       // 0x5F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_462E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameplayChat_C*                       GamePlayChatWB;                                    // 0x600(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                  SenderText;                                        // 0x608(0x18)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	class FText                                  SenderName;                                        // 0x620(0x18)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	bool                                         IsMouseOverUI;                                     // 0x638(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsShiftKeyDown;                                    // 0x639(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4630[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AZero_Base_C*                          PlayerCharacterReference;                          // 0x640(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNewHUDLayout_C*                       HUDReference;                                      // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsNewFocus;                                        // 0x650(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4631[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastUsableActor;                                   // 0x658(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        MaxUseDistance;                                    // 0x660(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsThirdPersonView;                                 // 0x664(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                         IsUIMode;                                          // 0x665(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsMovementLocked;                                  // 0x666(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4632[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerHealth;                                      // 0x668(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        PlayerMaxHealth;                                   // 0x66C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        HealthTick;                                        // 0x670(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        RegenTickCount;                                    // 0x674(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        RegenDuration;                                     // 0x678(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsPoisoned;                                        // 0x67C(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4635[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RespawnCountdown;                                  // 0x680(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4636[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URespawnTimer_C*                       RespawnWB;                                         // 0x688(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UServerSaveGame_C*                     ServerSaveRef;                                     // 0x690(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                  PlayerName;                                        // 0x698(0x18)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<class FName>                          KnownItems;                                        // 0x6B0(0x10)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	class UGameOver_C*                           GameOverWB;                                        // 0x6C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsGameOver_;                                       // 0x6C8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4638[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                InitialCamera;                                     // 0x6D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         HasArtifact;                                       // 0x6D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_463A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEscapeMenu_C*                         EscapeWB;                                          // 0x6E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsDialogMode;                                      // 0x6E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_463D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  LastKilledBy;                                      // 0x6F0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         DoveIntoDepths;                                    // 0x708(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_463E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalPlayerDeaths;                                 // 0x70C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CurrentQuickAccessSlot;                            // 0x710(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CurrentSigils;                                     // 0x714(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        TotalSigils;                                       // 0x718(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4642[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          UnlockedItems;                                     // 0x720(0x10)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FBottomRightNotificationStruct> CombatTutorial;                                    // 0x730(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                         DoCombatTutorial_;                                 // 0x740(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4643[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBottomRightNotificationStruct> QuickItemTutorial;                                 // 0x748(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FBottomRightNotificationStruct> NotificationQueue;                                 // 0x758(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                         ProcessingNotifications_;                          // 0x768(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         DoQuickItemTutorial_;                              // 0x769(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4644[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InteractRadius;                                    // 0x76C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        CurrentDamageModifier;                             // 0x770(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4645[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBottomRightNotificationStruct> StartingTutorial;                                  // 0x778(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                         HasLichBuff;                                       // 0x788(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         HasDangerZoneBuff;                                 // 0x789(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4646[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageResist;                                      // 0x78C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DefaultDamageResist;                               // 0x790(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        SavedDamageResist;                                 // 0x794(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        SkillCheckUI_Offset;                               // 0x798(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bIsInBossfight_;                                   // 0x79C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_464C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AEnemyCharacter_C*                     CurrentBoss;                                       // 0x7A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCheckpointsSave_C*                    CheckpointSaveRef;                                 // 0x7A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>               Checkpoints;                                       // 0x7B0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            CheckpointsLoaded;                                 // 0x800(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                        EssencesCollected;                                 // 0x810(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_464F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            SaveGameLoaded;                                    // 0x818(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         IsDead_;                                           // 0x828(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4651[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UThrowCrosshairs_C*                    ThrowCrosshairWB;                                  // 0x830(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsUIDisabled_;                                     // 0x838(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsThrowOnCooldown_;                                // 0x839(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         TutorialsEnabled_;                                 // 0x83A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsThrowItemPressed_;                               // 0x83B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                        GameTimeThrowItemPressed;                          // 0x83C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          ThrowTimerDelegate;                                // 0x840(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                        SuperChargedPercent;                               // 0x848(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        StoneChargedPercent;                               // 0x84C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        AOEChargedPercent;                                 // 0x850(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  CurrentMainLevel;                                  // 0x854(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  CurrentSubLevel;                                   // 0x85C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  CurrentCheckpoint;                                 // 0x864(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4655[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CurrentCheckpointTransform;                        // 0x870(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AGameplayGM_C*                         GameModeRef;                                       // 0x8A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CurrentBallistaAmmo;                               // 0x8A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4657[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            PlayerCharTransform;                               // 0x8B0(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                        HadernDefeatedCounter;                             // 0x8E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        PlayerDeathStatueUsedCounter;                      // 0x8E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        GhostShellDeteriorationCounter;                    // 0x8E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               LastDeathSttatueLocation;                          // 0x8EC(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DamageBoostTimer;                                  // 0x8F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DamageBoostReductionPerLoop;                       // 0x8FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DefaultDamageBoostTimer;                           // 0x900(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DefaultDamageBoostReductionPerLoop;                // 0x904(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DamageBoostCap;                                    // 0x908(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DefaultDamageBoostCap;                             // 0x90C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                          CombatPlaytestUnlockedDoors;                       // 0x910(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            StartedTalkingToNPC;                               // 0x920(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            FinishedTalkingToNPC;                              // 0x930(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                          ThrowSuperTimerHandle;                             // 0x940(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBottomRightNotificationStruct> QuickItemTutorial_NoThrow;                         // 0x948(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FBottomRightNotificationStruct> HardenTutorial_1;                                  // 0x958(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FBottomRightNotificationStruct> HardenTutorial_2;                                  // 0x968(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UInteractText_C*                       InteractTextWidget;                                // 0x978(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                     NamedInts;                                         // 0x980(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            OnShellBondingPointsChanged;                       // 0x9D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<int32>                                ShellBondingLevelUpThresholds;                     // 0x9E0(0x10)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                        GamepadCursorInputY;                               // 0x9F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        GamepadCursorInputX;                               // 0x9F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        GamepadCursorSpeed;                                // 0x9F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        PlayerHealthFromSaveFile;                          // 0x9FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreamingDynamic*                MenuLevelStreamInstance;                           // 0xA00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bMenuLevelLoaded;                                  // 0xA08(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         bPossessDelayed;                                   // 0xA09(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4665[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemFamiliarityChanged;                          // 0xA10(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class FName, int32>                     ItemFamiliarity;                                   // 0xA20(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            OnShellEquipped;                                   // 0xA70(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            QueueNotification;                                 // 0xA80(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FBottomRightNotificationStruct> Balistazooka_Tutorial;                             // 0xA90(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FBottomRightNotificationStruct> TarnishedSeal_Tutorial;                            // 0xAA0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                        TempDamageResist;                                  // 0xAB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EArmorTypes                       LastShellEquipped;                                 // 0xAB4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         SaveGameLoaded_;                                   // 0xAB5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         WasPossessedByMenu_;                               // 0xAB6(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4669[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            CharacterPossessed;                                // 0xAB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                        NewGamePlusLevel;                                  // 0xAC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_466A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            DiedInTutorialLevelToHadern;                       // 0xAD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         HasRenouncedShells_;                               // 0xAE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_466C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBriefFadeToBlack_C*                   BriefFadeToBlackWB;                                // 0xAE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                             TotalPlaytime;                                     // 0xAF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnHPRegApplied;                                    // 0xAF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnPlayerHealthChanged;                             // 0xB08(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnPlayerDead;                                      // 0xB18(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	enum class Enum_EquipmentMenuType            EquipmentMenuType;                                 // 0xB28(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_466E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AWaifuNPC_C*                           Cultist;                                           // 0xB30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsOnEquipmentMenu;                                 // 0xB38(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4670[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HealingMultiplier;                                 // 0xB3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        EnemyPoiseCooldownReduction;                       // 0xB40(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DecreaseStaminaInsteadOfHPChance;                  // 0xB44(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_MainMenu_C*                        UI_PauseMenu;                                      // 0xB48(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsOnPauseMenu;                                     // 0xB50(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         bInPhotoMode;                                      // 0xB51(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         bCantOpenPhotoMode;                                // 0xB52(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4673[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABP_PhotoModePawn_C*                   PhotoModePawn;                                     // 0xB58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                 PrePhotoModeControlledPawn;                        // 0xB60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnActiveCheckpointChanged;                         // 0xB68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         IsInLorePopup;                                     // 0xB78(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsInTutorial;                                      // 0xB79(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4678[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          Items_Discovered;                                  // 0xB80(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UUI_Equipment_Menu_C*                  UI_EquipmentMenu;                                  // 0xB90(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EquipmentMenuOpenTransition_C*     BP_EquipmentMenu_Transition;                       // 0xB98(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsTransitioningEquipmentMenu;                      // 0xBA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         bDialogueMixerApplied;                             // 0xBA1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_467B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class FName>               NamedNames;                                        // 0xBA8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                               TempDeathStatueLocation;                           // 0xBF8(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_467E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABP_EquipmentMenuPawn_Inventory_C*     BP_InventoryPawn;                                  // 0xC08(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                          FastTravelWaifus;                                  // 0xC10(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ALevelSequenceActor*                   LevelSequenceActor;                                // 0xC20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkipCutscene_C*                       SkipCutsceneRef;                                   // 0xC28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsInCutscene;                                      // 0xC30(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4680[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABP_EquipmentMenuPawn_C*               BP_EquipmentPawn_Possessed;                        // 0xC38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnCantUseQuickItem;                                // 0xC40(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                        Local_Index;                                       // 0xC50(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4681[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUI_ShellUpgradeMenu_C*                UI_ShellUpgradeMenu;                               // 0xC58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnJustUnlockedName;                                // 0xC60(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAudioComponent*                       Audio_TransitionSound;                             // 0xC70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnWormfishSummoned;                                // 0xC78(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         bWormfishSummoned;                                 // 0xC88(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4682[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPauseEnemyAI;                                    // 0xC90(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FString>                        Cutscenes_Seen;                                    // 0xCA0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                          Tutorials_Unlocked;                                // 0xCB0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AUsable_Branching_NPC_C*               TraderNPC;                                         // 0xCC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMerchantPanel_C*                      UI_MerchantPanel;                                  // 0xCC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnPlayerDeadLastChance;                            // 0xCD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnTrueDeath;                                       // 0xCE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCameraModifier_MotionBlur_C*          CameraModifier_MotionBlur;                         // 0xCF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                       CameraModifier_PixelMode;                          // 0xCF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier_FilmGrain_C*           CameraModifier_FilmGrain;                          // 0xD00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier_Brightness_C*          CameraModifier_Brightness;                         // 0xD08(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnCutsceneStart;                                   // 0xD10(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnCutsceneEnd;                                     // 0xD20(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSoftObjectPtr<class AAmbientSound>          AbilityMenuAmbientMusic;                           // 0xD30(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnShellRetrieved;                                  // 0xD58(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnEscapeMenuPressed;                               // 0xD68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, Deprecated, BlueprintCallable)
	class AUsable_Workbench_C*                   BP_Workbench;                                      // 0xD78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorkbenchPanel_C*                     UI_WorkbenchPanel;                                 // 0xD80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnGlimpsesGained;                                  // 0xD88(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         bIsInDialogue;                                     // 0xD98(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4687[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUI_MerchantPanelNew_C*                UI_MerchantPanel_New;                              // 0xDA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnWeaponChanged;                                   // 0xDA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         Local_UseNew;                                      // 0xDB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4688[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUI_WorkbenchPanelNew_C*               UI_WorkbenchPanelNew;                              // 0xDC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnEquipmentMenuPressed;                            // 0xDC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnHideEnemyAI;                                     // 0xDD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                          Timer_HealthReg;                                   // 0xDE8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         HealthReg_Paused;                                  // 0xDF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_468B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemUnavailable;                                 // 0xDF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnForceReturnToSpawner;                            // 0xE08(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnFadeOutAggroedEnemies;                           // 0xE18(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCameraModifier_FOV_C*                 CameraModifier_FOV;                                // 0xE28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CantUseItems;                                      // 0xE30(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_468C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBallistazookaOpacityChanged;                     // 0xE38(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                          Timer_GameMenuPressed;                             // 0xE48(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         bIgnoreNextEscRelease;                             // 0xE50(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FStruct_ShellDyes                     Struct_ShellDyes;                                  // 0xE51(0x6)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_ShellsDyes_LockState          Struct_DyesLockState;                              // 0xE57(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bHandleNextEscRelease;                             // 0xE6F(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UUI_PhotoModeInputHelper_C*            InputHelperWidget;                                 // 0xE70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            PreLevelSequenceActorCleared;                      // 0xE78(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnPhotoModeChanged;                                // 0xE88(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UUI_FoundlingMenu_C*                   UI_FoundlingMenu;                                  // 0xE98(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACamera_VampireBite_C*                 VampireCamera;                                     // 0xEA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>               HadernShellAbilities;                              // 0xEA8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FText>               HadernShellAbilities_Text;                         // 0xEF8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAudioComponent*                       Audio_TransitionSound_DualSense;                   // 0xF48(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_StormModeUpgradesPanel_C*          UI_StormModeUpgradesPanel;                         // 0xF50(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StormModeUpgradesStation_C*        BP_StormModeUpgradesStation;                       // 0xF58(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StormMode_Starter_C*               BP_StormMode_Starter;                              // 0xF60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_StormMode_Menu_C*                  UI_StormMode_Menu;                                 // 0xF68(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEnemyCharacter_C*                     CurrentSecondBoss;                                 // 0xF70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         HideUI;                                            // 0xF78(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4699[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          StormModeLoreEntries;                              // 0xF80(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnSkinApplyStateChanged;                           // 0xF90(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	enum class EArmorTypes                       LoadedCurrentArmor;                                // 0xFA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EComboTypes                       LoadedWeapon;                                      // 0xFA1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class AGameplayPC_C* GetDefaultObj();

	void PCLoadingScreen_GetItemsDiscovered(TArray<class FName>* ItemsDiscovered, bool* Empty);
	void PCLoadingScreen_GetLoadingScreenInfo(const struct FInventoryItem& InventoryItem, int32* LocalFamiliarity, class FString* ItemEffectDescription, int32 CallFunc_GetItemFamiliarity_Value, const class FString& CallFunc_CreateItemEffectDescription_ReturnValue);
	bool IsSkinApplied(enum class Enum_Skins Skin, class FName CallFunc_GetSkinID_ID, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	bool StormMode_HasLoreEntry(class FName ID, bool CallFunc_Array_Contains_ReturnValue);
	bool GetHideUI();
	void GetMainLevelFromSave_StormMode(class FName* Level, int32 Local_Slot, const class FString& Local_SlotName, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, bool CallFunc_DoesSaveGameExist_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class UServerSaveGame_C* K2Node_DynamicCast_AsServer_Save_Game, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_GetCurrentSaveSlot_Slot);
	void GetMainLevelFromSave(class FName* Level, const class FString& Local_SlotName, int32 Local_Slot, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, bool CallFunc_DoesSaveGameExist_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class UServerSaveGame_C* K2Node_DynamicCast_AsServer_Save_Game, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_GetCurrentSaveSlot_Slot);
	bool GetIsInputBlocked();
	void InventoryUtil_IsTutorialUnlocked_(class FName Tut, bool* Unlocked_, bool CallFunc_Array_Contains_ReturnValue);
	bool GetIsInBossFight();
	void GetHadernAbilityTextFromIndex(int32 Index, bool* InvalidIndex, class FText* Text, class FName Local_Key, class FName CallFunc_GetHadernSkillKeyFromIndex_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, class FText CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void GetHadernAbilityTextFromSlot(enum class Enum_HadernSkills HadernSlot, class FText* Text, class FName CallFunc_GetHadernSkillKeyFromSlot_ReturnValue, class FText CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void GetCurrentHadernAbilityForSlot(enum class Enum_HadernSkills HadernSlot, class FName* AbilityID, class FName CallFunc_GetHadernSkillKeyFromSlot_ReturnValue, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void StormMode_GetCurrentMainLevelFromSave(class FName* Level, class FName Local_Level, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	bool GetEquipmentMenuType(enum class Enum_EquipmentMenuType* Menu);
	bool CanOpenPhotoModeFromPauseMenu(bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_4, bool CallFunc_Not_PreBool_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4);
	bool GetIsInCutscene();
	void GetShellDyesLockState(struct FStruct_ShellsDyes_LockState* LockState);
	bool GetHasRenouncedShell();
	void GetShellDyes(struct FStruct_ShellDyes* Dyes);
	void GetIsInPhotoMode(bool* PhotoMode_);
	void GameplayPC_IsInTutorial(bool* IsInTutorial);
	void InventoryUtil_IsUpgradeUnlocked(class FName UnlockID, bool* Unlocked, bool CallFunc_Array_Contains_ReturnValue);
	enum class Enum_InventoryItem_CanUse InventoryUtil_GetCanUseItem(class FName ID, bool UsableInDarkForm, enum class EComboTypes Local_SummonedWeapon, enum class Enum_InventoryItem_CanUse Local_CanUseItem, enum class EArmorTypes Local_EffigyShell, enum class EComboTypes Local_CurrentWeapon, enum class EArmorTypes Local_CurrentShell, bool Local_HasRenouncedShells_, class AZero_Base_C* Local_0Base, class AGameplayPC_C* Local_GameplayPC, bool Local_UsableInDarkForm, class FName Local_ID, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, class FName CallFunc_GetCurrentPersistentLevelName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, class FName CallFunc_GetCharacterWeaponIDFromEnum_ID, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_CheckPlayerInventoryForGland_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_BooleanOR_ReturnValue_1, class FName Temp_name_Variable, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsShellNameKnown_bKnown, class FName CallFunc_GetShellUnlockID_ShellUnlockID, bool CallFunc_IsUpgradeUnlocked_bUnlocked, bool CallFunc_BooleanAND_ReturnValue);
	void UI_GetContainerItem(int32 ContainerSlot, struct FInventoryItem* InventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem);
	void UI_GetInventoryItemFromSlot(int32 InventorySlot, struct FInventoryItem* InventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_IsValid_ReturnValue);
	void UI_GetWasInputKeyJustPressed(bool* WasKeyPressed, bool CallFunc_WasInputKeyJustPressed_ReturnValue);
	void UI_GetNumPlayerDeaths(int32* TotalPlayerDeaths);
	void UI_Get_InventorySlots(TArray<class UInventory_Slot_C*>* NewParam);
	void UI_Get_PlayerStats(int32* Gold, int32* Damage, int32* Armor, int32* Strength, int32* Dexterity, int32* Intelligence, int32* InventorySize);
	void UI_Get_IsShiftKeyDown(bool* IsShiftKeyDown);
	void LoadCurrentWeaponAndArmor(const struct FInventoryItem& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_1, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_StormModeContentIsEnabled_Enabled_, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, class UGameInstance* CallFunc_GetGameInstance_ReturnValue_1, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_SetInventoryItem_Success, bool CallFunc_StormModeContentIsEnabled_Enabled__1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_2, const struct FInventoryItem& CallFunc_GetMainHandWeapon_EquippedMainHandWeapon, enum class EComboTypes CallFunc_GetCharacterWeaponEnumFromID_Weapon);
	void DH_HideUI(bool CallFunc_Not_PreBool_ReturnValue);
	void SaveShouldEnableSuperStoneForm();
	void LoadShouldEnableSuperStoneForm();
	void SaveRiposteDeflectStacks();
	void LoadRiposteDeflectStacks();
	void SaveParryDeflectStacks();
	void LoadParryDeflectStacks();
	void StormModeMenu_Create(bool CallFunc_IsValid_ReturnValue, class UUI_StormMode_Menu_C* CallFunc_Create_ReturnValue);
	void PossessStormModeMenuActor(bool CallFunc_IsValid_ReturnValue);
	void InterruptVideoSettingsWarning(bool CallFunc_IsValid_ReturnValue);
	void PossessStormModeUpgradesCameraPawn(TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, bool CallFunc_Array_IsValidIndex_ReturnValue, class AActor* CallFunc_Array_Get_Item, class ABP_EquipmentMenuPawn_RunicGate_C* K2Node_DynamicCast_AsBP_Equipment_Menu_Pawn_Runic_Gate, bool K2Node_DynamicCast_bSuccess);
	void PossessStormModeUpgradesPawn();
	void RemoveStormModeUpgradesMenu(bool Condition, bool CallFunc_IsValid_ReturnValue);
	void PossessStormModeUpgradesActor(bool CallFunc_IsValid_ReturnValue);
	void StormModeUpgradesMenu_Create(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_StormModeIsActive_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UUI_StormModeUpgradesPanel_C* CallFunc_Create_ReturnValue);
	void DualSense_TransitionSound_Stop(bool CallFunc_IsValid_ReturnValue);
	void DualSense_TransitionSound_Play(class UAudioComponent* CallFunc_Spawn2DControllerSound_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void ResetCheckpointsSaveData(const class FString& CallFunc_Concat_StrStr_ReturnValue, TMap<class FName, class FName> Temp_name_Variable, bool CallFunc_IsValid_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue);
	void GivePlayerKeyItem_NoNotify(class FName ItemId, const struct FInventoryItem& CallFunc_GetItemFromID_Item, class AGameplayPC_C* CallFunc_GetControllerAsGameplayPC_AsGameplay_PC, bool CallFunc_TryToAddItemToInventory_Success, const struct FInventoryItem& CallFunc_TryToAddItemToInventory_OutItem, int32 CallFunc_TryToAddItemToInventory_AddedToSlot);
	void PossessRunesMenuCameraPawn(TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, bool CallFunc_Array_IsValidIndex_ReturnValue, class AActor* CallFunc_Array_Get_Item, class ABP_EquipmentMenuPawn_Runes_C* K2Node_DynamicCast_AsBP_Equipment_Menu_Pawn_Runes, bool K2Node_DynamicCast_bSuccess);
	void PossessRunesMenuPawn();
	bool IsPhotoModeSpeedChangeInProgress(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue);
	void PhotoMode_ResetCamera(bool CallFunc_IsValid_ReturnValue);
	void FoundlingMenu_Create(bool CallFunc_IsValid_ReturnValue, class UUI_FoundlingMenu_C* CallFunc_Create_ReturnValue);
	void PossessFoundlingMenuCameraPawn(TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, class AActor* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, class ABP_EquipmentMenuPawn_Foundling_C* K2Node_DynamicCast_AsBP_Equipment_Menu_Pawn_Foundling, bool K2Node_DynamicCast_bSuccess);
	void PossessFoundlingMenuPawn();
	class APawn* GetCachedBarbAsPawn();
	void UpdateCantUseItems(bool CantUseItems);
	void TempAspectRatio();
	void RestoreAspectRatio(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_GetAspectRatioConstraint_index, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue);
	void UpdateAspectRatio(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_GetAspectRatioConstraint_index, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue);
	void UpdateCameraModifier_FOV(class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance);
	void AddCameraModifier_FOV(class UCameraModifier* CallFunc_AddNewCameraModifier_ReturnValue, class UCameraModifier_FOV_C* K2Node_DynamicCast_AsCamera_Modifier_FOV, bool K2Node_DynamicCast_bSuccess);
	void InterruptVideoSettingsDirty(bool CallFunc_IsValid_ReturnValue);
	void EquipmentMenuCloseCall();
	void EquipmentMenuOpenCall();
	void UpdateForceFeedbackScale(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetForceFeedbackScale_Scale);
	void UpdateCameraShakeScale(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetCameraShakeScale_Scale);
	void ForceCancelStoneForm();
	void CheckItemFamiliarityAchievement(bool bAllGood, const TArray<class FName>& ItemsToCheck, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class FName>& K2Node_MakeArray_Array, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsPlayerAtMaxFamiliarity__ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void SetIsInDialogue(bool bIsInDialogue, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base);
	void WorkbenchMenu_Create(bool CallFunc_IsValid_ReturnValue, class UUI_WorkbenchPanelNew_C* CallFunc_Create_ReturnValue, class UWorkbenchPanel_C* CallFunc_Create_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1);
	void PossessWorkbenchActor(bool CallFunc_IsValid_ReturnValue);
	void HandleBeginPlayLoadingScreen(class UGameInfoInstance_C* GameInstance, class UGameInfoInstance_C* Local_GameInstance, TScriptInterface<class ILoadingScreenInterface_C> K2Node_DynamicCast_AsLoading_Screen_Interface, bool K2Node_DynamicCast_bSuccess);
	void UpdateIsInCutscene(bool IsInCutscene);
	void UpdateCameraModifier_Brightness(class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance);
	void UpdateCameraModifier_PixelMode(class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance);
	void UpdateCameraModifier_FilmGrain(class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance);
	void UpdateCameraModifier_MotionBlur(class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance);
	void MerchantMenu_Create(bool Local_UseNew, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class UUI_MerchantPanelNew_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, class UMerchantPanel_C* CallFunc_Create_ReturnValue_1);
	void PossessMerchantCameraPawn(bool CallFunc_IsValid_ReturnValue, TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, bool CallFunc_Array_IsValidIndex_ReturnValue, class AActor* CallFunc_Array_Get_Item, class AUsable_Branching_NPC_C* K2Node_DynamicCast_AsUsable_Branching_NPC, bool K2Node_DynamicCast_bSuccess);
	void PossessMerchantPawn();
	void InterruptKeyBindChange();
	void SetItemAsDiscovered(class FName ID, int32 CallFunc_Array_AddUnique_ReturnValue);
	class FString GetSaveSlot(const class FString& CallFunc_Concat_StrStr_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	void AddCameraModifier_Brightness(class UCameraModifier* CallFunc_AddNewCameraModifier_ReturnValue, class UCameraModifier_Brightness_C* K2Node_DynamicCast_AsCamera_Modifier_Brightness, bool K2Node_DynamicCast_bSuccess);
	void UpdateQuickItemSlot(int32 CallFunc_CycleQuickSlot_ReturnIndex, bool CallFunc_CycleQuickSlot_ItemFound, bool CallFunc_CycleQuickSlot_NoValidItem);
	void Sound_Equipment_Menu_Transition_Destroy(bool CallFunc_IsValid_ReturnValue);
	void Sound_Equipment_Menu_Transition(class UAudioComponent* CallFunc_SpawnSound2D_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void CallOnJustUnlockedName();
	void ShellsUpgradeMenu_Create(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class UUI_ShellUpgradeMenu_C* CallFunc_Create_ReturnValue);
	void PauseMenu_Close(bool Sound, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, class UGameInstance* CallFunc_GetGameInstance_ReturnValue_1, class APawn* CallFunc_K2_GetPawn_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance_1, bool K2Node_DynamicCast_bSuccess_1);
	void PauseMenu_Open(class APawn* CallFunc_K2_GetPawn_ReturnValue);
	void SelectPrevActiveItem(bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_CycleQuickSlot_ReturnIndex, bool CallFunc_CycleQuickSlot_ItemFound, bool CallFunc_CycleQuickSlot_NoValidItem);
	void SelectNextActiveItem(int32 Local_Index, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_CycleQuickSlot_ReturnIndex, bool CallFunc_CycleQuickSlot_ItemFound, bool CallFunc_CycleQuickSlot_NoValidItem);
	void ActiveItem_DebugString(const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void QuickActiveItem_Use(class FName Local_ItemID, int32 Local_ID, bool CallFunc_IsFalling_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_4, bool CallFunc_Not_PreBool_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Get_Use_Item_Conditions_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_EqualEqual_NameName_ReturnValue, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_Not_PreBool_ReturnValue_6, bool CallFunc_Not_PreBool_ReturnValue_7, bool CallFunc_Not_PreBool_ReturnValue_8, bool CallFunc_Not_PreBool_ReturnValue_9, bool CallFunc_Not_PreBool_ReturnValue_10, bool CallFunc_Not_PreBool_ReturnValue_11, bool CallFunc_Not_PreBool_ReturnValue_12, bool CallFunc_Not_PreBool_ReturnValue_13, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_6, bool CallFunc_BooleanAND_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue_8, bool CallFunc_BooleanAND_ReturnValue_9, bool CallFunc_UseInventoryItem_ItemUsed, bool CallFunc_BooleanAND_ReturnValue_10, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_NotEqual_NameName_ReturnValue, int32 CallFunc_GetItemIDFromQuickAccessSlot_ItemId, bool CallFunc_GetItemIDFromQuickAccessSlot_bValidItem);
	void EquipmentMenu_DestroyTransition(bool CallFunc_IsValid_ReturnValue);
	void ApplyResolutionScale(const class FString& CallFunc_Concat_StrStr_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, class APlayerController* CallFunc_GetPlayerController_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	void SkippingCutscene(enum class Enum_Cutscene_SkipType InputPin, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue, class ULevelSequencePlayer* CallFunc_GetSequencePlayer_ReturnValue, bool CallFunc_IsPlaying_ReturnValue, const struct FQualifiedFrameTime& CallFunc_GetEndTime_ReturnValue, const struct FFrameNumber& CallFunc_BreakQualifiedFrameTime_Frame, const struct FFrameRate& CallFunc_BreakQualifiedFrameTime_FrameRate, float CallFunc_BreakQualifiedFrameTime_SubFrame, const struct FFrameTime& K2Node_MakeStruct_FrameTime, const struct FFrameTime& K2Node_MakeStruct_FrameTime_1, const struct FFrameTime& K2Node_MakeStruct_FrameTime_2);
	void EquipmentMenu_Possess(bool K2Node_SwitchEnum_CmpSuccess);
	void EquipmentMenu_PossessDelayed(bool K2Node_SwitchEnum_CmpSuccess);
	void UpdateDeathStatueLocTimer(FDelegateProperty_ Delegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	void AddCameraModifier_PixelMode(class UCameraModifier* CallFunc_AddNewCameraModifier_ReturnValue);
	void AddCameraModifier_FilmGrain(class UCameraModifier* CallFunc_AddNewCameraModifier_ReturnValue, class UCameraModifier_FilmGrain_C* K2Node_DynamicCast_AsCamera_Modifier_Film_Grain, bool K2Node_DynamicCast_bSuccess);
	void AddCameraModifier_MotionBlur(class UCameraModifier* CallFunc_AddNewCameraModifier_ReturnValue, class UCameraModifier_MotionBlur_C* K2Node_DynamicCast_AsCamera_Modifier_Motion_Blur, bool K2Node_DynamicCast_bSuccess);
	void UpdateDeathStatueLoc(bool Local_Debug, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	void EquipmentMenu_Sound_Close(bool Condition);
	bool DidCharacterDieInTutorialLevel_(class UObject* Object, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, TScriptInterface<class IEnemyCommonInterface_C> K2Node_DynamicCast_AsEnemy_Common_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BossCharacterHadern_IsHadern_IsHadern, class FName CallFunc_GetCurrentPersistentLevelName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void CreateEquipmentMenu(class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UUI_Equipment_Menu_C* CallFunc_Create_ReturnValue);
	void HUD_Show(bool Instant, bool NoHideNotifies, class AHUD* CallFunc_GetHUD_ReturnValue, class AYourHUD_C* K2Node_DynamicCast_AsYour_HUD, bool K2Node_DynamicCast_bSuccess);
	void HUD_Hide(bool Instant, bool NoHideNotifies, class AHUD* CallFunc_GetHUD_ReturnValue, class AYourHUD_C* K2Node_DynamicCast_AsYour_HUD, bool K2Node_DynamicCast_bSuccess);
	void EquipmentMenu_Close(bool CloseSound, bool Local_CloseSound, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue_6);
	void PossessShellsMenuPawn();
	void PossessShellsMenuCameraPawn(TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, bool CallFunc_Array_IsValidIndex_ReturnValue, class AActor* CallFunc_Array_Get_Item, class ABP_EquipmentMenuPawn_Shells_C* K2Node_DynamicCast_AsBP_Equipment_Menu_Pawn_Shells, bool K2Node_DynamicCast_bSuccess);
	void SetSerializedFloats(TMap<class FName, float> Floats, class FName Temp_name_Variable, class FName Temp_name_Variable_1, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base);
	void GetSerializedFloats(TMap<class FName, float>* Floats, class AZero_Base_C* Local_0Base, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base, TMap<class FName, float> K2Node_MakeMap_Map, bool CallFunc_IsValid_ReturnValue);
	void PauseMenu_Remove(bool Sound, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue);
	void PauseMenu_Create(class UUI_MainMenu_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue);
	void PossessWaifuMenuCameraPawn(enum class Enum_EquipmentMenuType EquipmentMenuType, TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, bool CallFunc_Array_IsValidIndex_ReturnValue, class AActor* CallFunc_Array_Get_Item, class ABP_EquipmentMenuPawn_Abilities_C* K2Node_DynamicCast_AsBP_Equipment_Menu_Pawn_Abilities, bool K2Node_DynamicCast_bSuccess);
	void PossessWaifuMenuPawn(enum class Enum_EquipmentMenuType EquipmentMenuType);
	void EnableCharacterInputs(class APawn* CallFunc_K2_GetPawn_ReturnValue);
	void DisableCharacterInputs(class APawn* CallFunc_K2_GetPawn_ReturnValue);
	void ConsumeTransitionEffect(FDelegateProperty_& OnFinished, FDelegateProperty_& OnEnd, class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ABP_EquipmentMenuOpenTransition_C* CallFunc_FinishSpawningActor_ReturnValue);
	void LockAllShells(class FName CallFunc_GetShellUnlockID_ShellUnlockID, class FName CallFunc_GetShellUnlockID_ShellUnlockID_1, class FName CallFunc_GetShellUnlockID_ShellUnlockID_2, class FName CallFunc_GetShellUnlockID_ShellUnlockID_3, class FName CallFunc_GetShellUnlockID_ShellUnlockID_4);
	void ShowFancyNotification(class FText Heading, class FText Text, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ABP_FancyNotification_C* CallFunc_FinishSpawningActor_ReturnValue);
	void Notification(class UTexture2D* Icon, class FText NotificationText, class FText Name, class FText Description, bool ShowFamiliarity, bool AnimateLastDiamond, int32 PreviousFamiliarity, int32 CurrentFamiliarity, int32 MaxFamiliarity, const struct FToolTipInfo& K2Node_MakeStruct_ToolTipInfo);
	void RemoveInventoryItem(class FName ItemId, int32 AmountToRemove, bool* Success, enum class Enum_MiscTexts Local_RemovedItemText, const struct FInventoryItem& RemovedItem, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, bool CallFunc_HasItem_Success, int32 CallFunc_HasItem_InventorySlot, int32 CallFunc_HasItem_Amount, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_RemoveFromItemAmount_WasFullAmountRemoved, const struct FInventoryItem& CallFunc_RemoveFromItemAmount_OutnventoryItem, int32 CallFunc_RemoveFromItemAmount_AmountRemoved);
	void SetUIModeAndInput(bool UIMode, bool bWithVirtualCursor, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue);
	void PossessInventoryMenuPawn();
	void GivePlayerKeyItem(class FName ItemId, const struct FInventoryItem& CallFunc_GetItemFromID_Item, class AGameplayPC_C* CallFunc_GetControllerAsGameplayPC_AsGameplay_PC, bool CallFunc_TryToAddItemToInventory_Success, const struct FInventoryItem& CallFunc_TryToAddItemToInventory_OutItem, int32 CallFunc_TryToAddItemToInventory_AddedToSlot);
	void PossessInventoryMenuCameraPawn(TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, class AActor* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, class ABP_EquipmentMenuPawn_Inventory_C* K2Node_DynamicCast_AsBP_Equipment_Menu_Pawn_Inventory, bool K2Node_DynamicCast_bSuccess);
	void HandleGamepadCursorMovement();
	void SetDangliesOnHeavyShell(class FName CallFunc_MakeLiteralName_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue_1, class FName CallFunc_MakeLiteralName_ReturnValue_2, class FName CallFunc_MakeLiteralName_ReturnValue_3, class FName CallFunc_MakeLiteralName_ReturnValue_4, class FName CallFunc_MakeLiteralName_ReturnValue_5, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base);
	void GetInteractTextWidget(class UInteractText_C** InteractTextWidget, bool CallFunc_IsValid_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class UInteractText_C* CallFunc_Create_ReturnValue);
	void UpdateVisibilityOnAllUsableUpgrades(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ABPUsableUpgradeUnlock_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue, class ABPUsableUpgradeUnlock_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void UpdateVisibilityOnAllWeapons(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class AUsable_Weapon_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue, class AUsable_Weapon_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void DisplayShellRecallNotify();
	void NotifyBossFightEnded();
	void NotifyBossFightStarted();
	void ShouldRestorePlayerLocationOnNextLoad_(enum class EEndPlayReason EndPlayReason, bool* RestoreOnNextLoad, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue);
	void EquipArmor(enum class EArmorTypes ArmorType, bool bReinitPose, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class USkeletalMesh* CallFunc_GetMeshForArmorType_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, class USword_AnimBP2v3_C* K2Node_DynamicCast_AsSword_Anim_BP2v_3, bool K2Node_DynamicCast_bSuccess);
	void CheckShouldStartThrow_(bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void SetIsDead(class APawn* CallFunc_K2_GetPawn_ReturnValue, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess);
	struct FVector GetControlledPawnLocation(class APawn* CallFunc_K2_GetPawn_ReturnValue, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void SpawnDeathStatueAtSavedLocation(const class FString& CallFunc_Concat_StrStr_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, bool CallFunc_Not_PreBool_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class FName CallFunc_GetCurrentPersistentLevelName_ReturnValue, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue, class UCheckpointsSave_C* K2Node_DynamicCast_AsCheckpoints_Save, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_VectorVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AUseable_Player_Death_TarVFX_C* CallFunc_FinishSpawningActor_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1, class AUseable_Player_Death_Statue_C* CallFunc_FinishSpawningActor_ReturnValue_1);
	void SaveDeathStatueLocation(const struct FVector& Location, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base, class ABarbarous_C* K2Node_DynamicCast_AsBarbarous, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_Conv_IntToString_ReturnValue, class FName CallFunc_GetCurrentPersistentLevelName_ReturnValue, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, enum class EArmorTypes Temp_byte_Variable, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue, enum class Enum_ShellDye K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, class UCheckpointsSave_C* CallFunc_CreateSaveGameObject_ReturnValue);
	void LoadCheckpoints(const class FString& CallFunc_Concat_StrStr_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_DoesSaveGameExist_ReturnValue, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, class UCheckpointsSave_C* K2Node_DynamicCast_AsCheckpoints_Save, bool K2Node_DynamicCast_bSuccess);
	void SaveCheckpoint(class FName Checkpoint, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UCheckpointsSave_C* CallFunc_CreateSaveGameObject_ReturnValue);
	void ResetInstanceBuffs(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess);
	void GetCurrentMap(class FName* CurrentMap, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess);
	void ShowDemoRestartWidget(class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class UPlayerDeathNew_C* CallFunc_Create_ReturnValue, class ABP_DeathEffect_C* CallFunc_FinishSpawningActor_ReturnValue);
	void IsKeyboardMode_(bool* IsKeyboardMode, class UKeyboardModeNotifierComponent_C* CallFunc_GetKeyboardModeNotifier_KeyboardModeNotifier);
	void DropMainHandWeapon(bool CallFunc_ClearInventoryItem_Success, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_IsValid_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AInvModularWeapon_C* CallFunc_FinishSpawningActor_ReturnValue);
	void GetBuffsFromGameInstance(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess);
	void Process_Damage_Resist(float DamageIn, class UClass* DamageType, float* DamageOut, float RetValue, bool Temp_bool_Variable, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_2, bool CallFunc_EqualEqual_ClassClass_ReturnValue_3, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_RandomFloat_ReturnValue, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue_2, float CallFunc_Add_FloatFloat_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_FMax_ReturnValue);
	void ProcessLichBuff(int32 CallFunc_Add_IntInt_ReturnValue);
	void ResetMultipliers(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess);
	void HideContainerLootLabel();
	void ShowContainerLootLabel();
	void RotatePlayerToFirstNavPoint(bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ANavPointSpawner_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue, class ANavPointSpawner_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_K2_SetActorRotation_ReturnValue);
	void IsItemIdentifiedByID(class FName ID, bool* IsIdentified, const struct FInventoryItem& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
	void GetInvItemFromSlot(int32 GetSlotItemInfo, struct FItemInformation* ItemInfo, const struct FItemInformation& K2Node_MakeStruct_ItemInformation, const struct FItemInformation& K2Node_MakeStruct_ItemInformation_1, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FItemInformation& K2Node_MakeStruct_ItemInformation_2, bool CallFunc_Array_Contains_ReturnValue);
	void SaveUnlocks(class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue, class AGamePlayPlayerState_C* K2Node_DynamicCast_AsGame_Play_Player_State, bool K2Node_DynamicCast_bSuccess, class UUnlocksSave_C* CallFunc_CreateSaveGameObject_ReturnValue, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue_1, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_2, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_2, bool CallFunc_DoesSaveGameExist_ReturnValue);
	void CheckForUnlocks(class FName ItemToUnlock, bool CallFunc_NotEqual_NameName_ReturnValue, const struct FInventoryItem& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, const struct FToolTipInfo& K2Node_MakeStruct_ToolTipInfo, int32 CallFunc_Array_AddUnique_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool K2Node_SwitchString_CmpSuccess);
	void ClientUnlockNotification(const struct FToolTipInfo& ToolTipInfo, const struct FToolTipInfo& TempTooltip, class FText CallFunc_Conv_IntToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void SetStartingItems(const struct FInventoryItem& NewLocalVar_0, const struct FInventoryItem& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_SetInventoryItem_Success, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_GetInventoryItemCount_ItemCount, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void GetActiveItemInfo(int32 GetSlotItemInfo, struct FItemInformation* ItemInfo, struct FInventoryItem* FullItem, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, const struct FItemInformation& K2Node_MakeStruct_ItemInformation);
	void UpdateActiveItemWidget(bool NoValidItem, bool AutoCheckValidItem, bool Temp_bool_Variable, enum class ESlateVisibility Temp_byte_Variable, int32 CallFunc_GetItemIDFromQuickAccessSlot_ItemId, bool CallFunc_GetItemIDFromQuickAccessSlot_bValidItem, enum class ESlateVisibility Temp_byte_Variable_1, bool K2Node_Select_Default, const struct FItemInformation& CallFunc_GetActiveItemInfo_ItemInfo, const struct FInventoryItem& CallFunc_GetActiveItemInfo_FullItem, bool Temp_bool_Variable_1, enum class ESlateVisibility K2Node_Select_Default_1);
	void GetNumPlayerDeaths(int32* TotalPlayerDeaths);
	void SetDialogMode(bool IsDialogMode);
	void IsSinglePlayer(bool* IsSinglePlayer, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess);
	void SetCurrentFloor(int32 CurrentFloor, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess);
	void GetHighScores(class FText* HighScores, const class FString& HighScoreList, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, class UHighScoresSave_C* K2Node_DynamicCast_AsHigh_Scores_Save, bool K2Node_DynamicCast_bSuccess, const struct FHighScoreStruct& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, int32 CallFunc_BreakDateTime_Year, int32 CallFunc_BreakDateTime_Month, int32 CallFunc_BreakDateTime_Day, int32 CallFunc_BreakDateTime_Hour, int32 CallFunc_BreakDateTime_Minute, int32 CallFunc_BreakDateTime_Second, int32 CallFunc_BreakDateTime_Millisecond, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, class FText CallFunc_Conv_IntToText_ReturnValue_2, class FText CallFunc_Conv_IntToText_ReturnValue_3, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_5, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	void ShowHighScores(class FText CallFunc_GetHighScores_HighScores, class UHighScores_C* CallFunc_Create_ReturnValue);
	void GetCurrentFloor(int32* CurrentFloor, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess);
	void UpdateHighScores(class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_2, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_3, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_2, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_3, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue, class UHighScoresSave_C* K2Node_DynamicCast_AsHigh_Scores_Save, bool K2Node_DynamicCast_bSuccess, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue, const struct FDateTime& CallFunc_Now_ReturnValue, const struct FDateTime& CallFunc_Now_ReturnValue_1, int32 CallFunc_GetCurrentFloor_CurrentFloor, class FText CallFunc_Conv_IntToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, int32 CallFunc_GetCurrentFloor_CurrentFloor_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Conv_IntToText_ReturnValue_1, class FText CallFunc_Format_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, const struct FHighScoreStruct& K2Node_MakeStruct_HighScoreStruct, class UHighScoresSave_C* CallFunc_CreateSaveGameObject_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue, const struct FHighScoreStruct& K2Node_MakeStruct_HighScoreStruct_1, int32 CallFunc_Array_Add_ReturnValue_1);
	void ShowCharacterDialog();
	void SetPlayerHealth(float NewHealthValue, float LocPreviousHealth, bool CallFunc_IsValid_ReturnValue);
	void ClientCenterNotification(class FText NotificationHeading, class FText NotificationDetails, class FText NotificationFlavor, float NotificationTime, class AHUD* CallFunc_GetHUD_ReturnValue, const struct FDHCenterNotification& K2Node_MakeStruct_DHCenterNotification, class AYourHUD_C* K2Node_DynamicCast_AsYour_HUD, bool K2Node_DynamicCast_bSuccess);
	void ChangeCameraTarget(class AActor* ActorToTarget, float BlendTime, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AGamePlayGameState_C* K2Node_DynamicCast_AsGame_Play_Game_State, bool K2Node_DynamicCast_bSuccess);
	void UpdateCamera();
	void RestartGame(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Length_ReturnValue, class APlayerController* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void StoreGameplayPC(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void ShowGameOverWidget(bool CallFunc_HasAuthority_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AGamePlayGameState_C* K2Node_DynamicCast_AsGame_Play_Game_State, bool K2Node_DynamicCast_bSuccess, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameOver_C* CallFunc_Create_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess_1, class UGameInstance* CallFunc_GetGameInstance_ReturnValue_1, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance_1, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void ClientMakeSlotBlinky(bool IsBlinky_, int32 InventorySlot, class UInventory_Slot_C* CallFunc_Array_Get_Item);
	void IdentifyItem(class FName ItemId, class FText LogText, const struct FInventoryItem& InventoryItem, class FName Local_ID, const struct FToolTipInfo& K2Node_MakeStruct_ToolTipInfo, int32 CallFunc_GetItemMaxFamiliarity_MaxFamiliarity, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void ClientNotification(const struct FToolTipInfo& ToolTipInfo, class FName ItemId, bool UseNotify, bool ManualNotify, bool Local_ManualNotify, bool Local_UseNotify, class ABarbarous_C* Local_Barbarous, class FName Local_ItemID, const struct FToolTipInfo& Local_ToolTipInfo, int32 NewFamiliarity, int32 PreviousFamiliarity, bool K2Node_SwitchName_CmpSuccess, int32 CallFunc_GetItemMaxFamiliarity_MaxFamiliarity, class ABarbarous_C* K2Node_DynamicCast_AsBarbarous, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Variable, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, int32 Temp_int_Variable_1, bool Temp_bool_Variable, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 K2Node_Select_Default, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsPlayerAtMaxFamiliarity__ReturnValue, bool CallFunc_IsPlayerAtMaxFamiliarity__ReturnValue_1, bool CallFunc_IsPlayerAtMaxFamiliarity__ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void ServerEndScrollIdentify(int32 InventorySlot, int32 Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, TArray<struct FInventoryItem>& CallFunc_GetInventoryItems_InventoryItems, int32 CallFunc_Add_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Less_IntInt_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void IdentifyItemUIBlink();
	void ServerScrollIdentify(int32 ScrollSlot, int32 Temp_int_Array_Index_Variable, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FInventoryItem>& CallFunc_GetInventoryItems_InventoryItems, int32 CallFunc_Array_Length_ReturnValue, const struct FInventoryItem& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_Array_Contains_ReturnValue);
	void IdentifyPotion(class FName PotionToIdentify, int32 CallFunc_Array_AddUnique_ReturnValue);
	void LoadPotionArray(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void ServerLoadGame(const class FString& SaveSlotName, bool Local_SaveExist, const class FString& Local_SaveSlot, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, bool CallFunc_HasAuthority_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance_1, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance_2, bool CallFunc_DoesSaveGameExist_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance_3, class FText CallFunc_Conv_BoolToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, const class FString& CallFunc_GetSaveSlot_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, class FText CallFunc_Conv_StringToText_ReturnValue_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_5, class FText CallFunc_Format_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FText CallFunc_Format_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, bool Temp_bool_Variable, class UServerSaveGame_C* K2Node_DynamicCast_AsServer_Save_Game, bool K2Node_DynamicCast_bSuccess, TMap<class FName, float> CallFunc_GetSerializedFloats_Floats, class FName Temp_name_Variable, class FName Temp_name_Variable_1, class FName Temp_name_Variable_2, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UServerSaveGame_C* CallFunc_CreateSaveGameObject_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, TArray<struct FInventoryItem>& CallFunc_GetInventoryItems_InventoryItems, const struct FServerSaveFile& K2Node_MakeStruct_ServerSaveFile, const struct FServerSaveFile& K2Node_Select_Default, class FName CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, class FName CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, bool CallFunc_LoadInventoryItems_Success, bool CallFunc_IsValid_ReturnValue);
	void ServerSaveGame(bool bShouldRestorePlayerTransformOnLoad_, class UDHGameInstance* CallFunc_GetInstance_ReturnValue, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, TMap<class FName, float> CallFunc_GetSerializedFloats_Floats, float CallFunc_GetGameTimeInSeconds_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, const struct FDateTime& CallFunc_Now_ReturnValue, const struct FTimespan& CallFunc_MakeTimespan_ReturnValue, const struct FDateTime& CallFunc_Add_DateTimeTimespan_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Conv_TransformToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue, TArray<struct FInventoryItem>& CallFunc_GetInventoryItems_InventoryItems, class UServerSaveGame_C* CallFunc_CreateSaveGameObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void ShowRespawnWidget(class URespawnTimer_C* CallFunc_Create_ReturnValue, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class FText CallFunc_Conv_IntToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, bool CallFunc_EqualEqual_IntInt_ReturnValue, class FText CallFunc_Format_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue);
	void PlayerDeath(float CallFunc_Conv_IntToFloat_ReturnValue);
	void ServerSetHealth(int32 Amount, float Duration, bool* Success, float LocalDuration, int32 LocalAmount, bool CallFunc_Greater_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, int32 K2Node_Select_Default, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Round_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Clamp_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_2);
	void SetUIMode(bool UIMode, bool bWithVirtualCursor, bool bForceMouse, bool CallFunc_BooleanOR_ReturnValue);
	void ClientInitInventoryNoHUD();
	void HideInteractText(bool CallFunc_IsValid_ReturnValue);
	void ShowInteractText(class AActor* UsableActor, class UInteractText_C* CallFunc_GetInteractTextWidget_InteractTextWidget, bool CallFunc_TextIsEmpty_ReturnValue);
	void GetActorActionText(class AUsable_Actor_C* UsableActor, class FText* Text, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void SetInteractText(class FText Text, class UInteractText_C* CallFunc_GetInteractTextWidget_InteractTextWidget);
	void ClientInitializeInventory();
	void GetPossessedPlayerCharacter(class AZero_Base_C** PlayerCharacter, class APawn* CallFunc_K2_GetPawn_ReturnValue, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess);
	void OnRep_IsThirdPersonView();
	void SetPlayerViewMode(bool SetThirdPerson, class AZero_Base_C* CallFunc_GetPossessedPlayerCharacter_PlayerCharacter, const struct FHitResult& CallFunc_K2_AddLocalOffset_SweepHitResult, const struct FHitResult& CallFunc_K2_AddLocalOffset_SweepHitResult_1);
	void GetUsableActorFocus(class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base, bool CallFunc_GetUseInteractibleConditions_ReturnValue, class AActor* CallFunc_GetUsableActor_Actor, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_EndOutlineFocus_Success, bool CallFunc_GetIsActorUsable_IsUsable, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface_2, bool K2Node_DynamicCast_bSuccess_2, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface_3, bool K2Node_DynamicCast_bSuccess_3, class FText CallFunc_GetUnidentifiedText_UnidentifiedText, bool CallFunc_EndOutlineFocus_Success_1, bool CallFunc_IsValid_ReturnValue_2, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface_4, bool K2Node_DynamicCast_bSuccess_4, class FName CallFunc_GetID_ID, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface_5, bool K2Node_DynamicCast_bSuccess_5, class FText CallFunc_GetUseActionText_ActionText, bool CallFunc_IsItemIdentifiedByID_IsIdentified, bool CallFunc_Array_Contains_ReturnValue, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface_6, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BeginOutlineFocus_Success, class AUsable_Actor_C* K2Node_DynamicCast_AsUsable_Actor, bool K2Node_DynamicCast_bSuccess_7, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void GetUsableActor(class AActor** Actor, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetUseInteractibleConditions_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class AZero_Base_C* CallFunc_GetPossessedPlayerCharacter_PlayerCharacter, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array_1, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_CapsuleTraceSingleForObjects_OutHit, bool CallFunc_CapsuleTraceSingleForObjects_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_DoesImplementInterface_ReturnValue, class AEnemyCharacter_C* K2Node_DynamicCast_AsEnemy_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue);
	void OnActorUsed(bool CallFunc_HasAuthority_ReturnValue, class AActor* CallFunc_GetUsableActor_Actor, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IUsableActorInterface_C> K2Node_DynamicCast_AsUsable_Actor_Interface_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_GetIsActorUsable_IsUsable, bool CallFunc_OnActorUsed_Success, bool CallFunc_IsValid_ReturnValue);
	void InitializePlayer(class APawn* CallFunc_K2_GetPawn_ReturnValue, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess);
	void LoadGame(class UDHGameInstance* CallFunc_GetInstance_ReturnValue, int32 CallFunc_GetPrimaryUserIndex_ReturnValue, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_1, class UDHGameInstance* CallFunc_GetInstance_ReturnValue_2, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_1, int32 CallFunc_GetPrimaryUserIndex_ReturnValue_2, const struct FPlayerInfo& K2Node_MakeStruct_PlayerInfo, class UPlayerSaveGame_C* CallFunc_CreateSaveGameObject_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_DHSaveGameToSlot_Asynch_ReturnValue, class USaveGame* CallFunc_DHLoadGameFromSlot_ReturnValue, class UPlayerSaveGame_C* K2Node_DynamicCast_AsPlayer_Save_Game, bool K2Node_DynamicCast_bSuccess, bool CallFunc_DoesSaveGameExist_ReturnValue);
	void InpActEvt_NextLuteMusic_K2Node_InputActionEvent_8(const struct FKey& Key);
	void InpActEvt_PrevLuteMusic_K2Node_InputActionEvent_7(const struct FKey& Key);
	void InpActEvt_Loot_K2Node_InputActionEvent_6(const struct FKey& Key);
	void InpActEvt_ToggleInventoryUI_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_UseActiveItem_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_PrevActiveItem_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_NextActiveItem_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_GameMenu_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_GameMenu_K2Node_InputActionEvent_0(const struct FKey& Key);
	void OnStartTalkingToNPC(bool bDampenAudio);
	void OnFinishTalkingToNPC();
	void UpdateDeathStatueLocation_Set();
	void UpdateDeathStatueLocation_Bind();
	void OnLevelShown_Bind();
	void SkipCutscene(enum class Enum_Cutscene_SkipType StopType);
	void ForceCloseEquipmentMenu(bool CloseSound);
	void SetActiveCheckpoint(class FName CurrentCheckpoint, const struct FTransform& CurrentCheckpointTransform, class FName CurrentMainLevel, class FName CurrentSubLevel);
	void OnWormfishSummoned_Bind();
	void OnWormFishSummoned_Set();
	void SetSkylightVisibility(bool Visibility);
	void UI_PauseMenuResume();
	void CameraModifier_UpdateFilmGrain();
	void CameraModifier_UpdateBrightness();
	void CameraModifier_UpdatePixelMode();
	void CameraModifier_UpdateMotionBlur();
	void EscapeMenu_OnClose();
	void EscapeMenu_OnOpen();
	void SetLevelHeightFogHidden(bool NewHidden);
	void OnWeaponChange(int32 Index, bool IsChangingWeaponMode);
	void OnDamage_Bind();
	void OnDamage_Unbind();
	void OnDamageTakenWithDamageType(class UClass* DamageType);
	void OnDeath_Bind();
	void OnDeath_Set();
	void OnDeath_Unbind();
	void SetCameraShake(float Scale);
	void SetForceFeedback(float Scale);
	void UI_DebugLineEntry(class AActor* Actor, const class FString& DebugLine);
	void UpdateAspectRationConstraint(int32 Index);
	void CameraModifier_UpdateFOV();
	void UpdateBallistazookaOpacity(float Opacity);
	void SetShellDyes(const struct FStruct_ShellDyes& Dyes);
	void SetShellDyesLockState(const struct FStruct_ShellsDyes_LockState& LockState);
	void AddInputHelperWidget();
	void ClearLevelSequenceActor();
	void ResetPhotoModeCamera();
	void ResetCheckpointsSave();
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void SetNewGamePlusLevel(int32 Level);
	void SetInputBlocked(bool bLock);
	void StormMode_UnlockLoreEntry(class FName ID);
	void PlayerControllerUtils_SetHadernDefeatCounter(int32 NewCounter);
	void PlayerControllerUtils_SetGhostShellDeteriorationCounter(int32 Count);
	void InventoryUtil_LockUpgrade(class FName ItemName);
	void InventoryUtil_UnlockUpgrade(class FName ItemName);
	void InventoryUtil_SwitchArmor(int32 ArmorID);
	void InventoryUtil_LockWeaponByID(int32 ID);
	void InventoryUtil_UnlockWeaponByID(int32 ID);
	void InventoryUtil_SetInventoryItemByID(int32 WeaponID, int32 Slot, bool IsChangingWeaponMode);
	void Server_OnActorUsed();
	void CloseEquipmentMenuCalled();
	void OnLevelShown_Set();
	void UI_OnInteract();
	void UI_Autoloot_Container();
	void EventUINotification(const struct FToolTipInfo& ToolTipInfo, class FName ItemId, bool UseNotify);
	void OnConsumeTransitionFinished();
	void UI_Use_Inventory_Item(int32 Inventory_Slot);
	void UI_Use_Container_Item(int32 Container_Slot);
	void UI_Drop_Inventory_Item(int32 From_Inventory_Slot);
	void UI_Split_Item_From_Inventory(int32 From_Inventory_Slot, int32 To_Slot, int32 Amount);
	void UI_Split_Inventory_Item(int32 From_Inventory_Slot, int32 To_Inventory_Slot, int32 Amount);
	void UI_Split_Item_From_Container(int32 From_Container_Slot, int32 To_Slot, int32 Amount);
	void UI_Split_Container_Item(int32 From_Container_Slot, int32 To_Container_Slot, int32 Amount);
	void UI_Deposit_Container_Item(int32 From_Inventory_Slot, int32 To_Container_Slot);
	void UI_Take_Container_Item(int32 From_Container_Slot, int32 To_Inventory_Slot);
	void UI_Move_Container_Item(int32 From_Container_Slot, int32 To_Container_Slot);
	void UI_Move_Inventory_Item(int32 From_Inventory_Slot, int32 To_Inventory_Slot);
	void UI_UnEquip_To_Container(int32 From_Inventory_Slot, int32 To_Container_Slot);
	void UI_Equip_From_Container(int32 From_Container_Slot, int32 To_Inventory_Slot);
	void LoadEquipmentMenuCalled(enum class Enum_EquipmentMenuType Type);
	void UI_UnEquip_Inventory_Item(int32 From_Inventory_Slot, int32 To_Inventory_Slot);
	void UI_Equip_Inventory_Item(int32 From_Inventory_Slot, int32 To_Inventory_Slot);
	void UI_Set_IsMouseOverUI(bool IsMouseOverUI);
	void UI_Close_Container();
	void UI_Close_Equipment();
	void UI_Close_Inventory();
	void UI_Get_Container_ToolTip(int32 Container_Slot);
	void UI_Get_Inventory_ToolTip(int32 Inventory_Slot);
	void UI_Clear_ToolTip(class FName ItemName);
	void UI_Clear_Hotbar_Item(int32 From_Hotbar_Slot);
	void UI_Move_Hotbar_Item(int32 From_Slot, int32 To_Slot, bool IsDraggedFromInventory, bool IsDraggedFromHotbar);
	void RetrySave();
	void Client_GetUsableActorFocus();
	void ReceiveTick(float DeltaSeconds);
	void FastToggleFromEquipmentMenu();
	void ToggleFromEquipmentMenu();
	void Util_SaveGame(bool bShouldRestorePlayerTransformOnLoad);
	void InputQueue_TryUseActiveItem();
	void CustomUseActiveItem();
	void CustomPrevActiveItem();
	void CustomNextActiveItem();
	void SelectNextQuickSlot();
	void UI_EscapeMenuPressed(bool Closed);
	void MainMenu_OnBrightnessConfirmed();
	void OnThrowSuperExpired();
	void OnConsumeTransitionEnd();
	void EndThrowQuickItem();
	void StartThrowQuickItem();
	void MainMenu_SetMenuState(enum class Enum_MainMenu_State Menu_State);
	void ResetAfterThrow();
	void MainMenu_CloseCredits();
	void SetThrowSlotToLastInvItem();
	void UseActiveItem();
	void ParryTutorial();
	void BallistazookaTutorial();
	void HardenTutorial2();
	void HardenTutorial1();
	void ReceiveBeginPlay();
	void BndEvt__InventoryManagerComponent_K2Node_ComponentBoundEvent_0_ItemAddedToInventory__DelegateSignature(const struct FToolTipInfo& InventoryItem, int32 Familiarity, int32 MaxFamiliarity, class FName ID, int32 Amount);
	void EventStartingTutorial();
	void EventQuickItemTutorial();
	void BottomNotifyCallback();
	void EventQueueBottomNotify(TArray<struct FBottomRightNotificationStruct>& NotificationsToQueue);
	void EventCombatTutorial();
	void EventBottomRightNotification(bool Stop, class FName Name, class FText Text, class FText KeyboardText, class UTexture* Icon, float Duration, bool TriggerCallBack);
	void EventClientCenterNotification(class FText NotificationType, class FText NotificationDetails, class FText NotificationFlavor, float NotificationTimeout);
	void UpdateRespawnWidget();
	void GameMenuRelease();
	void GameMenuPress();
	void GameMenu_OpenPhotoMode();
	void ForcePauseMenuClose(bool Sound);
	void ShowSkipCutscene(enum class Enum_Cutscene_SkipType SkipType);
	void HideSkipCutscene();
	void PauseMenu_Resume();
	void OnCloseWithBackButton_Event_0();
	void OnEquipmentMenuPawnPossessed(class ABP_EquipmentMenuPawn_C* Pawn);
	void EquippedShell(class FText ShellName, class FText ShellTagline);
	void HideHUD(bool Instant, bool NoHideNotifies);
	void ShowHUD(bool Instant);
	void UI_OpenStartPortals();
	void UI_SetUIMode(bool IsUIMode);
	void UI_SetDialogMode(bool IsDialogMode);
	void Event_SetUIMode(bool UIMode);
	void EventShowCharacterDialog();
	void EventChangeCharacterMaterial(class AGameplayPC_C* PlayerToChange);
	void CamFocusArtifact();
	void EventServerEndScrollIdentify(int32 InventorySlot);
	void ClientEndScrollIdentify(int32 InventorySlot);
	void ClientScrollIdentify(int32 ScrollSlot);
	void RemoveGameLog();
	void UpdateGameLog(class FText Text);
	void Server_SetThirdPerson(bool SetThirdPerson);
	void UpdateChat(class FText SenderName, class FText SenderText);
	void GetChatMessage(class FText TextToSend);
	void SetupChatWindow();
	void CallPhotoModeClose();
	void CallPhotoModeEnter();
	void PhotoModeOpen();
	void PhotoModeClose();
	void EquipBossWeapons();
	void ServerSave();
	void LastChanceSaveStatue();
	void HandleMoneyOnDeath();
	void OnPairedAnimFinish_WhilePlayerDead();
	void CheckIfPairedAnimFinished();
	void PlayDeathAnimAndCleanup();
	void DisableInputs();
	void DeathInDarkForm();
	void StoneFormIfNotDarkForm();
	void DeathAfterLastChance(class AActor* Killer);
	void EventPlayerDeath(class AActor* DamageCauser, const struct FVector& ImpactVector);
	void ReceivePossess(class APawn* PossessedPawn);
	void UpdateUsableActorFocus();
	void ReduceDamageBoostOverTime();
	void CheckForLoadScreenFade();
	void PC_AfterLevelLoaded();
	void RestartCharacter();
	void EventServerLoadGame(const class FString& SaveSlotName);
	void ClientLoadGame();
	void PassCharacterInfoToServer(const struct FPlayerInfo& PlayerSettingsInfo);
	void Server_HealthReg_Unpause();
	void Server_HealthReg_Pause();
	void PlayerControllerUtils_SetMaxHP(int32 SetMaxHP);
	void EventIdentifyAllInvItems();
	void ClientPlaySoundAtLoc(const struct FVector& Location, class USoundBase* SoundBaseRef);
	void ClientPlaySound2d(class USoundBase* SoundBaseRef);
	void Server_StartRegenHealth();
	void Server_StopRegenHealth();
	void Server_Regen_Health();
	void ExecuteUbergraph_GameplayPC(int32 EntryPoint, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, float K2Node_Event_Scale_1, float K2Node_Event_Scale, class AActor* K2Node_Event_Actor, const class FString& K2Node_Event_DebugLine, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, int32 K2Node_Event_Index, const class FString& CallFunc_Conv_FloatToString_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, uint8 CallFunc_GetValidValue_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, float K2Node_Event_Opacity, const struct FStruct_ShellDyes& K2Node_Event_Dyes, const struct FStruct_ShellsDyes_LockState& K2Node_Event_LockState, class UUI_PhotoModeInputHelper_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsLevelLoaded_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Conv_TransformToString_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue_2, enum class EEndPlayReason K2Node_Event_EndPlayReason, class UClass* K2Node_CustomEvent_DamageType, int32 K2Node_Event_Level, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface, bool K2Node_DynamicCast_bSuccess, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_1, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_1, bool K2Node_DynamicCast_bSuccess_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, bool K2Node_Event_Block, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class FName K2Node_Event_ID_2, TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_1, bool CallFunc_Not_PreBool_ReturnValue_3, int32 K2Node_Event_NewCounter, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous, int32 K2Node_Event_Count, class FName K2Node_Event_ItemName_2, int32 K2Node_Event_Index_1, bool K2Node_Event_IsChangingWeaponMode_1, bool CallFunc_Array_RemoveItem_ReturnValue, class FName K2Node_Event_ItemName_1, bool K2Node_CustomEvent_NewHidden, int32 CallFunc_Array_AddUnique_ReturnValue_1, class APawn* CallFunc_K2_GetPawn_ReturnValue, class ABarbarous_C* K2Node_DynamicCast_AsBarbarous, bool K2Node_DynamicCast_bSuccess_2, int32 K2Node_Event_ArmorID, uint8 CallFunc_Conv_IntToByte_ReturnValue_1, int32 K2Node_Event_ID_1, uint8 CallFunc_GetValidValue_ReturnValue_1, class FName CallFunc_GetWeaponNameFromID_WeaponName, bool CallFunc_Array_RemoveItem_ReturnValue_1, class FText CallFunc_GetShellTagline_ShellTagline, class FText CallFunc_GetShellName_ShellName, int32 K2Node_Event_ID, class FName CallFunc_GetWeaponNameFromID_WeaponName_1, int32 K2Node_Event_WeaponID, int32 K2Node_Event_Slot, bool K2Node_Event_IsChangingWeaponMode, int32 CallFunc_Array_AddUnique_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_4, class FName CallFunc_GetWeaponNameFromID_WeaponName_2, enum class EComboTypes CallFunc_GetCharacterWeaponEnumFromID_Weapon, const struct FInventoryItem& CallFunc_GetItemFromID_Item, bool CallFunc_SetInventoryItem_Success, const struct FToolTipInfo& K2Node_CustomEvent_ToolTipInfo, class FName K2Node_CustomEvent_ItemID, bool K2Node_CustomEvent_UseNotify, bool CallFunc_IsValid_ReturnValue_5, int32 K2Node_Event_Inventory_Slot_1, int32 K2Node_Event_Container_Slot_1, int32 K2Node_Event_From_Inventory_Slot_7, int32 K2Node_Event_From_Inventory_Slot_6, int32 K2Node_Event_To_Slot_2, int32 K2Node_Event_Amount_3, int32 K2Node_Event_From_Inventory_Slot_5, int32 K2Node_Event_To_Inventory_Slot_5, int32 K2Node_Event_Amount_2, int32 K2Node_Event_From_Container_Slot_4, int32 K2Node_Event_To_Slot_1, int32 K2Node_Event_Amount_1, int32 K2Node_Event_From_Container_Slot_3, int32 K2Node_Event_To_Container_Slot_3, int32 K2Node_Event_Amount, int32 K2Node_Event_From_Inventory_Slot_4, int32 K2Node_Event_To_Container_Slot_2, int32 K2Node_Event_From_Container_Slot_2, int32 K2Node_Event_To_Inventory_Slot_4, int32 K2Node_Event_From_Container_Slot_1, int32 K2Node_Event_To_Container_Slot_1, int32 K2Node_Event_From_Inventory_Slot_3, int32 K2Node_Event_To_Inventory_Slot_3, int32 K2Node_Event_From_Inventory_Slot_2, int32 K2Node_Event_To_Container_Slot, int32 K2Node_Event_From_Container_Slot, int32 K2Node_Event_To_Inventory_Slot_2, enum class Enum_EquipmentMenuType K2Node_CustomEvent_Type, int32 K2Node_Event_From_Inventory_Slot_1, int32 K2Node_Event_To_Inventory_Slot_1, int32 K2Node_Event_From_Inventory_Slot, int32 K2Node_Event_To_Inventory_Slot, bool K2Node_Event_IsMouseOverUI, int32 K2Node_Event_Container_Slot, int32 K2Node_Event_Inventory_Slot, class FName K2Node_Event_ItemName, int32 K2Node_Event_From_Hotbar_Slot, int32 K2Node_Event_From_Slot, int32 K2Node_Event_To_Slot, bool K2Node_Event_IsDraggedFromInventory, bool K2Node_Event_IsDraggedFromHotbar, bool CallFunc_EqualEqual_ByteByte_ReturnValue, float K2Node_Event_DeltaSeconds, class UGameplayChat_C* CallFunc_Create_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool K2Node_Event_bShouldRestorePlayerTransformOnLoad, bool CallFunc_Not_PreBool_ReturnValue_5, bool CallFunc_Not_PreBool_ReturnValue_6, bool CallFunc_Not_PreBool_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue_2, bool K2Node_Event_Closed, bool CallFunc_BooleanAND_ReturnValue_3, const struct FKey& Temp_struct_Variable, const struct FKey& K2Node_InputActionEvent_Key, enum class Enum_MainMenu_State K2Node_Event_Menu_State, const struct FKey& K2Node_InputActionEvent_Key_1, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_BooleanOR_ReturnValue_2, class UThrowCrosshairs_C* CallFunc_Create_ReturnValue_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, int32 CallFunc_ReturnFirstEmptySlot_FirstEmptySlot, int32 CallFunc_Clamp_ReturnValue, enum class EItemType CallFunc_GetNextThrownItem_Type, const struct FInventoryItem& CallFunc_GetNextThrownItem_InventoryItem, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, class APawn* CallFunc_K2_GetPawn_ReturnValue_1, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, class USword_AnimBP2v3_C* K2Node_DynamicCast_AsSword_Anim_BP2v_3, bool K2Node_DynamicCast_bSuccess_4, class AZero_Base_C* K2Node_DynamicCast_As0_Base_1, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_GetArbNameInChangedSetPure_bIsInSet, bool CallFunc_Not_PreBool_ReturnValue_8, bool CallFunc_GetArbNameInChangedSetPure_bIsInSet_1, bool CallFunc_GetArbNameInChangedSetPure_bIsInSet_2, bool CallFunc_Not_PreBool_ReturnValue_9, bool CallFunc_Not_PreBool_ReturnValue_10, bool CallFunc_GetArbNameInChangedSetPure_bIsInSet_3, bool CallFunc_GetArbNameInChangedSetPure_bIsInSet_4, bool CallFunc_Not_PreBool_ReturnValue_11, bool CallFunc_Not_PreBool_ReturnValue_12, bool CallFunc_GetArbNameInChangedSetPure_bIsInSet_5, bool CallFunc_Not_PreBool_ReturnValue_13, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_2, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_2, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_BooleanAND_ReturnValue_4, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_3, bool K2Node_DynamicCast_bSuccess_7, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_3, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_4, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_4, bool K2Node_DynamicCast_bSuccess_8, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_5, bool K2Node_DynamicCast_bSuccess_9, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_6, bool K2Node_DynamicCast_bSuccess_10, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_7, bool K2Node_DynamicCast_bSuccess_11, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_5, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_6, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_8, bool K2Node_DynamicCast_bSuccess_12, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_9, bool K2Node_DynamicCast_bSuccess_13, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_10, bool K2Node_DynamicCast_bSuccess_14, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_11, bool K2Node_DynamicCast_bSuccess_15, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_7, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_12, bool K2Node_DynamicCast_bSuccess_16, TScriptInterface<class IGameModeUtilInterface_C> K2Node_DynamicCast_AsGame_Mode_Util_Interface_13, bool K2Node_DynamicCast_bSuccess_17, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_6, bool CallFunc_BooleanAND_ReturnValue_7, const struct FToolTipInfo& K2Node_ComponentBoundEvent_InventoryItem, int32 K2Node_ComponentBoundEvent_Familiarity, int32 K2Node_ComponentBoundEvent_MaxFamiliarity, class FName K2Node_ComponentBoundEvent_ID, int32 K2Node_ComponentBoundEvent_Amount, bool CallFunc_BooleanAND_ReturnValue_8, bool CallFunc_BooleanAND_ReturnValue_9, TArray<struct FBottomRightNotificationStruct>& K2Node_CustomEvent_NotificationsToQueue, const struct FBottomRightNotificationStruct& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, class UTexture2D* CallFunc_GetButtonIcon_Texture, bool CallFunc_Greater_IntInt_ReturnValue, bool K2Node_CustomEvent_Stop, class FName K2Node_CustomEvent_Name, class FText K2Node_CustomEvent_Text_1, class FText K2Node_CustomEvent_KeyboardText, class UTexture* K2Node_CustomEvent_Icon, float K2Node_CustomEvent_Duration, bool K2Node_CustomEvent_TriggerCallBack, bool CallFunc_IsValid_ReturnValue_7, class UTexture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess_18, float CallFunc_Divide_FloatFloat_ReturnValue, class AHUD* CallFunc_GetHUD_ReturnValue, class FText K2Node_CustomEvent_NotificationType, class FText K2Node_CustomEvent_NotificationDetails, class FText K2Node_CustomEvent_NotificationFlavor, float K2Node_CustomEvent_NotificationTimeout, class AYourHUD_C* K2Node_DynamicCast_AsYour_HUD, bool K2Node_DynamicCast_bSuccess_19, const struct FDHCenterNotification& K2Node_MakeStruct_DHCenterNotification, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool CallFunc_IsPhotoModeSpeedChangeInProgress_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_14, bool CallFunc_Not_PreBool_ReturnValue_15, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_CustomEvent_Sound, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance, class AHUD* CallFunc_GetHUD_ReturnValue_1, class AYourHUD_C* K2Node_DynamicCast_AsYour_HUD_1, bool K2Node_DynamicCast_bSuccess_20, class AHUD* CallFunc_GetHUD_ReturnValue_2, class AYourHUD_C* K2Node_DynamicCast_AsYour_HUD_2, bool K2Node_DynamicCast_bSuccess_21, enum class Enum_Cutscene_SkipType K2Node_CustomEvent_SkipType, class ABP_EquipmentMenuPawn_C* K2Node_CustomEvent_Pawn, class FText K2Node_Event_ShellName, class FText K2Node_Event_ShellTagline, bool K2Node_CustomEvent_Instant_1, bool K2Node_CustomEvent_NoHideNotifies, bool K2Node_CustomEvent_Instant, const struct FKey& K2Node_InputActionEvent_Key_2, TArray<class AStartPortal_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue_2, bool K2Node_Event_IsUIMode, bool K2Node_Event_IsDialogMode, const struct FKey& K2Node_InputActionEvent_Key_3, const struct FKey& K2Node_InputActionEvent_Key_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_2, bool K2Node_CustomEvent_UIMode, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, const struct FKey& K2Node_InputActionEvent_Key_5, class AGameplayPC_C* K2Node_CustomEvent_PlayerToChange, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, const class FString& CallFunc_GetDisplayName_ReturnValue_1, class FText CallFunc_Conv_StringToText_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class AZero_Base_C* K2Node_DynamicCast_As0_Base_2, bool K2Node_DynamicCast_bSuccess_22, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 K2Node_CustomEvent_InventorySlot_1, int32 K2Node_CustomEvent_InventorySlot, int32 K2Node_CustomEvent_ScrollSlot, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_8, const struct FKey& K2Node_InputActionEvent_Key_6, class FText K2Node_CustomEvent_Text, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_9, bool K2Node_CustomEvent_SetThirdPerson, int32 Temp_int_Array_Index_Variable, class FText K2Node_CustomEvent_SenderName, class FText K2Node_CustomEvent_SenderText, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_8, class AGameplayGM_C* K2Node_DynamicCast_AsGameplay_GM, bool K2Node_DynamicCast_bSuccess_23, int32 CallFunc_Array_Length_ReturnValue_3, class FText K2Node_CustomEvent_TextToSend, const class FString& CallFunc_Conv_BoolToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FKey& K2Node_InputActionEvent_Key_7, bool CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess, class ULevelStreamingDynamic* CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue, const struct FKey& K2Node_InputActionEvent_Key_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, bool CallFunc_BooleanOR_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_11, const class FString& CallFunc_Concat_StrStr_ReturnValue_12, const class FString& CallFunc_Concat_StrStr_ReturnValue_13, const class FString& CallFunc_Concat_StrStr_ReturnValue_14, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_15, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface, bool K2Node_DynamicCast_bSuccess_24, const class FString& CallFunc_Concat_StrStr_ReturnValue_16, bool CallFunc_IsLoadingScreenActive_ReturnValue, TArray<class ASkyLight*>& CallFunc_GetAllActorsOfClass_OutActors_1, class ASkyLight* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_16, int32 Temp_int_Array_Index_Variable_1, class AActor* CallFunc_Array_Get_Item_2, class UGameInstance* CallFunc_GetGameInstance_ReturnValue_1, TScriptInterface<class IGameInstanceHUDInterface_C> K2Node_DynamicCast_AsGame_Instance_HUDInterface_1, bool K2Node_DynamicCast_bSuccess_25, bool CallFunc_GetPhotoModeEnabled_Enabled, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class Aboss_weapon_for_player_bp_C* CallFunc_FinishSpawningActor_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, class APawn* CallFunc_K2_GetPawn_ReturnValue_3, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1, class AZero_Base_C* K2Node_DynamicCast_As0_Base_3, bool K2Node_DynamicCast_bSuccess_26, class Aboss_weapon_for_player_bp_C* CallFunc_FinishSpawningActor_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool K2Node_CustomEvent_Visibility, class APawn* CallFunc_K2_GetPawn_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_8, class AZero_Base_C* K2Node_DynamicCast_As0_Base_4, bool K2Node_DynamicCast_bSuccess_27, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_GetCameraLocation_ReturnValue, const struct FRotator& CallFunc_GetCameraRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_2, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2, class ABP_PhotoModePawn_C* CallFunc_FinishSpawningActor_ReturnValue_2, class FName K2Node_CustomEvent_CurrentCheckpoint, const struct FTransform& K2Node_CustomEvent_CurrentCheckpointTransform, class FName K2Node_CustomEvent_CurrentMainLevel, class FName K2Node_CustomEvent_CurrentSubLevel, class ABarbarous_C* K2Node_DynamicCast_AsBarbarous_1, bool K2Node_DynamicCast_bSuccess_28, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_10, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_2, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_3, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool K2Node_CustomEvent_CloseSound, enum class Enum_Cutscene_SkipType K2Node_CustomEvent_StopType, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_4, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_5, class UGameInfoInstance_C* CallFunc_GetGameInstanceAsGameInfoInstance_AsGame_Info_Instance_1, const struct FVector& CallFunc_GetControlledPawnLocation_ReturnValue, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_6, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, class USword_AnimBP2v3_C* K2Node_DynamicCast_AsSword_Anim_BP2v_3_1, bool K2Node_DynamicCast_bSuccess_29, bool CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess_1, class ULevelStreamingDynamic* CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue_1, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous_1, class APawn* CallFunc_K2_GetPawn_ReturnValue_5, class AZero_Base_C* K2Node_DynamicCast_As0_Base_5, bool K2Node_DynamicCast_bSuccess_30, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous_2, class FName CallFunc_GetLostMoneyName_MoneyName, class FName CallFunc_GetMoneyName_MoneyName, bool CallFunc_ShouldLooseMoneyOnDeath_bShould, int32 CallFunc_GetNamedPCInt_Value, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_7, class AGameplayPC_C* CallFunc_GetControllerAsGameplayPC_AsGameplay_PC, class FName CallFunc_GetCurrentPersistentLevelName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_1, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_8, bool CallFunc_BooleanOR_ReturnValue_4, class ABarbarous_C* K2Node_DynamicCast_AsBarbarous_2, bool K2Node_DynamicCast_bSuccess_31, float CallFunc_PlayAnimMontage_ReturnValue, class AActor* K2Node_CustomEvent_Killer, class AZero_Base_C* CallFunc_GetCharacterAs0_Base_As0_Base_9, class ABarbarous_C* K2Node_DynamicCast_AsBarbarous_3, bool K2Node_DynamicCast_bSuccess_32, bool CallFunc_IsLastChanceAvailable_bAvailable, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, class UGameInstance* CallFunc_GetGameInstance_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_2, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance, bool K2Node_DynamicCast_bSuccess_33, const struct FVector& CallFunc_GetControlledPawnLocation_ReturnValue_1, class AGamePlayPlayerState_C* K2Node_DynamicCast_AsGame_Play_Player_State, bool K2Node_DynamicCast_bSuccess_34, int32 Temp_int_Array_Index_Variable_2, class APlayerController* CallFunc_Array_Get_Item_3, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess_35, class AActor* K2Node_CustomEvent_DamageCauser, const struct FVector& K2Node_CustomEvent_ImpactVector, bool CallFunc_DidCharacterDieInTutorialLevel__ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_11, class APawn* K2Node_Event_PossessedPawn, class AZero_Base_C* K2Node_DynamicCast_As0_Base_6, bool K2Node_DynamicCast_bSuccess_36, int32 Temp_int_Loop_Counter_Variable_2, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_3, enum class EComboTypes Temp_byte_Variable, enum class EComboTypes Temp_byte_Variable_1, int32 Temp_int_Loop_Counter_Variable_3, bool CallFunc_Less_IntInt_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_4, enum class EComboTypes Temp_byte_Variable_2, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, class AGameModeBase* CallFunc_GetGameMode_ReturnValue_9, class AGameplayGM_C* K2Node_DynamicCast_AsGameplay_GM_1, bool K2Node_DynamicCast_bSuccess_37, class APawn* CallFunc_K2_GetPawn_ReturnValue_6, class AZero_Base_C* K2Node_DynamicCast_As0_Base_7, bool K2Node_DynamicCast_bSuccess_38, enum class EComboTypes Temp_byte_Variable_3, int32 Temp_int_Array_Index_Variable_3, class AStartPortal_C* CallFunc_Array_Get_Item_4, enum class EComboTypes Temp_byte_Variable_4, bool K2Node_CustomEvent_bDampenAudio, int32 Temp_int_Variable, class UGameInstance* CallFunc_GetGameInstance_ReturnValue_3, class UGameInfoInstance_C* K2Node_DynamicCast_AsGame_Info_Instance_1, bool K2Node_DynamicCast_bSuccess_39, const class FString& K2Node_CustomEvent_SaveSlotName, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, const struct FPlayerInfo& K2Node_CustomEvent_PlayerSettingsInfo, bool CallFunc_IsLocalController_ReturnValue, enum class EComboTypes Temp_byte_Variable_5, int32 Temp_int_Variable_1, enum class EComboTypes K2Node_Select_Default, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_12, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_3, int32 K2Node_Event_SetMaxHP, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_13, const struct FVector& K2Node_CustomEvent_Location, class USoundBase* K2Node_CustomEvent_SoundBaseRef_1, class USoundBase* K2Node_CustomEvent_SoundBaseRef, float CallFunc_Conv_IntToFloat_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_5, bool CallFunc_GreaterEqual_IntInt_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue_1);
	void OnSkinApplyStateChanged__DelegateSignature(enum class Enum_Skins SkinChanged);
	void OnPhotoModeChanged__DelegateSignature(bool bEnterred);
	void PreLevelSequenceActorCleared__DelegateSignature();
	void OnBallistazookaOpacityChanged__DelegateSignature(float Opacity);
	void OnFadeOutAggroedEnemies__DelegateSignature(class AEnemyCharacter_C* EnemyToIgnore, const class FString& Reason);
	void OnForceReturnToSpawner__DelegateSignature(class AEnemyCharacter_C* IgnoreSelf, const class FString& Reason);
	void OnItemUnavailable__DelegateSignature();
	void OnHideEnemyAI__DelegateSignature(bool Hidden);
	void OnEquipmentMenuPressed__DelegateSignature(bool Close, enum class Enum_EquipmentMenuType Menu);
	void OnWeaponChanged__DelegateSignature(enum class EComboTypes Weapon, bool IsChangingWeaponMode);
	void OnGlimpsesGained__DelegateSignature();
	void OnEscapeMenuPressed__DelegateSignature(bool Close);
	void OnShellRetrieved__DelegateSignature(class FText ShellName, class FText ShellTagline, enum class EArmorTypes ShellRetrieved);
	void OnCutsceneEnd__DelegateSignature();
	void OnCutsceneStart__DelegateSignature();
	void OnTrueDeath__DelegateSignature();
	void OnPlayerDeadLastChance__DelegateSignature();
	void OnPauseEnemyAI__DelegateSignature(float TimeDilation);
	void OnWormfishSummoned__DelegateSignature();
	void OnJustUnlockedName__DelegateSignature();
	void OnCantUseQuickItem__DelegateSignature();
	void OnActiveCheckpointChanged__DelegateSignature();
	void OnPlayerDead__DelegateSignature();
	void OnPlayerHealthChanged__DelegateSignature(float PreviousHealth, float NewHealth);
	void OnHPRegApplied__DelegateSignature();
	void DiedInTutorialLevelToHadern__DelegateSignature();
	void CharacterPossessed__DelegateSignature();
	void QueueNotification__DelegateSignature(const struct FToolTipInfo& Tooltip, class FText NotificationText, bool ShowFamiliarity, bool AnimateLastDiamond, int32 PreviousFamiliarity, int32 CurrentFamiliarity, int32 MaxFamiliarity);
	void OnShellEquipped__DelegateSignature(class FText ShellName, class FText ShellTagline);
	void OnItemFamiliarityChanged__DelegateSignature(const struct FToolTipInfo& Tooltip, int32 PreviousFamiliarity, int32 CurrentFamiliarity, int32 MaxFamiliarity, class FName ID);
	void OnShellBondingPointsChanged__DelegateSignature();
	void FinishedTalkingToNPC__DelegateSignature();
	void StartedTalkingToNPC__DelegateSignature(class AActor* NPC);
	void SaveGameLoaded__DelegateSignature();
	void CheckpointsLoaded__DelegateSignature();
};

}


