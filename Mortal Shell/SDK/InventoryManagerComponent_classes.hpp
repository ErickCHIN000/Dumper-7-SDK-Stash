#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0xD8 (0x188 - 0xB0)
// BlueprintGeneratedClass InventoryManagerComponent.InventoryManagerComponent_C
class UInventoryManagerComponent_C : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UInventoryComponent_C*                 PlayerInventory;                                   // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGhettoLayout_C*                       InventoryUI;                                       // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                CurrentContainer;                                  // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsSinglePlayer;                                    // 0xD0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsInventoryOpen;                                   // 0xD1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsEquipmentOpen;                                   // 0xD2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         IsContainerOpen;                                   // 0xD3(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        InventorySlotsPerRow;                              // 0xD4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3FBD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryComponent_C*                 ContainerInventory;                                // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        InventorySize;                                     // 0xE0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Damage;                                            // 0xE4(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Armor;                                             // 0xE8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Strength;                                          // 0xEC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Dexterity;                                         // 0xF0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Intelligence;                                      // 0xF4(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Gold;                                              // 0xF8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3FC2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNewHUDLayout_C*                       PlayerHUDReference;                                // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            ItemAddedToInventory;                              // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<int32>                                QuickAccessSlots;                                  // 0x118(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UDHItemsAsset*                         ItemEffects;                                       // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UDHItemEffectBase*>  Effects;                                           // 0x130(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AZero_Base_C*                          ZeroBaseRef;                                       // 0x180(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UInventoryManagerComponent_C* GetDefaultObj();

	void DebugIndexStartSearch(int32 Index, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void RemoveItemFromType(class FName ItemId, int32 LocalInventorySlot, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, TArray<struct FInventoryItem>& CallFunc_GetInventoryItems_InventoryItems, const struct FInventoryItem& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_RemoveFromItemAmount_WasFullAmountRemoved, const struct FInventoryItem& CallFunc_RemoveFromItemAmount_OutnventoryItem, int32 CallFunc_RemoveFromItemAmount_AmountRemoved, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_SetInventoryItem_Success, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);
	void CallItemAddNotify(const struct FInventoryItem& InventoryItem, class FName ID, int32 Amount, TSet<class FName> MushroomIDs, bool CallFunc_Set_Contains_ReturnValue, int32 CallFunc_GetItemMaxFamiliarity_MaxFamiliarity, int32 CallFunc_GetItemFamiliarity_Value, TSet<class FName> K2Node_MakeVariable_MakeVariableOutput, int32 CallFunc_GetItemFamiliarity_Value_1, const struct FToolTipInfo& K2Node_MakeStruct_ToolTipInfo);
	void RemoveQuickAccessItem(int32 QuickSlotIndex);
	void CycleQuickSlot(int32 CurrentIndex, const class FString& Direction, int32* ReturnIndex, bool* ItemFound, bool* NoValidItem, bool Local_NoValidItem, bool Local_ItemFound, int32 Local_ReturnIndex, int32 Local_CurrentIndex, bool Temp_bool_True_if_break_was_hit_Variable, bool K2Node_SwitchString_CmpSuccess, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable_1, int32 Temp_int_Array_Index_Variable_3, bool CallFunc_Not_PreBool_ReturnValue_1, int32 CallFunc_Array_Get_Item, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, int32 CallFunc_Array_Get_Item_1, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Get_Item_2, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_1, bool CallFunc_IsValid_ReturnValue_1, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_2, bool CallFunc_IsValid_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Array_Get_Item_3, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_3, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Max_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Array_Get_Item_4, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_4, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable_3, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_Array_Get_Item_5, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_5, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_3, int32 CallFunc_Max_ReturnValue_1, int32 CallFunc_Array_Get_Item_6, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_6, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_6, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_1);
	void Debug_PrintUsedItem(struct FInventoryItem& InventoryItem, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void CallItemPickedUpOnEffect(class FName& ItemId, class UDHItemEffectBase* CallFunc_GetItemEffect_Value, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void GetItemEffect(class FName& Key, class UDHItemEffectBase** Value, TMap<class FName, class UDHItemEffectBase*> CallFunc_GetEffectCopies_OutEffects, int32 CallFunc_Map_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UDHItemEffectBase* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void ApplyItemEffect(class FName& ItemId, bool* bApplied, class UDHItemEffectBase* CallFunc_GetItemEffect_Value, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Apply_ReturnValue);
	void AssignItemToQuickSlotDirect(int32 Slot, int32 Item, enum class EItemType Local_ItemType, class FName Local_ID, int32 Local_Item, int32 Local_Slot, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_2, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Conv_NameToString_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, bool CallFunc_Not_PreBool_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Conv_IntToString_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, const class FString& CallFunc_Concat_StrStr_ReturnValue_11, const class FString& CallFunc_Concat_StrStr_ReturnValue_12, const class FString& CallFunc_Concat_StrStr_ReturnValue_13, const class FString& CallFunc_Concat_StrStr_ReturnValue_14, const class FString& CallFunc_Concat_StrStr_ReturnValue_15, const class FString& CallFunc_Concat_StrStr_ReturnValue_16, const class FString& CallFunc_Concat_StrStr_ReturnValue_17, const struct FInventoryItem& CallFunc_Array_Get_Item);
	void GetPreviousFullQuickSlot(int32 CurrentSlot, int32* InventorySlot, bool* SlotFound, bool FoundSlot, int32 ReturnSlot, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_Less_IntInt_ReturnValue, bool Temp_bool_Variable, int32 K2Node_Select_Default, int32 CallFunc_Array_Get_Item, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Max_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void GetNextFullQuickSlot(int32 CurrentSlot, bool bCyclic, int32* InventorySlot, int32 ReturnSlot, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue_1, int32 CallFunc_GetNextFullQuickSlot_InventorySlot, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void SetQuickAccessItem(int32 QuickAccessSlot, int32 InventoryitemIndex, int32 LocItemId, int32 LocSlot, int32 Temp_int_Array_Index_Variable, bool CallFunc_Array_Contains_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetItemIDFromQuickAccessSlot(int32 QuickAccessSlot, int32* ItemId, bool* bValidItem, int32 CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue);
	void GetQuickAccessItem(int32 QuickAccessSlot, struct FInventoryItem* QuickAccessItem, bool* bValidItem, const struct FInventoryItem& K2Node_MakeStruct_InventoryItem, int32 CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, const struct FInventoryItem& CallFunc_Array_Get_Item_1);
	void PlayerGainExperience(int32 Amount, int32 InventorySlot, const struct FInventoryItem& InventoryItem, class AGameplayPC_C* CallFunc_GetControllerAsGameplayPC_AsGameplay_PC, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous, int32 CallFunc_Conv_ByteToInt_ReturnValue);
	void PlayerGainCurrency(int32 Amount, int32 InventorySlot, const struct FInventoryItem& InventoryItem, class AGameplayPC_C* CallFunc_GetControllerAsGameplayPC_AsGameplay_PC, class ABarbarous_C* CallFunc_GetCharacterAsBarbarous_AsBarbarous);
	void DropMostPlayerItems(int32 SlotNotToDrop, int32 Temp_int_Variable, int32 CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void GetNextThrownItem(int32 InventorySlot, enum class EItemType* Type, struct FInventoryItem* InventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem);
	void CheckPlayEquipAnim(enum class EquipmentSlotType EquipSlotType, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess);
	void AutoLootContainer(class UContainer_Slot_C* CallFunc_Create_ReturnValue, int32 Temp_int_Array_Index_Variable, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UContainer_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FGeometry& CallFunc_GetCachedGeometry_ReturnValue, const struct FVector2D& CallFunc_LocalToViewport_PixelPosition, const struct FVector2D& CallFunc_LocalToViewport_ViewportPosition);
	void ReturnFirstEmptySlot(int32* FirstEmptySlot, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FInventoryItem& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void GetInventorySize(int32* InvLength, int32 CallFunc_Array_Length_ReturnValue);
	void ThrowInventoryItem(int32 ItemToThrow, class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess, class APawn* CallFunc_K2_GetPawn_ReturnValue, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess_1, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_RemoveFromItemAmount_WasFullAmountRemoved, const struct FInventoryItem& CallFunc_RemoveFromItemAmount_OutnventoryItem, int32 CallFunc_RemoveFromItemAmount_AmountRemoved);
	void IdentifyAllInvItems(class UInventoryComponent_C* Inventory, int32 Temp_int_Variable, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, const struct FItemInformation& K2Node_MakeStruct_ItemInformation, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsKnownItem_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess, bool CallFunc_LessEqual_IntInt_ReturnValue);
	bool IsKnownItem(const struct FItemInformation& ItemInformation, class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue);
	void DropAllItems(class UInventoryComponent_C* Inventory, int32 Temp_int_Variable, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void FillEmptySlots(const TArray<struct FInventoryItem>& NewInventoryArray, TArray<struct FInventoryItem>& K2Node_MakeArray_Array);
	void ThrowNextInventoryItem(class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess, class APawn* CallFunc_K2_GetPawn_ReturnValue, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess_1, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_RemoveFromItemAmount_WasFullAmountRemoved, const struct FInventoryItem& CallFunc_RemoveFromItemAmount_OutnventoryItem, int32 CallFunc_RemoveFromItemAmount_AmountRemoved);
	void ClearInventorySlotItems();
	void Refresh_Inventory_Slots(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FInventoryItem>& CallFunc_GetInventoryItems_InventoryItems, int32 CallFunc_Array_Length_ReturnValue, const struct FInventoryItem& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FItemInformation& K2Node_MakeStruct_ItemInformation, bool CallFunc_IsValid_ReturnValue, const struct FItemInformation& K2Node_MakeStruct_ItemInformation_1);
	void RandomizeDropLocation(struct FTransform* Transform, const struct FVector& LocalLocation, class AActor* CallFunc_GetOwner_ReturnValue, class AController* K2Node_DynamicCast_AsController, bool K2Node_DynamicCast_bSuccess, class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 CallFunc_RandomIntegerInRange_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int32 CallFunc_RandomIntegerInRange_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 CallFunc_RandomIntegerInRange_ReturnValue_2, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue_2, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void CanContainerStoreItems(class UInventoryComponent_C* Inventory, bool* Result, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetCanStoreItems_CanStoreItems, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface_1, bool K2Node_DynamicCast_bSuccess_1, class UInventoryComponent_C* CallFunc_GetContainerInventory_InventoryComponent, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void GetEmptyEquipmentSlotByType(enum class EquipmentSlotType EquipmentSlot, bool* HasEmptySlot, int32* InventorySlot, bool LocalHasEmptySlot, int32 LocalInventorySlot, enum class EquipmentSlotType LocalSlotType, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, enum class EquipmentSlotType CallFunc_GetEquipmentTypeBySlot_EquipmentType, int32 CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void AddContainerSlot(int32 Row, int32 Column, int32 Slot, bool IsStorage, bool LocalIsStorageContainer, uint8 LocalMaxRowSize, int32 LocalLoopCount, int32 LocalContainerSize, class UContainer_Slot_C* CallFunc_Create_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UGridSlot* K2Node_DynamicCast_AsGrid_Slot, bool K2Node_DynamicCast_bSuccess, class UContainer_Slot_C* CallFunc_Array_Get_Item);
	void CheckSlotsForItems(class UInventoryComponent_C* Inventory, int32 Amount, bool* HasItem, bool LocalHasItem, class UInventoryComponent_C* LocalInventory, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	void RemoveInventorySlot(int32 InventorySlot, int32 LocalInventorySlot, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_RemoveChildAt_ReturnValue);
	void AddInventorySlot(int32 Row, int32 Column, int32 Slot, class UInventory_Slot_C* LocalSlotReference, int32 LocalColumn, int32 LocalRow);
	void DecreaseInventorySlots(int32 Amount, const TArray<int32>& LocalAmountIndexes, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, int32 Temp_int_Variable_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Get_Item, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_2, bool CallFunc_LessEqual_IntInt_ReturnValue_1);
	void IncreaseInventorySlots(int32 Amount, int32 LocalAmount, uint8 LocalMaxRowSize, int32 LocalLoopCount, int32 LocalSlotNumber, int32 LocalColumn, int32 LocalRow, int32 LocalNewInventorySize, bool Temp_bool_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, int32 Temp_int_Variable_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 CallFunc_Conv_ByteToInt_ReturnValue, float CallFunc_Conv_ByteToFloat_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_FCeil_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Max_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_GetChildrenCount_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_2, class UWidget* CallFunc_GetChildAt_ReturnValue, class UUniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_5);
	void DecreaseInventorySize(class UInventoryComponent_C* Inventory, int32 Amount, int32 LocalAmount, class UInventoryComponent_C* LocalInventory, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class UEquipmentInventoryComponent_C* K2Node_DynamicCast_AsEquipment_Inventory_Component, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_DecreaseInventorySize_Success, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_CheckSlotsForItems_HasItem, class FText CallFunc_Conv_IntToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_DecreaseInventorySize_Success_1);
	void IncreaseInventorySize(class UInventoryComponent_C* Inventory, int32 Amount, bool CallFunc_IncreaseInventorySize_Success, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void SplitItem(class UInventoryComponent_C* FromInventory, int32 FromInventorySlot, class UInventoryComponent_C* ToInventory, int32 ToInventorySlot, int32 Amount, int32 LocalSplitAmount, const struct FInventoryItem& LocalSwapInventoryItem, const struct FInventoryItem& LocalInventoryItem, int32 LocalToInventorySlot, int32 LocalFromInventorySlot, class UInventoryComponent_C* LocalToInventory, class UInventoryComponent_C* LocalFromInventory, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_CanContainerStoreItems_Result, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_AddItemToStack_AmountRemaining, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_RemoveFromItemAmount_WasFullAmountRemoved, const struct FInventoryItem& CallFunc_RemoveFromItemAmount_OutnventoryItem, int32 CallFunc_RemoveFromItemAmount_AmountRemoved, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_RemoveFromItemAmount_WasFullAmountRemoved_1, const struct FInventoryItem& CallFunc_RemoveFromItemAmount_OutnventoryItem_1, int32 CallFunc_RemoveFromItemAmount_AmountRemoved_1, const struct FInventoryItem& CallFunc_SetItemAmount_NewInventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_1, bool CallFunc_IsValid_ReturnValue);
	void RemoveFromItemAmount(const struct FInventoryItem& InventoryItem, int32 AmountToRemove, bool* WasFullAmountRemoved, struct FInventoryItem* OutnventoryItem, int32* AmountRemoved, const struct FInventoryItem& Local_Item, int32 Local_AmountToRemove, int32 Local_AmountRemoved, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Clamp_ReturnValue, const struct FInventoryItem& CallFunc_SetItemAmount_NewInventoryItem);
	void AddToItemAmount(const struct FInventoryItem& InventoryItem, int32 AmountToAdd, struct FInventoryItem* OutItem, int32 CallFunc_Add_IntInt_ReturnValue, const struct FInventoryItem& K2Node_SetFieldsInStruct_StructOut);
	void AddGold(int32 Amount, int32 CallFunc_Add_IntInt_ReturnValue);
	void HasItem(class UInventoryComponent_C* Inventory, class FName ItemId, bool* Success, int32* InventorySlot, int32* Amount, int32 Local_Amount, class FName LocalItemID, int32 LocalInventorySlot, bool LocalSuccess, int32 Temp_int_Array_Index_Variable, const struct FInventoryItem& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue);
	void UseHotbarSlot(int32 HotbarSlot, int32 LocalInventorySlot, bool LocalSuccess, const struct FItemInformation& CallFunc_GetHotbarSlotItem_ItemInformation, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UInventory_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);
	void GetInventorySlotItem(int32 InventorySlot, struct FItemInformation* ItemInformation, const struct FItemInformation& K2Node_MakeStruct_ItemInformation);
	void MoveHotbarSlotItem(int32 FromSlot, int32 ToHotBarSlot, bool FromInventory, bool FromHotbar, const struct FItemInformation& LocalSwapItemInfo, const struct FItemInformation& LocalItemInfo, int32 LocalFromSlot, int32 LocalToHotbarSlot, const struct FItemInformation& CallFunc_GetHotbarSlotItem_ItemInformation, bool CallFunc_IsValid_ReturnValue, const struct FItemInformation& CallFunc_GetHotbarSlotItem_ItemInformation_1, const struct FItemInformation& CallFunc_GetInventorySlotItem_ItemInformation);
	void ClearHotbarSlotItem(int32 HotbarSlot, class UHotbar_Slot_C* CallFunc_Array_Get_Item);
	void SetHotbarSlotItem(int32 HotbarSlot, const struct FItemInformation& ItemInformation, class UHotbar_Slot_C* CallFunc_Array_Get_Item);
	void GetHotbarSlotItem(int32 HotbarSlot, struct FItemInformation* ItemInformation, class UHotbar_Slot_C* CallFunc_Array_Get_Item);
	void CloseEquipmentWindow(int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 Temp_int_Variable, class UInventory_Slot_C* CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void OpenEquipmentWindow();
	void ClearToolTip(class FName ItemName, bool CallFunc_EqualEqual_NameName_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
	void SetToolTip(const struct FToolTipInfo& ToolTipInfo);
	void GetItemToolTip(class UInventoryComponent_C* Inventory, int32 InventorySlot, class AActor* CallFunc_GetOwner_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess, const struct FToolTipInfo& K2Node_MakeStruct_ToolTipInfo, int32 CallFunc_GetItemFamiliarity_Value, const struct FToolTipInfo& K2Node_MakeStruct_ToolTipInfo_1, bool CallFunc_IsValid_ReturnValue);
	void TryToAddItemToInventory(bool CallUINotify, class UInventoryComponent_C* Inventory, const struct FInventoryItem& InventoryItem, class AUsable_Actor_C* ItemInstance, bool* Success, struct FInventoryItem* OutItem, int32* AddedToSlot, bool Local_IsStackable, bool Local_IsKeyItem, enum class EItemType Local_ItemType, bool Local_CallUINotify, int32 Local_AcquiredAmount, int32 LocalItemAmount, class FName LocalItemID, const struct FInventoryItem& LocalInventoryItem, class UInventoryComponent_C* LocalInventory, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, bool Temp_bool_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 K2Node_Select_Default, const struct FInventoryItem& CallFunc_SetItemAmount_NewInventoryItem, int32 CallFunc_FindAndAddAmountToStacks_AmountRemaining, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_GetEmptyInventorySpace_Success, int32 CallFunc_GetEmptyInventorySpace_Index, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess);
	void DropItem(class UInventoryComponent_C* Inventory, int32 InventorySlot, const struct FInventoryItem& LocalInventoryItem, int32 LocalInventorySlot, class UInventoryComponent_C* LocalInventory, class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess, class AGamePlayPlayerState_C* K2Node_DynamicCast_AsGame_Play_Player_State, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_RandomIntegerInRange_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int32 CallFunc_RandomIntegerInRange_ReturnValue_1, int32 CallFunc_RandomIntegerInRange_ReturnValue_2, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FTransform& CallFunc_RandomizeDropLocation_Transform, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1, class AArtifact_Skull_C* CallFunc_FinishSpawningActor_ReturnValue, class AWorld_Actor_C* CallFunc_FinishSpawningActor_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem);
	void UpdateEquippedStats(int32 LocalIntelligence, int32 LocalDexterity, int32 LocalStrength, int32 LocalArmor, int32 LocalDamage, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void InitializeInventoryManagerUI(class UGhettoLayout_C* InventoryWidget, class UNewHUDLayout_C* HUDReference);
	void InitializeInventoryManager(class UEquipmentInventoryComponent_C* PlayerInventory);
	void ClearViewersContainerSlot(int32 ContainerSlot, int32 LocalContainerSlot, int32 Temp_int_Array_Index_Variable, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, TArray<class APlayerState*>& CallFunc_GetPlayersViewing_PlayersViewing, class APlayerState* CallFunc_Array_Get_Item, class AActor* CallFunc_GetOwner_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface_1, bool K2Node_DynamicCast_bSuccess_2, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface_2, bool K2Node_DynamicCast_bSuccess_3, class UInventoryComponent_C* CallFunc_GetContainerInventory_InventoryComponent, bool CallFunc_ContainerLooted_Success, int32 CallFunc_GetInventoryItemCount_ItemCount, bool CallFunc_Less_IntInt_ReturnValue_1, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface_3, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_GetCanStoreItems_CanStoreItems);
	void SetViewersContainerSlot(int32 ContainerSlot, const struct FItemInformation& ItemInformation, const struct FItemInformation& LocalItemInformation, int32 LocalContainerSlot, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface, bool K2Node_DynamicCast_bSuccess, TArray<class APlayerState*>& CallFunc_GetPlayersViewing_PlayersViewing, int32 CallFunc_Add_IntInt_ReturnValue, class APlayerState* CallFunc_Array_Get_Item, class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void UnequipItem(class UInventoryComponent_C* FromInventory, int32 FromInventorySlot, class UInventoryComponent_C* ToInventory, int32 ToInventorySlot, enum class EquipmentSlotType LocalEquipmentSlotType, bool LocalIsEquippingItem, const struct FInventoryItem& LocalSwapInventoryItem, const struct FInventoryItem& LocalInventoryItem, int32 LocalToInventorySlot, int32 LocalFromInventorySlot, class UInventoryComponent_C* LocalToInventory, class UInventoryComponent_C* LocalFromInventory, bool CallFunc_EqualEqual_IntInt_ReturnValue, enum class EquipmentSlotType CallFunc_GetEquipmentTypeBySlot_EquipmentType, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UEquipmentInventoryComponent_C* K2Node_DynamicCast_AsEquipment_Inventory_Component, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_CanContainerStoreItems_Result, int32 CallFunc_MakeLiteralInt_ReturnValue, enum class EquipmentSlotType CallFunc_GetEquipmentTypeBySlot_EquipmentType_1, bool CallFunc_Less_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_1);
	void EquipItem(class UInventoryComponent_C* FromInventory, int32 FromInventorySlot, class UInventoryComponent_C* ToInventory, int32 ToInventorySlot, const TArray<class AUsable_Actor_C*>& LocalToInstanceArray, const TArray<class AUsable_Actor_C*>& LocalFromInstanceArray, class AUsable_Actor_C* LocalToInstance, class AUsable_Actor_C* LocalFromInstance, enum class EquipmentSlotType LocalEquipmentSlotType, bool LocalIsEquippingItem, const struct FInventoryItem& LocalSwapInventoryItem, const struct FInventoryItem& LocalInventoryItem, int32 LocalToInventorySlot, int32 LocalFromInventorySlot, class UInventoryComponent_C* LocalToInventory, class UInventoryComponent_C* LocalFromInventory, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_CanContainerStoreItems_Result, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum class EquipmentSlotType CallFunc_GetEquipmentTypeBySlot_EquipmentType, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1);
	void Use_Consumable_Item(int32 InventorySlot, const struct FInventoryItem& InventoryItem, int32 LocalInventorySlot, bool CallFunc_RemoveFromItemAmount_WasFullAmountRemoved, const struct FInventoryItem& CallFunc_RemoveFromItemAmount_OutnventoryItem, int32 CallFunc_RemoveFromItemAmount_AmountRemoved, bool CallFunc_SetInventoryItem_Success);
	void UseEquipmentItem(int32 InventorySlot, const struct FInventoryItem& InventoryItem, class UInventoryComponent_C* ToInventory, class UInventoryComponent_C* LocalInventoryReference, const struct FInventoryItem& LocalInventoryItem, int32 LocalInventorySlot, bool CallFunc_GetEmptyInventorySpace_Success, int32 CallFunc_GetEmptyInventorySpace_Index, bool CallFunc_GetEmptyEquipmentSlotByType_HasEmptySlot, int32 CallFunc_GetEmptyEquipmentSlotByType_InventorySlot, int32 CallFunc_GetEquipmentSlotByType_InventorySlot, int32 CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void GetEquipmentSlotByType(enum class EquipmentSlotType EquipmentSlot, int32* InventorySlot, int32 LocalInventorySlot, enum class EquipmentSlotType LocalSlotType, bool Temp_bool_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, enum class EquipmentSlotType CallFunc_GetEquipmentTypeBySlot_EquipmentType, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void GetEquipmentTypeBySlot(int32 EquipmentSlot, enum class EquipmentSlotType* EquipmentType, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void UseContainerItem(int32 ContainerSlot, bool LocalIsContainerOpen, int32 LocalInventorySlot, bool LocalIsPlayerInventory, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_TryToAddItemToInventory_Success, const struct FInventoryItem& CallFunc_TryToAddItemToInventory_OutItem, int32 CallFunc_TryToAddItemToInventory_AddedToSlot);
	void UseInventoryItem(int32 InventorySlot, bool UsedFromInventory, bool UseNotify, bool* ItemUsed, bool Local_UseNotify, class AGameplayPC_C* Local_GameplayPC, bool Local_UsedFromInventory, bool Local_ItemUsed, const struct FInventoryItem& LocalInventoryItem, bool LocalIsContainerOpen, int32 LocalInventorySlot, bool LocalIsPlayerInventory, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetCanStoreItems_CanStoreItems, class AGameplayPC_C* CallFunc_GetControllerAsGameplayPC_AsGameplay_PC, class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess_1, class APawn* CallFunc_K2_GetPawn_ReturnValue, class AZero_Base_C* K2Node_DynamicCast_As0_Base, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue, enum class Enum_InventoryItem_CanUse CallFunc_GetCanUseItem_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_GetItemFamiliarity_Value, bool K2Node_SwitchEnum_CmpSuccess_2, const struct FToolTipInfo& K2Node_MakeStruct_ToolTipInfo, bool CallFunc_ApplyItemEffect_bApplied, bool CallFunc_NotEqual_NameName_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, bool CallFunc_TryToAddItemToInventory_Success, const struct FInventoryItem& CallFunc_TryToAddItemToInventory_OutItem, int32 CallFunc_TryToAddItemToInventory_AddedToSlot);
	void CloseContainer(class AActor* CallFunc_GetOwner_ReturnValue, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface, bool K2Node_DynamicCast_bSuccess_1, TArray<class APlayerState*>& CallFunc_GetPlayersViewing_PlayersViewing, bool CallFunc_Array_RemoveItem_ReturnValue);
	void OpenContainer(class AActor* Container, const TArray<struct FItemInformation>& LocalItemInformation, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface, bool K2Node_DynamicCast_bSuccess, class FText CallFunc_GetContainerProperties_Name, uint8 CallFunc_GetContainerProperties_SlotsPerRow, bool CallFunc_GetContainerProperties_IsStorageContainer, int32 CallFunc_GetContainerProperties_InventorySize, int32 CallFunc_Array_Length_ReturnValue, const struct FContainerInfo& K2Node_MakeStruct_ContainerInfo, int32 Temp_int_Loop_Counter_Variable, TScriptInterface<class IInventoryInterface_C> K2Node_DynamicCast_AsInventory_Interface_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Less_IntInt_ReturnValue, class UInventoryComponent_C* CallFunc_GetContainerInventory_InventoryComponent, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FInventoryItem& CallFunc_Array_Get_Item, const struct FItemInformation& K2Node_MakeStruct_ItemInformation, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void ClearContainerSlotItem(int32 ContainerSlot, int32 LocalSlot, class UContainer_Slot_C* CallFunc_Array_Get_Item, class UWidget* CallFunc_GetChildAt_ReturnValue);
	void SetContainerSlotItem(int32 ContainerSlot, const struct FItemInformation& ItemInformation, int32 LocalSlot, class UContainer_Slot_C* CallFunc_Array_Get_Item, class UWidget* CallFunc_GetChildAt_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void ClearContainerSlots();
	void CreateContainerSlots(int32 ContainerSize, uint8 SlotsPerRow, bool LocalIsStorageContainer, uint8 LocalMaxRowSize, int32 LocalLoopCount, int32 LocalContainerSize, bool CallFunc_Greater_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Variable_1, int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Conv_ByteToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_FCeil_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Max_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1);
	void LoadContainerSlots(const struct FContainerInfo& ContainerProperties, TArray<struct FItemInformation>& ItemInformation, const TArray<struct FItemInformation>& LocalItemInformation, TArray<struct FItemInformation>& K2Node_MakeArray_Array);
	void CloseContainerWindow(int32 Temp_int_Array_Index_Variable, class UContainer_Slot_C* CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void OpenContainerWindow();
	void MoveItem(class UInventoryComponent_C* FromInventory, int32 FromInventorySlot, class UInventoryComponent_C* ToInventory, int32 ToInventorySlot, bool LocalIsEquippingItem, const struct FInventoryItem& LocalSwapInventoryItem, const struct FInventoryItem& LocalInventoryItem, int32 LocalToInventorySlot, int32 LocalFromInventorySlot, class UInventoryComponent_C* LocalToInventory, class UInventoryComponent_C* LocalFromInventory, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_CanContainerStoreItems_Result, bool CallFunc_CanContainerStoreItems_Result_1, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_AddItemToStack_AmountRemaining, const struct FInventoryItem& CallFunc_SetItemAmount_NewInventoryItem, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem_1, bool CallFunc_IsValid_ReturnValue);
	void SetItemAmount(const struct FInventoryItem& InventoryItem, int32 Amount, struct FInventoryItem* NewInventoryItem, const struct FInventoryItem& K2Node_SetFieldsInStruct_StructOut);
	void UseContainer(class AActor* Container, bool CallFunc_DoesImplementInterface_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void RemoveItem(class UInventoryComponent_C* Inventory, int32 InventorySlot, int32 LocalInventorySlot, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_ClearInventoryItem_Success);
	void AddItem(class UInventoryComponent_C* Inventory, int32 InventorySlot, const struct FInventoryItem& InventoryItem, const struct FItemInformation& LocalItemInformation, int32 LocalInventorySlot, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, const struct FItemInformation& K2Node_MakeStruct_ItemInformation, bool CallFunc_SetInventoryItem_Success);
	void AddItemToStack(class UInventoryComponent_C* Inventory, int32 InventorySlot, int32 AmountToAdd, int32* AmountRemaining, int32 LocalRemainingAmount, bool LocalAddedFullAmount, const struct FInventoryItem& LocalInventoryItem, int32 LocalAmountToAdd, int32 LocalInventorySlot, class UInventoryComponent_C* LocalInventory, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_AddToItemAmount_OutItem, int32 CallFunc_Subtract_IntInt_ReturnValue_1, const struct FInventoryItem& CallFunc_AddToItemAmount_OutItem_1, bool CallFunc_LessEqual_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_GetInventoryItem_InventoryItem);
	void FindAndAddAmountToStacks(class UInventoryComponent_C* Inventory, class FName ItemId, int32 Amount, int32* AmountRemaining, int32 LocalInventorySlot, int32 LocalAmount, class FName LocalItemID, class UInventoryComponent_C* LocalInventory, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const struct FInventoryItem& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_AddItemToStack_AmountRemaining, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void ClearInventorySlotItem(int32 InventorySlot);
	void SetInventorySlotItem(int32 InventorySlot, const struct FItemInformation& ItemInformation);
	void CreateInventorySlots(int32 InventorySize, uint8 SlotsPerRow, uint8 LocalMaxRowSize, int32 LocalLoopCount, int32 LocalSlotNumber, int32 LocalInventorySize, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_ByteToFloat_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_FCeil_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Max_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3);
	void LoadInventory(const TArray<class UInventory_Slot_C*>& LocalInventorySlots);
	void CloseInventoryWindow(int32 CallFunc_MakeLiteralInt_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Array_Length_ReturnValue, class UInventory_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void OpenInventoryWindow();
	void Client_OpenContainer(const struct FContainerInfo& ContainerProperties, TArray<struct FItemInformation>& ItemInformation);
	void Client_CloseContainer();
	void Client_SetContainerSlotItem(int32 ContainerSlot, const struct FItemInformation& ItemInformation);
	void Client_ClearContainerSlotItem(int32 ContainerSlot);
	void Server_UseContainer(class AActor* Container);
	void Server_CloseContainer();
	void Server_MoveContainerItem(int32 FromContainerSlot, int32 ToContainerSlot);
	void Server_TakeContainerItem(int32 FromContainerSlot, int32 ToInventorySlot);
	void Server_DepositContainerItem(int32 FromInventorySlot, int32 ToContainerSlot);
	void Server_UseInventoryItem(int32 InventorySlot);
	void Server_UseContainerItem(int32 ContainerSlot);
	void Server_EquipFromInventory(int32 FromInventorySlot, int32 ToInventorySlot);
	void Server_UnequipToInventory(int32 FromInventorySlot, int32 ToInventorySlot);
	void Server_EquipFromContainer(int32 FromInventorySlot, int32 ToInventorySlot);
	void Server_UnequipToContainer(int32 FromInventorySlot, int32 ToInventorySlot);
	void Server_InitInventory();
	void Server_DropItemFromInventory(int32 InventorySlot);
	void Server_GetInventoryItemToolTip(int32 InventorySlot);
	void Client_SetToolTip(const struct FToolTipInfo& ToolTipInfo);
	void Client_ClearToolTip(class FName ItemName);
	void Server_GetContainerItemToolTip(int32 ContainerSlot);
	void Client_UseHotbarSlot(int32 HotbarSlot);
	void Client_ClearHotbarSlot(int32 HotbarSlot);
	void Server_SplitInventoryItem(int32 FromInventorySlot, int32 ToInventorySlot, int32 Amount);
	void Server_SplitContainerItem(int32 FromContainerSlot, int32 ToContainerSlot, int32 Amount);
	void Server_SplitItemFromInventory(int32 FromInventorySlot, int32 ToContainerSlot, int32 Amount);
	void Server_SplitItemFromContainer(int32 FromContainerSlot, int32 FromInventorySlot, int32 Amount);
	void Client_MoveHotbarSlotItem(int32 FromSlot, int32 ToHotBarSlot, bool FromInventory, bool FromHotbar);
	void Server_MoveInventoryItem(int32 FromInventorySlot, int32 ToInventorySlot);
	void Server_IncreaseInventorySize(int32 Amount);
	void Server_DecreaseInventorySize(int32 Amount);
	void Client_IncreaseInventorySlots(int32 Amount);
	void Client_DecreaseInventorySlots(int32 Amount);
	void Client_OpenInventory();
	void Client_CloseInventory();
	void Client_OpenEquipment();
	void Client_CloseEquipment();
	void Server_RefreshInventorySlots();
	void Client_ClearInventorySlotItems();
	void Server_ThrowNextInventoryItem();
	void ServerFillEmptySlots();
	void Server_DropAllItems();
	void Server_IndentAllItems();
	void Client_GetContainerSlotItem(int32 ContainerSlot);
	void Client_SetInventorySlotItem(int32 InventorySlot, const struct FItemInformation& Item_Information);
	void Client_ClearInventorySlotItem(int32 InventorySlot);
	void Client_LoadInventory();
	void ExecuteUbergraph_InventoryManagerComponent(int32 EntryPoint, class UKeyboardModeNotifierComponent_C* CallFunc_GetKeyboardModeNotifier_KeyboardModeNotifier, const struct FContainerInfo& K2Node_CustomEvent_ContainerProperties, TArray<struct FItemInformation>& K2Node_CustomEvent_ItemInformation_1, int32 K2Node_CustomEvent_ContainerSlot_4, const struct FItemInformation& K2Node_CustomEvent_ItemInformation, int32 K2Node_CustomEvent_ContainerSlot_3, class AActor* K2Node_CustomEvent_Container, int32 K2Node_CustomEvent_FromContainerSlot_3, int32 K2Node_CustomEvent_ToContainerSlot_3, int32 K2Node_CustomEvent_FromContainerSlot_2, int32 K2Node_CustomEvent_ToInventorySlot_6, int32 K2Node_CustomEvent_FromInventorySlot_8, int32 K2Node_CustomEvent_ToContainerSlot_2, int32 K2Node_CustomEvent_InventorySlot_4, bool CallFunc_UseInventoryItem_ItemUsed, int32 K2Node_CustomEvent_ContainerSlot_2, int32 K2Node_CustomEvent_FromInventorySlot_7, int32 K2Node_CustomEvent_ToInventorySlot_5, int32 K2Node_CustomEvent_FromInventorySlot_6, int32 K2Node_CustomEvent_ToInventorySlot_4, int32 K2Node_CustomEvent_FromInventorySlot_5, int32 K2Node_CustomEvent_ToInventorySlot_3, int32 K2Node_CustomEvent_FromInventorySlot_4, int32 K2Node_CustomEvent_ToInventorySlot_2, int32 K2Node_CustomEvent_InventorySlot_3, int32 K2Node_CustomEvent_InventorySlot_2, const struct FToolTipInfo& K2Node_CustomEvent_ToolTipInfo, class FName K2Node_CustomEvent_ItemName, int32 K2Node_CustomEvent_ContainerSlot_1, int32 K2Node_CustomEvent_HotbarSlot_1, int32 K2Node_CustomEvent_HotbarSlot, int32 K2Node_CustomEvent_FromInventorySlot_3, int32 K2Node_CustomEvent_ToInventorySlot_1, int32 K2Node_CustomEvent_Amount_7, int32 K2Node_CustomEvent_FromContainerSlot_1, int32 K2Node_CustomEvent_ToContainerSlot_1, int32 K2Node_CustomEvent_Amount_6, int32 K2Node_CustomEvent_FromInventorySlot_2, int32 K2Node_CustomEvent_ToContainerSlot, int32 K2Node_CustomEvent_Amount_5, int32 K2Node_CustomEvent_FromContainerSlot, int32 K2Node_CustomEvent_FromInventorySlot_1, int32 K2Node_CustomEvent_Amount_4, int32 K2Node_CustomEvent_FromSlot, int32 K2Node_CustomEvent_ToHotbarSlot, bool K2Node_CustomEvent_FromInventory, bool K2Node_CustomEvent_FromHotbar, int32 K2Node_CustomEvent_FromInventorySlot, int32 K2Node_CustomEvent_ToInventorySlot, int32 K2Node_CustomEvent_Amount_3, int32 K2Node_CustomEvent_Amount_2, int32 K2Node_CustomEvent_Amount_1, int32 K2Node_CustomEvent_Amount, class AActor* CallFunc_GetOwner_ReturnValue, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC, bool K2Node_DynamicCast_bSuccess, class AGameplayPC_C* K2Node_DynamicCast_AsGameplay_PC_1, bool K2Node_DynamicCast_bSuccess_1, int32 K2Node_CustomEvent_ContainerSlot, int32 K2Node_CustomEvent_InventorySlot_1, const struct FItemInformation& K2Node_CustomEvent_Item_Information, int32 K2Node_CustomEvent_InventorySlot);
	void ItemAddedToInventory__DelegateSignature(const struct FToolTipInfo& InventoryItem, int32 Familiarity, int32 MaxFamiliarity, class FName ID, int32 Amount);
};

}


