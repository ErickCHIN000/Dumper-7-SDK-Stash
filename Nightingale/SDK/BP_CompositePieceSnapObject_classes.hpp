#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x20 (0x58 - 0x38)
// BlueprintGeneratedClass BP_CompositePieceSnapObject.BP_CompositePieceSnapObject_C
class UBP_CompositePieceSnapObject_C : public UCompositePieceSnapObject
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x38(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	enum class ESnapType                         CachedSnapType;                                    // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_1356[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CachedStructureName;                               // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UBP_CompositePieceSnapObject_C* GetDefaultObj();

	bool GetSnapPlacementTransform(class ACharacter* ControllingCharacter, struct FGameplayAbilityTargetDataHandle* SnapTargetData, class UObject* HitObject, const TArray<struct FHitResult>& FoundHits, const struct FGridPoint& SelectedSnapPoint, const TArray<struct FGridPoint>& AllSnapPoints, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, enum class ESnapType CallFunc_GetSnapType_ReturnValue, const struct FHitResult& CallFunc_Array_Get_Item, class UObject* CallFunc_GetHitObject_OutObject, enum class ESnapType CallFunc_GetSnapType_ReturnValue_1, class UObject* CallFunc_GetOwner_ReturnValue, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetPlacementRaytraceHits_OutFoundHits, TArray<struct FHitResult>& CallFunc_GetPlacementRaytraceHits_OutHitResults, TArray<struct FGridPoint>& CallFunc_GetSnapPoints_SnapPoints, const struct FGridPoint& CallFunc_Array_Get_Item_1, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_1, class UObject* CallFunc_GetGridPointOwner_OutOwner, const struct FGridPoint& CallFunc_ChooseCandidateSnapPoint_SnapPoint, const struct FGameplayAbilityTargetDataHandle& CallFunc_GetTargetDataForTargetSnapPoint_TargetData, bool CallFunc_GetTargetDataForTargetSnapPoint_ReturnValue, bool CallFunc_IsGridPointValid_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	struct FTransform GetRelativeTransformBetweenSnapPoints(struct FGameplayAbilityTargetDataHandle& SnapData, const struct FTransform& RelativeTransform, const struct FGridPoint& TargetSnapPoint, const struct FGridPoint& SourceSnapPoint, const struct FSnapPlacementTargetData& CallFunc_GetSnapPlacementData_OutData, class UObject* CallFunc_GetSnapActorFromTargetData_OutActor, const struct FGridPoint& CallFunc_GetSnapActorFromTargetData_OutSelectedSnapPoint, const struct FSnapPlacementTargetData& CallFunc_GetSnapPlacementData_OutData_1, const struct FGridPoint& CallFunc_GetGridPoint_ReturnValue, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue_1, const struct FTransform& CallFunc_MakeRelativeTransform_ReturnValue);
	void GetAllSnapPointIndexesAllowingType(enum class ESnapType SnapType, TArray<int32>* AllAcceptableSnapIndexes, const TArray<int32>& AllAcceptableSnapIndexes, int32 SelectedIndex, const struct FGridPoint& SelectedGridpoint, const TArray<struct FGridPoint>& AllSnapPoints, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, const struct FGridPoint& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue, TArray<struct FGridPoint>& CallFunc_GetGridPoints_ReturnValue);
	void ChooseCandidateSnapPoint(TArray<struct FGridPoint>& SnapPoints, class ACharacter* Character, enum class ESnapType SnapPointType, struct FGridPoint* SnapPoint, const struct FGridPoint& L_SnapPoint, const TArray<struct FGridPoint>& L_SnapPoints, enum class ESnapType L_SnapPointType, double CurrentSnapPointScore, double MinSnapPointScore, const struct FGridPoint& CandidateSnapPoint, const struct FVector& ViewDir, const struct FVector& EndPoint, const struct FVector& StartPoint, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_GetPlacementLinecastMax_ReturnValue, const struct FVector& CallFunc_GetForwardLinecast_OutStartPoint, const struct FVector& CallFunc_GetForwardLinecast_OutEndPoint, bool CallFunc_IsGridPointOccupied_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FGridPoint& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_CalculateSnapPointScore_SnapPointScore, bool CallFunc_DoesLineHitSnapPoint_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, const struct FVector& CallFunc_Normal_ReturnValue, const struct FGridPoint& K2Node_MakeStruct_GridPoint, bool CallFunc_IsGridPointOccupied_ReturnValue_1, bool CallFunc_Less_DoubleDouble_ReturnValue);
	bool GetTargetDataForTargetSnapPoint(class UObject* OtherActor, struct FGridPoint& OtherSnapPoint, struct FGameplayAbilityTargetDataHandle* TargetData, int32 ChoosenSnapIndex, const TArray<int32>& AllAcceptableIndexes, TArray<int32>& CallFunc_GetAllMatchingSnapPointIndexes_FoundSnapPointIndexes, int32 CallFunc_GetSnapPointIndexAndOwner_OutSnapPointIndex, class UObject* CallFunc_GetSnapPointIndexAndOwner_OutSnapPointOwner, class UObject* CallFunc_GetPieceInfoFromStructureObject_OutOwner, int32 CallFunc_GetPieceInfoFromStructureObject_OutPieceId, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FGameplayAbilityTargetDataHandle& CallFunc_AbilityTargetDataFromTransform_ReturnValue, class USnapRulesEnforcer* CallFunc_GetSnapRulesEnforcer_ReturnValue, int32 CallFunc_ChooseSnapPoint_ReturnValue, const struct FGridPoint& CallFunc_GetGridPoint_ReturnValue, const struct FTransform& CallFunc_CalculateSnapTransformForGridPoints_ReturnValue, const struct FSnapPlacementTargetData& K2Node_MakeStruct_SnapPlacementTargetData, bool CallFunc_Array_Contains_ReturnValue, const struct FGameplayAbilityTargetDataHandle& CallFunc_TargetDataFromSnapablePlacementData_ReturnValue);
	bool ValidateSnapPlacementData(struct FSnapPlacementTargetData& SnapData, const struct FGridPoint& TargetSnapPoint, int32 SourcePointIndex, class UObject* CallFunc_GetSnapActorFromTargetData_OutActor, const struct FGridPoint& CallFunc_GetSnapActorFromTargetData_OutSelectedSnapPoint, const struct FGridPoint& CallFunc_GetGridPoint_ReturnValue, bool CallFunc_IsGridPointValid_ReturnValue, bool CallFunc_CanAttachSnapPoints_ReturnValue, bool CallFunc_IsGridPointIndexValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetAllSnapPointsOfType(enum class ESnapType SnapType, TArray<struct FGridPoint>* MatchingSnapPoints, const TArray<struct FGridPoint>& AllSnapPoints, const TArray<struct FGridPoint>& MatchingPoints, const struct FGridPoint& SnapPoint, enum class ESnapType L_SnapType, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FGridPoint& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, TArray<struct FGridPoint>& CallFunc_GetGridPoints_ReturnValue, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void GetAllUnoccupiedSnapPointsOfType(enum class ESnapType SnapType, TArray<struct FGridPoint>* MatchingSnapPoints, const TArray<struct FGridPoint>& MatchingPoints, const struct FGridPoint& SnapPoint, const TArray<struct FGridPoint>& AllSnapPoints, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FGridPoint& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsGridPointOccupied_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue, TArray<struct FGridPoint>& CallFunc_GetGridPoints_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void AttachToOtherSnapObject(class UCompositePieceSnapObject* OtherSnapObject, struct FGridPoint& OtherSnapPoint, int32 MyGridPointIndex, const TArray<struct FGridPoint>& SnapPoints, bool CallFunc_IsGridPointIndexValid_ReturnValue);
	struct FGridPoint GetMatchingGridPointForPiece(class UObject* OtherPiece, struct FGridPoint& OtherPieceGridPoint, int32 GridPointIndex, int32 ChoosenIndex, const TArray<int32>& AllAcceptableSnapIndexes, TArray<int32>& CallFunc_GetAllMatchingSnapPointIndexes_FoundSnapPointIndexes, const struct FGridPoint& CallFunc_GetGridPoint_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Find_ReturnValue, class USnapRulesEnforcer* CallFunc_GetSnapRulesEnforcer_ReturnValue, const struct FGridPoint& K2Node_MakeStruct_GridPoint, int32 CallFunc_ChooseSnapPoint_ReturnValue);
	enum class ESnapType GetOwningStructureType(enum class ESnapType CallFunc_GetSnapType_ReturnValue);
	struct FTransform CalculateSnapTransformForGridPoints(struct FGridPoint& ReferencePoint, struct FGridPoint& PointToSnap, class USnapRulesEnforcer* CallFunc_GetSnapRulesEnforcer_ReturnValue, const struct FTransform& CallFunc_CalculateSnapTransformForPoints_ReturnValue);
	void DrawSnapPoints(TArray<struct FGridPoint>& SnapPoints, const struct FGridPoint& SelectedSnapPoint, const struct FLinearColor& Temp_struct_Variable, int32 CallFunc_Array_Length_ReturnValue, const struct FLinearColor& Temp_struct_Variable_1, const struct FLinearColor& Temp_struct_Variable_2, const struct FLinearColor& Temp_struct_Variable_3, const struct FLinearColor& Temp_struct_Variable_4, const struct FLinearColor& Temp_struct_Variable_5, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable, const struct FGridPoint& CallFunc_Array_Get_Item, bool CallFunc_OwnerHasAuthority_ReturnValue, const class FString& CallFunc_GetSnapPointAcceptableStructuresString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue, bool CallFunc_IsServer_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, int32 CallFunc_RandomIntegerInRange_ReturnValue, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue_1, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, const struct FLinearColor& K2Node_Select_Default, double CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_DrawDebugCircle_Radius_ImplicitCast);
	void Log_Failed_to_Match_Snap_Point_Error(class UObject* OtherActor);
	void GetAllMatchingSnapPointIndexes(class UObject* OtherActor, const struct FGridPoint& OtherPieceGridPoint, TArray<int32>* FoundSnapPointIndexes, const TArray<struct FGridPoint>& AllSnapPoints, const TArray<int32>& AllAcceptableSnapIndexes, int32 SelectedIndex, const struct FGridPoint& SelectedGridpoint, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, enum class ESnapType CallFunc_GetSnapType_ReturnValue, class USnapRulesEnforcer* CallFunc_GetSnapRulesEnforcer_ReturnValue, TArray<int32>& CallFunc_FilterSourcePointIndexes_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, const struct FGridPoint& CallFunc_Array_Get_Item, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface, bool K2Node_DynamicCast_bSuccess, enum class ESnapType CallFunc_GetSnapType_SnapPointType, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue, TArray<struct FGridPoint>& CallFunc_GetGridPoints_ReturnValue, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue_1);
	void CalculateSnapPointScore(struct FGridPoint& SnapPoint, const struct FVector& EyePosition, const struct FVector& ViewDir, double* SnapPointScore, const struct FVector& EyeToSnap, double Distance, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue, double CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_Normal_ReturnValue, double CallFunc_Dot_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_Acos_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	void CanSnapToNearbyActor(const struct FGridPoint& SnapPoint, TArray<class UObject*>& NearbyActors, bool* HasAnyValidAttachment, const struct FGridPoint& L_SnapPoint, const struct FGridPoint& PotentialSnapPoint, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, class UObject* CallFunc_Array_Get_Item, bool CallFunc_IsGridPointValid_ReturnValue, const struct FGridPoint& CallFunc_FindClosestSnapPoint_NearestSnapPoint, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_CanAttachSnapPoints_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetOwnerType(enum class ESnapType* OwnerType, class UObject* CallFunc_GetOwner_ReturnValue, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface, bool K2Node_DynamicCast_bSuccess, enum class ESnapType CallFunc_GetSnapType_SnapPointType);
	void GetLineAngleToPointRadians(const struct FVector& Point, const struct FVector& LineOrigin, const struct FVector& LineDirection, double* AngleXY, double* AngleXZ, const struct FVector& OriginToPoint, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue_1, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, const struct FVector& CallFunc_Normal_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_2, const struct FVector& CallFunc_Normal_ReturnValue_2, double CallFunc_BreakVector_X_3, double CallFunc_BreakVector_Y_3, double CallFunc_BreakVector_Z_3, double CallFunc_Dot_VectorVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_3, double CallFunc_Acos_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_3, double CallFunc_Abs_ReturnValue, double CallFunc_Dot_VectorVector_ReturnValue_1, double CallFunc_Acos_ReturnValue_1, double CallFunc_Abs_ReturnValue_1);
	void FindClosestSnapPoint(class UObject* OtherActor, const struct FGridPoint& MySnapPoint, struct FGridPoint* NearestSnapPoint, const struct FGridPoint& L_MySnapPoint, double MinSqrDist, const struct FGridPoint& CandidateSnapPoint, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, TArray<struct FGridPoint>& CallFunc_GetSnapPoints_SnapPoints, const struct FGridPoint& CallFunc_Array_Get_Item, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, int32 Temp_int_Loop_Counter_Variable, class UObject* CallFunc_GetGridPointOwner_OutOwner, bool CallFunc_Less_IntInt_ReturnValue, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface_1, bool K2Node_DynamicCast_bSuccess_1, enum class ESnapType CallFunc_GetSnapType_SnapPointType, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue_1, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, double CallFunc_Vector_DistanceSquared_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue);
	void DEBUG_DrawGridPoints(double DeltaSeconds);
	void ResolvePotentiallyOccupiedGridPoints();
	void ExecuteUbergraph_BP_CompositePieceSnapObject(int32 EntryPoint, const struct FLinearColor& Temp_struct_Variable, const struct FLinearColor& Temp_struct_Variable_1, int32 Temp_int_Array_Index_Variable, bool Temp_bool_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, TArray<struct FGridPoint>& CallFunc_GetGridPoints_ReturnValue, const struct FGridPoint& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TArray<class UObject*>& CallFunc_GetGridPointOccupyingStructures_OutOccupyingStructures, bool CallFunc_Less_IntInt_ReturnValue, class UObject* CallFunc_Array_Get_Item_1, const class FString& CallFunc_GetDisplayName_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsGridPointOccupied_ReturnValue, const struct FLinearColor& K2Node_Select_Default, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, double Temp_real_Variable, double Temp_real_Variable_1, bool Temp_bool_Variable_1, double K2Node_Event_DeltaSeconds, double K2Node_Select_Default_1, const struct FLinearColor& Temp_struct_Variable_2, const struct FLinearColor& Temp_struct_Variable_3, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool Temp_bool_Variable_2, const struct FLinearColor& K2Node_Select_Default_2, float CallFunc_DrawDebugSphere_Radius_ImplicitCast);
};

}


