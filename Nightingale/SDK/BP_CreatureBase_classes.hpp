#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x860 (0x15D0 - 0xD70)
// BlueprintGeneratedClass BP_CreatureBase.BP_CreatureBase_C
class ABP_CreatureBase_C : public ANWXAICharacter
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xD70(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_FloatyTextComponent_C*             BP_FloatyTextComponent;                            // 0xD78(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CreatureSpellComponent_C*          BP_CreatureSpellComponent;                         // 0xD80(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVoiceSetSelectorComponent*            VoiceSetSelector;                                  // 0xD88(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNWXWidgetComponent*                   NWXNameplate;                                      // 0xD90(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNWXStatusEffectComponent*             NWXStatusEffectComponent;                          // 0xD98(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStatusEffectFXManagerComponent*       StatusEffectFXManager;                             // 0xDA0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UScopedAkComponent*                    ScopedAk_Ambient;                                  // 0xDA8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponentAggregatorComponent*    AudioComponentAggregator;                          // 0xDB0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTicketTakerComponent*                 TicketTaker;                                       // 0xDB8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_WeakPointComponent_C*              BP_WeakPointComponent;                             // 0xDC0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionStimuliSourceComponent*   AIPerceptionStimuliSource;                         // 0xDC8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CreatureComponent_Audio_C*         BP_CreatureComponent_Audio;                        // 0xDD0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerVisibilityComponent_C*       BP_PlayerVisibilityComponent;                      // 0xDD8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTicketGiverComponent_Simple*          TicketGiver;                                       // 0xDE0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractableComponent_C*           BP_InteractableComponent;                          // 0xDE8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PingComponent_C*                   BP_PingComponent;                                  // 0xDF0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                   CreatureInfoDTHandle;                              // 0xDF8(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_CreatureInfo                       CreatureInfoCache;                                 // 0xE08(0xC8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	double                                       CorpseCleanupTime;                                 // 0xED0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bIsDead;                                           // 0xED8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_6F1A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayTag>                  CreatureAttacks;                                   // 0xEE0(0x10)(Edit, BlueprintVisible)
	bool                                         bTriggeredDeathReaction;                           // 0xEF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bDisableBlendspace;                                // 0xEF1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_6F2D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        AttackVolumeHitActors;                             // 0xEF8(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            OnCreatureDamaged;                                 // 0xF08(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         bAttackVolumeEnabled;                              // 0xF18(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_6F40[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       AbilityDamage;                                     // 0xF20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnAttackCollisionBegin;                            // 0xF28(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnAttackCollisionEnd;                              // 0xF38(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FGameplayTag>                  WeaponAttacks;                                     // 0xF48(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            OnMeleeCollisionEnabled;                           // 0xF58(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnMeleeCollisionDisabled;                          // 0xF68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AEquippableItem*                       EquippedItem;                                      // 0xF78(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	class AActor*                                LastDamager;                                       // 0xF80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                AITarget;                                          // 0xF88(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          TimerHandle_UpdateAttributes;                      // 0xF90(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       CapsuleHalfHeight;                                 // 0xF98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CapsuleRadius;                                     // 0xFA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIC_CreatureBase_C*                   CreatureAIC;                                       // 0xFA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_CreatureComponentBase_C*>   CreatureComponents;                                // 0xFB0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBP_CreatureComponent_VFX_C*           BP_CreatureComponent_VFX;                          // 0xFC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                  CreatureWeapons;                                   // 0xFC8(0x10)(Edit, BlueprintVisible)
	enum class E_NPC_Item_AnimBank               ItemAnimBank;                                      // 0xFD8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_6FC7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBP_CreatureComponent_UI_C*            BP_CreatureComponent_UI;                           // 0xFE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	enum class ECollisionProfiles                CapsuleCollisionOverride;                          // 0xFE8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_6FD0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABP_PlayerController_C*>        LifetimeDamagers;                                  // 0xFF0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FName                                  ProjectileSocket;                                  // 0x1000(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsInHitReaction;                                   // 0x1008(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         SpawnHidden;                                       // 0x1009(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         PlayEntrance;                                      // 0x100A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         PlayExit;                                          // 0x100B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         EnableAbilityZoneVisualization;                    // 0x100C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_6FF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   WeaponHandle;                                      // 0x1010(0x10)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FDataTableRowHandle                   BPCreatureData;                                    // 0x1020(0x10)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                   AICCreatureData;                                   // 0x1030(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDataTableRowHandle>           BPCreatureDataVariants;                            // 0x1040(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                 Prey;                                              // 0x1050(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNWXPlayMontageAndWaitForEvent*        CurrentAbilityMontage;                             // 0x1070(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	enum class EVisibilityBasedAnimTickOption    CachedStartingVisibilityBasedAnimTickOption;       // 0x1078(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_700E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          UIHarvestTag;                                      // 0x107C(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         AllowHitReactions;                                 // 0x1084(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_701C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          HackAnimTickTimer;                                 // 0x1088(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                          HackAnimTickMontage;                               // 0x1090(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          HackAnimCheckMontageTimer;                         // 0x1098(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                  AddedTageGameplayTags;                             // 0x10A0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AEquippableItem*                       CarriedItem;                                       // 0x10B0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          HostilityTag;                                      // 0x10B8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnCreaturePossessed;                               // 0x10C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                          LootCompleteTimer;                                 // 0x10D0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       LastDamageCall;                                    // 0x10D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         AllowCorpseDamage;                                 // 0x10E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_705F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayAttribute, double>      GASAttributes;                                     // 0x10E8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_AbilityZoneVisualizationComponent_C* ZoneVisualizationComponent;                        // 0x1138(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          Hit_React_Tags;                                    // 0x1140(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         UseHitReactThresholdReactions;                     // 0x1148(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_706C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       HitReactThresholdValue;                            // 0x1150(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       HitReactThresholdUpdateRate;                       // 0x1158(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       HitReactThresholdDecayRate;                        // 0x1160(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       HitReactThresholdDamage;                           // 0x1168(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       HitReactThresholdIncreasePerReaction;              // 0x1170(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       HitReactThresholdIncreaseDecayRate;                // 0x1178(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentHitReactionThresholdValue;                  // 0x1180(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Abstract;                                          // 0x1188(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7086[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 KillerTagContainer;                                // 0x1190(0x20)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	struct FDataTableRowHandle                   UIData;                                            // 0x11B0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayAbilitySpecHandle>    SpawnerAbilityHandles;                             // 0x11C0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       RewardDamageThreshold;                             // 0x11D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USkeletalMesh>>  Mesh_Variations;                                   // 0x11D8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class USkeletalMesh>          MeshOverride;                                      // 0x11E8(0x28)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, HasGetValueTypeHash)
	bool                                         HasBroadcastDeath;                                 // 0x1210(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_709D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FVector>           SocketTraceLocations;                              // 0x1218(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	enum class EDrawDebugTrace                   SocketTraceDebug;                                  // 0x1268(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_70A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FS_CreatureSocketTraceData>    Socket_Trace_Data;                                 // 0x1270(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                          FamilyTag;                                         // 0x1280(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       DamageMultiplier;                                  // 0x1288(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ShowNameplate;                                     // 0x1290(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_70B6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FRotator>          SocketTraceRotations;                              // 0x1298(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                               BeamImpactPoint;                                   // 0x12E8(0x18)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ShowWeakpoint;                                     // 0x1300(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_70E9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MagicResist;                                       // 0x1308(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEquippableItem*                       Weapon;                                            // 0x1310(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          Tag;                                               // 0x1318(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                     DissolveCrustEffect;                               // 0x1320(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                         DeathDissolve;                                     // 0x1328(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7101[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          DissolveInTag;                                     // 0x132C(0x8)(Edit, BlueprintVisible, Net, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7108[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       DissolveTime;                                      // 0x1338(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsNight;                                           // 0x1340(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7113[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       ConeBeamTickrateValue;                             // 0x1348(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemDataReference                    StartingWeaponReference;                           // 0x1350(0x80)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FItemDataReference                    CurrentWeaponReference;                            // 0x13D0(0x80)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ABP_Character_C*                       SpellCaster;                                       // 0x1450(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          SpellTimerHandle;                                  // 0x1458(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          DissolveDestroySelfTimer;                          // 0x1460(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UAkSwitchValue*>                Wwise_Internal_Switch_Values;                      // 0x1468(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTag                          DissolveOutTag;                                    // 0x1478(0x8)(Edit, BlueprintVisible, Net, NoDestructor, HasGetValueTypeHash)
	bool                                         NatureGlow;                                        // 0x1480(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_713A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNiagaraComponent*                     VFXNatureGlow;                                     // 0x1488(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                         LookForNewObject;                                  // 0x1490(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7146[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>> HarvestIconMap;                                    // 0x1498(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            OnMontageNotificationBegin;                        // 0x14E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDataTableRowHandle                   Map_Pin_Presentation_Data_Handle;                  // 0x14F8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         IsGettingTracked;                                  // 0x1508(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7158[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMapPinComponent*                      TrackingMapPin;                                    // 0x1510(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                        Blendshape0Weight;                                 // 0x1518(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Blendshape1Weight;                                 // 0x151C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Blendshape2Weight;                                 // 0x1520(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Blendshape3Weight;                                 // 0x1524(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        HeroBlendshape1Weight;                             // 0x1528(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        HeroBlendshape2Weight;                             // 0x152C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        HeroBlendshape3Weight;                             // 0x1530(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Blendshape4Weight;                                 // 0x1534(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle           ItemGrantEffect;                                   // 0x1538(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnPlayerTargeted;                                  // 0x1540(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                       SkinningDamageIncrement;                           // 0x1550(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                     BeastInstinctVFX;                                  // 0x1558(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          BeastInstinctTimer;                                // 0x1560(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         BeastInstinctOn;                                   // 0x1568(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7197[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ExposeWeaknessTimer;                               // 0x1570(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         WeakpointActive;                                   // 0x1578(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_71A1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           HealthCurve;                                       // 0x1580(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           StrengthResistCurve;                               // 0x1588(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           FallingCurve;                                      // 0x1590(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                        FallingDamagePct;                                  // 0x1598(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_71B4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTagValueContainer                    FallingTagValueContainer;                          // 0x15A0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                 HarvestTags;                                       // 0x15B0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class ABP_CreatureBase_C* GetDefaultObj();

	bool IsVulnerableToDamageTags(struct FGameplayTagContainer& DamageTags, int32 IdentifierIndex, TScriptInterface<class IBPI_Interactable_C> K2Node_DynamicCast_AsBPI_Interactable, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsHarvestable_IsHarvestable, bool CallFunc_HasAnyTags_ReturnValue);
	bool IsVulnerableToPowerLevel(class AActor* Source, int32 IdentifierIndex, struct FPowerLevel* OutPowerLevelDifference, bool Temp_bool_Variable, const struct FPowerLevel& Temp_struct_Variable, const struct FPowerLevel& CallFunc_GetPowerLevel_OutPowerLevel, bool CallFunc_GetPowerLevel_ReturnValue, TScriptInterface<class IBPI_Interactable_C> K2Node_DynamicCast_AsBPI_Interactable, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsHarvestable_IsHarvestable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const struct FPowerLevel& K2Node_MakeStruct_PowerLevel, TScriptInterface<class IPowerLevelInterface> K2Node_DynamicCast_AsPower_Level_Interface, bool K2Node_DynamicCast_bSuccess_1, const struct FPowerLevel& CallFunc_GetPowerLevel_OutPowerLevel_1, bool CallFunc_GetPowerLevel_ReturnValue_1);
	void GetCarriedResource(class AEquippableItem** ResourceItem, bool* IsCarryingResource);
	void GetItemConst(const struct FGameplayTag& ContextTag, class AEquippableItem** Weapon);
	void ConsumeItemProxy(class AActor* ItemProxyActor, bool* Success, class ABP_ItemProxy_C* LItemProxy, class ABP_ItemProxy_C* K2Node_DynamicCast_AsBP_Item_Proxy, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue);
	void CreateAndEquipItemFromEntry(const struct FInventoryEntry& Entry, bool* bSuccess, class UAILoadoutComponentBase* LAILoadoutComponent, bool CallFunc_IsValid_ReturnValue, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue);
	void PickUpItemProxy(class AActor* ItemProxyActor, bool* Success, class UAILoadoutComponentBase* LAILoadoutComponent, class AItemProxyBase* K2Node_DynamicCast_AsItem_Proxy_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_PickUpItemProxy_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue);
	void WithdrawItemFromContainerByTag(TScriptInterface<class IItemContainer> ItemContainer, const struct FGameplayTag& GameplayTag, bool* Success, class UAILoadoutComponentBase* LAILoadoutComponent, const struct FGameplayTag& LGameplayTag, TScriptInterface<class IItemContainer> LItemContainer, bool CallFunc_WithdrawItemFromContainerByTag_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue);
	void UnequipEquippedItem(bool* Success, class UAILoadoutComponentBase* LAILoadoutComponent, bool CallFunc_IsValid_ReturnValue, const struct FGameplayTag& Temp_struct_Variable, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_UnequipEquippedItem_ReturnValue);
	void CreateAndEquipItemFromItemID(const struct FItemDataReference& ItemId, bool* Success, class UAILoadoutComponentBase* LAILoadoutComponent, const struct FDataTableRowHandle& LItemId, bool CallFunc_IsValid_ReturnValue, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue, const struct FDynamicTypedStructs& Temp_struct_Variable);
	void TransferItemToWorldItemContainerActor(class AActor* ToActor, class AEquippableItem* Item, bool* Success, class UAILoadoutComponentBase* LAILoadoutComponent, class AEquippableItem* LItem, class AActor* LToActor, bool CallFunc_TransferBetweenWorldItemContainerActors_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue);
	void TransferItemFromWorldItemContainerActor(class AActor* FromActor, class AEquippableItem* Item, bool* Success, class UAILoadoutComponentBase* LAILoadoutComponent, class AEquippableItem* LItem, class AActor* LFromActor, bool CallFunc_TransferBetweenWorldItemContainerActors_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue);
	void GetItem(const struct FGameplayTag& ContextTag, class AEquippableItem** Weapon);
	void GetEquippedRangedWeapon(const struct FGameplayTag& ContextTag, class AEquippableItem** EquippedItem, class ABP_RangedWeapon_Base_C* K2Node_DynamicCast_AsBP_Ranged_Weapon_Base, bool K2Node_DynamicCast_bSuccess);
	void GetShootVector(double ProjectileLaunchDistance, struct FVector* ForwardVector, class AActor* LocalTarget, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ABP_CreatureBase_C* K2Node_DynamicCast_AsBP_Creature_Base, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_1, class AActor* CallFunc_GetTarget_Target);
	void GetProjectileStart(double ProjectileLaunchDistance, struct FVector* ProjectileStart, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue);
	void GetShotInstigator(class AController** Controller);
	void GetAmmoAmount(const struct FItemDataReference& ItemReference, int32* Amount);
	void ConsumeAmmo(const struct FItemDataReference& AmmoReference, int32 Amount, int32* AmountConsumed);
	void GetThreat(class AActor* ThreateningActor, double* Threat, bool CallFunc_IsValid_ReturnValue, class AController* CallFunc_GetController_ReturnValue, TScriptInterface<class IBPI_Threat_C> K2Node_DynamicCast_AsBPI_Threat, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, double CallFunc_GetThreat_Threat);
	void ModifyThreat(class AActor* ThreateningActor, double Threat, bool* Success, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_Threat_C> K2Node_DynamicCast_AsBPI_Threat, bool K2Node_DynamicCast_bSuccess, bool CallFunc_ModifyThreat_Success);
	void GetEmployer(class AActor** Employer, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_Employee_C> K2Node_DynamicCast_AsBPI_Employee, bool K2Node_DynamicCast_bSuccess, class AActor* CallFunc_GetEmployer_Employer);
	void CanQueryInteractable(bool* Can_Query);
	void HoldInteractionAvailable(bool* bAvailable);
	void IsInteractionDisabled(class AController* Controller, const struct FInteractionData& InteractionData, bool* bIsDisabled, class FString* DisabledText);
	void DoesHaveResourceType(int32 HitId, enum class EResourceType DesiredResourceType, bool* bHasResourceType);
	void IsHarvestable(const struct FInteractionData& Interaction, bool* IsHarvestable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void GetInteractIcon(const struct FInteractionData& InteractionData, TSoftObjectPtr<class UTexture2D>* Icon, TSoftObjectPtr<class UTexture2D> SoftIcon, bool CallFunc_IsHarvestable_IsHarvestable, bool CallFunc_IsValidSoftObjectReference_ReturnValue, TSoftObjectPtr<class UTexture2D> CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void GetInteractText(const struct FInteractionData& InteractionData, class FString* InteractText);
	void InteractionRequiresClientOnly(class AController* Controller, bool* RequiresClientAction);
	void InteractReleased(bool* Success);
	void InteractPressed(bool* Success);
	void CanInteractWithActor(class AController* Controller, const struct FInteractionData& InteractionData, bool* InteractAvailable, bool CallFunc_Not_PreBool_ReturnValue);
	void ReturnMeshToHighlight(const struct FInteractionData& InteractionData, TArray<class UStaticMeshComponent*>* StaticMesh_to_Highlight, TArray<class USkeletalMeshComponent*>* SkeletalMesh_to_Highlight, bool* Hostile_, enum class EItemQuality* Quality, TArray<class USkeletalMeshComponent*>& CallFunc_K2_GetComponentsByClass_ReturnValue);
	void GetWeakpointComponent(bool* HasInterface, TScriptInterface<class IBPI_WeakPoint_C>* Interface);
	void GetPingInterface(bool* bHasInterface, TScriptInterface<class IBPI_Ping_C>* PingInterface);
	void UpdateAnimBPValues(bool& bIsMoving, bool& bIsInAir, bool& bIsMinHealth, bool& bActiveBlendspace, bool& bHasTarget, bool& bHasMovementInput, bool& bIsAiming, double& Direction, double& ForwardSpeed, double& TargetToCharacterRotationDifference, double& MovementInputToVelocityDifference, double& AimYawDelta, double& AimYawRate, struct FVector& TargetLocation, struct FVector& Velocity, struct FRotator& CharacterRotation, struct FRotator& LastVelocityRotation, struct FRotator& LastMovementInputRotation, struct FRotator& LookingRotation, enum class EAlertnessLevelType& AlertnessLevel, bool* Success, enum class EAlertnessLevelType AlertnessLevelLocal, const struct FVector& TargetLocationLocal, double ForwardSpeedLocal, double DirectionLocal, bool bHasTargetLocal, bool bActiveBlendspaceLocal, bool bIsMinHealthLocal, bool bIsInAirLocal, bool bIsMovingLocal, class UAnimInstance* AnimInstance, bool CallFunc_IsMoving_IsMoving, double CallFunc_ForwardSpeed_ForwardSpeed, bool CallFunc_IsInAir_IsInAir, const struct FVector& CallFunc_GetVelocity_ReturnValue, double CallFunc_VSize_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, TScriptInterface<class IBPI_AnimationStates_C> K2Node_DynamicCast_AsBPI_Animation_States, bool K2Node_DynamicCast_bSuccess, enum class EAlertnessLevelType CallFunc_GetAlertnessLevel_AlertnessLevel, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TScriptInterface<class IBPI_Targeter_C> K2Node_DynamicCast_AsBPI_Targeter, bool K2Node_DynamicCast_bSuccess_1, class AActor* CallFunc_GetTarget_Target, bool CallFunc_IsMinHealth_bIsMinHealth, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_Direction_Direction);
	void GetAlertnessLevel(enum class EAlertnessLevelType* AlertnessLevel, enum class EAlertnessLevelType CallFunc_GetAlertness_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void SetAlertnessLevel(enum class EAlertnessLevelType AlertnessLevel, bool* Success, bool CallFunc_IsValid_ReturnValue);
	void GrazeResourceNode(class AResourceNodeIIMBase* ResourceNode, bool* bSuccess);
	void GetIsHerbivore(bool* bIsHerbivore, const struct FGameplayTag& Temp_struct_Variable, bool CallFunc_ActorHasTag_ReturnValue);
	void GetSimulationStateManager(class ANWXSimStateManagerBase** Simulation_State_Manager, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class ANWXGameModeBase* K2Node_DynamicCast_AsNWXGame_Mode_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, class ABP_SimulationStateManager_C* CallFunc_GetManager_ReturnValue);
	void ResolveSimulationRound(bool* bSuccess);
	void HasHungrySquadMember(bool* bHasHungrySquadMember, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_Consumer_C> K2Node_DynamicCast_AsBPI_Consumer, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasHungrySquadMember_bHasHungrySquadMember);
	void IsHungry(bool* bIsHungry);
	void AllowEnemyTargeting(bool* Allowed, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_Targeter_C> K2Node_DynamicCast_AsBPI_Targeter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_AllowEnemyTargeting_Allowed);
	void AllowFriendlyTargeting(bool* Allowed, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_Targeter_C> K2Node_DynamicCast_AsBPI_Targeter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_AllowFriendlyTargeting_Allowed);
	void IsAfraidOf(class AActor* ActorInQuestion, bool* bIsAfraidOf, class AActor* LActor, const struct FGameplayTag& Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, const struct FGameplayTag& Temp_struct_Variable_1, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, class ABP_CreatureBase_C* K2Node_DynamicCast_AsBP_Creature_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue, TArray<struct FGameplayTag>& K2Node_MakeArray_Array, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromArray_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue_1);
	void GetTargetPriorityOrder(TArray<struct FGameplayTag>* TargetPriorityOrder, class AAIC_CreatureBase_C* CreatureController, const TArray<struct FGameplayTag>& TargetPriorityArray, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags_1);
	void IsEnemy(class AActor* ActorInQuestion, bool* bIsEnemy, const struct FGameplayTag& LHostilityTag, const struct FGameplayTagContainer& ActorHostilityTags, class AActor* PotentialEnemy, TScriptInterface<class IIdentifierTagInterface> K2Node_DynamicCast_AsIdentifier_Tag_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, const struct FGameplayTag& CallFunc_GetIdentifierTag_ReturnValue, const struct FGameplayTag& Temp_struct_Variable, const struct FCreatureHostilityData& CallFunc_GetCreatureHostility_CreatureHostilityInfo, bool CallFunc_GetCreatureHostility_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetTarget(class AActor** Target, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, TScriptInterface<class IBPI_Targeter_C> K2Node_DynamicCast_AsBPI_Targeter, bool K2Node_DynamicCast_bSuccess, class AActor* CallFunc_GetTarget_Target, bool CallFunc_IsValid_ReturnValue);
	void SetTarget(class AActor* NewTarget, class AActor** Target, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_Targeter_C> K2Node_DynamicCast_AsBPI_Targeter, bool K2Node_DynamicCast_bSuccess, class AActor* CallFunc_SetTarget_Target);
	void ClearTarget(bool* Success, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_Targeter_C> K2Node_DynamicCast_AsBPI_Targeter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_ClearTarget_Success);
	void IsFriend(class AActor* ActorInQuestion, bool* bIsFriend, const struct FGameplayTag& LHostilityTag, class AActor* PotentialFriend, TScriptInterface<class IIdentifierTagInterface> K2Node_DynamicCast_AsIdentifier_Tag_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, const struct FGameplayTag& CallFunc_GetIdentifierTag_ReturnValue, const struct FGameplayTag& Temp_struct_Variable, const struct FCreatureHostilityData& CallFunc_GetCreatureHostility_CreatureHostilityInfo, bool CallFunc_GetCreatureHostility_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void RemoveFromEnemies(const struct FGameplayTag& EnemyTag, bool* bSuccess, bool CallFunc_RemoveGameplayTag_ReturnValue);
	void AddToEnemies(const struct FGameplayTag& EnemyTag, bool* bSuccess);
	void RemoveFromFriends(const struct FGameplayTag& FriendTag, bool* bSuccess, bool CallFunc_RemoveGameplayTag_ReturnValue);
	void AddToFriends(const struct FGameplayTag& FriendTag, bool* bSuccess);
	void GetCreatureInfo(struct FS_CreatureInfo* Info);
	void GetRedirectedTarget(bool* ShouldRedirect, class AActor** RedirectedTarget);
	void GetDamageEffect(class UClass** DamageEffect);
	void StopCastEffects(bool* Success);
	void PlayCastEffects(bool* Success);
	void GetEquippedWeapon(class AEquippableItem** CreatureWeapon);
	void EquipWeapon(const struct FGameplayTag& GameplayWeaponTag, bool* Succeeded, TArray<struct FGameplayTag>& K2Node_MakeArray_Array, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromArray_ReturnValue, bool CallFunc_TryActivateAbilitiesByTag_ReturnValue);
	void SelectWeapon(class AActor* AttackTarget, struct FGameplayTag* GameplayWeaponTag, const struct FSoftObjectPath& CallFunc_MakeSoftObjectPath_ReturnValue, const struct FItemDataReference& K2Node_MakeStruct_ItemDataReference, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, const struct FGameplayTag& CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue);
	void DisableMeleeCollision(bool* bSuccess);
	void EnableMeleeCollision(bool* bSuccess);
	void CanAttack(bool* bCanAttack, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void SelectAttack(class AActor* AttackTarget, struct FGameplayTag* GameplayAttackTag, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_RandomInteger_ReturnValue_1, const struct FGameplayTag& CallFunc_Array_Get_Item, const struct FGameplayTag& CallFunc_Array_Get_Item_1);
	void Attack(const struct FGameplayTag& GameplayAttackTag, bool* Succeeded, TArray<struct FGameplayTag>& K2Node_MakeArray_Array, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromArray_ReturnValue, bool CallFunc_TryActivateAbilitiesByTag_ReturnValue, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, int32 CallFunc_SendGameplayEventToActor_ReturnValue);
	class FName GetCreatureDataRowName();
	bool GetPowerLevel(struct FPowerLevel* OutPowerLevel, const struct FPowerLevel& PowerLevel, uint8 CallFunc_GetPowerTier_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, const struct FPowerLevel& K2Node_MakeStruct_PowerLevel);
	class FText GetAIName(class FText CallFunc_BreakCreatureUIInfo_CreatureName, TSoftObjectPtr<class UTexture2D> CallFunc_BreakCreatureUIInfo_CreatureIcon, int32 CallFunc_BreakCreatureUIInfo_FerocityMin, int32 CallFunc_BreakCreatureUIInfo_FerocityMax, TArray<enum class EBiomeID>& CallFunc_BreakCreatureUIInfo_Biomes, bool CallFunc_BreakCreatureUIInfo_ShowNameplate);
	void On_Alertness_Updated(enum class EAlertnessLevelType Alertness, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void CheckHarvestTags(const struct FGameplayTagContainer& TagsToCheck, bool* CanHarvest, bool CallFunc_HasTag_ReturnValue, bool CallFunc_HasTag_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_HasTag_ReturnValue_2, bool CallFunc_HasTag_ReturnValue_3, bool CallFunc_HasTag_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_HasTag_ReturnValue_5, bool CallFunc_HasTag_ReturnValue_6, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_HasTag_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_HasAnyTags_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2);
	void OnResourceProxySpawned(class AItemProxyBase* ProxyItem, class ABP_ItemProxy_C* K2Node_DynamicCast_AsBP_Item_Proxy, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void SetBlendshapes(int32 BlendshapeMax, int32 SelectVariant, bool CallFunc_Not_PreBool_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue, bool CallFunc_RandomBoolWithWeight_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue_2, double CallFunc_Conv_IntToDouble_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, double CallFunc_Conv_IntToDouble_ReturnValue_4, double CallFunc_Conv_IntToDouble_ReturnValue_5, double CallFunc_Divide_DoubleDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue_2, bool CallFunc_RandomBoolWithWeight_ReturnValue_1, bool CallFunc_RandomBoolWithWeight_ReturnValue_2, double CallFunc_Conv_IntToDouble_ReturnValue_6, double CallFunc_Conv_IntToDouble_ReturnValue_7, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_3, double CallFunc_Conv_IntToDouble_ReturnValue_8, double CallFunc_Divide_DoubleDouble_ReturnValue_3, double CallFunc_Conv_IntToDouble_ReturnValue_9, bool CallFunc_RandomBoolWithWeight_ReturnValue_3, double CallFunc_Divide_DoubleDouble_ReturnValue_4, bool CallFunc_RandomBoolWithWeight_ReturnValue_4, double CallFunc_Conv_IntToDouble_ReturnValue_10, double CallFunc_Conv_IntToDouble_ReturnValue_11, double CallFunc_Divide_DoubleDouble_ReturnValue_5, bool CallFunc_RandomBoolWithWeight_ReturnValue_5, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 CallFunc_Add_IntInt_ReturnValue_5, float CallFunc_RandomBoolWithWeight_Weight_ImplicitCast, float CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_1, float CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_2, float CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_3, float CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_4, float CallFunc_RandomBoolWithWeight_Weight_ImplicitCast_5);
	void InitializeGasAttributes(int32 LTEMPRealmPowerToUse, float LHealthMulti, class UCurveFloat* LStrengthResistCurve, float LStrengthResist, double LHealthMultiplier, class UCurveFloat* LHealthCurve, const struct FGameplayAttribute& StealthKey, double LStealth, class UCurveFloat* LDamageCurve, double LDamageMultiplier, double LAttack3, double LAttack2, double LAttack1, double LRun, double LWalk, double LHealth, const struct FGameplayAttribute& LAttribute, int32 Temp_int_Array_Index_Variable, bool CallFunc_HasAuthority_ReturnValue, double CallFunc_GetCreatureRealmPowerDamageMultiplier_Multiplier, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FGameplayAttribute& Temp_struct_Variable, const struct FGameplayAttribute& Temp_struct_Variable_1, const struct FGameplayAttribute& Temp_struct_Variable_2, const struct FGameplayAttribute& Temp_struct_Variable_3, int32 CallFunc_GetCreatureRealmPower_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, int32 CallFunc_GetCreatureRealmPower_ReturnValue_1, double CallFunc_Conv_IntToDouble_ReturnValue_1, float CallFunc_GetFloatValue_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_5, int32 CallFunc_GetCreatureRealmPower_ReturnValue_2, TArray<struct FGameplayAttribute>& CallFunc_Map_Keys_Keys, double CallFunc_Conv_IntToDouble_ReturnValue_2, const struct FGameplayAttribute& CallFunc_Array_Get_Item, float CallFunc_GetFloatValue_ReturnValue_2, bool CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, double CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, int32 CallFunc_Map_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_6, double CallFunc_Multiply_DoubleDouble_ReturnValue_7, double CallFunc_Multiply_DoubleDouble_ReturnValue_8, double CallFunc_Multiply_DoubleDouble_ReturnValue_9, double CallFunc_Multiply_DoubleDouble_ReturnValue_10, double CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, double CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, double CallFunc_Map_Find_Value_3, bool CallFunc_Map_Find_ReturnValue_3, double CallFunc_Map_Find_Value_4, bool CallFunc_Map_Find_ReturnValue_4, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingSpec_ReturnValue, double CallFunc_FMax_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_2, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_4, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_5, int32 CallFunc_Add_IntInt_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_6, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4, float CallFunc_GetFloatValue_InTime_ImplicitCast, float CallFunc_GetFloatValue_InTime_ImplicitCast_1, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5, float CallFunc_GetFloatValue_InTime_ImplicitCast_2, double K2Node_VariableSet_LHealthMultiplier_ImplicitCast, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_2, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_3, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_4, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_5);
	void EquippedItemChangeOverride();
	void OnRep_EquippedItem();
	void ExposeWeaknessUpdater(bool HasCaster, const TArray<class APawn*>& PlayerList, const struct FGameplayTag& Temp_struct_Variable, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_RemoveStatusEffect_ReturnValue, bool CallFunc_RemoveStatusEffect_ReturnValue_1, class APawn* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, TArray<class APawn*>& CallFunc_GetPlayersInRange_Players, bool CallFunc_Array_IsEmpty_ReturnValue);
	void PlayAdditiveHitReact(double Damage, const struct FHitResult& Hit_Result, double Strength, const struct FGameplayTagContainer& Tags, class AActor* DamageSource, bool CallFunc_IsMinHealth_ReturnValue, bool CallFunc_NewPlayHitReaction_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, float CallFunc_NewPlayHitReaction_Strength_ImplicitCast);
	void ServerStopMontage(bool* bSuccess);
	void ServerPlayMontage(class UAnimMontage* Montage_To_Play, double PlayRate, class FName Section, bool Disable_Blendspace, bool Looping, bool* bSuccess, bool CallFunc_HasAuthority_ReturnValue, float CallFunc_Multicast_PlayCreatureMontage_InPlayRate_ImplicitCast);
	void ActivateHeroMapPin();
	void SetArachnophobiaMode(bool Bool);
	void AddRemoveStatesForDissolve(bool Add, const struct FGameplayTag& Temp_struct_Variable, const struct FGameplayTag& Temp_struct_Variable_1, const struct FGameplayTag& Temp_struct_Variable_2, const struct FGameplayTag& Temp_struct_Variable_3);
	void DeactivateMapPin(bool CallFunc_IsValid_ReturnValue);
	void ActivateMapPin(class UMapPinComponent* CallFunc_AddComponentByClass_ReturnValue);
	void MovementSpeedChanged(enum class EMovementSpeed MovementSpeed);
	void PlayStunReaction(const struct FGameplayTag& Temp_struct_Variable, const struct FGameplayTag& Temp_struct_Variable_1, bool CallFunc_ActorHasTag_ReturnValue);
	void AttackStructureObjectBreak(class UObject* StructurePiece, class AActor* Instigator);
	void SetIncorporeal(const struct FGameplayTag& Temp_struct_Variable);
	void OverrideEquippedItem(class AEquippableItem* EquippedItem, bool CallFunc_IsServer_ReturnValue);
	bool IsShowingWeakpoint();
	void OnRep_NatureGlow(bool CallFunc_IsValid_ReturnValue, class USkeletalMeshComponent* CallFunc_GetComponentByClass_ReturnValue, class UNiagaraComponent* CallFunc_SpawnSystemAttached_ReturnValue);
	void OnDamageActor(class AActor* Source, struct FGameplayTagContainer& EffectTags, float BaseDamage, struct FHitResult& HitResult, struct FTagValueContainer& TagValueContainer, TArray<struct FGameplayEffectCue>& GameplayCues, struct FTagValueContainer* AggregatedDamageTags, const struct FTagValueContainer& CallFunc_Damage_Actor_Internal_OutTagValueContainer, double K2Node_VariableSet_LastDamageCall_ImplicitCast, double CallFunc_Damage_Actor_Internal_BaseDamage_ImplicitCast);
	void OnDayNightChange(bool IsNight);
	void OnDemonDeerDeath(class ANWXAICharacter* Character);
	void OnRep_DeathDissolve(bool CallFunc_K2_IsValidTimerHandle_ReturnValue, bool CallFunc_IsServer_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	void CorpseCleanup(const struct FGameplayTag& Temp_struct_Variable);
	void Stop_WP_Indicator();
	void Start_WP_Indicator();
	void GetSpawner(class ANWXAISpawner** Spawner);
	void OnRep_ShowNameplate(class UWBP_CreatureNamePlate_C* LNamePlate);
	void BroadcastDeath(class ANWXAISpawner* CallFunc_GetSpawner_Spawner, bool CallFunc_GrantRewards_bSuccess, class ABP_CreatureSpawnerBase_C* K2Node_DynamicCast_AsBP_Creature_Spawner_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void OnRep_MeshOverride(bool CallFunc_HasAuthority_ReturnValue);
	void ApplyMeshVariation(int32 LIndex, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_AreAutomatedTestsRunning_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, TSoftObjectPtr<class USkeletalMesh> CallFunc_Array_Get_Item);
	void Apply_Gameplay_Abilities_for_Spawner(TArray<struct FGameplayAbilitySpecDef>& GameplayAbilitySpecDefinitions, TArray<struct FGameplayTag>& WeaponAttacks, TArray<struct FGameplayAbilitySpecHandle>& CallFunc_AddGameplayAbilities_AbilityHandle);
	void AddGameplayAbilities(TArray<struct FGameplayAbilitySpecDef>& GameplayAbilitySpecDefinitions, TArray<struct FGameplayAbilitySpecHandle>* AbilityHandle, const TArray<struct FGameplayAbilitySpecHandle>& LHandles, bool CallFunc_HasAuthority_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_IntInt_ReturnValue, const struct FGameplayAbilitySpecDef& CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, const struct FGameplayAbilitySpecHandle& CallFunc_GiveAbility_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsValidAbilitySpecHandle_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void Validate_Creature(bool CallFunc_IsValid_ReturnValue, class USkeletalMesh* CallFunc_GetSkeletalMeshAsset_ReturnValue, class UPhysicsAsset* CallFunc_GetPhysicsAsset_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2);
	void LoadDataFromDataTables(float LHealthMulti, class UCurveFloat* LHealthCurve, const struct FS_BPCreatureData& LData, uint8 CallFunc_Conv_IntToByte_ReturnValue, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, uint8 CallFunc_Conv_IntToByte_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, const struct FS_BPCreatureData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, float K2Node_VariableSet_StaggerStrengthThreshold_ImplicitCast, float K2Node_VariableSet_KnockDownStrengthThreshold_ImplicitCast, float K2Node_VariableSet_ExplosiveStrengthThreshold_ImplicitCast, double K2Node_VariableSet_HitReactThresholdValue_ImplicitCast, double K2Node_VariableSet_HitReactThresholdUpdateRate_ImplicitCast, double K2Node_VariableSet_HitReactThresholdDecayRate_ImplicitCast, double K2Node_VariableSet_HitReactThresholdIncreasePerReaction_ImplicitCast, double K2Node_VariableSet_HitReactThresholdIncreaseDecayRate_ImplicitCast);
	void UpdateCharMoveSpeeds(TMap<enum class EMovementSpeed, double> SpeedMap, TMap<enum class EMovementSpeed, float> CallFunc_UpdateMovementSpeeds_Speeds_ImplicitCast);
	void DecayHitReactThresholdDamage(bool CallFunc_HasAuthority_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_FMax_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_FMax_ReturnValue_1);
	void Client_CreatureOnDamageReceived_Internal(double Damage, class AActor* Source, struct FGameplayTagContainer& EffectTags, struct FHitResult& HitResult, struct FTagValueContainer& TagValueContainer, bool IsDead, bool HitWeakPoint, bool LIsResisted, double LResistance, bool LUseCrit, const TArray<struct FGameplayTag>& LAllEffectTags, const struct FGameplayTag& LGameplayDamageTag, const struct FTagValueContainer& LTagValueContainer, const struct FGameplayTagContainer& LEffectTags, enum class E_UI_FloatyType LFloatyType, bool LHitWeakPoint, bool LIsDead, class AActor* LSource, const struct FHitResult& LHitResult, double LHitReactStrength, double LDamage, int32 Temp_int_Array_Index_Variable, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_WillDamage_WillDamage, const struct FPowerLevel& Temp_struct_Variable, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, const struct FGameplayTag& Temp_struct_Variable_1, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, double CallFunc_GetResistance_DamageMultiplier, bool CallFunc_GetResistance_IsResisted, const struct FGameplayTag& CallFunc_StrengthTag_StrengthTag, float CallFunc_Find_Value, bool CallFunc_Find_Found, bool CallFunc_DoEffectTagsAllowCriticalHits_AllowCriticalHits, bool Temp_bool_Variable, const struct FPowerLevel& Temp_struct_Variable_2, bool Temp_bool_Variable_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const struct FGameplayTag& CallFunc_Array_Get_Item, bool CallFunc_MatchesTag_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_DoEffectTagsAllowBackstab_ReturnValue, bool CallFunc_WillDamage_WillDamage_1, TScriptInterface<class IPowerLevelInterface> K2Node_DynamicCast_AsPower_Level_Interface, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IPowerLevelInterface> K2Node_DynamicCast_AsPower_Level_Interface_1, bool K2Node_DynamicCast_bSuccess_1, const struct FPowerLevel& CallFunc_GetPowerLevel_OutPowerLevel, bool CallFunc_GetPowerLevel_ReturnValue, const struct FPowerLevel& CallFunc_GetPowerLevel_OutPowerLevel_1, bool CallFunc_GetPowerLevel_ReturnValue_1, bool CallFunc_DoEffectTagsAllowHeartshot_ReturnValue, bool CallFunc_CheckHarvestTags_CanHarvest, enum class E_UI_FloatyType CallFunc_GetFloatyTypeFromTagValueContainer_FloatType, bool CallFunc_BooleanOR_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, double K2Node_VariableSet_LHitReactStrength_ImplicitCast);
	void GetOrAddAbilityZoneVisualizationComponent(class UBP_AbilityZoneVisualizationComponent_C** Component, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FTransform& Temp_struct_Variable, class UBP_AbilityZoneVisualizationComponent_C* CallFunc_AddComponent_ReturnValue);
	void CreatureWarning(const class FString& Message, enum class ENWXLogLevel NWXLogLevel, enum class ELogCategory LogCategory, const class FString& CallFunc_Conv_ObjectToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	void HandleTagCountChanged(struct FGameplayTag& Tag, int32 Count, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Greater_IntInt_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue_2, const struct FGameplayTag& Temp_struct_Variable, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void CorpseDamageReceived(double Damage, class AActor* Target, class AActor* Source, const struct FGameplayTagContainer& EffectTags, const struct FHitResult& HitResult, const struct FTagValueContainer& TagValueContainer, int32 PowerLevelDifference, bool Temp_bool_Variable, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, const struct FPowerLevel& Temp_struct_Variable, bool Temp_bool_Variable_1, bool CallFunc_AllGeneratedRewardsExpended_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_AllGeneratedRewardsExpended_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FPowerLevel& Temp_struct_Variable_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, double CallFunc_SafeDivide_ReturnValue, double CallFunc_SafeDivide_ReturnValue_1, bool Temp_bool_Variable_2, int32 CallFunc_FFloor_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TScriptInterface<class IPowerLevelInterface> K2Node_DynamicCast_AsPower_Level_Interface, bool K2Node_DynamicCast_bSuccess, const struct FPowerLevel& CallFunc_GetPowerLevel_OutPowerLevel, bool CallFunc_GetPowerLevel_ReturnValue, TScriptInterface<class IPowerLevelInterface> K2Node_DynamicCast_AsPower_Level_Interface_1, bool K2Node_DynamicCast_bSuccess_1, const struct FPowerLevel& CallFunc_GetPowerLevel_OutPowerLevel_1, bool CallFunc_GetPowerLevel_ReturnValue_1, bool CallFunc_CheckHarvestTags_CanHarvest, bool CallFunc_IsValid_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	void ClientDeathLogic(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, class UClothingSimulationInteractor* CallFunc_GetClothingSimulationInteractor_ReturnValue, class UClothingSimulationInteractorNv* K2Node_DynamicCast_AsClothing_Simulation_Interactor_Nv, bool K2Node_DynamicCast_bSuccess, class UBP_CreatureComponentBase_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void ServerDeathLogic(bool CallFunc_IsValid_ReturnValue, const struct FGameplayTag& CallFunc_DeathDeadTag_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	void GetAbilityDamage(class AActor* TargetActor, double* Damage);
	void LinkAnimations(class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, TScriptInterface<class IBPI_NPCAnimation_C> K2Node_DynamicCast_AsBPI_NPCAnimation, bool K2Node_DynamicCast_bSuccess);
	void OnRep_ItemAnimBank();
	void RemoveGameplayAbilities(TArray<struct FGameplayAbilitySpecHandle>& AbilityHandles, bool CallFunc_HasAuthority_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_IntInt_ReturnValue, const struct FGameplayAbilitySpecHandle& CallFunc_Array_Get_Item, bool CallFunc_IsValidAbilitySpecHandle_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void RemoveGameplayTags(TArray<struct FGameplayTag>& GameplayTags, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const struct FGameplayTag& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void RemoveItemCreatureGrants(class AEquippableItem* Item, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, bool K2Node_SwitchEnum_CmpSuccess, const struct FItemData_CreatureGrants& CallFunc_TryGetItemDataCreatureGrants_OutData, enum class EGetResult CallFunc_TryGetItemDataCreatureGrants_Branches, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_HasAuthority_ReturnValue, const struct FS_ItemCreatureGrants& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_RemoveAIActions_ReturnValue, bool CallFunc_RemoveActiveGameplayEffect_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	bool RemoveAIActions(TArray<class UClass*>& AIActions, bool OperationFail, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_IntInt_ReturnValue, class UClass* CallFunc_Array_Get_Item, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class UAIActionComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_RemoveActionClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void GetSquadBlackboard(class UBlackboardComponent** Blackboard, class ANWXAISpawner* CallFunc_GetSpawner_Spawner, class ABP_CreatureSpawnerBase_C* K2Node_DynamicCast_AsBP_Creature_Spawner_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, class UBlackboardComponent* CallFunc_GetSquadBlackboard_Blackboard);
	void ApplyAIActions(TArray<class UClass*>& AIActions, bool* Success, bool OperationFail, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_IntInt_ReturnValue, class UClass* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_HasAuthority_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, class AController* CallFunc_GetController_ReturnValue, TArray<class UAIActionComponent*>& CallFunc_K2_GetComponentsByClass_ReturnValue, class UAIActionComponent* CallFunc_GetComponentByClass_ReturnValue, class UAIActionComponent* CallFunc_Array_Get_Item_1, bool CallFunc_AddActionClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1);
	void ApplyGameplayTags(TArray<struct FGameplayTag>& GameplayTags, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const struct FGameplayTag& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void ApplyItemCreatureGrants(class AEquippableItem* Item, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, bool K2Node_SwitchEnum_CmpSuccess, const struct FItemData_CreatureGrants& CallFunc_TryGetItemDataCreatureGrants_OutData, enum class EGetResult CallFunc_TryGetItemDataCreatureGrants_Branches, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_HasAuthority_ReturnValue, const struct FS_ItemCreatureGrants& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ApplyAIActions_Success, class UClass* CallFunc_LoadClassAsset_Blocking_ReturnValue, const class FString& CallFunc_GetClassDisplayName_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsNWXGameplay_Effect, bool K2Node_ClassDynamicCast_bSuccess, const class FString& CallFunc_Concat_StrStr_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue);
	void PlayExitAnimation(const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromTag_ReturnValue, bool CallFunc_TryActivateAbilitiesByTag_ReturnValue);
	void PlayEntranceAnimation(const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromTag_ReturnValue, bool CallFunc_TryActivateAbilitiesByTag_ReturnValue);
	void SetCreatureVisibility(bool Hidden);
	void Creature_OnDamageReceived(double Damage, class AActor* Target, class AActor* Source, const struct FGameplayTagContainer& EffectTags, const struct FHitResult& HitResult, const struct FTagValueContainer& TagValueContainer, bool LHeartshot, bool LWeakpointHit, double LHeadshotMultiplier, double LDeathforce, bool LAllowHThresholditReact, const struct FTagValueContainer& LTagValueContainer, const struct FHitResult& LHitResult, const struct FGameplayTagContainer& LEffectTags, class AActor* LSource, class AActor* LTarget, double LDamage, bool CallFunc_HasTag_ReturnValue, bool CallFunc_HasTag_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_Lookup_Definition_Found, const struct FS_WeakPointDefinition& CallFunc_Lookup_Definition_Definition, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_HasTag_ReturnValue_2, bool CallFunc_IsAtMinHealth_AtMinHealth, const struct FGameplayTag& CallFunc_StrengthTag_StrengthTag, float CallFunc_Find_Value, bool CallFunc_Find_Found, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FGameplayTag& CallFunc_StrengthTag_StrengthTag_1, float CallFunc_Find_Value_1, bool CallFunc_Find_Found_1, double CallFunc_Add_DoubleDouble_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, const struct FGameplayTag& Temp_struct_Variable, const class FString& CallFunc_Conv_ObjectToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, class AController* CallFunc_GetController_ReturnValue, class ABP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_BreakHitResult_bBlockingHit_1, bool CallFunc_BreakHitResult_bInitialOverlap_1, float CallFunc_BreakHitResult_Time_1, float CallFunc_BreakHitResult_Distance_1, const struct FVector& CallFunc_BreakHitResult_Location_1, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_1, const struct FVector& CallFunc_BreakHitResult_Normal_1, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_1, class AActor* CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_1, class FName CallFunc_BreakHitResult_HitBoneName_1, class FName CallFunc_BreakHitResult_BoneName_1, int32 CallFunc_BreakHitResult_HitItem_1, int32 CallFunc_BreakHitResult_ElementIndex_1, int32 CallFunc_BreakHitResult_FaceIndex_1, const struct FVector& CallFunc_BreakHitResult_TraceStart_1, const struct FVector& CallFunc_BreakHitResult_TraceEnd_1, bool CallFunc_EqualEqual_NameName_ReturnValue_1, bool CallFunc_Lookup_Definition_Found_1, const struct FS_WeakPointDefinition& CallFunc_Lookup_Definition_Definition_1, bool CallFunc_BooleanOR_ReturnValue_2, class ANWXPlayerState* CallFunc_GetPlayerState_PlayerState, TScriptInterface<class IBPI_TaskTracking_C> K2Node_DynamicCast_AsBPI_Task_Tracking, bool K2Node_DynamicCast_bSuccess_2, TScriptInterface<class IBPI_TaskTracking_C> K2Node_DynamicCast_AsBPI_Task_Tracking_1, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_HasTag_ReturnValue_3, bool CallFunc_ActorHasTag_ReturnValue, const struct FGameplayTag& CallFunc_GetIdentifierTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromTag_ReturnValue, const struct FGameplayTag& CallFunc_GetIdentifierTag_ReturnValue_1, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1, const struct FGameplayTag& Temp_struct_Variable_1, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, int32 CallFunc_RemoveActiveEffectsWithTags_ReturnValue, const struct FGameplayTag& Temp_struct_Variable_2, const struct FGameplayTag& Temp_struct_Variable_3, const struct FGameplayTag& Temp_struct_Variable_4, float CallFunc_Find_Value_2, bool CallFunc_Find_Found_2, bool CallFunc_ActorHasTag_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_ContainerContainsState_ReturnValue, bool CallFunc_IsAtMinHealth_AtMinHealth_1, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_3, const struct FGameplayTag& CallFunc_StrengthTag_StrengthTag_2, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_Remove_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_5, class ANWXAISpawner* CallFunc_GetSpawner_Spawner, class ABP_CreatureSpawnerBase_C* K2Node_DynamicCast_AsBP_Creature_Spawner_Base, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_IsValid_ReturnValue_2, int32 CallFunc_Array_AddUnique_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_2, bool CallFunc_Less_DoubleDouble_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_4, bool CallFunc_IsAtMinHealth_AtMinHealth_2, const struct FGameplayTag& CallFunc_StrengthTag_StrengthTag_3, float CallFunc_Find_Value_3, bool CallFunc_Find_Found_3, bool CallFunc_IsAtMinHealth_AtMinHealth_3, bool CallFunc_NewPlayHitReaction_ReturnValue, class ANWXAIController* CallFunc_GetCreatureController_CreatureController, class ABP_CreatureBase_C* K2Node_DynamicCast_AsBP_Creature_Base, bool K2Node_DynamicCast_bSuccess_5, TScriptInterface<class IBPI_Threat_C> K2Node_DynamicCast_AsBPI_Threat, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_ModifyThreat_Success, bool CallFunc_IsValid_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, float CallFunc_Add_Value_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast, float CallFunc_Add_Value_ImplicitCast_1);
	void MontageEnded(bool WasInterrupted, bool OldDisableBlendSpace, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_ResumeBehavior_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TScriptInterface<class IBPI_ABPCreature_C> K2Node_DynamicCast_AsBPI_ABPCreature, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3);
	void UnequipCurrentWeapon(class USkeletalMeshComponent* CallFunc_GetRootMesh_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void InitializePresentationComponents(class UBP_CreatureComponent_UI_C* CallFunc_AddUICreatureComponent_UICreatureComponent, int32 CallFunc_Array_Add_ReturnValue, class UBP_CreatureComponent_VFX_C* CallFunc_AddVFXCreatureComponent_VFXComponent, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2);
	void OnRep_CapsuleCollisionOverride(bool CallFunc_IsValid_ReturnValue, class FName CallFunc_GetCollisionProfileName_ProfileName, class FName CallFunc_GetCollisionProfileName_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue);
	void ValidateRootMotionTarget(const struct FTransform& CallFunc_GetTransform_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, const struct FTransform& CallFunc_MakeTransform_ReturnValue, bool CallFunc_Vector_IsZero_ReturnValue);
	void AddUICreatureComponent(class UBP_CreatureComponent_UI_C** UICreatureComponent, const struct FTransform& Temp_struct_Variable, class UBP_CreatureComponent_UI_C* CallFunc_AddComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void UpdateAlertnessLevel(const struct FGameplayTag& Temp_struct_Variable, const struct FGameplayTag& Temp_struct_Variable_1, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class AAIC_CreatureBase_C* K2Node_DynamicCast_AsAIC_Creature_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_SetAlertnessLevel_Success, TScriptInterface<class IAICCreatureDataInterface> CallFunc_GetEnemyAlertDistance_self_CastInput, float CallFunc_GetEnemyAlertDistance_ReturnValue, bool CallFunc_SetAlertnessLevel_Success_1, bool CallFunc_GetEnemyInRange_EnemyInRange, class AActor* CallFunc_GetEnemyInRange_EnemyActor, double CallFunc_GetEnemyInRange_Distance, bool CallFunc_SetAlertnessLevel_Success_2, double CallFunc_GetEnemyInRange_Range_ImplicitCast);
	void AddVFXCreatureComponent(class UBP_CreatureComponent_VFX_C** VFXComponent, const struct FTransform& Temp_struct_Variable, class UBP_CreatureComponent_VFX_C* CallFunc_AddComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void OnRep_AITarget(bool CallFunc_HasAuthority_ReturnValue);
	void ClearTimers();
	void DisableAttackVolume(bool CallFunc_HasAuthority_ReturnValue);
	void EnableAttackVolume(bool CallFunc_HasAuthority_ReturnValue);
	void ApplyDamageToTarget(class AActor* TargetActor, bool bTrackHitActors, bool bFriendlyFire, bool bBypassAttackVolumeCheck, bool* bActorHit, TArray<struct FGameplayEffectCue>& Temp_struct_Variable, const struct FHitResult& Temp_struct_Variable_1, const struct FTagValueContainer& Temp_struct_Variable_2, bool CallFunc_HasAuthority_ReturnValue, class ABP_CreatureSpawnerBase_C* K2Node_DynamicCast_AsBP_Creature_Spawner_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, double CallFunc_GetAbilityDamage_Damage, bool CallFunc_IsFriend_bIsFriend, const struct FGameplayTag& CallFunc_MeleeTag_MeleeTag, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, TScriptInterface<class IDamageEventInterface> K2Node_DynamicCast_AsDamage_Event_Interface, bool K2Node_DynamicCast_bSuccess_1, const struct FTagValueContainer& CallFunc_DamageActor_AggregatedDamageTags, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsFriend_bIsFriend_1, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, float CallFunc_DamageActor_BaseDamage_ImplicitCast);
	void GrantRewards(bool* bSuccess, const struct FVector& Impulse, const struct FGameplayAttribute& YieldBonusAttribute, int32 ResourcesToSpawn, double LootScale, int32 Temp_int_Array_Index_Variable, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, class ABP_PlayerController_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_TaskTracking_C> K2Node_DynamicCast_AsBPI_Task_Tracking, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetCreatureController(class ANWXAIController** CreatureController, class AController* CallFunc_GetController_ReturnValue, class ANWXAIController* K2Node_DynamicCast_AsNWXAIController, bool K2Node_DynamicCast_bSuccess);
	void OnRep_IsDead(bool CallFunc_IsServer_ReturnValue);
	void UserConstructionScript(const struct FDataTableRowHandle& LNewHandle, class FName Socket_Root, bool CallFunc_HasAuthority_ReturnValue, float CallFunc_SetCapsuleRadius_Radius_ImplicitCast, float CallFunc_SetCapsuleHalfHeight_HalfHeight_ImplicitCast);
	void OnNotifyEnd_B01D0BD94DAE6BC06DF45888A9395309(class FName NotifyName);
	void OnNotifyBegin_B01D0BD94DAE6BC06DF45888A9395309(class FName NotifyName);
	void OnInterrupted_B01D0BD94DAE6BC06DF45888A9395309(class FName NotifyName);
	void OnBlendOut_B01D0BD94DAE6BC06DF45888A9395309(class FName NotifyName);
	void OnCompleted_B01D0BD94DAE6BC06DF45888A9395309(class FName NotifyName);
	void OnLoaded_34A1483A4DB81DE05E5C92B226079EA8(class UObject* Loaded);
	void OnNotifyEnd_A1BF18F143D537A84F030A8D6542E000(class FName NotifyName);
	void OnNotifyBegin_A1BF18F143D537A84F030A8D6542E000(class FName NotifyName);
	void OnInterrupted_A1BF18F143D537A84F030A8D6542E000(class FName NotifyName);
	void OnBlendOut_A1BF18F143D537A84F030A8D6542E000(class FName NotifyName);
	void OnCompleted_A1BF18F143D537A84F030A8D6542E000(class FName NotifyName);
	void ReceiveDestroyed();
	void ReceivePossessed(class AController* NewController);
	void ReceiveBeginPlay();
	void PerformClientSideInteraction(class AController* Controller);
	void HandleHitConnectedPredictive(struct FHitResult& HitResult);
	void PlayAttackAnimation(class UAnimMontage* Montage3P);
	void PlayItemCameraShake(const struct FGameplayTag& ShakeTag, double Scale, const struct FGameplayTag& SlotTag);
	void OnDamageReceived(float Damage, class AActor* Target, class AActor* Source, struct FGameplayTagContainer& EffectTags, struct FHitResult& HitResult, struct FTagValueContainer& TagValueContainer);
	void HandlePostHitConnected(class AActor* Hit_Actor, double Damage, enum class E_HitType HitType);
	void HandlePostAttack();
	void UpdateLoadingState(enum class E_LoadingState LoadingState);
	void ReceiveUnpossessed(class AController* OldController);
	void SpawnAndEquipWeapon(struct FItemDataReference& ItemReference);
	void OnUnEquipWeapon();
	void UnEquipWeapon();
	void OnDebugSphere(struct FVector& Location, struct FLinearColor& LineColour, float Radius, float Duration, float Thickness);
	void DestroySelf();
	void Hack_ChangeVisibilityBasedAnimTickOption(class UAnimMontage* Montage, float Duration, enum class EVisibilityBasedAnimTickOption Option);
	void Hack_RestoreTickSetting();
	void Hack_CheckMontageStatus();
	void OnLoadoutComponentInitialized();
	void OnPrintForward();
	void Suicide();
	void ClearWanderCooldown();
	void SetMoveSpeeds(float Walk, float Trot, float Run);
	void AddState(struct FGameplayTag& GameplayTag);
	void RemoveState(struct FGameplayTag& GameplayTag);
	void SetRotation(struct FRotator& Rotation);
	void ApplySkellMeshSoftRef(TSoftObjectPtr<class UObject>& Asset);
	void Dissolve(bool bDissolveIn, struct FGameplayTag& DissolveTag);
	void OnPostEvent(class UAkAudioEvent* AkEvent);
	void OnPlayCreatureMontage(class UAnimMontage* Montage, float InPlayRate, class FName& StartSectionName, bool bDisableBlendspace, bool bLooping, bool bSetHitResponse);
	void OnStopCreatureMontage();
	void ExposeWeakness_Client(bool ClearAll);
	void K2_OnMovementModeChanged(enum class EMovementMode PrevMovementMode, enum class EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void Multicast_CreatureOnDamageReceived(float Damage, class AActor* Source, struct FGameplayTagContainer& EffectTags, struct FHitResult& HitResult, struct FTagValueContainer& TagValueContainer, bool bIsDead, bool bHitWeakPoint);
	void CreatureOnDamageReceivedClient(double Damage, class AActor* Source, struct FGameplayTagContainer& EffectTags, struct FHitResult& HitResult, struct FTagValueContainer& TagValueContainer, bool IsDead, bool HitWeakPoint);
	void ExecuteUbergraph_BP_CreatureBase(int32 EntryPoint, float CallFunc_GetEffectDuration_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsInitialized_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class UBP_LoadoutComponent_C* CallFunc_GetComponentByClass_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_HasAuthority_ReturnValue_1, int32 CallFunc_RemoveAllActiveEffects_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, class AController* K2Node_Event_OldController, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue_3, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_6, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_IsActorReady_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, class FName CallFunc_GetBBVar_ReturnValue, class ANWXAISpawner* CallFunc_GetSpawner_Spawner, enum class EBlackboardGetResult CallFunc_TrySetBlackboardObject_Branches, class ABP_CreatureSpawnerBase_C* K2Node_DynamicCast_AsBP_Creature_Spawner_Base, bool K2Node_DynamicCast_bSuccess, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue_8, class FName Temp_name_Variable, bool CallFunc_HasAuthority_ReturnValue_4, bool CallFunc_HasAuthority_ReturnValue_5, bool CallFunc_HasAuthority_ReturnValue_6, class FName K2Node_CustomEvent_NotifyName_5, bool CallFunc_HasAuthority_ReturnValue_7, class AGameStateBase* CallFunc_GetGameState_ReturnValue, bool CallFunc_IsValid_ReturnValue_9, class UBP_SimulationMonitorComponent_C* CallFunc_GetComponentByClass_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_10, bool CallFunc_GetDayNightState_IsNight, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, class UAILoadoutComponentBase* CallFunc_GetComponentByClass_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_11, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, bool Temp_bool_Has_Been_Initd_Variable, class AGameStateBase* CallFunc_GetGameState_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_12, int32 CallFunc_Array_Length_ReturnValue, class FName K2Node_CustomEvent_NotifyName_6, bool CallFunc_AreAutomatedTestsRunning_ReturnValue, const struct FItemDataReference& K2Node_Event_ItemReference, bool CallFunc_K2_IsValidTimerHandle_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& K2Node_Event_Location, const struct FLinearColor& K2Node_Event_LineColour, float K2Node_Event_Radius, float K2Node_Event_Duration_1, float K2Node_Event_Thickness, bool CallFunc_IsValid_ReturnValue_13, bool CallFunc_Not_PreBool_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, class UAnimMontage* K2Node_Event_Montage_1, float K2Node_Event_Duration, enum class EVisibilityBasedAnimTickOption K2Node_Event_Option, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_14, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_3, enum class E_LoadingState K2Node_Event_LoadingState, float K2Node_Event_Walk, float K2Node_Event_Trot, float K2Node_Event_Run, const struct FGameplayTag& K2Node_Event_GameplayTag_1, TMap<enum class EMovementSpeed, float> K2Node_MakeMap_Map, class AActor* K2Node_Event_Hit_Actor, double K2Node_Event_Damage, enum class E_HitType K2Node_Event_HitType, float K2Node_Event_Damage_1, class AActor* K2Node_Event_Target, class AActor* K2Node_Event_Source, const struct FGameplayTagContainer& K2Node_Event_EffectTags, const struct FHitResult& K2Node_Event_HitResult, const struct FTagValueContainer& K2Node_Event_TagValueContainer, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_Lookup_Definition_Found, const struct FS_WeakPointDefinition& CallFunc_Lookup_Definition_Definition, class AEquippableItem* CallFunc_GetEquippedItem_EquippedQuickbarItem, bool CallFunc_IsValid_ReturnValue_15, bool CallFunc_GetTriggerable_IsTriggerable, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FInstanceData_Traits& CallFunc_TryGetItemTraits_Traits, enum class EGetResult CallFunc_TryGetItemTraits_Branches, bool CallFunc_BooleanOR_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_IsValid_ReturnValue_16, bool CallFunc_DoEffectTagsAllowCriticalHits_AllowCriticalHits, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, const struct FGameplayTag& K2Node_Event_GameplayTag, bool Temp_bool_Variable, double K2Node_Select_Default, const struct FRotator& K2Node_Event_Rotation, bool CallFunc_K2_SetActorRotation_ReturnValue, const struct FGameplayTag& K2Node_Event_ShakeTag, double K2Node_Event_Scale, const struct FGameplayTag& K2Node_Event_SlotTag, TSoftObjectPtr<class UObject> K2Node_Event_Asset, class UAnimMontage* K2Node_Event_Montage3P, class UPlayMontageCallbackProxy* CallFunc_CreateProxyObjectForPlayMontage_ReturnValue, const struct FHitResult& K2Node_Event_HitResult_1, bool CallFunc_IsValid_ReturnValue_17, bool K2Node_Event_bDissolveIn, const struct FGameplayTag& K2Node_Event_DissolveTag, class AController* K2Node_Event_Controller, class AController* K2Node_Event_NewController, class UAkAudioEvent* K2Node_Event_AkEvent, class AAIC_CreatureBase_C* K2Node_DynamicCast_AsAIC_Creature_Base, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue_18, bool CallFunc_IsServer_ReturnValue, class UNWXGameUserSettings* CallFunc_GetNWXGameUserSettings_ReturnValue, bool CallFunc_GetArachnophobiaModeEnabled_ReturnValue, bool CallFunc_AreAutomatedTestsRunning_ReturnValue_1, class ANWXAIController* CallFunc_GetCreatureController_CreatureController, class AAIC_CreatureBase_C* K2Node_DynamicCast_AsAIC_Creature_Base_1, bool K2Node_DynamicCast_bSuccess_2, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_IsValid_ReturnValue_19, TScriptInterface<class IBPI_ABPCreature_C> K2Node_DynamicCast_AsBPI_ABPCreature, bool K2Node_DynamicCast_bSuccess_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, bool CallFunc_StopBehavior_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_20, class UAnimMontage* K2Node_Event_Montage, float K2Node_Event_InPlayRate, class FName K2Node_Event_StartSectionName, bool K2Node_Event_bDisableBlendspace, bool K2Node_Event_bLooping, bool K2Node_Event_bSetHitResponse, class AAIController* CallFunc_GetAIController_ReturnValue, class AAIC_CreatureBase_C* K2Node_DynamicCast_AsAIC_Creature_Base_2, bool K2Node_DynamicCast_bSuccess_4, class UPlayMontageCallbackProxy* CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_21, bool CallFunc_HasAuthority_ReturnValue_8, const struct FGameplayTag& Temp_struct_Variable, const struct FGameplayTag& Temp_struct_Variable_1, class FName Temp_name_Variable_1, bool K2Node_CustomEvent_ClearAll, bool CallFunc_IsServer_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, class ABP_Character_C* CallFunc_GetLocalCharacter_PlayerCharacter, bool CallFunc_ActorHasTag_ReturnValue, class ABP_Character_C* CallFunc_GetLocalCharacter_PlayerCharacter_1, bool CallFunc_ActorHasTag_ReturnValue_1, class FName K2Node_CustomEvent_NotifyName, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_8, enum class EMovementMode K2Node_Event_PrevMovementMode, enum class EMovementMode K2Node_Event_NewMovementMode, uint8 K2Node_Event_PrevCustomMode, uint8 K2Node_Event_NewCustomMode, bool Temp_bool_IsClosed_Variable, bool CallFunc_HasAuthority_ReturnValue_9, class FName K2Node_CustomEvent_NotifyName_7, enum class EEndPlayReason K2Node_Event_EndPlayReason, class FName K2Node_CustomEvent_NotifyName_8, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_9, bool CallFunc_HasAuthority_ReturnValue_10, class FName K2Node_CustomEvent_NotifyName_1, int32 Temp_int_Array_Index_Variable, class APlayerState* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue_22, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class FName K2Node_CustomEvent_NotifyName_9, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_10, float K2Node_CustomEvent_Damage_1, class AActor* K2Node_CustomEvent_Source_1, const struct FGameplayTagContainer& K2Node_CustomEvent_EffectTags_1, const struct FHitResult& K2Node_CustomEvent_HitResult_1, const struct FTagValueContainer& K2Node_CustomEvent_TagValueContainer_1, bool K2Node_CustomEvent_bIsDead, bool K2Node_CustomEvent_bHitWeakPoint, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_11, double K2Node_CustomEvent_Damage, class AActor* K2Node_CustomEvent_Source, const struct FGameplayTagContainer& K2Node_CustomEvent_EffectTags, const struct FHitResult& K2Node_CustomEvent_HitResult, const struct FTagValueContainer& K2Node_CustomEvent_TagValueContainer, bool K2Node_CustomEvent_IsDead, bool K2Node_CustomEvent_HitWeakPoint, class FName K2Node_CustomEvent_NotifyName_2, class FName K2Node_CustomEvent_NotifyName_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_12, class FName K2Node_CustomEvent_NotifyName_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_13, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_14, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_15, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_2, int32 CallFunc_PostEvent_ReturnValue, bool CallFunc_IsValid_ReturnValue_23, bool CallFunc_IsValid_ReturnValue_24, const struct FVector& CallFunc_GetComponentBounds_Origin, const struct FVector& CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FDynamicTypedStructs& Temp_struct_Variable_3, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FDynamicTypedStructs& Temp_struct_Variable_4, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult, const struct FGameplayTag& Temp_struct_Variable_5, const struct FGameplayTag& Temp_struct_Variable_6, bool CallFunc_ActorHasTag_ReturnValue_2, bool Temp_bool_Variable_1, const struct FGameplayTagContainer& Temp_struct_Variable_7, const struct FHitResult& Temp_struct_Variable_8, const struct FGameplayTag& K2Node_Select_Default_1, const struct FTagValueContainer& Temp_struct_Variable_9, TArray<struct FGameplayEffectCue>& Temp_struct_Variable_10, const struct FTagValueContainer& CallFunc_DamageActor_AggregatedDamageTags, bool CallFunc_IsValid_ReturnValue_25, class UObject* Temp_object_Variable, bool CallFunc_HasAuthority_ReturnValue_11, class USkeletalMesh* K2Node_DynamicCast_AsSkeletal_Mesh, bool K2Node_DynamicCast_bSuccess_5, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_16, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_17, bool CallFunc_IsValid_ReturnValue_26, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_18, class UObject* K2Node_CustomEvent_Loaded, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast, double CallFunc_OnDamageReceived_Base_Damage_ImplicitCast, double CallFunc_Creature_OnDamageReceived_Damage_ImplicitCast, double CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast, double K2Node_Select_Option_0_ImplicitCast, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, float CallFunc_Multicast_CreatureOnDamageReceived_Damage_ImplicitCast, double CallFunc_CreatureOnDamageReceivedClient_Damage_ImplicitCast);
	void OnPlayerTargeted__DelegateSignature(class ABP_CreatureBase_C* Creature);
	void OnMontageNotificationBegin__DelegateSignature(class FName NotifyName);
	void OnCreaturePossessed__DelegateSignature(class ABP_CreatureBase_C* Creature);
	void OnMeleeCollisionDisabled__DelegateSignature();
	void OnMeleeCollisionEnabled__DelegateSignature();
	void OnAttackCollisionEnd__DelegateSignature();
	void OnAttackCollisionBegin__DelegateSignature();
	void OnCreatureDamaged__DelegateSignature(class ABP_CreatureBase_C* Creature);
};

}


