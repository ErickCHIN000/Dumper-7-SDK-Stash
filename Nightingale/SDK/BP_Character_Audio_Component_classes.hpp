#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x1F1 (0x2F1 - 0x100)
// BlueprintGeneratedClass BP_Character_Audio_Component.BP_Character_Audio_Component_C
class UBP_Character_Audio_Component_C : public UNWXCharacterAudioComponent
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x100(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UScopedAkComponent*                    Ak_Body;                                           // 0x108(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScopedAkComponent*                    Ak_Head;                                           // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ANWXCharacter*                         OwningCharacter;                                   // 0x118(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       LowHealthOneShotThreshold;                         // 0x120(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScopedAkComponent*                    Ak_Hand_L;                                         // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScopedAkComponent*                    Ak_Hand_R;                                         // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScopedAkComponent*                    Ak_Foot_L;                                         // 0x138(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScopedAkComponent*                    Ak_Foot_R;                                         // 0x140(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScopedAkComponent*                    Ak_WaterSplash;                                    // 0x148(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*               AbilitySystem;                                     // 0x150(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                       WaterDepth;                                        // 0x158(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ClimbingAxeLeftOnCooldown;                         // 0x160(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ClimbingAxeRightOnCooldown;                        // 0x161(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4A07[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       ClimbingAxeCooldownTime;                           // 0x168(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxDistance_Foley_General;                         // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxDistance_Foley_Water;                           // 0x178(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         NGC_InsideVolume;                                  // 0x180(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4A17[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkStateValue*                         NGC_SpawnMusicState;                               // 0x188(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                       Launch_Magnitude_Threshold_Medium;                 // 0x190(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Launch_Magnitude_Threshold_Large;                  // 0x198(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Launch_Cooldown_Time;                              // 0x1A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Launch_Timestamp;                                  // 0x1A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAkSwitchValue*>                Wwise_Internal_Switch_Values;                      // 0x1B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	double                                       New_Health_Normalized;                             // 0x1C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Old_Health_Normalized;                             // 0x1C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         GlidingWindActive;                                 // 0x1D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         GliderWindOneShotReady;                            // 0x1D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4A34[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          GliderUpdateTimerHandle;                           // 0x1D8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         InWater;                                           // 0x1E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4A35[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UAkAudioEvent>>  FootstepSoftRefs;                                  // 0x1E8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAkAudioEvent*>                 FootstepEvents;                                    // 0x1F8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       CachedHealth;                                      // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               FallingVelocity;                                   // 0x210(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       LandAVFXCooldown;                                  // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       PreviousLandAVFXTime;                              // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          CachedAkAmbient2D;                                 // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                       LowHealthOneShotThresh;                            // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         LowHealthVolumeBoostOnCooldown;                    // 0x248(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4A42[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       LowHealthVolumeBoostCooldownTime;                  // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         LocalPlayerIsDowned;                               // 0x258(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         DodgeActivated;                                    // 0x259(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4A4A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          VelocityTimer;                                     // 0x260(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           HopeCurve;                                         // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          LowGravJumpTimer;                                  // 0x270(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         LowGravWindActive;                                 // 0x278(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4A5E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       LowGravJumpAltitudeCache;                          // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         LowGravWindRTPCUpdateActive;                       // 0x288(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4A67[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       LowGravJumpWindAltitudeThreshold;                  // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>          LowGravJumpAkEventStart;                           // 0x298(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>          LowGravJumpAkEventStop;                            // 0x2C0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UAkAudioEvent*                         LowGravJumpAkStopHard;                             // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         LocalPlayerDownedInCombat;                         // 0x2F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UBP_Character_Audio_Component_C* GetDefaultObj();

	void CheckIsNightmareRealm(bool* IsNightmareRealm, const struct FRealmPlacementRequirement& NightmareRealm, class UObject* Temp_object_Variable, bool CallFunc_DoesRealmMeetRequirement_RequirementMet);
	void ClientHandleCraftedItemClaimed(const struct FCraftingRecipeReference& RecipeReference, const struct FInventoryEntry& ReceivedItem, int32 ReceivedRecipeQuantity, const struct FGameplayTag& CallFunc_GetATRowAndColumnFromItemData_ATRow, const struct FGameplayTag& CallFunc_GetATRowAndColumnFromItemData_ATColumn, bool CallFunc_IsValid_ReturnValue, const struct FGameplayTagContainer& CallFunc_GetItemTraitsFromEntry_Traits, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue);
	void OnEssencePouchItemAdded(TScriptInterface<class IItemContainer>& Source, struct FInventoryEntry& Item, int32 Quantity, const struct FGameplayTagContainer& CallFunc_GetItemTags_Tags, bool CallFunc_PostAsyncAkEventScoped_ReturnValue, bool CallFunc_HasTag_ReturnValue, bool CallFunc_CheckAkBody_IsValid);
	void OnLocalPlayerExitedCombat(bool CallFunc_CheckAkBody_IsValid);
	void OnLocalPlayerEnteredCombat(bool CallFunc_CheckAkBody_IsValid);
	void AddFootstepComponent(const struct FGameplayTag& CallFunc_MakeLiteralGameplayTag_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class UBP_FootstepComponent_C* CallFunc_AddComponentByClass_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_1, class UBP_FootstepComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void BP_Character_Audio_Component_AutoGenFunc(class UAkAudioEvent* StartEvent, class UAkAudioEvent* StopEvent, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, int32 CallFunc_PostAkEvent_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void StopLowGravJumpWind(FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue);
	void GetAltitude(double* Altitude, int32 HitCount, double AltitudeTotal, const TArray<struct FVector>& TraceLocations, const struct FVector& PlayerLocation, double GridSpreadDist, const TArray<double>& GridLocations, const struct FLinearColor& Temp_struct_Variable, const struct FLinearColor& Temp_struct_Variable_1, TArray<class UObject*>& Temp_object_Variable, TArray<double>& K2Node_MakeArray_Array, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_NWXLineTraceSingle_OutHit, bool CallFunc_NWXLineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, double K2Node_FunctionResult_Altitude_ImplicitCast);
	void LowGravJumpUpdate(double Altitude, bool CallFunc_Not_PreBool_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, double CallFunc_GetAltitude_Altitude, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Abs_ReturnValue, double CallFunc_FClamp_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void DodgeCoolDown(class UAudioRTPCSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetDecayingRTPCValue_ReturnValue);
	void PlayDodgeBeginSFX(class UAkAudioEvent* Temp_object_Variable, class UAkAudioEvent* Temp_object_Variable_1, bool CallFunc_IsDedicatedServer_ReturnValue, bool Temp_bool_Variable, bool CallFunc_ShouldPlayFirstPersonAudio_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAkAudioEvent* K2Node_Select_Default, bool CallFunc_PostAkEventScoped_ReturnValue, class UAudioRTPCSubsystem* CallFunc_GetWorldSubsystem_ReturnValue);
	void DodgeLand(bool Temp_bool_Variable, class UAkAudioEvent* Temp_object_Variable, class UAkAudioEvent* Temp_object_Variable_1, bool CallFunc_IsValid_ReturnValue, class UCharacterMovementComponent* CallFunc_GetComponentByClass_ReturnValue, double CallFunc_VSizeXY_ReturnValue, bool CallFunc_ShouldPlayFirstPersonAudio_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, class UAkAudioEvent* K2Node_Select_Default, bool CallFunc_PostAkEventScoped_ReturnValue);
	void LocalPlayerRevived(FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_CheckAkBody_IsValid, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, int32 CallFunc_PostAkEvent_ReturnValue);
	void LocalPlayerDowned(FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_CheckAkBody_IsValid, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, class UGlobalAudioSubsystem* CallFunc_GetEngineSubsystem_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_GetIsLocalPlayerInCombat_ReturnValue);
	void GetAkAmbient2D(class UAkComponent** AkAmbient2D, class UAmbienceManager* CallFunc_GetAmbienceManager_ReturnValue, class UAkComponent* CallFunc_GetAk2DComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void CalcHealthNormalized(double HealthValue, double* HealthNorm, double MaxHealthAbs, double CallFunc_GetMaxHealth_MaxHealth, class UGlobalAudioSubsystem* CallFunc_GetEngineSubsystem_ReturnValue, float CallFunc_GetAudioMaxHealthClamped_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetAudioMaxHealthClamped_MaxHealthValue_ImplicitCast, double CallFunc_MapRangeClamped_InRangeB_ImplicitCast);
	void HandleFPTPViewUpdated(bool IsThirdPerson, bool CallFunc_Not_PreBool_ReturnValue);
	void OnHealthChanged(float Delta, double CurrHealth, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, double CallFunc_GetCurrentHealth_CurrentHealth, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue);
	void DissolveAudio(bool DissolvingIn, class UAkAudioEvent* AkEvent, class UAkAudioEvent* Temp_object_Variable, class UAkAudioEvent* Temp_object_Variable_1, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, class UAkAudioEvent* Temp_object_Variable_2, class UAkAudioEvent* Temp_object_Variable_3, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, class UAkAudioEvent* Temp_object_Variable_4, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, bool Temp_bool_Variable_3, bool CallFunc_CheckIsNightmareRealm_IsNightmareRealm, class UAkAudioEvent* K2Node_Select_Default, int32 CallFunc_PostAkEvent_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, class UAkAudioEvent* K2Node_Select_Default_1, bool CallFunc_IsLocallyControlled_ReturnValue, class UAkAudioEvent* K2Node_Select_Default_2, class UAkAudioEvent* K2Node_Select_Default_3, bool CallFunc_IsValid_ReturnValue_1);
	void Async_Audio_Load_Complete(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TSoftObjectPtr<class UAkAudioEvent> CallFunc_Array_Get_Item, class UAkAudioEvent* CallFunc_ResolveAudio_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void PlayBrokenArm(FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_CheckAkComponents_AreValid, bool CallFunc_IsLocallyControlled_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, int32 CallFunc_PostAkEvent_ReturnValue);
	void PlayBrokenLeg(FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_CheckAkComponents_AreValid, bool CallFunc_IsLocallyControlled_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, int32 CallFunc_PostAkEvent_ReturnValue);
	void CheckForGliderWindOneShot(class UAkComponent* Ak2D, double PitchRoll, double PitchRollThreshold, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable_1, int32 CallFunc_PostAkEvent_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue_1);
	void GlideGetAltitudeDecend(double* Altitude, int32 HitCount, double AltitudeTotal, const TArray<struct FVector>& TraceLocations, const struct FVector& PlayerLocation, double GridSpreadDist, const TArray<double>& GridLocations, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, TArray<double>& K2Node_MakeArray_Array, TArray<class UObject*>& Temp_object_Variable, double CallFunc_Conv_IntToDouble_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FLinearColor& Temp_struct_Variable, const struct FLinearColor& Temp_struct_Variable_1, int32 CallFunc_Array_Add_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, TArray<class UObject*>& Temp_object_Variable_1, double CallFunc_Array_Get_Item, const struct FVector& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FHitResult& CallFunc_NWXLineTraceSingle_OutHit, bool CallFunc_NWXLineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue_5, double CallFunc_Multiply_DoubleDouble_ReturnValue_6, const struct FVector& CallFunc_MakeVector_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_3, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_4, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_5, int32 CallFunc_Array_Add_ReturnValue_3, int32 CallFunc_Array_Add_ReturnValue_4, const struct FLinearColor& Temp_struct_Variable_2, const struct FLinearColor& Temp_struct_Variable_3, const struct FHitResult& CallFunc_NWXLineTraceSingle_OutHit_1, bool CallFunc_NWXLineTraceSingle_ReturnValue_1, bool CallFunc_BreakHitResult_bBlockingHit_1, bool CallFunc_BreakHitResult_bInitialOverlap_1, float CallFunc_BreakHitResult_Time_1, float CallFunc_BreakHitResult_Distance_1, const struct FVector& CallFunc_BreakHitResult_Location_1, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_1, const struct FVector& CallFunc_BreakHitResult_Normal_1, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_1, class AActor* CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_1, class FName CallFunc_BreakHitResult_HitBoneName_1, class FName CallFunc_BreakHitResult_BoneName_1, int32 CallFunc_BreakHitResult_HitItem_1, int32 CallFunc_BreakHitResult_ElementIndex_1, int32 CallFunc_BreakHitResult_FaceIndex_1, const struct FVector& CallFunc_BreakHitResult_TraceStart_1, const struct FVector& CallFunc_BreakHitResult_TraceEnd_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class AInstancedFoliageActor* K2Node_DynamicCast_AsInstanced_Foliage_Actor, bool K2Node_DynamicCast_bSuccess, class ALandscape* K2Node_DynamicCast_AsLandscape, bool K2Node_DynamicCast_bSuccess_1, double CallFunc_Add_DoubleDouble_B_ImplicitCast);
	void GlideGetAltitudeLaunch(double* Altitude, const struct FVector& PlayerWorldLocation, const struct FVector& PlayerForwardVector, double HighestAltitude, const TArray<double>& LineTraceSpacing, const struct FLinearColor& Temp_struct_Variable, const struct FLinearColor& Temp_struct_Variable_1, TArray<class UObject*>& Temp_object_Variable, TArray<double>& K2Node_MakeArray_Array, int32 Temp_int_Array_Index_Variable, TArray<class UObject*>& Temp_object_Variable_1, const struct FLinearColor& Temp_struct_Variable_2, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FLinearColor& Temp_struct_Variable_3, int32 CallFunc_Array_Length_ReturnValue, double CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FHitResult& CallFunc_NWXLineTraceSingle_OutHit, bool CallFunc_NWXLineTraceSingle_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FHitResult& CallFunc_NWXLineTraceSingle_OutHit_1, bool CallFunc_NWXLineTraceSingle_ReturnValue_1, class AInstancedFoliageActor* K2Node_DynamicCast_AsInstanced_Foliage_Actor, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BreakHitResult_bBlockingHit_1, bool CallFunc_BreakHitResult_bInitialOverlap_1, float CallFunc_BreakHitResult_Time_1, float CallFunc_BreakHitResult_Distance_1, const struct FVector& CallFunc_BreakHitResult_Location_1, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_1, const struct FVector& CallFunc_BreakHitResult_Normal_1, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_1, class AActor* CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_1, class FName CallFunc_BreakHitResult_HitBoneName_1, class FName CallFunc_BreakHitResult_BoneName_1, int32 CallFunc_BreakHitResult_HitItem_1, int32 CallFunc_BreakHitResult_ElementIndex_1, int32 CallFunc_BreakHitResult_FaceIndex_1, const struct FVector& CallFunc_BreakHitResult_TraceStart_1, const struct FVector& CallFunc_BreakHitResult_TraceEnd_1, class ALandscape* K2Node_DynamicCast_AsLandscape, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double K2Node_VariableSet_HighestAltitude_ImplicitCast, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast);
	void StopGlide(FDelegateProperty_ Temp_delegate_Variable, FDelegateProperty_ Temp_delegate_Variable_1, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, class UAkComponent* CallFunc_GetAkAmbient2D_AkAmbient2D, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_PostAkEvent_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, int32 CallFunc_PostAkEvent_ReturnValue_1, class AActor* CallFunc_GetOwner_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocallyControlled_ReturnValue);
	void UpdateGlide(double Velocity, double Altitude, double Roll, class UAkComponent* Ak2D, bool CallFunc_IsValid_ReturnValue, class UAkComponent* CallFunc_GetAkAmbient2D_AkAmbient2D, class AActor* CallFunc_GetOwner_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, double CallFunc_VSize_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, double CallFunc_FClamp_ReturnValue, double CallFunc_Abs_ReturnValue, double CallFunc_GlideGetAltitudeDecend_Altitude, bool CallFunc_IsValid_ReturnValue_1, float CallFunc_SetRTPCValue_Value_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast_1, float CallFunc_SetRTPCValue_Value_ImplicitCast_2, float CallFunc_SetRTPCValue_Value_ImplicitCast_3, float CallFunc_SetRTPCValue_Value_ImplicitCast_4, double CallFunc_Abs_A_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast_5);
	void StartGlide(TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, FDelegateProperty_ Temp_delegate_Variable_1, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UAkComponent* CallFunc_GetAkAmbient2D_AkAmbient2D, bool CallFunc_IsValid_ReturnValue_2, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, double CallFunc_GlideGetAltitudeLaunch_Altitude, bool CallFunc_Not_PreBool_ReturnValue, FDelegateProperty_ Temp_delegate_Variable_2, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_2, FDelegateProperty_ Temp_delegate_Variable_3, int32 CallFunc_PostAkEvent_ReturnValue_1, int32 CallFunc_PostAkEvent_ReturnValue_2, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_3, class AActor* CallFunc_GetOwner_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue_3, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocallyControlled_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void Stop_Teleport_Audio_Player(TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, class AActor* CallFunc_GetOwner_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocallyControlled_ReturnValue);
	void Play_Teleport_Audio_Player(TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, class AActor* CallFunc_GetOwner_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocallyControlled_ReturnValue);
	void Checks_Health_Threshold(bool* IsBelowThreshold, bool* EnteredThreshold, bool* ExitedThreshold, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4);
	void On_Damage_Received(double Damage, class AActor* Target, class AActor* Source, const struct FGameplayTagContainer& Effect_Tags, const struct FHitResult& Hit_Result, const struct FTagValueContainer& Tag_Value_Container);
	void Notify_Music_Manager_of_Readiness(class UMusicManager* CallFunc_Get_Music_Manager_MusicManager, bool CallFunc_IsValid_ReturnValue);
	void Get_Launch_Switch_Value(double Launch_Magnitude, class UAkSwitchValue** Launch_Switch_Value, bool Temp_bool_Variable, class UAkSwitchValue* Temp_object_Variable, bool Temp_bool_Variable_1, class UAkSwitchValue* Temp_object_Variable_1, class UAkSwitchValue* Temp_object_Variable_2, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, class UAkSwitchValue* K2Node_Select_Default, class UAkSwitchValue* K2Node_Select_Default_1);
	void Update_Timestamp(double& Timestamp, double* Current_Time, double CallFunc_GetAudioTimeSeconds_ReturnValue);
	void Has_Cooldown_Elapsed(double Cooldown_Time, double Timestamp, bool* Cooldown_Elapsed, double CallFunc_GetAudioTimeSeconds_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue);
	void Trigger_Knockback_Foley(double Launch_Magnitude, bool Temp_bool_Variable, class UAkAudioEvent* Temp_object_Variable, class UAkAudioEvent* Temp_object_Variable_1, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_CheckAkComponents_AreValid, double CallFunc_Update_Timestamp_Current_Time, bool CallFunc_Has_Cooldown_Elapsed_Cooldown_Elapsed, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue_1, class UAkAudioEvent* K2Node_Select_Default, class UAkSwitchValue* CallFunc_Get_Launch_Switch_Value_Launch_Switch_Value, int32 CallFunc_PostAkEvent_ReturnValue);
	void Update_Voice(const struct FDataTableRowHandle& Appearance_Preset_Row, class UAkSwitchValue* Temp_object_Variable, const struct FCharacterAppearance_Preset& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, class UAkSwitchValue* Temp_object_Variable_1, class UAkSwitchValue* Temp_object_Variable_2, class UAkSwitchValue* Temp_object_Variable_3, enum class EBodyType Temp_byte_Variable, class UAkSwitchValue* K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue);
	void CacheAudio(TArray<class UScriptStruct*>& K2Node_MakeArray_Array, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_GetOwner_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, const struct FGameplayTag& CallFunc_MakeLiteralGameplayTag_ReturnValue, TArray<struct FCellDataArrayWrapper>& CallFunc_QueryTableForRow_OutMemoryPtrs, bool CallFunc_QueryTableForRow_ReturnValue, TArray<struct FS_FootstepAudioEventData>& CallFunc_GetTableCellsData_OutData, const struct FS_FootstepAudioEventData& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue_1, int32 CallFunc_Array_AddUnique_ReturnValue_2);
	void BP_Character_Distance_Check(double MaxDistance, bool* InRange, class AActor* CallFunc_GetOwner_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, double CallFunc_Vector_Distance_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue);
	void Resource_PickUp(TSoftObjectPtr<class UAkAudioEvent> AkEvent, const struct FVector& Location, class UScopedAkComponent* ScopedAk, double CooldownRTPCValue, bool IsLocal, class UAudioRTPCSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAudioRTPCSubsystem* CallFunc_GetWorldSubsystem_ReturnValue_1, float CallFunc_GetDecayingRTPCValue_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, class UAkSwitchValue* Temp_object_Variable, class UAkSwitchValue* Temp_object_Variable_1, bool CallFunc_PostAsyncAkEventScoped_ReturnValue, class UScopedAkComponent* CallFunc_SpawnScopedAkComponentAtLocation_ReturnValue, bool Temp_bool_Variable, class UAudioRTPCSubsystem* CallFunc_GetWorldSubsystem_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_1, class UAkSwitchValue* K2Node_Select_Default, bool CallFunc_BP_Character_Distance_Check_InRange, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, double K2Node_VariableSet_CooldownRTPCValue_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void Resource_Drop(TSoftObjectPtr<class UAkAudioEvent> AkEvent, bool CallFunc_IsValidSoftObjectReference_ReturnValue, bool CallFunc_BP_Character_Distance_Check_InRange, bool CallFunc_PostAsyncAkEventScoped_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void ExitWater(bool CallFunc_IsDedicatedServer_ReturnValue);
	void EnterWater(double HorizontalVelocityScaling, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, bool CallFunc_CheckAkBody_IsValid, bool CallFunc_IsValid_ReturnValue, FDelegateProperty_ Temp_delegate_Variable, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BP_Character_Distance_Check_InRange, bool CallFunc_IsLocallyControlled_ReturnValue, int32 CallFunc_PostAssociatedAkEvent_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class UScopedAkComponent* CallFunc_SpawnScopedAkComponentAtLocation_ReturnValue, class UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, double CallFunc_VSize_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast_1);
	void GetWaterDepth(double* Depth, float CallFunc_LineTraceForWaterFootstep_WaterDepth, const struct FVector& CallFunc_LineTraceForWaterFootstep_WaterHitNormal, const struct FVector& CallFunc_LineTraceForWaterFootstep_WaterHitLocation, bool CallFunc_LineTraceForWaterFootstep_ReturnValue, double K2Node_FunctionResult_Depth_ImplicitCast);
	void BindCallbacks(class UBP_CraftingComponent_C* CraftingComponent, class APlayerController* PlayerController, class APawn* Pawn, class UBP_Music_Manager_C* MusicManager, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UBP_InventoryComponent_C* CallFunc_GetLocalPlayerInventoryComponent_BPInventoryComponent, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess_1, TScriptInterface<class IItemContainer> CallFunc_GetEssencePouch_Container, bool CallFunc_GetEssencePouch_ReturnValue, class UGlobalAudioSubsystem* CallFunc_GetEngineSubsystem_ReturnValue, class UGlobalAudioSubsystem* CallFunc_GetEngineSubsystem_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, class UBP_Music_Manager_C* CallFunc_Get_BPMusic_Manager_MusicManager, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, class ANWXPlayerCharacter* K2Node_DynamicCast_AsNWXPlayer_Character, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_8, bool CallFunc_GetIsReady_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_9, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_10, class UBP_CraftingComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class ANWXGameStateBase* K2Node_DynamicCast_AsNWXGame_State_Base, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_11);
	void HandleClientIsReady(bool CallFunc_IsLocallyControlled_ReturnValue, double CallFunc_GetCurrentHealth_CurrentHealth, double CallFunc_CalcHealthNormalized_HealthNorm, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	void HandleLocalPlayerIsReady();
	void OnHealthChangedInternal(bool IsPawnLocallyControlled, double OldHealthValue, double NewHealthValue, bool CallFunc_IsDedicatedServer_ReturnValue, double CallFunc_CalcHealthNormalized_HealthNorm, double CallFunc_CalcHealthNormalized_HealthNorm_1, bool CallFunc_Checks_Health_Threshold_IsBelowThreshold, bool CallFunc_Checks_Health_Threshold_EnteredThreshold, bool CallFunc_Checks_Health_Threshold_ExitedThreshold, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	void CheckAkBody(bool* IsValid, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void CheckAkHead(bool* IsValid, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void CheckAkComponents(bool* AreValid, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_10, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_11, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_6, bool CallFunc_BooleanAND_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue_8, bool CallFunc_BooleanAND_ReturnValue_9);
	void End_Crouch(TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, FDelegateProperty_ Temp_delegate_Variable_1, int32 Temp_int_Array_Index_Variable, class UAkAudioEvent* Temp_object_Variable, bool CallFunc_CheckAkComponents_AreValid, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BP_Character_Distance_Check_InRange, bool CallFunc_BP_Character_Distance_Check_InRange_1, class UAkAudioEvent* Temp_object_Variable_1, bool CallFunc_IsLocallyControlled_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue_2, bool Temp_bool_Variable, class UAkAudioEvent* K2Node_Select_Default, int32 CallFunc_PostAkEvent_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_GetOwner_ReturnValue, TArray<class UAkComponent*>& CallFunc_K2_GetComponentsByClass_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UAkComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void Start_Crouch(TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, FDelegateProperty_ Temp_delegate_Variable_1, int32 Temp_int_Array_Index_Variable, class UAkAudioEvent* Temp_object_Variable, bool CallFunc_CheckAkComponents_AreValid, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BP_Character_Distance_Check_InRange, bool CallFunc_BP_Character_Distance_Check_InRange_1, class UAkAudioEvent* Temp_object_Variable_1, bool CallFunc_IsLocallyControlled_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue_2, bool Temp_bool_Variable, class UAkAudioEvent* K2Node_Select_Default, int32 CallFunc_PostAkEvent_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_GetOwner_ReturnValue, TArray<class UAkComponent*>& CallFunc_K2_GetComponentsByClass_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UAkComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void StopHeartbeat(FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_CheckAkBody_IsValid, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, int32 CallFunc_PostAkEvent_ReturnValue);
	void StartHeartbeat(FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable_1, bool CallFunc_CheckAkBody_IsValid, bool CallFunc_Not_PreBool_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, int32 CallFunc_PostAkEvent_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue_1);
	void LowHealthOneShot(FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_CheckAkHead_IsValid, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, int32 CallFunc_PostAkEvent_ReturnValue);
	void DeathSFX(bool Temp_bool_Variable, class UAkAudioEvent* Temp_object_Variable, class UAkAudioEvent* Temp_object_Variable_1, class AActor* CallFunc_GetOwner_ReturnValue, class UAkAudioEvent* K2Node_Select_Default, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_PostEventAtLocation_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue);
	void SetLocalPlayerHealth(double Health, bool CallFunc_CheckAkBody_IsValid, float CallFunc_SetRTPCValue_Value_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast_1, float CallFunc_SetRTPCValue_Value_ImplicitCast_2);
	void CacheComponents(bool CallFunc_IsServer_ReturnValue, class UScopedAkComponent* CallFunc_GetScopedAkFootRight_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UScopedAkComponent* CallFunc_GetScopedAkFootLeft_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UScopedAkComponent* CallFunc_GetScopedAkHandRight_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class UScopedAkComponent* CallFunc_GetScopedAkHandLeft_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UScopedAkComponent* CallFunc_GetScopedAkHead_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class UScopedAkComponent* CallFunc_GetScopedAkBody_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, class AActor* CallFunc_GetOwner_ReturnValue, class ANWXCharacter* K2Node_DynamicCast_AsNWXCharacter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_7);
	void SetPlayerVoice(class UAkSwitchValue* VoiceSwitch);
	void Land_AVFX(struct FHitResult& HitResult, double TestLandAudioTime, double LiquidDepth, double Velocity, class UAkSwitchValue* SurfaceSwitch, class UAkAudioEvent* Temp_object_Variable, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, class UNWXPhyiscalMaterial* K2Node_DynamicCast_AsNWXPhyiscal_Material, bool K2Node_DynamicCast_bSuccess, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, FDelegateProperty_ Temp_delegate_Variable_1, class UAkAudioEvent* Temp_object_Variable_1, bool Temp_bool_Variable, FDelegateProperty_ Temp_delegate_Variable_2, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_2, class UAkAudioEvent* Temp_object_Variable_2, class UAkAudioEvent* Temp_object_Variable_3, bool Temp_bool_Variable_1, double CallFunc_GetAudioTimeSeconds_ReturnValue, double CallFunc_GetAudioTimeSeconds_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_GetWaterDepth_Depth, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, double CallFunc_Set_Wetness_RTPC_for_Surface_Surface_Wetness, class UAkAudioEvent* K2Node_Select_Default, bool CallFunc_CheckAkComponents_AreValid, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue_1, bool CallFunc_BP_Character_Distance_Check_InRange, class UAkAudioEvent* K2Node_Select_Default_1, int32 CallFunc_PostAkEvent_ReturnValue_1, bool CallFunc_BP_Character_Distance_Check_InRange_1, bool CallFunc_IsLocallyControlled_ReturnValue_2, bool CallFunc_IsLocallyControlled_ReturnValue_3, int32 CallFunc_PostAkEvent_ReturnValue_2, bool CallFunc_IsServer_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, double CallFunc_VSize_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast_1);
	void JumpSFX(const struct FGameplayTagContainer& LowGravJumpTag, class UAkAudioEvent* Temp_object_Variable, class UAkAudioEvent* Temp_object_Variable_1, bool Temp_bool_Variable, class UAkAudioEvent* Temp_object_Variable_2, class UAkAudioEvent* Temp_object_Variable_3, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, FDelegateProperty_ Temp_delegate_Variable_1, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_CheckAkBody_IsValid, bool Temp_bool_Variable_1, bool CallFunc_IsLocallyControlled_ReturnValue_1, FDelegateProperty_ Temp_delegate_Variable_2, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class UAkAudioEvent* K2Node_Select_Default, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UNWXAbilitySystemComponent* K2Node_DynamicCast_AsNWXAbility_System_Component, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocallyControlled_ReturnValue_2, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, class UAkAudioEvent* K2Node_Select_Default_1, bool CallFunc_BP_Character_Distance_Check_InRange, bool CallFunc_IsLocallyControlled_ReturnValue_3, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_2, int32 CallFunc_PostAkEvent_ReturnValue_1, int32 CallFunc_PostAkEvent_ReturnValue_2, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void SetPlayerSwitches(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsServer_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, TArray<class UAkComponent*>& CallFunc_GetComponentsByTag_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, class UAkComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void Trigger_Knockback_From_Server(double Launch_Magnitude);
	void Client_ItemPickup(const struct FGameplayTag& ATRowTag, const struct FGameplayTag& ATColumnTag, const struct FGameplayTagContainer& ItemTraits, const struct FVector& ItemLocation);
	void Client_ItemDrop(TSoftObjectPtr<class UAkAudioEvent> AkEvent);
	void LowHealthVolumeBoost();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void TriggerClimbingAxeCooldownLeft();
	void TriggerClimbingAxeCooldownRight();
	void CheckWaterExit();
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void DodgeVelocityTimer();
	void StartDodgeVelocity();
	void ExecuteUbergraph_BP_Character_Audio_Component(int32 EntryPoint, TSoftObjectPtr<class UAkAudioEvent> K2Node_CustomEvent_AkEvent, bool CallFunc_IsDedicatedServer_ReturnValue, const struct FGameplayTag& K2Node_CustomEvent_ATRowTag, const struct FGameplayTag& K2Node_CustomEvent_ATColumnTag, const struct FGameplayTagContainer& K2Node_CustomEvent_ItemTraits, const struct FVector& K2Node_CustomEvent_ItemLocation, bool CallFunc_IsValid_ReturnValue, bool CallFunc_MatchesTag_ReturnValue, double K2Node_CustomEvent_Launch_Magnitude, bool CallFunc_IsDedicatedServer_ReturnValue_1, TArray<class UScriptStruct*>& K2Node_MakeArray_Array, TArray<struct FAffinityTableCellDataWrapper>& CallFunc_QueryTable_OutMemoryPtrs, bool CallFunc_QueryTable_ReturnValue, bool CallFunc_CheckAkBody_IsValid, const struct FItemAudioPickup& CallFunc_GetTableCellData_OutData, bool CallFunc_IsDedicatedServer_ReturnValue_2, TSoftObjectPtr<class UAkAudioEvent> CallFunc_ResolveTaggableSound_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, TArray<class UScriptStruct*>& K2Node_MakeArray_Array_1, TArray<struct FAffinityTableCellDataWrapper>& CallFunc_QueryTable_OutMemoryPtrs_1, bool CallFunc_QueryTable_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, const struct FItemAudioPickup& CallFunc_GetTableCellData_OutData_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, TSoftObjectPtr<class UAkAudioEvent> CallFunc_ResolveTaggableSound_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, float K2Node_Event_DeltaSeconds, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_UpdateStructureReverbs_ReturnValue, enum class EEndPlayReason K2Node_Event_EndPlayReason, class AActor* CallFunc_GetOwner_ReturnValue, FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_IsFirstPersonCharacter_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, class UCharacterMovementComponent* CallFunc_GetComponentByClass_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, double CallFunc_VSizeXY_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue, float CallFunc_Delay_Duration_ImplicitCast, float CallFunc_Delay_Duration_ImplicitCast_1, float CallFunc_Delay_Duration_ImplicitCast_2, float CallFunc_SetRTPCValue_Value_ImplicitCast);
};

}


