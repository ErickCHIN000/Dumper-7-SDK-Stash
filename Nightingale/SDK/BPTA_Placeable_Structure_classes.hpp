#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x301 (0x8B1 - 0x5B0)
// BlueprintGeneratedClass BPTA_Placeable_Structure.BPTA_Placeable_Structure_C
class ABPTA_Placeable_Structure_C : public ABPTA_Placeable_C
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x5B0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                   Billboard;                                         // 0x5B8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSet<class UObject*>                         CurrentFeedbackConnections;                        // 0x5C0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UStaticMeshComponent*                  BoxFeedback;                                       // 0x610(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FOverlapResultWraper>          BlockingHits;                                      // 0x618(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class ABP_ClientResourceProxy_C*, struct FOverlapResultWraper> FoliageClientProxy;                                // 0x628(0x50)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	class UBillboardComponent*                   RotationFeedback;                                  // 0x678(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UBillboardComponent*>           SnapPointIcons;                                    // 0x680(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                        SnapPointIconCacheSize;                            // 0x690(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        SnapPointOptionOffset;                             // 0x694(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        PreviousSnapPointOptionOffset;                     // 0x698(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2155[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStructureAssetReference              PlaceableStructureRef;                             // 0x6A0(0x80)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSet<class UObject*>                         CachedTraitObjects;                                // 0x720(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class USplineComponent*, class USplineMeshComponent*> SplineToMeshesMap;                                 // 0x770(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UObject*, class USplineComponent*> ObjectToSplineMap;                                 // 0x7C0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UObject*, class UWidgetComponent*> WidgetComponents;                                  // 0x810(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<struct FStructureTrait, class AActor*>  TraitToLastInflicter;                              // 0x860(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                         TraitFeedbackHidden;                               // 0x8B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class ABPTA_Placeable_Structure_C* GetDefaultObj();

	void ShowTraitFeedback(int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_2, TArray<class UObject*>& CallFunc_Set_ToArray_Result, class UObject* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, TArray<class USplineMeshComponent*>& CallFunc_Map_Values_Values, TArray<class UWidgetComponent*>& CallFunc_Map_Values_Values_1, class USplineMeshComponent* CallFunc_Array_Get_Item_1, class UWidgetComponent* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2);
	void ClearAllTraitFeedback(bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsServer_ReturnValue);
	void DestroyTraitWidget(class UObject* Structure, class UWBP_HUD_Structure_Traits_C* LNewWidget, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, class UWidgetComponent* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void OnEffectedTraitComponentsChanged(struct FEffectedTraitComponentsChangedContext& ChangedContext, class UStructureTraitEmissionComponent* TraitEmissionComponent, class UStructureTraitComponent* CurrentTraitComponent, int32 Temp_int_Array_Index_Variable, class UStructureTraitComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, class UStructureTraitComponent* CallFunc_Array_Get_Item_1, bool CallFunc_IsValid_ReturnValue_1, class AActor* CallFunc_GetOwner_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_1, bool CallFunc_Set_Remove_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_2, class AActor* CallFunc_GetOwner_ReturnValue_3, class ABP_PlayerController_C* CallFunc_GetPlacingController_Controller, TArray<struct FStructureTrait>& CallFunc_SimulateEmittedTraitsDuringPlacement_OutAddedTraits, TArray<struct FStructureTrait>& CallFunc_SimulateEmittedTraitsDuringPlacement_OutRemovedTraits, TArray<struct FStructureTrait>& CallFunc_SimulateEmittedTraitsDuringPlacement_OutDecreasedTraits, TArray<struct FStructureTrait>& CallFunc_SimulateEmittedTraitsDuringPlacement_OutIncreasedTraits);
	void HandleInitialTraitAdditions(int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, TScriptInterface<class IStructureTraitInterface> K2Node_DynamicCast_AsStructure_Trait_Interface, bool K2Node_DynamicCast_bSuccess, class UStructureTraitComponent* CallFunc_GetStructureTraitComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FStructureTrait& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void HandleTraitAdd(const struct FStructureTrait& Trait, class AActor* CurInflicter, class AActor* CallFunc_Array_Get_Item, bool CallFunc_Array_IsEmpty_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void HandleTraitModifications(TArray<struct FStructureTrait>& Traits, class AActor* CurInflicter, const struct FStructureTrait& CurTrait, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FStructureTrait& CallFunc_Array_Get_Item, class AActor* CallFunc_Array_Get_Item_1, bool CallFunc_Array_IsEmpty_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_Set_Remove_ReturnValue);
	void HandleTraitRemovals(TArray<struct FStructureTrait>& Traits, class AActor* CurInflicter, const struct FStructureTrait& CurTrait, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FStructureTrait& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Set_Remove_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_Array_Get_Item_1, bool CallFunc_Array_IsEmpty_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void HandleTraitAdditions(TArray<struct FStructureTrait>& Traits, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FStructureTrait& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void RemoveSplineFromObject(class UObject*& NewObject, class USplineComponent* FoundSpline, bool CallFunc_IsDedicatedServer_ReturnValue, class USplineMeshComponent* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Map_Remove_ReturnValue_1, class USplineComponent* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1);
	void RemoveTraitFromWidget(struct FStructureTrait& StructureTrait, class UObject* Structure, class UWBP_HUD_Structure_Traits_C* LNewWidget, bool CallFunc_IsDedicatedServer_ReturnValue, class UWidgetComponent* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UUserWidget* CallFunc_GetWidget_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UWBP_HUD_Structure_Traits_C* K2Node_DynamicCast_AsWBP_HUD_Structure_Traits, bool K2Node_DynamicCast_bSuccess);
	void AddNewSplineToObject(class UObject*& NewObject, class USplineMeshComponent* NewSplineMesh, const TArray<struct FVector>& Datapoints, class USplineComponent* NewSpline, const struct FTransform& Temp_struct_Variable, const struct FTransform& Temp_struct_Variable_1, class USplineMeshComponent* CallFunc_AddComponent_ReturnValue, class USplineComponent* CallFunc_AddComponent_ReturnValue_1, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_Map_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue);
	void MakeTraitWidgetComponent(class UObject* ObjectParent, class UWidgetComponent** OutNewWidget, class UWidgetComponent* NewTraitWidgetComponent, class UWBP_HUD_Structure_Traits_C* NewTraitWidget, const struct FTransform& Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, class UWidgetComponent* CallFunc_AddComponent_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, class ANWXPlayerController* CallFunc_GetLocalPlayerController_LocalPlayerController, class UWBP_HUD_Structure_Traits_C* CallFunc_Create_ReturnValue);
	void AddOrUpdateTraitWidget(struct FStructureTrait& StructureTrait, bool Add, class UObject* Structure, class UWidgetComponent* LNewWidget, bool CallFunc_IsDedicatedServer_ReturnValue, class UWidgetComponent* CallFunc_MakeTraitWidgetComponent_OutNewWidget, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, class UUserWidget* CallFunc_GetWidget_ReturnValue, class UWBP_HUD_Structure_Traits_C* K2Node_DynamicCast_AsWBP_HUD_Structure_Traits, bool K2Node_DynamicCast_bSuccess, class UWidgetComponent* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UUserWidget* CallFunc_GetWidget_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, class UWBP_HUD_Structure_Traits_C* K2Node_DynamicCast_AsWBP_HUD_Structure_Traits_1, bool K2Node_DynamicCast_bSuccess_1);
	void ClearWidgets(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, TArray<class UWidgetComponent*>& CallFunc_Map_Values_Values, class UWidgetComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void SetWidgetLocation(bool IsHighlightingBuilding, class USceneComponent* Object, class UObject* ObjectBelow, double ZOffset, double MeshBounds, bool LIsHighlightingBuilding, double LZOffset, class UObject* LNewObject, class USceneComponent* LWidget, const struct FVector& LLocation, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_GetMeshBounds_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface_1, bool K2Node_DynamicCast_bSuccess_1, const struct FVector& CallFunc_GetMeshBounds_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface_2, bool K2Node_DynamicCast_bSuccess_2, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, const struct FVector& CallFunc_GetMeshOrigin_LocalLocation, const struct FVector& CallFunc_GetMeshOrigin_WorldLocation);
	void On_Trait_Changed(struct FStructureTraitChangedContext& TraitChangedContext, class AActor* CurInflicter, const struct FStructureTrait& CurTrait, TArray<struct FStructureTrait>& CallFunc_K2_SplitEffectedTraitsMap_OutAddedTraits, TArray<struct FStructureTrait>& CallFunc_K2_SplitEffectedTraitsMap_OutRemovedTraits, TArray<struct FStructureTrait>& CallFunc_K2_SplitEffectedTraitsMap_OutModifiedTraits);
	void AddStructureTraitConnection(class UObject* StructureObject, struct FStructureTrait& StructureTrait, bool IsAdd, const TArray<struct FStructureTrait>& TempTraits, bool CallFunc_IsValid_ReturnValue);
	void HandleSimulatedEmissionTraits(TArray<struct FStructureTrait>& AddedTraits, TArray<struct FStructureTrait>& IncreasedTraits, TArray<struct FStructureTrait>& DecreasedTraits, TArray<struct FStructureTrait>& RemovedTraits, class UObject* StructureObject, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Array_Index_Variable_3, const struct FStructureTrait& CallFunc_Array_Get_Item, const struct FStructureTrait& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FStructureTrait& CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_3, const struct FStructureTrait& CallFunc_Array_Get_Item_3, bool CallFunc_Less_IntInt_ReturnValue_3);
	void WrapSnapPointOptionOffset(const struct FSnapPlacementTargetData& SnapTargetData, const struct FGridPoint& TargetSnapPoint, TArray<struct FVector>& CallFunc_GetGridPointAlternativeRotations_OutAlternativeRotations, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 CallFunc_ArithmeticModulo_ReturnValue);
	void UpdateSplineMesh(class USplineComponent*& Spline, class USplineMeshComponent*& SplineMesh, const TArray<struct FVector>& Datapoints, float CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue, float CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Location, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Tangent, double CallFunc_Divide_DoubleDouble_ReturnValue, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Location_1, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast, double CallFunc_Subtract_DoubleDouble_B_ImplicitCast, float CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast);
	void UpdateSpline(class UObject*& Object, class USplineMeshComponent* NewSplineMesh, const TArray<struct FVector>& Datapoints, class USplineComponent* CurrentSpline, class USplineComponent* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class USplineMeshComponent* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1);
	void UpdateSplinePoints(class UObject*& Object, class USplineComponent*& Spline, const TArray<struct FVector>& Datapoints, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_GetMeshOrigin_LocalLocation, const struct FVector& CallFunc_GetMeshOrigin_WorldLocation, int32 CallFunc_Array_Add_ReturnValue, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface_1, bool K2Node_DynamicCast_bSuccess_1, const struct FVector& CallFunc_GetMeshOrigin_LocalLocation_1, const struct FVector& CallFunc_GetMeshOrigin_WorldLocation_1, int32 CallFunc_Array_Add_ReturnValue_1);
	void ClearTraitHightlight(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class UObject*>& CallFunc_Set_ToArray_Result, int32 CallFunc_Array_Length_ReturnValue, class UObject* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void RefreshWidgets(class UObject*& Object, bool IsHighlightingBuilding, class UWidgetComponent* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void UpdateStructureTraits(class UObject* CurrentObject, int32 Temp_int_Array_Index_Variable, TArray<class UObject*>& CallFunc_Set_ToArray_Result, class UObject* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void OnPlacementEnded(bool bIsPlacementSuccessful, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, TScriptInterface<class IStructureTraitEmissionInterface> K2Node_DynamicCast_AsStructure_Trait_Emission_Interface, bool K2Node_DynamicCast_bSuccess, class UStructureTraitEmissionComponent* CallFunc_GetStructureTraitEmissionComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class IStructureTraitInterface> K2Node_DynamicCast_AsStructure_Trait_Interface, bool K2Node_DynamicCast_bSuccess_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class UStructureTraitComponent* CallFunc_GetStructureTraitComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue_2);
	void OnPlacementStarted(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, TScriptInterface<class IStructureTraitEmissionInterface> K2Node_DynamicCast_AsStructure_Trait_Emission_Interface, bool K2Node_DynamicCast_bSuccess, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class UStructureTraitEmissionComponent* CallFunc_GetStructureTraitEmissionComponent_ReturnValue, TScriptInterface<class IStructureTraitInterface> K2Node_DynamicCast_AsStructure_Trait_Interface, bool K2Node_DynamicCast_bSuccess_1, class UStructureTraitComponent* CallFunc_GetStructureTraitComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void GetSnapPointOptionChoices(const struct FSnapPlacementTargetData& SnapTargetData, const struct FGridPoint& TargetSnapPoint, int32* OutSnapPointIndex, struct FVector* OutAlternativeRotation, int32 AlternativeRotationIndexOffset, int32 SnapPointIndexOffset, TArray<struct FVector>& CallFunc_GetGridPointAlternativeRotations_OutAlternativeRotations, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_GetChosenSnapPointIndex_OutSnapPointIndex, double CallFunc_Conv_IntToDouble_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, const struct FVector& CallFunc_GetChosenAlternativeRotation_AlternativeRotation, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue, int32 CallFunc_FFloor_ReturnValue);
	void GetChosenAlternativeRotation(struct FGridPoint& TargetSnapPoint, int32 AlternativeRotationIndexOffset, struct FVector* AlternativeRotation, const TArray<struct FVector>& AlternativeRotations, int32 NumberOfAvailableRotations, const struct FVector& ChosenRotation, int32 ChosenIndex, TArray<struct FVector>& CallFunc_GetGridPointAlternativeRotations_OutAlternativeRotations, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_ArithmeticModulo_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue);
	void IsTextFeedbackVisible(struct FStructurePlacementFeedback& PlacementFeedbackData, bool* IsVisible, bool CallFunc_IsTextFeedbackVisible_IsVisible, bool CallFunc_Not_PreBool_ReturnValue);
	void ResetSnapPointIcons(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UBillboardComponent* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void ChangePlaceableVisibility(bool IsVisible, bool LIsVisible, const TArray<class UMeshComponent*>& LMeshes);
	void UpdateTargetData(class UObject* Placeable, struct FGameplayAbilityTargetDataHandle* TargetData, const struct FVector& ChosenAlternativeRotation, const struct FGridPoint& TargetGridPoint, const struct FGridPoint& SourceGridPoint, class UCompositePieceSnapObject* SourceSnapComponent, int32 ChosenSnapPointIndex, const struct FSnapPlacementTargetData& SnapData, const struct FGameplayAbilityTargetDataHandle& LTargetData, const struct FGameplayAbilityTargetDataHandle& CallFunc_UpdateTargetData_TargetData, bool CallFunc_IsSnapPlacementDataValid_ReturnValue, class UObject* CallFunc_GetSnapActorFromTargetData_OutActor, const struct FGridPoint& CallFunc_GetSnapActorFromTargetData_OutSelectedSnapPoint, int32 CallFunc_GetSnapPointOptionChoices_OutSnapPointIndex, const struct FVector& CallFunc_GetSnapPointOptionChoices_OutAlternativeRotation, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface, bool K2Node_DynamicCast_bSuccess, class UCompositePieceSnapObject* CallFunc_GetSnapComponent_SnapObject, class USnapRulesEnforcer* CallFunc_GetSnapRulesEnforcer_ReturnValue, const struct FTransform& CallFunc_CalculateSnapTransformForPoints_ReturnValue, const struct FGameplayAbilityTargetDataHandle& CallFunc_TargetDataFromSnapablePlacementData_ReturnValue, const struct FGridPoint& CallFunc_GetGridPoint_ReturnValue, const struct FSnapPlacementTargetData& CallFunc_GetSnapPlacementData_OutData);
	void IsPreviewUnchanged(const struct FGameplayAbilityTargetDataHandle& TargetData, bool* IsPreviewUnchanged, const struct FSnapPlacementTargetData& SnapData, const struct FSnapPlacementTargetData& CallFunc_GetSnapPlacementData_OutData, bool CallFunc_IsPreviewUnchanged_IsPreviewUnchanged, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsSnapPlacementDataValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void UpdateSnapPointVisualization(const struct FStructurePlacementFeedback& PlacementFeedbackData, const struct FVector& SnappedToPoint, int32 IconIDX, TSet<struct FVector> ShownLocs, int32 Temp_int_Array_Index_Variable, const struct FGridPoint& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_VectorVector_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, int32 Temp_int_Variable, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Set_Contains_ReturnValue, class UBillboardComponent* CallFunc_Array_Get_Item_1, bool CallFunc_Not_PreBool_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2);
	void ResetSuccessfulPlacementFeedback();
	void ResetFailedPlacementFeedback();
	void UpdateRotationFeedbackTransform(const struct FTransform& LTransform, double LMaxBounds, class ABP_PlayerController_C* CallFunc_GetPlacingController_Controller, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FTransform& CallFunc_GetObjectTransform_ReturnValue, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_GetMeshBounds_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_FMax_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldTransform_SweepHitResult, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void GetRotationToFacePlayer(struct FRotator* Rotation, class ACharacter* CallFunc_GetPlacingCharacter_PlayerPawn, const struct FVector& CallFunc_GetActorEyesViewPoint_OutLocation, const struct FRotator& CallFunc_GetActorEyesViewPoint_OutRotation, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, double CallFunc_Add_DoubleDouble_A_ImplicitCast, float CallFunc_MakeRotator_Yaw_ImplicitCast);
	void ResetRotationFeedback(bool CallFunc_IsValid_ReturnValue);
	void SpawnRotationFeedback(const struct FStructurePlacementFeedback& PlacementFeedbackData, const struct FTransform& LTransform, bool CallFunc_IsValid_ReturnValue);
	void SpawnBoxCollisionFeedback(struct FStructurePlacementFeedback_Collision& CollisionFeedback, const struct FVector& WorldMeshExtents, const struct FVector& BaseMeshScale, double BottomCornerZ, const struct FTransform& Temp_struct_Variable, class UStaticMeshComponent* CallFunc_AddComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<struct FVector>& CallFunc_GetStructure3DWorldFourCorners_ReturnValue, const struct FVector& CallFunc_Array_Get_Item, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_GetMeshExtents_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue);
	void AreOverlapsEqual(struct FOverlapResultWraper& OverlapResultWrapperOne, struct FOverlapResultWraper& OverlapResultWrapperTwo, bool* Equal, class UObject* CallFunc_GetHitObjectFromOverlap_OutObject, int32 CallFunc_GetItemIndex_OutIndex, class UPrimitiveComponent* CallFunc_GetComponent_OutComponent, class UObject* CallFunc_GetHitObjectFromOverlap_OutObject_1, int32 CallFunc_GetItemIndex_OutIndex_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UPrimitiveComponent* CallFunc_GetComponent_OutComponent_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void GetFoliageForHit(struct FOverlapResultWraper& OverlapResult, class ABP_ClientResourceProxy_C** Foliage, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ABP_ClientResourceProxy_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, class ABP_ClientResourceProxy_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FOverlapResultWraper& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_AreOverlapsEqual_Equal);
	void DoesBlockingHitsContainOverlap(struct FOverlapResultWraper& OverlapResult, bool* ContainsOverlap, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FOverlapResultWraper& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_AreOverlapsEqual_Equal, bool CallFunc_Less_IntInt_ReturnValue);
	void HighlightCollisionFeedback(struct FStructurePlacementFeedback_Collision& CollisionFeedback, const TArray<struct FOverlapResultWraper>& LCachedBlockingHits, const struct FOverlapResultWraper& LPotentialRemoval, const TArray<struct FOverlapResultWraper>& LProcessedHits, const struct FOverlapResultWraper& LMatchingHit, const struct FOverlapResultWraper& LCurrentHit, const TArray<struct FOverlapResultWraper>& LNewHits, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UObject* CallFunc_GetHitObjectFromOverlap_OutObject, class UObject* CallFunc_GetHitObjectFromOverlap_OutObject_1, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, const struct FOverlapResultWraper& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_DoesBlockingHitsContainOverlap_ContainsOverlap, bool CallFunc_Not_PreBool_ReturnValue, const struct FOverlapResultWraper& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1);
	void CleanupFoliageClientProxy(struct FOverlapResultWraper& OverlapResult, class ABP_ClientResourceProxy_C* LFoliageFound, class ABP_ClientResourceProxy_C* CallFunc_GetFoliageForHit_Foliage, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Map_Remove_ReturnValue);
	void SpawnFoliageClientProxies(bool ProxyActive, const struct FOverlapResultWraper& ProxyHitResult, class ABP_ClientResourceProxy_C** FoliageClientProxy, class UHierarchicalInstancedStaticMeshComponent* LHISM, const struct FOverlapResultWraper& LOverlapResult, bool LActive, const class FString& CallFunc_GetFunctionName_ReturnValue, class ABP_ClientResourceProxy_C* CallFunc_GetFoliageForHit_Foliage, bool CallFunc_IsValid_ReturnValue, bool CallFunc_DoesBlockingHitsContainOverlap_ContainsOverlap, int32 CallFunc_GetItemIndex_OutIndex, TSoftObjectPtr<class UStaticMesh> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FTransform& CallFunc_GetInstanceTransform_OutInstanceTransform, bool CallFunc_GetInstanceTransform_ReturnValue, class UPrimitiveComponent* CallFunc_GetComponent_OutComponent, const struct FTransform& CallFunc_GetTransformOneUnitTowardsLocalPlayer_ShiftedTransform, class UHierarchicalInstancedStaticMeshComponent* K2Node_DynamicCast_AsHierarchical_Instanced_Static_Mesh_Component, bool K2Node_DynamicCast_bSuccess, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ABP_ClientResourceProxy_C* CallFunc_FinishSpawningActor_ReturnValue);
	void HighlightComponent(class UPrimitiveComponent* PrimitiveComponent, bool Active, int32 StencilValue, bool CallFunc_IsValid_ReturnValue);
	bool CanPlaceableBeRaised(bool Temp_bool_Variable, class UObject* Temp_object_Variable, TScriptInterface<class ISupportInterface> K2Node_DynamicCast_AsSupport_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsSupported_ReturnValue, bool CallFunc_CanPlaceableBeRaised_ReturnValue, TScriptInterface<class ISupportAccessInterface> K2Node_DynamicCast_AsSupport_Access_Interface, bool K2Node_DynamicCast_bSuccess_1, const struct FSnapPlacementTargetData& CallFunc_GetSnapPlacementData_OutData, class UObject* CallFunc_GetSupportInterfaceObject_ReturnValue, bool CallFunc_IsSnapPlacementDataValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void IsHitFoliageActor(const struct FOverlapResultWraper& HitInformation, bool* IsFoliageActor, const struct FOverlapResultWraper& LOptionalHitInformation, class UPrimitiveComponent* CallFunc_GetComponent_OutComponent, class UHierarchicalInstancedStaticMeshComponent* K2Node_DynamicCast_AsHierarchical_Instanced_Static_Mesh_Component, bool K2Node_DynamicCast_bSuccess);
	void HighlightFoliageActor(const struct FOverlapResultWraper& HitResult, bool Active, int32 StencilValue, int32 LStencilValue, class UHierarchicalInstancedStaticMeshComponent* LHISM, bool LActive, const struct FOverlapResultWraper& LHitResult, class ABP_ClientResourceProxy_C* CallFunc_SpawnFoliageClientProxies_FoliageClientProxy, bool CallFunc_IsValid_ReturnValue);
	void ResetCollisionFeedback(class ABP_ClientResourceProxy_C* LCurrentProxy, const struct FOverlapResultWraper& LCurrentBlockingHit, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class ABP_ClientResourceProxy_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, const struct FOverlapResultWraper& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, class UObject* CallFunc_GetHitObjectFromOverlap_OutObject, class ABP_ClientResourceProxy_C* CallFunc_Array_Get_Item_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2);
	void SpawnCollisionFeedback(const struct FStructurePlacementFeedback& PlacementFeedbackData, double BottomCornerZ, const struct FVector& WorldMin, const struct FOverlapResultWraper& LNewHit, class UPrimitiveComponent* LNewHitComponent, const struct FVector& WorldMeshExtents, const struct FVector& BaseMeshScale);
	void ClearSplines(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, TArray<class USplineComponent*>& CallFunc_Map_Values_Values, class USplineComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, TArray<class USplineMeshComponent*>& CallFunc_Map_Values_Values_1, int32 CallFunc_Array_Length_ReturnValue_1, class USplineMeshComponent* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1);
	void HighlightObject(class UObject* Object, bool Active, enum class EPlacementFeedbackHighlight HighlightType, const struct FOverlapResultWraper& OptionalHitInformation, const struct FOverlapResultWraper& LOptionalHitInformation, int32 LStencilValue, class UObject* LObject, bool LActive, int32 Temp_int_Array_Index_Variable, enum class EPlacementFeedbackHighlight Temp_byte_Variable, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Variable, bool CallFunc_BooleanAND_ReturnValue, class UPrimitiveComponent* CallFunc_GetComponent_OutComponent, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsHitFoliageActor_IsFoliageActor, const struct FHitResult& CallFunc_GetHitResultFromOverlapResult_ReturnValue, const struct FInteractionData& K2Node_MakeStruct_InteractionData, const class FString& CallFunc_GetFunctionName_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_DoesImplementInterface_ReturnValue, TScriptInterface<class IBPI_Interactable_C> K2Node_DynamicCast_AsBPI_Interactable, bool K2Node_DynamicCast_bSuccess, TArray<class UStaticMeshComponent*>& CallFunc_ReturnMeshToHighlight_StaticMesh_to_Highlight, TArray<class USkeletalMeshComponent*>& CallFunc_ReturnMeshToHighlight_SkeletalMesh_to_Highlight, bool CallFunc_ReturnMeshToHighlight_Hostile_, enum class EItemQuality CallFunc_ReturnMeshToHighlight_Quality, bool CallFunc_IsValid_ReturnValue_1, class USkeletalMeshComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UStaticMeshComponent* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 K2Node_Select_Default);
	void HideTraitFeedback(int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_2, TArray<class UObject*>& CallFunc_Set_ToArray_Result, class UObject* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, TArray<class USplineMeshComponent*>& CallFunc_Map_Values_Values, TArray<class UWidgetComponent*>& CallFunc_Map_Values_Values_1, class USplineMeshComponent* CallFunc_Array_Get_Item_1, class UWidgetComponent* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2);
	void ProcessFeedbackData(const struct FStructurePlacementFeedback& FeedbackData, const struct FStructurePlacementFeedback& LPlacementFeedback, bool CallFunc_IsPlaceableVisible_IsVisible, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_GetMeshOrigin_LocalLocation, const struct FVector& CallFunc_GetMeshOrigin_WorldLocation, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FTransform& Temp_struct_Variable, TScriptInterface<class IStructureWorldInterface> K2Node_DynamicCast_AsStructure_World_Interface, bool K2Node_DynamicCast_bSuccess_1, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FTransform& CallFunc_GetStructureWorldTransform_ReturnValue, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorTransform_SweepHitResult, bool CallFunc_K2_SetActorTransform_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue);
	void CleanupPlacementPreview(bool bIsPlacementSuccessful, class ACharacter* CallFunc_GetPlacingCharacter_PlayerPawn, class ABP_PlayerController_C* CallFunc_GetPlacingController_Controller, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, float CallFunc_SetCachedPlacementRotation_Rotation_ImplicitCast);
	void GetInitialPlacementTargetData(struct FGameplayAbilityTargetDataHandle* TargetData, const struct FGameplayAbilityTargetDataHandle& LTargetData, const struct FSoftObjectPath& CallFunc_GetSoftObjectPathFromAbilityPayload_ReturnValue, const struct FStructureAssetReference& CallFunc_MakeStructureAssetReferenceFromSoftObjectPath_ReturnValue, const struct FTransform& CallFunc_GetTargetDataEndPointTransform_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, class ABP_PlayerController_C* CallFunc_GetPlacingController_Controller, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsStructureReferenceValid_ReturnValue, const struct FPlacementSettings& CallFunc_GetCachedPlacementSettings_ReturnValue, const struct FGameplayAbilityTargetDataHandle& CallFunc_GetInitialPlacementTargetData_TargetData, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FGameplayAbilityTargetDataHandle& CallFunc_AbilityTargetDataFromTransform_ReturnValue);
	void DestroyPlaceable(class UObject* Placeable, class AActor* K2Node_DynamicCast_AsActor, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IStructureCompositePieceInterface> K2Node_DynamicCast_AsStructure_Composite_Piece_Interface, bool K2Node_DynamicCast_bSuccess_1, class AStructureComposite* CallFunc_GetCompositeStructure_Composite);
	void SpawnPlaceableObject(const struct FGameplayAbilityTargetDataHandle& TargetData, class UObject** SpawnedPlaceable, const struct FTransform& CallFunc_GetTargetDataOrigin_ReturnValue, const struct FStructureSpawnContext& K2Node_MakeStruct_StructureSpawnContext, class UObject* CallFunc_SpawnStructure_ReturnValue);
	void GetChosenSnapPointIndex(struct FSnapPlacementTargetData& SnapTargetData, int32 SnapPointIndexOffset, int32* OutSnapPointIndex, int32 CurrentIndex, int32 NumberOfAcceptableSourcePoints, const TArray<int32>& AcceptableSourcePointIndexes, int32 NewIndexInAcceptableList, int32 InitialIndexInAcceptableList, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_ArithmeticModulo_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Find_ReturnValue, int32 CallFunc_Array_Get_Item);
	void Async_LoadFromEventData();
	void ReceiveStartTargeting(class UGameplayAbility* Ability);
	void OnPlacementRotationUpdated(double Amount);
	void ExecuteUbergraph_BPTA_Placeable_Structure(int32 EntryPoint, double K2Node_Event_Amount, bool CallFunc_Greater_DoubleDouble_ReturnValue, class UGameplayAbility* K2Node_Event_Ability, int32 CallFunc_Add_IntInt_ReturnValue, const struct FSoftObjectPath& CallFunc_GetSoftObjectPathFromAbilityPayload_ReturnValue, const struct FStructureAssetReference& CallFunc_MakeStructureAssetReferenceFromSoftObjectPath_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FTransform& Temp_struct_Variable, bool CallFunc_IsStructureReferenceValid_ReturnValue, class UBillboardComponent* CallFunc_AddComponent_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
};

}


