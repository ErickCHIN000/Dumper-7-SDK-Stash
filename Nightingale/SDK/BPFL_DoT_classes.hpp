#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BPFL_DoT.BPFL_DoT_C
class UBPFL_DoT_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBPFL_DoT_C* GetDefaultObj();

	void ApplyStatusEffectDotFromCreature(class UObject*& Target, const struct FStatusEffectDOT& StatusEffectData, bool IsInfinite, class ANWXAICharacter* Creature, class UObject* __WorldContext, TMap<struct FGameplayTag, float> DOTDamageMagnitude, TMap<struct FGameplayTag, float> K2Node_MakeVariable_MakeVariableOutput, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FGameplayTag& CallFunc_GetDOTDamageTag_ReturnValue, double CallFunc_GetCreatureRealmPowerDamageMultiplier_Multiplier, TScriptInterface<class IStatusEffectAccessInterface> K2Node_DynamicCast_AsStatus_Effect_Access_Interface, bool K2Node_DynamicCast_bSuccess, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FStatusEffectHandle& CallFunc_ApplyTimedStatusEffectWithMagnitude_ActiveStatusEffectHandle, bool CallFunc_ApplyTimedStatusEffectWithMagnitude_ReturnValue, TMap<struct FGameplayTag, float> K2Node_MakeMap_Map, TScriptInterface<class IStatusEffectAccessInterface> K2Node_DynamicCast_AsStatus_Effect_Access_Interface_1, bool K2Node_DynamicCast_bSuccess_1, const struct FStatusEffectHandle& CallFunc_ApplyInfiniteStatusEffectWithMagnitude_ActiveStatusEffectHandle, bool CallFunc_ApplyInfiniteStatusEffectWithMagnitude_ReturnValue, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, float K2Node_MakeMap_Value_0_ImplicitCast);
	void ApplyDotFromAmmo(struct FItemData_Ammo& ItemData_Ammo, class AActor* Target, class AActor* Source, const struct FInventoryEntry& Weapon_Entry, class UObject* __WorldContext, const struct FGameplayAttribute& Temp_struct_Variable, bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttribute_ReturnValue, bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1, float CallFunc_GetFloatAttribute_ReturnValue_1, float CallFunc_CalculateItemAttributeValue_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, double CallFunc_SelectFloat_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsGE_Do_T_Cross_Server, bool K2Node_ClassDynamicCast_bSuccess, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, double CallFunc_Add_DoubleDouble_B_ImplicitCast, double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_Multiply_DoubleDouble_B_ImplicitCast, double CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1, double CallFunc_DamageActorOverTime_Period_ImplicitCast);
	void DamageIsPlayerToNPC(class AActor* Target, class AActor* Source, class UObject* __WorldContext, bool* Result, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_TargetIsNPC_IsNPC, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, const struct FGameplayTag& CallFunc_PlayerControlledTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsStateActive_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3);
	void TargetIsNPC(class AActor* Target, class UObject* __WorldContext, bool* IsNPC, const struct FGameplayTag& Temp_struct_Variable, bool CallFunc_ActorHasTag_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	bool DamageIsPVP(class AActor* Target, class AActor* Source, class UObject* __WorldContext, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FGameplayTag& CallFunc_PlayerControlledTag_ReturnValue, bool CallFunc_IsStateActive_ReturnValue, const struct FGameplayTag& CallFunc_PlayerControlledTag_ReturnValue_1, bool CallFunc_IsStateActive_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3);
	void DamageActorOverTime(class AActor* Target, class AActor* Source, double Damage, double Duration, double Period, class UClass* Effect, class UObject* __WorldContext, class UAbilitySystemComponent* SourceASC, class UAbilitySystemComponent* TargetASC, const struct FGameplayTag& CallFunc_GetDOTDamageTag_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, const struct FGameplayEffectContextHandle& CallFunc_MakeEffectContext_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_AreAutomatedTestsRunning_ReturnValue, bool CallFunc_DamageIsPlayerToNPC_Result, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_DamageIsPVP_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingSpec_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, const struct FGameplayEffectSpecHandle& CallFunc_SetPeriod_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast, float CallFunc_SetPeriod_Period_ImplicitCast, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1);
};

}


