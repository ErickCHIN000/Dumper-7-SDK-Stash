#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x25C (0x59C - 0x340)
// WidgetBlueprintGeneratedClass WBP_PlayerNamePlate1.WBP_PlayerNamePlate1_C
class UWBP_PlayerNamePlate1_C : public UNWXUserWidget
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x340(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                      Anim_IconPulse;                                    // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                          Health;                                            // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            HealthText;                                        // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Img_DeathStateIcon;                                // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Img_healthicon;                                    // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                          NameplateContent;                                  // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MicrophoneStatus_C*               NWXMicrophoneStatusWidget;                         // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              Overlay_0;                                         // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            PlayerId;                                          // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                              SB_HPBar;                                          // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            Txt_CheatMode;                                     // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            Txt_level;                                         // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            Txt_PlayerName;                                    // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            Txt_state;                                         // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                          VerticalBox_1;                                     // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_Character_C*                       BPCharacterReference;                              // 0x3C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                           PartyMemberColor;                                  // 0x3C8(0x14)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                           NotPartyMember;                                    // 0x3DC(0x14)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateFontInfo                        PartyMemberFontSetting;                            // 0x3F0(0x58)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                        NotPartyMemberFontSetting;                         // 0x448(0x58)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                PersistentUniqueID;                                // 0x4A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                  Text_Downed;                                       // 0x4B0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  Text_Reviving;                                     // 0x4C8(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  Text_Revived;                                      // 0x4E0(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  Text_Dead;                                         // 0x4F8(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  Text_Respawning;                                   // 0x510(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  ActiveText;                                        // 0x528(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       MinmumVisibilityDistance;                          // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxPlayerVisDistance;                              // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxPartyMemberVisDistance;                         // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       HP_Percent;                                        // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                  State_Text;                                        // 0x560(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                        CachedPartyIDs;                                    // 0x578(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       PlayerMaxHealth;                                   // 0x588(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       PlayerHealth;                                      // 0x590(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bGamepsaceUIEnabled;                               // 0x598(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsPartyMember;                                     // 0x599(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsGodMode;                                         // 0x59A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsDowned;                                          // 0x59B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UWBP_PlayerNamePlate1_C* GetDefaultObj();

	void UpdateDeathAppearance(enum class ESlateVisibility Temp_byte_Variable, bool Temp_bool_Variable, class UTexture2D* Temp_object_Variable, class UTexture2D* Temp_object_Variable_1, bool Temp_bool_Variable_1, class UTexture2D* Temp_object_Variable_2, enum class ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_2, const struct FGameplayTag& CallFunc_DeathDownedTag_ReturnValue, const struct FGameplayTag& CallFunc_DeathDeadTag_ReturnValue, bool CallFunc_IsStateActive_ReturnValue, bool CallFunc_IsStateActive_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, enum class ESlateVisibility K2Node_Select_Default, class UTexture2D* K2Node_Select_Default_1, class UTexture2D* K2Node_Select_Default_2);
	void FormatPlayerNameByParty(bool Temp_bool_Variable, const struct FSlateColor& K2Node_Select_Default);
	void UpdateHP(double L_MinHPVisibilityPercent, enum class ESlateVisibility Temp_byte_Variable, enum class ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable, double CallFunc_GetCachedHealthPercentage_OutHealthPercentage, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_IsVisible_ReturnValue, enum class ESlateVisibility K2Node_Select_Default);
	void HandleGamespaceUIToggled(bool CallFunc_IsGamespaceUIEnabled_GamespaceUIEnabled);
	void UpdateHealthAppearance(double InHealthPercent, bool Temp_bool_Variable, const struct FLinearColor& Temp_struct_Variable, const struct FLinearColor& Temp_struct_Variable_1, class FText CallFunc_GetHealthText_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, const struct FLinearColor& K2Node_Select_Default, float CallFunc_SetPercent_InPercent_ImplicitCast);
	void GetCachedHealthPercentage(double* OutHealthPercentage, double CallFunc_SafeDivide_ReturnValue);
	void HandlePlayerHealthChanged(float Delta, bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttribute_ReturnValue, bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1, float CallFunc_GetFloatAttribute_ReturnValue_1, double K2Node_VariableSet_PlayerHealth_ImplicitCast, double K2Node_VariableSet_PlayerMaxHealth_ImplicitCast);
	void OffsetWidgetByDistance(class ABP_Character_C* InLocalCharacter, float CallFunc_GetDistanceTo_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FWidgetTransform& K2Node_MakeStruct_WidgetTransform, double CallFunc_MapRangeClamped_Value_ImplicitCast);
	void HandlePartyJoined(const class FString& RoomId, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UBP_PartyComponent_C* CallFunc_GetLocalPartyComponent_PartyComponent, TArray<class ANWXPlayerState*>& CallFunc_GetPlayerStatesOfPartyMembers_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class ANWXPlayerState* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_GetPersistentUniqueId_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void HandlePartyLeft(const class FString& RoomId);
	void HandlePlayerLeftParty(const class FString& RoomId, const class FString& ProfileId, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void HandlePlayerJoinedParty(const class FString& RoomId, const class FString& ProfileId, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	enum class ESlateVisibility GetFrameVisibility(double L_ReviveDistanceVisibility, double L_ReviveTime, double L_MinHealthVisibilityPercent, class UBP_PartyComponent_C* L_BPPartyComponent, class ABP_Character_C* L_BPCharacter, bool Temp_bool_Variable, bool Temp_bool_Variable_1, enum class ESlateVisibility Temp_byte_Variable, enum class ESlateVisibility Temp_byte_Variable_1, enum class ESlateVisibility Temp_byte_Variable_2, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable_2, float CallFunc_GetDistanceTo_ReturnValue, double K2Node_Select_Default, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, class UBP_PartyComponent_C* CallFunc_GetLocalPartyComponent_PartyComponent, bool CallFunc_BooleanAND_ReturnValue, enum class ESlateVisibility K2Node_Select_Default_1, enum class ESlateVisibility K2Node_Select_Default_2, class ABP_Character_C* CallFunc_GetLocalCharacter_PlayerCharacter, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, double CallFunc_Greater_DoubleDouble_A_ImplicitCast, double CallFunc_Less_DoubleDouble_A_ImplicitCast);
	void InitializeCheatModeText(const struct FGameplayTag& CallFunc_GodModeTag_GodModeTag, bool CallFunc_IsStateActive_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void SetPlayerCheatModeText(bool IsInCheatMode);
	void HandleGameplayTagCountChanged(struct FGameplayTag& Tag, int32 Count, const struct FGameplayTag& CallFunc_DeathDownedTag_ReturnValue, const struct FGameplayTag& CallFunc_DeathDownedTag_ReturnValue_1, bool CallFunc_IsStateActive_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, const struct FGameplayTag& CallFunc_GodModeTag_GodModeTag, bool CallFunc_IsStateActive_ReturnValue_1, const struct FGameplayTag& CallFunc_GodModeTag_GodModeTag_1, bool CallFunc_EqualEqual_GameplayTag_ReturnValue_1);
	void SetUsersSuperTotal_HopeMax_(bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttribute_ReturnValue, int32 CallFunc_FFloor_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, double CallFunc_FFloor_A_ImplicitCast);
	void HandleHopeChanged(float Delta);
	void SetDeathLoopStatusText(bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, bool Temp_bool_Variable_3, class FText Temp_text_Variable, bool CallFunc_TextIsEmpty_ReturnValue, class FText K2Node_Select_Default, const struct FGameplayTag& CallFunc_DeathRespawningTag_ReturnValue, const struct FGameplayTag& CallFunc_DeathDeathTimeRemainingTag_ReturnValue, bool CallFunc_IsStateActive_ReturnValue, bool CallFunc_IsStateActive_ReturnValue_1, class FText K2Node_Select_Default_1, class FText K2Node_Select_Default_2, class FText K2Node_Select_Default_3);
	void RefreshNameByTimer(class FText CallFunc_GetPlayerNameText_ReturnValue);
	void TEMP_GetDebugModeState(class UBP_DebugModeStateComponent_C** DebugModeState, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IBPI_PlayerStateSystems_C> K2Node_DynamicCast_AsBPI_Player_State_Systems, bool K2Node_DynamicCast_bSuccess, class UBP_DebugModeStateComponent_C* CallFunc_GetDebugModeStateInterface_DebugModeState, bool CallFunc_IsValid_ReturnValue_1);
	class FText TEMP_Debuging_GetCheatModeText(bool Temp_bool_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, const struct FGameplayTag& CallFunc_GodModeTag_GodModeTag, bool CallFunc_IsStateActive_ReturnValue, bool CallFunc_IsValid_ReturnValue, class FText K2Node_Select_Default);
	void Initialize(class ABP_Character_C* CharacterReference, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class ABP_PlayerState_C* K2Node_DynamicCast_AsBP_Player_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, class ABP_Character_C* CallFunc_GetLocalCharacter_PlayerCharacter, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class FText CallFunc_GetPlayerIDText_ReturnValue, enum class ESlateVisibility CallFunc_GetFrameVisibility_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, bool CallFunc_IsValid_ReturnValue_3, class FText CallFunc_GetPlayerNameText_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3);
	void GetStateText(const struct FS_CharacterStateEntry& CharacterState, class FText* StateText, TMap<enum class E_CharacterGameStatus, class FText> CharacterStatusText, TMap<enum class E_CharacterGameStatus, class FText> K2Node_MakeVariable_MakeVariableOutput, class FText CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	class FText GetHealthText(int32 CallFunc_Round_ReturnValue, int32 CallFunc_Round_ReturnValue_1, int64 CallFunc_Conv_IntToInt64_ReturnValue, int64 CallFunc_Conv_IntToInt64_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, bool CallFunc_Greater_DoubleDouble_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	class FText GetPlayerIDText(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class ABP_PlayerState_C* K2Node_DynamicCast_AsBP_Player_State, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_GetPlayerId_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	class FText GetPlayerNameText(const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class ANWXPlayerState* K2Node_DynamicCast_AsNWXPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_GetPersistentUniqueId_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, class ABP_PlayerState_C* K2Node_DynamicCast_AsBP_Player_State, bool K2Node_DynamicCast_bSuccess_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const class FString& CallFunc_GetPersistentUniqueId_ReturnValue_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_GetPlayerName_ReturnValue, int32 CallFunc_Len_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void UpdateStateText(const struct FS_CharacterStateEntry& MostRecentState);
	void ExecuteUbergraph_WBP_PlayerNamePlate1(int32 EntryPoint, const struct FS_CharacterStateEntry& K2Node_CustomEvent_MostRecentState, class FText CallFunc_GetStateText_StateText, bool CallFunc_IsValid_ReturnValue, enum class ESlateVisibility CallFunc_GetFrameVisibility_ReturnValue, class UBP_PartyComponent_C* CallFunc_GetLocalPartyComponent_PartyComponent, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, class ABP_PlayerState_C* CallFunc_GetLocalPlayerState_PlayerState, const struct FGameplayTag& CallFunc_DeathDeadTag_ReturnValue, class UBP_UI_PersistenceComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsStateActive_ReturnValue, const struct FGameplayTag& CallFunc_DeathDownedTimeRemainingTag_ReturnValue, const struct FGameplayTag& CallFunc_DeathDownedTag_ReturnValue, bool CallFunc_IsStateActive_ReturnValue_1, bool CallFunc_IsStateActive_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class ABP_GameState_C* K2Node_DynamicCast_AsBP_Game_State, bool K2Node_DynamicCast_bSuccess);
};

}


