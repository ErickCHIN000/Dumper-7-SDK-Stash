#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BPFL_Creature.BPFL_Creature_C
class UBPFL_Creature_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBPFL_Creature_C* GetDefaultObj();

	void GetCreatureRealmPowerDamageMultiplier(class ANWXAICharacter* Creature, class UObject* __WorldContext, double* Multiplier, class UCurveFloat* DamageCurve, int32 CallFunc_GetCreatureRealmPower_ReturnValue, bool CallFunc_IsValid_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, int32 CallFunc_GetCurrentRealmPower_RealmPower, double CallFunc_Conv_IntToDouble_ReturnValue_1, float CallFunc_GetFloatValue_ReturnValue_1, double K2Node_FunctionResult_Multiplier_ImplicitCast, double K2Node_FunctionResult_Multiplier_ImplicitCast_1, float CallFunc_GetFloatValue_InTime_ImplicitCast, float CallFunc_GetFloatValue_InTime_ImplicitCast_1);
	bool DoEffectTagsAllowBackstab(const struct FGameplayTagContainer& Tags, class UObject* __WorldContext, const struct FGameplayTagContainer& EffectTagRequirement, const struct FGameplayTagContainer& BackstabRequirements, bool CallFunc_HasAllTags_ReturnValue);
	void Play_Hit_Reaction(class AActor* Actor, double StrengthLevel, const struct FGameplayTagContainer& EffectTags, class UObject* __WorldContext, const struct FTagValueContainer& TagContainer, TArray<struct FGameplayEffectCue>& Temp_struct_Variable, TScriptInterface<class IDamageEventInterface> K2Node_DynamicCast_AsDamage_Event_Interface, bool K2Node_DynamicCast_bSuccess, const struct FHitResult& CallFunc_MakeHitResult_ReturnValue, const struct FGameplayTag& CallFunc_StrengthTag_StrengthTag, const struct FTagValueContainer& CallFunc_DamageActor_AggregatedDamageTags, float CallFunc_Add_Value_ImplicitCast);
	void GetResistance(const struct FGameplayTag& DamageTypeTag, const struct FGameplayTag& CreatureTag, class UObject* __WorldContext, double* DamageMultiplier, bool* IsResisted, enum class Enum_Resistance Temp_byte_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, bool Temp_bool_Variable_3, bool Temp_bool_Variable_4, bool Temp_bool_Variable_5, bool Temp_bool_Variable_6, bool Temp_bool_Variable_7, bool Temp_bool_Variable_8, enum class Enum_Resistance Temp_byte_Variable_1, double Temp_real_Variable, double Temp_real_Variable_1, double Temp_real_Variable_2, double Temp_real_Variable_3, double Temp_real_Variable_4, double Temp_real_Variable_5, double Temp_real_Variable_6, double Temp_real_Variable_7, double Temp_real_Variable_8, TArray<class UScriptStruct*>& K2Node_MakeArray_Array, TArray<struct FAffinityTableCellDataWrapper>& CallFunc_QueryTable_OutMemoryPtrs, bool CallFunc_QueryTable_ReturnValue, const struct FS_CreatureDamageResistance& CallFunc_GetTableCellData_OutData, double K2Node_Select_Default, bool K2Node_Select_Default_1);
	void HideWeakpoints(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Spawner_Tags, class UObject* __WorldContext, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, class ABP_CreatureBase_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void ShowWeakpoints(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Spawner_Tags, class UObject* __WorldContext, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, class ABP_CreatureBase_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	bool DoEffectTagsAllowHeartshot(const struct FGameplayTagContainer& Tags, class UObject* __WorldContext, const struct FGameplayTagContainer& EffectTagRequirement, const struct FGameplayTagContainer& HeartshotSides, const struct FGameplayTagContainer& HeartshotRequirements, bool CallFunc_HasAnyTags_ReturnValue, bool CallFunc_HasAllTags_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetVulnerabilityMultiplier(enum class Enum_Vulnerability VulnerabilityEnum, class UObject* __WorldContext, double* DamageMultiplier, enum class Enum_Vulnerability Temp_byte_Variable, double Temp_real_Variable, double Temp_real_Variable_1, double Temp_real_Variable_2, double K2Node_Select_Default);
	void DoEffectTagsAllowCriticalHits(struct FGameplayTagContainer& ItemTags, const struct FGameplayTagContainer& ImpactTags, class UObject* __WorldContext, bool* AllowCriticalHits, const struct FGameplayTagContainer& ImpactTagsPreventingWeakPoint, const struct FGameplayTagContainer& TagsPreventingWeakPointDamage, bool CallFunc_HasAnyTags_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void CreatureAvailableForQuestsByUIData(const struct FDataTableRowHandle& CreatureUIData, class UObject* WorldContextObject, class UObject* __WorldContext, bool* Available, const struct FS_CreatureUIData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, bool CallFunc_IsValid_ReturnValue, class ANWXGameModeBase* K2Node_DynamicCast_AsNWXGame_Mode_Base, bool K2Node_DynamicCast_bSuccess, class ABP_SimulationStateManager_C* CallFunc_GetManager_ReturnValue, class ANWXWorldSettings* CallFunc_GetWorldSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	struct FVector GetActorUnitDirection(enum class Enum_CardinalDirections Direction, class AActor* Reference, class UObject* __WorldContext, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_GetActorRightVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorInt_ReturnValue, const struct FVector& CallFunc_Multiply_VectorInt_ReturnValue_1, const struct FVector& CallFunc_GetActorUpVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorInt_ReturnValue_2);
	void ValidateAbilityZoneDefinition(const struct FS_CreatureAbilityZoneDefinition& ZoneDefinition, class UObject* __WorldContext, struct FS_CreatureAbilityZoneDefinition* ValidatedZoneDefinition, double CallFunc_FClamp_ReturnValue, double CallFunc_FClamp_ReturnValue_1, const struct FS_CreatureAbilityZoneDefinition& K2Node_MakeStruct_S_CreatureAbilityZoneDefinition, double CallFunc_FClamp_Value_ImplicitCast, double CallFunc_FClamp_Value_ImplicitCast_1, float K2Node_MakeStruct_Yaw_16_CE8D8B8E4B7B6BE9F565649BD71D94D5_ImplicitCast, float K2Node_MakeStruct_YawRange_17_F7DF40C2429380D92F1E59BC505B3DBD_ImplicitCast);
	void GetTargetCountInAbilityZone(TArray<class AActor*>& Targets, class AActor* Reference, const struct FS_CreatureAbilityZoneDefinition& ZoneDefinition, class UObject* __WorldContext, int32* TargetCount, int32 LCount, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable, class AActor* CallFunc_Array_Get_Item, bool CallFunc_IsTargetInAbilityZone_InZone, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void GetTargetCountInSector(TArray<class AActor*>& Targets, class AActor* Reference, double Range, double Angle, class UObject* __WorldContext, int32* TargetCount, int32 LCount, class AActor* CurrentTargetActor, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class AActor* CallFunc_Array_Get_Item, int32 Temp_int_Variable, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsTargetInSector_InSector, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void IsTargetInAbilityZone(class AActor* Reference, class AActor* Target, const struct FS_CreatureAbilityZoneDefinition& ZoneDefinition, bool Debug, class UObject* __WorldContext, bool* InZone, double LDebugDuration, class FName LSocket, enum class Enum_ZoneDefinitionType LZoneType, bool LTargetInZone, bool LTargetInPitchRange, bool LTargetInDistanceRange, bool LTargetInYawRange, double LTargetPitchAngle, double LTargetYawZoneAngle, const struct FVector2D& LTargetYawDirectionXY, const struct FVector& LTargetDirection, const struct FVector& LTargetLocation, const struct FVector2D& LZoneDirectionXY, const struct FVector& LReferenceForward, const struct FVector& LZoneOrigin, double LTargetDistance, double LMaxDistance, double LMinDistance, double LPitchRange, double LPitch, double LYawRange, double LYaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, double CallFunc_SafeDivide_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_1, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_2, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_3, const class FString& CallFunc_SelectString_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue_1, const class FString& CallFunc_SelectString_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, const struct FVector& CallFunc_Conv_Vector2DToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, float CallFunc_GetDistanceTo_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_4, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_5, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Abs_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, const struct FVector& CallFunc_MakeVector_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess, const struct FS_CreatureAbilityZoneDefinition& CallFunc_ValidateAbilityZoneDefinition_ValidatedZoneDefinition, const struct FVector& CallFunc_Get_Zone_Reference_Info_ZoneOrigin, const struct FVector& CallFunc_Get_Zone_Reference_Info_ReferenceForward, const struct FVector2D& CallFunc_Get_Zone_Reference_Info_ZoneDirectionXY, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_MultiplyMultiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Sqrt_ReturnValue, double CallFunc_SafeDivide_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, double CallFunc_DegAtan_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, double CallFunc_FClamp_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_FClamp_ReturnValue_1, bool CallFunc_InRange_FloatFloat_ReturnValue_2, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue_3, double CallFunc_DotProduct2D_ReturnValue, double CallFunc_DegAcos_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_5, bool CallFunc_Less_DoubleDouble_ReturnValue, bool Temp_bool_Variable, bool K2Node_Select_Default, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Normal2D_ReturnValue, float CallFunc_MakeRotator_Pitch_ImplicitCast, float CallFunc_MakeRotator_Yaw_ImplicitCast, float CallFunc_DrawDebugConeInDegrees_AngleWidth_ImplicitCast, float CallFunc_DrawDebugConeInDegrees_Length_ImplicitCast, float CallFunc_DrawDebugCircle_Radius_ImplicitCast, float CallFunc_DrawDebugCircle_Radius_ImplicitCast_1, float CallFunc_DrawDebugConeInDegrees_Duration_ImplicitCast, float CallFunc_DrawDebugConeInDegrees_Duration_ImplicitCast_1, float CallFunc_DrawDebugConeInDegrees_Duration_ImplicitCast_2, float CallFunc_DrawDebugCircle_Duration_ImplicitCast, float CallFunc_DrawDebugCircle_Duration_ImplicitCast_1, float CallFunc_DrawDebugPoint_Duration_ImplicitCast, float CallFunc_DrawDebugPoint_Duration_ImplicitCast_1, float CallFunc_DrawDebugArrow_Duration_ImplicitCast, float CallFunc_DrawDebugArrow_Duration_ImplicitCast_1, float CallFunc_DrawDebugConeInDegrees_Length_ImplicitCast_1, double K2Node_VariableSet_LTargetDistance_ImplicitCast, float CallFunc_DrawDebugConeInDegrees_AngleWidth_ImplicitCast_1, float CallFunc_DrawDebugConeInDegrees_AngleHeight_ImplicitCast, float CallFunc_DrawDebugConeInDegrees_AngleHeight_ImplicitCast_1, float CallFunc_DrawDebugConeInDegrees_Length_ImplicitCast_2, double K2Node_VariableSet_LYaw_ImplicitCast, double K2Node_VariableSet_LYawRange_ImplicitCast, double K2Node_VariableSet_LPitch_ImplicitCast, double K2Node_VariableSet_LPitchRange_ImplicitCast, double K2Node_VariableSet_LMinDistance_ImplicitCast, double K2Node_VariableSet_LMaxDistance_ImplicitCast);
	void IsTargetInSector(class AActor* Reference, class AActor* TargetActor, double Range, double Angle, class UObject* __WorldContext, bool* InSector, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_DegCos_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_GetDirectionUnitVector_ReturnValue, double CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, float CallFunc_GetDistanceTo_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast);
	void ApplyStateToActor(class AActor* Actor, const struct FGameplayTag& State, class UObject* __WorldContext, bool CallFunc_IsStateActive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void ApplyStatesToActor(class AActor* Actor, TArray<struct FGameplayTag>& States, class UObject* __WorldContext, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FGameplayTag& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetIsValidEnemyStructure(class AActor* StructureActor, class UObject* __WorldContext, bool* IsValidEnemyStructure, class AActor* LStructure, const struct FGameplayTag& Temp_struct_Variable, const struct FGameplayTag& Temp_struct_Variable_1, const struct FGameplayTag& Temp_struct_Variable_2, const struct FGameplayTag& Temp_struct_Variable_3, const struct FGameplayTag& Temp_struct_Variable_4, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue_1, bool CallFunc_ActorHasTag_ReturnValue_2, bool CallFunc_ActorHasTag_ReturnValue_3, bool CallFunc_ActorHasTag_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2);
	void GetIsDayTime(class UObject* WorldContextObject, class UObject* __WorldContext, bool* IsDayTime, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class ANWXGameModeBase* K2Node_DynamicCast_AsNWXGame_Mode_Base, bool K2Node_DynamicCast_bSuccess, class ABP_SimulationStateManager_C* CallFunc_GetManager_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void IsActorPrey(class AActor* TargetActor, class ANWXAICharacter* Creature, class UObject* __WorldContext, bool* IsPrey, class ABP_CreatureBase_C* K2Node_DynamicCast_AsBP_Creature_Base, bool K2Node_DynamicCast_bSuccess, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_HasAnyTags_ReturnValue);
	void IsAnyArrayActorInRadius(TArray<class AActor*>& Actors, class AActor* ReferenceActor, double Radius, class UObject* __WorldContext, bool* HasActorInRange, class AActor** FirstActorInRange, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class AActor* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_GetDistanceTo_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast);
	double GetNormalizedDistanceScore(class AActor* OwnerActor, class AActor* TargetActor, double MinDistance, double MaxDistance, class UObject* __WorldContext, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_VSize_ReturnValue, float CallFunc_ClampAndCurveNormalizedScore_ReturnValue, float CallFunc_ClampAndCurveNormalizedScore_MinScore_ImplicitCast, float CallFunc_ClampAndCurveNormalizedScore_MaxScore_ImplicitCast, double K2Node_FunctionResult_ReturnValue_ImplicitCast, float CallFunc_ClampAndCurveNormalizedScore_Score_ImplicitCast);
	void NormalIzeScore(double Score, double MinScore, double MaxScore, class UObject* __WorldContext, double* NormalScore, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, double CallFunc_SafeDivide_ReturnValue, double CallFunc_FClamp_ReturnValue);
	void GetAIActionCategoryPriority(enum class Enum_AIActionCategory AIActionCategory, class UObject* __WorldContext, int32* Priority, bool K2Node_SwitchEnum_CmpSuccess);
	void GetAIActionCategoryBaseScore(enum class Enum_AIActionCategory AIActionCategory, class UObject* __WorldContext, double* Score, bool K2Node_SwitchEnum_CmpSuccess);
	void GetCreatureCapsuleDefaults(class UClass* CreatureClass, class UObject* __WorldContext, double* HalfHeight, double* Radius, class UClass* K2Node_ClassDynamicCast_AsBP_Creature_Base, bool K2Node_ClassDynamicCast_bSuccess);
	void GetRandomMoveLocationInBoxExtent(class APawn* Pawn, const struct FVector& ScaledBoxExtent, const struct FTransform& BoxTransform, int32 MaxAttempts, class UObject* __WorldContext, bool* Success, struct FVector* Location, int32 Attempts, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_RandomPointInBoundingBox_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_TransformLocation_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_K2_ProjectPointToNavigation_ProjectedLocation, bool CallFunc_K2_ProjectPointToNavigation_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsLocationReachableOnNavMesh_ReturnValue, int32 Temp_int_Variable);
	void CreatureKnockback(const struct FS_CreatureKnockbackData& KnockbackData, TArray<class AActor*>& HitActors, class UObject* __WorldContext, bool bZVelOverride, bool bXYVelOverride, double LaunchElevation, double LaunchSpeed, bool bOverrideElevation, bool bOverrideSpeed, const struct FVector& LaunchVelocity, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, bool CallFunc_Not_PreBool_ReturnValue, double CallFunc_SelectFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class AActor* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class ACharacter* K2Node_DynamicCast_AsCharacter, bool K2Node_DynamicCast_bSuccess, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsLaunchable_bLaunchable, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, double K2Node_VariableSet_LaunchSpeed_ImplicitCast, double K2Node_VariableSet_LaunchElevation_ImplicitCast);
	void IsLaunchable(class AActor* Actor, class UObject* __WorldContext, bool* bLaunchable, class UAbilitySystemComponent* AbilitySystem, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void CalculateRadialKnockbackFalloff(class UCurveFloat* FalloffCurve, const struct FVector& SourceLocation, const struct FVector& TargetLocation, double Radius, double LaunchSpeed, class UObject* __WorldContext, double* RadiusPercentage, double* ScaledSpeed, double CheckedRadius, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_VSize_ReturnValue, double CallFunc_SafeDivide_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, float CallFunc_GetFloatValue_InTime_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	void CreatureRadialKnockback(const struct FS_CreatureRadialKnockbackData& RadialKnockbackData, TArray<class AActor*>& HitActors, class UObject* __WorldContext, double LaunchElevation, double LaunchSpeed, const struct FVector& SourceLocation, double Radius, class UCurveFloat* FalloffCurve, bool ZVelOverride, bool XYVelOverride, double LaunchSpeedFinal, class FName CallFunc_debugVislogAbilitiesCategory_Catgeory, class FName CallFunc_debugVislogAbilitiesCategory_Catgeory_1, class FName CallFunc_debugVislogAbilitiesCategory_Catgeory_2, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ACharacter* K2Node_DynamicCast_AsCharacter, bool K2Node_DynamicCast_bSuccess, double CallFunc_CalculateRadialKnockbackFalloff_RadiusPercentage, double CallFunc_CalculateRadialKnockbackFalloff_ScaledSpeed, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, double CallFunc_DegSin_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const struct FVector& CallFunc_GetDirectionUnitVector_ReturnValue, bool CallFunc_IsLaunchable_bLaunchable, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_DegAsin_ReturnValue, double CallFunc_ClampAngle_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_DegSin_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, double K2Node_VariableSet_LaunchSpeed_ImplicitCast, double K2Node_VariableSet_LaunchElevation_ImplicitCast, double K2Node_VariableSet_Radius_ImplicitCast);
	void GetFootLevelLocation(class ANWXAICharacter* Target, class UObject* __WorldContext, struct FVector* FootLevelLocation, class ABP_CreatureBase_C* K2Node_DynamicCast_AsBP_Creature_Base, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, bool CallFunc_IsValid_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue);
	void UpdateABPNPCValues(class UAnimInstance* AnimInstance, class APawn* PawnOwner, bool& HasEmployer, struct FVector& EmployerLocation, class UObject* __WorldContext, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, TScriptInterface<class IBPI_Employee_C> K2Node_DynamicCast_AsBPI_Employee, bool K2Node_DynamicCast_bSuccess, class AActor* CallFunc_GetEmployer_Employer, bool CallFunc_IsValid_ReturnValue_2);
	void DestroyCreaturesInRange(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Tag, const struct FVector& TargetLocation, double Radius, class UObject* __WorldContext, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void KillCreaturesInRange(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Tag, const struct FVector& TargetLocation, double Radius, class UObject* __WorldContext, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetCreatureManager(class UObject* WorldContextObject, class UObject* __WorldContext, class ANWXCreatureManagerBase** CreatureManager, class ANWXGameModeBase* CallFunc_GetGameMode_GameMode, class ANWXCreatureManagerBase* CallFunc_GetManager_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void UpdateABPHitResponseBlend(double DeltaTime, double BlendTime, double& HitResponseBlend, bool bIsInHitResponse, class UObject* __WorldContext, double BlendTimeInternal, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_SafeDivide_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_FMax_ReturnValue, double CallFunc_FMin_ReturnValue);
	void UpdateABPCreatureValues(class UAnimInstance* AnimInstance, class APawn* PawnOwner, bool& bIsMoving, bool& bIsInAir, bool& bIsMinHealth, bool& bActiveBlendspace, bool& bHasTarget, double& Direction, double& ForwardSpeed, struct FVector& TargetLocation, enum class EAlertnessLevelType& AlertnessLevel, class UObject* __WorldContext, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, class ABP_CreatureBase_C* K2Node_DynamicCast_AsBP_Creature_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, TScriptInterface<class IBPI_Targeter_C> K2Node_DynamicCast_AsBPI_Targeter, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttribute_ReturnValue, class AActor* CallFunc_GetTarget_Target, bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1, float CallFunc_GetFloatAttribute_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_3, const struct FVector& CallFunc_GetVelocity_ReturnValue, class UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue, float CallFunc_CalculateDirection_ReturnValue, bool CallFunc_IsFalling_ReturnValue, double CallFunc_VSize_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double K2Node_VariableGet_Direction_ImplicitCast, TScriptInterface<class IBPI_AnimationStates_C> K2Node_DynamicCast_AsBPI_Animation_States, bool K2Node_DynamicCast_bSuccess_2, enum class EAlertnessLevelType CallFunc_GetAlertnessLevel_AlertnessLevel, double CallFunc_LessEqual_DoubleDouble_B_ImplicitCast, double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast, float K2Node_VariableSetRef_Target_ImplicitCast);
	void GetAllCreatureBaseActorsAndDestroy(class UObject* __WorldContext, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ABP_CreatureBase_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue, class ABP_CreatureBase_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void DamageCreature(class ANWXCreatureManagerBase* Creature_Manager, const struct FGameplayTag& Tag, double Damage_Amount, class UObject* __WorldContext, int32 Temp_int_Array_Index_Variable, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, int32 Temp_int_Loop_Counter_Variable, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void RemoveFromCreaturesFriends(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Tag, class UObject* __WorldContext, int32 Temp_int_Array_Index_Variable, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue_1, class ABP_CreatureBase_C* CallFunc_Array_Get_Item_1, TScriptInterface<class IBPI_CreatureInfo_C> CallFunc_RemoveFromFriends_self_CastInput, bool CallFunc_RemoveFromFriends_bSuccess, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1);
	void AddToCreaturesFriends(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Tag, class UObject* __WorldContext, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, class ABP_CreatureBase_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, TScriptInterface<class IBPI_Targeter_C> CallFunc_ClearTarget_self_CastInput, bool CallFunc_ClearTarget_Success, TScriptInterface<class IBPI_CreatureInfo_C> CallFunc_AddToFriends_self_CastInput, bool CallFunc_AddToFriends_bSuccess, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void DestroyCreatures(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Tag, class UObject* __WorldContext, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void KillCreatures(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Tag, class UObject* __WorldContext, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void SpawnCreatures(class ANWXCreatureManagerBase* CreatureManager, const struct FGameplayTag& Tag, class UObject* __WorldContext, class ABP_CreatureManager_C* K2Node_DynamicCast_AsBP_Creature_Manager, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, TArray<class ABP_CreatureSpawnerBase_C*>& CallFunc_GetSpawnersWithTag_Spawners, class ABP_CreatureSpawnerBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
};

}


