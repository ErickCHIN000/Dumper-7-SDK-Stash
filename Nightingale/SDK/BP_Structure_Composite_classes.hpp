#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0xBA (0x6A2 - 0x5E8)
// BlueprintGeneratedClass BP_Structure_Composite.BP_Structure_Composite_C
class ABP_Structure_Composite_C : public ABP_StructureComposite_Base_C
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x5E8(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_Structure_Audio_Component_C*       BP_Structure_Audio_Component;                      // 0x5F0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_StagedConstructionComponent_C*     StagedConstructionComponent;                       // 0x5F8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_StructureSupportComponent_C*       StructureSupportComponent;                         // 0x600(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SnapComponent_C*                   SnapComponent;                                     // 0x608(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerVisibilityComponent_C*       PlayerVisibilityComponent;                         // 0x610(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_FloatyTextComponent_C*             BP_FloatyTextComponent;                            // 0x618(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTicketGiverComponent_Simple*          TicketGiverComponent_Simple;                       // 0x620(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractableComponent_C*           InteractableComponent;                             // 0x628(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionStimuliSourceComponent*   AIPerceptionStimuliSource;                         // 0x630(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                       SystemComponents;                                  // 0x638(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnStructureStateChanged;                           // 0x640(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnCompositePiecesUpdated;                          // 0x650(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                       PlacementZHeight;                                  // 0x660(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnStructureCompleted;                              // 0x668(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         Client_IsVisible;                                  // 0x678(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_8566[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                StateObjectClass;                                  // 0x680(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                DefaultPlacerObject;                               // 0x688(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>          PieceMeshes;                                       // 0x690(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                         IsPrefabBuilding;                                  // 0x6A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bHasRequestedDestroy;                              // 0x6A1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class ABP_Structure_Composite_C* GetDefaultObj();

	class USphereComponent* GetAreaOfEffect();
	class UActorComponent* GetAudioComponent();
	void GetBuildRadiusInformation(float* OutRadius, struct FVector* OutOrigin, double CallFunc_CalculateStructureRadius_Radius, const struct FVector& CallFunc_CalculateStructureOrigin_StructureOrigin, float K2Node_FunctionResult_OutRadius_ImplicitCast);
	class FText GetDisplayNameText();
	class FString GetStructureID(const class FString& CallFunc_GetUniqueIdentifier_ReturnValue);
	TArray<class UStructureInteraction_PostConstructionInteraction_DataAsset*> GetStructureInteractions();
	TArray<struct FStructureResourceRequirements> GetTotalResourceRequirements(const TArray<struct FStructureResourceRequirements>& CombinedRequirements, TArray<struct FStructureResourceRequirements>& CallFunc_GetTotalResourceRequirementsForCurrentState_TotalRequirements);
	bool StructureHasAddedResources(int32 Temp_int_Variable, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_StructureHasAddedResources_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetBounds(struct FVector* Bounds, const struct FVector& CallFunc_GetFoundationBounds_Bounds);
	void GetOrigin(struct FVector* RelativeLocation, struct FVector* WorldLocation);
	void GetMinAndMaxExtents(struct FVector* RelativeMinExtent, struct FVector* RelativeMaxExtent, struct FVector* WorldMinExtent, struct FVector* WorldMaxExtent);
	void GetWorldTransform(struct FTransform* WorldTransform);
	void GetEventsObject(class UStructureEventsObject** EventObject, class UStructureEventsObject* CallFunc_GetStructureEventsObject_ReturnValue);
	void GetSimulationStateManager(class ANWXSimStateManagerBase** Simulation_State_Manager);
	void ResolveSimulationRound(bool* bSuccess);
	void GetFacingTarget(class UObject* QueryingActor, class AActor** FacingTarget, const TArray<class UBP_StructureCompositePiece_C*>& LCompositePieces, TArray<class UBP_StructureCompositePiece_C*>& CallFunc_GetOwnedPiecesOfType_MatchingPieces, TArray<class UObject*>& CallFunc_SortObjectsByDistanceToTarget_ReturnValue);
	void GetRangedAttackLocation(class UObject* QueryingActor, enum class Enum_AttackLocationType AttackLocationType, struct FVector* Location, class UObject* LQueryActor, const TArray<class UBP_StructureCompositePiece_C*>& LCompositePieces, TArray<class UBP_StructureCompositePiece_C*>& CallFunc_GetAllPieces_MatchingPieces, bool K2Node_SwitchEnum_CmpSuccess, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue_1, int32 CallFunc_GetPieceCount_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, TScriptInterface<class IBPI_StructureAIInterfaces_C> K2Node_DynamicCast_AsBPI_Structure_AIInterfaces, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_GetRangedAttackLocation_Location, const struct FVector& CallFunc_GetRangedAttackLocation_Location_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, TArray<class UObject*>& CallFunc_SortObjectsByDistanceToTarget_ReturnValue, class UObject* CallFunc_Array_Get_Item, TArray<class UObject*>& CallFunc_SortObjectsByDistanceToTarget_ReturnValue_1, TScriptInterface<class IBPI_StructureAIInterfaces_C> K2Node_DynamicCast_AsBPI_Structure_AIInterfaces_1, bool K2Node_DynamicCast_bSuccess_1, class UObject* CallFunc_Array_Get_Item_1, const struct FVector& CallFunc_GetRangedAttackLocation_Location_2, const struct FTransform& CallFunc_GetObjectTransform_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, TScriptInterface<class IBPI_StructureAIInterfaces_C> K2Node_DynamicCast_AsBPI_Structure_AIInterfaces_2, bool K2Node_DynamicCast_bSuccess_2, const struct FVector& CallFunc_GetRangedAttackLocation_Location_3, const struct FTransform& CallFunc_GetObjectTransform_ReturnValue_1, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, int32 CallFunc_Array_Length_ReturnValue, TArray<class UBP_StructureCompositePiece_C*>& CallFunc_GetOwnedPiecesOfType_MatchingPieces, bool CallFunc_Greater_IntInt_ReturnValue_1);
	void CompleteCompletableStructure(class ANWXAICharacter* AICharacter, bool* Complete, class ANWXAICharacter* LNWXAICharacter, int32 Temp_int_Array_Index_Variable, bool CallFunc_HasAuthority_ReturnValue, TArray<struct FStructureResourceRequirements>& CallFunc_GetTotalResourceRequirements_ReturnValue, const struct FStructureResourceRequirements& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_GetQuantityRemaining_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GetIsStructureComplete_ReturnValue, enum class EStructureState CallFunc_SetStructureSchematicState_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, bool CallFunc_HasTag_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsServer_ReturnValue);
	void GetReachableNavTransform(class APawn* Pawn, bool* Success, struct FTransform* ReachableNavTransform, class UObject** Structure, const struct FTransform& PieceTransform, const TArray<class UBP_StructureCompositePiece_C*>& Foundations, class UBP_StructureCompositePiece_C* ClosestStructure, bool FoundNavLocation, const struct FVector& LCurrentPieceLocationTransformLocation, const struct FVector& CurrentNavLocation, const struct FVector& ClosestSnapLocation, const struct FVector& ClosestNavLocation, double ClosestDistance, class UBP_StructureCompositePiece_C* CompositePiece, class APawn* LPawn, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, TScriptInterface<class IStructureSnappableInterface> CallFunc_GetSnapPoints_self_CastInput, TArray<struct FGridPoint>& CallFunc_GetSnapPoints_SnapPoints, const struct FGridPoint& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsGridPointOccupied_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class AActor*>& Temp_object_Variable, TScriptInterface<class IStructureWorldInterface> CallFunc_GetStructureWorldTransform_self_CastInput, const struct FTransform& CallFunc_GetStructureWorldTransform_ReturnValue, bool CallFunc_IsLocationReachableOnNavMesh_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, double CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, bool CallFunc_IsLocationReachableOnNavMesh_ReturnValue_1, const struct FTransform& CallFunc_ComposeTransforms_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location_2, const struct FRotator& CallFunc_BreakTransform_Rotation_2, const struct FVector& CallFunc_BreakTransform_Scale_2, class UBP_StructureCompositePiece_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_Vector_Distance_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_2, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, TArray<class UBP_StructureCompositePiece_C*>& CallFunc_GetOwnedPiecesOfType_MatchingPieces, bool CallFunc_BooleanOR_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void GetFuelComponent(class UBP_StructureFuelComponent_C** FuelComponent);
	void GetInventoryContainerInterface(class AActor* RequestingActor, TScriptInterface<class IItemContainer>* ContainerInterface);
	void CanQueryInteractable(bool* Can_Query);
	void HoldInteractionAvailable(bool* bAvailable);
	void IsInteractionDisabled(class AController* Controller, const struct FInteractionData& InteractionData, bool* bIsDisabled, class FString* DisabledText);
	void DoesHaveResourceType(int32 HitId, enum class EResourceType DesiredResourceType, bool* bHasResourceType);
	void IsHarvestable(const struct FInteractionData& Interaction, bool* IsHarvestable);
	void GetInteractIcon(const struct FInteractionData& InteractionData, TSoftObjectPtr<class UTexture2D>* Icon);
	void GetInteractText(const struct FInteractionData& InteractionData, class FString* InteractText, class UObject* LPieceObject, const TArray<struct FStructureResourceRequirements>& RemainingRequirements, class UObject* CallFunc_GetInteractableObjectFromInteractionData_ReturnValue, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue, class ANWXPlayerController* CallFunc_GetLocalPlayerController_LocalPlayerController, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_CanInteractWithStructure_CanInteract, class FText CallFunc_CanInteractWithStructure_InteractionMessage, const class FString& CallFunc_Conv_TextToString_ReturnValue);
	void InteractionRequiresClientOnly(class AController* Controller, bool* RequiresClientAction);
	void InteractReleased(bool* Success);
	void InteractPressed(bool* Success);
	void CanInteractWithActor(class AController* Controller, const struct FInteractionData& InteractionData, bool* InteractAvailable, class UObject* LPieceObject, class UTexture2D* BuildHammerIcon, const class FString& CallFunc_GetFunctionName_ReturnValue, class UObject* CallFunc_GetInteractableObjectFromInteractionData_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_CanInteractWithStructure_CanInteract, class FText CallFunc_CanInteractWithStructure_InteractionMessage, bool CallFunc_GetEnabled_Enabled);
	void ReturnMeshToHighlight(const struct FInteractionData& InteractionData, TArray<class UStaticMeshComponent*>* StaticMesh_to_Highlight, TArray<class USkeletalMeshComponent*>* SkeletalMesh_to_Highlight, bool* Hostile_, enum class EItemQuality* Quality, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class UBP_StructureCompositePiece_C*>& CallFunc_GetOwnedPiecesOfType_MatchingPieces, class UBP_StructureCompositePiece_C* CallFunc_Array_Get_Item, TScriptInterface<class IBPI_Interactable_C> CallFunc_ReturnMeshToHighlight_self_CastInput, TArray<class UStaticMeshComponent*>& CallFunc_ReturnMeshToHighlight_StaticMesh_to_Highlight, TArray<class USkeletalMeshComponent*>& CallFunc_ReturnMeshToHighlight_SkeletalMesh_to_Highlight, bool CallFunc_ReturnMeshToHighlight_Hostile_, enum class EItemQuality CallFunc_ReturnMeshToHighlight_Quality, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void GetLowestPieces(TArray<class UStructureCompositePiece*>* Pieces, class UStructureCompositeComponent* CompositeComponent, TArray<class UStructureCompositePiece*>& CallFunc_GetLowestPieces_OutPieces, bool CallFunc_IsValid_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue);
	void ExecuteDestroyStructure(class AActor* DestructionSource, bool* Success, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void ExecuteDeconstructStructure(enum class EDeconstructionResourceReturn ResourceReturn, class AActor* DeconstructionSource, bool* Success, bool CallFunc_HasAuthority_ReturnValue);
	void AddPiecesToConstructionBuckets(const TArray<class UObject*>& CurrentPieces, TSet<class UObject*> ProcessedPieces, TSet<class UObject*> NextPieces, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_HasAuthority_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, TArray<class UStructureCompositePiece*>& CallFunc_GetLowestPieces_Pieces, bool CallFunc_Set_IsNotEmpty_ReturnValue, class UObject* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TArray<class UObject*>& CallFunc_GetAllPieceConnections_AdjacentObjects, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Set_Contains_ReturnValue, TSet<class UObject*> CallFunc_Set_Difference_Result, TArray<class UObject*>& CallFunc_Set_ToArray_Result, TArray<class UBP_StructureCompositePiece_C*>& CallFunc_GetGroundLevelPieces_GroundPieces, bool CallFunc_Array_IsEmpty_ReturnValue);
	bool GetInteractionTag(struct FGameplayTag* InteractionTag, const struct FGameplayTag& LocalInteractionTag);
	bool SetPlacementFeedback(struct FGameplayAbilityTargetDataHandle& PlacementTargetData, class AController* Controller, struct FStructurePlacementFeedback* FeedbackData, class UStructurePlacerObject* PlacerObject, class UStructurePlacerObject* CallFunc_GetStructurePlacerObject_ReturnValue, const struct FStructurePlacementFeedback& CallFunc_SetPlacementFeedback_ReturnValue);
	bool InitializePlacementState(class APawn* PlacingCharacter, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_InitializeOwningPlayer_Success, bool CallFunc_IsValid_ReturnValue, enum class EStructureState CallFunc_SetStructureSchematicState_ReturnValue);
	void IsValidPlacement(class AController* Controller, struct FGameplayAbilityTargetDataHandle& TargetData, struct FStructurePlacementFeedback* PlacementFeedbackData, class UStructurePlacerObject* CallFunc_GetStructurePlacerObject_ReturnValue, const struct FStructurePlacementFeedback& CallFunc_IsValidPlacement_ReturnValue);
	void GetPlacementTransform(class ACharacter* Character, float OptionalDeltaRotationZ, float OptionalDeltaHeightZ, struct FGameplayAbilityTargetDataHandle* TargetData, class UStructurePlacerObject* CallFunc_GetStructurePlacerObject_ReturnValue, const struct FGameplayAbilityTargetDataHandle& CallFunc_GetPlacementTransform_ReturnValue);
	bool FinalizePlacement(class AController* Controller, struct FSnapPlacementTargetData& SnapData, class FString* Message, const TArray<class UObject*>& AllPieces, class AActor* Local_Pylon, class AController* LController, bool InvalidZoneFound, class UStructurePlacerObject* CallFunc_GetStructurePlacerObject_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_FinalizePlacement_ReturnValue);
	class UObject* GetSupportInterfaceObject();
	void GetPieceIdsInConstructionOrder(TArray<int32>* PieceIds, TArray<int32>& CallFunc_GetPieceIdsInConstructionOrder_OutPieceIds);
	void OnPiecesUpdatedFromPersistence(bool CallFunc_HasAuthority_ReturnValue, class UStructureStateObject* CallFunc_GetStateObject_ReturnValue, int32 Temp_int_Variable, bool CallFunc_CheckStateTransition_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void CanStructureReceiveResources(bool* bSuccess, class UStructureStateObject* CallFunc_GetStateObject_ReturnValue, bool CallFunc_CanAddResourcesInCurrentState_ReturnValue);
	class UStructureSupportComponent* GetSupportComponent();
	class UStructurePlacerObject* GetStructurePlacerObject(class UBP_StructurePlacerObject_C* CallFunc_GetDefaultObject_ReturnValue);
	class UStructureDamageObject* GetStructureDamageObject();
	void AddPieceToStructure(struct FCompositePieceGameplay& CompositePieceData, class UStructureCompositePiece** Piece, bool LNewPieceCompleted, class UStructureCompositePiece* NewPiece, class UStructureCompositePiece* CallFunc_Internal_AddNewPiece_NewPiece1, bool CallFunc_Not_PreBool_ReturnValue, TScriptInterface<class IStructureStateInterface> K2Node_DynamicCast_AsStructure_State_Interface, bool K2Node_DynamicCast_bSuccess, enum class EStructureState CallFunc_SetStructureSchematicState_ReturnValue, enum class EStructureState CallFunc_GetSchematicState_ReturnValue, enum class EStructureState CallFunc_GetSchematicState_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsServer_ReturnValue);
	void UpdateOptionalMeshes(int32 Temp_int_Variable, int32 CallFunc_GetPieceCount_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const struct FCompositePieceGameplay& CallFunc_GetPieceData_OutPieceData, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void PostPersistenceUpdatePieces(int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, TScriptInterface<class IStructureStateInterface> K2Node_DynamicCast_AsStructure_State_Interface, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_IntInt_ReturnValue, class UStructureStateObject* CallFunc_GetStateObject_ReturnValue, bool CallFunc_CheckStateTransition_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UStructureSupportObject* CallFunc_GetSupportObjectForPiece_ReturnValue, TScriptInterface<class ISupportInterface> CallFunc_OnOwnerInitialized_self_CastInput);
	struct FTransform GetInteractableTransform(struct FInteractionData& InteractionData, class UObject* InteractionPiece, class UObject* CallFunc_GetInteractable_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess, const struct FTransform& CallFunc_GetMeshTransform_WorldTransform, bool CallFunc_DoesImplementInterface_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue_1, bool CallFunc_IsValid_ReturnValue);
	void GetGroundPieceRatio(TArray<class UBP_StructureCompositePiece_C*>& Pieces, double* Ratio, TSet<class UBP_StructureCompositePiece_C*> InputPieces, TSet<class UBP_StructureCompositePiece_C*> GroundPieces, TArray<class UBP_StructureCompositePiece_C*>& CallFunc_GetGroundLevelPieces_GroundPieces, int32 CallFunc_Set_Length_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, TSet<class UBP_StructureCompositePiece_C*> CallFunc_Set_Intersection_Result, int32 CallFunc_Set_Length_ReturnValue_1, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue);
	void ConvertResourceDataToStrings(TArray<struct FStructureResourceRequirements>& Resources, bool UseRemainingQuanity, TArray<class FString>* ResourceStrings, const TArray<class FString>& RequirementStrings, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FStructureResourceRequirements& CallFunc_Array_Get_Item, int32 CallFunc_GetQuantityRemaining_ReturnValue, int32 CallFunc_GetQuantityRequired_ReturnValue, const struct FItemConstraintPresentationData& CallFunc_GetPresentationData_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue);
	void GetPieceDebugData(int32 PieceIndex, class FString* PieceName, class FString* PieceStatus, TArray<class FString>* ResourceRequirements, float* Health, double L_PieceHealth, class UStructureCompositePiece* Piece, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IStructureHealthInterface> CallFunc_GetCurrentHealth_self_CastInput, float CallFunc_GetCurrentHealth_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, TScriptInterface<class IStructureResourceManagerOwnerInterface> K2Node_DynamicCast_AsStructure_Resource_Manager_Owner_Interface, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IStructureStateInterface> K2Node_DynamicCast_AsStructure_State_Interface, bool K2Node_DynamicCast_bSuccess_1, TScriptInterface<class IStructureResourceRequirementsInterface> CallFunc_GetResourceRequirementsForCurrentState_ReturnValue, enum class EStructureState CallFunc_GetSchematicState_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, TArray<struct FStructureResourceRequirements>& CallFunc_GetTotalResourceRequirements_TotalResourceRequirements, TArray<class FString>& CallFunc_ConvertResourceDataToStrings_ResourceStrings, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, float K2Node_FunctionResult_Health_ImplicitCast, double K2Node_VariableSet_L_PieceHealth_ImplicitCast);
	void GetStructureDebugData(class FString* StructureName, class FString* StructureStatus, TArray<class FString>* ResourceRequirements, float* Health, const TArray<class FString>& RequirementStrings, float CallFunc_GetCurrentHealth_ReturnValue, enum class EStructureState CallFunc_GetSchematicState_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, TArray<struct FStructureResourceRequirements>& CallFunc_GetCombinedResourceRequirements_CombinedRequirements, TArray<class FString>& CallFunc_ConvertResourceDataToStrings_ResourceStrings);
	void GetCombinedResourceRequirements(TArray<struct FStructureResourceRequirements>* CombinedRequirements, const TArray<struct FStructureResourceRequirements>& Requirements, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, TScriptInterface<class IStructureResourceManagerOwnerInterface> K2Node_DynamicCast_AsStructure_Resource_Manager_Owner_Interface, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_IntInt_ReturnValue, TScriptInterface<class IStructureResourceRequirementsInterface> CallFunc_GetResourceRequirementsForCurrentState_ReturnValue, TArray<struct FStructureResourceRequirements>& CallFunc_GetTotalResourceRequirements_TotalResourceRequirements, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void DestroyAllPieces(bool ExecuteDeconstruct, class AActor* DestructionSource, enum class EDeconstructionResourceReturn ResourceReturn, int32 Temp_int_Variable, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, TScriptInterface<class IStructureDestroyableInterface> K2Node_DynamicCast_AsStructure_Destroyable_Interface, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_ExecuteDestroyStructure_Success, TScriptInterface<class IStructureDestroyableInterface> K2Node_DynamicCast_AsStructure_Destroyable_Interface_1, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ExecuteDeconstructStructure_Success, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetGroundLevelPieces(TArray<class UBP_StructureCompositePiece_C*>* GroundPieces, const TArray<class UBP_StructureCompositePiece_C*>& LGroundPieces, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsObjectAtGroundLevel_ReturnValue);
	void GetAllPieces(TArray<class UBP_StructureCompositePiece_C*>* MatchingPieces, const TArray<struct FVector>& Locations, const TArray<class UObject*>& AllPieces, const TArray<class UBP_StructureCompositePiece_C*>& L_MatchingPieces, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void GetIsVisible(bool* Client_IsVisible, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsServer_ReturnValue);
	void GetAllPieceConnections(class UObject* CentralPiece, TArray<class UObject*>* AdjacentObjects, const TArray<class UObject*>& AdjacentActors, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface, bool K2Node_DynamicCast_bSuccess, class UCompositePieceSnapObject* CallFunc_GetSnapComponent_SnapObject, bool CallFunc_IsValid_ReturnValue, TArray<class UObject*>& CallFunc_GetAllConnectedStructures_ConnectedStructures);
	class UStructureSupportObject* GetSupportObjectForPiece(class UBP_StructureCompositePiece_C* Piece, const struct FCompositePieceGameplay& CallFunc_GetPieceData_OutPieceData, class UStructureSupportObject* CallFunc_GetSupportObjectForPiece_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Internal_AddNewPiece(struct FCompositePieceGameplay& InputPin, class UStructureCompositePiece** NewPiece1, class UStructureCompositePiece* NewPiece, const struct FCompositePieceGameplay& CallFunc_GetPieceData_OutPieceData, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, bool CallFunc_AddPieceHealthToOwningStructure_ReturnValue, class UStructureSupportObject* CallFunc_GetSupportObjectForPiece_ReturnValue, TScriptInterface<class ISupportInterface> CallFunc_OnOwnerInitialized_self_CastInput, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, TScriptInterface<class IBPI_StructureComponentOwner_C> K2Node_DynamicCast_AsBPI_Structure_Component_Owner, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_AddPiece_ReturnValue, class UStructureEventsObject* CallFunc_GetEventsObject_EventObject, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void GetSnapObjectForPiece(class UBP_StructureCompositePiece_C* Piece, class UCompositePieceSnapObject** ResourcesManager, bool CallFunc_IsValid_ReturnValue, const struct FCompositePieceGameplay& CallFunc_GetPieceData_OutPieceData, class UCompositePieceSnapObject* CallFunc_GetPieceSnapObject_ReturnValue);
	class UStructureGridComponent* GetSnapComponent();
	void OnCompositePiecesChanged(const TArray<class UObject*>& AllPieces);
	void GetFoundationBounds(struct FVector* Bounds, const struct FVector& StructureOrigin, const struct FVector& CurrentMax, const TArray<class UBP_StructureCompositePiece_C*>& AllFoundations, int32 Temp_int_Array_Index_Variable, class UBP_StructureCompositePiece_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TScriptInterface<class IStructureMeshInfoInterface> CallFunc_GetMeshMinAndMax_self_CastInput, const struct FVector& CallFunc_GetMeshMinAndMax_MinLocal, const struct FVector& CallFunc_GetMeshMinAndMax_MaxLocal, const struct FVector& CallFunc_GetMeshMinAndMax_MinWorld, const struct FVector& CallFunc_GetMeshMinAndMax_MaxWorld, bool CallFunc_IsValid_ReturnValue, TArray<class UBP_StructureCompositePiece_C*>& CallFunc_GetOwnedPiecesOfType_MatchingPieces, TArray<struct FVector>& K2Node_MakeArray_Array, const struct FVector& CallFunc_GetMaxDistancePointFromOrigin_MaxPoint, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_CalculateStructureOrigin_StructureOrigin);
	void OnNewPieceCompleted(class UObject* Structure);
	void Client_OnPlacementState(const TArray<class UObject*>& AllPieces, bool CallFunc_IsServer_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, int32 Temp_int_Variable, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, TScriptInterface<class IStructureStateInterface> K2Node_DynamicCast_AsStructure_State_Interface, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_IntInt_ReturnValue, enum class EStructureState CallFunc_SetStructureSchematicState_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void IsPlacementRequirementsMet(class UObject* CompositePiece, class AController*& PlayerController, bool* IsValid, class FText* Message);
	void CalculateStructureOrigin(struct FVector* StructureOrigin, const TArray<class UObject*>& AllPieces, class UObject* CurrentCompositePiece, int32 FoundationCount, const struct FVector& OriginSum, int32 Temp_int_Variable, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, enum class ESnapType CallFunc_GetSnapType_SnapPointType, bool CallFunc_EqualEqual_ByteByte_ReturnValue, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess_1, const struct FVector& CallFunc_GetMeshOrigin_LocalLocation, const struct FVector& CallFunc_GetMeshOrigin_WorldLocation, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 Temp_int_Variable_1, const struct FVector& CallFunc_Divide_VectorInt_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void CalculateStructureRadius(double* Radius, const TArray<class UObject*>& AllPieces, const struct FVector& StructureOrigin, const struct FVector& CurrentMax, int32 Temp_int_Variable, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_IntInt_ReturnValue, const struct FVector& CallFunc_GetMeshMinAndMax_MinLocal, const struct FVector& CallFunc_GetMeshMinAndMax_MaxLocal, const struct FVector& CallFunc_GetMeshMinAndMax_MinWorld, const struct FVector& CallFunc_GetMeshMinAndMax_MaxWorld, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FVector>& K2Node_MakeArray_Array, const struct FVector& CallFunc_GetMaxDistancePointFromOrigin_MaxPoint, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_VSizeXY_ReturnValue, const struct FVector& CallFunc_CalculateStructureOrigin_StructureOrigin, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	void InitializeCompositeState(enum class EStructureState CurrentState, const TArray<class UObject*>& AllPieces, bool CallFunc_IsServer_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, enum class EStructureState CallFunc_GetSchematicState_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, TScriptInterface<class IStructureStateInterface> K2Node_DynamicCast_AsStructure_State_Interface, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_IntInt_ReturnValue, enum class EStructureState CallFunc_SetStructureSchematicState_ReturnValue, TScriptInterface<class IStructureStateInterface> K2Node_DynamicCast_AsStructure_State_Interface_1, bool K2Node_DynamicCast_bSuccess_2, enum class EStructureState CallFunc_GetSchematicState_ReturnValue_1);
	void RefreshCompositeState(enum class EStructureState CallFunc_GetSchematicState_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	bool IsComplete(bool CallFunc_HasAllRequiredResources_ReturnValue, enum class EStructureState CallFunc_GetSchematicState_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void GetOwnedPiecesOfType(enum class ESnapType PieceType, TArray<class UBP_StructureCompositePiece_C*>* MatchingPieces, const TArray<class UObject*>& AllPieces, const TArray<class UBP_StructureCompositePiece_C*>& L_MatchingPieces, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Subtract_IntInt_ReturnValue, enum class ESnapType CallFunc_GetSnapType_SnapPointType, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void InitializeOwningPlayer(class AController* Controller, bool* Success, const TArray<class UObject*>& AllPieces, bool CallFunc_SetOwningPlayerInfo_ReturnValue);
	void RemoveDestroyedPiece(class UObject* Object, class AActor* DeconstructionSource, const struct FStructureDestructionData& LDestructionData, const TArray<class UObject*>& PieceConnections, class UBP_StructureCompositePiece_C* DestroyedPiece, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, const struct FStructureDestructionData& CallFunc_MakeStructureDestructionData_DestructionData, TScriptInterface<class IStructureStateInterface> K2Node_DynamicCast_AsStructure_State_Interface, bool K2Node_DynamicCast_bSuccess_1, enum class EStructureState CallFunc_GetSchematicState_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsServer_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue_1, const struct FCompositePieceGameplay& CallFunc_GetPieceData_OutPieceData);
	void CallHealthChangedEvent(const struct FStructureHealthChangedContext& HealthChangedContext);
	void PerformClientSideInteraction(class AController* Controller);
	void ReceiveBeginPlay();
	void BroadcastOnCompositePiecesUpdated();
	void Multicast_CallClientOnHealthChangedEvent(struct FStructureHealthChangedContext& HealthChangedContext, int32 PieceId);
	void DelayedDestroy();
	void OnClientReadyInitializeClientState();
	void Multicast_PlayDestructionEffects(const struct FStructureDestructionData& StructureDestructionData);
	void OnPersistentDataRestored();
	void ClientOnResourcesUpdated(struct FStructureAddResourcesContext& AddResourcesContext);
	void ExecuteUbergraph_BP_Structure_Composite(int32 EntryPoint, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue_2, const struct FStructureHealthChangedContext& K2Node_Event_HealthChangedContext, class AController* K2Node_Event_Controller, const struct FStructureHealthChangedContext& K2Node_CustomEvent_HealthChangedContext, int32 K2Node_CustomEvent_PieceID, bool CallFunc_AreAutomatedTestsRunning_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class ABP_GameState_C* K2Node_DynamicCast_AsBP_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsReady_Ready, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue_3, bool CallFunc_IsServer_ReturnValue_2, const struct FStructureDestructionData& K2Node_CustomEvent_StructureDestructionData, bool CallFunc_HasAuthority_ReturnValue_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, class UStructureEventsObject* CallFunc_GetEventsObject_EventObject, int32 CallFunc_GetPieceCount_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, int32 CallFunc_Subtract_IntInt_ReturnValue, const struct FStructureAddResourcesContext& K2Node_CustomEvent_AddResourcesContext, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, int32 Temp_int_Variable, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePieceById_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class IStructureEventInterface> K2Node_DynamicCast_AsStructure_Event_Interface, bool K2Node_DynamicCast_bSuccess_2, class UStructureEventsObject* CallFunc_GetStructureEventsObject_ReturnValue);
	void OnStructureCompleted__DelegateSignature(class AActor* Actor);
	void OnCompositePiecesUpdated__DelegateSignature();
	void OnStructureStateChanged__DelegateSignature(enum class EStructureState StructureState);
};

}


