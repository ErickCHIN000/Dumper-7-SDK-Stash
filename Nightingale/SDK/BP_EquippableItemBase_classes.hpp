#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x398 (0x9C8 - 0x630)
// BlueprintGeneratedClass BP_EquippableItemBase.BP_EquippableItemBase_C
class ABP_EquippableItemBase_C : public AEquippableItem
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x630(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UStatusEffectFXManagerComponent*       StatusEffectFXManager;                             // 0x638(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_EquippableItemAudioComponent_C*    BP_EquippableItemAudioComponent;                   // 0x640(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AsyncAssetLoader_C*                AsyncAssetLoader;                                  // 0x648(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                SkeletalMeshRoot;                                  // 0x650(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemUsage_C*                       ItemUsage;                                         // 0x658(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnAddedToQuickbar;                                 // 0x660(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USkeletalMeshComponent*                PawnMesh1P;                                        // 0x670(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                PawnMesh3P;                                        // 0x678(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	enum class E_PhysicalStrikeType              PhysicalStrikeType;                                // 0x680(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_54F0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       SwayPitchAmount;                                   // 0x688(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       SwayYawAmount;                                     // 0x690(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       SwayBounciness;                                    // 0x698(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bEquipped;                                         // 0x6A0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_54FC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          EquippedTag;                                       // 0x6A4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	enum class EItemType                         ItemType;                                          // 0x6AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5506[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FS_TechniqueGrantedAbilities>  GrantedTechniqueAbilities;                         // 0x6B0(0x10)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<struct FS_InputTechnique_Pair>        OverridenTechniques;                               // 0x6C0(0x10)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	FMulticastInlineDelegateProperty_            OnEquipped;                                        // 0x6D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnAsyncDataInitiailized;                           // 0x6E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         bIsAsyncDataInitialized;                           // 0x6F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5514[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTechniquesUpdated;                               // 0x6F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<enum class EInputActionTypes, struct FS_CachedEffectQueries> CachedCooldownEffectQueries;                       // 0x708(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_MeleeComponent_C*                  MeleeComponent;                                    // 0x758(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                       CachedAssets;                                      // 0x760(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         AttemptedFinishLoadout;                            // 0x770(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_551F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMesh*                         ItemMesh3P;                                        // 0x778(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnDurabilityUpdated;                               // 0x780(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         HasTriggeredAudioDurabilityBelowThreshold;         // 0x790(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5527[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDurabilityNearBreaking;                          // 0x798(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnDurabilityDepleted;                              // 0x7A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FItemInstanceDurabilityData           CachedDurabilityData;                              // 0x7B8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                         HasTriggeredDurabilityDepleteAudio;                // 0x7C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ItemCurrentlyDisabled;                             // 0x7C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_552C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnFuelUpdated;                                     // 0x7D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnUnequipped;                                      // 0x7E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnPredictedDurabilityUpdated;                      // 0x7F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UMaterialInstanceDynamic*>      ProximityFadedWeaponMaterials;                     // 0x800(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<enum class EMetalRegions, double>       Metal_Overrides;                                   // 0x810(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<enum class ECostumeRegions, struct FResourceCustomizationData> MaterialOverridesUnloaded;                         // 0x860(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<enum class ECostumeRegions, struct FResourceCustomizationData_Loaded> MaterialOverridenLoaded;                           // 0x8B0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         IsRangedWeapon;                                    // 0x900(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5538[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABP_LightweightAttachedItem_C*         FullbodyLightweight;                               // 0x908(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FItemInstanceFuelData                 CachedFuelData;                                    // 0x910(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	enum class EInputActionTypes                 SpellSlot;                                         // 0x920(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5542[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          LightIntensityTimerHandle;                         // 0x928(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          LightDurabilityTimerHandle;                        // 0x930(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                LightComponentClass;                               // 0x938(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       LightDurabilityPeriod;                             // 0x940(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       LightIntensityPeriod;                              // 0x948(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemLightComponent*                   ItemLightComponent;                                // 0x950(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemLightComponent*                   LightweightLightComponent;                         // 0x958(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_TimeOfDayManager_C*                TimeOfDayManager;                                  // 0x960(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>   AppliedEffectHandles;                              // 0x968(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<enum class EGemRegions, double>         GemOverrides;                                      // 0x978(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class ABP_EquippableItemBase_C* GetDefaultObj();

	void UpdateDurabilityShaderParameters(const TArray<class UMaterialInterface*>& CurrentMaterials, class USkeletalMeshComponent* CurrentMesh, class UMaterialInstanceDynamic* CurrentMID, double Tarnish, double Wear, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue, class UMaterialInterface* CallFunc_Array_Get_Item, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue_1, class UMaterialInstanceDynamic* K2Node_DynamicCast_AsMaterial_Instance_Dynamic, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, class UMaterialInterface* CallFunc_Array_Get_Item_1, bool CallFunc_IsValid_ReturnValue_1, class UMaterialInstanceDynamic* K2Node_DynamicCast_AsMaterial_Instance_Dynamic_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_1, class USkeletalMeshComponent* CallFunc_GetRootMesh_ReturnValue, class ABP_LightweightAttachedItem_C* K2Node_DynamicCast_AsBP_Lightweight_Attached_Item, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue_4, double CallFunc_CalculateDurabilityShaderValues_WearValue, double CallFunc_CalculateDurabilityShaderValues_TarnishValue, float CallFunc_SetScalarParameterValue_Value_ImplicitCast, float CallFunc_SetScalarParameterValue_Value_ImplicitCast_1, float CallFunc_SetScalarParameterValue_Value_ImplicitCast_2, float CallFunc_SetScalarParameterValue_Value_ImplicitCast_3);
	void OnInvisibleStateChanged();
	void ForceBreakItem(bool CallFunc_GetDurability_HasDurability, const struct FItemInstanceDurabilityData& CallFunc_GetDurability_DurabilityData, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	void OnLightweightLightsSpawned(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class ABP_LightweightAttachedItem_C* K2Node_DynamicCast_AsBP_Lightweight_Attached_Item, bool K2Node_DynamicCast_bSuccess);
	void ShouldLightNeverCastShadows(bool* bShouldNeverCastShadows, class UGameUserSettings* CallFunc_GetGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_GetShadowQuality_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	struct FGameplayTag GetEquippedTag();
	bool IsEquipped();
	void RemoveAllEffects(class AActor* Target, class UAbilitySystemComponent* ActorASC, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UAbilitySystemComponent* CallFunc_GetComponentByClass_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_RemoveActiveGameplayEffect_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_2);
	void Apply_Effect_Spec(const struct FGameplayEffectSpecHandle& EffectSpec, class UAbilitySystemComponent* OwnerASC, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void SetTimeOfDayManager(class AActor* ManagerActor, class UTimeOfDaySubsystem* CallFunc_GetWorldSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue, class ABP_TimeOfDayManager_C* K2Node_DynamicCast_AsBP_Time_Of_Day_Manager, bool K2Node_DynamicCast_bSuccess, class UTimeOfDaySubsystem* CallFunc_GetWorldSubsystem_ReturnValue_1, class AActor* CallFunc_GetTimeOfDayManagerFromSubsystem_ReturnValue);
	void HandleLightAfterDurabilityChange(struct FItemInstanceDurabilityData& NewDurabilityData, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue);
	void IsItemEquippedAndUnbroken(bool* bIsEquippedAndUnbroken, bool CallFunc_GetDurability_HasDurability, const struct FItemInstanceDurabilityData& CallFunc_GetDurability_DurabilityData, bool CallFunc_Not_PreBool_ReturnValue);
	void UpdateLightIntensity(double Two4HourTime, bool CallFunc_IsValid_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, float CallFunc_UpdateIntensityFromTimeOfDay_TimeOfDay_ImplicitCast, float CallFunc_UpdateIntensityFromTimeOfDay_TimeOfDay_ImplicitCast_1);
	void UpdateDurabilityFromLight(double DurabilityDrain, double Temp_real_Variable, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, const struct FItemData_LightEmitter& CallFunc_TryGetItemDataLightEmitter_OutData, enum class EGetResult CallFunc_TryGetItemDataLightEmitter_Branches, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, double CallFunc_SafeDivide_ReturnValue, double CallFunc_SafeDivide_A_ImplicitCast);
	void HandleLightDurabilityTimer(bool bEnable, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, bool CallFunc_K2_IsTimerPausedHandle_ReturnValue);
	void InitializeAsStaticLightEmitter(const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, const struct FItemData_LightEmitter& CallFunc_TryGetItemDataLightEmitter_OutData, enum class EGetResult CallFunc_TryGetItemDataLightEmitter_Branches, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1);
	void SpawnLightweightLightComponent(const struct FItemData_LightEmitterLights& LightweightLightData, bool bShouldNeverCastShadows, class FName Temp_name_Variable, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class ABP_LightweightAttachedItem_C* K2Node_DynamicCast_AsBP_Lightweight_Attached_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, class UActorComponent* CallFunc_CreateAndAttachComponent_ReturnValue, class UItemLightComponent* K2Node_DynamicCast_AsItem_Light_Component, bool K2Node_DynamicCast_bSuccess_1);
	void ShouldShowLight(bool* bShouldShow, bool CallFunc_IsItemEquippedAndUnbroken_bIsEquippedAndUnbroken, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void HandleLightVisibility(bool bShouldShowLight, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_K2_IsValidTimerHandle_ReturnValue, bool CallFunc_IsItemEquippedAndUnbroken_bIsEquippedAndUnbroken, bool CallFunc_IsItemEquippedAndUnbroken_bIsEquippedAndUnbroken_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ShouldShowLight_bShouldShow, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, bool CallFunc_K2_IsTimerPausedHandle_ReturnValue);
	void CleanupAndDestroyLightComponent(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void CreateAndAttachLightComponent(struct FItemData_LightEmitter& LightData, bool bShouldNeverCastShadows, class FName Temp_name_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_ShouldLightNeverCastShadows_bShouldNeverCastShadows, bool CallFunc_IsValid_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, class UActorComponent* CallFunc_CreateAndAttachComponent_ReturnValue, class UItemLightComponent* K2Node_DynamicCast_AsItem_Light_Component, bool K2Node_DynamicCast_bSuccess, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1);
	void HasValidLightComponent(bool* bHasLightComponent, bool CallFunc_IsValid_ReturnValue);
	void Check_and_Update_Spell_Techniques(class ABP_AnimCharacter_C* ParentCharacter, TSoftObjectPtr<class UTechniqueDataAsset> PreviousSpell, int32 PreviousSpellIndex, const TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& CurrentSpells, int32 CurrentSpellIndex, class UTechniqueDataAsset* CurrentSpell, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, TSoftObjectPtr<class UTechniqueDataAsset> CallFunc_Array_Get_Item, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const struct FS_TechniqueGrantedAbilities& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_SoftObjectReference_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TSoftObjectPtr<class UTechniqueDataAsset> CallFunc_Array_Get_Item_2, bool CallFunc_Array_IsValidIndex_ReturnValue_1, int32 CallFunc_TryGetItemSpellTechniques_ActiveSpellIndex, TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& CallFunc_TryGetItemSpellTechniques_SpellTechniques, enum class EGetResult CallFunc_TryGetItemSpellTechniques_Branches, bool K2Node_SwitchEnum_CmpSuccess, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue);
	void OnRep_OverridenTechniques();
	void OverrideTechniqueForInputAction(enum class EInputActionTypes InputAction, TSoftObjectPtr<class UTechniqueDataAsset>& TechniqueOverride, bool* bWasOverridden, int32 CurrentIndex, const struct FS_InputTechnique_Pair& CurrentPair, bool bWasFound, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsValidSoftObjectReference_ReturnValue, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FS_InputTechnique_Pair& K2Node_MakeStruct_S_InputTechnique_Pair, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FS_InputTechnique_Pair& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetOverridenTechniqueForInputAction(enum class EInputActionTypes InputAction, class UTechniqueDataAsset** OutTechnique, TSoftObjectPtr<class UTechniqueDataAsset> SoftTechnique, int32 Temp_int_Array_Index_Variable, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset, bool K2Node_DynamicCast_bSuccess, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset_1, bool K2Node_DynamicCast_bSuccess_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FS_InputTechnique_Pair& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void GrantTechniqueAbility(class UNWXAbilitySystemComponent* AbilitySystemComponent, const struct FGameplayAbilitySpecDef& GameplayAbilitySpecDef, bool* bWasGranted, struct FGameplayAbilitySpecHandle* GrantedHandle, TSubclassOf<class UGameplayAbility> AbilityClass, TSubclassOf<class UGameplayAbility> CallFunc_GetSpecDefAbility_ReturnValue, const struct FGameplayAbilitySpecHandle& CallFunc_GiveAbility_ReturnValue, const class FString& CallFunc_GetClassDisplayName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class UClass* K2Node_ClassDynamicCast_AsNWXGameplay_Ability, bool K2Node_ClassDynamicCast_bSuccess, bool CallFunc_HasAbilityGranted_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void GetCurrentSpellTechniqueAsset(TSoftObjectPtr<class UTechniqueDataAsset>* CurrentSpellTechnique, int32 CallFunc_TryGetItemSpellTechniques_ActiveSpellIndex, TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& CallFunc_TryGetItemSpellTechniques_SpellTechniques, enum class EGetResult CallFunc_TryGetItemSpellTechniques_Branches, bool CallFunc_Array_IsValidIndex_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, TSoftObjectPtr<class UTechniqueDataAsset> CallFunc_Array_Get_Item);
	void GetAllCurrentTechniques(TArray<TSoftObjectPtr<class UTechniqueDataAsset>>* CurrentTechniqueAssets, const TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& TechniqueAssets, const TArray<struct FTechnique>& Techniques, TSoftObjectPtr<class UTechniqueDataAsset> CallFunc_GetCurrentSpellTechniqueAsset_CurrentSpellTechnique, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, bool K2Node_SwitchEnum_CmpSuccess, const struct FItemData_Techniques& CallFunc_TryGetItemDataTechniques_OutData, enum class EGetResult CallFunc_TryGetItemDataTechniques_Branches, bool K2Node_SwitchEnum_CmpSuccess_1, TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& CallFunc_Map_Values_Values, bool CallFunc_Map_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void GetTechniqueAsyncAssets(TArray<TSoftObjectPtr<class UTechniqueDataAsset>>* TechniqueAssets, const TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& TechniqueDataAssets, int32 CallFunc_TryGetItemSpellTechniques_ActiveSpellIndex, TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& CallFunc_TryGetItemSpellTechniques_SpellTechniques, enum class EGetResult CallFunc_TryGetItemSpellTechniques_Branches, bool K2Node_SwitchEnum_CmpSuccess, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, const struct FItemData_Techniques& CallFunc_TryGetItemDataTechniques_OutData, enum class EGetResult CallFunc_TryGetItemDataTechniques_Branches, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2, TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& CallFunc_Map_Values_Values);
	void Update_Swim_Item_Visibility(bool Apply, class AActor* CallFunc_GetOwner_ReturnValue, class ANWXCharacter* K2Node_DynamicCast_AsNWXCharacter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_UsingAThirdPersonCamera_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_GetLightweightItemBP_bSuccess, class ABP_LightweightAttachedItem_C* CallFunc_GetLightweightItemBP_LightweightItem, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3);
	void OnEquippableItemReady(bool Success, const class FString& CallFunc_GetDisplayName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, TArray<TSoftClassPtr<class UObject>>& CallFunc_GetAsyncClasses_Classes, TArray<TSoftObjectPtr<class UObject>>& CallFunc_GetAsyncAssets_Assets);
	void UpdateIsCurrentlyDisabledFlag(class UAbilitySystemComponent* Ability, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_GetDurability_HasDurability, const struct FItemInstanceDurabilityData& CallFunc_GetDurability_DurabilityData, bool CallFunc_BooleanAND_ReturnValue);
	void RequireFullbodyLightweightInstance(bool* bFullbodyRequired, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, const struct FGameplayTagContainer& CallFunc_GetItemTags_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_HasTag_ReturnValue);
	void ApplyItemGameplayEffects(class UAbilitySystemComponent* Ability, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class AActor* CallFunc_GetOwner_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FInstanceData_Perks& CallFunc_TryGetItemPerks_Perks, enum class EGetResult CallFunc_TryGetItemPerks_Branches, bool K2Node_SwitchEnum_CmpSuccess, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FItemPerkDataReference& CallFunc_Array_Get_Item_1, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingSpec_ReturnValue, const struct FItemPerkData& CallFunc_TryGetItemPerkData_OutData, enum class EGetResult CallFunc_TryGetItemPerkData_OutBranches, const struct FGameplayEffectSpecHandle& CallFunc_ApplyAttributeValuesToSpec_OutHandle, bool K2Node_SwitchEnum_CmpSuccess_1, int32 CallFunc_Array_Length_ReturnValue_1, class UClass* CallFunc_Array_Get_Item_2, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingSpec_ReturnValue_1, const struct FGameplayEffectSpecHandle& CallFunc_ApplyAttributeValuesToSpec_OutHandle_1, bool CallFunc_IsValidClass_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2);
	void CheckIfSecondaryNeededAndSpawn(bool CallFunc_HasAuthority_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, bool CallFunc_IsValid_ReturnValue, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, bool K2Node_SwitchEnum_CmpSuccess, const struct FGameplayTagContainer& CallFunc_GetItemTags_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_1, bool CallFunc_HasTag_ReturnValue, class ABP_AnimCharacter_C* K2Node_DynamicCast_AsBP_Anim_Character, bool K2Node_DynamicCast_bSuccess, class AActor* CallFunc_GetOwner_ReturnValue_2, const struct FTransform& CallFunc_GetTransform_ReturnValue, class ABP_EquippableItemBase_C* CallFunc_CreateEquippableItem_ReturnValue, bool CallFunc_CreateEquippableItem_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, class USkeletalMeshComponent* CallFunc_GetRootMesh_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue);
	void InitializeConsumable(const struct FItemData& ItemData, bool CallFunc_HasAuthority_ReturnValue, const struct FItemData_Consumable& CallFunc_TryGetItemDataConsumable_OutData, enum class EGetResult CallFunc_TryGetItemDataConsumable_Branches, bool K2Node_SwitchEnum_CmpSuccess, class UBP_ConsumableComponent_C* CallFunc_AddComponentByClass_ReturnValue);
	void Client_UpdateEquippedVisuals(bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_MatchesTag_ReturnValue);
	void LoadMaterialCustomization(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<enum class ECostumeRegions>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, enum class ECostumeRegions CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FResourceCustomizationData& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1, class UTexture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, class UTexture2D* K2Node_DynamicCast_AsTexture_2D_1, bool K2Node_DynamicCast_bSuccess_1, const struct FResourceCustomizationData_Loaded& K2Node_MakeStruct_ResourceCustomizationData_Loaded);
	void InitializeCustomization(const struct FEquippedInstanceData& InstanceData, int32 CurrentIndex, enum class EMetalRegions Temp_byte_Variable, bool CallFunc_HasAuthority_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable, enum class EMetalRegions Temp_byte_Variable_1, const struct FMaterialRegionInstanceData& CallFunc_Array_Get_Item, enum class EGemRegions Temp_byte_Variable_2, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Variable, enum class ECostumeRegions Temp_byte_Variable_3, enum class ECostumeRegions Temp_byte_Variable_4, enum class ECostumeRegions Temp_byte_Variable_5, enum class ECostumeRegions Temp_byte_Variable_6, enum class ECostumeRegions Temp_byte_Variable_7, enum class ECostumeRegions Temp_byte_Variable_8, int32 Temp_int_Variable_1, enum class ECostumeRegions K2Node_Select_Default, const struct FDataTableRowHandle& CallFunc_Array_Get_Item_1, const struct FDataTableRowHandle& CallFunc_Array_Get_Item_2, const struct FCharacterAppearance_GemSwatch& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, const struct FCharacterAppearance_MetalSwatch& CallFunc_GetDataTableRowFromName_OutRow_1, bool CallFunc_GetDataTableRowFromName_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, enum class EMetalRegions K2Node_Select_Default_1, const struct FEquippedInstanceData& CallFunc_ConvertEntryToCustomizationInstanceData_OutInstanceData, double CallFunc_Map_Add_Value_ImplicitCast, double CallFunc_Map_Add_Value_ImplicitCast_1);
	void UpdateAllProximityHiding(class AActor* ItemOwner, class APawn* LocalPawn, const struct FVector& BaseLocation, const struct FVector& HeightOffset, const struct FLinearColor& LocationAsColor, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class UMaterialInstanceDynamic* CallFunc_Array_Get_Item, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_MakeVector_Z_ImplicitCast);
	void UpdateWeaponCustomization(class USkeletalMeshComponent* Mesh, TMap<enum class ECostumeRegions, struct FResourceCustomizationData_Loaded> MaterialOverrides, TMap<enum class EMetalRegions, double> MetalOverrides, TMap<enum class EGemRegions, double> GemOverrides, bool bIsFirstPerson, class UMaterialInstanceDynamic* CurrentMID, int32 Temp_int_Loop_Counter_Variable, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class UMaterialInterface* CallFunc_Array_Get_Item, class UMaterialInstanceDynamic* K2Node_DynamicCast_AsMaterial_Instance_Dynamic, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UMaterialInstance* CallFunc_cc_CustomizeWeapon_Regions_MaterialInstance, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void UpdateAllWeaponCustomization(class ABP_LightweightAttachedItem_C* K2Node_DynamicCast_AsBP_Lightweight_Attached_Item, bool K2Node_DynamicCast_bSuccess, class USkeletalMeshComponent* CallFunc_GetRootMesh_ReturnValue);
	void OnRep_GrantedTechniqueAbilities();
	void CalculateDamageFalloff(double Distance, double InputDamage, double* CalculatedDamage);
	void DisableItem(class AActor* Parent_Char);
	void UpdateFuel(double Change, double NewFuel, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_GetFuel_HasFuelData, const struct FItemInstanceFuelData& CallFunc_GetFuel_Fuel, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue, class UInventoryComponentBase* CallFunc_GetParentInventory_Inventory, TScriptInterface<class IItemContainer> CallFunc_GetBackpack_Container, bool CallFunc_GetBackpack_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_UpdateItem_ReturnValue, const struct FInventoryEntry& CallFunc_GetItem_Entry, bool CallFunc_GetItem_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_UpdateOrAddFuel_NewFuel_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast, double CallFunc_FClamp_Max_ImplicitCast);
	void InitializeEquippableData(const struct FItemData& ItemData, const struct FItemData_Equippable& CallFunc_TryGetItemDataEquippable_OutData, enum class EGetResult CallFunc_TryGetItemDataEquippable_Branches, bool K2Node_SwitchEnum_CmpSuccess);
	void HandleFuelEvents(const struct FItemInstanceFuelData& CurrentData, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue_1, bool CallFunc_GetFuel_HasFuelData, const struct FItemInstanceFuelData& CallFunc_GetFuel_Fuel, bool CallFunc_BooleanAND_ReturnValue, double CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast, double CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1, double K2Node_CallDelegate_CurrentFuel_ImplicitCast, double K2Node_CallDelegate_MaxFuel_ImplicitCast, double CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast, double CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast_1);
	void GetFuel(bool* HasFuelData, struct FItemInstanceFuelData* Fuel, const struct FItemInstanceFuelData& CallFunc_TryGetItemFuel_Fuel, enum class EGetResult CallFunc_TryGetItemFuel_Branches, bool K2Node_SwitchEnum_CmpSuccess);
	void ClearOverridenTechniqueForSlot(enum class EInputActionTypes InputSlot, TSoftObjectPtr<class UTechniqueDataAsset> OverriddenTechnique, int32 Index, bool FoundExisting, int32 Temp_int_Array_Index_Variable, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, const struct FS_InputTechnique_Pair& CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void IsTraitPresent(const struct FGameplayTag& Trait, bool* bPresent, const struct FInstanceData_Traits& CallFunc_TryGetItemTraits_Traits, enum class EGetResult CallFunc_TryGetItemTraits_Branches, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_HasTag_ReturnValue);
	void HandleDurabilityEvents(const struct FItemInstanceDurabilityData& CurrentData, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_GetDurability_HasDurability, const struct FItemInstanceDurabilityData& CallFunc_GetDurability_DurabilityData, double K2Node_CallDelegate_CurrentDurability_ImplicitCast, double K2Node_CallDelegate_MaxDurability_ImplicitCast);
	void OnPawnDamageReceived(double Damage, const struct FGameplayTagContainer& EffectTags, class AActor* CallFunc_GetAttachParentActor_ReturnValue, bool CallFunc_WillDamage_WillDamage, double CallFunc_CalculateClothingDurabilityCost_Cost, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	enum class EItemType GetItemType();
	void OnClearItemEffectsFromActor(class AActor* Actor, class UBP_WeatherReaderComponent_C* WeatherReader, const struct FGameplayTag& CallFunc_MainhandTag_SledgehammerTag, class UBP_InjuryComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, const struct FGameplayTagContainer& CallFunc_GearAndClothingSlotTags_Tags, bool CallFunc_MatchesAnyTags_ReturnValue, class ANWXPlayerState* CallFunc_GetPlayerState_PlayerState, bool CallFunc_IsValid_ReturnValue_1, class ABP_PlayerState_C* K2Node_DynamicCast_AsBP_Player_State, bool K2Node_DynamicCast_bSuccess, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UAbilitySystemComponent* CallFunc_GetComponentByClass_ReturnValue_1, int32 CallFunc_RemoveActiveEffectsWithTags_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, bool CallFunc_IsServer_ReturnValue);
	bool RequiresLightweightItem(const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, bool CallFunc_GetItemEquipmentSlotTag_bSuccess, const struct FGameplayTag& CallFunc_GetItemEquipmentSlotTag_EquipmentSlotTag, bool CallFunc_MatchesTag_ReturnValue);
	class USkeletalMeshComponent* GetRootMesh();
	void GetItemInstances(struct FInventoryEntry* ItemInstances);
	void GetInstanceCount(int32* InstanceCount);
	void ApplyAttributeValuesToSpec(class UClass* Effect, const struct FGameplayEffectSpecHandle& InHandle, struct FGameplayEffectSpecHandle* OutHandle, TMap<struct FGameplayAttribute, struct FGameplayTag> AttributeTags, const struct FGameplayAttribute& CurrentAttribute, const struct FGameplayEffectSpecHandle& Handle, TArray<struct FGameplayAttribute>& CallFunc_Map_Keys_Keys, TMap<struct FGameplayAttribute, struct FGameplayTag> CallFunc_GetSetByCallerAttributesAndTags_AttributeTags, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FGameplayAttribute& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FGameplayAttribute& Temp_struct_Variable, const struct FGameplayTag& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue, float CallFunc_CalculateItemAttributeValue_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue, const struct FGameplayTag& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1);
	void SpawnLightweight(class ANWXCharacter* Character, class UClass* LightweightClass, bool Temp_bool_Variable, class FName Temp_name_Variable, bool CallFunc_IsLocallyControlled_ReturnValue, class FName CallFunc_GetAttachSocketName_ReturnValue, class FName Temp_name_Variable_1, class FName CallFunc_GetAttachSocketName_ReturnValue_1, bool Temp_bool_Variable_1, bool CallFunc_RequireFullbodyLightweightInstance_bFullbodyRequired, const class FString& CallFunc_GetDisplayName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class USkeletalMeshComponent* CallFunc_GetFP_FullBodyMesh_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class USkeletalMeshComponent* CallFunc_GetSK_HMM_FP_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class ANWXCharacter* K2Node_DynamicCast_AsNWXCharacter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, class FName K2Node_Select_Default, class AActor* CallFunc_GetOwner_ReturnValue_1, bool CallFunc_K2_AttachToComponent_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class FName K2Node_Select_Default_1, class ABP_LightweightAttachedItem_C* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, bool K2Node_SwitchEnum_CmpSuccess, const struct FItemData_MeshInfo& CallFunc_TryGetItemDataMeshInfo_OutData, enum class EGetResult CallFunc_TryGetItemDataMeshInfo_Branches, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_K2_AttachToComponent_ReturnValue_1, bool CallFunc_IsValidSoftObjectReference_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_2, const struct FTransform& CallFunc_GetTransform_ReturnValue_1, bool CallFunc_GetItemLightweightClass_bSuccess, class UClass* CallFunc_GetItemLightweightClass_LightweightClass, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1, class ABP_LightweightAttachedItem_C* CallFunc_FinishSpawningActor_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2);
	void UpdateDurability(double DurabilityChange, float PreviousDurability, double NewDurability, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_GetDurability_HasDurability, const struct FItemInstanceDurabilityData& CallFunc_GetDurability_DurabilityData, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue, class UInventoryComponentBase* CallFunc_GetParentInventory_Inventory, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IItemContainer> CallFunc_GetBackpack_Container, bool CallFunc_GetBackpack_ReturnValue, bool CallFunc_UpdateItem_ReturnValue, const struct FInventoryEntry& CallFunc_GetItem_Entry, bool CallFunc_GetItem_ReturnValue, double CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast, float CallFunc_UpdateOrAddDurability_NewDurability_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_FClamp_Max_ImplicitCast);
	void CalculateDurabilityShaderValues(double* WearValue, double* TarnishValue, class FName TarnishValueName, class FName WearValueName, const struct FCurveTableRowHandle& TarnishValueHandle, const struct FCurveTableRowHandle& WearValueHandle, double LTarnishValue, double LWearValue, double DurabilityPercent, enum class EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult, float CallFunc_EvaluateCurveTableRow_OutXY, enum class EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult_1, float CallFunc_EvaluateCurveTableRow_OutXY_1, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_GetDurability_HasDurability, const struct FItemInstanceDurabilityData& CallFunc_GetDurability_DurabilityData, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, bool K2Node_SwitchEnum_CmpSuccess_2, const struct FItemData_WearProfile& CallFunc_TryGetItemDataWearProfile_OutData, enum class EGetResult CallFunc_TryGetItemDataWearProfile_Branches, bool K2Node_SwitchEnum_CmpSuccess_3, bool CallFunc_IsValid_ReturnValue, float CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast, float CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_1, double K2Node_VariableSet_LTarnishValue_ImplicitCast, double K2Node_VariableSet_LWearValue_ImplicitCast, double K2Node_VariableSet_DurabilityPercent_ImplicitCast);
	void GetDisplayName(class FText* ItemDisplayName, class FText CallFunc_GetItemName_ReturnValue);
	void ClearAbilitiesFromTechnique(class AActor* Actor, TSoftObjectPtr<class UTechniqueDataAsset> OptionalTechniqueFilter, class UAbilitySystemComponent* NewLocalVar, int32 IndexToRemove, bool ClearAll, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_IsValidSoftObjectReference_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsServer_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, const struct FS_TechniqueGrantedAbilities& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FGameplayAbilitySpecHandle& CallFunc_Array_Get_Item_1, bool CallFunc_IsValidAbilitySpecHandle_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_SoftObjectReference_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void GrantAbilitiesFromTechnique(TSoftObjectPtr<class UTechniqueDataAsset> Technique, class UTechniqueDataAsset* CurrentTechniqueAsset, const TArray<struct FGameplayAbilitySpecHandle>& GrantedAbilities, class UNWXAbilitySystemComponent* AbilitySystem, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset, bool K2Node_DynamicCast_bSuccess, class FText CallFunc_GetDisplayName_ItemDisplayName, const struct FSoftObjectPath& CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_BreakSoftObjectPath_PathString, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const struct FS_TechniqueGrantedAbilities& K2Node_MakeStruct_S_TechniqueGrantedAbilities, const struct FGameplayAbilitySpecDef& CallFunc_CreateAbilitySpecDefFromClass_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, const struct FGameplayAbilitySpecDef& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_Conv_SoftObjectReferenceToString_ReturnValue, const class FString& CallFunc_GetBaseFilename_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Conv_SoftObjectReferenceToString_ReturnValue_1, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, const class FString& CallFunc_GetBaseFilename_ReturnValue_1, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset_1, bool K2Node_DynamicCast_bSuccess_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, bool CallFunc_Array_IsNotEmpty_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class AActor* CallFunc_GetAttachParentActor_ReturnValue, bool CallFunc_IsServer_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UNWXAbilitySystemComponent* K2Node_DynamicCast_AsNWXAbility_System_Component, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_GrantTechniqueAbility_bWasGranted, const struct FGameplayAbilitySpecHandle& CallFunc_GrantTechniqueAbility_GrantedHandle, bool CallFunc_GrantTechniqueAbility_bWasGranted_1, const struct FGameplayAbilitySpecHandle& CallFunc_GrantTechniqueAbility_GrantedHandle_1, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_IsValidAbilitySpecHandle_ReturnValue, bool CallFunc_IsValidAbilitySpecHandle_ReturnValue_1);
	void GetDurability(bool* HasDurability, struct FItemInstanceDurabilityData* DurabilityData, const struct FItemInstanceDurabilityData& CallFunc_TryGetItemDurability_Durability, enum class EGetResult CallFunc_TryGetItemDurability_Branches, bool K2Node_SwitchEnum_CmpSuccess);
	void GetParentInventory(class UInventoryComponentBase** Inventory, const class FString& CallFunc_GetFunctionName_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, class AController* CallFunc_GetController_ReturnValue, class UInventoryComponentBase* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void HandleDurabilityDepleted(class ABP_AnimCharacter_C* ParentChar, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, class ABP_PlayerState_C* K2Node_DynamicCast_AsBP_Player_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void CheckDurabilityStatus(bool CallFunc_GetDurability_HasDurability, const struct FItemInstanceDurabilityData& CallFunc_GetDurability_DurabilityData, bool CallFunc_BooleanAND_ReturnValue);
	void ApplyDurabilityLossForTechnique(TSoftObjectPtr<class UTechniqueDataAsset> Technique, const struct FItemConstraint& ItemIsMakeshift, class AActor* CallFunc_GetOwner_ReturnValue, const struct FGameplayAttribute& Temp_struct_Variable, bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttribute_ReturnValue, float CallFunc_CalculateItemAttributeValue_ReturnValue, const struct FItemConstraintMatchData& CallFunc_IsItemConstraintMet_OutMatchData, enum class EGetResult CallFunc_IsItemConstraintMet_OutBranch, double CallFunc_Get_Prehistoric_Warfare_Perk_Tool_Durability_Divisor_DurabilityDivisor, bool K2Node_SwitchEnum_CmpSuccess, double CallFunc_Divide_DoubleDouble_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, const struct FSoftObjectPath& CallFunc_Conv_SoftObjRefToSoftObjPath_ReturnValue, const class FString& CallFunc_BreakSoftObjectPath_PathString, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, const class FString& CallFunc_GetBaseFilename_ReturnValue, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const struct FGameplayTagContainer& CallFunc_GetItemTags_Tags, bool CallFunc_HasTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, double CallFunc_Multiply_DoubleDouble_B_ImplicitCast, double CallFunc_Divide_DoubleDouble_A_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	void GetItemTypeTag(struct FGameplayTag* Trait, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, const struct FGameplayTag& CallFunc_GetItemTypeTag_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void Get_Element_Tags_Ranged(struct FGameplayTagContainer* Elemental_Tags);
	void GetMeleeComponent(class UBP_MeleeComponent_C** MeleeComponent, class UBP_MeleeComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void ClearMeleeImpactCache(class UBP_MeleeComponent_C* CallFunc_GetMeleeComponent_MeleeComponent, bool CallFunc_IsValid_ReturnValue);
	void GetItemDataTraits(TArray<struct FGameplayTag>* Traits, TArray<struct FGameplayTag>& K2Node_MakeArray_Array, const struct FInstanceData_Traits& CallFunc_TryGetItemTraits_Traits, enum class EGetResult CallFunc_TryGetItemTraits_Branches, bool K2Node_SwitchEnum_CmpSuccess, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags);
	void Cache_Melee_Impact_Tag(const struct FGameplayTag& MeleeImpactTagToCache, double CacheDuration, class UBP_MeleeComponent_C* CallFunc_GetMeleeComponent_MeleeComponent, bool CallFunc_IsValid_ReturnValue);
	void GetMeleeImpactTag(struct FGameplayTag* MeleeImpactTag, class UBP_MeleeComponent_C* CallFunc_GetMeleeComponent_MeleeComponent, bool CallFunc_IsValid_ReturnValue, const struct FGameplayTag& CallFunc_GetImpactTag_ImpactTag);
	void OnRep_ItemEntry_Internal();
	void UpdateEntry(bool* Succeeded);
	void UpdateItemDormancy(bool Temp_bool_Variable, enum class ENetDormancy Temp_byte_Variable, enum class ENetDormancy Temp_byte_Variable_1, bool CallFunc_HasAuthority_ReturnValue, enum class ENetDormancy K2Node_Select_Default);
	void GetFirstPersonItem(class ABP_LightweightAttachedItem_C** Item, bool CallFunc_GetLightweightItemBP_bSuccess, class ABP_LightweightAttachedItem_C* CallFunc_GetLightweightItemBP_LightweightItem);
	void UpdateItemVisibility(bool CallFunc_IsValid_ReturnValue, class ABP_EquippableItemBase_C* K2Node_DynamicCast_AsBP_Equippable_Item_Base, bool K2Node_DynamicCast_bSuccess);
	void GetImpactTagsRanged(struct FGameplayTagContainer* StrikeTags);
	bool IsAbilityActiveForSlot(enum class EInputActionTypes Slot, class UTechniqueDataAsset* CurrentTechnique, const struct FDataTableRowHandle& LTechniqueRow, class UClass* LAbilityClass, const struct FTechnique& LTechnique, class ABP_AnimCharacter_C* LCharacter, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_IsValid_ReturnValue, TSoftObjectPtr<class UTechniqueDataAsset> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, class UTechniqueDataAsset* CallFunc_GetTechniqueForSlot_Technique, const struct FS_TechniqueGrantedAbilities& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FGameplayAbilitySpecHandle& CallFunc_Array_Get_Item_1, bool CallFunc_IsActiveAbilitySpecHandle_ReturnValue, bool CallFunc_IsValidAbilitySpecHandle_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_EqualEqual_SoftObjectReference_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent);
	void GetCooldownForSlot(enum class EInputActionTypes Slot, double* Cooldown, double* Duration, class UTechniqueDataAsset* SlotTechnique, double TotalDuration, bool HasCachedQueries, const struct FS_CachedEffectQueries& CachedQueries, double MaxCooldown, class ABP_AnimCharacter_C* Character, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FGameplayAbilitySpecDef& CallFunc_Array_Get_Item, class UTechniqueDataAsset* CallFunc_GetTechniqueForSlot_Technique, TSubclassOf<class UGameplayAbility> CallFunc_GetSpecDefAbility_ReturnValue, TSubclassOf<class UGameplayEffect> CallFunc_GetAbilityCooldownClass_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, const struct FGameplayEffectQuery& K2Node_MakeStruct_GameplayEffectQuery, bool CallFunc_IsValidClass_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FGameplayEffectQuery& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FS_CachedEffectQueries& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, TArray<struct FActiveGameplayEffectHandle>& CallFunc_GetActiveEffects_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_2, float CallFunc_GetActiveGameplayEffectTotalDuration_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, float CallFunc_GetActiveGameplayEffectRemainingDuration_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, double K2Node_VariableSet_TotalDuration_ImplicitCast, double CallFunc_Greater_DoubleDouble_A_ImplicitCast, double K2Node_VariableSet_MaxCooldown_ImplicitCast);
	bool CanUseTechnique(TSoftObjectPtr<class UTechniqueDataAsset> Technique, const struct FItemData& ItemData, class UTechniqueDataAsset* ResolvedTechnique, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, int32 Temp_int_Array_Index_Variable, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset, bool K2Node_DynamicCast_bSuccess, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, int32 Temp_int_Loop_Counter_Variable, bool K2Node_SwitchEnum_CmpSuccess, int32 CallFunc_Add_IntInt_ReturnValue, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_HasItemSubtype_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_self_CastInput, bool CallFunc_HasAllMatchingGameplayTags_ReturnValue);
	void IsAsyncDataInitialized(bool* bIsLoaded, bool CallFunc_GetLightweightItemBP_bSuccess, class ABP_LightweightAttachedItem_C* CallFunc_GetLightweightItemBP_LightweightItem, bool CallFunc_GetIsAsyncDataInitialized_IsAsyncDataInitialized, bool CallFunc_BooleanAND_ReturnValue);
	int32 GetNumGrantedAbilities(int32 Num, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FS_TechniqueGrantedAbilities& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void GetInteractionTags(TArray<struct FGameplayTag>* InteractionTags);
	void ItemLog(const class FString& Message, enum class ENWXLogLevel NWXLogLevel, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const class FString& CallFunc_BreakSoftObjectPath_PathString, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2);
	void SetTechniqueForSlot(enum class EInputActionTypes InputSlot, TSoftObjectPtr<class UTechniqueDataAsset> Technique, const struct FS_InputTechnique_Pair& PairToAdd, bool FoundExisting, bool CallFunc_OverrideTechniqueForInputAction_bWasOverridden);
	void GetTechniqueForSlot(enum class EInputActionTypes Slot, class UTechniqueDataAsset** Technique, class UTechniqueDataAsset* TechniqueAsset, const struct FItemData_Techniques& TechniqueData, class UTechniqueDataAsset* CallFunc_GetOverridenTechniqueForInputAction_OutTechnique, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TSoftObjectPtr<class UTechniqueDataAsset> CallFunc_GetCurrentSpellTechniqueAsset_CurrentSpellTechnique, bool CallFunc_Not_PreBool_ReturnValue, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_2, TSoftObjectPtr<class UTechniqueDataAsset> CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1, class UTechniqueDataAsset* K2Node_DynamicCast_AsTechnique_Data_Asset_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, const struct FItemData_Techniques& CallFunc_TryGetItemDataTechniques_OutData, enum class EGetResult CallFunc_TryGetItemDataTechniques_Branches, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1);
	void InitializeAsyncAssets(int32 NumMaterials, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, class UClass* CallFunc_GetItemAnim_AnimClass, bool CallFunc_IsValidClass_ReturnValue, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference_1, TSoftObjectPtr<class USkeletalMesh> CallFunc_GetItemMeshes_Mesh3P, TSoftObjectPtr<class USkeletalMesh> CallFunc_GetItemMeshes_Mesh1P, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, class USkeletalMesh* K2Node_DynamicCast_AsSkeletal_Mesh, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void GetAsyncClasses(TArray<TSoftClassPtr<class UObject>>* Classes, const TArray<TSoftObjectPtr<class UObject>>& Objects, TArray<TSoftClassPtr<class UObject>>& K2Node_MakeArray_Array);
	void GetAsyncAssets(TArray<TSoftObjectPtr<class UObject>>* Assets, const TArray<TSoftObjectPtr<class UObject>>& Objects, int32 Temp_int_Array_Index_Variable, bool CallFunc_HasAuthority_ReturnValue, TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& CallFunc_GetTechniqueAsyncAssets_TechniqueAssets, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FResourceCustomizationData>& CallFunc_Map_Values_Values, const struct FGameplayTag& CallFunc_GetItemTypeTag_Trait, const struct FResourceCustomizationData& CallFunc_Array_Get_Item, TArray<TSoftObjectPtr<class UObject>>& CallFunc_Get_All_Hit_Impact_SFX_for_Source_OutSoftObjectsArray, TArray<TSoftObjectPtr<class UObject>>& K2Node_MakeArray_Array, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, TSoftObjectPtr<class USkeletalMesh> CallFunc_GetItemMeshes_Mesh3P, TSoftObjectPtr<class USkeletalMesh> CallFunc_GetItemMeshes_Mesh1P, TArray<TSoftObjectPtr<class UObject>>& K2Node_MakeArray_Array_1);
	void GetLightweightItemBP(bool* bSuccess, class ABP_LightweightAttachedItem_C** LightweightItem, class ABP_LightweightAttachedItem_C* K2Node_DynamicCast_AsBP_Lightweight_Attached_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void HandleLightweightVisibility(bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_GetLightweightItemBP_bSuccess, class ABP_LightweightAttachedItem_C* CallFunc_GetLightweightItemBP_LightweightItem, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1);
	void HandleVisibility(bool CallFunc_IsValid_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_1, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FGameplayTag& Temp_struct_Variable, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_UsingAThirdPersonCamera_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void UndoLoadout(class APawn* EquippingPawn, bool* Success);
	void FinishLoadout(bool CallFunc_HasAuthority_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_GetAttachParentChar_bSuccess, class ABP_AnimCharacter_C* CallFunc_GetAttachParentChar_Parent, bool CallFunc_UpdateEntry_Succeeded, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UInventoryComponentBase* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsServer_ReturnValue);
	void AddEffectsInternal(const struct FItemDataReference& UnarmedReference, float ItemLevel, class UBP_WeatherReaderComponent_C* WeatherReader, bool NewDisabledState, const TArray<class UClass*>& EffectsToAdd, class AActor* ParentActor, class UAbilitySystemComponent* Ability, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, bool CallFunc_NotEqual_FItemDataReference_ReturnValue, bool CallFunc_MatchesTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TArray<TSoftObjectPtr<class UTechniqueDataAsset>>& CallFunc_GetAllCurrentTechniques_CurrentTechniqueAssets, TSoftObjectPtr<class UTechniqueDataAsset> CallFunc_Array_Get_Item, bool CallFunc_Not_PreBool_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_MatchesTag_ReturnValue_1, double CallFunc_SelectFloat_ReturnValue, double CallFunc_SafeDivide_ReturnValue, float CallFunc_GetItemLevel_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingSpec_ReturnValue, const struct FGameplayTagContainer& CallFunc_GearAndClothingSlotTags_Tags, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue, bool CallFunc_MatchesAnyTags_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class ANWXPlayerState* CallFunc_GetPlayerState_PlayerState, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class ABP_PlayerState_C* K2Node_DynamicCast_AsBP_Player_State, bool K2Node_DynamicCast_bSuccess, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, bool CallFunc_NotEqual_GameplayTag_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class AActor* CallFunc_GetAttachParentActor_ReturnValue, double CallFunc_SafeDivide_A_ImplicitCast, float CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast, double CallFunc_Greater_DoubleDouble_A_ImplicitCast);
	void GetLightweightRoot(bool* bSuccess, class USkeletalMeshComponent** Root, bool CallFunc_GetLightweightItemBP_bSuccess, class ABP_LightweightAttachedItem_C* CallFunc_GetLightweightItemBP_LightweightItem, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class USkeletalMesh* CallFunc_GetSkeletalMeshAsset_ReturnValue, bool CallFunc_IsValid_ReturnValue_2);
	void GetAttachParentChar(bool* bSuccess, class ABP_AnimCharacter_C** Parent, class AActor* CallFunc_GetAttachParentActor_ReturnValue, class ABP_AnimCharacter_C* K2Node_DynamicCast_AsBP_Anim_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void OnRep_bEquipped(bool Temp_bool_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, class ABP_EquippableItemBase_C* K2Node_DynamicCast_AsBP_Equippable_Item_Base, bool K2Node_DynamicCast_bSuccess, enum class ETPCameraSetting Temp_byte_Variable, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, enum class ETPCameraSetting Temp_byte_Variable_1, enum class ETPCameraSetting K2Node_Select_Default, class AActor* CallFunc_GetOwner_ReturnValue, class ABP_Character_C* K2Node_DynamicCast_AsBP_Character, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2);
	void InitializeFromItemTable(bool* Succeeded, const struct FItemData& ItemData, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, bool K2Node_SwitchEnum_CmpSuccess);
	void GameStateReady();
	void CrossServerDestroy();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void OnAsyncLoadComplete();
	void ReceiveTick(float DeltaSeconds);
	void OnRep_ItemEntry();
	void ClearItemEffectsFromActor(class AActor* Actor);
	void AddEffects();
	void OnItemEntryUpdated(struct FInventoryEntry& OldEntry);
	void ExecuteUbergraph_BP_EquippableItemBase(int32 EntryPoint, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_InitializeFromItemTable_Succeeded, bool CallFunc_HasAuthority_ReturnValue_1, float K2Node_Event_DeltaSeconds, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const class FString& CallFunc_GetItemIdDebugString_ReturnValue, bool CallFunc_GetLightweightItemBP_bSuccess, class ABP_LightweightAttachedItem_C* CallFunc_GetLightweightItemBP_LightweightItem, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, class AActor* K2Node_Event_Actor, bool CallFunc_HasAuthority_ReturnValue_2, class AActor* CallFunc_GetAttachParentActor_ReturnValue, class ABP_Character_C* K2Node_DynamicCast_AsBP_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, const struct FInventoryEntry& K2Node_Event_OldEntry, bool CallFunc_UpdateEntry_Succeeded, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class UBP_CharacterCustomization_Component_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, const struct FEquippedVisualMesh& CallFunc_ClearEquippedSlot_RemovedItemData, bool CallFunc_ClearEquippedSlot_bWasCleared, bool CallFunc_IsValid_ReturnValue_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, TScriptInterface<class IAwaitable> CallFunc_AwaitBP_Awaitable_CastInput, const struct FDelegateHandleBPWrapper& CallFunc_AwaitBP_Handle);
	void OnPredictedDurabilityUpdated__DelegateSignature(double PredicatedDurability);
	void OnUnequipped__DelegateSignature();
	void OnFuelUpdated__DelegateSignature(double CurrentFuel, double MaxFuel);
	void OnDurabilityDepleted__DelegateSignature();
	void OnDurabilityNearBreaking__DelegateSignature();
	void OnDurabilityUpdated__DelegateSignature(double CurrentDurability, double MaxDurability);
	void OnTechniquesUpdated__DelegateSignature();
	void OnAsyncDataInitiailized__DelegateSignature(class ABP_EquippableItemBase_C* Equippable);
	void OnEquipped__DelegateSignature();
	void OnAddedToQuickbar__DelegateSignature();
};

}


