#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BPFL_Structure_Constructed.BPFL_Structure_Constructed_C
class UBPFL_Structure_Constructed_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBPFL_Structure_Constructed_C* GetDefaultObj();

	void InitializeBaseMesh(class UObject* Outer, class USceneComponent* MeshRoot, class USceneComponent* BaseMesh, class UObject* __WorldContext, double ZScale, const struct FVector& BaseMeshLocation, class UStaticMeshComponent* BaseStaticMesh, const struct FVector& BaseMeshScale, const struct FVector& MeshBounds, class UMeshObject* StaticMeshObject, class UStaticMeshComponent* K2Node_DynamicCast_AsStatic_Mesh_Component, bool K2Node_DynamicCast_bSuccess, const struct FTransform& CallFunc_GetMeshTransform_WorldTransform, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_GetMeshOrigin_LocalLocation, const struct FVector& CallFunc_GetMeshOrigin_WorldLocation, const struct FVector& CallFunc_GetMeshBounds_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_GetStaticMeshBounds_ReturnValue, double CallFunc_BreakVector_X_3, double CallFunc_BreakVector_Y_3, double CallFunc_BreakVector_Z_3, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldTransform_SweepHitResult, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, class UBP_StaticMeshesGroupObject_C* CallFunc_CreateMeshObjectForBaseInitialization_GroupObject);
	void CreateMeshObjectForBaseInitialization(class UObject* Outer, class USceneComponent* MeshRoot, class USceneComponent* Base, class UObject* __WorldContext, class UBP_StaticMeshesGroupObject_C** GroupObject, class UBP_StaticMeshesGroupObject_C* CallFunc_SpawnObject_ReturnValue, TArray<class USceneComponent*>& K2Node_MakeArray_Array);
	void StructureReferenceHasAnyGameplayTags(struct FStructureAssetReference& StructureRef, const struct FGameplayTagContainer& GameplayTagContainer, class UObject* __WorldContext, bool* HasGameplayTag, const struct FDataTableRowHandle& LStructureRowHandle, const struct FGameplayTagContainer& LGameplayTagContainer, const struct FGameplayTagContainer& RowGameplayTags, bool CallFunc_GetStructureDataFromStructureAssetReference_IsValid, const struct FStructureData& CallFunc_GetStructureDataFromStructureAssetReference_OutData, bool CallFunc_HasAnyTags_ReturnValue);
	void TEMP_CreateMultipleItemProxies(class UObject* Structures, const struct FTransform& SpawnTransform, int32 NumberToSpawn, const struct FInventoryEntry& SpawnPec, class UObject* __WorldContext);
	void DoesStructureHaveAnyAddedResources(class UObject* Structure, class UObject* __WorldContext, bool* HasAnyAddedResources, class UObject* LStructure, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IStructureResourceManagerOwnerInterface> K2Node_DynamicCast_AsStructure_Resource_Manager_Owner_Interface, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_GetFunctionName_ReturnValue, TScriptInterface<class IStructureResourceRequirementsInterface> CallFunc_GetResourceRequirementsForCurrentState_ReturnValue, bool CallFunc_HasAnyAddedResources_ReturnValue, class UObject* CallFunc_Conv_InterfaceToObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_DoesImplementInterface_ReturnValue);
	void DoesActorHaveAllRequiredResources(class UObject* Actor, class UObject* __WorldContext, bool* HasAllRequiredResources, TScriptInterface<class IStructureResourceManagerOwnerInterface> K2Node_DynamicCast_AsStructure_Resource_Manager_Owner_Interface, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_GetDisplayName_ReturnValue, TScriptInterface<class IStructureResourceRequirementsInterface> CallFunc_GetResourceRequirementsForCurrentState_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_HasAllRequiredResources_ReturnValue, class UObject* CallFunc_Conv_InterfaceToObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, bool CallFunc_DoesImplementInterface_ReturnValue);
	void GetOverlappingTriggerVolumes(class UObject* Actor, class UObject* __WorldContext, TArray<struct FHitResult>* FoundHits, TArray<class UObject*>& K2Node_MakeArray_Array, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface, bool K2Node_DynamicCast_bSuccess, const struct FLinearColor& Temp_struct_Variable, const struct FTransform& CallFunc_GetMeshTransform_WorldTransform, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface_1, bool K2Node_DynamicCast_bSuccess_1, TScriptInterface<class IStructureMeshInfoInterface> K2Node_DynamicCast_AsStructure_Mesh_Info_Interface_2, bool K2Node_DynamicCast_bSuccess_2, const struct FVector& CallFunc_GetMeshBounds_ReturnValue, const struct FVector& CallFunc_GetMeshOrigin_LocalLocation, const struct FVector& CallFunc_GetMeshOrigin_WorldLocation, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_1, const struct FLinearColor& Temp_struct_Variable_1, TArray<struct FHitResult>& CallFunc_NWXBoxTraceMultiForObjects_OutHits, bool CallFunc_NWXBoxTraceMultiForObjects_ReturnValue);
	void SLOW_FindAllItemsMeetingRequirements(const struct FStructureResourceRequirements& Requirement, class UObject* __WorldContext, TArray<struct FItemDataReference>* ItemName, const TArray<struct FItemDataReference>& ItemNames, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class UItemInstanceData*>& Temp_object_Variable, TArray<struct FItemDataReference>& CallFunc_GetAllItemReferences_ReturnValue, const struct FItemDataReference& CallFunc_Array_Get_Item, const struct FInventoryEntry& CallFunc_CreateNewItemEntry_NewEntry, enum class EGetResult CallFunc_CreateNewItemEntry_OutBranch, int32 CallFunc_Array_Length_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsConstraintMet_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void SLOW_FindItemMeetingRequirements(const struct FStructureResourceRequirements& Requirement, class UObject* __WorldContext, struct FItemDataReference* ItemName, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class UItemInstanceData*>& Temp_object_Variable, TArray<struct FItemDataReference>& CallFunc_GetAllItemReferences_ReturnValue, const struct FItemDataReference& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FInventoryEntry& CallFunc_CreateNewItemEntry_NewEntry, enum class EGetResult CallFunc_CreateNewItemEntry_OutBranch, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsConstraintMet_ReturnValue);
	void ResourceRequirementArrayToUIData(const struct FStructureResourceRequirements& ResourceRequirement, class UObject* __WorldContext, class FText* ResourceTraits, class FText* ResourceQuantity);
	void ResourceRequirementToUIData(const struct FStructureResourceRequirements& ResourceRequirement, class UObject* __WorldContext, class FText* ResourceTraits, class FText* ResourceQuantity, const struct FItemConstraintPresentationData& CallFunc_GetPresentationData_ReturnValue, int32 CallFunc_GetQuantityRequired_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue);
	class FText ResourcePropertiesToText(const struct FGameplayTagContainer& ResourceProperties, class UObject* __WorldContext, const class FString& CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue, const class FString& CallFunc_Replace_ReturnValue, const class FString& CallFunc_Replace_ReturnValue_1, const class FString& CallFunc_Replace_ReturnValue_2, class FText CallFunc_Conv_StringToText_ReturnValue);
	void GetMinAndMaxFromBounds(class UBoxComponent* BoxComponent, class UObject* __WorldContext, struct FVector* MinLocal, struct FVector* MaxLocal, struct FVector* MinWorld, struct FVector* MaxWorld, const struct FVector& CallFunc_GetComponentBounds_Origin, const struct FVector& CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_TransformLocation_ReturnValue, const struct FVector& CallFunc_TransformLocation_ReturnValue_1);
	void GetMegaBox(TArray<class UBoxComponent*>& LandPylonBoxes, class UObject* __WorldContext, struct FVector* WorldBoxBounds, const struct FVector& StructureOrigin, const struct FVector& CurrentMax, const struct FVector& CurrentMin, const struct FVector& CallFunc_GetOriginOfMultipleBoxs_StructureOrigin, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, class UBoxComponent* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetMinAndMaxFromBounds_MinLocal, const struct FVector& CallFunc_GetMinAndMaxFromBounds_MaxLocal, const struct FVector& CallFunc_GetMinAndMaxFromBounds_MinWorld, const struct FVector& CallFunc_GetMinAndMaxFromBounds_MaxWorld, const struct FVector& CallFunc_ChoosePointWithMaxXYDistanceTo_ReturnValue, const struct FVector& CallFunc_ChoosePointWithMaxXYDistanceTo_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue);
	void GetOriginOfMultipleBoxs(TArray<class UBoxComponent*>& LandPylonBoxes, class UObject* __WorldContext, struct FVector* StructureOrigin, int32 BoxCount, const struct FVector& OriginSum, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class UBoxComponent* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue, const struct FVector& CallFunc_GetComponentBounds_Origin, const struct FVector& CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, const struct FVector& CallFunc_TransformLocation_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_Divide_VectorInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void DoesGridPointAllowComposite(const struct FGridPoint& GridPoint, class AActor* Actor, class UObject* __WorldContext, bool* DoesAllowStructure, TScriptInterface<class IStructureSnappableInterface> K2Node_DynamicCast_AsStructure_Snappable_Interface, bool K2Node_DynamicCast_bSuccess, enum class ESnapType CallFunc_GetSnapType_SnapPointType, bool CallFunc_DoesGridPointAllowActor_DoesAllowActor);
	void DoesGridPointAllowActor(const struct FGridPoint& GridPoint, enum class ESnapType AttachmentType, class UObject* __WorldContext, bool* DoesAllowActor, bool CallFunc_DoesGridPointAllowStructureType_ReturnValue);
	struct FTransform GetGridTransformWithOffset(const struct FGridPoint& GridPoint, const struct FVector& GridOffset, class UObject* __WorldContext, const struct FRotator& SpawnRotation, const struct FVector& SpawnLocation, const struct FTransform& CallFunc_GetGridPointWorldTransform_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void GetStructureRequirementResourceCount(struct FS_StructureRequirement& StructureRequirement, class UObject* __WorldContext, int32* RequiredCount);
	void GetStructureRequirementResourceNames(struct FS_StructureRequirement& StructureRequirement, class UObject* __WorldContext, TArray<class FName>* PermittedResources);
	struct FTransform GetCompositePieceGridTransform(class USceneComponent* GridBoxComponent, const struct FVector& GridOffset, class UObject* __WorldContext, const struct FRotator& SpawnRotation, const struct FVector& SpawnLocation, const struct FRotator& CallFunc_K2_GetComponentRotation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void GetConstructionWorkersOverlappingPrimitiveTotal_Score(class UPrimitiveComponent* PrimitiveComponent, class UObject* __WorldContext, int32* EffectiveCount, TArray<class AActor*>* Contributors, int32 LEffectiveCount, const TArray<class AActor*>& ActorsInRepairRadius, class UPrimitiveComponent* Primitive, int32 Temp_int_Array_Index_Variable, TArray<class AActor*>& Temp_object_Variable, TArray<class AActor*>& Temp_object_Variable_1, int32 Temp_int_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, class AActor* CallFunc_Array_Get_Item, TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue_2, bool Temp_bool_Variable, const struct FVector& CallFunc_GetComponentBounds_Origin, const struct FVector& CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, const struct FVector& CallFunc_GetComponentBounds_Origin_1, const struct FVector& CallFunc_GetComponentBounds_BoxExtent_1, float CallFunc_GetComponentBounds_SphereRadius_1, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_1, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors_1, bool CallFunc_SphereOverlapActors_ReturnValue_1, class AActor* CallFunc_Array_Get_Item_1, int32 CallFunc_CalculateConstructionEffectiveness_Effectiveness, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromTag_ReturnValue, bool CallFunc_HasAllMatchingGameplayTags_ReturnValue);
};

}


