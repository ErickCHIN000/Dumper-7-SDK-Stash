#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x5A8 (0x10F8 - 0xB50)
// BlueprintGeneratedClass BP_AnimCharacter.BP_AnimCharacter_C
class ABP_AnimCharacter_C : public ANWXPlayerCharacter
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB50(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UMotionWarpingComponent*               MotionWarping;                                     // 0xB58(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                      TP_Camera;                                         // 0xB60(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNWXSpringArmComponent*                NWXTP_SpringArm;                                   // 0xB68(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                      Cinematic_TP_Camera;                               // 0xB70(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                   Cinematic_TP_SpringArm;                            // 0xB78(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URALS_ComponentManagerCharacter_C*     RALS_ComponentManagerCharacter;                    // 0xB80(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AsyncAssetLoader_C*                BP_AsyncAssetLoader;                               // 0xB88(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Character_Audio_Component_C*       BP_Character_Audio_Component;                      // 0xB90(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                      UI_TP_Camera;                                      // 0xB98(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                   UI_TP_SpringArm;                                   // 0xBA0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                      FP_Camera;                                         // 0xBA8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerVisibilityComponent_C*       BP_PlayerVisibilityComponent;                      // 0xBB0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                        LerpTimeline_Interp_Value_17FF234A4D2060D4534D23B67FD629DB; // 0xBB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                LerpTimeline__Direction_17FF234A4D2060D4534D23B67FD629DB; // 0xBBC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85A7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTimelineComponent*                    LerpTimeline;                                      // 0xBC0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                              DesiredRotation;                                   // 0xBC8(0x18)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                              CurrentRotation;                                   // 0xBE0(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	enum class E_LocomotionMode                  LocomotionMode;                                    // 0xBF8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class E_LocomotionMode                  DefaultMovementMode;                               // 0xBF9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85A9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       TurnThreshold;                                     // 0xC00(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsTurningToDesired;                                // 0xC08(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85AB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimInstance*>                 AnimationInstances;                                // 0xC10(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         AttachCameraToHead;                                // 0xC20(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85AD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              LastVelocityRotation;                              // 0xC28(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                              LookingRotation;                                   // 0xC40(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                              LastMovementInputRotation;                         // 0xC58(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                              TargetRotation;                                    // 0xC70(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                  FirstPersonCameraSocket;                           // 0xC88(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsMoving;                                          // 0xC90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85B2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNWX_CharacterMovementComponent*       NWXCharacterMoveComp;                              // 0xC98(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimB_Base_FP_C*                      AnimationDataInstanceFP;                           // 0xCA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnLoadoutRebuilt;                                  // 0xCA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FActiveGameplayEffectHandle           SpeedBonusGEHandle;                                // 0xCB8(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle           DmgReductionGEHandle;                              // 0xCC0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         IsProxyJumping;                                    // 0xCC8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ERALSMovementState                MovementState;                                     // 0xCC9(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_MovementAction              MovementAction;                                    // 0xCCA(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_RotationMode                RotationMode;                                      // 0xCCB(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_Gait                        Gait;                                              // 0xCCC(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_ViewMode                    ViewMode;                                          // 0xCCD(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_OverlayState                OverlayState;                                      // 0xCCE(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_Gait                        DesiredGait;                                       // 0xCCF(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               RagdollLocation;                                   // 0xCD0(0x18)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                         MainAnimInstance;                                  // 0xCE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_RotationMode                DesiredRotationMode;                               // 0xCF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_Stance                      DesiredStance;                                     // 0xCF1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RagdollState;                                      // 0xCF2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85BD[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRALS_MovementSettings_State          MovementData;                                      // 0xCF8(0xC0)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                   MovementModel;                                     // 0xDB8(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	enum class ERALS_Stance                      Stance;                                            // 0xDC8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         BreakFall;                                         // 0xDC9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85C2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              InAirRotation;                                     // 0xDD0(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                              LocoControlRotation;                               // 0xDE8(0x18)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                       PreviousAimYaw;                                    // 0xE00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       AimYawRate;                                        // 0xE08(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRALS_MovementSettings                CurrentMovementSettings;                           // 0xE10(0x20)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                               LastRagdollVelocity;                               // 0xE30(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               RALS_PreviousVelocity;                             // 0xE48(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ERALSMovementState                PrevMovementState;                                 // 0xE60(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85C6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       ThirdPersonFOV;                                    // 0xE68(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FirstPersonFOV;                                    // 0xE70(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RightShoulder;                                     // 0xE78(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85C9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       ServerRagdollPull;                                 // 0xE80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RagdollOnGround;                                   // 0xE88(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RagdollFaceUp;                                     // 0xE89(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85CB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FItemDataReference                    MainUnarmedItemReference;                          // 0xE90(0x80)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                               GlideRotationPivotOffset;                          // 0xF10(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85CE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            GlideSwingMeshOffset;                              // 0xF30(0x60)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEquippableItem*                       MainUnarmedItemActor;                              // 0xF90(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UEmoteDataAsset>        DanceEmote;                                        // 0xF98(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                         HasOffhandEquipped;                                // 0xFC0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85D1[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FItemDataReference                    OffhandUnarmedItemReference;                       // 0xFD0(0x80)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	class AEquippableItem*                       OffhandUnarmedItemActor;                           // 0x1050(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85D3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LerpDestinationTransform;                          // 0x1060(0x60)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EAlertnessLevelType               Alertness_Level;                                   // 0x10C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RootMotionFlag;                                    // 0x10C1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85D6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          TPSyncMontage;                                     // 0x10C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AEquippableItem*                       OffhandItem;                                       // 0x10D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         FixRotationAfterGlidingIsOver;                     // 0x10D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         TransitioningFromGliding;                          // 0x10D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_85DB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       Delta_Seconds;                                     // 0x10E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       FixingRotationAfterGlidingTotalTime;               // 0x10E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       SecondsToFixRotationAfterGliding;                  // 0x10F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class ABP_AnimCharacter_C* GetDefaultObj();

	void BPI_Get_CameraParameters(double* TP_FOV, double* FP_FOV, bool* RightShoulder);
	struct FVector BPI_Get_FP_CameraTarget(const struct FVector& CallFunc_GetSocketLocation_ReturnValue);
	struct FTransform BPI_Get_3P_PivotTarget(const struct FTransform& CallFunc_GetTransform_ReturnValue);
	void BPI_Get_3P_TraceParams(struct FVector* TraceOrigin, double* TraceRadius, enum class ETraceTypeQuery* TraceChannel, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue);
	void BPI_Get_CurrentStates(enum class EMovementMode* PawnMovementMode, enum class ERALSMovementState* MovementState, enum class ERALSMovementState* PrevMovementState, enum class ERALS_MovementAction* MovementAction, enum class ERALS_RotationMode* RotationMode, enum class ERALS_Gait* ActualGait, enum class ERALS_Stance* ActualStance, enum class ERALS_ViewMode* ViewMode, enum class ERALS_OverlayState* OverlayState);
	void BPI_Get_EssentialValues(struct FVector* Velocity, struct FVector* Acceleration, struct FVector* MovementInput, bool* IsMoving, bool* HasMovementInput, double* Speed, double* MovementInputAmount, struct FRotator* AimingRotation, double* AimYawRate);
	void SwimCheck(bool CallFunc_IsSwimming_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue);
	void FixRotationAfterGliding(float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FHitResult& CallFunc_K2_SetRelativeTransform_SweepHitResult, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_1, bool CallFunc_NotEqual_RotatorRotator_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, const struct FRotator& CallFunc_RLerp_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetRelativeTransform_SweepHitResult_1, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1, float CallFunc_RLerp_Alpha_ImplicitCast);
	void TryToStartFixingRotationAfterGliding(enum class ERALSMovementState Previous_Movement_State, enum class ERALSMovementState Current_Movement_State, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void OnCharacterMovementStateChanged(enum class ERALSMovementState PreviousMovementState, enum class ERALSMovementState CurrentMovementState);
	void CheckOffhandEmpty(const struct FGameplayTag& OffhandTag, const struct FGameplayTag& MainHandTag, class UBP_LoadoutComponent_C* CallFunc_GetLoadoutComponent_ReturnValue, class UBP_LoadoutComponent_C* CallFunc_GetLoadoutComponent_ReturnValue_1, class AEquippableItem* CallFunc_GetItemInSlot_ReturnValue, class AEquippableItem* CallFunc_GetItemInSlot_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, const struct FInventoryEntry& CallFunc_GetInventoryEntry_ReturnValue, const struct FInstanceData_Traits& CallFunc_TryGetItemTraits_Traits, enum class EGetResult CallFunc_TryGetItemTraits_Branches, bool CallFunc_IsValid_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_HasTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void IsOffhandItemSlot(const struct FGameplayTag& SlotTag, bool* IsOffhandItemSlot, bool CallFunc_MatchesTag_ReturnValue);
	void IsOffhandUnarmedItem(struct FInventoryEntry& Item, bool* bIsUnarmedItem, bool CallFunc_EqualEqual_FItemDataReference_ReturnValue);
	void GrantOffhandUnarmedItem(const struct FGameplayTag& UnarmedSlotTag, const struct FInventoryEntry& UnarmedItemEntry, class ULoadoutComponentBase* LoadoutComponent, bool CallFunc_HasAuthority_ReturnValue, TArray<class UItemInstanceData*>& Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, const struct FInventoryEntry& CallFunc_CreateNewItemEntry_NewEntry, enum class EGetResult CallFunc_CreateNewItemEntry_OutBranch, bool K2Node_SwitchEnum_CmpSuccess, class UBP_LoadoutComponent_C* CallFunc_GetLoadoutComponent_ReturnValue, bool CallFunc_GrantItemToLoadout_bSuccess, const struct FGameplayTag& CallFunc_GrantItemToLoadout_EquippedSlot, class AEquippableItem* CallFunc_GrantItemToLoadout_GrantedItem, bool CallFunc_ClearSlotWithTag_OutSuccess, class AEquippableItem* CallFunc_ClearSlotWithTag_OutSlotItem, const struct FGuid& CallFunc_ClearSlotWithTag_OutInstanceID);
	enum class ERALSMovementState GetRALSMovementState();
	class UBP_LoadoutComponent_C* GetLoadoutComponent(class AController* CallFunc_GetController_ReturnValue, class UBP_LoadoutComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void IsRightHandItemSlot(const struct FGameplayTag& SlotTag, bool* IsRightHandItemSlot, bool CallFunc_MatchesTag_ReturnValue);
	class USpringArmComponent* GetCameraSpringArm(enum class ECameraType CameraType, class USpringArmComponent* SpringArm, bool K2Node_SwitchEnum_CmpSuccess);
	void IsMainUnarmedItem(struct FInventoryEntry& Item, bool* bIsUnarmedItem, bool CallFunc_EqualEqual_FItemDataReference_ReturnValue);
	class UCameraComponent* GetCamera(enum class ECameraType CameraType, class UCameraComponent* Camera, bool K2Node_SwitchEnum_CmpSuccess);
	void GetEquippedItemBP(class ABP_EquippableItemBase_C** EquippableItem, class AEquippableItem* CallFunc_GetEquippedItem_ReturnValue, class ABP_EquippableItemBase_C* K2Node_DynamicCast_AsBP_Equippable_Item_Base, bool K2Node_DynamicCast_bSuccess);
	void GlideUpdate(bool CallFunc_IsGliding_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsMovingOnGround_ReturnValue);
	void GlideCheck(bool CallFunc_IsGliding_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue);
	void OnDamageActor(class AActor* Source, struct FGameplayTagContainer& EffectTags, float BaseDamage, struct FHitResult& HitResult, struct FTagValueContainer& TagValueContainer, TArray<struct FGameplayEffectCue>& GameplayCues, struct FTagValueContainer* AggregatedDamageTags, const struct FTagValueContainer& CallFunc_Damage_Actor_Internal_OutTagValueContainer, double CallFunc_Damage_Actor_Internal_BaseDamage_ImplicitCast);
	void SetInputValues(TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue);
	void MantleUpdate(bool CallFunc_HasMatchingGameplayTag_ReturnValue);
	void MantleCheck(double CallFunc_GetAnimCurveValue_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_HasMatchingGameplayTag_ReturnValue);
	void ClimbUpdate(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsClimbing_ReturnValue);
	void ClimbCheck(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsClimbing_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue);
	class UAnimMontage* GetGetUpAnimation(bool RagdollFaceUp);
	void RightVector(struct FVector* ForwardVector, struct FVector* RightVector, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_GetRightVector_ReturnValue);
	enum class EDrawDebugTrace GetTraceDebugType(enum class EDrawDebugTrace ShowTraceType, class APlayerController* CallFunc_GetPlayerController_ReturnValue, TScriptInterface<class IRALS_Controller_BPI_C> K2Node_DynamicCast_AsRALS_Controller_BPI, bool K2Node_DynamicCast_bSuccess, class ACharacter* CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter, bool CallFunc_BPI_Get_DebugInfo_DebugView, bool CallFunc_BPI_Get_DebugInfo_ShowHUD, bool CallFunc_BPI_Get_DebugInfo_ShowTraces, bool CallFunc_BPI_Get_DebugInfo_ShowDebugShapes, bool CallFunc_BPI_Get_DebugInfo_ShowLayerColors, bool CallFunc_BPI_Get_DebugInfo_Slomo, bool CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo);
	struct FVector GetCapsuleLocationFromBase(const struct FVector& BaseLocation, double ZOffset, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, double CallFunc_Add_DoubleDouble_A_ImplicitCast);
	struct FVector GetCapsuleBaseLocation(double ZOffset, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue, const struct FVector& CallFunc_GetUpVector_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_Add_DoubleDouble_A_ImplicitCast);
	struct FVector GetPlayerMovementInput(const struct FInputActionValue& CallFunc_GetBoundActionValue_ReturnValue, const struct FInputActionValue& CallFunc_GetBoundActionValue_ReturnValue_1, double CallFunc_Conv_InputActionValueToAxis1D_ReturnValue, double CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1, const struct FVector& CallFunc_GetControlForward_RightVector_ForwardVector, const struct FVector& CallFunc_GetControlForward_RightVector_RightVector, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue);
	void SetActorLocationDuringRagdoll();
	bool IsMoving_(double CallFunc_GetSpeed_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue);
	bool CanUpdateMovingRotation(enum class ENetRole CallFunc_GetLocalRole_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_HasMovementInput__ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsMoving__ReturnValue, double CallFunc_GetSpeed_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_HasAnyRootMotion_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2);
	double GetAnimCurveValue(class FName CurveName, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetCurveValue_ReturnValue, double K2Node_FunctionResult_ReturnValue_ImplicitCast);
	void SmoothCharacterRotation(const struct FRotator& Target, double TargetInterpSpeed_Const_, double ActorInterpSpeed_Smooth_, double CallFunc_GetWorldDeltaSeconds_ReturnValue, double CallFunc_GetWorldDeltaSeconds_ReturnValue_1, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FRotator& CallFunc_RInterpTo_ReturnValue, const struct FRotator& CallFunc_RInterpTo_Constant_ReturnValue, bool CallFunc_K2_SetActorRotation_ReturnValue, float CallFunc_RInterpTo_DeltaTime_ImplicitCast, float CallFunc_RInterpTo_Constant_DeltaTime_ImplicitCast, float CallFunc_RInterpTo_InterpSpeed_ImplicitCast, float CallFunc_RInterpTo_Constant_InterpSpeed_ImplicitCast);
	double CalculateGroundedRotationRate(double CallFunc_GetMappedSpeed_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, float CallFunc_GetFloatValue_InTime_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	void LimitRotation(double AimYawMin, double AimYawMax, double InterpSpeed, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_SelectFloat_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast_1, double CallFunc_InRange_FloatFloat_Value_ImplicitCast, double CallFunc_Greater_DoubleDouble_A_ImplicitCast, float CallFunc_MakeRotator_Yaw_ImplicitCast);
	void GetTargetMovementSettings(struct FRALS_MovementSettings* MovementSettings, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2, bool K2Node_SwitchEnum_CmpSuccess_3);
	double GetMappedSpeed(double LocCurrentSpeed, double LocSprintSpeed, double LocRunSpeed, double LocWalkSpeed, bool Temp_bool_Variable, bool Temp_bool_Variable_1, double CallFunc_GetSpeed_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue_1, double CallFunc_MapRangeClamped_ReturnValue_2, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, double K2Node_Select_Default, double K2Node_Select_Default_1, double K2Node_VariableSet_LocWalkSpeed_ImplicitCast, double K2Node_VariableSet_LocRunSpeed_ImplicitCast, double K2Node_VariableSet_LocSprintSpeed_ImplicitCast);
	void CalcCanSprint(bool* CanSprint, bool CallFunc_HasMovementInput__ReturnValue, float CallFunc_GetAccelerationRatio_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, float CallFunc_GetAccelerationRatio_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_GetCurrentAcceleration_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, double CallFunc_Abs_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, double CallFunc_Greater_DoubleDouble_A_ImplicitCast, double CallFunc_Greater_DoubleDouble_A_ImplicitCast_1, double CallFunc_Abs_A_ImplicitCast);
	void UpdateDynamicMovementSettings(enum class ERALS_Gait AllowedGait, const struct FRALS_MovementSettings& CallFunc_GetTargetMovementSettings_MovementSettings);
	void GetActualGait(enum class ERALS_Gait AllowedGait, enum class ERALS_Gait* ActualGait, double LocalSprintSpeed, double LocalRunSpeed, double LocalWalkSpeed, enum class EMovementSpeed Temp_byte_Variable, enum class EMovementSpeed Temp_byte_Variable_1, enum class EMovementSpeed Temp_byte_Variable_2, double CallFunc_GetSpeed_ReturnValue, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, float CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, bool K2Node_SwitchEnum_CmpSuccess, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, double K2Node_VariableSet_LocalSprintSpeed_ImplicitCast, double K2Node_VariableSet_LocalRunSpeed_ImplicitCast, double K2Node_VariableSet_LocalWalkSpeed_ImplicitCast);
	void GetAllowedGait(enum class ERALS_Gait* AllowedGait, bool CallFunc_IsMovementSpeedActive_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	struct FRotator GetLastMovementInputRotation(const struct FVector& CallFunc_GetCurrentAcceleration_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue);
	struct FRotator Rinterp_Control_Rotation(class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, double CallFunc_GetWorldDeltaSeconds_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FRotator& CallFunc_SelectRotator_ReturnValue, const struct FRotator& CallFunc_RInterpTo_ReturnValue, float CallFunc_RInterpTo_DeltaTime_ImplicitCast);
	void DrawDebugShapes(const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Vector_NormalUnsafe_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, double CallFunc_VSize_ReturnValue, bool CallFunc_EqualEqual_VectorVector_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue_1, const struct FRotator& CallFunc_GetLastVelocityRotation_ReturnValue, const struct FVector& CallFunc_Vector_NormalUnsafe_ReturnValue_1, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue_2, const struct FRotator& CallFunc_GetLastMovementInputRotation_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue_3, const struct FVector& CallFunc_Vector_NormalUnsafe_ReturnValue_2, class APlayerController* CallFunc_GetPlayerController_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, TScriptInterface<class IRALS_Controller_BPI_C> K2Node_DynamicCast_AsRALS_Controller_BPI, bool K2Node_DynamicCast_bSuccess, class ACharacter* CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter, bool CallFunc_BPI_Get_DebugInfo_DebugView, bool CallFunc_BPI_Get_DebugInfo_ShowHUD, bool CallFunc_BPI_Get_DebugInfo_ShowTraces, bool CallFunc_BPI_Get_DebugInfo_ShowDebugShapes, bool CallFunc_BPI_Get_DebugInfo_ShowLayerColors, bool CallFunc_BPI_Get_DebugInfo_Slomo, bool CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, double CallFunc_MapRangeClamped_ReturnValue, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_2, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_2, float CallFunc_GetMaxAcceleration_ReturnValue, float CallFunc_GetScaledCapsuleRadius_ReturnValue, float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_3, const struct FVector& CallFunc_GetCurrentAcceleration_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, double CallFunc_VSize_ReturnValue_1, bool CallFunc_EqualEqual_VectorVector_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_1, double CallFunc_MapRangeClamped_ReturnValue_1, const struct FVector& CallFunc_SelectVector_ReturnValue_1, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_Vector_NormalUnsafe_ReturnValue_3, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast, double CallFunc_MakeVector_Z_ImplicitCast, double CallFunc_MapRangeClamped_InRangeB_ImplicitCast, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1, double CallFunc_Divide_DoubleDouble_B_ImplicitCast);
	void UpdateGroundedRotation(uint8 CallFunc_MakeLiteralByte_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, bool CallFunc_IsServer_ReturnValue, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, double CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool CallFunc_UsingAThirdPersonCamera_ReturnValue, double CallFunc_Abs_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_1, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_2, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue_1, const struct FRotator& CallFunc_Multiply_RotatorFloat_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_3, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FHitResult& CallFunc_K2_AddActorWorldRotation_SweepHitResult, float CallFunc_BreakRotator_Roll_2, float CallFunc_BreakRotator_Pitch_2, float CallFunc_BreakRotator_Yaw_2, const struct FRotator& CallFunc_GetLastMovementInputRotation_ReturnValue, bool CallFunc_HasMovementInput__ReturnValue, float CallFunc_BreakRotator_Roll_3, float CallFunc_BreakRotator_Pitch_3, float CallFunc_BreakRotator_Yaw_3, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, const struct FRotator& CallFunc_GetLastVelocityRotation_ReturnValue, float CallFunc_BreakRotator_Roll_4, float CallFunc_BreakRotator_Pitch_4, float CallFunc_BreakRotator_Yaw_4, const struct FRotator& CallFunc_GetLastVelocityRotation_ReturnValue_1, const struct FRotator& CallFunc_MakeRotator_ReturnValue_2, float CallFunc_BreakRotator_Roll_5, float CallFunc_BreakRotator_Pitch_5, float CallFunc_BreakRotator_Yaw_5, const struct FRotator& CallFunc_MakeRotator_ReturnValue_3, float CallFunc_BreakRotator_Roll_6, float CallFunc_BreakRotator_Pitch_6, float CallFunc_BreakRotator_Yaw_6, const struct FRotator& CallFunc_MakeRotator_ReturnValue_4, float CallFunc_BreakRotator_Roll_7, float CallFunc_BreakRotator_Pitch_7, float CallFunc_BreakRotator_Yaw_7, const struct FRotator& CallFunc_MakeRotator_ReturnValue_5, double CallFunc_GetWorldDeltaSeconds_ReturnValue_1, bool CallFunc_CanUpdateMovingRotation_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, enum class ENetRole CallFunc_GetLocalRole_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_K2_SetActorRotation_ReturnValue, double CallFunc_CalculateGroundedRotationRate_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, double CallFunc_GetAnimCurveValue_ReturnValue, double CallFunc_CalculateGroundedRotationRate_ReturnValue_1, double CallFunc_Abs_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, double CallFunc_CalculateGroundedRotationRate_ReturnValue_2, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess_2, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, float CallFunc_NormalizeAxis_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_3, const struct FRotator& CallFunc_MakeRotator_ReturnValue_6, float CallFunc_Multiply_RotatorFloat_B_ImplicitCast, double CallFunc_Abs_A_ImplicitCast, double CallFunc_Add_DoubleDouble_B_ImplicitCast, float CallFunc_NormalizeAxis_Angle_ImplicitCast);
	void UpdateInAirRotation(float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, const struct FRotator& CallFunc_GetLastVelocityRotation_ReturnValue, float CallFunc_BreakRotator_Roll_2, float CallFunc_BreakRotator_Pitch_2, float CallFunc_BreakRotator_Yaw_2, bool K2Node_SwitchEnum_CmpSuccess, const struct FRotator& CallFunc_MakeRotator_ReturnValue_2);
	void CacheValues(float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FVector& CallFunc_GetVelocity_ReturnValue, double K2Node_VariableSet_PreviousAimYaw_ImplicitCast);
	void SetEssentialValues(bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue_1, bool CallFunc_IsFirstPersonCharacter_ReturnValue, bool CallFunc_IsUsingEmote_ReturnValue, class ABP_Character_C* K2Node_DynamicCast_AsBP_Character, bool K2Node_DynamicCast_bSuccess, enum class EAlertnessLevelType CallFunc_GetAlertnessLevel_AlertnessLevel, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FRotator& CallFunc_Rinterp_Control_Rotation_ReturnValue, enum class ENetRole CallFunc_GetLocalRole_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue_2, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, double CallFunc_GetWorldDeltaSeconds_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Abs_ReturnValue, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast);
	void RagdollUpdate(const struct FVector& NewLastRagdollVelocity, const struct FVector& CallFunc_GetPhysicsLinearVelocity_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_VSize_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue, float CallFunc_SetAllMotorsAngularDriveParams_InSpring_ImplicitCast);
	void UpdateCharacterMovement(enum class ERALS_Gait ActualGait, enum class ERALS_Gait AllowedGait, bool CallFunc_NotEqual_ByteByte_ReturnValue, enum class ERALS_Gait CallFunc_GetActualGait_ActualGait, enum class ERALS_Gait CallFunc_GetAllowedGait_AllowedGait);
	bool SetActorLocationAndRotation_UpdateTarget_(const struct FVector& NewLocation, const struct FRotator& NewRotation, bool bSweep, bool bTeleport, struct FHitResult* SweepHitResult, const struct FHitResult& CallFunc_K2_SetActorLocationAndRotation_SweepHitResult, bool CallFunc_K2_SetActorLocationAndRotation_ReturnValue);
	class UAnimMontage* GetRollAnimation();
	bool HasMovementInput_(const struct FVector& CallFunc_GetCurrentAcceleration_ReturnValue, double CallFunc_VSize_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue);
	double GetSpeed(const struct FVector& CallFunc_GetVelocity_ReturnValue, double CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue_1, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_VSize_ReturnValue_1);
	struct FRotator GetLastVelocityRotation(const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_GetLastUpdateVelocity_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_VSize_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, const struct FRotator& CallFunc_SelectRotator_ReturnValue);
	void SetMovementModel(const struct FRALS_MovementSettings_State& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
	void On_Begin_Play(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, uint8 CallFunc_MakeLiteralByte_ReturnValue, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, enum class ENetRole CallFunc_GetLocalRole_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsLocallyControlled_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue_1, bool CallFunc_IsValid_ReturnValue);
	void OnStanceChanged(enum class ERALS_Stance NewStance, enum class ERALS_Stance PreviousStance);
	void OnCharacterMovementModeChanged(enum class EMovementMode PrevMovementMode, enum class EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode, bool K2Node_SwitchEnum_CmpSuccess);
	void OnRep_OverlayState();
	void OnRep_ViewMode();
	void OnRep_RotationMode();
	void OnRep_MovementAction();
	void OnRep_MovementState();
	void RagdollEnd(bool CallFunc_IsDedicatedServer_ReturnValue, class UAnimMontage* CallFunc_GetGetUpAnimation_ReturnValue, float CallFunc_Montage_Play_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void RagdollStart(bool CallFunc_IsDedicatedServer_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue);
	void OnMovementActionChanged(enum class ERALS_MovementAction NewMovementAction, enum class ERALS_MovementAction PreviousMovementAction, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2);
	void OnOverlayStateChanged(enum class ERALS_OverlayState NewOverlayState, enum class ERALS_OverlayState PreviousOverlayState);
	void OnGaitChanged(enum class ERALS_Gait NewActualGait, enum class ERALS_Gait PreviousActualGait, bool CallFunc_IsLocallyControlled_ReturnValue);
	void OnRotationModeChanged(enum class ERALS_RotationMode NewRotationMode, enum class ERALS_RotationMode PreviousRotationMode);
	void OnMovementStateChanged(enum class ERALSMovementState NewMovementState, enum class ERALSMovementState PreviousMovementState, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_2, bool K2Node_SwitchEnum_CmpSuccess_3);
	void GetQuickbarActiveItemOverlayBank(enum class EAlertnessLevelType Alertness, TSoftClassPtr<class UOverlay_AnimB_Base_C>* MainOverlayBank, TSoftClassPtr<class UOverlay_AnimB_Base_C>* OffhandOverlayBank, const struct FS_OverlayBankSet& OffhandBankSet, TSoftClassPtr<class UOverlay_AnimB_Base_C> OffhandOverlayBankClass, TSoftClassPtr<class UOverlay_AnimB_Base_C> MainOverlayBankClass, const struct FS_OverlayBankSet& BankSet, class AEquippableItem* CallFunc_GetOffhandEquippedItem_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, const struct FS_OverlayBankSet& CallFunc_GetItemOverlayBankSet_OverlayBankSet, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2, bool K2Node_SwitchEnum_CmpSuccess_3, class AEquippableItem* CallFunc_GetEquippedItem_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference_1, const struct FS_OverlayBankSet& CallFunc_GetItemOverlayBankSet_OverlayBankSet_1);
	void ProcessTagChanges(const struct FGameplayTag& Tag, int32 Count, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_RemoveActiveGameplayEffect_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue);
	void ClearSlot(class AEquippableItem* Item, bool CheckSlots, bool EquipMainDefault, class ABP_EquippableItemBase_C* K2Node_DynamicCast_AsBP_Equippable_Item_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsOffhandUnarmedItem_bIsUnarmedItem, bool CallFunc_IsMainUnarmedItem_bIsUnarmedItem, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsRightHandItemSlot_IsRightHandItemSlot, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_HasAuthority_ReturnValue);
	void GetQuickbarActiveItemType(const struct FGameplayTag& QuickbarTag, enum class EItemType* ItemType, class AEquippableItem* Temp_object_Variable, TScriptInterface<class ILoadoutReadInterface> K2Node_DynamicCast_AsLoadout_Read_Interface, bool K2Node_DynamicCast_bSuccess, class AEquippableItem* CallFunc_GetEquippedItem_ReturnValue, enum class EItemType CallFunc_GetItemType_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void OnDeathHandleLoadout(class AEquippableItem* Temp_object_Variable, TScriptInterface<class ILoadoutReadInterface> CallFunc_GetOffhandEquippedItem_self_CastInput, class AEquippableItem* CallFunc_GetOffhandEquippedItem_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, TScriptInterface<class ILoadoutReadInterface> CallFunc_GetOffhandEquippedItem_self_CastInput_1, class AEquippableItem* CallFunc_GetOffhandEquippedItem_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class ILoadoutReadInterface> K2Node_DynamicCast_AsLoadout_Read_Interface, bool K2Node_DynamicCast_bSuccess, class AEquippableItem* CallFunc_GetEquippedItem_ReturnValue);
	void EquipNonQuickbarItem(const struct FGuid& InstanceID, bool* Success, class AEquippableItem** EquippedItem, const struct FItemDataReference& ItemId, const struct FInventoryEntry& InstanceEntry, const struct FGameplayTag& SlotTag, class AController* CallFunc_GetController_ReturnValue, class UBP_LoadoutComponent_C* CallFunc_GetComponentByClass_ReturnValue, class AController* CallFunc_GetController_ReturnValue_1, const class FString& CallFunc_GetFunctionName_ReturnValue, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class UInventoryComponentBase* CallFunc_GetComponentByClass_ReturnValue_1, const class FString& CallFunc_GetFunctionName_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, TScriptInterface<class IItemContainer> CallFunc_GetBackpack_Container, bool CallFunc_GetBackpack_ReturnValue, const class FString& CallFunc_Conv_GuidToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const struct FInventoryEntry& CallFunc_GetItem_Entry, bool CallFunc_GetItem_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, bool CallFunc_GrantItemToLoadout_bSuccess, const struct FGameplayTag& CallFunc_GrantItemToLoadout_EquippedSlot, class AEquippableItem* CallFunc_GrantItemToLoadout_GrantedItem, const class FString& CallFunc_GetDebugStringFromGameplayTag_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_GetItemIdDebugString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const struct FItemData& CallFunc_TryGetItemData_ItemData, enum class EGetResult CallFunc_TryGetItemData_Branches, const struct FItemData_Equippable& CallFunc_TryGetItemDataEquippable_OutData, enum class EGetResult CallFunc_TryGetItemDataEquippable_Branches, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1);
	void RebuildLoadout(TArray<struct FS_LoadoutRebuild>& RebuildData, const struct FGameplayTag& OffhandSlotTag, const struct FGameplayTag& UnarmedSlotTag, const struct FInventoryEntry& InventoryEntry, const struct FGameplayTag& CurrentSlotTag, const struct FS_LoadoutRebuild& CurrentLoadoutRebuild, bool CallFunc_HasAuthority_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsOffhandItemSlot_IsOffhandItemSlot, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsRightHandItemSlot_IsRightHandItemSlot, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, class UBP_LoadoutComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_GetDebugStringFromGameplayTag_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_GuidToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const struct FS_LoadoutRebuild& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GrantItemToLoadout_bSuccess, const struct FGameplayTag& CallFunc_GrantItemToLoadout_EquippedSlot, class AEquippableItem* CallFunc_GrantItemToLoadout_GrantedItem, bool CallFunc_GetInventoryItemFromBackpack_bSuccess, const struct FInventoryEntry& CallFunc_GetInventoryItemFromBackpack_InventoryEntry);
	void ClearSlotWithItemID(const struct FItemDataReference& ItemId, class UBP_LoadoutComponent_C* CallFunc_GetLoadoutComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ClearSlotWithItemID_OutSuccess, class AEquippableItem* CallFunc_ClearSlotWithItemID_OutSlotItem, const struct FGuid& CallFunc_ClearSlotWithItemID_OutInstanceID, bool CallFunc_HasAuthority_ReturnValue);
	void ClearSlotWithInstanceID(const struct FGuid& InstanceID, class AEquippableItem* Item, class UBP_LoadoutComponent_C* CallFunc_GetLoadoutComponent_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_ClearSlotWithInstanceID_OutSuccess, class AEquippableItem* CallFunc_ClearSlotWithInstanceID_OutSlotItem);
	void ClearSlotWithTag(const struct FGameplayTag& SlotTag, class UBP_LoadoutComponent_C* CallFunc_GetLoadoutComponent_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ClearSlotWithTag_OutSuccess, class AEquippableItem* CallFunc_ClearSlotWithTag_OutSlotItem, const struct FGuid& CallFunc_ClearSlotWithTag_OutInstanceID);
	void SpawnLoadoutItem(const struct FInventoryEntry& ItemEntry, const struct FGameplayTag& SlotTag, bool* bSuccess, class AEquippableItem** LoadoutItem, class ABP_EquippableItemBase_C* Item, const class FString& CallFunc_GetItemIdDebugString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, class ABP_EquippableItemBase_C* CallFunc_CreateEquippableItem_ReturnValue, bool CallFunc_CreateEquippableItem_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void GrantMainUnarmedItem(const struct FGameplayTag& UnarmedSlotTag, const struct FInventoryEntry& UnarmedItemEntry, class ULoadoutComponentBase* LoadoutComponent, bool CallFunc_HasAuthority_ReturnValue, TArray<class UItemInstanceData*>& Temp_object_Variable, class UBP_LoadoutComponent_C* CallFunc_GetLoadoutComponent_ReturnValue, bool CallFunc_GrantItemToLoadout_bSuccess, const struct FGameplayTag& CallFunc_GrantItemToLoadout_EquippedSlot, class AEquippableItem* CallFunc_GrantItemToLoadout_GrantedItem, bool CallFunc_ClearSlotWithTag_OutSuccess, class AEquippableItem* CallFunc_ClearSlotWithTag_OutSlotItem, const struct FGuid& CallFunc_ClearSlotWithTag_OutInstanceID, bool CallFunc_IsValid_ReturnValue, const struct FInventoryEntry& CallFunc_CreateNewItemEntry_NewEntry, enum class EGetResult CallFunc_CreateNewItemEntry_OutBranch, bool K2Node_SwitchEnum_CmpSuccess);
	void GrantItemToLoadout(const struct FGameplayTag& SlotTag, const struct FInventoryEntry& ItemEntry, bool* bSuccess, struct FGameplayTag* EquippedSlot, class AEquippableItem** GrantedItem, const struct FLoadoutSlot& LoadoutSlot, class UBP_CharacterCustomization_Component_C* CustomizationComp, class AEquippableItem* LoadoutItem, int32 TargetIndex, const struct FGameplayTag& TargetSlot, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsOffhandUnarmedItem_bIsUnarmedItem, bool CallFunc_IsMainUnarmedItem_bIsUnarmedItem, class UBP_LoadoutComponent_C* CallFunc_GetLoadoutComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class UBP_CharacterCustomization_Component_C* CallFunc_GetComponentByClass_ReturnValue, const class FString& CallFunc_GetItemIdDebugString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_SpawnLoadoutItem_bSuccess, class AEquippableItem* CallFunc_SpawnLoadoutItem_LoadoutItem, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_PutItemInSlot_OutSuccess, const struct FGameplayTag& CallFunc_PutItemInSlot_OutDestinationSlotTag, const struct FLoadoutSlot& CallFunc_PutItemInSlot_OutLoadoutSlot);
	void CreateAnimationBank(const struct FItemDataReference& RowName, class UClass* AnimBankFP, class UClass* AnimBankTP, class UClass* CallFunc_GetItemAnimationBanks_AnimBank_FP, bool CallFunc_IsValidClass_ReturnValue, const class FString& CallFunc_GetItemIdDebugString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class UAnimB_Base_FP_C* CallFunc_SpawnObject_ReturnValue);
	void UserConstructionScript(class UCameraComponent* CallFunc_GetCamera_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue);
	void LerpTimeline__FinishedFunc();
	void LerpTimeline__UpdateFunc();
	void OnNotifyEnd_B40096BE44A03C1A8AFDCF8BCB2A548D(class FName NotifyName);
	void OnNotifyBegin_B40096BE44A03C1A8AFDCF8BCB2A548D(class FName NotifyName);
	void OnInterrupted_B40096BE44A03C1A8AFDCF8BCB2A548D(class FName NotifyName);
	void OnBlendOut_B40096BE44A03C1A8AFDCF8BCB2A548D(class FName NotifyName);
	void OnCompleted_B40096BE44A03C1A8AFDCF8BCB2A548D(class FName NotifyName);
	void BPI_Set_ViewMode(enum class ERALS_ViewMode NewViewMode);
	void BPI_Set_MovementState(enum class ERALSMovementState NewMovementState);
	void BPI_Set_MovementAction(enum class ERALS_MovementAction NewMovementAction);
	void BPI_Set_RotationMode(enum class ERALS_RotationMode NewRotationMode);
	void BPI_Set_Gait(enum class ERALS_Gait NewGait);
	void BPI_Set_OverlayState(enum class ERALS_OverlayState NewOverlayState);
	void Server_Set_Movement_State(enum class ERALSMovementState MovementState);
	void Server_Set_Movement_Action(enum class ERALS_MovementAction MovementAction);
	void Server_Set_Rotation_Mode(enum class ERALS_RotationMode RotationMode);
	void Server_Set_Gait(enum class ERALS_Gait Gait);
	void Server_Set_Overlay_State(enum class ERALS_OverlayState OverlayState);
	void Server_Roll_Event();
	void Multicast_Roll_Event();
	void Multicast_On_Jumped();
	void Server_Breakfall();
	void Multicast_Breakfall();
	void Server_Ragdoll_Start();
	void Multicast_Ragdoll_Start();
	void Server_Ragdoll_End();
	void Multicast_Ragdoll_End();
	void ServerSetRagdollLocation(const struct FVector& RagdollLocation);
	void RALS_BeginPlay();
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void K2_OnMovementModeChanged(enum class EMovementMode PrevMovementMode, enum class EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void OnJumped();
	void OnLanded(struct FHitResult& Hit);
	void Breakfall_Event();
	void Roll_Event();
	void Client_Breakfall();
	void Client_Roll();
	void RALS_Tick();
	void Client_On_Jumped();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Server_EquipNonQuickbarItem(const struct FGuid& InstanceID);
	void OnDamageReceived(float Damage, class AActor* Target, class AActor* Source, struct FGameplayTagContainer& EffectTags, struct FHitResult& HitResult, struct FTagValueContainer& TagValueContainer);
	void CrossServer_TransferProxyToCharacter(class AItemProxyBase* ItemProxy);
	void CrossServerSendGameplayEventToActor(struct FGameplayTag& EventTag, struct FGameplayEventData& Payload);
	void OnASCTagCountChanged(struct FGameplayTag& Tag, int32 Count);
	void OnProxyJump();
	void OnProxyLand(const struct FHitResult& Hit);
	void Server_ClearSlotWithInstanceID(const struct FGuid& InstanceID);
	void Server_ClearSlotWithTag(const struct FGameplayTag& SlotTag);
	void Event_Custom_Lerp(const struct FTransform& FromTransform, const struct FTransform& ToTransform, double Duration);
	void Event_Cancel_Custom_Lerp();
	void Multicast_Play_MotionWarp_Montage(class FName SyncPoint, const struct FVector& SyncPointPosition, const struct FRotator& SyncPointRotation, class UAnimMontage* TP_Montage);
	void Multicast_Cancel_MotionWarp_Montage(class UAnimMontage* TP_Montage, double BlendOutTime);
	void ExecuteUbergraph_BP_AnimCharacter(int32 EntryPoint, class AController* CallFunc_GetController_ReturnValue, class ANWXPlayerController* K2Node_DynamicCast_AsNWXPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanUseSupportCommands_ReturnValue, enum class ENetRole CallFunc_GetLocalRole_ReturnValue, enum class ENetRole CallFunc_GetLocalRole_ReturnValue_1, class FName Temp_name_Variable, enum class ERALS_ViewMode K2Node_Event_NewViewMode, class FName K2Node_CustomEvent_NotifyName, enum class ERALSMovementState K2Node_Event_NewMovementState, bool CallFunc_NotEqual_ByteByte_ReturnValue, enum class ERALS_MovementAction K2Node_Event_NewMovementAction, bool CallFunc_NotEqual_ByteByte_ReturnValue_1, enum class ERALS_RotationMode K2Node_Event_NewRotationMode, bool CallFunc_NotEqual_ByteByte_ReturnValue_2, enum class ERALS_Gait K2Node_Event_NewGait, bool CallFunc_NotEqual_ByteByte_ReturnValue_3, enum class ERALS_OverlayState K2Node_Event_NewOverlayState, bool CallFunc_NotEqual_ByteByte_ReturnValue_4, enum class ENetRole CallFunc_GetLocalRole_ReturnValue_2, enum class ERALSMovementState K2Node_CustomEvent_MovementState, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, enum class ENetRole CallFunc_GetLocalRole_ReturnValue_3, enum class ERALS_MovementAction K2Node_CustomEvent_MovementAction, enum class ERALS_RotationMode K2Node_CustomEvent_RotationMode, uint8 CallFunc_MakeLiteralByte_ReturnValue, enum class ERALS_Gait K2Node_CustomEvent_Gait, bool CallFunc_HasAuthority_ReturnValue, enum class ERALS_OverlayState K2Node_CustomEvent_OverlayState, class FName K2Node_CustomEvent_NotifyName_1, const struct FVector& K2Node_CustomEvent_RagdollLocation, enum class ENetRole CallFunc_GetLocalRole_ReturnValue_4, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsValid_ReturnValue, float K2Node_Event_HalfHeightAdjust_1, float K2Node_Event_ScaledHalfHeightAdjust_1, float K2Node_Event_HalfHeightAdjust, float K2Node_Event_ScaledHalfHeightAdjust, enum class EMovementMode K2Node_Event_PrevMovementMode, enum class EMovementMode K2Node_Event_NewMovementMode, uint8 K2Node_Event_PrevCustomMode, uint8 K2Node_Event_NewCustomMode, bool CallFunc_IsLocallyControlled_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue_1, const struct FHitResult& K2Node_Event_Hit, enum class ENetRole CallFunc_GetLocalRole_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_HasAuthority_ReturnValue_2, class UAnimMontage* CallFunc_GetRollAnimation_ReturnValue, float CallFunc_Montage_Play_ReturnValue, class UAnimMontage* CallFunc_GetRollAnimation_ReturnValue_1, float CallFunc_Montage_Play_ReturnValue_1, class UAnimMontage* CallFunc_GetRollAnimation_ReturnValue_2, float CallFunc_Montage_Play_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_4, TScriptInterface<class IRALS_Animation_BPI_C> K2Node_DynamicCast_AsRALS_Animation_BPI, bool K2Node_DynamicCast_bSuccess_1, class UAnimMontage* CallFunc_GetRollAnimation_ReturnValue_3, bool CallFunc_IsLocallyControlled_ReturnValue_3, float CallFunc_Montage_Play_ReturnValue_3, bool K2Node_SwitchEnum_CmpSuccess, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_IsLocallyControlled_ReturnValue_4, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, bool CallFunc_K2_SetActorRotation_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, enum class ENetRole CallFunc_GetLocalRole_ReturnValue_6, bool CallFunc_K2_SetActorRotation_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, float CallFunc_BreakRotator_Roll_2, float CallFunc_BreakRotator_Pitch_2, float CallFunc_BreakRotator_Yaw_2, class AEquippableItem* CallFunc_GetOffhandEquippedItem_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_2, class FName K2Node_CustomEvent_NotifyName_2, float CallFunc_BreakRotator_Roll_3, float CallFunc_BreakRotator_Pitch_3, float CallFunc_BreakRotator_Yaw_3, const struct FRotator& CallFunc_MakeRotator_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_5, TScriptInterface<class IRALS_Animation_BPI_C> K2Node_DynamicCast_AsRALS_Animation_BPI_1, bool K2Node_DynamicCast_bSuccess_2, uint8 CallFunc_MakeLiteralByte_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, uint8 CallFunc_MakeLiteralByte_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, uint8 CallFunc_MakeLiteralByte_ReturnValue_3, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, uint8 CallFunc_MakeLiteralByte_ReturnValue_4, bool CallFunc_EqualEqual_ByteByte_ReturnValue_4, float K2Node_Event_DeltaSeconds, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll_4, float CallFunc_BreakRotator_Pitch_4, float CallFunc_BreakRotator_Yaw_4, const struct FRotator& CallFunc_MakeRotator_ReturnValue_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, class AController* CallFunc_GetController_ReturnValue_1, uint8 CallFunc_MakeLiteralByte_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_EqualEqual_ByteByte_ReturnValue_5, const struct FGuid& K2Node_CustomEvent_InstanceID_1, float K2Node_Event_Damage, class AActor* K2Node_Event_Target, class AActor* K2Node_Event_Source, const struct FGameplayTagContainer& K2Node_Event_EffectTags, const struct FHitResult& K2Node_Event_HitResult, const struct FTagValueContainer& K2Node_Event_TagValueContainer, bool CallFunc_EquipNonQuickbarItem_Success, class AEquippableItem* CallFunc_EquipNonQuickbarItem_EquippedItem, class AItemProxyBase* K2Node_CustomEvent_ItemProxy, bool CallFunc_IsValid_ReturnValue_7, const struct FGameplayTag& K2Node_Event_EventTag, const struct FGameplayEventData& K2Node_Event_Payload, int32 CallFunc_SendGameplayEventToActor_ReturnValue, const struct FGameplayTag& K2Node_Event_Tag, int32 K2Node_Event_Count, class FName K2Node_CustomEvent_NotifyName_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, const struct FHitResult& K2Node_CustomEvent_Hit, const struct FGuid& K2Node_CustomEvent_InstanceID, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, int32 CallFunc_SendGameplayEventToActor_ReturnValue_1, enum class ENetRole CallFunc_GetLocalRole_ReturnValue_7, class FName K2Node_CustomEvent_NotifyName_4, enum class ENetRole CallFunc_GetLocalRole_ReturnValue_8, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, const struct FGameplayTag& K2Node_CustomEvent_SlotTag, const struct FTransform& K2Node_CustomEvent_FromTransform, const struct FTransform& K2Node_CustomEvent_ToTransform, double K2Node_CustomEvent_Duration, double CallFunc_SafeDivide_ReturnValue, uint8 CallFunc_MakeLiteralByte_ReturnValue_6, uint8 CallFunc_MakeLiteralByte_ReturnValue_7, bool CallFunc_EqualEqual_ByteByte_ReturnValue_6, bool CallFunc_EqualEqual_ByteByte_ReturnValue_7, uint8 CallFunc_MakeLiteralByte_ReturnValue_8, bool CallFunc_EqualEqual_ByteByte_ReturnValue_8, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue, const struct FTransform& CallFunc_TLerp_ReturnValue, bool CallFunc_EqualEqual_TransformTransform_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorTransform_SweepHitResult, bool CallFunc_K2_SetActorTransform_ReturnValue, class FName K2Node_CustomEvent_SyncPoint, const struct FVector& K2Node_CustomEvent_SyncPointPosition, const struct FRotator& K2Node_CustomEvent_SyncPointRotation, class UAnimMontage* K2Node_CustomEvent_TP_Montage_1, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_BooleanNOR_ReturnValue, const struct FMotionWarpingTarget& K2Node_MakeStruct_MotionWarpingTarget, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_IsEquipped_ReturnValue, class UAnimMontage* K2Node_CustomEvent_TP_Montage, double K2Node_CustomEvent_BlendOutTime, class UPlayMontageCallbackProxy* CallFunc_CreateProxyObjectForPlayMontage_ReturnValue, bool CallFunc_IsValid_ReturnValue_10, bool CallFunc_IsValid_ReturnValue_11, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue_1, double K2Node_VariableSet_Delta_Seconds_ImplicitCast, double CallFunc_OnDamageReceived_Base_Damage_ImplicitCast, float CallFunc_SetPlayRate_NewRate_ImplicitCast, float CallFunc_Montage_Stop_InBlendOutTime_ImplicitCast);
	void OnLoadoutRebuilt__DelegateSignature();
};

}


