#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BPFL_Core.BPFL_Core_C
class UBPFL_Core_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBPFL_Core_C* GetDefaultObj();

	void GetFloatAttributeFromInitialStats(class UDataTable* IntialStats, const struct FGameplayAttribute& TargetAttribute, class UObject* __WorldContext, double* BaseValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Array_Get_Item, const struct FAttributeMetaData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 CallFunc_Len_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, double K2Node_FunctionResult_BaseValue_ImplicitCast);
	struct FHitResult GetHitResultFromOverlapResult(struct FOverlapResultWraper& OverlapResultWrapper, class UObject* __WorldContext, class AActor* CallFunc_GetActor_OutActor, int32 CallFunc_GetItemIndex_OutIndex, class UPrimitiveComponent* CallFunc_GetComponent_OutComponent, const struct FHitResult& CallFunc_MakeHitResult_ReturnValue);
	void GetDistanceFromPointToBox(const struct FVector& Point, const struct FBox& Box, const struct FTransform& BoxWorldTransform, class UObject* __WorldContext, double* Distance, const struct FVector& BoxMax, const struct FVector& BoxMin, const struct FVector& BoxSpacePoint, const struct FVector& CallFunc_InverseTransformLocation_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Vector_ComponentMax_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Vector_ComponentMax_ReturnValue_1, const struct FVector& CallFunc_Vector_ComponentMax_ReturnValue_2, double CallFunc_VSize_ReturnValue);
	void AbilityPayloadFromTagValueContainer(const struct FTagValueContainer& Container, class UObject* __WorldContext, struct FGameplayAbilityPayloadHandle* Payload, const struct FGameplayAbilityPayloadHandle& LPayload, TArray<float>& CallFunc_Values_ReturnValue, TArray<struct FGameplayTag>& CallFunc_Keys_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromArray_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FGameplayAbilityPayloadHandle& CallFunc_AbilityPayloadFromGameplayTagContainer_ReturnValue, double CallFunc_Array_Get_Item, const struct FGameplayAbilityPayloadHandle& CallFunc_AbilityPayloadFromFloat_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FGameplayAbilityPayloadHandle& CallFunc_AppendPayloadHandle_ReturnValue, TArray<double>& CallFunc_Array_Length_TargetArray_ImplicitCast, TArray<double>& CallFunc_Array_Get_TargetArray_ImplicitCast, float CallFunc_AbilityPayloadFromFloat_Value_ImplicitCast);
	void TagValueContainerFromAbilityPayload(const struct FGameplayAbilityPayloadHandle& Payload, class UObject* __WorldContext, struct FTagValueContainer* Container, const struct FTagValueContainer& Index, const struct FTagValueContainer& LTagValueContainer, int32 Temp_int_Array_Index_Variable, bool CallFunc_AbilityPayloadHasGameplayTagContainer_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_BuildString_Int_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, float CallFunc_GetFloatFromAbilityPayload_ReturnValue, bool CallFunc_AbilityPayloadHasFloat_ReturnValue, const struct FGameplayTagContainer& CallFunc_GetGameplayTagContainerFromAbilityPayload_ReturnValue, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, int32 CallFunc_Array_Length_ReturnValue, const struct FGameplayTag& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void IsValidRowHandle(const struct FDataTableRowHandle& RowHandle, class UObject* __WorldContext, bool* IsValid, bool CallFunc_IsValid_ReturnValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void RowHandlesEqual(const struct FDataTableRowHandle& A, const struct FDataTableRowHandle& B, class UObject* __WorldContext, bool* Equal, const TArray<struct FDataTableRowHandle>& LRowHandles, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetDataTableRowHandles(class UDataTable* DataTable, class UObject* __WorldContext, TArray<struct FDataTableRowHandle>* RowHandles, const TArray<struct FDataTableRowHandle>& LRowHandles, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Array_Get_Item, const struct FDataTableRowHandle& K2Node_MakeStruct_DataTableRowHandle, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Check_Are_Row_Handles_Equal(const struct FDataTableRowHandle& A, const struct FDataTableRowHandle& B, class UObject* __WorldContext, bool* Is_Equal, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void FixedRangeTemp(double Distance, double Gravity, double Speed, class UObject* __WorldContext, double* LaunchAngle, double LRealGravity, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity, bool CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue, double CallFunc_ConvertUnrealGravity_RealGravity, double CallFunc_VSize_ReturnValue, const class FString& CallFunc_Conv_DoubleToString_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, const class FString& CallFunc_Conv_RotatorToString_ReturnValue, double CallFunc_GetPI_ReturnValue, double CallFunc_Square_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_SafeDivide_ReturnValue, double CallFunc_DegAsin_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue);
	void ConvertUnrealGravity(double UnrealGravity, class UObject* __WorldContext, double* RealGravity, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_NotEqual_DoubleDouble_ReturnValue);
	void CalculateFixedRangeVariableAngleVelocity(double ProjectileSpeed, double LaunchAngle, double InitialHeight, double Gravity, class UObject* __WorldContext, double* Distance, double SqrtOperand, double RealGravity, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, const class FString& CallFunc_Conv_DoubleToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Conv_DoubleToString_ReturnValue_1, const class FString& CallFunc_Conv_DoubleToString_ReturnValue_2, const class FString& CallFunc_Conv_DoubleToString_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, double CallFunc_FMax_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, double CallFunc_Sqrt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, double CallFunc_DegTan_ReturnValue, double CallFunc_Square_ReturnValue, double CallFunc_DegTan_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Square_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_MultiplyMultiply_FloatFloat_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_DegAcos_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_Square_ReturnValue_2, double CallFunc_Square_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, double CallFunc_DegCos_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_5, double CallFunc_Square_ReturnValue_4, double CallFunc_Multiply_DoubleDouble_ReturnValue_6, double CallFunc_Multiply_DoubleDouble_ReturnValue_7, double CallFunc_Multiply_DoubleDouble_ReturnValue_8, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_9, double CallFunc_SafeDivide_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_ConvertUnrealGravity_RealGravity);
	void ClosestPointOnLineSegmentToRay(const struct FVector& SegStart, const struct FVector& SegEnd, const struct FVector& RayStart, const struct FVector& RayDir, class UObject* __WorldContext, struct FVector* ClosestPoint, double DistanceAlongSegment, const struct FVector& Segment, double RayDirDotSegDir, const struct FVector& SegDir, double CallFunc_Abs_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_2, double CallFunc_VSize_ReturnValue, double CallFunc_VSize_ReturnValue_1, bool CallFunc_Less_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, double CallFunc_VSize_ReturnValue_2, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_3, double CallFunc_Dot_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_4, double CallFunc_Dot_VectorVector_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Dot_VectorVector_ReturnValue_2, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_SafeDivide_ReturnValue, double CallFunc_FClamp_ReturnValue);
	void AddVectorNoiseUniform(struct FVector& TargetVector, double NormalizedMagnitude, class UObject* __WorldContext, double CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_RandomUnitVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1);
	void AddVectorNoise(struct FVector& TargetVector, const struct FVector& VarianceVector, class UObject* __WorldContext, const struct FVector& CallFunc_RandomUnitVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_1, double CallFunc_BreakVector_X_2, double CallFunc_BreakVector_Y_2, double CallFunc_BreakVector_Z_2, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	void CalculateFixedRangeSpeed(class UObject* __WorldContext);
	void CalculateFixedRangeVelocity(class UObject* __WorldContext);
	void GetPlayerControllerFromCharacter(class ACharacter* Character, class UObject* __WorldContext, class ANWXPlayerController** PlayerController, bool CallFunc_IsValid_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class ANWXPlayerController* K2Node_DynamicCast_AsNWXPlayer_Controller, bool K2Node_DynamicCast_bSuccess);
	void GetTargetGroundLevel(const struct FVector& Location, double TraceLimit, class UObject* __WorldContext, bool* HitDetected, struct FVector* GroundLocation, struct FVector* GroundNormal, TArray<class AActor*>& Temp_object_Variable, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit, bool CallFunc_LineTraceSingleForObjects_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void GetRandomPointInBoundingBox(const struct FVector& BoxExtents, bool SphericalDistribution, class UObject* __WorldContext, struct FVector* RandomPoint, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_RandomFloatInRange_ReturnValue_1, double CallFunc_RandomFloatInRange_ReturnValue_2, double CallFunc_RandomFloatInRange_ReturnValue_3, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_4, double CallFunc_RandomFloatInRange_ReturnValue_5, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, const struct FVector& CallFunc_RandomUnitVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue_1, const struct FVector& CallFunc_SelectVector_ReturnValue);
	void WasSpawnedOnClient(class AActor* Actor, class UObject* __WorldContext, bool* WasSpawnedOnClient, enum class ENetRole CallFunc_GetLocalRole_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void TeleportPawnToLocation(class APawn* Pawn, const struct FVector& DestLocation, const struct FRotator& DestRotation, class UObject* __WorldContext, bool* Result, bool CallFunc_IsValid_ReturnValue, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_K2_TeleportTo_ReturnValue);
	void CalculateFixedLaunchAngleSpeed(const struct FVector& SourceLocation, const struct FVector& TargetLocation, double LaunchAngle, double Gravity, class UObject* __WorldContext, double* ProjectileSpeed, double SqrtOperand, double Angle, double RealGravity, double Divisor, double Distance2D, double Height, double CallFunc_CalculateProjectileSpeed_Speed, double CallFunc_DegreesToRadians_ReturnValue, double CallFunc_Vector_Distance2D_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_ConvertUnrealGravity_RealGravity, double CallFunc_Subtract_DoubleDouble_ReturnValue);
	void CalculateFixedLaunchAngleVelocity(const struct FVector& SourceLocation, const struct FVector& TargetLocation, double LaunchAngle, double Gravity, class UObject* __WorldContext, struct FVector* FixedAngleVelocity, double* ProjectileSpeed, double RealGravity, double Divisor, double X, double Y, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, double CallFunc_CalculateFixedLaunchAngleSpeed_ProjectileSpeed, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_MakeRotator_Pitch_ImplicitCast);
	void CalculateProjectileRange(double ProjectileSpeed, double LaunchAngle, double InitialHeight, double Gravity, class UObject* __WorldContext, double* Distance, double SqrtOperand, double RealGravity, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, const class FString& CallFunc_Conv_DoubleToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Conv_DoubleToString_ReturnValue_1, const class FString& CallFunc_Conv_DoubleToString_ReturnValue_2, const class FString& CallFunc_Conv_DoubleToString_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, double CallFunc_FMax_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, double CallFunc_Sqrt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, double CallFunc_DegTan_ReturnValue, double CallFunc_Square_ReturnValue, double CallFunc_DegTan_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Square_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_MultiplyMultiply_FloatFloat_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, double CallFunc_DegAcos_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_Square_ReturnValue_2, double CallFunc_Square_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_ReturnValue_4, double CallFunc_DegCos_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_5, double CallFunc_Square_ReturnValue_4, double CallFunc_Multiply_DoubleDouble_ReturnValue_6, double CallFunc_Multiply_DoubleDouble_ReturnValue_7, double CallFunc_Multiply_DoubleDouble_ReturnValue_8, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_9, double CallFunc_SafeDivide_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_10, bool CallFunc_NotEqual_DoubleDouble_ReturnValue);
	void CalculateProjectileSpeed(double Angle, double RealGravity, double Distance2D, double Height, class UObject* __WorldContext, double* Speed, double LSqrtOperand, double LDivisor, double CallFunc_Square_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Tan_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Cos_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Square_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue_1, double CallFunc_SafeDivide_ReturnValue, double CallFunc_SelectFloat_ReturnValue, double CallFunc_FMax_ReturnValue, double CallFunc_Sqrt_ReturnValue);
	void CopyAllMaterials_SkeletalMesh(class UPrimitiveComponent* TargetComponent, class USkeletalMesh* SourceMesh, class UObject* __WorldContext, TArray<struct FSkeletalMaterial>& CallFunc_GetMaterials_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const struct FSkeletalMaterial& CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetHealthPercentage(class UAbilitySystemComponent* AbilitySystem, class UObject* __WorldContext, bool* bSuccess, double* HealthPercentage, class AActor* OwningActor, bool CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, bool CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1, float CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, double CallFunc_SafeDivide_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, double CallFunc_SafeDivide_A_ImplicitCast, double CallFunc_Greater_DoubleDouble_A_ImplicitCast, double CallFunc_SafeDivide_B_ImplicitCast);
	void GetPlayerState(class AActor* Actor, class UObject* __WorldContext, class ANWXPlayerState** PlayerState, bool CallFunc_IsValid_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class AController* CallFunc_GetController_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, class ANWXPlayerState* K2Node_DynamicCast_AsNWXPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_3);
	void ValidateIsLocallyControlled(class APawn* Pawn, class UObject* __WorldContext, const class FString& CallFunc_GetDisplayName_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_IsValid_ReturnValue);
	void GetCollisionProfileName(enum class ECollisionProfiles ProfileEnum, class UObject* __WorldContext, class FName* ProfileName, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue);
	void GetGameState(class UObject* WorldContextObject, class UObject* __WorldContext, class ANWXGameStateBase** GameState, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class ANWXGameStateBase* K2Node_DynamicCast_AsNWXGame_State_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void GetGameMode(class UObject* WorldContextObject, class UObject* __WorldContext, class ANWXGameModeBase** GameMode, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class ANWXGameModeBase* K2Node_DynamicCast_AsNWXGame_Mode_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void TeleportActorToLocation(class AActor* TeleportingActor, const struct FVector& Location, class UObject* __WorldContext, bool CallFunc_IsValid_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue);
	void TeleportActorToTarget(class AActor* TeleportingActor, class AActor* Target, class UObject* __WorldContext, int32 MaxAttempts, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void ConeOverlapActors(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& Direction, double AngleInDegrees, double MaxRange, class UClass* ClassToFind, TArray<class AActor*>& ActorsToIgnore, class UObject* __WorldContext, TArray<class AActor*>* HitActors, class AActor** FirstHitActor, bool* Success, double NearestDistance, class AActor* NearestActor, const struct FVector& NormalizedDirection, double SinOfAngle, const struct FVector& SpherePos, double CurrentRadius, double CurrentDistance, double MinRadius, bool CallFunc_Greater_DoubleDouble_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, int32 Temp_int_Loop_Counter_Variable, double CallFunc_VSize_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_DegSin_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, double CallFunc_SafeDivide_ReturnValue, class AActor* CallFunc_Array_Get_Item, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, double CallFunc_VSize_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, float CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast);
};

}


