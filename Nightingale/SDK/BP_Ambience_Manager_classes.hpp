#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x5E0 (0x720 - 0x140)
// BlueprintGeneratedClass BP_Ambience_Manager.BP_Ambience_Manager_C
class UBP_Ambience_Manager_C : public UAmbienceManager
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x140(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                         CameraIsMoving;                                    // 0x148(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_887F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MaxTreeCountInner;                                 // 0x150(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxTreeCountOuter;                                 // 0x158(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       TreeAkComponentSpeed;                              // 0x160(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       TreeInnerZoneRadius;                               // 0x168(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       TreeOuterZoneRadius;                               // 0x170(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       TreeEmitterHeightOffset;                           // 0x178(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ShowOneShotDebugSpheres;                           // 0x180(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_8882[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          Ak2D;                                              // 0x188(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActorAndInstanceIds>          EligibleActorsAndInstances;                        // 0x190(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       TreeScanTickRateMoving;                            // 0x1A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       TreeScanTickRateStationary;                        // 0x1A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       TreeScanTickRate;                                  // 0x1B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WindTickRate;                                      // 0x1B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WindSpeed;                                         // 0x1C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WindOneShotMaxTime;                                // 0x1C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WindOneShotMinTime;                                // 0x1D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAkComponent*>                  AkComponentArray;                                  // 0x1D8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UAkComponent*                          AkWindOneShot;                                     // 0x1E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                       UpdateScanningFrequencyRate;                       // 0x1F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               LastKnownCameraLocation;                           // 0x1F8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       TreeInnerZoneRadiusSq;                             // 0x210(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       UpdateDynamicSimFrequencyRate;                     // 0x218(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               CurrentPlayerLocation;                             // 0x220(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               WindVector;                                        // 0x238(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       BiomeOneShotMaxRadius;                             // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       BiomeOneShotMinRadius;                             // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       TimeOfDayTickRate;                                 // 0x260(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       OS_Day_TODStartTime;                               // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       OS_Day_TODEndTime;                                 // 0x270(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       OS_Night_TODStartTime;                             // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       OS_Night_TODEndTime;                               // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           OS_Plsnt_Day_Curve;                                // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           OS_Plsnt_Night_Curve;                              // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_AudioTreeSet>               TreeLayers;                                        // 0x298(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UCurveFloat*                           OS_Tense_Day_Curve;                                // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           OS_Tense_Night_Curve;                              // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       Mood;                                              // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       OS_Plsnt_Mood_Start;                               // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       OS_Plsnt_Mood_End;                                 // 0x2C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       OS_Tense_Mood_Start;                               // 0x2D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       OS_Tense_Mood_End;                                 // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           OS_Plsnt_Curve;                                    // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                           OS_Tense_Curve;                                    // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_AudioAmbienceEventData>     BiomeData;                                         // 0x2F0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                        BiomeIndex;                                        // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_8896[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         AkStartEvent;                                      // 0x308(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                         AkStopEvent;                                       // 0x310(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       MaxTreeCount;                                      // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                          DebugSphereColour;                                 // 0x320(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FIIMExtents>        TreeExtents;                                       // 0x330(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            Event_SpyglassState_Enter;                         // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Event_SpyglassState_Exit;                          // 0x390(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Event_SpyglassState_Flora_Enter;                   // 0x3A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Event_SpyglassState_Flora_Exit;                    // 0x3B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                       TreeVFXZoneRadiusSq;                               // 0x3C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FAmbienceDataReference> TreeAmbienceData;                                  // 0x3C8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAkSwitchValue*                        BiomeSwitch;                                       // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AVFXPlacer_Birds_C*>        AmbientBirds;                                      // 0x420(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                        AmbientBirdsMaxInstances;                          // 0x430(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_889C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkRtpc*                               WindOneShotRTPC;                                   // 0x438(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                       WindOneShotRTPCValue;                              // 0x440(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Rain2DActive;                                      // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RainCanopyActive;                                  // 0x449(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88A0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       RainAmount;                                        // 0x450(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ShowTreeFellingDebug;                              // 0x458(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88A3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FIIMInstance>                  InstancesToClassify;                               // 0x460(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       ClassificationFrequency;                           // 0x470(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          ClassificationHandle;                              // 0x478(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                               CurrentActorLocation;                              // 0x480(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        InstanceOffset;                                    // 0x498(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         TreeScanningDebug;                                 // 0x49C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsLargeFast;                              // 0x4A0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsLargeMedSpeed;                          // 0x4B0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsLargeSlow;                              // 0x4C0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsMediumFast;                             // 0x4D0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsMediumMedSpeed;                         // 0x4E0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsMediumSlow;                             // 0x4F0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsSmallFast;                              // 0x500(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsSmallMedSpeed;                          // 0x510(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*> RiverPointsSmallSlow;                              // 0x520(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UAkComponent*                          AkLargeFast;                                       // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          AkLargeMedSpeed;                                   // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          AkLargeSlow;                                       // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          AkMediumFast;                                      // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          AkMediumMedSpeed;                                  // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          AkMediumSlow;                                      // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          AkSmallFast;                                       // 0x560(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          AkSmallMedSpeed;                                   // 0x568(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          AkSmallSlow;                                       // 0x570(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                         RiverAudioDebug_;                                  // 0x578(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88B4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       TreeStandardDensityInner;                          // 0x580(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               FarCreatureLocation;                               // 0x588(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ThunderOnCooldown;                                 // 0x5A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88B7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       ThunderCooldownTime;                               // 0x5A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       RainAmountThunderMin;                              // 0x5B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       RainAmountThunderMax;                              // 0x5B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkSwitchValue*                        ThunderMoodSwitchRef1;                             // 0x5C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkSwitchValue*                        ThunderMoodSwitchRef2;                             // 0x5C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         LocalPlayerIsSheltered;                            // 0x5D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88C2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LocalPlayerShelteredAttackTime;                    // 0x5D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        LocalPlayerShelteredReleaseTime;                   // 0x5D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       HailAmount;                                        // 0x5E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Hail2DActive;                                      // 0x5E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Lightning_Type_0_On_Cooldown;                      // 0x5E9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88C9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       Lightning_Type_0_Cooldown_Min;                     // 0x5F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Lightning_Type_0_Cooldown_Max;                     // 0x5F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Lightning_Type_1_On_Cooldown;                      // 0x600(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88CA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       Lightning_Type_1_Cooldown_Min;                     // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Lightning_Type_1_Cooldown_Max;                     // 0x610(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Lightning_Type_2_On_Cooldown;                      // 0x618(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88CB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       Lightning_Type_2_Cooldown_Min;                     // 0x620(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Lightning_Type_2_Cooldown_Max;                     // 0x628(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CelestialOneShootOnCooldown;                       // 0x630(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88CD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       CelestialOneShotCooldownTime;                      // 0x638(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       RainAmountCache;                                   // 0x640(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ColdStatusActive;                                  // 0x648(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_88CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            MusicSegmentEndCallback;                           // 0x650(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FVector>                       OuterRangeTreesPositions;                          // 0x660(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       InnerTreeTotal;                                    // 0x670(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UAkRtpc*, double>                 PrecipitationRTPC_ValueMap;                        // 0x678(0x50)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	TMap<int32, TSoftObjectPtr<class UAkAudioEvent>> CelestialOneShotEvents;                            // 0x6C8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_TimeOfDayManager_C*                TimeOfDayManager;                                  // 0x718(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UBP_Ambience_Manager_C* GetDefaultObj();

	void AsyncThunderSfxLoaded(class UAkAudioEvent* AudioEvent, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, int32 CallFunc_PostAkEvent_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void HandleAddForestReverb(class UAcousticsSubsystem* CallFunc_GetWorldSubsystem_ReturnValue);
	void UpdatePlayerStatus(bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_CheckLocalPlayerStatus_HasStatus);
	void CheckLocalPlayerStatus(const struct FGameplayTagContainer& Status, bool* HasStatus, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UNWXAbilitySystemComponent* K2Node_DynamicCast_AsNWXAbility_System_Component, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue);
	void CelestialOneShotCooldown();
	void Celestial_One_Shot(bool* CelestialOneShotActive, const struct FVector& CelestialDistance, TSoftObjectPtr<class UAkAudioEvent> CelestialOneShotEvent, class UScopedAkComponent* ScopedAkComponent, const struct FVector& BloodMoonLocation, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, class UScopedAkComponent* CallFunc_SpawnScopedAkComponentAtLocation_ReturnValue, TSoftObjectPtr<class UAkAudioEvent> CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_IsValid_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValidSoftObjectReference_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_PostAsyncAkEventScoped_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_GetIsPlayerInCombat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, float CallFunc_SetRTPCValue_Value_ImplicitCast, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	void CheckIsArrival(bool* IsArrivalRealm, const struct FRealmPlacementRequirement& ArrivalRealm, class UObject* Temp_object_Variable, bool CallFunc_DoesRealmMeetRequirement_RequirementMet);
	void CheckIsNightmare(bool* IsNightmareRealm, const struct FRealmPlacementRequirement& NightmareRealm, class UObject* Temp_object_Variable, bool CallFunc_DoesRealmMeetRequirement_RequirementMet);
	void CheckLightningMidDistanceCooldown(class UScopedAkComponent* AkComponent, bool CooldownBool, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, float Temp_real_Variable, float Temp_real_Variable_1, float K2Node_Select_Default);
	void TriggerLightningMidDistance(const struct FVector& Location, class UScopedAkComponent* Scoped_Ak_Component, double Lightning_Type, bool Temp_bool_Variable, class UScopedAkComponent* CallFunc_SpawnScopedAkComponentAtLocation_ReturnValue, float Temp_real_Variable, float Temp_real_Variable_1, bool CallFunc_GetIsPlayerInCombat_ReturnValue, float K2Node_Select_Default, bool CallFunc_PostAkEventScoped_ReturnValue, class UNiagaraParameterCollectionInstance* CallFunc_GetNiagaraParameterCollection_ReturnValue, float CallFunc_GetFloatParameter_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue_1, bool CallFunc_InRange_FloatFloat_ReturnValue_2, float CallFunc_SetRTPCValue_Value_ImplicitCast, double CallFunc_InRange_FloatFloat_Value_ImplicitCast, double CallFunc_InRange_FloatFloat_Value_ImplicitCast_1, double CallFunc_InRange_FloatFloat_Value_ImplicitCast_2);
	void LocalPlayerUnsheltered(class UNiagaraParameterCollectionInstance* CallFunc_GetNiagaraParameterCollection_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void LocalPlayerSheltered(class UNiagaraParameterCollectionInstance* CallFunc_GetNiagaraParameterCollection_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void RemoveRiverPointSmallSlow(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue);
	void RemoveRiverPointSmallMedium(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void RemoveRiverPointSmallFast(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue);
	void RemoveRiverPointMediumSlow(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue);
	void RemoveRiverPointMediumMedium(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue);
	void RemoveRiverPointMediumFast(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue);
	void RemoveRiverPointLargeSlow(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue);
	void RemoveRiverPointLargeMedium(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue);
	void RemoveRiverPointLargeFast(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue);
	void AddRiverPointSmallSlow(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddRiverPointSmallMedium(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddRiverPointSmallFast(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddRiverPointMediumSlow(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddRiverPointMediumMedium(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddRiverPointMediumFast(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddRiverPointLargeSlow(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddRiverPointLargeMedium(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddRiverPointLargeFast(class AActor* RiverWaterAudio, class ABP_AVFXPlacer_RiverWaterAudio_C* K2Node_DynamicCast_AsBP_AVFXPlacer_River_Water_Audio, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_AddUnique_ReturnValue);
	float GetWindSpeed(float K2Node_FunctionResult_ReturnValue_ImplicitCast);
	float GetTreeStandardDensityInner(float K2Node_FunctionResult_ReturnValue_ImplicitCast);
	bool GetShowTreeFeelingDebug();
	bool GetShowRiverAudioDebug();
	float GetPrecipitationAmount(float K2Node_FunctionResult_ReturnValue_ImplicitCast);
	class UAkComponent* GetAk2DComponent();
	void AddAmbientBird(class AActor* AmbientBird, class ABP_AVFXPlacer_Birds_C* K2Node_DynamicCast_AsBP_AVFXPlacer_Birds, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Add_ReturnValue);
	void CheckMusicStateForThunder(class UBP_Music_Manager_C* MusicManager, class UBP_Music_Manager_C* CallFunc_Get_BPMusic_Manager_MusicManager, bool CallFunc_IsAnyMusicStateActive_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void ThunderCooldown();
	void TriggerThunder(TSoftObjectPtr<class UAkAudioEvent> ThunderSfx, bool IsNightmareRealm, const struct FRealmPlacementRequirement& NightmareRealm, bool Temp_bool_Variable, TSoftObjectPtr<class UAkAudioEvent> Temp_softobject_Variable, TSoftObjectPtr<class UAkAudioEvent> Temp_softobject_Variable_1, class UObject* Temp_object_Variable, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Celestial_One_Shot_CelestialOneShotActive, TSoftObjectPtr<class UAkAudioEvent> K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_GetIsPlayerInCombat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_DoesRealmMeetRequirement_RequirementMet, bool CallFunc_IsValid_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_InRange_FloatFloat_ReturnValue, float CallFunc_K2_SetTimer_Time_ImplicitCast);
	void StopPrecipitationCanopy(class UAkComponent* AkComponent, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, int32 CallFunc_PostAkEvent_ReturnValue);
	void UpdatePrecipitationCanopy(class UAkComponent* AkComponent, FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_IsValid_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, bool CallFunc_Greater_DoubleDouble_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue);
	void FarCreatureAudioEvent(struct FVector& Location, struct FDataTableRowHandle& SpawnerData, bool BiomeSwitch, const struct FVector& LLocation, bool CallFunc_IsValidRowHandle_IsValid, TSoftObjectPtr<class UAkSwitchValue> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, TArray<TSoftObjectPtr<class UAkSwitchValue>>& K2Node_MakeArray_Array, TArray<class UAkSwitchValue*>& K2Node_MakeArray_Array_1, const struct FS_BPSpawnerData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, double CallFunc_Vector_DistanceSquared_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, double CallFunc_Square_ReturnValue, double CallFunc_Square_ReturnValue_1, bool CallFunc_InRange_FloatFloat_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class UBP_LoadAndPlay_Audio_C* CallFunc_AddComponentByClass_ReturnValue, double CallFunc_Square_A_ImplicitCast, double CallFunc_Square_A_ImplicitCast_1);
	void InitializeFarCreatureAudio(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class AGameStateBase* CallFunc_GetGameState_ReturnValue, bool CallFunc_IsValid_ReturnValue, class ANWXGameStateBase* K2Node_DynamicCast_AsNWXGame_State_Base, bool K2Node_DynamicCast_bSuccess);
	void UpdateAltitude(class UAkComponent* AkComponent, const struct FVector& AverageTreePosition, double Temp_real_Variable, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, class AActor* CallFunc_GetOwner_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FTransform& CallFunc_GetObjectTransform_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, double CallFunc_BreakVector_X_1, double CallFunc_BreakVector_Y_1, double CallFunc_BreakVector_Z_1, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, double K2Node_Select_Default, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void RiverAudioDebug(int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_3, const class FString& CallFunc_Conv_IntToString_ReturnValue_2, const class FString& CallFunc_Conv_IntToString_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, bool CallFunc_Array_IsValidIndex_ReturnValue_2, bool CallFunc_Array_IsValidIndex_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue_4, int32 CallFunc_Array_Length_ReturnValue_5, const class FString& CallFunc_Conv_IntToString_ReturnValue_4, const class FString& CallFunc_Conv_IntToString_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, bool CallFunc_Array_IsValidIndex_ReturnValue_4, bool CallFunc_Array_IsValidIndex_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue_6, int32 CallFunc_Array_Length_ReturnValue_7, const class FString& CallFunc_Conv_IntToString_ReturnValue_6, const class FString& CallFunc_Conv_IntToString_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, bool CallFunc_Array_IsValidIndex_ReturnValue_6, bool CallFunc_Array_IsValidIndex_ReturnValue_7, int32 CallFunc_Array_Length_ReturnValue_8, bool CallFunc_Array_IsValidIndex_ReturnValue_8, const class FString& CallFunc_Conv_IntToString_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_8);
	void ClearRiverArrays();
	void SortRiverParameters_Per_Array(TArray<class ABP_AVFXPlacer_RiverWaterAudio_C*>& ArrayElement, class UAkComponent* Ak_Component, class UAkAudioEvent* Ak_Event, class UAkComponent** Ak_ComponentOutput, double MaxSpeed, double Speed, double Width, double Depth, const TArray<struct FVector>& Locations, class UAkComponent* AkComponent_Cache, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_PostAkEvent_ReturnValue, class ABP_AVFXPlacer_RiverWaterAudio_C* CallFunc_Array_Get_Item, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, TArray<struct FTransform>& CallFunc_LocationsToTransforms_Transforms, int32 CallFunc_Array_Length_ReturnValue_1, const struct FVector& CallFunc_GetVectorArrayAverage_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, class UAkComponent* CallFunc_SpawnAkComponentAtLocation_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue_2, int32 CallFunc_Array_AddUnique_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_2, float CallFunc_SetRTPCValue_Value_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast_1, float CallFunc_SetRTPCValue_Value_ImplicitCast_2);
	void SortRiverParameters(class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput, class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput_2, class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput_3, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput_4, class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput_5, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput_6, class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput_7, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, class UAkComponent* CallFunc_SortRiverParameters_Per_Array_Ak_ComponentOutput_8, bool CallFunc_IsValid_ReturnValue_8);
	void ProcessRiverAudio();
	void ScanAndClassifyTreeSlice(int32 InstanceMargin, double DistanceSq, const struct FIIMInstance& CurrentInstance, int32 ItemsPerFrame, int32 InstanceCount, class UAcousticsSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, int32 Temp_int_Looper_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_cached_index__Necessary_in_case_of_async_executions_down_the_chain_Variable, int32 Temp_int_Layer_count_Variable, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector& CallFunc_GetVectorArrayAverage_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, const struct FVector& CallFunc_GetVectorArrayAverage_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, double CallFunc_Conv_IntToDouble_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FVector& CallFunc_GetVectorArrayAverage_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_3, int64 CallFunc_Conv_IntToInt64_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class FText CallFunc_Conv_StringToText_ReturnValue, int32 Temp_int_Variable, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, bool CallFunc_LessEqual_IntInt_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_3, const class FString& CallFunc_Conv_TextToString_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 CallFunc_Min_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, double CallFunc_Vector_DistanceSquared_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_4, int32 Temp_int_Variable_1, const struct FVector& CallFunc_MakeVector_ReturnValue_2, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, float CallFunc_PopulateTreesInfoMapByQuadrants_InnerRangeTreeTotal_ImplicitCast);
	void Classify_Layer(bool AddToInner, class FName ResourceId, struct FVector& Position, struct FVector& Scale, double DistanceToActorSq, const struct FAmbienceDataReference& AmbienceDataRef, const struct FGameplayTagContainer& InstanceTags, int32 Temp_int_cached_index__Necessary_in_case_of_async_executions_down_the_chain_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Looper_Variable, int32 Temp_int_Layer_count_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FAmbienceDataReference& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_AmbienceDataContainsTags_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2, int32 Temp_int_Variable, int32 CallFunc_Array_Add_ReturnValue_3, int32 CallFunc_Array_Add_ReturnValue_4, int32 CallFunc_Array_Add_ReturnValue_5, int32 CallFunc_Array_Add_ReturnValue_6, int32 CallFunc_Array_Add_ReturnValue_7, int32 CallFunc_Array_Add_ReturnValue_8, bool CallFunc_LessEqual_DoubleDouble_ReturnValue);
	void UpdateGunTail_TreeCanopy(double TreeDensity, double Density, class UAkRtpc* Rtpc, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, class ANWXWorldSettings* CallFunc_GetWorldSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void UpdatePrecipitation(const class FString& NiagaraParam, class UAkAudioEvent* StartEvent, class UAkAudioEvent* StopEvent, class UAkRtpc* PrecipitationRTPC, double& PrecipitationAmountFloat, bool& ActiveBool, bool AffectsThunder, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, FDelegateProperty_ Temp_delegate_Variable, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, FDelegateProperty_ Temp_delegate_Variable_1, double CallFunc_SelectFloat_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, class UAkComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, class UNiagaraParameterCollectionInstance* CallFunc_GetNiagaraParameterCollection_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue_1, float CallFunc_GetFloatParameter_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, double K2Node_VariableGet_PrecipitationAmountFloat_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast, float K2Node_VariableSetRef_Target_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast_1);
	void TriggerOneShotTreeRustleOuter(int32 Temp_int_Variable, int32 Temp_int_cached_index__Necessary_in_case_of_async_executions_down_the_chain_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Looper_Variable, FDelegateProperty_ Temp_delegate_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Layer_count_Variable, bool CallFunc_Less_IntInt_ReturnValue, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, bool CallFunc_IsValid_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, const struct FGameplayTag& Temp_struct_Variable_1, const struct FS_AudioAmbienceEventData& CallFunc_Array_Get_Item, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void TriggerOneShotTreeRustleInner(int32 Temp_int_Variable, int32 Temp_int_cached_index__Necessary_in_case_of_async_executions_down_the_chain_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Looper_Variable, FDelegateProperty_ Temp_delegate_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Layer_count_Variable, bool CallFunc_Less_IntInt_ReturnValue, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, bool CallFunc_IsValid_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, const struct FGameplayTag& Temp_struct_Variable_1, const struct FS_AudioAmbienceEventData& CallFunc_Array_Get_Item, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void SortAmbientBirds(const TArray<struct FVector>& AmbientBirdLocationsSorted, const TArray<struct FVector>& AmbientBirdLocations, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_Array_IsNotEmpty_ReturnValue, class ABP_AVFXPlacer_Birds_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Max_ReturnValue, bool CallFunc_NotEqual_VectorVector_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_2, TArray<struct FVector>& CallFunc_SortByDistanceToTargetVector_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class ABP_AVFXPlacer_Birds_C* CallFunc_Array_Get_Item_1, bool CallFunc_Array_IsNotEmpty_ReturnValue_1, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue);
	void Spyglass_State_Exit_All();
	void SpyglassState_Flora_Exit();
	void SpyglassState_Flora_Enter();
	void SpyglassState_Wildlife_Exit();
	void SpyglassState_Wildlife_Enter();
	void SpyglassState_Exit();
	void SpyglassState_Enter();
	void GetActiveTreeLayers(TArray<struct FS_AudioTreeSet>* TreeLayers, TMap<class FName, struct FIIMExtents>* TreeExtents, TMap<class FName, struct FAmbienceDataReference>* TreeAmbienceData);
	void CacheOneShotValues(int32 TreeCount, const struct FVector& AveragePositionOuter, int32* TreeCountCache, struct FVector* AveragePositionOuterCache);
	void GetLevelBiome(class UAkStateValue* Temp_object_Variable, bool Temp_bool_Variable, class UAkStateValue* Temp_object_Variable_1, class UAkStateValue* Temp_object_Variable_2, bool Temp_bool_Variable_1, class UAkStateValue* Temp_object_Variable_3, class UAkStateValue* Temp_object_Variable_4, bool Temp_bool_Variable_2, class UAkStateValue* Temp_object_Variable_5, class UAkStateValue* Temp_object_Variable_6, bool CallFunc_CheckIsArrival_IsArrivalRealm, bool CallFunc_CheckIsArrival_IsArrivalRealm_1, class UAkStateValue* K2Node_Select_Default, class UAkStateValue* K2Node_Select_Default_1, bool CallFunc_CheckIsArrival_IsArrivalRealm_2, bool CallFunc_CheckIsNightmare_IsNightmareRealm, class UAkStateValue* K2Node_Select_Default_2, class UAkStateValue* Temp_object_Variable_7, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, bool Temp_bool_Variable_3, bool CallFunc_EqualEqual_StrStr_ReturnValue, class UAkStateValue* K2Node_Select_Default_3, class ANWXWorldSettings* CallFunc_GetWorldSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void TriggerOneShot(TSoftObjectPtr<class UAkAudioEvent> AkEvent, class UAkRtpc* AverageDistanceRTPC, class UAkRtpc* OuterDensityRTPC, double TreeDensityOuter, const struct FVector& AverageTreePositionOuter, bool IsBiomeOneShot, const TArray<TSoftObjectPtr<class UAkSwitchValue>>& Switches, const TArray<class UAkSwitchValue*>& Optional_Switches, const struct FVector& SpawnLocation, TMap<class UAkRtpc*, double> RTPCs, class UAkRtpc* Temp_object_Variable, bool CallFunc_IsValidSoftObjectReference_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_1, class UAkRtpc* Temp_object_Variable_1, const struct FS_AudioAmbienceEventData& CallFunc_Array_Get_Item, class AActor* CallFunc_GetOwner_ReturnValue, bool Temp_bool_Variable, class UBP_LoadAndPlay_Audio_C* CallFunc_AddComponentByClass_ReturnValue, bool CallFunc_IsPlayInEditor_ReturnValue, class UAkRtpc* Temp_object_Variable_2, class AActor* CallFunc_GetOwner_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool Temp_bool_Variable_1, const struct FVector& K2Node_Select_Default, const struct FVector& K2Node_Select_Default_1, double CallFunc_RandomFloatInRange_ReturnValue_2, double CallFunc_Vector_Distance_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_3, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void TrySpawnOneShot(bool IsBiomeOneShot, bool UseTimeOfDay, double TOD_Start_Time, double TOD_End_Time, double MoodStart, double MoodEnd, int32 TreeCount, class UCurveFloat* TOD_Curve, class UCurveFloat* MoodCurve, double DelayMinTime, double DelayMaxTime, TSoftObjectPtr<class UAkAudioEvent> AkEvent, class UAkRtpc* AverageDistanceRTPC, class UAkRtpc* OuterDensityRTPC, double TreeDensityOuter, const struct FVector& AverageTreePositionOuter, double OneShotMultiplier, class UCurveFloat* Curve_Time_Of_Day, bool CallFunc_IsValidSoftObjectReference_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_CheckOneShotReady_BiomeOneShotReady, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, float CallFunc_GetTimeOfDay_ReturnValue, float CallFunc_GetFloatValue_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, float CallFunc_GetFloatValue_InTime_ImplicitCast, double CallFunc_Multiply_DoubleDouble_B_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	void UnregisterAkComponent(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo, class UAkEventCallbackInfo* K2Node_DynamicCast_AsAk_Event_Callback_Info, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void UpdateForestAmbienceDynamic(int32 Temp_int_cached_index__Necessary_in_case_of_async_executions_down_the_chain_Variable, int32 Temp_int_Layer_count_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Looper_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, double CallFunc_Vector_Distance_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast);
	void UpdateForestAmbienceStatic(bool NewLocalVar, bool CallFunc_IsPlayInEditor_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_1, FDelegateProperty_ Temp_delegate_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, double CallFunc_GetWorldDeltaSeconds_ReturnValue, double CallFunc_FMax_ReturnValue, FDelegateProperty_ Temp_delegate_Variable_1, const struct FGameplayTag& Temp_struct_Variable_1, double CallFunc_FMax_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, double CallFunc_GetWorldDeltaSeconds_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsPlayInEditor_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue_3, int32 Temp_int_Layer_count_Variable, int32 Temp_int_Variable, int32 Temp_int_cached_index__Necessary_in_case_of_async_executions_down_the_chain_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UAkComponent* CallFunc_SpawnAkComponentAtLocation_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_IsValid_ReturnValue_9, class UAkComponent* CallFunc_SpawnAkComponentAtLocation_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_10, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_11, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, double CallFunc_Vector_Distance_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_VInterpTo_ReturnValue, double CallFunc_FClamp_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, float K2Node_BreakStruct_TreeDensity_42_149243EC40CDBA7DC40ED3B76DA886F7_ImplicitCast, class UAkComponent* CallFunc_SpawnAkComponentAtLocation_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_12, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_13, bool CallFunc_Array_RemoveItem_ReturnValue_1, int32 CallFunc_PostAkEvent_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, class UAkComponent* CallFunc_SpawnAkComponentAtLocation_ReturnValue_3, int32 CallFunc_Array_Add_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_14, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_15, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, double CallFunc_Vector_Distance_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue_2, double CallFunc_Conv_IntToDouble_ReturnValue_1, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Divide_DoubleDouble_ReturnValue_3, const struct FVector& CallFunc_VInterpTo_ReturnValue_1, double CallFunc_FClamp_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult_1, float K2Node_BreakStruct_TreeDensity_42_149243EC40CDBA7DC40ED3B76DA886F7_ImplicitCast_1, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_6, bool CallFunc_BooleanAND_ReturnValue_7, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Looper_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_2, const struct FS_AudioAmbienceEventData& CallFunc_Array_Get_Item, int32 CallFunc_PostAkEvent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_16, bool CallFunc_IsValid_ReturnValue_17, bool CallFunc_IsValid_ReturnValue_18, bool CallFunc_BooleanAND_ReturnValue_8, bool CallFunc_IsValid_ReturnValue_19, bool CallFunc_BooleanAND_ReturnValue_9, float CallFunc_DrawDebugSphere_Duration_ImplicitCast, float CallFunc_VInterpTo_DeltaTime_ImplicitCast, float CallFunc_DrawDebugSphere_Duration_ImplicitCast_1, float CallFunc_VInterpTo_DeltaTime_ImplicitCast_1, float CallFunc_VInterpTo_InterpSpeed_ImplicitCast, float K2Node_VariableSetRef_Value_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast, float CallFunc_VInterpTo_InterpSpeed_ImplicitCast_1, float K2Node_VariableSetRef_Value_ImplicitCast_1, float CallFunc_SetRTPCValue_Value_ImplicitCast_1);
	void UpdateScanningFrequency(const struct FVector& CameraLocation, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool CallFunc_EqualEqual_VectorVector_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_K2_SetTimer_Time_ImplicitCast);
	void CheckWindOneShotReady(bool* WindOneShotReady, bool CallFunc_GetIsPlayerInCombat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void CheckOneShotReady(bool IsBiomeOneShot, bool UseTimeOfDay, double TimeOfDayStart, double TimeOfDayEnd, double MoodStart, double MoodEnd, int32 TreeCount, bool* BiomeOneShotReady, double MoodEndCache, double MoodStartCache, double TimeOfDayEndCache, double TimeOfDayStartCache, bool UseTimeOfDayCache, bool CallFunc_Greater_DoubleDouble_ReturnValue, float CallFunc_GetTimeOfDay_ReturnValue, const struct FS_AudioAmbienceEventData& CallFunc_Array_Get_Item, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, float CallFunc_GetTimeOfDay_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, float CallFunc_GetTimeOfDay_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_1, float CallFunc_GetTimeOfDay_ReturnValue_3, bool CallFunc_GetIsPlayerInCombat_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_2, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1);
	void GetRandomWindDelay(double* DelayTime, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue);
	void SpawnWindOneShot(double WindOneShotDistance, class UAkSwitchValue* Temp_object_Variable, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable, FDelegateProperty_ Temp_delegate_Variable, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, bool CallFunc_CheckLocalPlayerStatus_HasStatus, bool CallFunc_K2_AttachToComponent_ReturnValue, class UAkSwitchValue* Temp_object_Variable_1, class UAkSwitchValue* K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_PostAssociatedAkEvent_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UNiagaraParameterCollectionInstance* CallFunc_GetNiagaraParameterCollection_ReturnValue, const struct FVector& CallFunc_GetVectorParameter_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, class UAkComponent* CallFunc_SpawnAkComponentAtLocation_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast, float CallFunc_SetRTPCValue_Value_ImplicitCast_1);
	void UpdateWindValues(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UNiagaraParameterCollectionInstance* CallFunc_GetNiagaraParameterCollection_ReturnValue, class UAkComponent* CallFunc_Array_Get_Item, const struct FVector& CallFunc_GetVectorParameter_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_GetFloatParameter_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_FClamp_ReturnValue, float CallFunc_SetRTPCValue_Value_ImplicitCast, double CallFunc_Divide_DoubleDouble_A_ImplicitCast);
	void ScanAndClassifyTrees(int32 Temp_int_cached_index__Necessary_in_case_of_async_executions_down_the_chain_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Looper_Variable, int32 Temp_int_Layer_count_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Variable, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ANWXWorldSettings* CallFunc_GetWorldSettings_ReturnValue, TArray<struct FActorAndInstanceIds>& CallFunc_GetGameplayActorsAndInstancesInRadiusXY_OutActorsAndInstances, bool CallFunc_IsValid_ReturnValue, TArray<struct FIIMInstance>& CallFunc_GatherTreeInstances_OutInstances, float CallFunc_K2_SetTimer_Time_ImplicitCast, float CallFunc_GetGameplayActorsAndInstancesInRadiusXY_Radius_ImplicitCast);
	void Lightning_Type_0_Cooldown();
	void Lightning_Type_1_Cooldown();
	void Lightning_Type_2_Cooldown();
	void Initialize_River_Audio();
	void TrySpawnWindOneShot();
	void Start_Wind();
	void TrySpawnAllOneShots();
	void StartOneShotTimer(double DelayTime, TSoftObjectPtr<class UAkAudioEvent> AkEvent, class UAkRtpc* AverageDistanceRTPC, class UAkRtpc* OuterDensityRTPC, double TreeDensityOuter, const struct FVector& AverageTreePositionOuter, bool IsBiomeOneShot);
	void ShowAmbienceOneShots(bool DrawDebugSpheres);
	void ShowTreeFellingAudioDebug(bool ShowDebug);
	void ShowTreeScanningDebug(bool DebugMode);
	void ShowRiverAudioDebug(bool Debug_Mode);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void MusicCallbackSyncExit(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void ExecuteUbergraph_BP_Ambience_Manager(int32 EntryPoint, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_1, double CallFunc_GetRandomWindDelay_DelayTime, bool CallFunc_CheckWindOneShotReady_WindOneShotReady, double CallFunc_RandomFloatInRange_ReturnValue_2, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_2, double CallFunc_RandomFloatInRange_ReturnValue_3, double CallFunc_RandomFloatInRange_ReturnValue_4, double CallFunc_RandomFloatInRange_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_6, const struct FS_AudioAmbienceEventData& CallFunc_Array_Get_Item, double CallFunc_RandomFloatInRange_ReturnValue_7, double CallFunc_RandomFloatInRange_ReturnValue_8, double CallFunc_RandomFloatInRange_ReturnValue_9, double CallFunc_RandomFloatInRange_ReturnValue_10, int32 Temp_int_Looper_Variable, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_RandomFloatInRange_ReturnValue_11, bool K2Node_MultiGate_FirstRun, int32 K2Node_MultiGate_Data, bool K2Node_MultiGate_ScratchBool, int32 K2Node_MultiGate_ScratchIndex, double CallFunc_RandomFloatInRange_ReturnValue_12, double K2Node_CustomEvent_DelayTime, TSoftObjectPtr<class UAkAudioEvent> K2Node_CustomEvent_AkEvent, class UAkRtpc* K2Node_CustomEvent_AverageDistanceRTPC, class UAkRtpc* K2Node_CustomEvent_OuterDensityRTPC, double K2Node_CustomEvent_TreeDensityOuter, const struct FVector& K2Node_CustomEvent_AverageTreePositionOuter, bool K2Node_CustomEvent_IsBiomeOneShot, double CallFunc_RandomFloatInRange_ReturnValue_13, int32 Temp_int_Variable, int32 Temp_int_Layer_count_Variable, bool K2Node_CustomEvent_DrawDebugSpheres, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_CustomEvent_ShowDebug, bool K2Node_CustomEvent_DebugMode, bool K2Node_CustomEvent_Debug_Mode, float K2Node_Event_DeltaSeconds, bool CallFunc_IsServer_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, const struct FGameplayTag& Temp_struct_Variable, class ANWXPlayerCameraManager* K2Node_DynamicCast_AsNWXPlayer_Camera_Manager, bool K2Node_DynamicCast_bSuccess, class UAkComponent* CallFunc_GetAk2DComponent_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, double CallFunc_Square_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, enum class EEndPlayReason K2Node_Event_EndPlayReason, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, int32 Temp_int_cached_index__Necessary_in_case_of_async_executions_down_the_chain_Variable, TArray<struct FGameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, int32 CallFunc_CacheOneShotValues_TreeCountCache, const struct FVector& CallFunc_CacheOneShotValues_AveragePositionOuterCache, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_CacheOneShotValues_TreeCountCache_1, const struct FVector& CallFunc_CacheOneShotValues_AveragePositionOuterCache_1, enum class EAkCallbackType K2Node_CustomEvent_CallbackType, class UAkCallbackInfo* K2Node_CustomEvent_CallbackInfo, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FDelegateProperty_ Temp_delegate_Variable, class UAcousticsSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, class UGlobalMusicManager* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class ANWXWorldSettings* CallFunc_GetWorldSettings_ReturnValue, TArray<struct FAkExternalSourceInfo>& Temp_struct_Variable_1, class UPrimitiveDirectionalAkLateReverbComponent* CallFunc_AddComponentByClass_ReturnValue, int32 CallFunc_PostAkEvent_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, double CallFunc_RandomFloatInRange_ReturnValue_14, double CallFunc_RandomFloatInRange_ReturnValue_15, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_3, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_4, float CallFunc_K2_SetTimer_InitialStartDelay_ImplicitCast, float CallFunc_K2_SetTimer_InitialStartDelay_ImplicitCast_1, float CallFunc_K2_SetTimer_Time_ImplicitCast, float CallFunc_Delay_Duration_ImplicitCast, float CallFunc_K2_SetTimer_InitialStartDelay_ImplicitCast_2, float CallFunc_Delay_Duration_ImplicitCast_1, float CallFunc_Delay_Duration_ImplicitCast_2, float CallFunc_Delay_Duration_ImplicitCast_3, float CallFunc_Delay_Duration_ImplicitCast_4, float CallFunc_Delay_Duration_ImplicitCast_5, float CallFunc_Delay_Duration_ImplicitCast_6, float CallFunc_Delay_Duration_ImplicitCast_7, float CallFunc_Delay_Duration_ImplicitCast_8, float CallFunc_Delay_Duration_ImplicitCast_9, float CallFunc_Delay_Duration_ImplicitCast_10, float CallFunc_Delay_Duration_ImplicitCast_11, float CallFunc_Delay_Duration_ImplicitCast_12, float CallFunc_Delay_Duration_ImplicitCast_13, float CallFunc_Delay_Duration_ImplicitCast_14, float CallFunc_K2_SetTimer_Time_ImplicitCast_1, float CallFunc_K2_SetTimer_Time_ImplicitCast_2, double CallFunc_TrySpawnOneShot_TreeDensityOuter_ImplicitCast, double CallFunc_TrySpawnOneShot_TreeDensityOuter_ImplicitCast_1, double CallFunc_TrySpawnOneShot_TreeDensityOuter_ImplicitCast_2, double CallFunc_TrySpawnOneShot_TreeDensityOuter_ImplicitCast_3, double CallFunc_TrySpawnOneShot_TreeDensityOuter_ImplicitCast_4, double CallFunc_TrySpawnOneShot_TreeDensityOuter_ImplicitCast_5, double CallFunc_TrySpawnOneShot_TreeDensityOuter_ImplicitCast_6, double CallFunc_TrySpawnOneShot_TreeDensityOuter_ImplicitCast_7, float CallFunc_CacheTreeInnerZoneRange_Range_ImplicitCast, float CallFunc_K2_SetTimer_InitialStartDelay_ImplicitCast_3, float CallFunc_K2_SetTimer_InitialStartDelay_ImplicitCast_4);
	void MusicSegmentEndCallback__DelegateSignature();
	void Event_SpyglassState_Flora_Exit__DelegateSignature();
	void Event_SpyglassState_Flora_Enter__DelegateSignature();
	void Event_SpyglassState_Exit__DelegateSignature();
	void Event_SpyglassState_Enter__DelegateSignature();
};

}


