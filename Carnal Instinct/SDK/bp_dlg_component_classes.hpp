#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x240 (0x2F0 - 0xB0)
// BlueprintGeneratedClass bp_dlg_component.bp_dlg_component_C
class Ubp_dlg_component_C : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB0(0x8)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	FMulticastInlineDelegateProperty_            Ed_dlg_branch;                                     // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_notify;                                     // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                  Owner_name_id;                                     // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Abp_dlg_subtitles_widget_3d_C*         bp_dlg_3d_subtitles;                               // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Is_name_visible;                                   // 0xE8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         Use_cinematic_anim;                                // 0xE9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         Use_lookat;                                        // 0xEA(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_3285[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPoseSnapshot                         Cinematic_snapshot;                                // 0xF0(0x38)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                             Lookat_offset;                                     // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                   Lookat_point;                                      // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                          Dlg_history_list;                                  // 0x138(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FDateTime>                     Dlg_history_time;                                  // 0x148(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                          Dlg_static_list;                                   // 0x158(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class Abp_dlg_actor_C*>               Dlg_static_actors;                                 // 0x168(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                         Is_dlg_active;                                     // 0x178(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_3288[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          Dlg_active_list;                                   // 0x180(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class Abp_dlg_actor_C*>               Dlg_active_actors;                                 // 0x190(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            Ed_dlg_added;                                      // 0x1A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_activated;                                  // 0x1B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_anim_info;                                  // 0x1C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_anim_cinematic;                             // 0x1D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         Show_name;                                         // 0x1E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_328C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FS_dlg_speaker_settings               Speaker_voice;                                     // 0x1E8(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UDataTable*>                    Conversation_data_list;                            // 0x1F8(0x10)(Edit, BlueprintVisible)
	class FName                                  Linked_interact;                                   // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            Ed_dlg_started;                                    // 0x210(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_reply;                                      // 0x220(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_choice;                                     // 0x230(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_interact;                                   // 0x240(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_init;                                       // 0x250(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UPrimitiveComponent*>           Name_points;                                       // 0x260(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UPrimitiveComponent*>           Look_at_points;                                    // 0x270(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>        Mesh_list;                                         // 0x280(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_            Ed_dlg_lookat;                                     // 0x290(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_distance;                                   // 0x2A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            Ed_dlg_anim_sound;                                 // 0x2B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FName>                          Helper_list;                                       // 0x2C0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_dlg_helper_info>            Helper_data;                                       // 0x2D0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_            Ed_dlg_event;                                      // 0x2E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

	static class UClass* StaticClass();
	static class Ubp_dlg_component_C* GetDefaultObj();

	void Tick_lookat(bool CallFunc_get_helper_points_is_valid_data, int32 CallFunc_get_helper_points_found_data_index, TArray<class UPrimitiveComponent*>& CallFunc_get_helper_points_object_list, class UPrimitiveComponent* CallFunc_get_helper_points_primitive_object, class AActor* CallFunc_GetOwner_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue);
	void Dlg_anim_slot_convert(enum class Enum_dlg_anim_slot Dlg_anim_slot, class FName* Slot_id, class FName Local_id, bool K2Node_SwitchEnum_CmpSuccess);
	void Get_layout_widget(bool* Is_valid, class UW_01_dlg_2d_layout_C** Layout_widget, TArray<class UW_01_dlg_2d_layout_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, class UW_01_dlg_2d_layout_C* CallFunc_Array_Get_Item);
	void Destroy_dialogues(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, class Abp_dlg_actor_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Max_ReturnValue);
	void Destroy_widgets(bool CallFunc_IsValid_ReturnValue);
	void Dlg_save_info(int32 Temp_int_Array_Index_Variable, const class FString& CallFunc_Conv_IntToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class AActor* CallFunc_GetOwner_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, bool CallFunc_msl_get_identifier_component_is_valid, class Ubp_msl_identifier_component_C* CallFunc_msl_get_identifier_component_identifier_reference, class FName CallFunc_Conv_StringToName_ReturnValue_1, bool CallFunc_get_id_is_valid, class FName CallFunc_get_id_actor_unique_id, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue_1, class FName CallFunc_Conv_StringToName_ReturnValue_2, bool CallFunc_msl_get_identifier_component_is_valid_1, class Ubp_msl_identifier_component_C* CallFunc_msl_get_identifier_component_identifier_reference_1, class AActor* CallFunc_GetOwner_ReturnValue_2, bool CallFunc_get_id_is_valid_1, class FName CallFunc_get_id_actor_unique_id_1, bool CallFunc_msl_get_identifier_component_is_valid_2, class Ubp_msl_identifier_component_C* CallFunc_msl_get_identifier_component_identifier_reference_2, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, bool CallFunc_get_id_is_valid_2, class FName CallFunc_get_id_actor_unique_id_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue_2, class FName CallFunc_Conv_StringToName_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, class FName CallFunc_Conv_StringToName_ReturnValue_4, class Abp_msl_savegame_actor_C* CallFunc_msl_get_savegame_reference_save_actor, const struct FDateTime& CallFunc_Array_Get_Item, int32 CallFunc_BreakDateTime_Year, int32 CallFunc_BreakDateTime_Month, int32 CallFunc_BreakDateTime_Day, int32 CallFunc_BreakDateTime_Hour, int32 CallFunc_BreakDateTime_Minute, int32 CallFunc_BreakDateTime_Second, int32 CallFunc_BreakDateTime_Millisecond, class FName CallFunc_Array_Get_Item_1, const class FString& CallFunc_Conv_IntToString_ReturnValue_2, const class FString& CallFunc_Conv_NameToString_ReturnValue_3, const class FString& CallFunc_Conv_IntToString_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Conv_IntToString_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Conv_IntToString_ReturnValue_5, const class FString& CallFunc_Conv_IntToString_ReturnValue_6, const class FString& CallFunc_Conv_IntToString_ReturnValue_7, const class FString& CallFunc_Conv_IntToString_ReturnValue_8, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, class Abp_msl_savegame_actor_C* CallFunc_msl_get_savegame_reference_save_actor_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, int32 Temp_int_Loop_Counter_Variable_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, int32 CallFunc_Add_IntInt_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_11, const class FString& CallFunc_Concat_StrStr_ReturnValue_12, const class FString& CallFunc_Concat_StrStr_ReturnValue_13, class Abp_msl_savegame_actor_C* CallFunc_msl_get_savegame_reference_save_actor_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_14, const class FString& CallFunc_Concat_StrStr_ReturnValue_15, const class FString& CallFunc_Concat_StrStr_ReturnValue_16, class Abp_dlg_actor_C* CallFunc_Array_Get_Item_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_17, const struct FS_dlg_savegame& CallFunc_get_save_data_dlg_save, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1);
	void Dlg_load_info(const TArray<struct FS_dlg_savegame>& Local_dlg_list, const struct FS_dlg_savegame& Local_saved_data, class Abp_dlg_actor_C* Local_actor, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_msl_get_identifier_component_is_valid, class Ubp_msl_identifier_component_C* CallFunc_msl_get_identifier_component_identifier_reference, bool CallFunc_get_id_is_valid, class FName CallFunc_get_id_actor_unique_id, class Abp_msl_savegame_actor_C* CallFunc_msl_get_savegame_reference_save_actor, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_get_saved_var_data_is_valid_root, bool CallFunc_get_saved_var_data_is_valid_key, bool CallFunc_get_saved_var_data_is_valid_var, int32 CallFunc_get_saved_var_data_found_root_index, int32 CallFunc_get_saved_var_data_found_key_index, int32 CallFunc_get_saved_var_data_found_var_index, const struct FS_save_var_05_key& CallFunc_get_saved_var_data_found_var_list, const struct FS_save_var_data& CallFunc_get_saved_var_data_found_var_info, bool CallFunc_get_saved_var_data_found_var_instanced, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_ParseOption_ReturnValue, const class FString& CallFunc_ParseOption_ReturnValue_1, TArray<class FString>& CallFunc_ParseIntoArray_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue_1, const class FString& CallFunc_Array_Get_Item_1, const class FString& CallFunc_Array_Get_Item_2, int32 CallFunc_Conv_StringToInt_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue_1, const class FString& CallFunc_Array_Get_Item_3, const class FString& CallFunc_Array_Get_Item_4, int32 CallFunc_Conv_StringToInt_ReturnValue_2, int32 CallFunc_Conv_StringToInt_ReturnValue_3, const class FString& CallFunc_Array_Get_Item_5, const class FString& CallFunc_Array_Get_Item_6, int32 CallFunc_Conv_StringToInt_ReturnValue_4, int32 CallFunc_Conv_StringToInt_ReturnValue_5, const class FString& CallFunc_Array_Get_Item_7, int32 CallFunc_Conv_StringToInt_ReturnValue_6, int32 Temp_int_Loop_Counter_Variable_1, const struct FDateTime& CallFunc_MakeDateTime_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, class AActor* CallFunc_GetOwner_ReturnValue_1, bool CallFunc_msl_get_identifier_component_is_valid_1, class Ubp_msl_identifier_component_C* CallFunc_msl_get_identifier_component_identifier_reference_1, bool CallFunc_get_id_is_valid_1, class FName CallFunc_get_id_actor_unique_id_1, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class FName CallFunc_Conv_StringToName_ReturnValue_2, const struct FS_dlg_savegame& CallFunc_Array_Get_Item_8, bool CallFunc_Array_IsValidIndex_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FS_dlg_savegame& CallFunc_Array_Get_Item_9, class Abp_dlg_actor_C* CallFunc_Array_Get_Item_10, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_add_dlg_is_valid, bool CallFunc_add_dlg_is_spawned, class Abp_dlg_actor_C* CallFunc_add_dlg_dlg_actor, int32 Temp_int_Loop_Counter_Variable_2, class Abp_msl_savegame_actor_C* CallFunc_msl_get_savegame_reference_save_actor_1, bool CallFunc_get_saved_var_data_is_valid_root_1, bool CallFunc_get_saved_var_data_is_valid_key_1, bool CallFunc_get_saved_var_data_is_valid_var_1, int32 CallFunc_get_saved_var_data_found_root_index_1, int32 CallFunc_get_saved_var_data_found_key_index_1, int32 CallFunc_get_saved_var_data_found_var_index_1, const struct FS_save_var_05_key& CallFunc_get_saved_var_data_found_var_list_1, const struct FS_save_var_data& CallFunc_get_saved_var_data_found_var_info_1, bool CallFunc_get_saved_var_data_found_var_instanced_1, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_2);
	void Get_dlg_history(class FName Dlg_unique_id, bool* Is_valid, int32* Found_index, struct FDateTime* Latest_time, int32 CallFunc_Array_Find_ReturnValue, const struct FDateTime& CallFunc_Array_Get_Item, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void Remove_helper_points(class FName Helper_id, bool Remove_all, bool CallFunc_get_helper_points_is_valid_data, int32 CallFunc_get_helper_points_found_data_index, TArray<class UPrimitiveComponent*>& CallFunc_get_helper_points_object_list, class UPrimitiveComponent* CallFunc_get_helper_points_primitive_object);
	void Get_helper_points(class FName Helper_id, int32 Point_index, bool* Is_valid_data, int32* Found_data_index, TArray<class UPrimitiveComponent*>* Object_list, class UPrimitiveComponent** Primitive_object, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const struct FS_dlg_helper_info& CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, class UPrimitiveComponent* CallFunc_Array_Get_Item_1);
	void Set_helper_points(class FName Helper_id, TArray<class UPrimitiveComponent*>& Helper_list, const struct FS_dlg_helper_info& K2Node_MakeStruct_s_dlg_helper_info, const struct FS_dlg_helper_info& K2Node_MakeStruct_s_dlg_helper_info_1, bool CallFunc_get_helper_points_is_valid_data, int32 CallFunc_get_helper_points_found_data_index, TArray<class UPrimitiveComponent*>& CallFunc_get_helper_points_object_list, class UPrimitiveComponent* CallFunc_get_helper_points_primitive_object, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1);
	void Dlg_consume_lookat(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_anim_lookat& Lookat_data, const struct FS_dlg_anim_lookat& Local_lookat, class Abp_dlg_actor_C* Local_dlg_actor, bool CallFunc_get_dlg_actor_is_valid, bool CallFunc_get_dlg_actor_is_component_valid, int32 CallFunc_get_dlg_actor_actor_index, class AActor* CallFunc_get_dlg_actor_actor_reference, class Ubp_dlg_component_C* CallFunc_get_dlg_actor_dlg_component, const struct FS_dlg_bind_actor_info& CallFunc_get_dlg_actor_actor_dynamic, bool CallFunc_get_helper_points_is_valid_data, int32 CallFunc_get_helper_points_found_data_index, TArray<class UPrimitiveComponent*>& CallFunc_get_helper_points_object_list, class UPrimitiveComponent* CallFunc_get_helper_points_primitive_object);
	void Set_mesh_list(TArray<class USkeletalMeshComponent*>& Mesh_list);
	void Dlg_name_timer();
	void Dlg_show_name(bool Is_visible, bool Is_forced, bool Is_tick, bool Local_tick, bool Local_forced, bool Local_visible, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool CallFunc_check_name_visible_is_success);
	void Check_name_visible(bool* Is_success, TArray<class AActor*>& CallFunc_GetAllActorsWithTag_OutActors, bool CallFunc_Array_IsValidIndex_ReturnValue);
	void Dlg_consume_anim(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_anim_info& Anim_data, class UAnimInstance* Local_anim_instance, const struct FS_dlg_anim_info& Local_anim_info, class Abp_dlg_actor_C* Local_dlg_actor, int32 Temp_int_Array_Index_Variable, class AActor* CallFunc_GetOwner_ReturnValue, TArray<class USkeletalMeshComponent*>& CallFunc_K2_GetComponentsByClass_ReturnValue, class USkeletalMeshComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_Montage_Play_ReturnValue, class FName CallFunc_dlg_anim_slot_convert_slot_id, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class FName CallFunc_dlg_anim_slot_convert_slot_id_1, class UAnimMontage* CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3);
	void Remove_dlg(class FName Dlg_unique_id, bool Is_destroyed, class Abp_dlg_actor_C* Local_actor, bool Local_destroyed, int32 Local_index, class FName Local_id, bool CallFunc_get_dlg_is_valid, int32 CallFunc_get_dlg_found_index, class Abp_dlg_actor_C* CallFunc_get_dlg_dlg_actor);
	void Get_dlg(class FName Dlg_unique_id, bool* Is_valid, int32* Found_index, class Abp_dlg_actor_C** Dlg_actor, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, class Abp_dlg_actor_C* CallFunc_Array_Get_Item);
	void Add_dlg(class FName Dlg_unique_id, class FName Dlg_data_id, const struct FS_dlg_bind_actor_settings& Dlg_actors, const struct FS_dlg_start_dynamic_info& Dlg_dynamic, bool Dlg_destroy_on_finish, bool* Is_valid, bool* Is_spawned, class Abp_dlg_actor_C** Dlg_actor, bool Local_destroy, class FName Local_data_id, const struct FS_dlg_bind_actor_settings& Local_actors, const struct FS_dlg_start_dynamic_info& Local_dynamic, class Abp_dlg_actor_C* Local_actor, class FName Local_unique_id, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, const struct FDateTime& CallFunc_Now_ReturnValue, class Abp_dlg_actor_C* CallFunc_FinishSpawningActor_ReturnValue, const struct FDateTime& CallFunc_Now_ReturnValue_1, bool CallFunc_get_dlg_history_is_valid, int32 CallFunc_get_dlg_history_found_index, const struct FDateTime& CallFunc_get_dlg_history_latest_time, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue_3, bool CallFunc_get_dlg_is_valid, int32 CallFunc_get_dlg_found_index, class Abp_dlg_actor_C* CallFunc_get_dlg_dlg_actor, bool CallFunc_NotEqual_NameName_ReturnValue);
	void Remove_active_dlg(class FName Dlg_unique_id, class Abp_dlg_actor_C* Local_actor, int32 Local_index, class FName Local_id, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_get_active_dlg_is_valid, int32 CallFunc_get_active_dlg_found_index, class Abp_dlg_actor_C* CallFunc_get_active_dlg_dlg_actor);
	void Get_active_dlg(class FName Dlg_unique_id, bool* Is_valid, int32* Found_index, class Abp_dlg_actor_C** Dlg_actor, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, class Abp_dlg_actor_C* CallFunc_Array_Get_Item);
	void Add_active_dlg(class FName Dlg_unique_id, class Abp_dlg_actor_C* Dlg_actor, class Abp_dlg_actor_C* Local_actor, class FName Local_id, const struct FDateTime& CallFunc_Now_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_get_active_dlg_is_valid, int32 CallFunc_get_active_dlg_found_index, class Abp_dlg_actor_C* CallFunc_get_active_dlg_dlg_actor, bool CallFunc_get_dlg_history_is_valid, int32 CallFunc_get_dlg_history_found_index, const struct FDateTime& CallFunc_get_dlg_history_latest_time);
	void Dlg_consume_notify(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_notify_info& Notify_data, const struct FS_dlg_notify_info& Local_notify_data, class Abp_dlg_actor_C* Local_actor, bool K2Node_SwitchEnum_CmpSuccess);
	void Init_dlg_component(bool CallFunc_get_helper_points_is_valid_data, int32 CallFunc_get_helper_points_found_data_index, TArray<class UPrimitiveComponent*>& CallFunc_get_helper_points_object_list, class UPrimitiveComponent* CallFunc_get_helper_points_primitive_object, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class Abp_dlg_subtitles_widget_3d_C* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Disable_player_input(bool Disable_input, class APawn* Local_pawn, bool Local_disable_input, bool CallFunc_IsPlayerControlled_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess);
	void Disable_character_movement(bool Disable_char_movement, class ACharacter* Local_character, class UCharacterMovementComponent* Local_char_movement, bool Local_disable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FFindFloorResult& CallFunc_K2_FindFloor_FloorResult, class AActor* CallFunc_GetOwner_ReturnValue, class ACharacter* K2Node_DynamicCast_AsCharacter, bool K2Node_DynamicCast_bSuccess);
	void Dlg_call_notify(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_notify_info& Notify_data);
	void Dlg_call_branch(class Abp_dlg_actor_C* Dlg_actor, class FName Dlg_old_branch, class FName Dlg_new_branch);
	void Receive_anim_cinematic(class Abp_dlg_actor_C* Dlg_actor, class FName Cinematic_id, bool Use_cinematic_anim);
	void Receive_anim_base(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_anim_info& Anim_data);
	void ReceiveBeginPlay();
	void Dlg_call_start(class Abp_dlg_actor_C* Dlg_actor, enum class Enum_dlg_start Dlg_status);
	void Dlg_call_reply(class Abp_dlg_actor_C* Dlg_actor, bool Reply_started, const struct FS_dlg_reply_data& Reply_data, const struct FS_dlg_reply_info& Reply_info);
	void Dlg_call_choice(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_branch_choice_data& Choice_data, const struct FS_dlg_branch_choice_info& Choice_info);
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void Dlg_call_interact(class FName Instigator_id, class AActor* Instigator_actor);
	void ReceiveTick(float DeltaSeconds);
	void Receive_anim_lookat(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_anim_lookat& Lookat_data);
	void Dlg_call_distance(class Abp_dlg_actor_C* Dlg_actor, bool Is_distance_far);
	void Receive_anim_sound(class Abp_dlg_actor_C* Dlg_actor, bool Reply_started, class FName Reply_line, float Reply_time, class USoundWave* Reply_sound);
	void Dlg_call_event(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_event_info& Dlg_event);
	void ExecuteUbergraph_bp_dlg_component(int32 EntryPoint, bool CallFunc_msl_get_actor_by_id_is_valid, class AActor* CallFunc_msl_get_actor_by_id_actor_reference, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_10, const struct FS_dlg_notify_info& K2Node_CustomEvent_notify_data, bool CallFunc_dlg_get_dlg_component_is_valid, class Ubp_dlg_component_C* CallFunc_dlg_get_dlg_component_dlg_reference, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_9, class FName K2Node_CustomEvent_dlg_old_branch, class FName K2Node_CustomEvent_dlg_new_branch, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_8, class FName K2Node_CustomEvent_cinematic_id, bool K2Node_CustomEvent_use_cinematic_anim, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_7, const struct FS_dlg_anim_info& K2Node_CustomEvent_anim_data, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_6, enum class Enum_dlg_start K2Node_CustomEvent_dlg_status, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_5, bool K2Node_CustomEvent_reply_started_1, const struct FS_dlg_reply_data& K2Node_CustomEvent_reply_data, const struct FS_dlg_reply_info& K2Node_CustomEvent_reply_info, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_4, const struct FS_dlg_branch_choice_data& K2Node_CustomEvent_choice_data, const struct FS_dlg_branch_choice_info& K2Node_CustomEvent_choice_info, enum class EEndPlayReason K2Node_Event_EndPlayReason, class FName K2Node_CustomEvent_instigator_id, class AActor* K2Node_CustomEvent_instigator_actor, float K2Node_Event_DeltaSeconds, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_3, const struct FS_dlg_anim_lookat& K2Node_CustomEvent_lookat_data, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_2, bool K2Node_CustomEvent_is_distance_far, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor_1, bool K2Node_CustomEvent_reply_started, class FName K2Node_CustomEvent_reply_line, float K2Node_CustomEvent_reply_time, class USoundWave* K2Node_CustomEvent_reply_sound, class Abp_dlg_actor_C* K2Node_CustomEvent_dlg_actor, const struct FS_dlg_event_info& K2Node_CustomEvent_dlg_event);
	void Ed_dlg_event__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_event_info& Dlg_event);
	void Ed_dlg_anim_sound__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, bool Reply_started, class FName Reply_line, float Reply_time, class USoundWave* Reply_sound);
	void Ed_dlg_distance__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, bool Is_distance_far);
	void Ed_dlg_lookat__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_anim_lookat& Lookat_data);
	void Ed_dlg_init__DelegateSignature();
	void Ed_dlg_interact__DelegateSignature(class FName Instigator_id, class AActor* Instigator_actor);
	void Ed_dlg_choice__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_branch_choice_data& Choice_data, const struct FS_dlg_branch_choice_info& Choice_info);
	void Ed_dlg_reply__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, bool Reply_started, const struct FS_dlg_reply_data& Reply_data, const struct FS_dlg_reply_info& Reply_info);
	void Ed_dlg_started__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, enum class Enum_dlg_start Dlg_status);
	void Ed_dlg_anim_cinematic__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, class FName Cinematic_id, bool Use_cinematic_anim);
	void Ed_dlg_anim_info__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_anim_info& Anim_data);
	void Ed_dlg_activated__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, bool Is_active);
	void Ed_dlg_added__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, bool Is_removed, bool Is_destroyed);
	void Ed_dlg_notify__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, const struct FS_dlg_notify_info& Notify_data);
	void Ed_dlg_branch__DelegateSignature(class Abp_dlg_actor_C* Dlg_actor, class FName Dlg_old_branch, class FName Dlg_new_branch);
};

}


