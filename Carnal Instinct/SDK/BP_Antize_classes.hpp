#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BP_Antize.BP_Antize_C
class UBP_Antize_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBP_Antize_C* GetDefaultObj();

	void ChangeLocalizationCulture(const class FString& LocalizationCulture, class UObject* __WorldContext, bool CallFunc_SetCurrentCulture_ReturnValue, const class FString& CallFunc_GetCurrentCulture_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue);
	void DuplicateSaveGame(class UBP_MySaveGame_C* SaveGameObject, class UObject* __WorldContext, const struct FDateTime& CallFunc_Now_ReturnValue, class UBP_MySaveGame_C* CallFunc_CreateNewGame_SaveGameObject, const class FString& CallFunc_CreateNewGame_SlotName, bool CallFunc_SaveGameToSlot_ReturnValue);
	void DeleteSavedGame(const class FString& SlotName, class UObject* __WorldContext, const TArray<class UBP_MySaveGame_C*>& Local_SlotsName, bool CallFunc_DeleteGameInSlot_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue);
	void GetDateTimeText(const struct FDateTime& InDateTime, class UObject* __WorldContext, class FText* DateTime, int32 CallFunc_BreakDateTime_Year, int32 CallFunc_BreakDateTime_Month, int32 CallFunc_BreakDateTime_Day, int32 CallFunc_BreakDateTime_Hour, int32 CallFunc_BreakDateTime_Minute, int32 CallFunc_BreakDateTime_Second, int32 CallFunc_BreakDateTime_Millisecond, int32 CallFunc_BreakDateTime_Year_1, int32 CallFunc_BreakDateTime_Month_1, int32 CallFunc_BreakDateTime_Day_1, int32 CallFunc_BreakDateTime_Hour_1, int32 CallFunc_BreakDateTime_Minute_1, int32 CallFunc_BreakDateTime_Second_1, int32 CallFunc_BreakDateTime_Millisecond_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, class FText CallFunc_Conv_IntToText_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue, class FText CallFunc_Format_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Replace_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const class FString& CallFunc_Replace_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_5, class FText CallFunc_Conv_StringToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_6, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, class FText CallFunc_Format_ReturnValue_2);
	void GetAllSaveGame(class UObject* __WorldContext, TArray<class UBP_MySaveGame_C*>* GamesSave, const TArray<class UBP_MySaveGame_C*>& Local_SlotsName, int32 Temp_int_Variable, class FText CallFunc_Conv_IntToText_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class USaveGame* CallFunc_LoadGameFromSlot_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue, class UBP_MySaveGame_C* K2Node_DynamicCast_AsBP_My_Save_Game, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void LoadSlot(const class FString& SlotName, class UObject* __WorldContext, class UBP_MySaveGame_C** SaveGameObject, class USaveGame* CallFunc_LoadGameFromSlot_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue, class UBP_MySaveGame_C* K2Node_DynamicCast_AsBP_My_Save_Game, bool K2Node_DynamicCast_bSuccess);
	void SaveGame(class UBP_MySaveGame_C* SaveGameObject, class UObject* __WorldContext, int32 Local_DuplicateOn, bool Local_DuplicateSave_, int32 Temp_int_Variable, bool CallFunc_SaveGameToSlot_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Percent_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const struct FDateTime& CallFunc_Now_ReturnValue);
	void GetAllSaveGameSlot(class UObject* __WorldContext, TArray<class FString>* SlotsName, const TArray<class FString>& Local_SlotsName, int32 Temp_int_Variable, class FText CallFunc_Conv_IntToText_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void CreateNewGame(class UObject* __WorldContext, class UBP_MySaveGame_C** SaveGameObject, class FString* SlotName, const class FString& Local_SaveName, bool Temp_bool_Variable, const struct FDateTime& CallFunc_Now_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Variable, class UBP_MySaveGame_C* CallFunc_CreateSaveGameObject_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_SaveGameToSlot_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_DoesSaveGameExist_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void RebindAxisMapping(struct FInputAxisKeyMapping& OldMappingData, struct FInputAxisKeyMapping& NewMappingData, class UObject* __WorldContext, bool* Success_, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, bool CallFunc_CheckAxisMappingExist_Exist_, bool CallFunc_RemoveAxisMapping_Success_);
	void RemoveAxisMapping(struct FInputAxisKeyMapping& MappingData, class UObject* __WorldContext, bool* Success_, bool Local_Exist_, const struct FInputAxisKeyMapping& Local_key, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_1, TArray<struct FInputAxisKeyMapping>& CallFunc_GetAxisMappingByName_OutMappings, const struct FInputAxisKeyMapping& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_CompareAxisMappings_Same_, bool CallFunc_BooleanAND_ReturnValue);
	void CompareAxisMappings(struct FInputAxisKeyMapping& AxisOne, struct FInputAxisKeyMapping& AxisTwo, class UObject* __WorldContext, bool* Same_, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void CheckAxisMappingExist(struct FInputAxisKeyMapping& MappingData, class UObject* __WorldContext, bool* Exist_, bool Local_Exist_, const struct FInputAxisKeyMapping& Local_key, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, TArray<struct FInputAxisKeyMapping>& CallFunc_GetAxisMappingByName_OutMappings, int32 CallFunc_Add_IntInt_ReturnValue, const struct FInputAxisKeyMapping& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_CompareAxisMappings_Same_);
	void CreateNewAxisMapping(const struct FInputAxisKeyMapping& MappingData, class UObject* __WorldContext, bool* Success_, const struct FInputAxisKeyMapping& Local_key, bool CallFunc_CheckAxisMappingExist_Exist_, bool CallFunc_CheckAxisMappingExist_Exist__1, class UInputSettings* CallFunc_GetInputSettings_ReturnValue);
	void RefreshMappingsAxisArray(class FName MappingName, TArray<struct FInputAxisKeyMapping>& MappingsArray, class UObject* __WorldContext, const TArray<struct FInputAxisKeyMapping>& Local_MappingsArray, class FName Local_MappingName, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, const struct FInputAxisKeyMapping& CallFunc_Array_Get_Item, TArray<struct FInputAxisKeyMapping>& CallFunc_GetAxisMappingByName_OutMappings, const struct FInputAxisKeyMapping& CallFunc_Array_Get_Item_1, const struct FInputAxisKeyMapping& K2Node_MakeStruct_InputAxisKeyMapping, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_1, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_2);
	void AxisAlreadyThisKeyArray(class FName MappingName, TArray<struct FInputAxisKeyMapping>& MappingsArray, const struct FInputChord& NewKey, enum class E_AxisType AxisType, bool Primary_, class UObject* __WorldContext, bool* AlreadyTake_, TArray<struct FInputAxisKeyMapping>* NewAxisMapping, bool Local_AlreadyTake_, int32 Local_index, enum class E_AxisType Local_AxisType, const struct FInputChord& Local_key, const TArray<struct FInputAxisKeyMapping>& Local_MappingsArray, class FName Local_MappingName, enum class E_AxisType Temp_byte_Variable, int32 Temp_int_Variable, int32 Temp_int_Variable_1, int32 Temp_int_Variable_2, int32 Temp_int_Variable_3, enum class E_AxisType Temp_byte_Variable_1, int32 Temp_int_Variable_4, int32 Temp_int_Variable_5, int32 Temp_int_Variable_6, int32 Temp_int_Variable_7, int32 Temp_int_Array_Index_Variable, bool Temp_bool_Variable, const struct FKey& K2Node_MakeStruct_Key, int32 Temp_int_Loop_Counter_Variable, const struct FInputAxisKeyMapping& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 K2Node_Select_Default, int32 K2Node_Select_Default_1, int32 K2Node_Select_Default_2, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FInputAxisKeyMapping& K2Node_MakeStruct_InputAxisKeyMapping);
	void SetMappingsAxis(class FName MappingName, TArray<struct FInputAxisKeyMapping>& MappingsArray, enum class E_AxisType AxisType, const struct FInputChord& NewKey, bool Primary_, class UObject* __WorldContext, bool* KeyAlreadyExist_, TArray<struct FInputAxisKeyMapping>* NewMappings, const TArray<struct FInputAxisKeyMapping>& Local_Mapping, bool Local_KeyAlreadyExist_, bool Local_Primary_, const struct FInputChord& Local_key, enum class E_AxisType Local_AxisType, class FName Local_MappingName, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, int32 Temp_int_Array_Index_Variable_1, TArray<struct FInputAxisKeyMapping>& CallFunc_GetAxisMappingByName_OutMappings, const struct FInputAxisKeyMapping& CallFunc_Array_Get_Item, const struct FInputAxisKeyMapping& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_2, const struct FInputAxisKeyMapping& K2Node_MakeStruct_InputAxisKeyMapping, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_1, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_2, bool CallFunc_AxisAlreadyThisKeyArray_AlreadyTake_, TArray<struct FInputAxisKeyMapping>& CallFunc_AxisAlreadyThisKeyArray_NewAxisMapping);
	void RebindActionMapping(const struct FInputActionKeyMapping& OldMappingData, struct FInputActionKeyMapping& NewMappingData, class UObject* __WorldContext, bool* Success_, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, bool CallFunc_CheckActionMappingExist_Exist_, bool CallFunc_RemoveActionMapping_Success_);
	void RemoveActionMapping(const struct FInputActionKeyMapping& MappingData, class UObject* __WorldContext, bool* Success_, bool Local_Exist_, const struct FInputActionKeyMapping& Local_key, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_1, TArray<struct FInputActionKeyMapping>& CallFunc_GetActionMappingByName_OutMappings, const struct FInputActionKeyMapping& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_CompareActionMappings_Same_, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void CompareActionMappings(const struct FInputActionKeyMapping& MappingDataOne, const struct FInputActionKeyMapping& MappingDataTwo, class UObject* __WorldContext, bool* Same_, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue_1, bool CallFunc_EqualEqual_BoolBool_ReturnValue_2, bool CallFunc_EqualEqual_BoolBool_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4);
	void CheckActionMappingExist(const struct FInputActionKeyMapping& MappingData, class UObject* __WorldContext, bool* Exist_, bool Local_Exist_, const struct FInputActionKeyMapping& Local_key, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, TArray<struct FInputActionKeyMapping>& CallFunc_GetActionMappingByName_OutMappings, int32 CallFunc_Add_IntInt_ReturnValue, const struct FInputActionKeyMapping& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_CompareActionMappings_Same_);
	void CreateNewActionMapping(const struct FInputActionKeyMapping& MappingData, class UObject* __WorldContext, bool* Success_, const struct FInputActionKeyMapping& Local_key, bool CallFunc_CheckActionMappingExist_Exist_, bool CallFunc_CheckActionMappingExist_Exist__1, class UInputSettings* CallFunc_GetInputSettings_ReturnValue);
	void RefreshMappingsActionArray(class FName MappingName, TArray<struct FInputActionKeyMapping>& MappingsArray, class UObject* __WorldContext, const TArray<struct FInputActionKeyMapping>& Local_MappingsArray, class FName Local_MappingName, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_1, TArray<struct FInputActionKeyMapping>& CallFunc_GetActionMappingByName_OutMappings, const struct FInputActionKeyMapping& CallFunc_Array_Get_Item, const struct FInputActionKeyMapping& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FInputActionKeyMapping& K2Node_MakeStruct_InputActionKeyMapping, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_2);
	void ActionAlreadyThisKeyArray(class FName MappingName, TArray<struct FInputActionKeyMapping>& MappingsArray, const struct FInputChord& NewKey, bool Primary_, class UObject* __WorldContext, bool* AlreadyTake_, TArray<struct FInputActionKeyMapping>* NewMappings, bool Local_Primary_, const struct FInputChord& Local_key, const TArray<struct FInputActionKeyMapping>& Local_MappingsArray, class FName Local_MappingName, bool Temp_bool_Variable, int32 Temp_int_Variable, int32 Temp_int_Variable_1, bool Temp_bool_Variable_1, int32 Temp_int_Variable_2, int32 Temp_int_Variable_3, bool Temp_bool_Variable_2, int32 K2Node_Select_Default, int32 K2Node_Select_Default_1, const struct FKey& K2Node_MakeStruct_Key, const struct FInputActionKeyMapping& K2Node_MakeStruct_InputActionKeyMapping, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, const struct FKey& K2Node_MakeStruct_Key_1, const struct FInputChord& K2Node_MakeStruct_InputChord, const struct FInputActionKeyMapping& K2Node_MakeStruct_InputActionKeyMapping_1, const struct FInputActionKeyMapping& K2Node_Select_Default_2, const struct FInputChord& K2Node_MakeStruct_InputChord_1, bool CallFunc_EqualEqual_InputChordInputChord_ReturnValue);
	void SetMappingsActionArray(class FName MappingName, TArray<struct FInputActionKeyMapping>& MappingsArray, const struct FInputChord& NewKey, bool Primary_, class UObject* __WorldContext, bool* KeyAlreadyExist_, TArray<struct FInputActionKeyMapping>* NewMappings, const TArray<struct FInputActionKeyMapping>& Local_Mapping, bool Local_KeyAlreadyExist_, bool Local_Primary_, const struct FInputChord& Local_NewKey, class FName Local_MappingName, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 CallFunc_Array_Length_ReturnValue, const struct FInputActionKeyMapping& CallFunc_Array_Get_Item, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const struct FInputActionKeyMapping& K2Node_MakeStruct_InputActionKeyMapping, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_1, TArray<struct FInputActionKeyMapping>& CallFunc_GetActionMappingByName_OutMappings, class UInputSettings* CallFunc_GetInputSettings_ReturnValue_2, const struct FInputActionKeyMapping& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_ActionAlreadyThisKeyArray_AlreadyTake_, TArray<struct FInputActionKeyMapping>& CallFunc_ActionAlreadyThisKeyArray_NewMappings);
	bool SaveUserSettings(const class FString& SlotName, int32 UserIndex, TArray<struct FS_GraphicIndex>& GraphicIndex, const struct FS_MyControls& SaveControls, const struct FS_MyAudio& MyAudio, const struct FS_MyUI& MyUI, class UBP_AntizeSave_C* AntizeSave, class UObject* __WorldContext, int32 Local_UserIndex, const class FString& Local_SlotName, bool CallFunc_SaveGameToSlot_ReturnValue);
	void GetCorrectIndex(int32 In, class UObject* __WorldContext, int32* Out, int32 CallFunc_Divide_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class FText CallFunc_Conv_FloatToText_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, float CallFunc_ConvertStringToFloat_Out, bool CallFunc_Greater_FloatFloat_ReturnValue);
	void ConvertStringToFloat(const class FString& In, class UObject* __WorldContext, float* Out, const class FString& CallFunc_Replace_ReturnValue, float CallFunc_Conv_StringToFloat_ReturnValue);
	void LoadUserSettings(const class FString& SlotName, int32 UserIndex, class UObject* __WorldContext, class UBP_AntizeSave_C** AntizeSave, class UBP_AntizeSave_C* Local_AntizeSave, int32 Local_UserIndex, const class FString& Local_SlotName, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue_1, const struct FS_GraphicIndex& Temp_struct_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FS_MyAxisKeys& Temp_struct_Variable_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue_2, int32 CallFunc_Divide_IntInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue_3, int32 CallFunc_GetCorrectIndex_Out, const struct FS_MyActionKeys& Temp_struct_Variable_2, int32 CallFunc_MakeLiteralInt_ReturnValue_4, int32 CallFunc_MakeLiteralInt_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_MakeLiteralInt_ReturnValue_6, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_MakeLiteralInt_ReturnValue_7, const class FString& Temp_string_Variable, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_GreaterEqual_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_GreaterEqual_IntInt_ReturnValue_3, int32 CallFunc_MakeLiteralInt_ReturnValue_8, bool CallFunc_GreaterEqual_IntInt_ReturnValue_4, int32 CallFunc_MakeLiteralInt_ReturnValue_9, int32 CallFunc_Subtract_IntInt_ReturnValue_3, const class FString& Temp_string_Variable_1, class UBP_AntizeSave_C* CallFunc_CreateSaveGameObject_ReturnValue, class USaveGame* CallFunc_LoadGameFromSlot_ReturnValue, class UBP_AntizeSave_C* K2Node_DynamicCast_AsBP_Antize_Save, bool K2Node_DynamicCast_bSuccess, bool CallFunc_DoesSaveGameExist_ReturnValue);
};

}


